WEBVTT
Kind: captions
Language: en

00:00:01.280 --> 00:00:05.749 align:start position:0%
 
yep

00:00:05.749 --> 00:00:05.759 align:start position:0%
 
 

00:00:05.759 --> 00:00:07.990 align:start position:0%
 
can<00:00:05.920><c> anybody</c><00:00:06.879><c> people</c><00:00:07.200><c> hear</c><00:00:07.359><c> what</c><00:00:07.520><c> i'm</c><00:00:07.680><c> saying</c>

00:00:07.990 --> 00:00:08.000 align:start position:0%
can anybody people hear what i'm saying
 

00:00:08.000 --> 00:00:11.350 align:start position:0%
can anybody people hear what i'm saying
or<00:00:08.639><c> you're</c><00:00:08.880><c> good</c>

00:00:11.350 --> 00:00:11.360 align:start position:0%
 
 

00:00:11.360 --> 00:00:13.669 align:start position:0%
 
awesome<00:00:12.480><c> so</c><00:00:12.639><c> i</c><00:00:12.799><c> just</c><00:00:12.880><c> want</c><00:00:13.040><c> to</c><00:00:13.120><c> get</c><00:00:13.280><c> started</c>

00:00:13.669 --> 00:00:13.679 align:start position:0%
awesome so i just want to get started
 

00:00:13.679 --> 00:00:15.589 align:start position:0%
awesome so i just want to get started
with<00:00:14.080><c> similar</c><00:00:14.480><c> to</c><00:00:14.639><c> last</c><00:00:14.880><c> week</c><00:00:15.040><c> where</c><00:00:15.200><c> we</c><00:00:15.360><c> asked</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
with similar to last week where we asked
 

00:00:15.599 --> 00:00:17.430 align:start position:0%
with similar to last week where we asked
you<00:00:15.759><c> about</c>

00:00:17.430 --> 00:00:17.440 align:start position:0%
you about
 

00:00:17.440 --> 00:00:19.189 align:start position:0%
you about
the<00:00:17.600><c> util</c><00:00:18.080><c> lab</c><00:00:18.240><c> i</c><00:00:18.400><c> just</c><00:00:18.560><c> want</c><00:00:18.640><c> to</c><00:00:18.720><c> get</c><00:00:18.880><c> started</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
the util lab i just want to get started
 

00:00:19.199 --> 00:00:20.790 align:start position:0%
the util lab i just want to get started
by<00:00:19.359><c> asking</c><00:00:19.600><c> a</c><00:00:19.680><c> little</c><00:00:19.840><c> bit</c><00:00:19.920><c> about</c><00:00:20.160><c> cisco</c><00:00:20.560><c> lab</c>

00:00:20.790 --> 00:00:20.800 align:start position:0%
by asking a little bit about cisco lab
 

00:00:20.800 --> 00:00:22.310 align:start position:0%
by asking a little bit about cisco lab
since<00:00:21.119><c> that</c><00:00:21.199><c> was</c><00:00:21.439><c> due</c>

00:00:22.310 --> 00:00:22.320 align:start position:0%
since that was due
 

00:00:22.320 --> 00:00:26.310 align:start position:0%
since that was due
on<00:00:22.960><c> thursday</c><00:00:24.560><c> so</c><00:00:24.800><c> if</c><00:00:24.880><c> anybody</c><00:00:25.279><c> just</c><00:00:25.519><c> has</c>

00:00:26.310 --> 00:00:26.320 align:start position:0%
on thursday so if anybody just has
 

00:00:26.320 --> 00:00:27.910 align:start position:0%
on thursday so if anybody just has
like<00:00:26.560><c> something</c><00:00:26.880><c> particularly</c><00:00:27.439><c> interesting</c>

00:00:27.910 --> 00:00:27.920 align:start position:0%
like something particularly interesting
 

00:00:27.920 --> 00:00:29.990 align:start position:0%
like something particularly interesting
they<00:00:28.080><c> found</c><00:00:28.320><c> about</c><00:00:28.560><c> the</c><00:00:28.720><c> lab</c><00:00:29.039><c> or</c><00:00:29.199><c> a</c><00:00:29.359><c> nasty</c><00:00:29.760><c> bug</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
they found about the lab or a nasty bug
 

00:00:30.000 --> 00:00:31.429 align:start position:0%
they found about the lab or a nasty bug
that<00:00:30.160><c> they</c><00:00:30.400><c> found</c><00:00:30.960><c> or</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
that they found or
 

00:00:31.439 --> 00:00:33.110 align:start position:0%
that they found or
just<00:00:31.679><c> a</c><00:00:31.760><c> silly</c><00:00:32.000><c> mistake</c><00:00:32.399><c> they</c><00:00:32.559><c> made</c><00:00:32.880><c> anything</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
just a silly mistake they made anything
 

00:00:33.120 --> 00:00:34.790 align:start position:0%
just a silly mistake they made anything
you<00:00:33.280><c> want</c><00:00:33.440><c> to</c><00:00:33.520><c> share</c><00:00:33.760><c> about</c><00:00:33.920><c> the</c><00:00:34.079><c> syscall</c><00:00:34.559><c> lab</c>

00:00:34.790 --> 00:00:34.800 align:start position:0%
you want to share about the syscall lab
 

00:00:34.800 --> 00:00:35.670 align:start position:0%
you want to share about the syscall lab
that'd<00:00:34.960><c> be</c>

00:00:35.670 --> 00:00:35.680 align:start position:0%
that'd be
 

00:00:35.680 --> 00:00:39.750 align:start position:0%
that'd be
that'd<00:00:35.840><c> be</c><00:00:36.000><c> great</c><00:00:38.480><c> i</c><00:00:38.719><c> somehow</c><00:00:39.120><c> managed</c><00:00:39.520><c> to</c>

00:00:39.750 --> 00:00:39.760 align:start position:0%
that'd be great i somehow managed to
 

00:00:39.760 --> 00:00:40.950 align:start position:0%
that'd be great i somehow managed to
delete<00:00:40.239><c> the</c><00:00:40.480><c> part</c>

00:00:40.950 --> 00:00:40.960 align:start position:0%
delete the part
 

00:00:40.960 --> 00:00:44.310 align:start position:0%
delete the part
from<00:00:42.399><c> where</c><00:00:42.879><c> from</c><00:00:43.280><c> fork</c><00:00:43.680><c> where</c><00:00:43.840><c> you</c><00:00:44.000><c> have</c><00:00:44.160><c> to</c>

00:00:44.310 --> 00:00:44.320 align:start position:0%
from where from fork where you have to
 

00:00:44.320 --> 00:00:46.389 align:start position:0%
from where from fork where you have to
copy<00:00:44.719><c> over</c><00:00:44.879><c> the</c><00:00:45.039><c> mask</c><00:00:45.360><c> so</c><00:00:45.520><c> i</c><00:00:45.600><c> had</c><00:00:45.760><c> that</c><00:00:46.000><c> working</c>

00:00:46.389 --> 00:00:46.399 align:start position:0%
copy over the mask so i had that working
 

00:00:46.399 --> 00:00:47.750 align:start position:0%
copy over the mask so i had that working
and<00:00:46.480><c> then</c><00:00:46.640><c> i</c><00:00:46.800><c> changed</c><00:00:47.039><c> something</c><00:00:47.360><c> else</c><00:00:47.680><c> and</c>

00:00:47.750 --> 00:00:47.760 align:start position:0%
and then i changed something else and
 

00:00:47.760 --> 00:00:50.229 align:start position:0%
and then i changed something else and
then<00:00:47.920><c> i</c><00:00:48.079><c> tested</c><00:00:48.399><c> it</c>

00:00:50.229 --> 00:00:50.239 align:start position:0%
then i tested it
 

00:00:50.239 --> 00:00:51.830 align:start position:0%
then i tested it
your<00:00:50.480><c> audio</c><00:00:50.800><c> is</c><00:00:50.879><c> like</c><00:00:51.039><c> cutting</c><00:00:51.360><c> out</c><00:00:51.520><c> i</c><00:00:51.600><c> think</c>

00:00:51.830 --> 00:00:51.840 align:start position:0%
your audio is like cutting out i think
 

00:00:51.840 --> 00:00:53.910 align:start position:0%
your audio is like cutting out i think
oh<00:00:52.000><c> it</c><00:00:52.160><c> is</c><00:00:52.640><c> sorry</c>

00:00:53.910 --> 00:00:53.920 align:start position:0%
oh it is sorry
 

00:00:53.920 --> 00:00:57.990 align:start position:0%
oh it is sorry
you<00:00:54.079><c> heard</c><00:00:56.840><c> me</c>

00:00:57.990 --> 00:00:58.000 align:start position:0%
you heard me
 

00:00:58.000 --> 00:01:02.069 align:start position:0%
you heard me
i<00:00:58.160><c> hear</c><00:00:58.399><c> you</c><00:00:59.359><c> oh</c><00:00:59.680><c> okay</c><00:01:00.800><c> um</c>

00:01:02.069 --> 00:01:02.079 align:start position:0%
i hear you oh okay um
 

00:01:02.079 --> 00:01:05.429 align:start position:0%
i hear you oh okay um
yeah<00:01:02.480><c> i</c><00:01:02.640><c> guess</c><00:01:03.680><c> so</c><00:01:04.080><c> basically</c><00:01:04.640><c> i</c><00:01:04.879><c> deleted</c>

00:01:05.429 --> 00:01:05.439 align:start position:0%
yeah i guess so basically i deleted
 

00:01:05.439 --> 00:01:06.070 align:start position:0%
yeah i guess so basically i deleted
somehow

00:01:06.070 --> 00:01:06.080 align:start position:0%
somehow
 

00:01:06.080 --> 00:01:09.750 align:start position:0%
somehow
the<00:01:06.400><c> copy</c><00:01:06.720><c> of</c><00:01:06.799><c> the</c><00:01:06.960><c> mask</c><00:01:07.439><c> and</c><00:01:07.520><c> then</c><00:01:08.080><c> my</c><00:01:08.720><c> my</c><00:01:09.040><c> fork</c>

00:01:09.750 --> 00:01:09.760 align:start position:0%
the copy of the mask and then my my fork
 

00:01:09.760 --> 00:01:11.910 align:start position:0%
the copy of the mask and then my my fork
didn't<00:01:10.080><c> work</c><00:01:10.320><c> anymore</c><00:01:11.119><c> so</c><00:01:11.360><c> then</c><00:01:11.600><c> i</c><00:01:11.680><c> was</c><00:01:11.760><c> just</c>

00:01:11.910 --> 00:01:11.920 align:start position:0%
didn't work anymore so then i was just
 

00:01:11.920 --> 00:01:12.870 align:start position:0%
didn't work anymore so then i was just
like<00:01:12.159><c> i</c><00:01:12.400><c> did</c><00:01:12.560><c> that</c>

00:01:12.870 --> 00:01:12.880 align:start position:0%
like i did that
 

00:01:12.880 --> 00:01:15.109 align:start position:0%
like i did that
how<00:01:13.040><c> does</c><00:01:13.280><c> it</c><00:01:13.360><c> not</c><00:01:13.520><c> work</c><00:01:14.320><c> so</c><00:01:14.479><c> spend</c><00:01:14.799><c> a</c><00:01:14.880><c> lot</c><00:01:15.040><c> of</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
how does it not work so spend a lot of
 

00:01:15.119 --> 00:01:16.630 align:start position:0%
how does it not work so spend a lot of
time<00:01:15.439><c> figuring</c><00:01:15.920><c> out</c>

00:01:16.630 --> 00:01:16.640 align:start position:0%
time figuring out
 

00:01:16.640 --> 00:01:18.950 align:start position:0%
time figuring out
what<00:01:16.799><c> i</c><00:01:16.960><c> did</c><00:01:17.200><c> wrong</c><00:01:17.600><c> and</c><00:01:18.000><c> i</c><00:01:18.240><c> realized</c><00:01:18.720><c> i</c><00:01:18.799><c> just</c>

00:01:18.950 --> 00:01:18.960 align:start position:0%
what i did wrong and i realized i just
 

00:01:18.960 --> 00:01:22.710 align:start position:0%
what i did wrong and i realized i just
deleted<00:01:19.360><c> that</c><00:01:19.520><c> line</c><00:01:19.759><c> somehow</c>

00:01:22.710 --> 00:01:22.720 align:start position:0%
 
 

00:01:22.720 --> 00:01:24.469 align:start position:0%
 
is<00:01:22.880><c> anybody</c><00:01:23.200><c> having</c><00:01:23.439><c> trouble</c><00:01:23.759><c> hearing</c><00:01:24.159><c> luca</c>

00:01:24.469 --> 00:01:24.479 align:start position:0%
is anybody having trouble hearing luca
 

00:01:24.479 --> 00:01:26.149 align:start position:0%
is anybody having trouble hearing luca
or<00:01:24.560><c> is</c><00:01:24.640><c> that</c><00:01:24.880><c> on</c><00:01:24.960><c> my</c><00:01:25.200><c> end</c>

00:01:26.149 --> 00:01:26.159 align:start position:0%
or is that on my end
 

00:01:26.159 --> 00:01:28.550 align:start position:0%
or is that on my end
i<00:01:26.400><c> think</c><00:01:26.560><c> it's</c><00:01:26.720><c> on</c><00:01:26.799><c> your</c><00:01:27.040><c> end</c><00:01:27.920><c> yeah</c><00:01:28.240><c> i</c><00:01:28.320><c> hear</c><00:01:28.479><c> him</c>

00:01:28.550 --> 00:01:28.560 align:start position:0%
i think it's on your end yeah i hear him
 

00:01:28.560 --> 00:01:32.149 align:start position:0%
i think it's on your end yeah i hear him
fine

00:01:32.149 --> 00:01:32.159 align:start position:0%
 
 

00:01:32.159 --> 00:01:56.230 align:start position:0%
 
this<00:01:32.400><c> must</c><00:01:32.640><c> be</c><00:01:32.799><c> on</c><00:01:32.960><c> my</c><00:01:38.840><c> end</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
 
 

00:01:56.240 --> 00:02:02.630 align:start position:0%
 
sorry<00:01:56.479><c> maybe</c><00:01:56.719><c> that'll</c><00:01:57.040><c> work</c><00:01:57.200><c> better</c><00:01:57.520><c> now</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
 
 

00:02:02.640 --> 00:02:06.389 align:start position:0%
 
can<00:02:02.799><c> you</c><00:02:02.880><c> hear</c><00:02:03.040><c> me</c><00:02:03.200><c> now</c><00:02:04.320><c> perfect</c><00:02:04.880><c> okay</c><00:02:05.119><c> great</c>

00:02:06.389 --> 00:02:06.399 align:start position:0%
can you hear me now perfect okay great
 

00:02:06.399 --> 00:02:08.710 align:start position:0%
can you hear me now perfect okay great
i<00:02:06.560><c> was</c><00:02:06.799><c> worried</c><00:02:07.119><c> that</c><00:02:07.520><c> i</c><00:02:07.600><c> was</c><00:02:07.759><c> just</c><00:02:08.080><c> talking</c><00:02:08.560><c> no</c>

00:02:08.710 --> 00:02:08.720 align:start position:0%
i was worried that i was just talking no
 

00:02:08.720 --> 00:02:09.910 align:start position:0%
i was worried that i was just talking no
no<00:02:08.959><c> no</c>

00:02:09.910 --> 00:02:09.920 align:start position:0%
no no
 

00:02:09.920 --> 00:02:17.190 align:start position:0%
no no
it<00:02:10.000><c> seems</c><00:02:10.239><c> to</c><00:02:10.319><c> be</c><00:02:10.479><c> on</c><00:02:10.560><c> my</c><00:02:10.720><c> end</c><00:02:11.360><c> all</c><00:02:11.520><c> right</c>

00:02:17.190 --> 00:02:17.200 align:start position:0%
 
 

00:02:17.200 --> 00:02:19.430 align:start position:0%
 
awesome<00:02:18.319><c> will</c><00:02:18.560><c> anybody</c><00:02:18.879><c> else</c><00:02:19.040><c> have</c><00:02:19.200><c> anything</c>

00:02:19.430 --> 00:02:19.440 align:start position:0%
awesome will anybody else have anything
 

00:02:19.440 --> 00:02:20.710 align:start position:0%
awesome will anybody else have anything
they'd<00:02:19.599><c> like</c><00:02:19.760><c> to</c><00:02:19.840><c> share</c><00:02:20.080><c> about</c><00:02:20.319><c> you</c>

00:02:20.710 --> 00:02:20.720 align:start position:0%
they'd like to share about you
 

00:02:20.720 --> 00:02:24.150 align:start position:0%
they'd like to share about you
our<00:02:20.879><c> a</c><00:02:21.040><c> syscall</c>

00:02:24.150 --> 00:02:24.160 align:start position:0%
 
 

00:02:24.160 --> 00:02:26.949 align:start position:0%
 
anything<00:02:24.560><c> particularly</c><00:02:25.280><c> interesting</c><00:02:25.920><c> or</c><00:02:26.720><c> was</c>

00:02:26.949 --> 00:02:26.959 align:start position:0%
anything particularly interesting or was
 

00:02:26.959 --> 00:02:27.510 align:start position:0%
anything particularly interesting or was
the<00:02:27.040><c> lab</c>

00:02:27.510 --> 00:02:27.520 align:start position:0%
the lab
 

00:02:27.520 --> 00:02:29.110 align:start position:0%
the lab
absolutely<00:02:28.000><c> horrendous</c><00:02:28.560><c> and</c><00:02:28.800><c> you</c><00:02:28.879><c> think</c><00:02:29.040><c> we</c>

00:02:29.110 --> 00:02:29.120 align:start position:0%
absolutely horrendous and you think we
 

00:02:29.120 --> 00:02:31.190 align:start position:0%
absolutely horrendous and you think we
should<00:02:29.280><c> cut</c><00:02:29.440><c> it</c><00:02:29.599><c> out</c><00:02:29.680><c> of</c><00:02:29.760><c> the</c><00:02:29.920><c> class</c>

00:02:31.190 --> 00:02:31.200 align:start position:0%
should cut it out of the class
 

00:02:31.200 --> 00:02:36.070 align:start position:0%
should cut it out of the class
never<00:02:31.440><c> do</c><00:02:31.599><c> it</c><00:02:31.680><c> again</c><00:02:33.599><c> i</c><00:02:33.680><c> have</c><00:02:33.920><c> something</c>

00:02:36.070 --> 00:02:36.080 align:start position:0%
never do it again i have something
 

00:02:36.080 --> 00:02:38.949 align:start position:0%
never do it again i have something
apparently<00:02:36.560><c> the</c><00:02:37.200><c> order</c><00:02:37.519><c> of</c><00:02:37.680><c> things</c><00:02:38.400><c> matters</c>

00:02:38.949 --> 00:02:38.959 align:start position:0%
apparently the order of things matters
 

00:02:38.959 --> 00:02:40.790 align:start position:0%
apparently the order of things matters
which<00:02:39.120><c> is</c><00:02:39.280><c> a</c><00:02:39.360><c> general</c><00:02:39.760><c> statement</c>

00:02:40.790 --> 00:02:40.800 align:start position:0%
which is a general statement
 

00:02:40.800 --> 00:02:44.710 align:start position:0%
which is a general statement
uh<00:02:41.280><c> so</c><00:02:42.400><c> i</c><00:02:42.640><c> tried</c><00:02:43.040><c> to</c><00:02:43.519><c> determine</c>

00:02:44.710 --> 00:02:44.720 align:start position:0%
uh so i tried to determine
 

00:02:44.720 --> 00:02:47.830 align:start position:0%
uh so i tried to determine
the<00:02:45.040><c> mass</c><00:02:45.440><c> computation</c><00:02:46.400><c> inside</c><00:02:46.959><c> the</c><00:02:47.200><c> syscall</c>

00:02:47.830 --> 00:02:47.840 align:start position:0%
the mass computation inside the syscall
 

00:02:47.840 --> 00:02:49.030 align:start position:0%
the mass computation inside the syscall
function

00:02:49.030 --> 00:02:49.040 align:start position:0%
function
 

00:02:49.040 --> 00:02:50.949 align:start position:0%
function
before<00:02:49.519><c> determining</c><00:02:50.160><c> whether</c><00:02:50.480><c> i</c><00:02:50.640><c> actually</c>

00:02:50.949 --> 00:02:50.959 align:start position:0%
before determining whether i actually
 

00:02:50.959 --> 00:02:53.110 align:start position:0%
before determining whether i actually
needed<00:02:51.280><c> to</c><00:02:51.440><c> do</c><00:02:51.680><c> the</c><00:02:51.840><c> tracing</c>

00:02:53.110 --> 00:02:53.120 align:start position:0%
needed to do the tracing
 

00:02:53.120 --> 00:02:56.309 align:start position:0%
needed to do the tracing
and<00:02:53.280><c> so</c><00:02:54.080><c> all</c><00:02:54.400><c> the</c><00:02:54.560><c> sys</c><00:02:54.959><c> calls</c><00:02:55.680><c> were</c><00:02:55.840><c> getting</c>

00:02:56.309 --> 00:02:56.319 align:start position:0%
and so all the sys calls were getting
 

00:02:56.319 --> 00:02:59.509 align:start position:0%
and so all the sys calls were getting
correctly<00:02:56.959><c> traced</c><00:02:57.599><c> except</c><00:02:58.159><c> the</c><00:02:58.319><c> trace</c><00:02:58.800><c> call</c>

00:02:59.509 --> 00:02:59.519 align:start position:0%
correctly traced except the trace call
 

00:02:59.519 --> 00:03:02.149 align:start position:0%
correctly traced except the trace call
and<00:02:59.680><c> i</c><00:02:59.840><c> was</c><00:03:00.400><c> really</c><00:03:00.800><c> getting</c><00:03:01.440><c> disturbed</c><00:03:01.920><c> by</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
and i was really getting disturbed by
 

00:03:02.159 --> 00:03:03.910 align:start position:0%
and i was really getting disturbed by
that<00:03:02.480><c> until</c><00:03:02.879><c> i</c><00:03:03.040><c> think</c><00:03:03.200><c> it</c><00:03:03.280><c> was</c><00:03:03.440><c> david</c><00:03:03.760><c> who</c>

00:03:03.910 --> 00:03:03.920 align:start position:0%
that until i think it was david who
 

00:03:03.920 --> 00:03:05.030 align:start position:0%
that until i think it was david who
pointed<00:03:04.239><c> out</c><00:03:04.400><c> you</c><00:03:04.480><c> know</c><00:03:04.640><c> you</c><00:03:04.720><c> should</c><00:03:04.800><c> do</c><00:03:04.959><c> the</c>

00:03:05.030 --> 00:03:05.040 align:start position:0%
pointed out you know you should do the
 

00:03:05.040 --> 00:03:06.790 align:start position:0%
pointed out you know you should do the
computation<00:03:05.680><c> after</c><00:03:06.000><c> you</c>

00:03:06.790 --> 00:03:06.800 align:start position:0%
computation after you
 

00:03:06.800 --> 00:03:10.710 align:start position:0%
computation after you
you<00:03:06.959><c> should</c><00:03:07.519><c> trace</c><00:03:08.560><c> she's</c><00:03:08.800><c> like</c><00:03:08.959><c> ah</c><00:03:09.519><c> that's</c>

00:03:10.710 --> 00:03:10.720 align:start position:0%
you should trace she's like ah that's
 

00:03:10.720 --> 00:03:14.070 align:start position:0%
you should trace she's like ah that's
all<00:03:10.879><c> right</c><00:03:13.200><c> i'm</c><00:03:13.360><c> glad</c><00:03:13.599><c> you</c><00:03:13.680><c> were</c><00:03:13.760><c> able</c><00:03:14.000><c> to</c>

00:03:14.070 --> 00:03:14.080 align:start position:0%
all right i'm glad you were able to
 

00:03:14.080 --> 00:03:15.270 align:start position:0%
all right i'm glad you were able to
catch<00:03:14.400><c> that</c>

00:03:15.270 --> 00:03:15.280 align:start position:0%
catch that
 

00:03:15.280 --> 00:03:17.990 align:start position:0%
catch that
uh<00:03:15.840><c> yeah</c><00:03:16.080><c> order</c><00:03:16.400><c> does</c><00:03:16.560><c> matter</c><00:03:17.040><c> um</c><00:03:17.519><c> especially</c>

00:03:17.990 --> 00:03:18.000 align:start position:0%
uh yeah order does matter um especially
 

00:03:18.000 --> 00:03:19.910 align:start position:0%
uh yeah order does matter um especially
for<00:03:18.159><c> page</c><00:03:18.400><c> tables</c><00:03:18.959><c> you'll</c><00:03:19.200><c> find</c><00:03:19.440><c> i</c><00:03:19.519><c> think</c><00:03:19.680><c> that</c>

00:03:19.910 --> 00:03:19.920 align:start position:0%
for page tables you'll find i think that
 

00:03:19.920 --> 00:03:20.869 align:start position:0%
for page tables you'll find i think that
order

00:03:20.869 --> 00:03:20.879 align:start position:0%
order
 

00:03:20.879 --> 00:03:22.630 align:start position:0%
order
matters<00:03:21.200><c> there</c><00:03:21.440><c> as</c><00:03:21.599><c> well</c><00:03:21.920><c> and</c><00:03:22.239><c> generally</c>

00:03:22.630 --> 00:03:22.640 align:start position:0%
matters there as well and generally
 

00:03:22.640 --> 00:03:23.990 align:start position:0%
matters there as well and generally
throughout<00:03:22.959><c> the</c><00:03:23.040><c> class</c>

00:03:23.990 --> 00:03:24.000 align:start position:0%
throughout the class
 

00:03:24.000 --> 00:03:25.430 align:start position:0%
throughout the class
paying<00:03:24.239><c> attention</c><00:03:24.640><c> to</c><00:03:24.799><c> the</c><00:03:24.879><c> order</c><00:03:25.120><c> of</c><00:03:25.200><c> things</c>

00:03:25.430 --> 00:03:25.440 align:start position:0%
paying attention to the order of things
 

00:03:25.440 --> 00:03:27.990 align:start position:0%
paying attention to the order of things
will<00:03:25.519><c> be</c><00:03:25.680><c> important</c>

00:03:27.990 --> 00:03:28.000 align:start position:0%
will be important
 

00:03:28.000 --> 00:03:29.670 align:start position:0%
will be important
it's<00:03:28.239><c> good</c><00:03:28.400><c> to</c><00:03:28.560><c> not</c><00:03:28.799><c> overwrite</c><00:03:29.280><c> things</c><00:03:29.519><c> in</c>

00:03:29.670 --> 00:03:29.680 align:start position:0%
it's good to not overwrite things in
 

00:03:29.680 --> 00:03:31.750 align:start position:0%
it's good to not overwrite things in
page<00:03:29.920><c> table</c>

00:03:31.750 --> 00:03:31.760 align:start position:0%
page table
 

00:03:31.760 --> 00:03:34.149 align:start position:0%
page table
also<00:03:32.720><c> had</c><00:03:32.879><c> something</c><00:03:33.280><c> which</c><00:03:33.519><c> i'm</c><00:03:33.760><c> actually</c>

00:03:34.149 --> 00:03:34.159 align:start position:0%
also had something which i'm actually
 

00:03:34.159 --> 00:03:34.869 align:start position:0%
also had something which i'm actually
still

00:03:34.869 --> 00:03:34.879 align:start position:0%
still
 

00:03:34.879 --> 00:03:38.390 align:start position:0%
still
confused<00:03:35.360><c> about</c><00:03:36.400><c> um</c><00:03:36.959><c> well</c><00:03:37.440><c> i</c>

00:03:38.390 --> 00:03:38.400 align:start position:0%
confused about um well i
 

00:03:38.400 --> 00:03:40.789 align:start position:0%
confused about um well i
had<00:03:38.640><c> a</c><00:03:38.720><c> lot</c><00:03:38.879><c> of</c><00:03:39.120><c> debugging</c><00:03:40.080><c> print</c><00:03:40.400><c> statements</c>

00:03:40.789 --> 00:03:40.799 align:start position:0%
had a lot of debugging print statements
 

00:03:40.799 --> 00:03:42.869 align:start position:0%
had a lot of debugging print statements
in<00:03:40.879><c> the</c><00:03:41.040><c> kernel</c><00:03:41.440><c> code</c>

00:03:42.869 --> 00:03:42.879 align:start position:0%
in the kernel code
 

00:03:42.879 --> 00:03:45.990 align:start position:0%
in the kernel code
i<00:03:43.519><c> then</c><00:03:43.840><c> ran</c><00:03:44.319><c> the</c><00:03:44.560><c> trace</c><00:03:45.360><c> thing</c><00:03:45.680><c> with</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
i then ran the trace thing with
 

00:03:46.000 --> 00:03:49.589 align:start position:0%
i then ran the trace thing with
all<00:03:46.159><c> of</c><00:03:46.239><c> the</c><00:03:46.480><c> bits</c><00:03:46.879><c> set</c><00:03:47.840><c> so</c><00:03:48.080><c> basically</c><00:03:48.480><c> tracing</c>

00:03:49.589 --> 00:03:49.599 align:start position:0%
all of the bits set so basically tracing
 

00:03:49.599 --> 00:03:52.869 align:start position:0%
all of the bits set so basically tracing
all<00:03:49.760><c> the</c><00:03:49.920><c> system</c><00:03:50.239><c> calls</c><00:03:51.519><c> and</c>

00:03:52.869 --> 00:03:52.879 align:start position:0%
all the system calls and
 

00:03:52.879 --> 00:03:56.470 align:start position:0%
all the system calls and
i<00:03:53.120><c> think</c><00:03:53.360><c> i</c><00:03:53.799><c> saw</c><00:03:55.120><c> a</c><00:03:55.280><c> lot</c><00:03:55.519><c> of</c>

00:03:56.470 --> 00:03:56.480 align:start position:0%
i think i saw a lot of
 

00:03:56.480 --> 00:03:58.789 align:start position:0%
i think i saw a lot of
tracing<00:03:57.120><c> for</c><00:03:57.280><c> the</c><00:03:57.439><c> print</c><00:03:57.760><c> statements</c><00:03:58.480><c> in</c><00:03:58.560><c> the</c>

00:03:58.789 --> 00:03:58.799 align:start position:0%
tracing for the print statements in the
 

00:03:58.799 --> 00:04:00.390 align:start position:0%
tracing for the print statements in the
kernel<00:03:59.200><c> and</c><00:03:59.280><c> then</c>

00:04:00.390 --> 00:04:00.400 align:start position:0%
kernel and then
 

00:04:00.400 --> 00:04:03.030 align:start position:0%
kernel and then
because<00:04:01.120><c> and</c><00:04:01.280><c> then</c><00:04:01.519><c> i</c><00:04:01.680><c> assumed</c><00:04:02.319><c> that</c><00:04:02.799><c> my</c>

00:04:03.030 --> 00:04:03.040 align:start position:0%
because and then i assumed that my
 

00:04:03.040 --> 00:04:03.750 align:start position:0%
because and then i assumed that my
prints

00:04:03.750 --> 00:04:03.760 align:start position:0%
prints
 

00:04:03.760 --> 00:04:06.949 align:start position:0%
prints
my<00:04:04.000><c> print</c><00:04:04.319><c> apps</c><00:04:04.959><c> were</c><00:04:06.239><c> trying</c><00:04:06.560><c> to</c>

00:04:06.949 --> 00:04:06.959 align:start position:0%
my print apps were trying to
 

00:04:06.959 --> 00:04:09.830 align:start position:0%
my print apps were trying to
read<00:04:07.200><c> and</c><00:04:07.439><c> write</c><00:04:08.000><c> to</c><00:04:08.239><c> the</c><00:04:08.400><c> console</c><00:04:09.360><c> but</c><00:04:09.599><c> that</c>

00:04:09.830 --> 00:04:09.840 align:start position:0%
read and write to the console but that
 

00:04:09.840 --> 00:04:11.990 align:start position:0%
read and write to the console but that
to<00:04:10.080><c> write</c><00:04:10.319><c> to</c><00:04:10.400><c> the</c><00:04:10.560><c> console</c><00:04:10.959><c> but</c><00:04:11.200><c> then</c>

00:04:11.990 --> 00:04:12.000 align:start position:0%
to write to the console but then
 

00:04:12.000 --> 00:04:15.190 align:start position:0%
to write to the console but then
i<00:04:12.159><c> was</c><00:04:12.400><c> wondering</c><00:04:13.680><c> why</c><00:04:14.000><c> are</c><00:04:14.159><c> we</c>

00:04:15.190 --> 00:04:15.200 align:start position:0%
i was wondering why are we
 

00:04:15.200 --> 00:04:17.030 align:start position:0%
i was wondering why are we
i<00:04:15.280><c> guess</c><00:04:15.519><c> i'm</c><00:04:15.599><c> just</c><00:04:15.760><c> confused</c><00:04:16.160><c> why</c><00:04:16.400><c> we're</c><00:04:16.639><c> able</c>

00:04:17.030 --> 00:04:17.040 align:start position:0%
i guess i'm just confused why we're able
 

00:04:17.040 --> 00:04:22.629 align:start position:0%
i guess i'm just confused why we're able
to<00:04:17.199><c> use</c><00:04:17.680><c> printf</c><00:04:18.239><c> in</c><00:04:18.320><c> the</c><00:04:18.479><c> kernel</c>

00:04:22.629 --> 00:04:22.639 align:start position:0%
 
 

00:04:22.639 --> 00:04:24.629 align:start position:0%
 
yeah<00:04:22.880><c> i'm</c><00:04:23.040><c> not</c><00:04:23.199><c> uh</c><00:04:23.440><c> i</c><00:04:23.520><c> haven't</c><00:04:23.919><c> looked</c><00:04:24.160><c> at</c><00:04:24.240><c> the</c>

00:04:24.629 --> 00:04:24.639 align:start position:0%
yeah i'm not uh i haven't looked at the
 

00:04:24.639 --> 00:04:26.230 align:start position:0%
yeah i'm not uh i haven't looked at the
printf<00:04:25.600><c> code</c>

00:04:26.230 --> 00:04:26.240 align:start position:0%
printf code
 

00:04:26.240 --> 00:04:28.790 align:start position:0%
printf code
recently<00:04:26.720><c> but</c><00:04:26.880><c> i</c><00:04:26.960><c> think</c><00:04:27.120><c> there's</c><00:04:27.360><c> a</c><00:04:27.520><c> file</c><00:04:28.560><c> uh</c>

00:04:28.790 --> 00:04:28.800 align:start position:0%
recently but i think there's a file uh
 

00:04:28.800 --> 00:04:30.710 align:start position:0%
recently but i think there's a file uh
printf.c<00:04:29.680><c> that</c><00:04:29.840><c> you</c><00:04:29.919><c> might</c><00:04:30.080><c> be</c><00:04:30.240><c> able</c><00:04:30.400><c> to</c><00:04:30.479><c> look</c>

00:04:30.710 --> 00:04:30.720 align:start position:0%
printf.c that you might be able to look
 

00:04:30.720 --> 00:04:34.550 align:start position:0%
printf.c that you might be able to look
at<00:04:30.880><c> if</c><00:04:30.960><c> you</c><00:04:31.120><c> want</c><00:04:31.280><c> to</c>

00:04:34.550 --> 00:04:34.560 align:start position:0%
 
 

00:04:34.560 --> 00:04:36.070 align:start position:0%
 
figure<00:04:34.880><c> out</c><00:04:34.960><c> what</c><00:04:35.120><c> was</c><00:04:35.280><c> going</c><00:04:35.520><c> on</c><00:04:35.680><c> there</c><00:04:35.840><c> so</c><00:04:36.000><c> i</c>

00:04:36.070 --> 00:04:36.080 align:start position:0%
figure out what was going on there so i
 

00:04:36.080 --> 00:04:37.270 align:start position:0%
figure out what was going on there so i
think<00:04:36.160><c> the</c><00:04:36.240><c> printf</c><00:04:36.639><c> function</c><00:04:36.960><c> should</c><00:04:37.120><c> be</c>

00:04:37.270 --> 00:04:37.280 align:start position:0%
think the printf function should be
 

00:04:37.280 --> 00:04:41.110 align:start position:0%
think the printf function should be
implemented<00:04:37.840><c> in</c><00:04:37.919><c> there</c>

00:04:41.110 --> 00:04:41.120 align:start position:0%
 
 

00:04:41.120 --> 00:04:43.030 align:start position:0%
 
at<00:04:41.280><c> least</c><00:04:41.520><c> our</c><00:04:41.680><c> version</c><00:04:42.000><c> of</c><00:04:42.160><c> it</c><00:04:42.639><c> i</c><00:04:42.720><c> don't</c><00:04:42.880><c> know</c>

00:04:43.030 --> 00:04:43.040 align:start position:0%
at least our version of it i don't know
 

00:04:43.040 --> 00:04:44.550 align:start position:0%
at least our version of it i don't know
perhaps<00:04:43.360><c> one</c><00:04:43.520><c> of</c><00:04:43.680><c> the</c>

00:04:44.550 --> 00:04:44.560 align:start position:0%
perhaps one of the
 

00:04:44.560 --> 00:04:45.909 align:start position:0%
perhaps one of the
one<00:04:44.800><c> of</c><00:04:44.880><c> some</c><00:04:45.040><c> of</c><00:04:45.120><c> the</c><00:04:45.199><c> other</c><00:04:45.360><c> core</c><00:04:45.600><c> staff</c>

00:04:45.909 --> 00:04:45.919 align:start position:0%
one of some of the other core staff
 

00:04:45.919 --> 00:04:49.510 align:start position:0%
one of some of the other core staff
might<00:04:46.160><c> know</c><00:04:47.280><c> what's</c><00:04:47.520><c> going</c><00:04:47.840><c> on</c>

00:04:49.510 --> 00:04:49.520 align:start position:0%
might know what's going on
 

00:04:49.520 --> 00:04:51.110 align:start position:0%
might know what's going on
the<00:04:49.680><c> the</c><00:04:50.160><c> print</c><00:04:50.400><c> ups</c><00:04:50.560><c> in</c><00:04:50.639><c> the</c><00:04:50.720><c> kernel</c>

00:04:51.110 --> 00:04:51.120 align:start position:0%
the the print ups in the kernel
 

00:04:51.120 --> 00:04:52.629 align:start position:0%
the the print ups in the kernel
shouldn't<00:04:51.440><c> show</c><00:04:51.759><c> up</c><00:04:52.080><c> as</c>

00:04:52.629 --> 00:04:52.639 align:start position:0%
shouldn't show up as
 

00:04:52.639 --> 00:04:54.629 align:start position:0%
shouldn't show up as
in<00:04:52.800><c> your</c><00:04:52.960><c> traces</c><00:04:53.440><c> because</c><00:04:54.000><c> printf</c><00:04:54.479><c> in</c><00:04:54.560><c> the</c>

00:04:54.629 --> 00:04:54.639 align:start position:0%
in your traces because printf in the
 

00:04:54.639 --> 00:04:55.990 align:start position:0%
in your traces because printf in the
kernel<00:04:54.880><c> doesn't</c><00:04:55.199><c> call</c><00:04:55.440><c> any</c><00:04:55.600><c> system</c>

00:04:55.990 --> 00:04:56.000 align:start position:0%
kernel doesn't call any system
 

00:04:56.000 --> 00:04:59.430 align:start position:0%
kernel doesn't call any system
calls<00:04:58.320><c> yeah</c><00:04:58.560><c> that's</c><00:04:58.880><c> what</c><00:04:59.040><c> i</c>

00:04:59.430 --> 00:04:59.440 align:start position:0%
calls yeah that's what i
 

00:04:59.440 --> 00:05:02.790 align:start position:0%
calls yeah that's what i
thought<00:04:59.840><c> maybe</c><00:05:00.960><c> then</c><00:05:01.120><c> maybe</c><00:05:02.000><c> the</c><00:05:02.160><c> tracing</c><00:05:02.639><c> was</c>

00:05:02.790 --> 00:05:02.800 align:start position:0%
thought maybe then maybe the tracing was
 

00:05:02.800 --> 00:05:04.710 align:start position:0%
thought maybe then maybe the tracing was
not<00:05:02.960><c> from</c><00:05:03.199><c> that</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
not from that
 

00:05:04.720 --> 00:05:05.909 align:start position:0%
not from that
yeah<00:05:04.960><c> i</c><00:05:05.039><c> don't</c><00:05:05.199><c> think</c><00:05:05.360><c> it</c><00:05:05.520><c> is</c><00:05:05.600><c> from</c><00:05:05.759><c> your</c>

00:05:05.909 --> 00:05:05.919 align:start position:0%
yeah i don't think it is from your
 

00:05:05.919 --> 00:05:08.830 align:start position:0%
yeah i don't think it is from your
printers<00:05:06.320><c> in</c><00:05:06.400><c> the</c><00:05:06.479><c> kernel</c>

00:05:08.830 --> 00:05:08.840 align:start position:0%
printers in the kernel
 

00:05:08.840 --> 00:05:12.469 align:start position:0%
printers in the kernel
okay

00:05:12.469 --> 00:05:12.479 align:start position:0%
 
 

00:05:12.479 --> 00:05:16.230 align:start position:0%
 
okay<00:05:13.360><c> well</c><00:05:14.479><c> unless</c><00:05:14.800><c> anybody</c><00:05:15.199><c> has</c><00:05:15.440><c> any</c><00:05:15.600><c> other</c>

00:05:16.230 --> 00:05:16.240 align:start position:0%
okay well unless anybody has any other
 

00:05:16.240 --> 00:05:18.790 align:start position:0%
okay well unless anybody has any other
burning<00:05:16.800><c> comments</c><00:05:17.280><c> about</c><00:05:17.680><c> uh</c><00:05:17.919><c> cisco</c><00:05:18.479><c> i</c><00:05:18.560><c> think</c>

00:05:18.790 --> 00:05:18.800 align:start position:0%
burning comments about uh cisco i think
 

00:05:18.800 --> 00:05:19.670 align:start position:0%
burning comments about uh cisco i think
we<00:05:18.960><c> can</c>

00:05:19.670 --> 00:05:19.680 align:start position:0%
we can
 

00:05:19.680 --> 00:05:23.430 align:start position:0%
we can
uh<00:05:20.000><c> get</c><00:05:20.240><c> started</c><00:05:20.720><c> with</c><00:05:21.520><c> lecture</c><00:05:22.000><c> for</c><00:05:22.240><c> today</c>

00:05:23.430 --> 00:05:23.440 align:start position:0%
uh get started with lecture for today
 

00:05:23.440 --> 00:05:26.550 align:start position:0%
uh get started with lecture for today
we'll<00:05:23.600><c> be</c><00:05:23.759><c> talking</c><00:05:24.080><c> a</c><00:05:24.160><c> little</c><00:05:24.400><c> bit</c><00:05:24.639><c> about</c>

00:05:26.550 --> 00:05:26.560 align:start position:0%
we'll be talking a little bit about
 

00:05:26.560 --> 00:05:31.670 align:start position:0%
we'll be talking a little bit about
the<00:05:28.160><c> uh</c><00:05:28.880><c> process</c><00:05:29.440><c> of</c><00:05:29.919><c> converting</c><00:05:30.479><c> c2</c><00:05:30.960><c> assembly</c>

00:05:31.670 --> 00:05:31.680 align:start position:0%
the uh process of converting c2 assembly
 

00:05:31.680 --> 00:05:33.909 align:start position:0%
the uh process of converting c2 assembly
and<00:05:31.840><c> processors</c><00:05:32.639><c> and</c><00:05:32.720><c> this</c><00:05:32.880><c> is</c><00:05:33.039><c> more</c><00:05:33.280><c> of</c><00:05:33.759><c> kind</c>

00:05:33.909 --> 00:05:33.919 align:start position:0%
and processors and this is more of kind
 

00:05:33.919 --> 00:05:35.830 align:start position:0%
and processors and this is more of kind
of<00:05:34.080><c> a</c><00:05:34.160><c> practical</c><00:05:34.639><c> lecture</c><00:05:35.039><c> today</c><00:05:35.280><c> or</c><00:05:35.440><c> at</c><00:05:35.520><c> least</c>

00:05:35.830 --> 00:05:35.840 align:start position:0%
of a practical lecture today or at least
 

00:05:35.840 --> 00:05:38.310 align:start position:0%
of a practical lecture today or at least
that's<00:05:36.080><c> the</c><00:05:36.240><c> aim</c><00:05:36.560><c> so</c><00:05:36.800><c> the</c><00:05:36.960><c> goal</c><00:05:37.199><c> here</c><00:05:37.600><c> is</c>

00:05:38.310 --> 00:05:38.320 align:start position:0%
that's the aim so the goal here is
 

00:05:38.320 --> 00:05:42.469 align:start position:0%
that's the aim so the goal here is
to<00:05:38.639><c> get</c><00:05:38.800><c> you</c><00:05:39.039><c> all</c><00:05:39.440><c> familiarized</c><00:05:40.479><c> with</c>

00:05:42.469 --> 00:05:42.479 align:start position:0%
to get you all familiarized with
 

00:05:42.479 --> 00:05:45.029 align:start position:0%
to get you all familiarized with
risk<00:05:42.800><c> five</c><00:05:43.440><c> the</c><00:05:43.600><c> processor</c><00:05:44.320><c> the</c><00:05:44.479><c> assembly</c>

00:05:45.029 --> 00:05:45.039 align:start position:0%
risk five the processor the assembly
 

00:05:45.039 --> 00:05:45.909 align:start position:0%
risk five the processor the assembly
language

00:05:45.909 --> 00:05:45.919 align:start position:0%
language
 

00:05:45.919 --> 00:05:48.310 align:start position:0%
language
and<00:05:46.160><c> the</c><00:05:46.400><c> calling</c><00:05:46.800><c> conventions</c><00:05:47.759><c> for</c><00:05:48.000><c> risk</c>

00:05:48.310 --> 00:05:48.320 align:start position:0%
and the calling conventions for risk
 

00:05:48.320 --> 00:05:49.270 align:start position:0%
and the calling conventions for risk
five

00:05:49.270 --> 00:05:49.280 align:start position:0%
five
 

00:05:49.280 --> 00:05:51.749 align:start position:0%
five
and<00:05:49.360><c> this</c><00:05:49.520><c> will</c><00:05:49.680><c> be</c><00:05:49.919><c> important</c><00:05:50.560><c> in</c><00:05:51.280><c> not</c><00:05:51.280><c> not</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
and this will be important in not not
 

00:05:51.759 --> 00:05:53.749 align:start position:0%
and this will be important in not not
super<00:05:52.080><c> important</c><00:05:52.400><c> for</c><00:05:52.560><c> a</c><00:05:52.639><c> page</c><00:05:52.960><c> table</c><00:05:53.360><c> but</c>

00:05:53.749 --> 00:05:53.759 align:start position:0%
super important for a page table but
 

00:05:53.759 --> 00:05:56.550 align:start position:0%
super important for a page table but
certainly<00:05:54.560><c> for</c><00:05:54.880><c> the</c><00:05:55.039><c> traps</c><00:05:55.440><c> lab</c><00:05:55.759><c> which</c><00:05:56.000><c> is</c>

00:05:56.550 --> 00:05:56.560 align:start position:0%
certainly for the traps lab which is
 

00:05:56.560 --> 00:05:58.150 align:start position:0%
certainly for the traps lab which is
will<00:05:56.720><c> be</c><00:05:56.880><c> assigned</c><00:05:57.280><c> later</c><00:05:57.600><c> this</c><00:05:57.759><c> week</c><00:05:58.000><c> this</c>

00:05:58.150 --> 00:05:58.160 align:start position:0%
will be assigned later this week this
 

00:05:58.160 --> 00:05:59.909 align:start position:0%
will be assigned later this week this
will<00:05:58.319><c> be</c><00:05:58.560><c> essential</c><00:05:59.120><c> for</c>

00:05:59.909 --> 00:05:59.919 align:start position:0%
will be essential for
 

00:05:59.919 --> 00:06:01.909 align:start position:0%
will be essential for
debugging<00:06:00.720><c> and</c><00:06:01.039><c> implementing</c><00:06:01.600><c> things</c>

00:06:01.909 --> 00:06:01.919 align:start position:0%
debugging and implementing things
 

00:06:01.919 --> 00:06:03.110 align:start position:0%
debugging and implementing things
because<00:06:02.080><c> you'll</c><00:06:02.240><c> be</c><00:06:02.400><c> working</c>

00:06:03.110 --> 00:06:03.120 align:start position:0%
because you'll be working
 

00:06:03.120 --> 00:06:05.350 align:start position:0%
because you'll be working
quite<00:06:03.440><c> intimately</c><00:06:04.000><c> with</c><00:06:04.400><c> trap</c><00:06:04.720><c> frames</c><00:06:05.199><c> and</c>

00:06:05.350 --> 00:06:05.360 align:start position:0%
quite intimately with trap frames and
 

00:06:05.360 --> 00:06:07.510 align:start position:0%
quite intimately with trap frames and
the<00:06:05.440><c> stack</c><00:06:06.000><c> and</c><00:06:06.160><c> things</c><00:06:06.479><c> like</c><00:06:06.720><c> that</c>

00:06:07.510 --> 00:06:07.520 align:start position:0%
the stack and things like that
 

00:06:07.520 --> 00:06:08.870 align:start position:0%
the stack and things like that
so<00:06:07.680><c> that's</c><00:06:07.919><c> the</c><00:06:08.080><c> that's</c><00:06:08.319><c> kind</c><00:06:08.479><c> of</c><00:06:08.560><c> the</c><00:06:08.639><c> goal</c>

00:06:08.870 --> 00:06:08.880 align:start position:0%
so that's the that's kind of the goal
 

00:06:08.880 --> 00:06:10.870 align:start position:0%
so that's the that's kind of the goal
for<00:06:09.120><c> today</c><00:06:09.520><c> and</c>

00:06:10.870 --> 00:06:10.880 align:start position:0%
for today and
 

00:06:10.880 --> 00:06:13.590 align:start position:0%
for today and
my<00:06:11.120><c> first</c><00:06:11.440><c> aim</c><00:06:11.759><c> was</c><00:06:12.240><c> to</c><00:06:12.880><c> and</c><00:06:13.039><c> this</c><00:06:13.199><c> might</c><00:06:13.360><c> be</c><00:06:13.440><c> a</c>

00:06:13.590 --> 00:06:13.600 align:start position:0%
my first aim was to and this might be a
 

00:06:13.600 --> 00:06:14.870 align:start position:0%
my first aim was to and this might be a
little<00:06:13.759><c> bit</c><00:06:13.919><c> of</c><00:06:14.160><c> review</c>

00:06:14.870 --> 00:06:14.880 align:start position:0%
little bit of review
 

00:06:14.880 --> 00:06:18.710 align:start position:0%
little bit of review
from<00:06:15.560><c> 6004</c><00:06:17.039><c> or</c><00:06:17.759><c> any</c><00:06:18.080><c> other</c><00:06:18.319><c> computer</c>

00:06:18.710 --> 00:06:18.720 align:start position:0%
from 6004 or any other computer
 

00:06:18.720 --> 00:06:20.710 align:start position:0%
from 6004 or any other computer
architecture<00:06:19.360><c> theme</c><00:06:19.759><c> classes</c><00:06:20.319><c> that</c><00:06:20.400><c> you</c><00:06:20.560><c> may</c>

00:06:20.710 --> 00:06:20.720 align:start position:0%
architecture theme classes that you may
 

00:06:20.720 --> 00:06:22.150 align:start position:0%
architecture theme classes that you may
have<00:06:20.880><c> taken</c><00:06:21.199><c> in</c><00:06:21.280><c> the</c><00:06:21.360><c> past</c>

00:06:22.150 --> 00:06:22.160 align:start position:0%
have taken in the past
 

00:06:22.160 --> 00:06:24.790 align:start position:0%
have taken in the past
but<00:06:22.400><c> i</c><00:06:22.479><c> just</c><00:06:22.639><c> want</c><00:06:22.880><c> to</c><00:06:23.440><c> go</c><00:06:23.680><c> over</c><00:06:24.000><c> briefly</c><00:06:24.560><c> kind</c>

00:06:24.790 --> 00:06:24.800 align:start position:0%
but i just want to go over briefly kind
 

00:06:24.800 --> 00:06:25.510 align:start position:0%
but i just want to go over briefly kind
of

00:06:25.510 --> 00:06:25.520 align:start position:0%
of
 

00:06:25.520 --> 00:06:28.469 align:start position:0%
of
see<00:06:26.160><c> the</c><00:06:26.319><c> c</c><00:06:26.639><c> language</c><00:06:27.680><c> how</c><00:06:27.919><c> we</c><00:06:28.080><c> get</c><00:06:28.240><c> to</c>

00:06:28.469 --> 00:06:28.479 align:start position:0%
see the c language how we get to
 

00:06:28.479 --> 00:06:29.749 align:start position:0%
see the c language how we get to
assembly

00:06:29.749 --> 00:06:29.759 align:start position:0%
assembly
 

00:06:29.759 --> 00:06:32.830 align:start position:0%
assembly
and<00:06:30.240><c> maybe</c><00:06:30.560><c> a</c><00:06:30.639><c> little</c><00:06:30.880><c> bit</c><00:06:31.199><c> about</c><00:06:31.680><c> processor</c>

00:06:32.830 --> 00:06:32.840 align:start position:0%
and maybe a little bit about processor
 

00:06:32.840 --> 00:06:34.710 align:start position:0%
and maybe a little bit about processor
so<00:06:33.759><c> throughout</c><00:06:34.240><c> and</c><00:06:34.400><c> then</c>

00:06:34.710 --> 00:06:34.720 align:start position:0%
so throughout and then
 

00:06:34.720 --> 00:06:36.230 align:start position:0%
so throughout and then
of<00:06:34.880><c> course</c><00:06:35.120><c> throughout</c><00:06:35.440><c> this</c><00:06:35.600><c> lecture</c><00:06:36.000><c> feel</c>

00:06:36.230 --> 00:06:36.240 align:start position:0%
of course throughout this lecture feel
 

00:06:36.240 --> 00:06:38.390 align:start position:0%
of course throughout this lecture feel
free<00:06:36.479><c> to</c><00:06:36.720><c> interrupt</c><00:06:37.600><c> uh</c><00:06:37.759><c> with</c><00:06:38.000><c> any</c>

00:06:38.390 --> 00:06:38.400 align:start position:0%
free to interrupt uh with any
 

00:06:38.400 --> 00:06:41.830 align:start position:0%
free to interrupt uh with any
questions<00:06:38.720><c> that</c><00:06:38.880><c> you</c><00:06:39.039><c> have</c><00:06:41.039><c> so</c>

00:06:41.830 --> 00:06:41.840 align:start position:0%
questions that you have so
 

00:06:41.840 --> 00:06:43.749 align:start position:0%
questions that you have so
uh<00:06:42.080><c> you</c><00:06:42.240><c> know</c><00:06:42.400><c> we</c><00:06:42.479><c> have</c><00:06:42.720><c> our</c><00:06:42.880><c> normal</c><00:06:43.440><c> main</c>

00:06:43.749 --> 00:06:43.759 align:start position:0%
uh you know we have our normal main
 

00:06:43.759 --> 00:06:45.590 align:start position:0%
uh you know we have our normal main
functions<00:06:44.319><c> in</c><00:06:44.560><c> c</c>

00:06:45.590 --> 00:06:45.600 align:start position:0%
functions in c
 

00:06:45.600 --> 00:06:47.590 align:start position:0%
functions in c
you<00:06:45.680><c> know</c><00:06:45.919><c> they</c><00:06:46.160><c> do</c><00:06:46.479><c> something</c><00:06:47.199><c> maybe</c><00:06:47.440><c> they</c>

00:06:47.590 --> 00:06:47.600 align:start position:0%
you know they do something maybe they
 

00:06:47.600 --> 00:06:50.629 align:start position:0%
you know they do something maybe they
print<00:06:47.919><c> something</c>

00:06:50.629 --> 00:06:50.639 align:start position:0%
 
 

00:06:50.639 --> 00:06:54.870 align:start position:0%
 
then<00:06:50.880><c> they</c><00:06:51.120><c> exit</c><00:06:53.599><c> and</c><00:06:53.759><c> this</c><00:06:54.000><c> all</c><00:06:54.240><c> looks</c>

00:06:54.870 --> 00:06:54.880 align:start position:0%
then they exit and this all looks
 

00:06:54.880 --> 00:06:57.990 align:start position:0%
then they exit and this all looks
uh<00:06:55.199><c> well</c><00:06:55.440><c> and</c><00:06:55.599><c> good</c><00:06:56.000><c> but</c><00:06:56.319><c> as</c><00:06:56.560><c> any</c><00:06:56.800><c> of</c><00:06:56.880><c> you</c><00:06:57.840><c> are</c>

00:06:57.990 --> 00:06:58.000 align:start position:0%
uh well and good but as any of you are
 

00:06:58.000 --> 00:06:59.350 align:start position:0%
uh well and good but as any of you are
aware<00:06:58.319><c> from</c><00:06:58.479><c> 6004</c>

00:06:59.350 --> 00:06:59.360 align:start position:0%
aware from 6004
 

00:06:59.360 --> 00:07:02.469 align:start position:0%
aware from 6004
processors<00:07:00.000><c> don't</c><00:07:00.319><c> actually</c><00:07:00.960><c> understand</c><00:07:02.319><c> the</c>

00:07:02.469 --> 00:07:02.479 align:start position:0%
processors don't actually understand the
 

00:07:02.479 --> 00:07:02.710 align:start position:0%
processors don't actually understand the
c

00:07:02.710 --> 00:07:02.720 align:start position:0%
c
 

00:07:02.720 --> 00:07:05.029 align:start position:0%
c
language<00:07:03.199><c> rather</c><00:07:03.599><c> they</c><00:07:04.080><c> understand</c><00:07:04.639><c> what</c><00:07:04.800><c> we</c>

00:07:05.029 --> 00:07:05.039 align:start position:0%
language rather they understand what we
 

00:07:05.039 --> 00:07:05.909 align:start position:0%
language rather they understand what we
call

00:07:05.909 --> 00:07:05.919 align:start position:0%
call
 

00:07:05.919 --> 00:07:07.749 align:start position:0%
call
assembly<00:07:06.479><c> or</c><00:07:06.800><c> more</c><00:07:07.039><c> specifically</c><00:07:07.599><c> they</c>

00:07:07.749 --> 00:07:07.759 align:start position:0%
assembly or more specifically they
 

00:07:07.759 --> 00:07:09.270 align:start position:0%
assembly or more specifically they
understand<00:07:08.160><c> the</c><00:07:08.240><c> binary</c><00:07:08.639><c> encodings</c><00:07:09.120><c> of</c>

00:07:09.270 --> 00:07:09.280 align:start position:0%
understand the binary encodings of
 

00:07:09.280 --> 00:07:10.150 align:start position:0%
understand the binary encodings of
assembly

00:07:10.150 --> 00:07:10.160 align:start position:0%
assembly
 

00:07:10.160 --> 00:07:13.029 align:start position:0%
assembly
and<00:07:10.319><c> so</c><00:07:10.560><c> this</c><00:07:10.800><c> here</c><00:07:11.039><c> i've</c><00:07:11.280><c> circled</c><00:07:12.160><c> a</c><00:07:12.560><c> picture</c>

00:07:13.029 --> 00:07:13.039 align:start position:0%
and so this here i've circled a picture
 

00:07:13.039 --> 00:07:15.270 align:start position:0%
and so this here i've circled a picture
of<00:07:13.199><c> an</c><00:07:13.360><c> actual</c><00:07:13.680><c> risk</c><00:07:14.000><c> five</c><00:07:14.319><c> processor</c><00:07:14.960><c> from</c><00:07:15.199><c> a</c>

00:07:15.270 --> 00:07:15.280 align:start position:0%
of an actual risk five processor from a
 

00:07:15.280 --> 00:07:16.629 align:start position:0%
of an actual risk five processor from a
sci-5<00:07:15.919><c> board</c>

00:07:16.629 --> 00:07:16.639 align:start position:0%
sci-5 board
 

00:07:16.639 --> 00:07:20.070 align:start position:0%
sci-5 board
and<00:07:17.919><c> when</c><00:07:18.080><c> we</c><00:07:18.240><c> say</c><00:07:18.479><c> a</c><00:07:18.639><c> processor</c><00:07:19.199><c> is</c><00:07:19.360><c> risk</c><00:07:19.680><c> 5</c>

00:07:20.070 --> 00:07:20.080 align:start position:0%
and when we say a processor is risk 5
 

00:07:20.080 --> 00:07:22.390 align:start position:0%
and when we say a processor is risk 5
that<00:07:20.319><c> means</c><00:07:20.560><c> that</c><00:07:20.800><c> it</c><00:07:20.960><c> understands</c><00:07:21.759><c> the</c><00:07:22.000><c> risk</c>

00:07:22.390 --> 00:07:22.400 align:start position:0%
that means that it understands the risk
 

00:07:22.400 --> 00:07:24.309 align:start position:0%
that means that it understands the risk
5<00:07:22.960><c> instruction</c><00:07:23.599><c> set</c>

00:07:24.309 --> 00:07:24.319 align:start position:0%
5 instruction set
 

00:07:24.319 --> 00:07:28.070 align:start position:0%
5 instruction set
so<00:07:24.960><c> every</c><00:07:25.360><c> processor</c><00:07:26.000><c> has</c><00:07:26.240><c> an</c><00:07:26.400><c> associated</c><00:07:27.199><c> isa</c>

00:07:28.070 --> 00:07:28.080 align:start position:0%
so every processor has an associated isa
 

00:07:28.080 --> 00:07:32.150 align:start position:0%
so every processor has an associated isa
or<00:07:29.280><c> instruction</c><00:07:30.960><c> and</c><00:07:31.039><c> that's</c><00:07:31.360><c> kind</c><00:07:31.520><c> of</c><00:07:31.680><c> the</c>

00:07:32.150 --> 00:07:32.160 align:start position:0%
or instruction and that's kind of the
 

00:07:32.160 --> 00:07:35.990 align:start position:0%
or instruction and that's kind of the
set<00:07:32.400><c> of</c><00:07:32.560><c> instructions</c><00:07:35.039><c> that</c><00:07:35.280><c> make</c><00:07:35.599><c> sense</c><00:07:35.840><c> to</c>

00:07:35.990 --> 00:07:36.000 align:start position:0%
set of instructions that make sense to
 

00:07:36.000 --> 00:07:37.430 align:start position:0%
set of instructions that make sense to
that<00:07:36.240><c> processor</c><00:07:36.800><c> so</c>

00:07:37.430 --> 00:07:37.440 align:start position:0%
that processor so
 

00:07:37.440 --> 00:07:39.270 align:start position:0%
that processor so
every<00:07:37.759><c> instruction</c><00:07:38.240><c> has</c><00:07:38.479><c> an</c><00:07:38.639><c> associated</c>

00:07:39.270 --> 00:07:39.280 align:start position:0%
every instruction has an associated
 

00:07:39.280 --> 00:07:42.390 align:start position:0%
every instruction has an associated
binary<00:07:39.919><c> encoding</c><00:07:40.560><c> or</c><00:07:40.720><c> an</c><00:07:40.880><c> op</c><00:07:41.039><c> code</c>

00:07:42.390 --> 00:07:42.400 align:start position:0%
binary encoding or an op code
 

00:07:42.400 --> 00:07:45.029 align:start position:0%
binary encoding or an op code
and<00:07:42.560><c> when</c><00:07:42.800><c> a</c><00:07:42.880><c> processor</c><00:07:44.000><c> is</c><00:07:44.240><c> running</c><00:07:44.720><c> and</c><00:07:44.879><c> it</c>

00:07:45.029 --> 00:07:45.039 align:start position:0%
and when a processor is running and it
 

00:07:45.039 --> 00:07:46.309 align:start position:0%
and when a processor is running and it
sees<00:07:45.520><c> a</c><00:07:45.599><c> particular</c>

00:07:46.309 --> 00:07:46.319 align:start position:0%
sees a particular
 

00:07:46.319 --> 00:07:50.150 align:start position:0%
sees a particular
encoding<00:07:46.960><c> it</c><00:07:47.199><c> knows</c><00:07:47.520><c> what</c><00:07:47.680><c> to</c><00:07:47.840><c> do</c><00:07:48.560><c> and</c><00:07:48.800><c> so</c>

00:07:50.150 --> 00:07:50.160 align:start position:0%
encoding it knows what to do and so
 

00:07:50.160 --> 00:07:52.150 align:start position:0%
encoding it knows what to do and so
you<00:07:50.240><c> know</c><00:07:50.400><c> this</c><00:07:50.639><c> processor</c><00:07:51.360><c> on</c><00:07:51.520><c> this</c><00:07:51.759><c> board</c>

00:07:52.150 --> 00:07:52.160 align:start position:0%
you know this processor on this board
 

00:07:52.160 --> 00:07:53.189 align:start position:0%
you know this processor on this board
happens<00:07:52.800><c> to</c>

00:07:53.189 --> 00:07:53.199 align:start position:0%
happens to
 

00:07:53.199 --> 00:07:56.950 align:start position:0%
happens to
understand<00:07:54.479><c> the</c><00:07:54.879><c> risk</c><00:07:55.280><c> 5</c><00:07:55.599><c> assembly</c><00:07:56.160><c> which</c><00:07:56.400><c> is</c>

00:07:56.950 --> 00:07:56.960 align:start position:0%
understand the risk 5 assembly which is
 

00:07:56.960 --> 00:07:59.110 align:start position:0%
understand the risk 5 assembly which is
what<00:07:57.199><c> c</c><00:07:57.440><c> code</c><00:07:57.840><c> is</c><00:07:58.080><c> compiled</c><00:07:58.560><c> to</c><00:07:58.800><c> so</c><00:07:58.960><c> the</c>

00:07:59.110 --> 00:07:59.120 align:start position:0%
what c code is compiled to so the
 

00:07:59.120 --> 00:08:00.869 align:start position:0%
what c code is compiled to so the
general<00:07:59.599><c> process</c><00:08:00.080><c> of</c><00:08:00.240><c> getting</c>

00:08:00.869 --> 00:08:00.879 align:start position:0%
general process of getting
 

00:08:00.879 --> 00:08:03.670 align:start position:0%
general process of getting
c<00:08:01.199><c> code</c><00:08:01.440><c> to</c><00:08:01.599><c> actually</c><00:08:02.000><c> run</c><00:08:02.319><c> on</c><00:08:02.479><c> your</c><00:08:02.720><c> processor</c>

00:08:03.670 --> 00:08:03.680 align:start position:0%
c code to actually run on your processor
 

00:08:03.680 --> 00:08:05.029 align:start position:0%
c code to actually run on your processor
is<00:08:03.840><c> we</c><00:08:04.000><c> start</c><00:08:04.240><c> with</c><00:08:04.400><c> c</c>

00:08:05.029 --> 00:08:05.039 align:start position:0%
is we start with c
 

00:08:05.039 --> 00:08:07.110 align:start position:0%
is we start with c
it<00:08:05.199><c> gets</c><00:08:05.440><c> compiled</c><00:08:05.919><c> to</c><00:08:06.160><c> assembly</c><00:08:06.879><c> and</c><00:08:06.960><c> there's</c>

00:08:07.110 --> 00:08:07.120 align:start position:0%
it gets compiled to assembly and there's
 

00:08:07.120 --> 00:08:08.710 align:start position:0%
it gets compiled to assembly and there's
some<00:08:07.360><c> linking</c><00:08:07.840><c> and</c><00:08:08.000><c> things</c><00:08:08.160><c> like</c><00:08:08.400><c> that</c><00:08:08.560><c> that</c>

00:08:08.710 --> 00:08:08.720 align:start position:0%
some linking and things like that that
 

00:08:08.720 --> 00:08:10.629 align:start position:0%
some linking and things like that that
happen<00:08:09.120><c> between</c><00:08:09.440><c> the</c><00:08:09.599><c> step</c><00:08:09.840><c> but</c><00:08:10.080><c> that's</c>

00:08:10.629 --> 00:08:10.639 align:start position:0%
happen between the step but that's
 

00:08:10.639 --> 00:08:13.350 align:start position:0%
happen between the step but that's
we're<00:08:10.800><c> not</c><00:08:11.120><c> a</c><00:08:11.440><c> compilers</c><00:08:12.080><c> class</c><00:08:12.720><c> so</c><00:08:13.039><c> and</c><00:08:13.199><c> then</c>

00:08:13.350 --> 00:08:13.360 align:start position:0%
we're not a compilers class so and then
 

00:08:13.360 --> 00:08:14.950 align:start position:0%
we're not a compilers class so and then
the<00:08:13.520><c> assembly</c><00:08:14.160><c> will</c>

00:08:14.950 --> 00:08:14.960 align:start position:0%
the assembly will
 

00:08:14.960 --> 00:08:18.469 align:start position:0%
the assembly will
then<00:08:15.280><c> be</c><00:08:15.759><c> translated</c><00:08:16.960><c> into</c><00:08:17.360><c> binary</c><00:08:18.080><c> and</c><00:08:18.240><c> so</c>

00:08:18.469 --> 00:08:18.479 align:start position:0%
then be translated into binary and so
 

00:08:18.479 --> 00:08:19.029 align:start position:0%
then be translated into binary and so
this<00:08:18.720><c> is</c>

00:08:19.029 --> 00:08:19.039 align:start position:0%
this is
 

00:08:19.039 --> 00:08:22.629 align:start position:0%
this is
the<00:08:20.000><c> object</c><00:08:21.840><c> or</c>

00:08:22.629 --> 00:08:22.639 align:start position:0%
the object or
 

00:08:22.639 --> 00:08:26.070 align:start position:0%
the object or
dot<00:08:23.039><c> o</c><00:08:23.440><c> files</c><00:08:25.360><c> that</c><00:08:25.520><c> you</c><00:08:25.759><c> see</c>

00:08:26.070 --> 00:08:26.080 align:start position:0%
dot o files that you see
 

00:08:26.080 --> 00:08:29.270 align:start position:0%
dot o files that you see
so<00:08:26.400><c> if</c><00:08:26.479><c> you've</c><00:08:26.720><c> ever</c><00:08:26.960><c> paid</c><00:08:27.199><c> attention</c><00:08:27.759><c> to</c>

00:08:29.270 --> 00:08:29.280 align:start position:0%
so if you've ever paid attention to
 

00:08:29.280 --> 00:08:31.749 align:start position:0%
so if you've ever paid attention to
what's<00:08:29.680><c> inside</c><00:08:30.240><c> of</c><00:08:30.479><c> your</c><00:08:30.879><c> lab</c><00:08:31.120><c> directory</c>

00:08:31.749 --> 00:08:31.759 align:start position:0%
what's inside of your lab directory
 

00:08:31.759 --> 00:08:33.990 align:start position:0%
what's inside of your lab directory
after<00:08:32.080><c> you</c><00:08:32.320><c> run</c><00:08:32.560><c> make</c><00:08:32.800><c> qmu</c><00:08:33.360><c> you'll</c><00:08:33.680><c> see</c><00:08:33.919><c> a</c>

00:08:33.990 --> 00:08:34.000 align:start position:0%
after you run make qmu you'll see a
 

00:08:34.000 --> 00:08:36.230 align:start position:0%
after you run make qmu you'll see a
bunch<00:08:34.320><c> of</c><00:08:34.479><c> dot</c><00:08:34.719><c> o</c><00:08:34.959><c> files</c><00:08:35.360><c> lying</c><00:08:35.680><c> around</c>

00:08:36.230 --> 00:08:36.240 align:start position:0%
bunch of dot o files lying around
 

00:08:36.240 --> 00:08:37.829 align:start position:0%
bunch of dot o files lying around
and<00:08:36.320><c> those</c><00:08:36.560><c> are</c><00:08:36.640><c> the</c><00:08:36.800><c> actual</c><00:08:37.120><c> object</c><00:08:37.440><c> files</c>

00:08:37.829 --> 00:08:37.839 align:start position:0%
and those are the actual object files
 

00:08:37.839 --> 00:08:40.949 align:start position:0%
and those are the actual object files
that<00:08:38.080><c> the</c><00:08:38.719><c> processor</c><00:08:39.279><c> understands</c>

00:08:40.949 --> 00:08:40.959 align:start position:0%
that the processor understands
 

00:08:40.959 --> 00:08:43.269 align:start position:0%
that the processor understands
and<00:08:41.120><c> the</c><00:08:41.279><c> asm</c><00:08:41.760><c> files</c><00:08:42.080><c> you've</c><00:08:42.320><c> also</c><00:08:42.640><c> seen</c><00:08:43.039><c> um</c>

00:08:43.269 --> 00:08:43.279 align:start position:0%
and the asm files you've also seen um
 

00:08:43.279 --> 00:08:45.430 align:start position:0%
and the asm files you've also seen um
you<00:08:43.440><c> haven't</c><00:08:43.680><c> really</c><00:08:43.919><c> written</c><00:08:44.240><c> any</c><00:08:44.480><c> but</c>

00:08:45.430 --> 00:08:45.440 align:start position:0%
you haven't really written any but
 

00:08:45.440 --> 00:08:48.470 align:start position:0%
you haven't really written any but
if<00:08:45.760><c> you</c><00:08:46.000><c> recall</c><00:08:46.399><c> from</c><00:08:46.640><c> syscall</c><00:08:47.240><c> usas.pl</c><00:08:48.320><c> is</c>

00:08:48.470 --> 00:08:48.480 align:start position:0%
if you recall from syscall usas.pl is
 

00:08:48.480 --> 00:08:50.670 align:start position:0%
if you recall from syscall usas.pl is
compiled<00:08:49.120><c> to</c><00:08:49.279><c> a</c><00:08:49.440><c> file</c><00:08:49.920><c> called</c>

00:08:50.670 --> 00:08:50.680 align:start position:0%
compiled to a file called
 

00:08:50.680 --> 00:08:54.310 align:start position:0%
compiled to a file called
usys.s<00:08:52.080><c> and</c><00:08:52.240><c> so</c><00:08:52.480><c> dot</c><00:08:52.800><c> s</c><00:08:53.040><c> files</c>

00:08:54.310 --> 00:08:54.320 align:start position:0%
usys.s and so dot s files
 

00:08:54.320 --> 00:08:57.509 align:start position:0%
usys.s and so dot s files
are<00:08:55.279><c> assembly</c><00:08:55.760><c> language</c><00:08:56.240><c> and</c><00:08:56.320><c> so</c><00:08:56.480><c> you've</c><00:08:56.800><c> seen</c>

00:08:57.509 --> 00:08:57.519 align:start position:0%
are assembly language and so you've seen
 

00:08:57.519 --> 00:08:59.030 align:start position:0%
are assembly language and so you've seen
you've<00:08:57.680><c> certainly</c><00:08:58.080><c> seen</c><00:08:58.399><c> some</c><00:08:58.560><c> risk</c><00:08:58.800><c> five</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
you've certainly seen some risk five
 

00:08:59.040 --> 00:09:01.030 align:start position:0%
you've certainly seen some risk five
assembly<00:08:59.519><c> and</c><00:08:59.600><c> if</c><00:08:59.760><c> you</c><00:08:59.839><c> took</c><00:09:00.000><c> double</c><00:09:00.320><c> 04</c>

00:09:01.030 --> 00:09:01.040 align:start position:0%
assembly and if you took double 04
 

00:09:01.040 --> 00:09:02.870 align:start position:0%
assembly and if you took double 04
i<00:09:01.200><c> believe</c><00:09:01.519><c> you</c><00:09:01.920><c> you've</c><00:09:02.080><c> also</c><00:09:02.399><c> seen</c><00:09:02.640><c> a</c><00:09:02.720><c> good</c>

00:09:02.870 --> 00:09:02.880 align:start position:0%
i believe you you've also seen a good
 

00:09:02.880 --> 00:09:05.430 align:start position:0%
i believe you you've also seen a good
amount<00:09:03.120><c> of</c><00:09:03.360><c> assembly</c><00:09:03.920><c> language</c>

00:09:05.430 --> 00:09:05.440 align:start position:0%
amount of assembly language
 

00:09:05.440 --> 00:09:08.790 align:start position:0%
amount of assembly language
and<00:09:05.600><c> assembly</c><00:09:06.160><c> looks</c><00:09:06.800><c> in</c><00:09:07.040><c> general</c><00:09:08.240><c> much</c><00:09:08.560><c> less</c>

00:09:08.790 --> 00:09:08.800 align:start position:0%
and assembly looks in general much less
 

00:09:08.800 --> 00:09:09.670 align:start position:0%
and assembly looks in general much less
structured<00:09:09.360><c> than</c>

00:09:09.670 --> 00:09:09.680 align:start position:0%
structured than
 

00:09:09.680 --> 00:09:11.910 align:start position:0%
structured than
c<00:09:10.000><c> so</c><00:09:10.240><c> you'll</c><00:09:10.399><c> just</c><00:09:10.640><c> see</c><00:09:10.880><c> lines</c><00:09:11.360><c> after</c><00:09:11.600><c> line</c>

00:09:11.910 --> 00:09:11.920 align:start position:0%
c so you'll just see lines after line
 

00:09:11.920 --> 00:09:13.030 align:start position:0%
c so you'll just see lines after line
after<00:09:12.240><c> line</c>

00:09:13.030 --> 00:09:13.040 align:start position:0%
after line
 

00:09:13.040 --> 00:09:14.870 align:start position:0%
after line
of<00:09:13.519><c> instructions</c><00:09:14.399><c> you</c><00:09:14.480><c> know</c><00:09:14.560><c> you'll</c><00:09:14.720><c> see</c>

00:09:14.870 --> 00:09:14.880 align:start position:0%
of instructions you know you'll see
 

00:09:14.880 --> 00:09:17.190 align:start position:0%
of instructions you know you'll see
simple<00:09:15.200><c> things</c><00:09:15.519><c> like</c><00:09:15.839><c> add</c>

00:09:17.190 --> 00:09:17.200 align:start position:0%
simple things like add
 

00:09:17.200 --> 00:09:20.389 align:start position:0%
simple things like add
malt<00:09:19.360><c> etc</c>

00:09:20.389 --> 00:09:20.399 align:start position:0%
malt etc
 

00:09:20.399 --> 00:09:22.710 align:start position:0%
malt etc
and<00:09:20.560><c> so</c><00:09:20.800><c> on</c><00:09:21.200><c> and</c><00:09:21.440><c> so</c><00:09:21.680><c> forth</c><00:09:22.160><c> and</c><00:09:22.240><c> this</c><00:09:22.399><c> doesn't</c>

00:09:22.710 --> 00:09:22.720 align:start position:0%
and so on and so forth and this doesn't
 

00:09:22.720 --> 00:09:23.910 align:start position:0%
and so on and so forth and this doesn't
have<00:09:22.959><c> there's</c><00:09:23.200><c> no</c>

00:09:23.910 --> 00:09:23.920 align:start position:0%
have there's no
 

00:09:23.920 --> 00:09:27.430 align:start position:0%
have there's no
um<00:09:24.720><c> nice</c><00:09:25.120><c> control</c><00:09:25.519><c> flow</c><00:09:26.000><c> there's</c><00:09:26.240><c> no</c><00:09:26.560><c> loops</c>

00:09:27.430 --> 00:09:27.440 align:start position:0%
um nice control flow there's no loops
 

00:09:27.440 --> 00:09:29.269 align:start position:0%
um nice control flow there's no loops
there<00:09:27.680><c> are</c><00:09:27.920><c> functions</c><00:09:28.399><c> but</c><00:09:28.560><c> not</c><00:09:28.800><c> in</c><00:09:28.959><c> the</c><00:09:29.040><c> sense</c>

00:09:29.269 --> 00:09:29.279 align:start position:0%
there are functions but not in the sense
 

00:09:29.279 --> 00:09:30.949 align:start position:0%
there are functions but not in the sense
that<00:09:29.440><c> you</c><00:09:29.600><c> might</c><00:09:29.760><c> remember</c><00:09:30.240><c> know</c><00:09:30.480><c> from</c><00:09:30.720><c> c</c>

00:09:30.949 --> 00:09:30.959 align:start position:0%
that you might remember know from c
 

00:09:30.959 --> 00:09:33.030 align:start position:0%
that you might remember know from c
you<00:09:31.040><c> know</c><00:09:31.120><c> we</c><00:09:31.279><c> see</c><00:09:31.600><c> labels</c><00:09:32.160><c> as</c><00:09:32.399><c> opposed</c><00:09:32.880><c> to</c>

00:09:33.030 --> 00:09:33.040 align:start position:0%
you know we see labels as opposed to
 

00:09:33.040 --> 00:09:36.470 align:start position:0%
you know we see labels as opposed to
true<00:09:33.519><c> function</c><00:09:34.839><c> definitions</c>

00:09:36.470 --> 00:09:36.480 align:start position:0%
true function definitions
 

00:09:36.480 --> 00:09:38.550 align:start position:0%
true function definitions
and<00:09:36.720><c> assembly</c><00:09:37.200><c> so</c><00:09:37.519><c> it's</c><00:09:37.760><c> it's</c><00:09:37.920><c> a</c><00:09:38.000><c> much</c><00:09:38.240><c> lower</c>

00:09:38.550 --> 00:09:38.560 align:start position:0%
and assembly so it's it's a much lower
 

00:09:38.560 --> 00:09:39.750 align:start position:0%
and assembly so it's it's a much lower
language<00:09:38.959><c> and</c><00:09:39.040><c> there</c><00:09:39.120><c> are</c><00:09:39.200><c> plenty</c><00:09:39.440><c> of</c><00:09:39.600><c> other</c>

00:09:39.750 --> 00:09:39.760 align:start position:0%
language and there are plenty of other
 

00:09:39.760 --> 00:09:41.430 align:start position:0%
language and there are plenty of other
languages<00:09:40.240><c> that</c><00:09:40.399><c> are</c><00:09:40.480><c> also</c><00:09:40.800><c> compiled</c><00:09:41.279><c> to</c>

00:09:41.430 --> 00:09:41.440 align:start position:0%
languages that are also compiled to
 

00:09:41.440 --> 00:09:42.790 align:start position:0%
languages that are also compiled to
assembly<00:09:42.080><c> so</c>

00:09:42.790 --> 00:09:42.800 align:start position:0%
assembly so
 

00:09:42.800 --> 00:09:45.430 align:start position:0%
assembly so
um<00:09:43.279><c> the</c><00:09:43.440><c> same</c><00:09:43.760><c> process</c><00:09:44.160><c> holds</c><00:09:44.560><c> true</c><00:09:44.880><c> for</c>

00:09:45.430 --> 00:09:45.440 align:start position:0%
um the same process holds true for
 

00:09:45.440 --> 00:09:46.230 align:start position:0%
um the same process holds true for
things<00:09:45.680><c> like</c><00:09:45.920><c> c</c>

00:09:46.230 --> 00:09:46.240 align:start position:0%
things like c
 

00:09:46.240 --> 00:09:49.509 align:start position:0%
things like c
plus<00:09:46.560><c> plus</c><00:09:47.839><c> um</c>

00:09:49.509 --> 00:09:49.519 align:start position:0%
plus plus um
 

00:09:49.519 --> 00:09:51.110 align:start position:0%
plus plus um
you<00:09:49.600><c> know</c><00:09:49.920><c> any</c><00:09:50.240><c> any</c><00:09:50.480><c> language</c><00:09:50.880><c> that's</c>

00:09:51.110 --> 00:09:51.120 align:start position:0%
you know any any language that's
 

00:09:51.120 --> 00:09:53.430 align:start position:0%
you know any any language that's
compiled<00:09:51.839><c> will</c><00:09:52.240><c> go</c><00:09:52.480><c> to</c><00:09:52.720><c> the</c><00:09:52.959><c> same</c>

00:09:53.430 --> 00:09:53.440 align:start position:0%
compiled will go to the same
 

00:09:53.440 --> 00:09:56.630 align:start position:0%
compiled will go to the same
assembly<00:09:53.839><c> language</c><00:09:54.240><c> at</c><00:09:54.320><c> the</c><00:09:54.480><c> base</c>

00:09:56.630 --> 00:09:56.640 align:start position:0%
assembly language at the base
 

00:09:56.640 --> 00:09:59.910 align:start position:0%
assembly language at the base
and<00:09:58.080><c> uh</c><00:09:58.800><c> and</c><00:09:58.959><c> so</c><00:09:59.120><c> that's</c><00:09:59.279><c> that's</c><00:09:59.519><c> kind</c><00:09:59.680><c> of</c><00:09:59.760><c> the</c>

00:09:59.910 --> 00:09:59.920 align:start position:0%
and uh and so that's that's kind of the
 

00:09:59.920 --> 00:10:01.910 align:start position:0%
and uh and so that's that's kind of the
basic<00:10:00.399><c> process</c><00:10:00.880><c> of</c><00:10:01.040><c> getting</c><00:10:01.440><c> our</c>

00:10:01.910 --> 00:10:01.920 align:start position:0%
basic process of getting our
 

00:10:01.920 --> 00:10:04.870 align:start position:0%
basic process of getting our
computer<00:10:02.560><c> to</c><00:10:02.720><c> actually</c><00:10:03.120><c> understand</c><00:10:04.399><c> the</c><00:10:04.640><c> c</c>

00:10:04.870 --> 00:10:04.880 align:start position:0%
computer to actually understand the c
 

00:10:04.880 --> 00:10:06.389 align:start position:0%
computer to actually understand the c
code<00:10:05.200><c> that</c><00:10:05.360><c> we're</c><00:10:05.600><c> writing</c>

00:10:06.389 --> 00:10:06.399 align:start position:0%
code that we're writing
 

00:10:06.399 --> 00:10:08.310 align:start position:0%
code that we're writing
but<00:10:06.560><c> you'll</c><00:10:06.800><c> notice</c><00:10:07.200><c> that</c><00:10:07.920><c> we've</c><00:10:08.079><c> been</c>

00:10:08.310 --> 00:10:08.320 align:start position:0%
but you'll notice that we've been
 

00:10:08.320 --> 00:10:10.389 align:start position:0%
but you'll notice that we've been
referring<00:10:08.880><c> to</c>

00:10:10.389 --> 00:10:10.399 align:start position:0%
referring to
 

00:10:10.399 --> 00:10:13.670 align:start position:0%
referring to
risk<00:10:10.800><c> five</c><00:10:12.320><c> assembly</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
risk five assembly
 

00:10:13.680 --> 00:10:15.190 align:start position:0%
risk five assembly
throughout<00:10:14.000><c> the</c><00:10:14.160><c> course</c><00:10:14.480><c> and</c><00:10:14.560><c> the</c><00:10:14.720><c> processor</c>

00:10:15.190 --> 00:10:15.200 align:start position:0%
throughout the course and the processor
 

00:10:15.200 --> 00:10:17.350 align:start position:0%
throughout the course and the processor
is<00:10:15.360><c> risk</c><00:10:15.680><c> five</c><00:10:16.000><c> and</c><00:10:16.160><c> that's</c><00:10:16.480><c> because</c>

00:10:17.350 --> 00:10:17.360 align:start position:0%
is risk five and that's because
 

00:10:17.360 --> 00:10:19.350 align:start position:0%
is risk five and that's because
uh<00:10:18.240><c> it's</c><00:10:18.399><c> important</c><00:10:18.720><c> because</c><00:10:18.959><c> there's</c><00:10:19.120><c> many</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
uh it's important because there's many
 

00:10:19.360 --> 00:10:20.870 align:start position:0%
uh it's important because there's many
different<00:10:19.600><c> kinds</c><00:10:19.839><c> of</c><00:10:20.000><c> assembly</c><00:10:20.560><c> so</c>

00:10:20.870 --> 00:10:20.880 align:start position:0%
different kinds of assembly so
 

00:10:20.880 --> 00:10:23.350 align:start position:0%
different kinds of assembly so
it's<00:10:21.120><c> unlikely</c><00:10:21.839><c> that</c><00:10:22.079><c> you're</c><00:10:22.399><c> using</c><00:10:22.959><c> risk</c>

00:10:23.350 --> 00:10:23.360 align:start position:0%
it's unlikely that you're using risk
 

00:10:23.360 --> 00:10:24.630 align:start position:0%
it's unlikely that you're using risk
five

00:10:24.630 --> 00:10:24.640 align:start position:0%
five
 

00:10:24.640 --> 00:10:26.550 align:start position:0%
five
yourself<00:10:25.279><c> like</c><00:10:25.440><c> you're</c><00:10:25.920><c> not</c><00:10:26.160><c> going</c><00:10:26.240><c> to</c><00:10:26.320><c> be</c>

00:10:26.550 --> 00:10:26.560 align:start position:0%
yourself like you're not going to be
 

00:10:26.560 --> 00:10:27.910 align:start position:0%
yourself like you're not going to be
running<00:10:26.800><c> linux</c><00:10:27.200><c> on</c><00:10:27.360><c> it</c>

00:10:27.910 --> 00:10:27.920 align:start position:0%
running linux on it
 

00:10:27.920 --> 00:10:30.949 align:start position:0%
running linux on it
uh<00:10:28.800><c> instead</c><00:10:29.279><c> most</c><00:10:29.600><c> modern</c><00:10:30.000><c> computers</c><00:10:30.720><c> will</c>

00:10:30.949 --> 00:10:30.959 align:start position:0%
uh instead most modern computers will
 

00:10:30.959 --> 00:10:31.350 align:start position:0%
uh instead most modern computers will
run

00:10:31.350 --> 00:10:31.360 align:start position:0%
run
 

00:10:31.360 --> 00:10:34.470 align:start position:0%
run
on<00:10:31.760><c> what's</c><00:10:32.000><c> called</c><00:10:32.240><c> x86</c><00:10:33.440><c> or</c><00:10:33.760><c> you'll</c><00:10:34.160><c> sometimes</c>

00:10:34.470 --> 00:10:34.480 align:start position:0%
on what's called x86 or you'll sometimes
 

00:10:34.480 --> 00:10:37.750 align:start position:0%
on what's called x86 or you'll sometimes
see<00:10:34.640><c> it</c><00:10:34.720><c> as</c><00:10:34.800><c> x86</c><00:10:35.519><c> 64.</c>

00:10:37.750 --> 00:10:37.760 align:start position:0%
see it as x86 64.
 

00:10:37.760 --> 00:10:40.949 align:start position:0%
see it as x86 64.
and<00:10:38.000><c> this</c><00:10:38.399><c> is</c><00:10:38.880><c> this</c><00:10:39.040><c> is</c><00:10:39.200><c> a</c><00:10:39.360><c> different</c><00:10:39.760><c> isa</c>

00:10:40.949 --> 00:10:40.959 align:start position:0%
and this is this is a different isa
 

00:10:40.959 --> 00:10:42.389 align:start position:0%
and this is this is a different isa
this<00:10:41.120><c> is</c><00:10:41.279><c> a</c><00:10:41.360><c> different</c><00:10:41.680><c> instruction</c><00:10:42.079><c> set</c><00:10:42.320><c> it</c>

00:10:42.389 --> 00:10:42.399 align:start position:0%
this is a different instruction set it
 

00:10:42.399 --> 00:10:44.230 align:start position:0%
this is a different instruction set it
looks<00:10:42.640><c> pretty</c><00:10:42.880><c> similar</c><00:10:43.279><c> to</c><00:10:43.440><c> risk</c><00:10:43.680><c> five</c>

00:10:44.230 --> 00:10:44.240 align:start position:0%
looks pretty similar to risk five
 

00:10:44.240 --> 00:10:46.710 align:start position:0%
looks pretty similar to risk five
but<00:10:44.399><c> this</c><00:10:44.720><c> is</c><00:10:44.800><c> what</c><00:10:44.959><c> you</c><00:10:45.120><c> see</c><00:10:45.519><c> in</c><00:10:46.160><c> kind</c><00:10:46.320><c> of</c><00:10:46.480><c> your</c>

00:10:46.710 --> 00:10:46.720 align:start position:0%
but this is what you see in kind of your
 

00:10:46.720 --> 00:10:51.750 align:start position:0%
but this is what you see in kind of your
personal<00:10:47.120><c> computers</c><00:10:47.760><c> often</c>

00:10:51.750 --> 00:10:51.760 align:start position:0%
 
 

00:10:51.760 --> 00:10:55.110 align:start position:0%
 
so<00:10:52.000><c> if</c><00:10:52.160><c> you</c><00:10:52.399><c> use</c><00:10:53.680><c> an</c><00:10:54.000><c> intel</c><00:10:54.720><c> so</c>

00:10:55.110 --> 00:10:55.120 align:start position:0%
so if you use an intel so
 

00:10:55.120 --> 00:10:58.389 align:start position:0%
so if you use an intel so
intel<00:10:55.519><c> cpus</c><00:10:56.640><c> implement</c><00:10:57.120><c> x86</c>

00:10:58.389 --> 00:10:58.399 align:start position:0%
intel cpus implement x86
 

00:10:58.399 --> 00:11:02.230 align:start position:0%
intel cpus implement x86
and<00:10:58.560><c> i</c><00:10:58.720><c> believe</c><00:10:59.200><c> amd</c><00:11:00.399><c> also</c><00:11:00.800><c> do</c>

00:11:02.230 --> 00:11:02.240 align:start position:0%
and i believe amd also do
 

00:11:02.240 --> 00:11:06.550 align:start position:0%
and i believe amd also do
and<00:11:03.279><c> this</c><00:11:03.519><c> is</c><00:11:04.399><c> a</c><00:11:05.120><c> relatively</c><00:11:05.760><c> important</c>

00:11:06.550 --> 00:11:06.560 align:start position:0%
and this is a relatively important
 

00:11:06.560 --> 00:11:08.150 align:start position:0%
and this is a relatively important
distinction<00:11:07.120><c> between</c><00:11:07.440><c> the</c><00:11:07.519><c> two</c><00:11:07.760><c> they're</c><00:11:07.920><c> not</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
distinction between the two they're not
 

00:11:08.160 --> 00:11:09.590 align:start position:0%
distinction between the two they're not
quite<00:11:08.399><c> as</c><00:11:08.480><c> similar</c><00:11:08.959><c> as</c><00:11:09.040><c> they</c><00:11:09.200><c> may</c>

00:11:09.590 --> 00:11:09.600 align:start position:0%
quite as similar as they may
 

00:11:09.600 --> 00:11:12.870 align:start position:0%
quite as similar as they may
look<00:11:10.320><c> at</c><00:11:10.640><c> first</c><00:11:11.519><c> and</c><00:11:11.920><c> that</c><00:11:12.079><c> comes</c><00:11:12.399><c> down</c><00:11:12.560><c> to</c><00:11:12.720><c> the</c>

00:11:12.870 --> 00:11:12.880 align:start position:0%
look at first and that comes down to the
 

00:11:12.880 --> 00:11:15.829 align:start position:0%
look at first and that comes down to the
fact<00:11:13.120><c> that</c><00:11:13.440><c> risk</c><00:11:13.839><c> five</c><00:11:14.240><c> is</c><00:11:14.399><c> what</c><00:11:14.560><c> we</c><00:11:14.800><c> call</c>

00:11:15.829 --> 00:11:15.839 align:start position:0%
fact that risk five is what we call
 

00:11:15.839 --> 00:11:18.630 align:start position:0%
fact that risk five is what we call
as<00:11:16.079><c> a</c><00:11:16.640><c> risk</c><00:11:17.040><c> the</c><00:11:17.200><c> risk</c><00:11:17.519><c> part</c><00:11:17.760><c> of</c><00:11:17.839><c> risk</c><00:11:18.240><c> five</c>

00:11:18.630 --> 00:11:18.640 align:start position:0%
as a risk the risk part of risk five
 

00:11:18.640 --> 00:11:20.069 align:start position:0%
as a risk the risk part of risk five
refers<00:11:19.120><c> to</c>

00:11:20.069 --> 00:11:20.079 align:start position:0%
refers to
 

00:11:20.079 --> 00:11:23.829 align:start position:0%
refers to
a<00:11:20.399><c> reduced</c><00:11:21.040><c> instruction</c><00:11:21.600><c> set</c><00:11:22.720><c> and</c>

00:11:23.829 --> 00:11:23.839 align:start position:0%
a reduced instruction set and
 

00:11:23.839 --> 00:11:28.069 align:start position:0%
a reduced instruction set and
x86<00:11:24.560><c> 64</c><00:11:25.440><c> is</c><00:11:25.680><c> what's</c><00:11:25.920><c> called</c><00:11:26.399><c> a</c><00:11:26.839><c> cisc</c>

00:11:28.069 --> 00:11:28.079 align:start position:0%
x86 64 is what's called a cisc
 

00:11:28.079 --> 00:11:34.790 align:start position:0%
x86 64 is what's called a cisc
or<00:11:29.279><c> complex</c><00:11:29.920><c> instruction</c><00:11:30.480><c> set</c>

00:11:34.790 --> 00:11:34.800 align:start position:0%
 
 

00:11:34.800 --> 00:11:37.910 align:start position:0%
 
and<00:11:35.440><c> there's</c><00:11:35.680><c> a</c><00:11:35.760><c> couple</c><00:11:36.959><c> of</c><00:11:37.120><c> key</c><00:11:37.360><c> differences</c>

00:11:37.910 --> 00:11:37.920 align:start position:0%
and there's a couple of key differences
 

00:11:37.920 --> 00:11:38.630 align:start position:0%
and there's a couple of key differences
here<00:11:38.240><c> one</c>

00:11:38.630 --> 00:11:38.640 align:start position:0%
here one
 

00:11:38.640 --> 00:11:40.310 align:start position:0%
here one
is<00:11:38.800><c> just</c><00:11:38.959><c> the</c><00:11:39.120><c> number</c><00:11:39.440><c> of</c><00:11:39.600><c> instructions</c><00:11:40.160><c> that</c>

00:11:40.310 --> 00:11:40.320 align:start position:0%
is just the number of instructions that
 

00:11:40.320 --> 00:11:41.990 align:start position:0%
is just the number of instructions that
are<00:11:40.480><c> present</c><00:11:41.040><c> in</c><00:11:41.360><c> x86</c>

00:11:41.990 --> 00:11:42.000 align:start position:0%
are present in x86
 

00:11:42.000 --> 00:11:45.110 align:start position:0%
are present in x86
64<00:11:42.560><c> in</c><00:11:42.720><c> fact</c><00:11:42.880><c> one</c><00:11:43.040><c> of</c><00:11:43.200><c> the</c><00:11:43.279><c> big</c><00:11:43.600><c> motivations</c>

00:11:45.110 --> 00:11:45.120 align:start position:0%
64 in fact one of the big motivations
 

00:11:45.120 --> 00:11:48.230 align:start position:0%
64 in fact one of the big motivations
for<00:11:45.600><c> writing</c><00:11:46.480><c> um</c><00:11:47.440><c> for</c><00:11:47.920><c> for</c>

00:11:48.230 --> 00:11:48.240 align:start position:0%
for writing um for for
 

00:11:48.240 --> 00:11:51.269 align:start position:0%
for writing um for for
making<00:11:48.560><c> risk</c><00:11:48.880><c> five</c><00:11:49.680><c> was</c><00:11:50.240><c> how</c>

00:11:51.269 --> 00:11:51.279 align:start position:0%
making risk five was how
 

00:11:51.279 --> 00:11:55.110 align:start position:0%
making risk five was how
many<00:11:51.760><c> uh</c><00:11:52.079><c> instructions</c><00:11:52.639><c> we</c><00:11:53.040><c> we</c><00:11:53.279><c> actually</c><00:11:53.600><c> have</c>

00:11:55.110 --> 00:11:55.120 align:start position:0%
many uh instructions we we actually have
 

00:11:55.120 --> 00:11:57.990 align:start position:0%
many uh instructions we we actually have
in<00:11:55.200><c> the</c><00:11:55.440><c> intel</c><00:11:56.320><c> kind</c><00:11:56.480><c> of</c><00:11:56.639><c> handbook</c><00:11:57.519><c> so</c><00:11:57.760><c> for</c>

00:11:57.990 --> 00:11:58.000 align:start position:0%
in the intel kind of handbook so for
 

00:11:58.000 --> 00:11:59.110 align:start position:0%
in the intel kind of handbook so for
reference<00:11:58.639><c> there's</c>

00:11:59.110 --> 00:11:59.120 align:start position:0%
reference there's
 

00:11:59.120 --> 00:12:02.150 align:start position:0%
reference there's
three<00:11:59.600><c> full</c><00:11:59.920><c> books</c>

00:12:02.150 --> 00:12:02.160 align:start position:0%
three full books
 

00:12:02.160 --> 00:12:05.590 align:start position:0%
three full books
that<00:12:03.120><c> encompass</c><00:12:03.760><c> the</c><00:12:03.920><c> isa</c><00:12:04.800><c> and</c>

00:12:05.590 --> 00:12:05.600 align:start position:0%
that encompass the isa and
 

00:12:05.600 --> 00:12:08.710 align:start position:0%
that encompass the isa and
some<00:12:05.920><c> statistics</c><00:12:06.720><c> i</c><00:12:06.880><c> think</c><00:12:07.200><c> there's</c>

00:12:08.710 --> 00:12:08.720 align:start position:0%
some statistics i think there's
 

00:12:08.720 --> 00:12:11.750 align:start position:0%
some statistics i think there's
new<00:12:09.040><c> instructions</c><00:12:09.680><c> have</c><00:12:09.839><c> been</c><00:12:10.079><c> added</c><00:12:10.560><c> at</c><00:12:11.440><c> a</c>

00:12:11.750 --> 00:12:11.760 align:start position:0%
new instructions have been added at a
 

00:12:11.760 --> 00:12:16.629 align:start position:0%
new instructions have been added at a
rate<00:12:12.320><c> of</c><00:12:13.519><c> three</c><00:12:14.079><c> instructions</c>

00:12:16.629 --> 00:12:16.639 align:start position:0%
rate of three instructions
 

00:12:16.639 --> 00:12:21.350 align:start position:0%
rate of three instructions
per<00:12:16.959><c> month</c><00:12:18.880><c> since</c><00:12:19.440><c> x86</c><00:12:20.079><c> 64</c><00:12:20.639><c> was</c><00:12:20.880><c> added</c>

00:12:21.350 --> 00:12:21.360 align:start position:0%
per month since x86 64 was added
 

00:12:21.360 --> 00:12:24.310 align:start position:0%
per month since x86 64 was added
it<00:12:21.440><c> was</c><00:12:21.680><c> uh</c><00:12:22.320><c> first</c><00:12:22.639><c> published</c><00:12:23.200><c> in</c><00:12:23.279><c> the</c><00:12:23.440><c> 70s</c><00:12:24.000><c> so</c>

00:12:24.310 --> 00:12:24.320 align:start position:0%
it was uh first published in the 70s so
 

00:12:24.320 --> 00:12:24.790 align:start position:0%
it was uh first published in the 70s so
i

00:12:24.790 --> 00:12:24.800 align:start position:0%
i
 

00:12:24.800 --> 00:12:28.310 align:start position:0%
i
believe<00:12:25.279><c> there's</c><00:12:25.600><c> like</c><00:12:25.839><c> north</c><00:12:26.160><c> of</c><00:12:26.880><c> uh</c><00:12:27.279><c> 15</c><00:12:27.920><c> 000</c>

00:12:28.310 --> 00:12:28.320 align:start position:0%
believe there's like north of uh 15 000
 

00:12:28.320 --> 00:12:31.350 align:start position:0%
believe there's like north of uh 15 000
instructions

00:12:31.350 --> 00:12:31.360 align:start position:0%
 
 

00:12:31.360 --> 00:12:35.750 align:start position:0%
 
in<00:12:31.680><c> x</c><00:12:31.839><c> 86</c><00:12:32.240><c> 64.</c><00:12:34.320><c> and</c><00:12:34.560><c> risk</c><00:12:34.880><c> five</c><00:12:35.200><c> on</c><00:12:35.360><c> the</c><00:12:35.519><c> other</c>

00:12:35.750 --> 00:12:35.760 align:start position:0%
in x 86 64. and risk five on the other
 

00:12:35.760 --> 00:12:37.430 align:start position:0%
in x 86 64. and risk five on the other
hand

00:12:37.430 --> 00:12:37.440 align:start position:0%
hand
 

00:12:37.440 --> 00:12:39.430 align:start position:0%
hand
the<00:12:37.680><c> assembly</c><00:12:38.079><c> for</c><00:12:38.240><c> risk</c><00:12:38.480><c> five</c><00:12:38.720><c> can</c><00:12:38.880><c> be</c><00:12:39.040><c> nicely</c>

00:12:39.430 --> 00:12:39.440 align:start position:0%
the assembly for risk five can be nicely
 

00:12:39.440 --> 00:12:42.870 align:start position:0%
the assembly for risk five can be nicely
contained<00:12:39.839><c> within</c><00:12:40.160><c> two</c><00:12:40.399><c> documents</c><00:12:41.120><c> and</c><00:12:41.279><c> so</c>

00:12:42.870 --> 00:12:42.880 align:start position:0%
contained within two documents and so
 

00:12:42.880 --> 00:12:44.949 align:start position:0%
contained within two documents and so
kind<00:12:43.040><c> of</c><00:12:43.120><c> going</c><00:12:43.519><c> off</c><00:12:43.680><c> of</c><00:12:43.839><c> that</c><00:12:44.480><c> we</c><00:12:44.639><c> don't</c>

00:12:44.949 --> 00:12:44.959 align:start position:0%
kind of going off of that we don't
 

00:12:44.959 --> 00:12:45.910 align:start position:0%
kind of going off of that we don't
expect<00:12:45.440><c> you</c>

00:12:45.910 --> 00:12:45.920 align:start position:0%
expect you
 

00:12:45.920 --> 00:12:48.629 align:start position:0%
expect you
in<00:12:46.000><c> this</c><00:12:46.240><c> course</c><00:12:46.639><c> to</c><00:12:47.120><c> memorize</c><00:12:47.920><c> every</c><00:12:48.160><c> single</c>

00:12:48.629 --> 00:12:48.639 align:start position:0%
in this course to memorize every single
 

00:12:48.639 --> 00:12:50.389 align:start position:0%
in this course to memorize every single
risk<00:12:48.959><c> five</c><00:12:49.360><c> instruction</c>

00:12:50.389 --> 00:12:50.399 align:start position:0%
risk five instruction
 

00:12:50.399 --> 00:12:52.710 align:start position:0%
risk five instruction
but<00:12:50.800><c> if</c><00:12:50.959><c> you</c><00:12:51.200><c> are</c><00:12:51.600><c> interested</c><00:12:52.240><c> or</c><00:12:52.399><c> you</c><00:12:52.560><c> ever</c>

00:12:52.710 --> 00:12:52.720 align:start position:0%
but if you are interested or you ever
 

00:12:52.720 --> 00:12:54.150 align:start position:0%
but if you are interested or you ever
find<00:12:52.959><c> yourself</c><00:12:53.279><c> confused</c><00:12:53.680><c> by</c><00:12:53.839><c> what</c><00:12:54.000><c> a</c>

00:12:54.150 --> 00:12:54.160 align:start position:0%
find yourself confused by what a
 

00:12:54.160 --> 00:12:55.910 align:start position:0%
find yourself confused by what a
specific<00:12:54.639><c> instruction</c>

00:12:55.910 --> 00:12:55.920 align:start position:0%
specific instruction
 

00:12:55.920 --> 00:12:58.949 align:start position:0%
specific instruction
is<00:12:56.240><c> or</c><00:12:56.480><c> does</c><00:12:57.680><c> if</c><00:12:57.839><c> you</c><00:12:58.160><c> go</c><00:12:58.320><c> to</c><00:12:58.399><c> the</c><00:12:58.639><c> course</c>

00:12:58.949 --> 00:12:58.959 align:start position:0%
is or does if you go to the course
 

00:12:58.959 --> 00:12:59.990 align:start position:0%
is or does if you go to the course
website

00:12:59.990 --> 00:13:00.000 align:start position:0%
website
 

00:13:00.000 --> 00:13:03.509 align:start position:0%
website
and<00:13:00.160><c> we</c><00:13:00.320><c> look</c><00:13:00.560><c> under</c><00:13:00.959><c> the</c><00:13:01.360><c> references</c><00:13:02.079><c> tab</c>

00:13:03.509 --> 00:13:03.519 align:start position:0%
and we look under the references tab
 

00:13:03.519 --> 00:13:05.670 align:start position:0%
and we look under the references tab
under<00:13:03.760><c> risk</c><00:13:04.079><c> five</c><00:13:04.399><c> we</c><00:13:04.560><c> give</c><00:13:04.639><c> you</c><00:13:04.800><c> the</c><00:13:05.040><c> links</c><00:13:05.360><c> to</c>

00:13:05.670 --> 00:13:05.680 align:start position:0%
under risk five we give you the links to
 

00:13:05.680 --> 00:13:07.430 align:start position:0%
under risk five we give you the links to
both<00:13:05.920><c> the</c><00:13:06.240><c> privileged</c>

00:13:07.430 --> 00:13:07.440 align:start position:0%
both the privileged
 

00:13:07.440 --> 00:13:10.629 align:start position:0%
both the privileged
and<00:13:07.880><c> unprivileged</c><00:13:08.959><c> instruction</c><00:13:09.519><c> sets</c><00:13:10.320><c> so</c>

00:13:10.629 --> 00:13:10.639 align:start position:0%
and unprivileged instruction sets so
 

00:13:10.639 --> 00:13:12.870 align:start position:0%
and unprivileged instruction sets so
this<00:13:10.880><c> is</c><00:13:10.959><c> kind</c><00:13:11.200><c> of</c><00:13:11.279><c> the</c><00:13:11.440><c> document</c>

00:13:12.870 --> 00:13:12.880 align:start position:0%
this is kind of the document
 

00:13:12.880 --> 00:13:15.190 align:start position:0%
this is kind of the document
that<00:13:14.000><c> gives</c><00:13:14.240><c> you</c><00:13:14.399><c> a</c><00:13:14.480><c> whole</c><00:13:14.720><c> bunch</c><00:13:15.040><c> of</c>

00:13:15.190 --> 00:13:15.200 align:start position:0%
that gives you a whole bunch of
 

00:13:15.200 --> 00:13:16.790 align:start position:0%
that gives you a whole bunch of
information<00:13:15.680><c> about</c><00:13:15.839><c> the</c><00:13:15.920><c> isa</c>

00:13:16.790 --> 00:13:16.800 align:start position:0%
information about the isa
 

00:13:16.800 --> 00:13:19.190 align:start position:0%
information about the isa
but<00:13:16.959><c> you'll</c><00:13:17.120><c> note</c><00:13:17.360><c> that</c><00:13:17.440><c> like</c><00:13:17.680><c> this</c><00:13:17.920><c> is</c><00:13:18.200><c> 240</c>

00:13:19.190 --> 00:13:19.200 align:start position:0%
but you'll note that like this is 240
 

00:13:19.200 --> 00:13:20.470 align:start position:0%
but you'll note that like this is 240
pages

00:13:20.470 --> 00:13:20.480 align:start position:0%
pages
 

00:13:20.480 --> 00:13:23.030 align:start position:0%
pages
and<00:13:20.880><c> this</c><00:13:21.040><c> is</c><00:13:21.240><c> 135</c><00:13:22.320><c> pages</c><00:13:22.720><c> so</c><00:13:22.800><c> it's</c>

00:13:23.030 --> 00:13:23.040 align:start position:0%
and this is 135 pages so it's
 

00:13:23.040 --> 00:13:25.350 align:start position:0%
and this is 135 pages so it's
significantly<00:13:23.760><c> significantly</c><00:13:24.480><c> smaller</c>

00:13:25.350 --> 00:13:25.360 align:start position:0%
significantly significantly smaller
 

00:13:25.360 --> 00:13:28.790 align:start position:0%
significantly significantly smaller
than<00:13:26.000><c> uh</c><00:13:26.480><c> the</c><00:13:26.639><c> x86</c><00:13:27.680><c> instruction</c><00:13:28.240><c> set</c><00:13:28.560><c> that's</c>

00:13:28.790 --> 00:13:28.800 align:start position:0%
than uh the x86 instruction set that's
 

00:13:28.800 --> 00:13:31.829 align:start position:0%
than uh the x86 instruction set that's
one<00:13:28.959><c> of</c><00:13:29.040><c> the</c><00:13:29.279><c> the</c><00:13:29.519><c> nice</c><00:13:29.760><c> things</c><00:13:30.079><c> about</c>

00:13:31.829 --> 00:13:31.839 align:start position:0%
one of the the nice things about
 

00:13:31.839 --> 00:13:35.990 align:start position:0%
one of the the nice things about
about<00:13:32.160><c> risk</c><00:13:32.480><c> five</c><00:13:33.360><c> so</c><00:13:34.240><c> we</c><00:13:34.480><c> have</c>

00:13:35.990 --> 00:13:36.000 align:start position:0%
about risk five so we have
 

00:13:36.000 --> 00:13:38.790 align:start position:0%
about risk five so we have
in<00:13:36.240><c> risk</c><00:13:36.560><c> five</c><00:13:36.880><c> we</c><00:13:37.040><c> have</c><00:13:37.519><c> uh</c><00:13:38.399><c> fewer</c>

00:13:38.790 --> 00:13:38.800 align:start position:0%
in risk five we have uh fewer
 

00:13:38.800 --> 00:13:39.910 align:start position:0%
in risk five we have uh fewer
instructions

00:13:39.910 --> 00:13:39.920 align:start position:0%
instructions
 

00:13:39.920 --> 00:13:43.030 align:start position:0%
instructions
and<00:13:40.079><c> not</c><00:13:40.320><c> only</c><00:13:40.560><c> that</c><00:13:42.000><c> the</c><00:13:42.160><c> instructions</c><00:13:42.800><c> are</c>

00:13:43.030 --> 00:13:43.040 align:start position:0%
and not only that the instructions are
 

00:13:43.040 --> 00:13:44.310 align:start position:0%
and not only that the instructions are
simpler

00:13:44.310 --> 00:13:44.320 align:start position:0%
simpler
 

00:13:44.320 --> 00:13:48.790 align:start position:0%
simpler
so<00:13:45.839><c> what</c><00:13:46.000><c> i</c><00:13:46.160><c> mean</c><00:13:46.399><c> by</c><00:13:46.560><c> that</c><00:13:46.880><c> is</c><00:13:47.040><c> that</c>

00:13:48.790 --> 00:13:48.800 align:start position:0%
so what i mean by that is that
 

00:13:48.800 --> 00:13:52.389 align:start position:0%
so what i mean by that is that
there<00:13:49.040><c> are</c><00:13:49.120><c> many</c><00:13:49.440><c> instructions</c><00:13:50.800><c> in</c><00:13:51.320><c> x8664</c><00:13:52.320><c> and</c>

00:13:52.389 --> 00:13:52.399 align:start position:0%
there are many instructions in x8664 and
 

00:13:52.399 --> 00:13:53.509 align:start position:0%
there are many instructions in x8664 and
by<00:13:52.480><c> instruction</c><00:13:52.959><c> i'm</c><00:13:53.040><c> referring</c><00:13:53.440><c> to</c>

00:13:53.509 --> 00:13:53.519 align:start position:0%
by instruction i'm referring to
 

00:13:53.519 --> 00:13:55.750 align:start position:0%
by instruction i'm referring to
something<00:13:53.839><c> like</c><00:13:54.000><c> at</c><00:13:54.320><c> or</c><00:13:54.399><c> malt</c><00:13:54.800><c> or</c><00:13:54.959><c> sub</c>

00:13:55.750 --> 00:13:55.760 align:start position:0%
something like at or malt or sub
 

00:13:55.760 --> 00:13:58.710 align:start position:0%
something like at or malt or sub
um<00:13:56.959><c> in</c><00:13:57.120><c> x8664</c><00:13:58.079><c> there's</c><00:13:58.320><c> plenty</c><00:13:58.560><c> of</c>

00:13:58.710 --> 00:13:58.720 align:start position:0%
um in x8664 there's plenty of
 

00:13:58.720 --> 00:14:00.069 align:start position:0%
um in x8664 there's plenty of
instructions<00:13:59.440><c> that</c><00:13:59.680><c> do</c>

00:14:00.069 --> 00:14:00.079 align:start position:0%
instructions that do
 

00:14:00.079 --> 00:14:02.550 align:start position:0%
instructions that do
more<00:14:00.240><c> than</c><00:14:00.480><c> one</c><00:14:00.800><c> thing</c><00:14:01.120><c> so</c><00:14:01.440><c> they</c><00:14:01.680><c> perform</c><00:14:02.240><c> some</c>

00:14:02.550 --> 00:14:02.560 align:start position:0%
more than one thing so they perform some
 

00:14:02.560 --> 00:14:03.910 align:start position:0%
more than one thing so they perform some
complicated

00:14:03.910 --> 00:14:03.920 align:start position:0%
complicated
 

00:14:03.920 --> 00:14:06.629 align:start position:0%
complicated
uh<00:14:04.320><c> set</c><00:14:04.560><c> of</c><00:14:04.720><c> operations</c><00:14:05.519><c> and</c><00:14:05.680><c> then</c><00:14:05.839><c> get</c><00:14:06.000><c> you</c>

00:14:06.629 --> 00:14:06.639 align:start position:0%
uh set of operations and then get you
 

00:14:06.639 --> 00:14:07.350 align:start position:0%
uh set of operations and then get you
the<00:14:06.800><c> result</c>

00:14:07.350 --> 00:14:07.360 align:start position:0%
the result
 

00:14:07.360 --> 00:14:09.509 align:start position:0%
the result
and<00:14:07.519><c> that's</c><00:14:07.839><c> uh</c><00:14:08.240><c> not</c><00:14:08.560><c> not</c><00:14:08.800><c> the</c><00:14:08.880><c> case</c><00:14:09.120><c> with</c><00:14:09.279><c> risk</c>

00:14:09.509 --> 00:14:09.519 align:start position:0%
and that's uh not not the case with risk
 

00:14:09.519 --> 00:14:11.990 align:start position:0%
and that's uh not not the case with risk
five<00:14:10.160><c> uh</c><00:14:10.399><c> risk</c><00:14:10.639><c> five</c><00:14:10.959><c> instructions</c><00:14:11.600><c> tend</c><00:14:11.839><c> to</c>

00:14:11.990 --> 00:14:12.000 align:start position:0%
five uh risk five instructions tend to
 

00:14:12.000 --> 00:14:12.389 align:start position:0%
five uh risk five instructions tend to
be

00:14:12.389 --> 00:14:12.399 align:start position:0%
be
 

00:14:12.399 --> 00:14:14.230 align:start position:0%
be
smaller<00:14:12.880><c> in</c><00:14:13.040><c> scope</c><00:14:13.360><c> and</c><00:14:13.519><c> so</c><00:14:13.680><c> they</c><00:14:13.760><c> take</c><00:14:14.160><c> you</c>

00:14:14.230 --> 00:14:14.240 align:start position:0%
smaller in scope and so they take you
 

00:14:14.240 --> 00:14:15.990 align:start position:0%
smaller in scope and so they take you
know<00:14:14.399><c> it's</c><00:14:14.560><c> less</c><00:14:14.800><c> cycles</c><00:14:15.199><c> to</c><00:14:15.360><c> run</c><00:14:15.680><c> each</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
know it's less cycles to run each
 

00:14:16.000 --> 00:14:19.269 align:start position:0%
know it's less cycles to run each
instruction<00:14:16.959><c> than</c><00:14:17.120><c> maybe</c><00:14:17.440><c> x8664</c><00:14:18.480><c> is</c><00:14:18.880><c> and</c><00:14:19.040><c> this</c>

00:14:19.269 --> 00:14:19.279 align:start position:0%
instruction than maybe x8664 is and this
 

00:14:19.279 --> 00:14:21.030 align:start position:0%
instruction than maybe x8664 is and this
is<00:14:19.360><c> just</c><00:14:19.519><c> a</c><00:14:19.680><c> trade-off</c><00:14:20.160><c> that</c><00:14:20.320><c> the</c><00:14:20.399><c> designers</c>

00:14:21.030 --> 00:14:21.040 align:start position:0%
is just a trade-off that the designers
 

00:14:21.040 --> 00:14:21.910 align:start position:0%
is just a trade-off that the designers
chose<00:14:21.360><c> to</c><00:14:21.600><c> uh</c>

00:14:21.910 --> 00:14:21.920 align:start position:0%
chose to uh
 

00:14:21.920 --> 00:14:25.350 align:start position:0%
chose to uh
chose<00:14:22.160><c> to</c><00:14:22.240><c> undertake</c><00:14:23.199><c> um</c><00:14:23.680><c> there's</c><00:14:24.000><c> nothing</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
chose to undertake um there's nothing
 

00:14:25.360 --> 00:14:28.389 align:start position:0%
chose to undertake um there's nothing
or<00:14:25.680><c> you</c><00:14:25.760><c> know</c><00:14:25.920><c> there's</c><00:14:26.160><c> no</c>

00:14:28.389 --> 00:14:28.399 align:start position:0%
or you know there's no
 

00:14:28.399 --> 00:14:30.470 align:start position:0%
or you know there's no
canonical<00:14:29.120><c> reason</c><00:14:29.600><c> why</c><00:14:29.839><c> a</c><00:14:30.000><c> reduced</c>

00:14:30.470 --> 00:14:30.480 align:start position:0%
canonical reason why a reduced
 

00:14:30.480 --> 00:14:31.509 align:start position:0%
canonical reason why a reduced
instruction<00:14:31.120><c> set</c>

00:14:31.509 --> 00:14:31.519 align:start position:0%
instruction set
 

00:14:31.519 --> 00:14:34.310 align:start position:0%
instruction set
is<00:14:31.680><c> better</c><00:14:32.160><c> than</c><00:14:32.800><c> you</c><00:14:32.959><c> know</c><00:14:33.519><c> a</c><00:14:33.839><c> complex</c>

00:14:34.310 --> 00:14:34.320 align:start position:0%
is better than you know a complex
 

00:14:34.320 --> 00:14:35.189 align:start position:0%
is better than you know a complex
induction

00:14:35.189 --> 00:14:35.199 align:start position:0%
induction
 

00:14:35.199 --> 00:14:37.269 align:start position:0%
induction
instruction<00:14:35.760><c> set</c><00:14:36.000><c> they</c><00:14:36.240><c> each</c><00:14:36.480><c> have</c><00:14:36.720><c> their</c><00:14:36.959><c> own</c>

00:14:37.269 --> 00:14:37.279 align:start position:0%
instruction set they each have their own
 

00:14:37.279 --> 00:14:38.310 align:start position:0%
instruction set they each have their own
uses

00:14:38.310 --> 00:14:38.320 align:start position:0%
uses
 

00:14:38.320 --> 00:14:40.470 align:start position:0%
uses
um<00:14:38.959><c> and</c><00:14:39.120><c> so</c><00:14:39.279><c> on</c><00:14:39.440><c> and</c><00:14:39.519><c> so</c><00:14:39.760><c> forth</c><00:14:40.000><c> and</c><00:14:40.160><c> another</c>

00:14:40.470 --> 00:14:40.480 align:start position:0%
um and so on and so forth and another
 

00:14:40.480 --> 00:14:42.389 align:start position:0%
um and so on and so forth and another
another<00:14:40.800><c> cool</c><00:14:41.040><c> thing</c><00:14:41.279><c> about</c><00:14:41.519><c> risk</c><00:14:41.839><c> five</c><00:14:42.160><c> as</c>

00:14:42.389 --> 00:14:42.399 align:start position:0%
another cool thing about risk five as
 

00:14:42.399 --> 00:14:43.509 align:start position:0%
another cool thing about risk five as
opposed<00:14:42.800><c> to</c>

00:14:43.509 --> 00:14:43.519 align:start position:0%
opposed to
 

00:14:43.519 --> 00:14:47.750 align:start position:0%
opposed to
x86<00:14:44.399><c> is</c><00:14:44.560><c> that</c><00:14:45.279><c> this</c><00:14:45.519><c> is</c><00:14:45.680><c> open</c><00:14:46.000><c> source</c>

00:14:47.750 --> 00:14:47.760 align:start position:0%
x86 is that this is open source
 

00:14:47.760 --> 00:14:51.750 align:start position:0%
x86 is that this is open source
so<00:14:48.480><c> it's</c><00:14:48.639><c> one</c><00:14:48.800><c> of</c><00:14:48.959><c> the</c><00:14:50.000><c> only</c><00:14:50.480><c> open</c><00:14:50.880><c> source</c>

00:14:51.750 --> 00:14:51.760 align:start position:0%
so it's one of the only open source
 

00:14:51.760 --> 00:14:53.829 align:start position:0%
so it's one of the only open source
instruction<00:14:52.399><c> sets</c><00:14:52.880><c> on</c><00:14:52.959><c> the</c><00:14:53.120><c> market</c><00:14:53.519><c> so</c><00:14:53.680><c> that</c>

00:14:53.829 --> 00:14:53.839 align:start position:0%
instruction sets on the market so that
 

00:14:53.839 --> 00:14:55.750 align:start position:0%
instruction sets on the market so that
means<00:14:54.079><c> anybody</c><00:14:54.560><c> can</c><00:14:54.720><c> develop</c><00:14:55.120><c> a</c><00:14:55.279><c> board</c><00:14:55.600><c> for</c>

00:14:55.750 --> 00:14:55.760 align:start position:0%
means anybody can develop a board for
 

00:14:55.760 --> 00:14:57.269 align:start position:0%
means anybody can develop a board for
risk<00:14:56.079><c> five</c>

00:14:57.269 --> 00:14:57.279 align:start position:0%
risk five
 

00:14:57.279 --> 00:14:59.030 align:start position:0%
risk five
and<00:14:57.440><c> it</c><00:14:57.519><c> was</c><00:14:57.839><c> it</c><00:14:58.000><c> came</c><00:14:58.240><c> out</c><00:14:58.320><c> of</c><00:14:58.399><c> a</c><00:14:58.480><c> research</c>

00:14:59.030 --> 00:14:59.040 align:start position:0%
and it was it came out of a research
 

00:14:59.040 --> 00:15:00.550 align:start position:0%
and it was it came out of a research
project<00:14:59.680><c> from</c>

00:15:00.550 --> 00:15:00.560 align:start position:0%
project from
 

00:15:00.560 --> 00:15:02.710 align:start position:0%
project from
uc<00:15:01.040><c> berkeley</c><00:15:01.519><c> and</c><00:15:01.680><c> so</c><00:15:01.839><c> that's</c><00:15:02.160><c> kind</c><00:15:02.320><c> of</c><00:15:02.399><c> where</c>

00:15:02.710 --> 00:15:02.720 align:start position:0%
uc berkeley and so that's kind of where
 

00:15:02.720 --> 00:15:03.990 align:start position:0%
uc berkeley and so that's kind of where
risk<00:15:02.959><c> five</c><00:15:03.279><c> started</c>

00:15:03.990 --> 00:15:04.000 align:start position:0%
risk five started
 

00:15:04.000 --> 00:15:05.430 align:start position:0%
risk five started
and<00:15:04.160><c> since</c><00:15:04.399><c> then</c><00:15:04.560><c> it's</c><00:15:04.720><c> been</c><00:15:04.880><c> picked</c><00:15:05.199><c> up</c><00:15:05.360><c> and</c>

00:15:05.430 --> 00:15:05.440 align:start position:0%
and since then it's been picked up and
 

00:15:05.440 --> 00:15:07.829 align:start position:0%
and since then it's been picked up and
supported<00:15:06.000><c> by</c><00:15:06.240><c> a</c><00:15:06.399><c> number</c><00:15:06.639><c> of</c><00:15:06.880><c> companies</c>

00:15:07.829 --> 00:15:07.839 align:start position:0%
supported by a number of companies
 

00:15:07.839 --> 00:15:09.750 align:start position:0%
supported by a number of companies
uh<00:15:08.079><c> you</c><00:15:08.160><c> can</c><00:15:08.320><c> find</c><00:15:08.639><c> the</c><00:15:08.720><c> list</c><00:15:09.040><c> online</c><00:15:09.519><c> but</c><00:15:09.680><c> you</c>

00:15:09.750 --> 00:15:09.760 align:start position:0%
uh you can find the list online but you
 

00:15:09.760 --> 00:15:11.110 align:start position:0%
uh you can find the list online but you
know<00:15:09.920><c> there's</c><00:15:10.160><c> tons</c><00:15:10.399><c> of</c><00:15:10.480><c> big</c><00:15:10.639><c> companies</c><00:15:11.040><c> that</c>

00:15:11.110 --> 00:15:11.120 align:start position:0%
know there's tons of big companies that
 

00:15:11.120 --> 00:15:13.269 align:start position:0%
know there's tons of big companies that
are<00:15:11.279><c> interested</c><00:15:11.680><c> in</c><00:15:11.760><c> supporting</c><00:15:12.240><c> an</c><00:15:12.399><c> open</c>

00:15:13.269 --> 00:15:13.279 align:start position:0%
are interested in supporting an open
 

00:15:13.279 --> 00:15:16.069 align:start position:0%
are interested in supporting an open
instruction<00:15:13.920><c> set</c><00:15:14.959><c> and</c><00:15:15.120><c> actually</c><00:15:15.760><c> i</c><00:15:15.839><c> think</c>

00:15:16.069 --> 00:15:16.079 align:start position:0%
instruction set and actually i think
 

00:15:16.079 --> 00:15:17.750 align:start position:0%
instruction set and actually i think
quite<00:15:16.320><c> recently</c><00:15:16.720><c> there</c><00:15:16.880><c> was</c><00:15:17.120><c> an</c><00:15:17.199><c> announcement</c>

00:15:17.750 --> 00:15:17.760 align:start position:0%
quite recently there was an announcement
 

00:15:17.760 --> 00:15:18.710 align:start position:0%
quite recently there was an announcement
made<00:15:18.079><c> by</c>

00:15:18.710 --> 00:15:18.720 align:start position:0%
made by
 

00:15:18.720 --> 00:15:22.310 align:start position:0%
made by
sci-5<00:15:19.440><c> who</c><00:15:19.839><c> are</c><00:15:21.199><c> sort</c><00:15:21.440><c> of</c><00:15:21.519><c> the</c><00:15:21.760><c> premier</c>

00:15:22.310 --> 00:15:22.320 align:start position:0%
sci-5 who are sort of the premier
 

00:15:22.320 --> 00:15:25.269 align:start position:0%
sci-5 who are sort of the premier
board<00:15:22.639><c> manufacturer</c><00:15:23.440><c> for</c><00:15:23.600><c> risk</c><00:15:23.839><c> 5</c><00:15:24.240><c> processors</c>

00:15:25.269 --> 00:15:25.279 align:start position:0%
board manufacturer for risk 5 processors
 

00:15:25.279 --> 00:15:26.069 align:start position:0%
board manufacturer for risk 5 processors
that<00:15:25.519><c> they</c><00:15:25.760><c> will</c>

00:15:26.069 --> 00:15:26.079 align:start position:0%
that they will
 

00:15:26.079 --> 00:15:29.670 align:start position:0%
that they will
be<00:15:27.120><c> releasing</c><00:15:28.000><c> a</c><00:15:28.959><c> board</c><00:15:29.360><c> for</c>

00:15:29.670 --> 00:15:29.680 align:start position:0%
be releasing a board for
 

00:15:29.680 --> 00:15:31.269 align:start position:0%
be releasing a board for
personal<00:15:30.079><c> computers</c><00:15:30.720><c> that</c><00:15:30.959><c> should</c>

00:15:31.269 --> 00:15:31.279 align:start position:0%
personal computers that should
 

00:15:31.279 --> 00:15:32.629 align:start position:0%
personal computers that should
ostensibly<00:15:31.839><c> you</c><00:15:31.920><c> know</c><00:15:32.079><c> a</c><00:15:32.160><c> risk</c><00:15:32.399><c> five</c>

00:15:32.629 --> 00:15:32.639 align:start position:0%
ostensibly you know a risk five
 

00:15:32.639 --> 00:15:34.550 align:start position:0%
ostensibly you know a risk five
processor<00:15:33.199><c> designed</c><00:15:33.680><c> to</c><00:15:33.839><c> run</c><00:15:34.079><c> linux</c><00:15:34.399><c> for</c>

00:15:34.550 --> 00:15:34.560 align:start position:0%
processor designed to run linux for
 

00:15:34.560 --> 00:15:35.829 align:start position:0%
processor designed to run linux for
personal<00:15:34.880><c> computers</c>

00:15:35.829 --> 00:15:35.839 align:start position:0%
personal computers
 

00:15:35.839 --> 00:15:37.749 align:start position:0%
personal computers
and<00:15:36.000><c> i</c><00:15:36.079><c> think</c><00:15:36.240><c> that</c><00:15:36.480><c> that's</c><00:15:36.959><c> been</c><00:15:37.199><c> released</c><00:15:37.600><c> in</c>

00:15:37.749 --> 00:15:37.759 align:start position:0%
and i think that that's been released in
 

00:15:37.759 --> 00:15:39.189 align:start position:0%
and i think that that's been released in
the<00:15:37.839><c> last</c><00:15:38.160><c> week</c><00:15:38.399><c> or</c><00:15:38.560><c> two</c><00:15:38.800><c> the</c>

00:15:39.189 --> 00:15:39.199 align:start position:0%
the last week or two the
 

00:15:39.199 --> 00:15:41.590 align:start position:0%
the last week or two the
announcement<00:15:39.680><c> about</c><00:15:40.000><c> it</c><00:15:40.480><c> um</c><00:15:40.800><c> so</c><00:15:41.120><c> if</c><00:15:41.199><c> you're</c><00:15:41.440><c> if</c>

00:15:41.590 --> 00:15:41.600 align:start position:0%
announcement about it um so if you're if
 

00:15:41.600 --> 00:15:43.030 align:start position:0%
announcement about it um so if you're if
you're<00:15:41.759><c> curious</c><00:15:42.240><c> if</c><00:15:42.320><c> you're</c>

00:15:43.030 --> 00:15:43.040 align:start position:0%
you're curious if you're
 

00:15:43.040 --> 00:15:44.710 align:start position:0%
you're curious if you're
find<00:15:43.360><c> yourself</c><00:15:43.680><c> you</c><00:15:43.759><c> know</c><00:15:44.000><c> absolutely</c><00:15:44.639><c> you</c>

00:15:44.710 --> 00:15:44.720 align:start position:0%
find yourself you know absolutely you
 

00:15:44.720 --> 00:15:46.870 align:start position:0%
find yourself you know absolutely you
know<00:15:44.880><c> i</c><00:15:44.959><c> want</c><00:15:45.120><c> to</c><00:15:45.199><c> use</c><00:15:45.440><c> risk</c><00:15:45.680><c> 5</c><00:15:46.079><c> after</c><00:15:46.320><c> i</c><00:15:46.480><c> finish</c>

00:15:46.870 --> 00:15:46.880 align:start position:0%
know i want to use risk 5 after i finish
 

00:15:46.880 --> 00:15:48.310 align:start position:0%
know i want to use risk 5 after i finish
6s081

00:15:48.310 --> 00:15:48.320 align:start position:0%
6s081
 

00:15:48.320 --> 00:15:50.150 align:start position:0%
6s081
hopefully<00:15:48.720><c> by</c><00:15:48.959><c> that</c><00:15:49.120><c> time</c><00:15:49.279><c> there</c><00:15:49.440><c> will</c><00:15:49.600><c> be</c><00:15:49.920><c> a</c>

00:15:50.150 --> 00:15:50.160 align:start position:0%
hopefully by that time there will be a
 

00:15:50.160 --> 00:15:51.749 align:start position:0%
hopefully by that time there will be a
processor<00:15:50.800><c> available</c><00:15:51.199><c> that</c><00:15:51.360><c> you</c><00:15:51.440><c> can</c><00:15:51.600><c> run</c>

00:15:51.749 --> 00:15:51.759 align:start position:0%
processor available that you can run
 

00:15:51.759 --> 00:15:55.110 align:start position:0%
processor available that you can run
linux<00:15:52.160><c> on</c><00:15:52.480><c> on</c><00:15:52.560><c> your</c><00:15:52.720><c> own</c><00:15:52.880><c> computer</c>

00:15:55.110 --> 00:15:55.120 align:start position:0%
linux on on your own computer
 

00:15:55.120 --> 00:15:56.870 align:start position:0%
linux on on your own computer
but<00:15:55.360><c> even</c><00:15:55.600><c> in</c><00:15:55.680><c> your</c><00:15:55.839><c> day</c><00:15:56.000><c> to</c><00:15:56.079><c> day</c><00:15:56.320><c> lives</c><00:15:56.720><c> you're</c>

00:15:56.870 --> 00:15:56.880 align:start position:0%
but even in your day to day lives you're
 

00:15:56.880 --> 00:15:59.350 align:start position:0%
but even in your day to day lives you're
most<00:15:57.199><c> likely</c><00:15:58.000><c> using</c><00:15:58.320><c> reduced</c><00:15:58.800><c> instruction</c>

00:15:59.350 --> 00:15:59.360 align:start position:0%
most likely using reduced instruction
 

00:15:59.360 --> 00:16:02.069 align:start position:0%
most likely using reduced instruction
sets<00:15:59.759><c> even</c><00:16:00.240><c> if</c><00:16:00.399><c> you</c><00:16:00.480><c> don't</c><00:16:00.720><c> realize</c><00:16:01.199><c> it</c><00:16:01.360><c> so</c>

00:16:02.069 --> 00:16:02.079 align:start position:0%
sets even if you don't realize it so
 

00:16:02.079 --> 00:16:05.509 align:start position:0%
sets even if you don't realize it so
the<00:16:03.680><c> arm</c><00:16:04.000><c> assembly</c><00:16:04.560><c> so</c><00:16:04.959><c> that's</c>

00:16:05.509 --> 00:16:05.519 align:start position:0%
the arm assembly so that's
 

00:16:05.519 --> 00:16:09.350 align:start position:0%
the arm assembly so that's
arm<00:16:07.040><c> this</c><00:16:07.279><c> is</c><00:16:07.519><c> also</c><00:16:08.079><c> a</c><00:16:08.320><c> reduced</c><00:16:08.800><c> instruction</c>

00:16:09.350 --> 00:16:09.360 align:start position:0%
arm this is also a reduced instruction
 

00:16:09.360 --> 00:16:11.189 align:start position:0%
arm this is also a reduced instruction
set

00:16:11.189 --> 00:16:11.199 align:start position:0%
set
 

00:16:11.199 --> 00:16:14.470 align:start position:0%
set
and<00:16:11.519><c> arm</c><00:16:12.079><c> is</c><00:16:12.720><c> implemented</c><00:16:13.680><c> by</c>

00:16:14.470 --> 00:16:14.480 align:start position:0%
and arm is implemented by
 

00:16:14.480 --> 00:16:17.749 align:start position:0%
and arm is implemented by
qualcomm<00:16:16.079><c> the</c><00:16:16.320><c> the</c><00:16:16.480><c> snapdragon</c><00:16:17.199><c> series</c><00:16:17.600><c> of</c>

00:16:17.749 --> 00:16:17.759 align:start position:0%
qualcomm the the snapdragon series of
 

00:16:17.759 --> 00:16:19.030 align:start position:0%
qualcomm the the snapdragon series of
processors

00:16:19.030 --> 00:16:19.040 align:start position:0%
processors
 

00:16:19.040 --> 00:16:22.790 align:start position:0%
processors
so<00:16:19.279><c> if</c><00:16:19.440><c> you</c><00:16:19.519><c> have</c><00:16:19.680><c> an</c><00:16:19.920><c> android</c><00:16:20.839><c> phone</c>

00:16:22.790 --> 00:16:22.800 align:start position:0%
so if you have an android phone
 

00:16:22.800 --> 00:16:26.790 align:start position:0%
so if you have an android phone
you<00:16:23.440><c> are</c><00:16:24.800><c> most</c><00:16:25.120><c> likely</c>

00:16:26.790 --> 00:16:26.800 align:start position:0%
you are most likely
 

00:16:26.800 --> 00:16:30.150 align:start position:0%
you are most likely
running<00:16:27.360><c> a</c><00:16:27.600><c> reduced</c><00:16:28.240><c> instruction</c><00:16:28.880><c> set</c>

00:16:30.150 --> 00:16:30.160 align:start position:0%
running a reduced instruction set
 

00:16:30.160 --> 00:16:34.069 align:start position:0%
running a reduced instruction set
and<00:16:30.399><c> even</c><00:16:30.639><c> if</c><00:16:30.720><c> you're</c><00:16:30.880><c> using</c><00:16:31.120><c> ios</c><00:16:33.040><c> ios</c><00:16:33.680><c> i</c><00:16:33.759><c> think</c>

00:16:34.069 --> 00:16:34.079 align:start position:0%
and even if you're using ios ios i think
 

00:16:34.079 --> 00:16:35.670 align:start position:0%
and even if you're using ios ios i think
i<00:16:34.240><c> forget</c><00:16:34.560><c> what</c><00:16:34.639><c> the</c><00:16:34.800><c> name</c><00:16:34.959><c> of</c><00:16:35.120><c> it</c><00:16:35.199><c> is</c><00:16:35.440><c> but</c>

00:16:35.670 --> 00:16:35.680 align:start position:0%
i forget what the name of it is but
 

00:16:35.680 --> 00:16:35.990 align:start position:0%
i forget what the name of it is but
apple

00:16:35.990 --> 00:16:36.000 align:start position:0%
apple
 

00:16:36.000 --> 00:16:39.189 align:start position:0%
apple
has<00:16:36.240><c> some</c><00:16:37.920><c> has</c><00:16:38.160><c> some</c><00:16:38.480><c> version</c>

00:16:39.189 --> 00:16:39.199 align:start position:0%
has some has some version
 

00:16:39.199 --> 00:16:41.430 align:start position:0%
has some has some version
of<00:16:39.680><c> of</c><00:16:39.920><c> arm</c><00:16:40.240><c> that</c><00:16:40.399><c> they</c><00:16:40.560><c> also</c><00:16:40.880><c> implement</c><00:16:41.360><c> in</c>

00:16:41.430 --> 00:16:41.440 align:start position:0%
of of arm that they also implement in
 

00:16:41.440 --> 00:16:42.790 align:start position:0%
of of arm that they also implement in
their<00:16:41.680><c> own</c><00:16:41.839><c> processors</c>

00:16:42.790 --> 00:16:42.800 align:start position:0%
their own processors
 

00:16:42.800 --> 00:16:46.470 align:start position:0%
their own processors
that<00:16:43.040><c> runs</c><00:16:43.360><c> on</c><00:16:43.680><c> ipads</c><00:16:44.639><c> iphones</c><00:16:45.360><c> and</c><00:16:45.920><c> most</c>

00:16:46.470 --> 00:16:46.480 align:start position:0%
that runs on ipads iphones and most
 

00:16:46.480 --> 00:16:48.790 align:start position:0%
that runs on ipads iphones and most
mobile<00:16:46.800><c> apple</c><00:16:47.040><c> devices</c><00:16:47.920><c> so</c><00:16:48.160><c> you</c><00:16:48.320><c> know</c><00:16:48.480><c> reduced</c>

00:16:48.790 --> 00:16:48.800 align:start position:0%
mobile apple devices so you know reduced
 

00:16:48.800 --> 00:16:49.990 align:start position:0%
mobile apple devices so you know reduced
instruction<00:16:49.199><c> sets</c><00:16:49.519><c> are</c><00:16:49.680><c> present</c>

00:16:49.990 --> 00:16:50.000 align:start position:0%
instruction sets are present
 

00:16:50.000 --> 00:16:51.509 align:start position:0%
instruction sets are present
all<00:16:50.160><c> over</c><00:16:50.399><c> the</c><00:16:50.480><c> place</c><00:16:50.800><c> and</c><00:16:50.880><c> if</c><00:16:51.040><c> you're</c><00:16:51.120><c> looking</c>

00:16:51.509 --> 00:16:51.519 align:start position:0%
all over the place and if you're looking
 

00:16:51.519 --> 00:16:54.790 align:start position:0%
all over the place and if you're looking
for<00:16:52.160><c> a</c><00:16:52.399><c> risk</c><00:16:52.720><c> five</c><00:16:53.040><c> in</c><00:16:53.120><c> the</c><00:16:53.199><c> real</c><00:16:53.519><c> world</c>

00:16:54.790 --> 00:16:54.800 align:start position:0%
for a risk five in the real world
 

00:16:54.800 --> 00:16:58.069 align:start position:0%
for a risk five in the real world
uh<00:16:55.120><c> you</c><00:16:55.279><c> know</c><00:16:55.440><c> outside</c><00:16:55.839><c> of</c><00:16:55.920><c> your</c><00:16:56.240><c> qmu</c>

00:16:58.069 --> 00:16:58.079 align:start position:0%
uh you know outside of your qmu
 

00:16:58.079 --> 00:17:01.670 align:start position:0%
uh you know outside of your qmu
you'll<00:16:58.320><c> be</c><00:16:58.480><c> able</c><00:16:58.639><c> to</c><00:16:58.800><c> find</c><00:16:59.040><c> that</c><00:16:59.519><c> in</c><00:17:00.399><c> uh</c><00:17:00.959><c> like</c>

00:17:01.670 --> 00:17:01.680 align:start position:0%
you'll be able to find that in uh like
 

00:17:01.680 --> 00:17:05.270 align:start position:0%
you'll be able to find that in uh like
integrated<00:17:02.839><c> devices</c><00:17:03.839><c> so</c><00:17:04.240><c> it</c><00:17:04.400><c> is</c><00:17:04.640><c> present</c>

00:17:05.270 --> 00:17:05.280 align:start position:0%
integrated devices so it is present
 

00:17:05.280 --> 00:17:07.029 align:start position:0%
integrated devices so it is present
it's<00:17:05.520><c> not</c><00:17:05.760><c> as</c><00:17:06.160><c> it's</c><00:17:06.319><c> certainly</c><00:17:06.640><c> not</c><00:17:06.799><c> as</c>

00:17:07.029 --> 00:17:07.039 align:start position:0%
it's not as it's certainly not as
 

00:17:07.039 --> 00:17:10.230 align:start position:0%
it's not as it's certainly not as
ubiquitous<00:17:07.839><c> as</c><00:17:08.000><c> something</c><00:17:08.319><c> like</c><00:17:08.839><c> x8664</c>

00:17:10.230 --> 00:17:10.240 align:start position:0%
ubiquitous as something like x8664
 

00:17:10.240 --> 00:17:13.350 align:start position:0%
ubiquitous as something like x8664
but<00:17:10.799><c> it's</c><00:17:11.039><c> it's</c><00:17:11.280><c> uh</c><00:17:12.480><c> yes</c><00:17:12.799><c> i</c>

00:17:13.350 --> 00:17:13.360 align:start position:0%
but it's it's uh yes i
 

00:17:13.360 --> 00:17:15.669 align:start position:0%
but it's it's uh yes i
yes<00:17:13.679><c> i</c><00:17:13.760><c> think</c><00:17:14.000><c> apple</c><00:17:14.319><c> is</c><00:17:14.720><c> as</c><00:17:15.039><c> lucas</c><00:17:15.360><c> just</c><00:17:15.520><c> said</c>

00:17:15.669 --> 00:17:15.679 align:start position:0%
yes i think apple is as lucas just said
 

00:17:15.679 --> 00:17:18.230 align:start position:0%
yes i think apple is as lucas just said
in<00:17:15.760><c> the</c><00:17:15.839><c> chat</c><00:17:16.079><c> i</c><00:17:16.160><c> think</c><00:17:16.319><c> apple</c><00:17:16.720><c> is</c><00:17:16.880><c> moving</c><00:17:17.839><c> max</c>

00:17:18.230 --> 00:17:18.240 align:start position:0%
in the chat i think apple is moving max
 

00:17:18.240 --> 00:17:20.549 align:start position:0%
in the chat i think apple is moving max
to<00:17:18.559><c> arm</c><00:17:18.959><c> i</c><00:17:19.039><c> believe</c><00:17:19.280><c> that's</c><00:17:19.520><c> also</c><00:17:19.839><c> the</c><00:17:19.919><c> case</c>

00:17:20.549 --> 00:17:20.559 align:start position:0%
to arm i believe that's also the case
 

00:17:20.559 --> 00:17:21.829 align:start position:0%
to arm i believe that's also the case
there's<00:17:20.880><c> been</c><00:17:21.120><c> in</c><00:17:21.199><c> the</c><00:17:21.280><c> last</c><00:17:21.520><c> few</c><00:17:21.679><c> years</c>

00:17:21.829 --> 00:17:21.839 align:start position:0%
there's been in the last few years
 

00:17:21.839 --> 00:17:23.189 align:start position:0%
there's been in the last few years
there's<00:17:21.919><c> definitely</c><00:17:22.160><c> been</c><00:17:22.400><c> a</c><00:17:22.480><c> push</c><00:17:22.720><c> towards</c>

00:17:23.189 --> 00:17:23.199 align:start position:0%
there's definitely been a push towards
 

00:17:23.199 --> 00:17:25.909 align:start position:0%
there's definitely been a push towards
reduced<00:17:23.600><c> instruction</c><00:17:24.079><c> sets</c>

00:17:25.909 --> 00:17:25.919 align:start position:0%
reduced instruction sets
 

00:17:25.919 --> 00:17:28.710 align:start position:0%
reduced instruction sets
given<00:17:26.559><c> given</c><00:17:26.959><c> how</c><00:17:27.280><c> big</c><00:17:27.520><c> the</c><00:17:27.760><c> intel</c><00:17:28.079><c> isa</c><00:17:28.559><c> has</c>

00:17:28.710 --> 00:17:28.720 align:start position:0%
given given how big the intel isa has
 

00:17:28.720 --> 00:17:29.430 align:start position:0%
given given how big the intel isa has
gotten

00:17:29.430 --> 00:17:29.440 align:start position:0%
gotten
 

00:17:29.440 --> 00:17:31.510 align:start position:0%
gotten
and<00:17:29.520><c> the</c><00:17:29.679><c> reason</c><00:17:29.919><c> why</c><00:17:30.240><c> intel's</c><00:17:30.559><c> isa</c><00:17:30.960><c> is</c><00:17:31.120><c> so</c><00:17:31.280><c> big</c>

00:17:31.510 --> 00:17:31.520 align:start position:0%
and the reason why intel's isa is so big
 

00:17:31.520 --> 00:17:33.190 align:start position:0%
and the reason why intel's isa is so big
is<00:17:31.600><c> because</c><00:17:31.840><c> they're</c>

00:17:33.190 --> 00:17:33.200 align:start position:0%
is because they're
 

00:17:33.200 --> 00:17:34.310 align:start position:0%
is because they're
very<00:17:33.360><c> concerned</c><00:17:33.760><c> with</c><00:17:33.919><c> backwards</c>

00:17:34.310 --> 00:17:34.320 align:start position:0%
very concerned with backwards
 

00:17:34.320 --> 00:17:36.789 align:start position:0%
very concerned with backwards
compatibility<00:17:35.200><c> so</c><00:17:35.520><c> if</c><00:17:35.679><c> you</c><00:17:35.919><c> write</c>

00:17:36.789 --> 00:17:36.799 align:start position:0%
compatibility so if you write
 

00:17:36.799 --> 00:17:39.110 align:start position:0%
compatibility so if you write
you<00:17:36.880><c> know</c><00:17:37.039><c> a</c><00:17:37.200><c> modern</c><00:17:37.679><c> intel</c><00:17:38.240><c> processor</c><00:17:38.880><c> can</c>

00:17:39.110 --> 00:17:39.120 align:start position:0%
you know a modern intel processor can
 

00:17:39.120 --> 00:17:39.990 align:start position:0%
you know a modern intel processor can
run<00:17:39.440><c> the</c><00:17:39.600><c> same</c>

00:17:39.990 --> 00:17:40.000 align:start position:0%
run the same
 

00:17:40.000 --> 00:17:42.870 align:start position:0%
run the same
instructions<00:17:41.200><c> that</c><00:17:41.679><c> intel</c><00:17:42.080><c> code</c><00:17:42.480><c> from</c><00:17:42.799><c> you</c>

00:17:42.870 --> 00:17:42.880 align:start position:0%
instructions that intel code from you
 

00:17:42.880 --> 00:17:43.430 align:start position:0%
instructions that intel code from you
know

00:17:43.430 --> 00:17:43.440 align:start position:0%
know
 

00:17:43.440 --> 00:17:46.310 align:start position:0%
know
30<00:17:43.760><c> 40</c><00:17:44.160><c> years</c><00:17:44.400><c> ago</c><00:17:45.200><c> was</c><00:17:45.360><c> written</c><00:17:45.679><c> in</c><00:17:46.000><c> so</c><00:17:46.160><c> they</c>

00:17:46.310 --> 00:17:46.320 align:start position:0%
30 40 years ago was written in so they
 

00:17:46.320 --> 00:17:48.150 align:start position:0%
30 40 years ago was written in so they
don't<00:17:46.559><c> really</c><00:17:46.880><c> deprecate</c><00:17:47.440><c> any</c><00:17:47.600><c> instruction</c>

00:17:48.150 --> 00:17:48.160 align:start position:0%
don't really deprecate any instruction
 

00:17:48.160 --> 00:17:49.350 align:start position:0%
don't really deprecate any instruction
so<00:17:48.320><c> that</c><00:17:48.400><c> they</c><00:17:48.559><c> maintain</c><00:17:48.960><c> backwards</c>

00:17:49.350 --> 00:17:49.360 align:start position:0%
so that they maintain backwards
 

00:17:49.360 --> 00:17:50.310 align:start position:0%
so that they maintain backwards
compatibility

00:17:50.310 --> 00:17:50.320 align:start position:0%
compatibility
 

00:17:50.320 --> 00:17:52.549 align:start position:0%
compatibility
and<00:17:50.559><c> risk</c><00:17:50.799><c> five</c><00:17:51.039><c> is</c><00:17:51.200><c> more</c><00:17:51.440><c> modern</c><00:17:52.320><c> so</c><00:17:52.400><c> that's</c>

00:17:52.549 --> 00:17:52.559 align:start position:0%
and risk five is more modern so that's
 

00:17:52.559 --> 00:17:55.190 align:start position:0%
and risk five is more modern so that's
not<00:17:52.720><c> a</c><00:17:52.799><c> worry</c><00:17:53.039><c> risk</c><00:17:53.280><c> five</c><00:17:53.600><c> is</c><00:17:53.679><c> also</c><00:17:53.919><c> so</c><00:17:54.080><c> if</c><00:17:54.320><c> we</c>

00:17:55.190 --> 00:17:55.200 align:start position:0%
not a worry risk five is also so if we
 

00:17:55.200 --> 00:17:58.150 align:start position:0%
not a worry risk five is also so if we
jump<00:17:55.440><c> back</c><00:17:55.679><c> to</c><00:17:55.760><c> those</c><00:17:56.080><c> manuals</c><00:17:57.440><c> risk</c><00:17:57.760><c> five</c><00:17:58.000><c> is</c>

00:17:58.150 --> 00:17:58.160 align:start position:0%
jump back to those manuals risk five is
 

00:17:58.160 --> 00:18:01.110 align:start position:0%
jump back to those manuals risk five is
unique<00:17:58.559><c> in</c><00:17:58.720><c> that</c><00:17:58.880><c> it's</c><00:17:59.039><c> divided</c><00:17:59.679><c> we</c><00:17:59.919><c> have</c>

00:18:01.110 --> 00:18:01.120 align:start position:0%
unique in that it's divided we have
 

00:18:01.120 --> 00:18:02.390 align:start position:0%
unique in that it's divided we have
what's<00:18:01.360><c> called</c><00:18:01.520><c> the</c><00:18:01.679><c> base</c><00:18:02.000><c> integer</c>

00:18:02.390 --> 00:18:02.400 align:start position:0%
what's called the base integer
 

00:18:02.400 --> 00:18:04.549 align:start position:0%
what's called the base integer
instruction<00:18:03.039><c> set</c><00:18:03.360><c> which</c><00:18:03.679><c> all</c><00:18:03.919><c> risk</c><00:18:04.240><c> five</c>

00:18:04.549 --> 00:18:04.559 align:start position:0%
instruction set which all risk five
 

00:18:04.559 --> 00:18:06.070 align:start position:0%
instruction set which all risk five
processors

00:18:06.070 --> 00:18:06.080 align:start position:0%
processors
 

00:18:06.080 --> 00:18:09.029 align:start position:0%
processors
uh<00:18:07.280><c> if</c><00:18:07.440><c> we</c><00:18:07.520><c> have</c><00:18:07.760><c> fifth</c><00:18:08.000><c> so</c><00:18:08.160><c> gabriel</c><00:18:08.720><c> asks</c><00:18:08.960><c> in</c>

00:18:09.029 --> 00:18:09.039 align:start position:0%
uh if we have fifth so gabriel asks in
 

00:18:09.039 --> 00:18:10.870 align:start position:0%
uh if we have fifth so gabriel asks in
the<00:18:09.120><c> chat</c><00:18:09.360><c> if</c><00:18:09.440><c> we</c><00:18:09.600><c> have</c><00:18:09.679><c> 15</c><00:18:10.080><c> 000</c><00:18:10.320><c> instructions</c>

00:18:10.870 --> 00:18:10.880 align:start position:0%
the chat if we have 15 000 instructions
 

00:18:10.880 --> 00:18:12.549 align:start position:0%
the chat if we have 15 000 instructions
is<00:18:11.039><c> it</c><00:18:11.200><c> nearly</c><00:18:11.520><c> impossible</c><00:18:12.000><c> to</c><00:18:12.080><c> efficiently</c>

00:18:12.549 --> 00:18:12.559 align:start position:0%
is it nearly impossible to efficiently
 

00:18:12.559 --> 00:18:13.669 align:start position:0%
is it nearly impossible to efficiently
pipeline<00:18:13.039><c> them</c>

00:18:13.669 --> 00:18:13.679 align:start position:0%
pipeline them
 

00:18:13.679 --> 00:18:15.590 align:start position:0%
pipeline them
why<00:18:13.840><c> do</c><00:18:14.000><c> we</c><00:18:14.080><c> need</c><00:18:14.240><c> so</c><00:18:14.400><c> many</c><00:18:14.640><c> i</c><00:18:15.120><c> like</c><00:18:15.360><c> i</c><00:18:15.440><c> was</c>

00:18:15.590 --> 00:18:15.600 align:start position:0%
why do we need so many i like i was
 

00:18:15.600 --> 00:18:17.110 align:start position:0%
why do we need so many i like i was
saying<00:18:15.840><c> we</c><00:18:16.000><c> need</c><00:18:16.160><c> so</c><00:18:16.320><c> many</c><00:18:16.559><c> for</c><00:18:16.720><c> backwards</c>

00:18:17.110 --> 00:18:17.120 align:start position:0%
saying we need so many for backwards
 

00:18:17.120 --> 00:18:19.029 align:start position:0%
saying we need so many for backwards
compatibility<00:18:17.760><c> reasons</c><00:18:18.240><c> it's</c><00:18:18.480><c> up</c><00:18:18.559><c> to</c><00:18:18.720><c> you</c><00:18:18.880><c> to</c>

00:18:19.029 --> 00:18:19.039 align:start position:0%
compatibility reasons it's up to you to
 

00:18:19.039 --> 00:18:20.870 align:start position:0%
compatibility reasons it's up to you to
decide<00:18:19.440><c> you</c><00:18:19.520><c> know</c><00:18:19.760><c> whether</c><00:18:20.080><c> you</c>

00:18:20.870 --> 00:18:20.880 align:start position:0%
decide you know whether you
 

00:18:20.880 --> 00:18:22.390 align:start position:0%
decide you know whether you
think<00:18:21.039><c> that</c><00:18:21.200><c> that's</c><00:18:21.600><c> super</c><00:18:21.919><c> important</c><00:18:22.240><c> but</c>

00:18:22.390 --> 00:18:22.400 align:start position:0%
think that that's super important but
 

00:18:22.400 --> 00:18:24.390 align:start position:0%
think that that's super important but
many<00:18:22.640><c> of</c><00:18:22.799><c> those</c><00:18:23.039><c> instructions</c><00:18:23.840><c> i</c><00:18:23.919><c> think</c><00:18:24.080><c> a</c><00:18:24.160><c> ton</c>

00:18:24.390 --> 00:18:24.400 align:start position:0%
many of those instructions i think a ton
 

00:18:24.400 --> 00:18:25.830 align:start position:0%
many of those instructions i think a ton
of<00:18:24.480><c> them</c><00:18:24.640><c> are</c><00:18:24.720><c> also</c>

00:18:25.830 --> 00:18:25.840 align:start position:0%
of them are also
 

00:18:25.840 --> 00:18:27.990 align:start position:0%
of them are also
eaten<00:18:26.160><c> up</c><00:18:26.320><c> by</c><00:18:26.559><c> cmd</c><00:18:27.120><c> instructions</c><00:18:27.679><c> which</c><00:18:27.919><c> are</c>

00:18:27.990 --> 00:18:28.000 align:start position:0%
eaten up by cmd instructions which are
 

00:18:28.000 --> 00:18:28.870 align:start position:0%
eaten up by cmd instructions which are
their<00:18:28.240><c> own</c>

00:18:28.870 --> 00:18:28.880 align:start position:0%
their own
 

00:18:28.880 --> 00:18:32.310 align:start position:0%
their own
kind<00:18:29.120><c> of</c><00:18:29.200><c> special</c><00:18:29.679><c> class</c><00:18:30.080><c> of</c><00:18:30.160><c> things</c><00:18:31.840><c> um</c>

00:18:32.310 --> 00:18:32.320 align:start position:0%
kind of special class of things um
 

00:18:32.320 --> 00:18:34.870 align:start position:0%
kind of special class of things um
you<00:18:32.480><c> won't</c><00:18:33.120><c> i</c><00:18:33.440><c> i've</c><00:18:34.080><c> never</c><00:18:34.320><c> seen</c><00:18:34.559><c> intel</c>

00:18:34.870 --> 00:18:34.880 align:start position:0%
you won't i i've never seen intel
 

00:18:34.880 --> 00:18:36.710 align:start position:0%
you won't i i've never seen intel
assembly<00:18:35.280><c> code</c><00:18:35.520><c> that</c><00:18:35.600><c> makes</c><00:18:35.840><c> full</c><00:18:36.080><c> uses</c>

00:18:36.710 --> 00:18:36.720 align:start position:0%
assembly code that makes full uses
 

00:18:36.720 --> 00:18:38.470 align:start position:0%
assembly code that makes full uses
full<00:18:36.960><c> usage</c><00:18:37.440><c> out</c><00:18:37.600><c> of</c><00:18:37.679><c> the</c><00:18:37.840><c> 15</c><00:18:38.240><c> 000</c>

00:18:38.470 --> 00:18:38.480 align:start position:0%
full usage out of the 15 000
 

00:18:38.480 --> 00:18:40.630 align:start position:0%
full usage out of the 15 000
instructions<00:18:38.960><c> but</c><00:18:39.120><c> mostly</c><00:18:39.440><c> this</c><00:18:39.600><c> comes</c><00:18:39.919><c> from</c>

00:18:40.630 --> 00:18:40.640 align:start position:0%
instructions but mostly this comes from
 

00:18:40.640 --> 00:18:42.310 align:start position:0%
instructions but mostly this comes from
from<00:18:40.880><c> a</c><00:18:40.960><c> need</c><00:18:41.120><c> for</c><00:18:41.200><c> backwards</c><00:18:41.600><c> compatibility</c>

00:18:42.310 --> 00:18:42.320 align:start position:0%
from a need for backwards compatibility
 

00:18:42.320 --> 00:18:43.990 align:start position:0%
from a need for backwards compatibility
and<00:18:42.480><c> cmd</c><00:18:43.440><c> but</c>

00:18:43.990 --> 00:18:44.000 align:start position:0%
and cmd but
 

00:18:44.000 --> 00:18:46.070 align:start position:0%
and cmd but
like<00:18:44.240><c> i</c><00:18:44.320><c> was</c><00:18:44.400><c> saying</c><00:18:44.559><c> so</c><00:18:44.720><c> risk</c><00:18:45.039><c> five</c><00:18:45.360><c> has</c><00:18:45.840><c> uh</c>

00:18:46.070 --> 00:18:46.080 align:start position:0%
like i was saying so risk five has uh
 

00:18:46.080 --> 00:18:47.029 align:start position:0%
like i was saying so risk five has uh
what's<00:18:46.320><c> called</c><00:18:46.480><c> the</c><00:18:46.640><c> base</c>

00:18:47.029 --> 00:18:47.039 align:start position:0%
what's called the base
 

00:18:47.039 --> 00:18:50.150 align:start position:0%
what's called the base
integer<00:18:47.440><c> instruction</c><00:18:48.080><c> set</c><00:18:49.120><c> which</c><00:18:49.840><c> uh</c>

00:18:50.150 --> 00:18:50.160 align:start position:0%
integer instruction set which uh
 

00:18:50.160 --> 00:18:52.630 align:start position:0%
integer instruction set which uh
contains<00:18:50.720><c> all</c><00:18:50.960><c> of</c><00:18:51.120><c> the</c><00:18:51.840><c> normal</c><00:18:52.320><c> add</c><00:18:52.559><c> and</c>

00:18:52.630 --> 00:18:52.640 align:start position:0%
contains all of the normal add and
 

00:18:52.640 --> 00:18:53.669 align:start position:0%
contains all of the normal add and
multiply

00:18:53.669 --> 00:18:53.679 align:start position:0%
multiply
 

00:18:53.679 --> 00:18:56.710 align:start position:0%
multiply
things<00:18:54.799><c> and</c><00:18:54.960><c> then</c><00:18:55.280><c> processors</c><00:18:55.919><c> can</c><00:18:56.240><c> choose</c><00:18:56.559><c> to</c>

00:18:56.710 --> 00:18:56.720 align:start position:0%
things and then processors can choose to
 

00:18:56.720 --> 00:18:58.549 align:start position:0%
things and then processors can choose to
implement<00:18:57.120><c> a</c><00:18:57.200><c> number</c><00:18:57.520><c> of</c><00:18:57.760><c> other</c><00:18:58.000><c> modules</c>

00:18:58.549 --> 00:18:58.559 align:start position:0%
implement a number of other modules
 

00:18:58.559 --> 00:19:00.390 align:start position:0%
implement a number of other modules
which<00:18:58.799><c> you</c><00:18:58.880><c> can</c><00:18:59.120><c> see</c><00:18:59.280><c> along</c><00:18:59.600><c> the</c><00:18:59.760><c> side</c><00:19:00.000><c> here</c>

00:19:00.390 --> 00:19:00.400 align:start position:0%
which you can see along the side here
 

00:19:00.400 --> 00:19:02.470 align:start position:0%
which you can see along the side here
it's<00:19:00.480><c> probably</c><00:19:00.799><c> impossible</c><00:19:01.200><c> to</c><00:19:01.280><c> read</c><00:19:02.160><c> on</c><00:19:02.320><c> your</c>

00:19:02.470 --> 00:19:02.480 align:start position:0%
it's probably impossible to read on your
 

00:19:02.480 --> 00:19:03.909 align:start position:0%
it's probably impossible to read on your
screen<00:19:02.880><c> but</c><00:19:03.120><c> for</c><00:19:03.280><c> example</c>

00:19:03.909 --> 00:19:03.919 align:start position:0%
screen but for example
 

00:19:03.919 --> 00:19:06.150 align:start position:0%
screen but for example
if<00:19:04.080><c> you</c><00:19:04.160><c> want</c><00:19:04.320><c> a</c><00:19:04.480><c> processor</c><00:19:05.520><c> you</c><00:19:05.600><c> know</c><00:19:05.840><c> that</c>

00:19:06.150 --> 00:19:06.160 align:start position:0%
if you want a processor you know that
 

00:19:06.160 --> 00:19:07.830 align:start position:0%
if you want a processor you know that
supports<00:19:06.640><c> standard</c><00:19:06.960><c> extension</c><00:19:07.360><c> for</c><00:19:07.520><c> single</c>

00:19:07.830 --> 00:19:07.840 align:start position:0%
supports standard extension for single
 

00:19:07.840 --> 00:19:09.430 align:start position:0%
supports standard extension for single
precision<00:19:08.240><c> floating</c><00:19:08.720><c> point</c>

00:19:09.430 --> 00:19:09.440 align:start position:0%
precision floating point
 

00:19:09.440 --> 00:19:12.150 align:start position:0%
precision floating point
then<00:19:09.600><c> you</c><00:19:09.760><c> can</c><00:19:09.919><c> include</c><00:19:10.240><c> the</c><00:19:10.400><c> f</c><00:19:10.559><c> module</c><00:19:12.000><c> and</c>

00:19:12.150 --> 00:19:12.160 align:start position:0%
then you can include the f module and
 

00:19:12.160 --> 00:19:13.909 align:start position:0%
then you can include the f module and
this<00:19:12.320><c> makes</c><00:19:12.559><c> it</c><00:19:12.720><c> easier</c><00:19:13.120><c> for</c><00:19:13.280><c> risk</c><00:19:13.520><c> five</c><00:19:13.760><c> to</c>

00:19:13.909 --> 00:19:13.919 align:start position:0%
this makes it easier for risk five to
 

00:19:13.919 --> 00:19:14.630 align:start position:0%
this makes it easier for risk five to
support

00:19:14.630 --> 00:19:14.640 align:start position:0%
support
 

00:19:14.640 --> 00:19:18.070 align:start position:0%
support
um<00:19:15.120><c> backwards</c><00:19:15.600><c> compatibility</c><00:19:16.400><c> because</c><00:19:17.360><c> if</c><00:19:17.600><c> uh</c>

00:19:18.070 --> 00:19:18.080 align:start position:0%
um backwards compatibility because if uh
 

00:19:18.080 --> 00:19:19.750 align:start position:0%
um backwards compatibility because if uh
you<00:19:18.240><c> can</c><00:19:18.400><c> just</c><00:19:18.640><c> say</c><00:19:18.960><c> you</c><00:19:19.039><c> know</c><00:19:19.200><c> what</c><00:19:19.440><c> set</c><00:19:19.600><c> of</c>

00:19:19.750 --> 00:19:19.760 align:start position:0%
you can just say you know what set of
 

00:19:19.760 --> 00:19:22.230 align:start position:0%
you can just say you know what set of
the<00:19:19.840><c> modules</c><00:19:20.320><c> do</c><00:19:20.480><c> i</c><00:19:20.720><c> include</c><00:19:21.200><c> and</c><00:19:21.360><c> support</c>

00:19:22.230 --> 00:19:22.240 align:start position:0%
the modules do i include and support
 

00:19:22.240 --> 00:19:25.350 align:start position:0%
the modules do i include and support
and<00:19:22.799><c> the</c><00:19:22.960><c> compiler</c><00:19:23.520><c> can</c><00:19:23.840><c> choose</c><00:19:24.240><c> then</c><00:19:25.200><c> the</c>

00:19:25.350 --> 00:19:25.360 align:start position:0%
and the compiler can choose then the
 

00:19:25.360 --> 00:19:27.270 align:start position:0%
and the compiler can choose then the
compiler<00:19:25.840><c> can</c><00:19:26.000><c> say</c><00:19:26.240><c> okay</c><00:19:26.559><c> you</c><00:19:26.640><c> know</c>

00:19:27.270 --> 00:19:27.280 align:start position:0%
compiler can say okay you know
 

00:19:27.280 --> 00:19:28.950 align:start position:0%
compiler can say okay you know
this<00:19:27.600><c> processor</c><00:19:28.080><c> is</c><00:19:28.160><c> telling</c><00:19:28.400><c> me</c><00:19:28.559><c> it</c><00:19:28.640><c> supports</c>

00:19:28.950 --> 00:19:28.960 align:start position:0%
this processor is telling me it supports
 

00:19:28.960 --> 00:19:30.789 align:start position:0%
this processor is telling me it supports
these<00:19:29.200><c> modules</c><00:19:29.600><c> so</c><00:19:29.760><c> i</c><00:19:29.840><c> can</c><00:19:30.000><c> only</c><00:19:30.240><c> compile</c><00:19:30.640><c> this</c>

00:19:30.789 --> 00:19:30.799 align:start position:0%
these modules so i can only compile this
 

00:19:30.799 --> 00:19:33.669 align:start position:0%
these modules so i can only compile this
code<00:19:31.039><c> with</c><00:19:31.200><c> these</c><00:19:31.440><c> modules</c>

00:19:33.669 --> 00:19:33.679 align:start position:0%
code with these modules
 

00:19:33.679 --> 00:19:36.390 align:start position:0%
code with these modules
okay<00:19:34.080><c> bibx</c><00:19:34.640><c> says</c><00:19:35.520><c> it</c><00:19:35.679><c> seems</c><00:19:36.000><c> that</c><00:19:36.080><c> the</c><00:19:36.240><c> only</c>

00:19:36.390 --> 00:19:36.400 align:start position:0%
okay bibx says it seems that the only
 

00:19:36.400 --> 00:19:38.390 align:start position:0%
okay bibx says it seems that the only
advantage<00:19:36.799><c> of</c><00:19:36.880><c> using</c><00:19:37.200><c> x86</c><00:19:37.840><c> instead</c><00:19:38.080><c> of</c><00:19:38.160><c> risk</c>

00:19:38.390 --> 00:19:38.400 align:start position:0%
advantage of using x86 instead of risk
 

00:19:38.400 --> 00:19:39.430 align:start position:0%
advantage of using x86 instead of risk
five<00:19:38.640><c> processors</c><00:19:39.039><c> is</c><00:19:39.120><c> the</c><00:19:39.280><c> kind</c><00:19:39.360><c> of</c>

00:19:39.430 --> 00:19:39.440 align:start position:0%
five processors is the kind of
 

00:19:39.440 --> 00:19:40.630 align:start position:0%
five processors is the kind of
performance<00:19:39.919><c> you</c><00:19:40.000><c> can</c><00:19:40.160><c> get</c>

00:19:40.630 --> 00:19:40.640 align:start position:0%
performance you can get
 

00:19:40.640 --> 00:19:42.549 align:start position:0%
performance you can get
however<00:19:41.039><c> that</c><00:19:41.200><c> performance</c><00:19:41.840><c> comes</c><00:19:42.160><c> as</c><00:19:42.240><c> a</c>

00:19:42.549 --> 00:19:42.559 align:start position:0%
however that performance comes as a
 

00:19:42.559 --> 00:19:43.990 align:start position:0%
however that performance comes as a
massive<00:19:42.960><c> cost</c><00:19:43.200><c> and</c><00:19:43.280><c> complexity</c><00:19:43.840><c> and</c>

00:19:43.990 --> 00:19:44.000 align:start position:0%
massive cost and complexity and
 

00:19:44.000 --> 00:19:45.270 align:start position:0%
massive cost and complexity and
potential<00:19:44.320><c> security</c>

00:19:45.270 --> 00:19:45.280 align:start position:0%
potential security
 

00:19:45.280 --> 00:19:46.870 align:start position:0%
potential security
my<00:19:45.520><c> question</c><00:19:45.840><c> is</c><00:19:46.000><c> why</c><00:19:46.160><c> are</c><00:19:46.240><c> we</c><00:19:46.400><c> still</c><00:19:46.559><c> using</c>

00:19:46.870 --> 00:19:46.880 align:start position:0%
my question is why are we still using
 

00:19:46.880 --> 00:19:48.789 align:start position:0%
my question is why are we still using
x86<00:19:47.679><c> instead</c><00:19:47.919><c> of</c><00:19:48.000><c> moving</c><00:19:48.240><c> to</c><00:19:48.400><c> something</c><00:19:48.640><c> like</c>

00:19:48.789 --> 00:19:48.799 align:start position:0%
x86 instead of moving to something like
 

00:19:48.799 --> 00:19:49.990 align:start position:0%
x86 instead of moving to something like
risk<00:19:49.120><c> five</c>

00:19:49.990 --> 00:19:50.000 align:start position:0%
risk five
 

00:19:50.000 --> 00:19:52.710 align:start position:0%
risk five
uh<00:19:50.799><c> well</c><00:19:51.280><c> the</c><00:19:51.440><c> big</c><00:19:52.080><c> answer</c><00:19:52.320><c> is</c><00:19:52.400><c> that</c><00:19:52.559><c> is</c><00:19:52.640><c> the</c>

00:19:52.710 --> 00:19:52.720 align:start position:0%
uh well the big answer is that is the
 

00:19:52.720 --> 00:19:54.710 align:start position:0%
uh well the big answer is that is the
world<00:19:52.960><c> has</c><00:19:53.200><c> run</c><00:19:53.440><c> on</c><00:19:53.600><c> x86</c>

00:19:54.710 --> 00:19:54.720 align:start position:0%
world has run on x86
 

00:19:54.720 --> 00:19:57.669 align:start position:0%
world has run on x86
for<00:19:55.600><c> i</c><00:19:55.919><c> i</c><00:19:56.160><c> don't</c><00:19:56.400><c> have</c><00:19:56.640><c> a</c><00:19:56.799><c> great</c><00:19:57.120><c> answer</c><00:19:57.440><c> for</c>

00:19:57.669 --> 00:19:57.679 align:start position:0%
for i i don't have a great answer for
 

00:19:57.679 --> 00:19:58.390 align:start position:0%
for i i don't have a great answer for
why

00:19:58.390 --> 00:19:58.400 align:start position:0%
why
 

00:19:58.400 --> 00:20:01.990 align:start position:0%
why
risk<00:19:58.640><c> five</c><00:19:58.880><c> is</c><00:19:58.960><c> pretty</c><00:19:59.200><c> modern</c><00:19:59.600><c> too</c><00:20:00.799><c> so</c>

00:20:01.990 --> 00:20:02.000 align:start position:0%
risk five is pretty modern too so
 

00:20:02.000 --> 00:20:04.310 align:start position:0%
risk five is pretty modern too so
the<00:20:02.159><c> world</c><00:20:02.480><c> as</c><00:20:02.640><c> a</c><00:20:02.720><c> whole</c><00:20:03.039><c> pretty</c><00:20:03.280><c> much</c><00:20:03.600><c> runs</c><00:20:04.080><c> on</c>

00:20:04.310 --> 00:20:04.320 align:start position:0%
the world as a whole pretty much runs on
 

00:20:04.320 --> 00:20:06.149 align:start position:0%
the world as a whole pretty much runs on
x86<00:20:05.120><c> so</c><00:20:05.360><c> if</c><00:20:05.440><c> you</c><00:20:05.600><c> suddenly</c>

00:20:06.149 --> 00:20:06.159 align:start position:0%
x86 so if you suddenly
 

00:20:06.159 --> 00:20:09.909 align:start position:0%
x86 so if you suddenly
start<00:20:07.120><c> converting</c><00:20:07.840><c> your</c><00:20:08.960><c> processors</c>

00:20:09.909 --> 00:20:09.919 align:start position:0%
start converting your processors
 

00:20:09.919 --> 00:20:13.990 align:start position:0%
start converting your processors
to<00:20:10.240><c> risk</c><00:20:10.640><c> five</c><00:20:11.120><c> you</c><00:20:11.679><c> run</c><00:20:11.919><c> the</c><00:20:12.080><c> risk</c><00:20:12.480><c> of</c><00:20:12.640><c> uh</c>

00:20:13.990 --> 00:20:14.000 align:start position:0%
to risk five you run the risk of uh
 

00:20:14.000 --> 00:20:16.230 align:start position:0%
to risk five you run the risk of uh
you<00:20:14.080><c> know</c><00:20:14.640><c> losing</c><00:20:15.039><c> support</c><00:20:15.520><c> for</c><00:20:15.679><c> a</c><00:20:15.760><c> bunch</c><00:20:16.000><c> of</c>

00:20:16.230 --> 00:20:16.240 align:start position:0%
you know losing support for a bunch of
 

00:20:16.240 --> 00:20:17.430 align:start position:0%
you know losing support for a bunch of
important<00:20:16.720><c> things</c>

00:20:17.430 --> 00:20:17.440 align:start position:0%
important things
 

00:20:17.440 --> 00:20:19.750 align:start position:0%
important things
also<00:20:17.760><c> there</c><00:20:18.000><c> are</c><00:20:18.240><c> like</c><00:20:18.640><c> intel</c><00:20:19.039><c> does</c><00:20:19.360><c> do</c>

00:20:19.750 --> 00:20:19.760 align:start position:0%
also there are like intel does do
 

00:20:19.760 --> 00:20:21.510 align:start position:0%
also there are like intel does do
interesting<00:20:20.320><c> things</c><00:20:20.720><c> within</c><00:20:21.200><c> their</c>

00:20:21.510 --> 00:20:21.520 align:start position:0%
interesting things within their
 

00:20:21.520 --> 00:20:22.789 align:start position:0%
interesting things within their
processors

00:20:22.789 --> 00:20:22.799 align:start position:0%
processors
 

00:20:22.799 --> 00:20:25.190 align:start position:0%
processors
it's<00:20:22.880><c> like</c><00:20:23.039><c> security</c><00:20:23.679><c> wise</c><00:20:24.640><c> there</c><00:20:24.880><c> are</c>

00:20:25.190 --> 00:20:25.200 align:start position:0%
it's like security wise there are
 

00:20:25.200 --> 00:20:27.350 align:start position:0%
it's like security wise there are
enclaves<00:20:25.840><c> and</c><00:20:26.080><c> intel</c><00:20:26.480><c> processors</c><00:20:27.200><c> and</c>

00:20:27.350 --> 00:20:27.360 align:start position:0%
enclaves and intel processors and
 

00:20:27.360 --> 00:20:28.789 align:start position:0%
enclaves and intel processors and
there's<00:20:27.600><c> things</c><00:20:27.840><c> that</c><00:20:28.080><c> um</c>

00:20:28.789 --> 00:20:28.799 align:start position:0%
there's things that um
 

00:20:28.799 --> 00:20:30.549 align:start position:0%
there's things that um
they've<00:20:29.039><c> been</c><00:20:29.200><c> doing</c><00:20:29.520><c> in</c><00:20:29.600><c> recent</c><00:20:30.000><c> years</c><00:20:30.320><c> to</c>

00:20:30.549 --> 00:20:30.559 align:start position:0%
they've been doing in recent years to
 

00:20:30.559 --> 00:20:32.710 align:start position:0%
they've been doing in recent years to
try<00:20:30.960><c> to</c><00:20:31.120><c> try</c><00:20:31.360><c> and</c><00:20:31.679><c> give</c><00:20:31.919><c> you</c><00:20:32.159><c> extra</c>

00:20:32.710 --> 00:20:32.720 align:start position:0%
try to try and give you extra
 

00:20:32.720 --> 00:20:35.430 align:start position:0%
try to try and give you extra
added<00:20:33.120><c> security</c><00:20:34.159><c> and</c><00:20:34.480><c> uh</c><00:20:34.799><c> some</c><00:20:35.039><c> of</c><00:20:35.200><c> those</c>

00:20:35.430 --> 00:20:35.440 align:start position:0%
added security and uh some of those
 

00:20:35.440 --> 00:20:37.110 align:start position:0%
added security and uh some of those
instructions<00:20:36.000><c> that</c><00:20:36.159><c> intel</c><00:20:36.480><c> does</c><00:20:36.720><c> implement</c>

00:20:37.110 --> 00:20:37.120 align:start position:0%
instructions that intel does implement
 

00:20:37.120 --> 00:20:38.789 align:start position:0%
instructions that intel does implement
which<00:20:37.360><c> are</c><00:20:37.600><c> hyper-specific</c>

00:20:38.789 --> 00:20:38.799 align:start position:0%
which are hyper-specific
 

00:20:38.799 --> 00:20:41.830 align:start position:0%
which are hyper-specific
can<00:20:38.960><c> be</c><00:20:39.280><c> really</c><00:20:39.600><c> efficient</c><00:20:40.159><c> for</c><00:20:40.640><c> certain</c>

00:20:41.830 --> 00:20:41.840 align:start position:0%
can be really efficient for certain
 

00:20:41.840 --> 00:20:44.470 align:start position:0%
can be really efficient for certain
computations<00:20:43.200><c> uh</c><00:20:43.520><c> and</c><00:20:43.600><c> so</c><00:20:43.760><c> they</c><00:20:43.919><c> have</c><00:20:44.080><c> so</c><00:20:44.240><c> many</c>

00:20:44.470 --> 00:20:44.480 align:start position:0%
computations uh and so they have so many
 

00:20:44.480 --> 00:20:46.710 align:start position:0%
computations uh and so they have so many
instructions<00:20:45.039><c> that</c><00:20:45.120><c> there's</c><00:20:45.440><c> often</c><00:20:45.760><c> you</c><00:20:45.919><c> know</c>

00:20:46.710 --> 00:20:46.720 align:start position:0%
instructions that there's often you know
 

00:20:46.720 --> 00:20:48.789 align:start position:0%
instructions that there's often you know
a<00:20:46.880><c> perfect</c><00:20:47.280><c> instruction</c><00:20:47.840><c> for</c><00:20:48.080><c> a</c><00:20:48.159><c> situation</c>

00:20:48.789 --> 00:20:48.799 align:start position:0%
a perfect instruction for a situation
 

00:20:48.799 --> 00:20:50.870 align:start position:0%
a perfect instruction for a situation
that<00:20:48.960><c> may</c><00:20:49.120><c> be</c><00:20:49.280><c> more</c><00:20:49.520><c> efficient</c><00:20:50.000><c> than</c>

00:20:50.870 --> 00:20:50.880 align:start position:0%
that may be more efficient than
 

00:20:50.880 --> 00:20:54.070 align:start position:0%
that may be more efficient than
than<00:20:51.520><c> what</c><00:20:51.679><c> exists</c><00:20:52.080><c> within</c><00:20:52.400><c> risk</c><00:20:52.640><c> five</c><00:20:53.760><c> but</c><00:20:54.000><c> a</c>

00:20:54.070 --> 00:20:54.080 align:start position:0%
than what exists within risk five but a
 

00:20:54.080 --> 00:20:55.669 align:start position:0%
than what exists within risk five but a
more<00:20:54.320><c> practical</c><00:20:54.799><c> answer</c><00:20:55.039><c> is</c><00:20:55.120><c> that</c><00:20:55.200><c> risk</c><00:20:55.440><c> five</c>

00:20:55.669 --> 00:20:55.679 align:start position:0%
more practical answer is that risk five
 

00:20:55.679 --> 00:20:57.350 align:start position:0%
more practical answer is that risk five
is<00:20:55.760><c> relatively</c><00:20:56.320><c> new</c><00:20:56.559><c> and</c><00:20:56.640><c> we</c><00:20:56.799><c> just</c><00:20:56.960><c> don't</c>

00:20:57.350 --> 00:20:57.360 align:start position:0%
is relatively new and we just don't
 

00:20:57.360 --> 00:20:58.630 align:start position:0%
is relatively new and we just don't
you<00:20:57.440><c> know</c><00:20:57.600><c> nobody's</c><00:20:58.000><c> really</c><00:20:58.240><c> making</c>

00:20:58.630 --> 00:20:58.640 align:start position:0%
you know nobody's really making
 

00:20:58.640 --> 00:21:00.310 align:start position:0%
you know nobody's really making
processors<00:20:59.280><c> for</c><00:20:59.440><c> personal</c><00:20:59.760><c> computers</c><00:21:00.240><c> i</c>

00:21:00.310 --> 00:21:00.320 align:start position:0%
processors for personal computers i
 

00:21:00.320 --> 00:21:01.110 align:start position:0%
processors for personal computers i
think<00:21:00.559><c> the</c>

00:21:01.110 --> 00:21:01.120 align:start position:0%
think the
 

00:21:01.120 --> 00:21:04.070 align:start position:0%
think the
sci<00:21:01.360><c> 5</c><00:21:01.600><c> announcement</c><00:21:02.080><c> is</c><00:21:02.400><c> super</c><00:21:02.799><c> recent</c><00:21:03.520><c> um</c>

00:21:04.070 --> 00:21:04.080 align:start position:0%
sci 5 announcement is super recent um
 

00:21:04.080 --> 00:21:04.630 align:start position:0%
sci 5 announcement is super recent um
and

00:21:04.630 --> 00:21:04.640 align:start position:0%
and
 

00:21:04.640 --> 00:21:06.070 align:start position:0%
and
they're<00:21:04.880><c> kind</c><00:21:05.039><c> of</c><00:21:05.120><c> the</c><00:21:05.280><c> first</c><00:21:05.600><c> people</c><00:21:05.840><c> to</c><00:21:06.000><c> be</c>

00:21:06.070 --> 00:21:06.080 align:start position:0%
they're kind of the first people to be
 

00:21:06.080 --> 00:21:08.870 align:start position:0%
they're kind of the first people to be
doing<00:21:06.320><c> that</c><00:21:06.640><c> so</c><00:21:06.880><c> on</c><00:21:07.039><c> a</c><00:21:07.120><c> practical</c><00:21:07.600><c> level</c>

00:21:08.870 --> 00:21:08.880 align:start position:0%
doing that so on a practical level
 

00:21:08.880 --> 00:21:10.950 align:start position:0%
doing that so on a practical level
that<00:21:09.280><c> and</c><00:21:09.520><c> the</c><00:21:09.760><c> inability</c><00:21:10.320><c> to</c><00:21:10.480><c> run</c><00:21:10.720><c> all</c><00:21:10.799><c> the</c>

00:21:10.950 --> 00:21:10.960 align:start position:0%
that and the inability to run all the
 

00:21:10.960 --> 00:21:12.870 align:start position:0%
that and the inability to run all the
software<00:21:11.360><c> design</c><00:21:11.679><c> for</c><00:21:11.840><c> intel</c>

00:21:12.870 --> 00:21:12.880 align:start position:0%
software design for intel
 

00:21:12.880 --> 00:21:17.270 align:start position:0%
software design for intel
is<00:21:13.600><c> is</c><00:21:13.760><c> my</c><00:21:14.000><c> best</c><00:21:14.840><c> answer</c>

00:21:17.270 --> 00:21:17.280 align:start position:0%
is is my best answer
 

00:21:17.280 --> 00:21:19.669 align:start position:0%
is is my best answer
so<00:21:17.440><c> we've</c><00:21:17.600><c> been</c><00:21:18.480><c> now</c><00:21:18.799><c> chatting</c><00:21:19.200><c> a</c><00:21:19.200><c> little</c><00:21:19.440><c> bit</c>

00:21:19.669 --> 00:21:19.679 align:start position:0%
so we've been now chatting a little bit
 

00:21:19.679 --> 00:21:22.870 align:start position:0%
so we've been now chatting a little bit
about<00:21:20.159><c> assembly</c><00:21:20.559><c> so</c><00:21:20.720><c> i</c><00:21:20.799><c> just</c><00:21:20.960><c> wanted</c><00:21:21.360><c> to</c>

00:21:22.870 --> 00:21:22.880 align:start position:0%
about assembly so i just wanted to
 

00:21:22.880 --> 00:21:26.630 align:start position:0%
about assembly so i just wanted to
take<00:21:23.120><c> a</c><00:21:23.200><c> look</c><00:21:23.520><c> at</c><00:21:23.760><c> some</c><00:21:24.159><c> actual</c><00:21:24.559><c> assembly</c><00:21:25.039><c> code</c>

00:21:26.630 --> 00:21:26.640 align:start position:0%
take a look at some actual assembly code
 

00:21:26.640 --> 00:21:29.990 align:start position:0%
take a look at some actual assembly code
so<00:21:26.960><c> here</c><00:21:27.440><c> is</c><00:21:29.120><c> uh</c><00:21:28.840><c> the</c>

00:21:29.990 --> 00:21:30.000 align:start position:0%
so here is uh the
 

00:21:30.000 --> 00:21:31.990 align:start position:0%
so here is uh the
c<00:21:30.320><c> code</c><00:21:30.559><c> for</c><00:21:30.799><c> what's</c><00:21:31.039><c> below</c><00:21:31.440><c> so</c><00:21:31.600><c> this</c><00:21:31.760><c> is</c><00:21:31.919><c> a</c>

00:21:31.990 --> 00:21:32.000 align:start position:0%
c code for what's below so this is a
 

00:21:32.000 --> 00:21:34.310 align:start position:0%
c code for what's below so this is a
simple<00:21:32.400><c> function</c><00:21:32.799><c> that</c><00:21:32.960><c> has</c><00:21:33.120><c> an</c><00:21:33.200><c> accumulator</c>

00:21:34.310 --> 00:21:34.320 align:start position:0%
simple function that has an accumulator
 

00:21:34.320 --> 00:21:37.669 align:start position:0%
simple function that has an accumulator
we<00:21:34.640><c> loop</c><00:21:35.039><c> from</c><00:21:35.440><c> zero</c><00:21:35.760><c> to</c><00:21:36.000><c> n</c><00:21:36.400><c> and</c><00:21:37.280><c> we</c>

00:21:37.669 --> 00:21:37.679 align:start position:0%
we loop from zero to n and we
 

00:21:37.679 --> 00:21:40.630 align:start position:0%
we loop from zero to n and we
sum<00:21:38.000><c> up</c><00:21:38.159><c> all</c><00:21:38.320><c> the</c><00:21:38.480><c> numbers</c><00:21:39.200><c> from</c><00:21:39.840><c> uh</c><00:21:40.080><c> from</c><00:21:40.320><c> zero</c>

00:21:40.630 --> 00:21:40.640 align:start position:0%
sum up all the numbers from uh from zero
 

00:21:40.640 --> 00:21:41.909 align:start position:0%
sum up all the numbers from uh from zero
to<00:21:40.720><c> n</c>

00:21:41.909 --> 00:21:41.919 align:start position:0%
to n
 

00:21:41.919 --> 00:21:44.950 align:start position:0%
to n
and<00:21:42.080><c> then</c><00:21:42.240><c> return</c><00:21:42.640><c> that</c><00:21:42.840><c> value</c><00:21:43.919><c> and</c><00:21:44.400><c> uh</c>

00:21:44.950 --> 00:21:44.960 align:start position:0%
and then return that value and uh
 

00:21:44.960 --> 00:21:46.470 align:start position:0%
and then return that value and uh
at<00:21:45.120><c> its</c><00:21:45.280><c> simplest</c><00:21:45.760><c> level</c><00:21:46.000><c> you</c><00:21:46.080><c> know</c><00:21:46.240><c> this</c><00:21:46.400><c> is</c>

00:21:46.470 --> 00:21:46.480 align:start position:0%
at its simplest level you know this is
 

00:21:46.480 --> 00:21:48.390 align:start position:0%
at its simplest level you know this is
the<00:21:46.720><c> easiest</c><00:21:47.120><c> kind</c><00:21:47.360><c> of</c><00:21:47.520><c> assembly</c><00:21:48.080><c> that</c><00:21:48.240><c> you</c>

00:21:48.390 --> 00:21:48.400 align:start position:0%
the easiest kind of assembly that you
 

00:21:48.400 --> 00:21:50.789 align:start position:0%
the easiest kind of assembly that you
can<00:21:48.559><c> get</c><00:21:48.880><c> out</c><00:21:49.039><c> of</c><00:21:49.200><c> compiling</c><00:21:49.679><c> that</c><00:21:49.919><c> program</c>

00:21:50.789 --> 00:21:50.799 align:start position:0%
can get out of compiling that program
 

00:21:50.799 --> 00:21:53.830 align:start position:0%
can get out of compiling that program
if<00:21:51.039><c> you</c><00:21:51.360><c> actually</c><00:21:51.919><c> go</c><00:21:52.400><c> into</c><00:21:53.360><c> your</c><00:21:53.679><c> own</c>

00:21:53.830 --> 00:21:53.840 align:start position:0%
if you actually go into your own
 

00:21:53.840 --> 00:21:55.350 align:start position:0%
if you actually go into your own
computer<00:21:54.400><c> and</c><00:21:54.559><c> you</c><00:21:54.720><c> write</c><00:21:54.880><c> the</c><00:21:55.120><c> c</c>

00:21:55.350 --> 00:21:55.360 align:start position:0%
computer and you write the c
 

00:21:55.360 --> 00:21:57.190 align:start position:0%
computer and you write the c
code<00:21:55.600><c> and</c><00:21:55.760><c> you</c><00:21:55.919><c> try</c><00:21:56.080><c> to</c><00:21:56.159><c> compile</c><00:21:56.640><c> it</c><00:21:56.799><c> you</c><00:21:57.039><c> will</c>

00:21:57.190 --> 00:21:57.200 align:start position:0%
code and you try to compile it you will
 

00:21:57.200 --> 00:21:58.470 align:start position:0%
code and you try to compile it you will
end<00:21:57.360><c> up</c><00:21:57.440><c> with</c><00:21:57.600><c> something</c>

00:21:58.470 --> 00:21:58.480 align:start position:0%
end up with something
 

00:21:58.480 --> 00:22:01.430 align:start position:0%
end up with something
that<00:21:58.720><c> likely</c><00:21:59.039><c> looks</c><00:21:59.760><c> quite</c><00:21:59.919><c> different</c><00:22:01.360><c> and</c>

00:22:01.430 --> 00:22:01.440 align:start position:0%
that likely looks quite different and
 

00:22:01.440 --> 00:22:03.350 align:start position:0%
that likely looks quite different and
that's<00:22:01.760><c> true</c><00:22:01.919><c> for</c><00:22:02.080><c> a</c><00:22:02.159><c> variety</c><00:22:02.640><c> of</c><00:22:02.720><c> reasons</c><00:22:03.200><c> we</c>

00:22:03.350 --> 00:22:03.360 align:start position:0%
that's true for a variety of reasons we
 

00:22:03.360 --> 00:22:03.909 align:start position:0%
that's true for a variety of reasons we
haven't

00:22:03.909 --> 00:22:03.919 align:start position:0%
haven't
 

00:22:03.919 --> 00:22:05.270 align:start position:0%
haven't
some<00:22:04.080><c> of</c><00:22:04.159><c> which</c><00:22:04.400><c> we'll</c><00:22:04.559><c> get</c><00:22:04.720><c> to</c><00:22:04.960><c> and</c><00:22:05.039><c> some</c><00:22:05.200><c> of</c>

00:22:05.270 --> 00:22:05.280 align:start position:0%
some of which we'll get to and some of
 

00:22:05.280 --> 00:22:07.110 align:start position:0%
some of which we'll get to and some of
which<00:22:05.520><c> are</c><00:22:05.600><c> compiler</c><00:22:06.080><c> specific</c>

00:22:07.110 --> 00:22:07.120 align:start position:0%
which are compiler specific
 

00:22:07.120 --> 00:22:10.470 align:start position:0%
which are compiler specific
so<00:22:07.520><c> modern</c><00:22:07.919><c> compilers</c><00:22:08.640><c> make</c><00:22:09.120><c> a</c><00:22:09.919><c> large</c><00:22:10.240><c> number</c>

00:22:10.470 --> 00:22:10.480 align:start position:0%
so modern compilers make a large number
 

00:22:10.480 --> 00:22:12.149 align:start position:0%
so modern compilers make a large number
of<00:22:10.840><c> optimizations</c>

00:22:12.149 --> 00:22:12.159 align:start position:0%
of optimizations
 

00:22:12.159 --> 00:22:15.430 align:start position:0%
of optimizations
um<00:22:13.520><c> within</c><00:22:13.919><c> when</c><00:22:14.080><c> they</c><00:22:14.320><c> compile</c><00:22:14.799><c> your</c><00:22:14.960><c> c2</c>

00:22:15.430 --> 00:22:15.440 align:start position:0%
um within when they compile your c2
 

00:22:15.440 --> 00:22:16.789 align:start position:0%
um within when they compile your c2
assembly<00:22:15.919><c> and</c><00:22:16.000><c> so</c><00:22:16.240><c> your</c><00:22:16.400><c> assembly</c>

00:22:16.789 --> 00:22:16.799 align:start position:0%
assembly and so your assembly
 

00:22:16.799 --> 00:22:18.390 align:start position:0%
assembly and so your assembly
instructions<00:22:17.280><c> may</c><00:22:17.440><c> look</c><00:22:17.679><c> different</c>

00:22:18.390 --> 00:22:18.400 align:start position:0%
instructions may look different
 

00:22:18.400 --> 00:22:20.630 align:start position:0%
instructions may look different
for<00:22:18.559><c> instance</c><00:22:19.520><c> while</c><00:22:19.760><c> you're</c><00:22:20.000><c> debugging</c><00:22:20.559><c> in</c>

00:22:20.630 --> 00:22:20.640 align:start position:0%
for instance while you're debugging in
 

00:22:20.640 --> 00:22:22.390 align:start position:0%
for instance while you're debugging in
gdv<00:22:21.200><c> you</c><00:22:21.280><c> may</c><00:22:21.520><c> come</c><00:22:21.679><c> across</c><00:22:22.000><c> something</c><00:22:22.320><c> that</c>

00:22:22.390 --> 00:22:22.400 align:start position:0%
gdv you may come across something that
 

00:22:22.400 --> 00:22:23.350 align:start position:0%
gdv you may come across something that
tells<00:22:22.640><c> you</c><00:22:22.799><c> that</c><00:22:22.960><c> it's</c>

00:22:23.350 --> 00:22:23.360 align:start position:0%
tells you that it's
 

00:22:23.360 --> 00:22:26.149 align:start position:0%
tells you that it's
some<00:22:23.600><c> variable</c><00:22:24.080><c> has</c><00:22:24.240><c> been</c><00:22:24.640><c> optimized</c><00:22:25.280><c> out</c><00:22:26.000><c> and</c>

00:22:26.149 --> 00:22:26.159 align:start position:0%
some variable has been optimized out and
 

00:22:26.159 --> 00:22:27.909 align:start position:0%
some variable has been optimized out and
that<00:22:26.320><c> means</c><00:22:26.559><c> that</c><00:22:26.720><c> the</c><00:22:26.799><c> compiler</c><00:22:27.360><c> decided</c><00:22:27.840><c> it</c>

00:22:27.909 --> 00:22:27.919 align:start position:0%
that means that the compiler decided it
 

00:22:27.919 --> 00:22:29.430 align:start position:0%
that means that the compiler decided it
didn't<00:22:28.080><c> need</c><00:22:28.320><c> that</c><00:22:28.480><c> variable</c>

00:22:29.430 --> 00:22:29.440 align:start position:0%
didn't need that variable
 

00:22:29.440 --> 00:22:32.390 align:start position:0%
didn't need that variable
uh<00:22:30.000><c> and</c><00:22:30.159><c> so</c><00:22:30.480><c> that'll</c><00:22:30.880><c> be</c><00:22:31.440><c> gone</c><00:22:31.840><c> effectively</c>

00:22:32.390 --> 00:22:32.400 align:start position:0%
uh and so that'll be gone effectively
 

00:22:32.400 --> 00:22:33.590 align:start position:0%
uh and so that'll be gone effectively
from<00:22:32.559><c> the</c><00:22:32.640><c> program</c>

00:22:33.590 --> 00:22:33.600 align:start position:0%
from the program
 

00:22:33.600 --> 00:22:35.190 align:start position:0%
from the program
but<00:22:33.840><c> yeah</c><00:22:34.159><c> and</c><00:22:34.400><c> it's</c><00:22:34.640><c> at</c><00:22:34.880><c> its</c><00:22:35.039><c> most</c>

00:22:35.190 --> 00:22:35.200 align:start position:0%
but yeah and it's at its most
 

00:22:35.200 --> 00:22:36.950 align:start position:0%
but yeah and it's at its most
straightforward

00:22:36.950 --> 00:22:36.960 align:start position:0%
straightforward
 

00:22:36.960 --> 00:22:39.830 align:start position:0%
straightforward
we're<00:22:37.200><c> moving</c><00:22:38.080><c> uh</c><00:22:38.640><c> the</c><00:22:38.880><c> value</c><00:22:39.200><c> that's</c><00:22:39.440><c> in</c><00:22:39.600><c> a</c>

00:22:39.830 --> 00:22:39.840 align:start position:0%
we're moving uh the value that's in a
 

00:22:39.840 --> 00:22:40.470 align:start position:0%
we're moving uh the value that's in a
zero<00:22:40.080><c> to</c><00:22:40.240><c> t</c>

00:22:40.470 --> 00:22:40.480 align:start position:0%
zero to t
 

00:22:40.480 --> 00:22:43.029 align:start position:0%
zero to t
zero<00:22:41.280><c> we're</c><00:22:41.520><c> setting</c><00:22:41.760><c> a</c><00:22:41.919><c> zero</c><00:22:42.240><c> to</c><00:22:42.400><c> zero</c><00:22:42.880><c> and</c>

00:22:43.029 --> 00:22:43.039 align:start position:0%
zero we're setting a zero to zero and
 

00:22:43.039 --> 00:22:43.830 align:start position:0%
zero we're setting a zero to zero and
then

00:22:43.830 --> 00:22:43.840 align:start position:0%
then
 

00:22:43.840 --> 00:22:47.270 align:start position:0%
then
we<00:22:44.080><c> are</c><00:22:45.039><c> just</c><00:22:45.280><c> adding</c><00:22:45.919><c> what's</c><00:22:46.159><c> in</c><00:22:46.320><c> t</c><00:22:46.559><c> zero</c><00:22:46.880><c> to</c><00:22:47.039><c> a</c>

00:22:47.270 --> 00:22:47.280 align:start position:0%
we are just adding what's in t zero to a
 

00:22:47.280 --> 00:22:47.750 align:start position:0%
we are just adding what's in t zero to a
zero

00:22:47.750 --> 00:22:47.760 align:start position:0%
zero
 

00:22:47.760 --> 00:22:50.070 align:start position:0%
zero
for<00:22:48.000><c> every</c><00:22:48.240><c> iteration</c><00:22:48.640><c> of</c><00:22:48.799><c> a</c><00:22:48.880><c> loop</c><00:22:49.440><c> until</c><00:22:49.919><c> t</c>

00:22:50.070 --> 00:22:50.080 align:start position:0%
for every iteration of a loop until t
 

00:22:50.080 --> 00:22:52.390 align:start position:0%
for every iteration of a loop until t
zero<00:22:50.480><c> reaches</c><00:22:50.880><c> zero</c>

00:22:52.390 --> 00:22:52.400 align:start position:0%
zero reaches zero
 

00:22:52.400 --> 00:22:53.669 align:start position:0%
zero reaches zero
and<00:22:52.480><c> that's</c><00:22:52.720><c> all</c><00:22:52.799><c> that's</c><00:22:53.039><c> going</c><00:22:53.280><c> on</c><00:22:53.440><c> in</c><00:22:53.520><c> this</c>

00:22:53.669 --> 00:22:53.679 align:start position:0%
and that's all that's going on in this
 

00:22:53.679 --> 00:22:57.350 align:start position:0%
and that's all that's going on in this
piece<00:22:54.080><c> uh</c><00:22:54.240><c> amir</c><00:22:54.559><c> your</c><00:22:54.720><c> hands</c><00:22:54.960><c> erased</c>

00:22:57.350 --> 00:22:57.360 align:start position:0%
 
 

00:22:57.360 --> 00:22:59.909 align:start position:0%
 
yeah<00:22:57.600><c> i</c><00:22:57.679><c> was</c><00:22:57.840><c> wondering</c><00:22:58.320><c> what</c><00:22:58.720><c> dot</c><00:22:59.039><c> section</c>

00:22:59.909 --> 00:22:59.919 align:start position:0%
yeah i was wondering what dot section
 

00:22:59.919 --> 00:23:00.710 align:start position:0%
yeah i was wondering what dot section
dot<00:23:00.159><c> text</c>

00:23:00.710 --> 00:23:00.720 align:start position:0%
dot text
 

00:23:00.720 --> 00:23:03.669 align:start position:0%
dot text
and<00:23:00.880><c> dot</c><00:23:01.120><c> global</c><00:23:01.520><c> do</c><00:23:02.640><c> global</c><00:23:03.039><c> means</c><00:23:03.360><c> that</c><00:23:03.520><c> you</c>

00:23:03.669 --> 00:23:03.679 align:start position:0%
and dot global do global means that you
 

00:23:03.679 --> 00:23:04.230 align:start position:0%
and dot global do global means that you
can

00:23:04.230 --> 00:23:04.240 align:start position:0%
can
 

00:23:04.240 --> 00:23:06.870 align:start position:0%
can
include<00:23:04.559><c> this</c><00:23:04.720><c> from</c><00:23:04.880><c> other</c><00:23:05.120><c> files</c><00:23:06.159><c> so</c><00:23:06.559><c> if</c><00:23:06.720><c> we</c>

00:23:06.870 --> 00:23:06.880 align:start position:0%
include this from other files so if we
 

00:23:06.880 --> 00:23:08.950 align:start position:0%
include this from other files so if we
actually<00:23:07.200><c> hop</c><00:23:07.520><c> into</c>

00:23:08.950 --> 00:23:08.960 align:start position:0%
actually hop into
 

00:23:08.960 --> 00:23:14.230 align:start position:0%
actually hop into
uh<00:23:09.679><c> let's</c><00:23:09.919><c> see</c><00:23:11.600><c> def.h</c>

00:23:14.230 --> 00:23:14.240 align:start position:0%
uh let's see def.h
 

00:23:14.240 --> 00:23:17.350 align:start position:0%
uh let's see def.h
this<00:23:14.400><c> is</c><00:23:14.480><c> the</c><00:23:14.640><c> file</c><00:23:14.960><c> that</c><00:23:15.200><c> you're</c><00:23:16.400><c> uh</c><00:23:16.880><c> will</c><00:23:17.200><c> if</c>

00:23:17.350 --> 00:23:17.360 align:start position:0%
this is the file that you're uh will if
 

00:23:17.360 --> 00:23:18.870 align:start position:0%
this is the file that you're uh will if
you<00:23:17.520><c> aren't</c><00:23:17.760><c> already</c><00:23:18.080><c> you</c><00:23:18.159><c> will</c><00:23:18.320><c> become</c><00:23:18.640><c> quite</c>

00:23:18.870 --> 00:23:18.880 align:start position:0%
you aren't already you will become quite
 

00:23:18.880 --> 00:23:20.149 align:start position:0%
you aren't already you will become quite
familiar<00:23:19.360><c> with</c><00:23:19.679><c> this</c>

00:23:20.149 --> 00:23:20.159 align:start position:0%
familiar with this
 

00:23:20.159 --> 00:23:22.310 align:start position:0%
familiar with this
includes<00:23:20.880><c> basically</c><00:23:21.440><c> all</c><00:23:21.600><c> of</c><00:23:21.679><c> the</c><00:23:21.760><c> functions</c>

00:23:22.310 --> 00:23:22.320 align:start position:0%
includes basically all of the functions
 

00:23:22.320 --> 00:23:23.669 align:start position:0%
includes basically all of the functions
within<00:23:22.559><c> the</c><00:23:22.640><c> kernel</c><00:23:23.039><c> that</c><00:23:23.200><c> you</c><00:23:23.280><c> may</c><00:23:23.440><c> want</c><00:23:23.600><c> to</c>

00:23:23.669 --> 00:23:23.679 align:start position:0%
within the kernel that you may want to
 

00:23:23.679 --> 00:23:24.870 align:start position:0%
within the kernel that you may want to
be<00:23:23.840><c> using</c>

00:23:24.870 --> 00:23:24.880 align:start position:0%
be using
 

00:23:24.880 --> 00:23:28.149 align:start position:0%
be using
and<00:23:25.600><c> uh</c><00:23:26.080><c> within</c><00:23:26.480><c> here</c><00:23:27.280><c> you</c><00:23:27.440><c> know</c><00:23:27.600><c> we</c><00:23:27.760><c> can</c><00:23:27.919><c> see</c>

00:23:28.149 --> 00:23:28.159 align:start position:0%
and uh within here you know we can see
 

00:23:28.159 --> 00:23:29.590 align:start position:0%
and uh within here you know we can see
that<00:23:28.400><c> in</c><00:23:28.559><c> my</c>

00:23:29.590 --> 00:23:29.600 align:start position:0%
that in my
 

00:23:29.600 --> 00:23:32.149 align:start position:0%
that in my
my<00:23:29.919><c> file</c><00:23:30.320><c> i've</c><00:23:30.559><c> included</c><00:23:31.120><c> the</c><00:23:31.360><c> definitions</c><00:23:32.080><c> to</c>

00:23:32.149 --> 00:23:32.159 align:start position:0%
my file i've included the definitions to
 

00:23:32.159 --> 00:23:33.350 align:start position:0%
my file i've included the definitions to
these<00:23:32.400><c> functions</c>

00:23:33.350 --> 00:23:33.360 align:start position:0%
these functions
 

00:23:33.360 --> 00:23:37.590 align:start position:0%
these functions
and<00:23:33.520><c> so</c><00:23:33.679><c> that</c><00:23:33.919><c> dot</c><00:23:34.159><c> global</c><00:23:34.880><c> make</c><00:23:35.120><c> sure</c><00:23:35.600><c> that</c>

00:23:37.590 --> 00:23:37.600 align:start position:0%
and so that dot global make sure that
 

00:23:37.600 --> 00:23:39.669 align:start position:0%
and so that dot global make sure that
that<00:23:37.760><c> these</c><00:23:38.080><c> these</c><00:23:38.320><c> functions</c><00:23:38.720><c> can</c><00:23:38.880><c> be</c><00:23:39.360><c> called</c>

00:23:39.669 --> 00:23:39.679 align:start position:0%
that these these functions can be called
 

00:23:39.679 --> 00:23:41.110 align:start position:0%
that these these functions can be called
from<00:23:39.919><c> other</c><00:23:40.159><c> places</c>

00:23:41.110 --> 00:23:41.120 align:start position:0%
from other places
 

00:23:41.120 --> 00:23:44.149 align:start position:0%
from other places
and<00:23:41.440><c> dot</c><00:23:41.760><c> text</c><00:23:42.240><c> just</c><00:23:42.480><c> says</c><00:23:42.720><c> this</c><00:23:42.880><c> is</c><00:23:43.039><c> code</c>

00:23:44.149 --> 00:23:44.159 align:start position:0%
and dot text just says this is code
 

00:23:44.159 --> 00:23:47.750 align:start position:0%
and dot text just says this is code
so<00:23:44.480><c> if</c><00:23:44.640><c> you</c><00:23:44.799><c> recall</c><00:23:45.279><c> from</c><00:23:46.000><c> figure</c><00:23:46.600><c> 3.4</c>

00:23:47.750 --> 00:23:47.760 align:start position:0%
so if you recall from figure 3.4
 

00:23:47.760 --> 00:23:51.669 align:start position:0%
so if you recall from figure 3.4
in<00:23:47.919><c> the</c><00:23:48.080><c> book</c><00:23:49.760><c> so</c><00:23:50.000><c> that's</c><00:23:50.480><c> if</c><00:23:50.720><c> we</c><00:23:50.880><c> go</c>

00:23:51.669 --> 00:23:51.679 align:start position:0%
in the book so that's if we go
 

00:23:51.679 --> 00:23:56.310 align:start position:0%
in the book so that's if we go
to<00:23:53.360><c> the</c><00:23:53.600><c> book</c>

00:23:56.310 --> 00:23:56.320 align:start position:0%
 
 

00:23:56.320 --> 00:23:59.590 align:start position:0%
 
and<00:23:56.559><c> we</c><00:23:56.720><c> go</c><00:23:57.120><c> into</c><00:23:57.919><c> page</c><00:23:58.400><c> tables</c>

00:23:59.590 --> 00:23:59.600 align:start position:0%
and we go into page tables
 

00:23:59.600 --> 00:24:02.630 align:start position:0%
and we go into page tables
process<00:24:00.000><c> address</c><00:24:00.320><c> space</c><00:24:01.039><c> so</c><00:24:01.360><c> in</c><00:24:01.600><c> here</c><00:24:02.320><c> in</c><00:24:02.400><c> this</c>

00:24:02.630 --> 00:24:02.640 align:start position:0%
process address space so in here in this
 

00:24:02.640 --> 00:24:03.750 align:start position:0%
process address space so in here in this
diagram

00:24:03.750 --> 00:24:03.760 align:start position:0%
diagram
 

00:24:03.760 --> 00:24:05.750 align:start position:0%
diagram
that's<00:24:04.000><c> the</c><00:24:04.240><c> same</c><00:24:04.480><c> thing</c><00:24:04.960><c> this</c><00:24:05.120><c> is</c><00:24:05.279><c> text</c><00:24:05.600><c> so</c><00:24:05.679><c> it</c>

00:24:05.750 --> 00:24:05.760 align:start position:0%
that's the same thing this is text so it
 

00:24:05.760 --> 00:24:09.269 align:start position:0%
that's the same thing this is text so it
just<00:24:05.919><c> means</c><00:24:06.159><c> code</c>

00:24:09.269 --> 00:24:09.279 align:start position:0%
 
 

00:24:09.279 --> 00:24:14.789 align:start position:0%
 
that<00:24:09.520><c> answer</c><00:24:09.760><c> your</c><00:24:09.840><c> question</c><00:24:10.159><c> okay</c><00:24:11.039><c> thanks</c>

00:24:14.789 --> 00:24:14.799 align:start position:0%
 
 

00:24:14.799 --> 00:24:18.149 align:start position:0%
 
and<00:24:14.960><c> so</c><00:24:15.200><c> if</c><00:24:15.360><c> we</c><00:24:15.440><c> want</c><00:24:15.679><c> to</c><00:24:15.840><c> run</c><00:24:17.600><c> let's</c><00:24:17.840><c> say</c><00:24:18.080><c> we</c>

00:24:18.149 --> 00:24:18.159 align:start position:0%
and so if we want to run let's say we
 

00:24:18.159 --> 00:24:19.590 align:start position:0%
and so if we want to run let's say we
have<00:24:18.320><c> some</c><00:24:18.559><c> assembly</c>

00:24:19.590 --> 00:24:19.600 align:start position:0%
have some assembly
 

00:24:19.600 --> 00:24:21.830 align:start position:0%
have some assembly
also<00:24:19.840><c> if</c><00:24:20.000><c> you</c><00:24:20.240><c> ever</c><00:24:20.640><c> find</c><00:24:20.880><c> yourself</c>

00:24:21.830 --> 00:24:21.840 align:start position:0%
also if you ever find yourself
 

00:24:21.840 --> 00:24:23.190 align:start position:0%
also if you ever find yourself
interested<00:24:22.559><c> in</c>

00:24:23.190 --> 00:24:23.200 align:start position:0%
interested in
 

00:24:23.200 --> 00:24:26.230 align:start position:0%
interested in
what<00:24:23.440><c> the</c><00:24:23.600><c> kernel</c><00:24:24.000><c> looks</c><00:24:24.320><c> like</c><00:24:25.200><c> we</c><00:24:25.360><c> can</c><00:24:25.679><c> go</c>

00:24:26.230 --> 00:24:26.240 align:start position:0%
what the kernel looks like we can go
 

00:24:26.240 --> 00:24:28.950 align:start position:0%
what the kernel looks like we can go
inside<00:24:26.640><c> the</c><00:24:27.120><c> after</c><00:24:27.360><c> you</c><00:24:27.520><c> compile</c><00:24:28.480><c> you</c><00:24:28.720><c> can</c>

00:24:28.950 --> 00:24:28.960 align:start position:0%
inside the after you compile you can
 

00:24:28.960 --> 00:24:30.830 align:start position:0%
inside the after you compile you can
look<00:24:29.200><c> in</c><00:24:29.279><c> the</c><00:24:29.440><c> file</c><00:24:29.840><c> kernel</c>

00:24:30.830 --> 00:24:30.840 align:start position:0%
look in the file kernel
 

00:24:30.840 --> 00:24:35.510 align:start position:0%
look in the file kernel
kernel.asm<00:24:32.720><c> and</c><00:24:33.039><c> this</c><00:24:33.279><c> is</c><00:24:33.440><c> the</c><00:24:33.600><c> full</c><00:24:33.840><c> kind</c><00:24:34.080><c> of</c>

00:24:35.510 --> 00:24:35.520 align:start position:0%
kernel.asm and this is the full kind of
 

00:24:35.520 --> 00:24:39.350 align:start position:0%
kernel.asm and this is the full kind of
assembly<00:24:36.559><c> for</c><00:24:37.200><c> the</c><00:24:37.360><c> kernel</c>

00:24:39.350 --> 00:24:39.360 align:start position:0%
assembly for the kernel
 

00:24:39.360 --> 00:24:41.909 align:start position:0%
assembly for the kernel
of<00:24:39.520><c> xv6</c><00:24:40.320><c> and</c><00:24:40.559><c> each</c><00:24:40.799><c> of</c><00:24:40.880><c> these</c><00:24:41.200><c> numbers</c><00:24:41.679><c> on</c><00:24:41.760><c> the</c>

00:24:41.909 --> 00:24:41.919 align:start position:0%
of xv6 and each of these numbers on the
 

00:24:41.919 --> 00:24:43.110 align:start position:0%
of xv6 and each of these numbers on the
left<00:24:42.240><c> here</c>

00:24:43.110 --> 00:24:43.120 align:start position:0%
left here
 

00:24:43.120 --> 00:24:45.510 align:start position:0%
left here
is<00:24:43.600><c> a</c><00:24:43.760><c> label</c><00:24:44.320><c> that</c><00:24:44.559><c> tells</c><00:24:44.799><c> you</c><00:24:45.039><c> where</c><00:24:45.360><c> in</c>

00:24:45.510 --> 00:24:45.520 align:start position:0%
is a label that tells you where in
 

00:24:45.520 --> 00:24:46.310 align:start position:0%
is a label that tells you where in
memory<00:24:46.000><c> this</c>

00:24:46.310 --> 00:24:46.320 align:start position:0%
memory this
 

00:24:46.320 --> 00:24:48.950 align:start position:0%
memory this
in<00:24:46.799><c> this</c><00:24:47.039><c> instruction</c><00:24:47.520><c> will</c><00:24:47.679><c> be</c><00:24:48.480><c> and</c><00:24:48.640><c> that'll</c>

00:24:48.950 --> 00:24:48.960 align:start position:0%
in this instruction will be and that'll
 

00:24:48.960 --> 00:24:50.630 align:start position:0%
in this instruction will be and that'll
come<00:24:49.200><c> in</c><00:24:49.520><c> quite</c><00:24:49.760><c> handy</c>

00:24:50.630 --> 00:24:50.640 align:start position:0%
come in quite handy
 

00:24:50.640 --> 00:24:54.710 align:start position:0%
come in quite handy
and<00:24:50.799><c> so</c><00:24:50.960><c> here</c><00:24:51.200><c> is</c><00:24:51.360><c> the</c><00:24:52.320><c> here's</c><00:24:52.640><c> the</c><00:24:52.799><c> actual</c><00:24:53.279><c> uh</c>

00:24:54.710 --> 00:24:54.720 align:start position:0%
and so here is the here's the actual uh
 

00:24:54.720 --> 00:24:56.230 align:start position:0%
and so here is the here's the actual uh
here's<00:24:54.960><c> the</c><00:24:55.039><c> actual</c><00:24:55.279><c> assembly</c><00:24:55.760><c> code</c><00:24:56.080><c> and</c><00:24:56.159><c> you</c>

00:24:56.230 --> 00:24:56.240 align:start position:0%
here's the actual assembly code and you
 

00:24:56.240 --> 00:24:59.029 align:start position:0%
here's the actual assembly code and you
can<00:24:56.400><c> see</c><00:24:56.640><c> the</c><00:24:56.799><c> labels</c><00:24:57.440><c> for</c><00:24:57.600><c> the</c><00:24:57.760><c> functions</c>

00:24:59.029 --> 00:24:59.039 align:start position:0%
can see the labels for the functions
 

00:24:59.039 --> 00:25:00.310 align:start position:0%
can see the labels for the functions
and<00:24:59.120><c> where</c><00:24:59.360><c> they're</c><00:24:59.440><c> declared</c><00:24:59.840><c> so</c><00:25:00.000><c> this</c><00:25:00.159><c> is</c>

00:25:00.310 --> 00:25:00.320 align:start position:0%
and where they're declared so this is
 

00:25:00.320 --> 00:25:03.269 align:start position:0%
and where they're declared so this is
this<00:25:00.559><c> is</c><00:25:00.720><c> a</c><00:25:01.760><c> can</c><00:25:02.000><c> be</c><00:25:02.159><c> really</c><00:25:02.400><c> really</c><00:25:02.559><c> useful</c><00:25:03.039><c> as</c>

00:25:03.269 --> 00:25:03.279 align:start position:0%
this is a can be really really useful as
 

00:25:03.279 --> 00:25:04.310 align:start position:0%
this is a can be really really useful as
we're<00:25:03.440><c> debugging</c><00:25:03.919><c> code</c>

00:25:04.310 --> 00:25:04.320 align:start position:0%
we're debugging code
 

00:25:04.320 --> 00:25:06.070 align:start position:0%
we're debugging code
and<00:25:04.400><c> hopefully</c><00:25:04.799><c> i'll</c><00:25:04.880><c> be</c><00:25:05.039><c> able</c><00:25:05.200><c> to</c><00:25:05.279><c> show</c><00:25:05.520><c> that</c>

00:25:06.070 --> 00:25:06.080 align:start position:0%
and hopefully i'll be able to show that
 

00:25:06.080 --> 00:25:07.590 align:start position:0%
and hopefully i'll be able to show that
in<00:25:06.240><c> a</c><00:25:06.400><c> second</c>

00:25:07.590 --> 00:25:07.600 align:start position:0%
in a second
 

00:25:07.600 --> 00:25:10.710 align:start position:0%
in a second
but<00:25:07.840><c> for</c><00:25:08.000><c> now</c><00:25:08.880><c> we'll</c><00:25:09.120><c> jump</c><00:25:09.440><c> back</c><00:25:09.919><c> to</c><00:25:10.400><c> this</c>

00:25:10.710 --> 00:25:10.720 align:start position:0%
but for now we'll jump back to this
 

00:25:10.720 --> 00:25:11.510 align:start position:0%
but for now we'll jump back to this
first<00:25:10.960><c> function</c>

00:25:11.510 --> 00:25:11.520 align:start position:0%
first function
 

00:25:11.520 --> 00:25:14.310 align:start position:0%
first function
sum2<00:25:12.559><c> and</c><00:25:12.720><c> we'll</c><00:25:12.880><c> just</c><00:25:13.120><c> see</c><00:25:13.520><c> how</c><00:25:13.679><c> we</c><00:25:13.919><c> can</c>

00:25:14.310 --> 00:25:14.320 align:start position:0%
sum2 and we'll just see how we can
 

00:25:14.320 --> 00:25:15.430 align:start position:0%
sum2 and we'll just see how we can
examine<00:25:14.880><c> that</c>

00:25:15.430 --> 00:25:15.440 align:start position:0%
examine that
 

00:25:15.440 --> 00:25:19.590 align:start position:0%
examine that
inside<00:25:15.840><c> of</c><00:25:16.000><c> gdd</c><00:25:18.400><c> so</c><00:25:18.640><c> the</c><00:25:18.720><c> first</c><00:25:18.960><c> step</c><00:25:19.279><c> is</c><00:25:19.440><c> i</c>

00:25:19.590 --> 00:25:19.600 align:start position:0%
inside of gdd so the first step is i
 

00:25:19.600 --> 00:25:21.750 align:start position:0%
inside of gdd so the first step is i
have<00:25:19.760><c> my</c><00:25:19.919><c> two</c><00:25:20.240><c> windows</c><00:25:20.799><c> here</c>

00:25:21.750 --> 00:25:21.760 align:start position:0%
have my two windows here
 

00:25:21.760 --> 00:25:23.830 align:start position:0%
have my two windows here
what's<00:25:22.000><c> the</c><00:25:22.080><c> difference</c><00:25:22.400><c> between</c><00:25:22.880><c> asm</c><00:25:23.279><c> and</c><00:25:23.600><c> s</c>

00:25:23.830 --> 00:25:23.840 align:start position:0%
what's the difference between asm and s
 

00:25:23.840 --> 00:25:25.190 align:start position:0%
what's the difference between asm and s
files

00:25:25.190 --> 00:25:25.200 align:start position:0%
files
 

00:25:25.200 --> 00:25:28.710 align:start position:0%
files
um<00:25:27.039><c> i'm</c><00:25:27.120><c> not</c><00:25:27.360><c> 100</c>

00:25:28.710 --> 00:25:28.720 align:start position:0%
um i'm not 100
 

00:25:28.720 --> 00:25:31.029 align:start position:0%
um i'm not 100
certain<00:25:29.520><c> they're</c><00:25:29.760><c> both</c><00:25:30.159><c> assembly</c><00:25:30.720><c> i</c><00:25:30.799><c> think</c>

00:25:31.029 --> 00:25:31.039 align:start position:0%
certain they're both assembly i think
 

00:25:31.039 --> 00:25:33.430 align:start position:0%
certain they're both assembly i think
the<00:25:31.679><c> dot</c><00:25:31.919><c> asm</c><00:25:32.320><c> file</c><00:25:32.640><c> includes</c><00:25:32.960><c> a</c><00:25:33.039><c> bunch</c><00:25:33.279><c> of</c>

00:25:33.430 --> 00:25:33.440 align:start position:0%
the dot asm file includes a bunch of
 

00:25:33.440 --> 00:25:35.350 align:start position:0%
the dot asm file includes a bunch of
extra<00:25:33.760><c> annotations</c><00:25:34.480><c> that</c><00:25:34.640><c> aren't</c><00:25:34.880><c> included</c>

00:25:35.350 --> 00:25:35.360 align:start position:0%
extra annotations that aren't included
 

00:25:35.360 --> 00:25:35.750 align:start position:0%
extra annotations that aren't included
in<00:25:35.440><c> dot</c>

00:25:35.750 --> 00:25:35.760 align:start position:0%
in dot
 

00:25:35.760 --> 00:25:38.070 align:start position:0%
in dot
s<00:25:36.400><c> so</c><00:25:36.559><c> usually</c><00:25:36.880><c> when</c><00:25:37.039><c> you</c><00:25:37.200><c> compile</c><00:25:37.600><c> your</c><00:25:37.840><c> c</c>

00:25:38.070 --> 00:25:38.080 align:start position:0%
s so usually when you compile your c
 

00:25:38.080 --> 00:25:39.990 align:start position:0%
s so usually when you compile your c
code<00:25:38.400><c> to</c>

00:25:39.990 --> 00:25:40.000 align:start position:0%
code to
 

00:25:40.000 --> 00:25:41.990 align:start position:0%
code to
dot<00:25:40.240><c> s</c><00:25:40.480><c> you'll</c><00:25:40.640><c> end</c><00:25:40.799><c> up</c><00:25:40.880><c> with</c><00:25:41.039><c> something</c><00:25:41.840><c> that</c>

00:25:41.990 --> 00:25:42.000 align:start position:0%
dot s you'll end up with something that
 

00:25:42.000 --> 00:25:43.350 align:start position:0%
dot s you'll end up with something that
doesn't<00:25:42.320><c> include</c><00:25:42.640><c> all</c><00:25:42.799><c> of</c><00:25:42.880><c> those</c><00:25:43.120><c> line</c>

00:25:43.350 --> 00:25:43.360 align:start position:0%
doesn't include all of those line
 

00:25:43.360 --> 00:25:45.590 align:start position:0%
doesn't include all of those line
numbers<00:25:43.760><c> and</c><00:25:43.840><c> things</c><00:25:44.080><c> like</c><00:25:44.240><c> that</c><00:25:44.559><c> so</c>

00:25:45.590 --> 00:25:45.600 align:start position:0%
numbers and things like that so
 

00:25:45.600 --> 00:25:46.789 align:start position:0%
numbers and things like that so
if<00:25:45.679><c> you're</c><00:25:45.840><c> curious</c><00:25:46.159><c> about</c><00:25:46.320><c> how</c><00:25:46.480><c> we</c><00:25:46.559><c> get</c><00:25:46.720><c> the</c>

00:25:46.789 --> 00:25:46.799 align:start position:0%
if you're curious about how we get the
 

00:25:46.799 --> 00:25:49.029 align:start position:0%
if you're curious about how we get the
dot<00:25:46.960><c> asm</c><00:25:47.360><c> file</c><00:25:47.600><c> i</c><00:25:47.679><c> think</c><00:25:47.840><c> the</c><00:25:47.919><c> makefile</c>

00:25:49.029 --> 00:25:49.039 align:start position:0%
dot asm file i think the makefile
 

00:25:49.039 --> 00:25:52.070 align:start position:0%
dot asm file i think the makefile
um<00:25:49.520><c> will</c><00:25:49.679><c> tell</c><00:25:49.840><c> you</c><00:25:50.240><c> the</c><00:25:50.400><c> exact</c><00:25:50.720><c> steps</c><00:25:51.679><c> used</c><00:25:51.919><c> to</c>

00:25:52.070 --> 00:25:52.080 align:start position:0%
um will tell you the exact steps used to
 

00:25:52.080 --> 00:25:56.870 align:start position:0%
um will tell you the exact steps used to
get<00:25:54.840><c> that</c><00:25:55.919><c> and</c><00:25:56.080><c> so</c>

00:25:56.870 --> 00:25:56.880 align:start position:0%
get that and so
 

00:25:56.880 --> 00:25:58.470 align:start position:0%
get that and so
if<00:25:57.120><c> we're</c><00:25:57.440><c> we're</c><00:25:57.600><c> in</c><00:25:57.760><c> our</c><00:25:57.840><c> terminal</c><00:25:58.159><c> we</c><00:25:58.240><c> have</c>

00:25:58.470 --> 00:25:58.480 align:start position:0%
if we're we're in our terminal we have
 

00:25:58.480 --> 00:26:00.549 align:start position:0%
if we're we're in our terminal we have
our<00:25:58.559><c> two</c><00:25:59.120><c> uh</c><00:25:59.440><c> two</c><00:25:59.679><c> windows</c>

00:26:00.549 --> 00:26:00.559 align:start position:0%
our two uh two windows
 

00:26:00.559 --> 00:26:03.909 align:start position:0%
our two uh two windows
so<00:26:00.720><c> the</c><00:26:00.799><c> first</c><00:26:01.039><c> thing</c><00:26:01.200><c> to</c><00:26:01.360><c> do</c><00:26:01.679><c> is</c><00:26:01.840><c> of</c><00:26:02.000><c> course</c><00:26:02.400><c> uh</c>

00:26:03.909 --> 00:26:03.919 align:start position:0%
so the first thing to do is of course uh
 

00:26:03.919 --> 00:26:08.470 align:start position:0%
so the first thing to do is of course uh
get<00:26:04.159><c> qmu</c><00:26:04.960><c> up</c><00:26:05.120><c> and</c><00:26:05.200><c> running</c><00:26:06.640><c> so</c><00:26:06.880><c> we</c><00:26:07.039><c> can</c>

00:26:08.470 --> 00:26:08.480 align:start position:0%
get qmu up and running so we can
 

00:26:08.480 --> 00:26:10.630 align:start position:0%
get qmu up and running so we can
start<00:26:08.799><c> it</c><00:26:08.960><c> within</c><00:26:09.279><c> gdb</c><00:26:09.760><c> mode</c><00:26:10.000><c> so</c><00:26:10.159><c> now</c><00:26:10.320><c> we're</c>

00:26:10.630 --> 00:26:10.640 align:start position:0%
start it within gdb mode so now we're
 

00:26:10.640 --> 00:26:11.909 align:start position:0%
start it within gdb mode so now we're
we're<00:26:10.799><c> frozen</c><00:26:11.279><c> here</c>

00:26:11.909 --> 00:26:11.919 align:start position:0%
we're frozen here
 

00:26:11.919 --> 00:26:15.909 align:start position:0%
we're frozen here
and<00:26:12.000><c> then</c><00:26:12.159><c> we</c><00:26:12.320><c> can</c><00:26:12.480><c> start</c><00:26:12.720><c> gdb</c><00:26:14.240><c> uh</c>

00:26:15.909 --> 00:26:15.919 align:start position:0%
and then we can start gdb uh
 

00:26:15.919 --> 00:26:18.470 align:start position:0%
and then we can start gdb uh
and<00:26:16.080><c> what</c><00:26:16.320><c> uh</c><00:26:16.559><c> what</c><00:26:16.880><c> what</c><00:26:17.120><c> what</c><00:26:17.360><c> uh</c><00:26:18.000><c> professor</c>

00:26:18.470 --> 00:26:18.480 align:start position:0%
and what uh what what what uh professor
 

00:26:18.480 --> 00:26:20.549 align:start position:0%
and what uh what what what uh professor
crasher<00:26:18.880><c> showed</c><00:26:19.360><c> last</c><00:26:19.679><c> week</c>

00:26:20.549 --> 00:26:20.559 align:start position:0%
crasher showed last week
 

00:26:20.559 --> 00:26:22.390 align:start position:0%
crasher showed last week
and<00:26:20.960><c> which</c><00:26:21.279><c> i</c><00:26:21.360><c> think</c><00:26:21.520><c> some</c><00:26:21.679><c> people</c><00:26:21.919><c> were</c>

00:26:22.390 --> 00:26:22.400 align:start position:0%
and which i think some people were
 

00:26:22.400 --> 00:26:23.990 align:start position:0%
and which i think some people were
excited<00:26:22.720><c> about</c><00:26:22.880><c> if</c><00:26:22.960><c> you</c><00:26:23.039><c> type</c><00:26:23.279><c> tui</c>

00:26:23.990 --> 00:26:24.000 align:start position:0%
excited about if you type tui
 

00:26:24.000 --> 00:26:26.549 align:start position:0%
excited about if you type tui
enable<00:26:24.480><c> you</c><00:26:24.640><c> get</c><00:26:24.880><c> this</c><00:26:25.120><c> nice</c><00:26:25.840><c> window</c><00:26:26.159><c> which</c><00:26:26.400><c> is</c>

00:26:26.549 --> 00:26:26.559 align:start position:0%
enable you get this nice window which is
 

00:26:26.559 --> 00:26:28.390 align:start position:0%
enable you get this nice window which is
empty<00:26:26.880><c> for</c><00:26:27.039><c> now</c><00:26:27.200><c> but</c><00:26:27.440><c> will</c><00:26:27.600><c> come</c><00:26:27.840><c> in</c>

00:26:28.390 --> 00:26:28.400 align:start position:0%
empty for now but will come in
 

00:26:28.400 --> 00:26:30.789 align:start position:0%
empty for now but will come in
quite<00:26:28.640><c> useful</c><00:26:29.120><c> as</c><00:26:29.360><c> you're</c><00:26:29.520><c> debugging</c><00:26:30.400><c> so</c><00:26:30.640><c> we</c>

00:26:30.789 --> 00:26:30.799 align:start position:0%
quite useful as you're debugging so we
 

00:26:30.799 --> 00:26:32.950 align:start position:0%
quite useful as you're debugging so we
can<00:26:30.960><c> set</c><00:26:31.200><c> a</c><00:26:31.279><c> breakpoint</c><00:26:31.919><c> and</c><00:26:32.400><c> i</c><00:26:32.559><c> should</c><00:26:32.720><c> note</c>

00:26:32.950 --> 00:26:32.960 align:start position:0%
can set a breakpoint and i should note
 

00:26:32.960 --> 00:26:35.350 align:start position:0%
can set a breakpoint and i should note
that<00:26:33.279><c> all</c><00:26:33.440><c> this</c><00:26:33.840><c> code</c><00:26:34.320><c> is</c><00:26:34.559><c> living</c><00:26:34.960><c> inside</c><00:26:35.279><c> the</c>

00:26:35.350 --> 00:26:35.360 align:start position:0%
that all this code is living inside the
 

00:26:35.360 --> 00:26:37.350 align:start position:0%
that all this code is living inside the
kernel<00:26:35.760><c> none</c><00:26:35.919><c> of</c><00:26:36.000><c> this</c><00:26:36.159><c> is</c><00:26:36.320><c> in</c><00:26:36.400><c> user</c><00:26:36.640><c> space</c>

00:26:37.350 --> 00:26:37.360 align:start position:0%
kernel none of this is in user space
 

00:26:37.360 --> 00:26:38.710 align:start position:0%
kernel none of this is in user space
so<00:26:37.520><c> we</c><00:26:37.600><c> don't</c><00:26:37.760><c> have</c><00:26:37.919><c> any</c><00:26:38.080><c> of</c><00:26:38.159><c> those</c><00:26:38.320><c> annoying</c>

00:26:38.710 --> 00:26:38.720 align:start position:0%
so we don't have any of those annoying
 

00:26:38.720 --> 00:26:40.710 align:start position:0%
so we don't have any of those annoying
problems<00:26:39.039><c> setting</c><00:26:39.360><c> breakpoints</c><00:26:40.320><c> so</c><00:26:40.480><c> i</c><00:26:40.559><c> can</c>

00:26:40.710 --> 00:26:40.720 align:start position:0%
problems setting breakpoints so i can
 

00:26:40.720 --> 00:26:42.070 align:start position:0%
problems setting breakpoints so i can
set<00:26:40.880><c> a</c><00:26:41.039><c> breakpoint</c>

00:26:42.070 --> 00:26:42.080 align:start position:0%
set a breakpoint
 

00:26:42.080 --> 00:26:44.789 align:start position:0%
set a breakpoint
in<00:26:42.480><c> the</c><00:26:42.640><c> function</c><00:26:43.120><c> sum2</c><00:26:44.240><c> and</c><00:26:44.480><c> then</c><00:26:44.640><c> just</c>

00:26:44.789 --> 00:26:44.799 align:start position:0%
in the function sum2 and then just
 

00:26:44.799 --> 00:26:47.190 align:start position:0%
in the function sum2 and then just
continue<00:26:45.279><c> running</c>

00:26:47.190 --> 00:26:47.200 align:start position:0%
continue running
 

00:26:47.200 --> 00:26:50.630 align:start position:0%
continue running
and<00:26:47.440><c> run</c><00:26:47.760><c> that</c><00:26:48.000><c> function</c><00:26:49.279><c> and</c><00:26:49.520><c> now</c>

00:26:50.630 --> 00:26:50.640 align:start position:0%
and run that function and now
 

00:26:50.640 --> 00:26:53.669 align:start position:0%
and run that function and now
so<00:26:51.279><c> the</c><00:26:51.440><c> first</c><00:26:51.679><c> window</c><00:26:52.000><c> that</c><00:26:52.080><c> you</c><00:26:52.240><c> see</c><00:26:52.559><c> in</c><00:26:52.799><c> tui</c>

00:26:53.669 --> 00:26:53.679 align:start position:0%
so the first window that you see in tui
 

00:26:53.679 --> 00:26:57.269 align:start position:0%
so the first window that you see in tui
is<00:26:54.080><c> the</c><00:26:54.880><c> source</c><00:26:55.279><c> window</c>

00:26:57.269 --> 00:26:57.279 align:start position:0%
is the source window
 

00:26:57.279 --> 00:26:59.830 align:start position:0%
is the source window
uh<00:26:57.600><c> yes</c><00:26:58.080><c> as</c><00:26:58.320><c> david</c><00:26:58.640><c> is</c><00:26:58.720><c> saying</c><00:26:59.039><c> those</c><00:26:59.600><c> those</c>

00:26:59.830 --> 00:26:59.840 align:start position:0%
uh yes as david is saying those those
 

00:26:59.840 --> 00:27:01.909 align:start position:0%
uh yes as david is saying those those
numbers<00:27:00.159><c> on</c><00:27:00.320><c> the</c><00:27:00.400><c> left</c><00:27:00.720><c> of</c><00:27:00.799><c> kernel.asm</c>

00:27:01.909 --> 00:27:01.919 align:start position:0%
numbers on the left of kernel.asm
 

00:27:01.919 --> 00:27:05.269 align:start position:0%
numbers on the left of kernel.asm
are<00:27:02.720><c> really</c><00:27:02.960><c> useful</c><00:27:03.520><c> when</c><00:27:03.760><c> you're</c><00:27:04.720><c> debugging</c>

00:27:05.269 --> 00:27:05.279 align:start position:0%
are really useful when you're debugging
 

00:27:05.279 --> 00:27:07.430 align:start position:0%
are really useful when you're debugging
things<00:27:05.679><c> and</c><00:27:05.760><c> you</c><00:27:05.919><c> get</c><00:27:06.080><c> an</c><00:27:06.240><c> address</c>

00:27:07.430 --> 00:27:07.440 align:start position:0%
things and you get an address
 

00:27:07.440 --> 00:27:09.669 align:start position:0%
things and you get an address
it'll<00:27:07.679><c> tell</c><00:27:07.919><c> you</c><00:27:08.000><c> so</c><00:27:08.159><c> you</c><00:27:08.320><c> can</c><00:27:08.480><c> see</c><00:27:08.720><c> now</c><00:27:09.440><c> even</c>

00:27:09.669 --> 00:27:09.679 align:start position:0%
it'll tell you so you can see now even
 

00:27:09.679 --> 00:27:11.750 align:start position:0%
it'll tell you so you can see now even
here<00:27:10.000><c> we</c><00:27:10.159><c> can</c><00:27:10.240><c> see</c><00:27:10.480><c> that</c><00:27:10.640><c> the</c><00:27:10.799><c> program</c><00:27:11.120><c> so</c><00:27:11.360><c> pc</c>

00:27:11.750 --> 00:27:11.760 align:start position:0%
here we can see that the program so pc
 

00:27:11.760 --> 00:27:13.350 align:start position:0%
here we can see that the program so pc
here<00:27:12.080><c> in</c><00:27:12.159><c> gdb</c>

00:27:13.350 --> 00:27:13.360 align:start position:0%
here in gdb
 

00:27:13.360 --> 00:27:15.190 align:start position:0%
here in gdb
is<00:27:13.600><c> the</c><00:27:13.679><c> program</c><00:27:14.080><c> counter</c><00:27:14.480><c> so</c><00:27:14.720><c> we</c><00:27:14.880><c> can</c><00:27:15.039><c> see</c>

00:27:15.190 --> 00:27:15.200 align:start position:0%
is the program counter so we can see
 

00:27:15.200 --> 00:27:16.870 align:start position:0%
is the program counter so we can see
this<00:27:15.440><c> address</c><00:27:15.840><c> 8</c><00:27:16.000><c> 0</c><00:27:16.320><c> 0</c>

00:27:16.870 --> 00:27:16.880 align:start position:0%
this address 8 0 0
 

00:27:16.880 --> 00:27:20.350 align:start position:0%
this address 8 0 0
so<00:27:17.120><c> on</c><00:27:17.279><c> and</c><00:27:17.360><c> so</c><00:27:17.600><c> forth</c><00:27:18.960><c> if</c><00:27:19.120><c> we</c><00:27:19.279><c> go</c><00:27:19.840><c> into</c>

00:27:20.350 --> 00:27:20.360 align:start position:0%
so on and so forth if we go into
 

00:27:20.360 --> 00:27:21.830 align:start position:0%
so on and so forth if we go into
kernel.asm

00:27:21.830 --> 00:27:21.840 align:start position:0%
kernel.asm
 

00:27:21.840 --> 00:27:24.310 align:start position:0%
kernel.asm
and<00:27:22.000><c> we</c><00:27:22.240><c> search</c><00:27:22.480><c> for</c><00:27:22.640><c> that</c><00:27:22.880><c> specific</c><00:27:23.440><c> address</c>

00:27:24.310 --> 00:27:24.320 align:start position:0%
and we search for that specific address
 

00:27:24.320 --> 00:27:26.870 align:start position:0%
and we search for that specific address
we<00:27:24.480><c> can</c><00:27:24.720><c> see</c><00:27:24.880><c> that</c><00:27:25.120><c> it's</c><00:27:25.360><c> the</c>

00:27:26.870 --> 00:27:26.880 align:start position:0%
we can see that it's the
 

00:27:26.880 --> 00:27:28.789 align:start position:0%
we can see that it's the
uh<00:27:27.520><c> well</c><00:27:27.760><c> it</c><00:27:27.840><c> comes</c><00:27:28.080><c> up</c><00:27:28.159><c> twice</c><00:27:28.480><c> because</c><00:27:28.640><c> it's</c><00:27:28.720><c> a</c>

00:27:28.789 --> 00:27:28.799 align:start position:0%
uh well it comes up twice because it's a
 

00:27:28.799 --> 00:27:30.870 align:start position:0%
uh well it comes up twice because it's a
function<00:27:29.200><c> call</c><00:27:29.679><c> but</c><00:27:29.919><c> if</c><00:27:30.000><c> we</c><00:27:30.240><c> look</c><00:27:30.399><c> here</c><00:27:30.720><c> this</c>

00:27:30.870 --> 00:27:30.880 align:start position:0%
function call but if we look here this
 

00:27:30.880 --> 00:27:32.070 align:start position:0%
function call but if we look here this
is<00:27:31.039><c> that</c><00:27:31.279><c> address</c>

00:27:32.070 --> 00:27:32.080 align:start position:0%
is that address
 

00:27:32.080 --> 00:27:35.110 align:start position:0%
is that address
it's<00:27:32.320><c> the</c><00:27:32.399><c> top</c><00:27:32.640><c> of</c><00:27:32.720><c> the</c><00:27:32.880><c> sum2</c><00:27:33.360><c> function</c><00:27:34.799><c> so</c>

00:27:35.110 --> 00:27:35.120 align:start position:0%
it's the top of the sum2 function so
 

00:27:35.120 --> 00:27:37.590 align:start position:0%
it's the top of the sum2 function so
if<00:27:35.279><c> you</c><00:27:35.440><c> see</c><00:27:35.840><c> any</c><00:27:36.159><c> time</c><00:27:36.399><c> you</c><00:27:36.559><c> see</c><00:27:36.720><c> one</c><00:27:36.880><c> of</c><00:27:37.039><c> these</c>

00:27:37.590 --> 00:27:37.600 align:start position:0%
if you see any time you see one of these
 

00:27:37.600 --> 00:27:38.389 align:start position:0%
if you see any time you see one of these
um

00:27:38.389 --> 00:27:38.399 align:start position:0%
um
 

00:27:38.399 --> 00:27:39.750 align:start position:0%
um
all<00:27:38.480><c> the</c><00:27:38.640><c> kernel</c><00:27:39.039><c> addresses</c><00:27:39.360><c> will</c><00:27:39.520><c> look</c>

00:27:39.750 --> 00:27:39.760 align:start position:0%
all the kernel addresses will look
 

00:27:39.760 --> 00:27:44.149 align:start position:0%
all the kernel addresses will look
something<00:27:40.080><c> like</c><00:27:41.720><c> 0x8000</c>

00:27:44.149 --> 00:27:44.159 align:start position:0%
something like 0x8000
 

00:27:44.159 --> 00:27:48.070 align:start position:0%
something like 0x8000
some<00:27:44.399><c> numbers</c><00:27:46.640><c> those</c><00:27:47.120><c> uh</c><00:27:47.360><c> those</c><00:27:47.600><c> addresses</c>

00:27:48.070 --> 00:27:48.080 align:start position:0%
some numbers those uh those addresses
 

00:27:48.080 --> 00:27:50.230 align:start position:0%
some numbers those uh those addresses
you<00:27:48.240><c> can</c><00:27:48.399><c> jump</c><00:27:48.720><c> straight</c><00:27:49.039><c> into</c><00:27:49.360><c> kernel.asm</c>

00:27:50.230 --> 00:27:50.240 align:start position:0%
you can jump straight into kernel.asm
 

00:27:50.240 --> 00:27:51.750 align:start position:0%
you can jump straight into kernel.asm
and<00:27:50.399><c> find</c><00:27:50.640><c> the</c><00:27:50.799><c> exact</c>

00:27:51.750 --> 00:27:51.760 align:start position:0%
and find the exact
 

00:27:51.760 --> 00:27:53.669 align:start position:0%
and find the exact
line<00:27:52.240><c> of</c><00:27:52.480><c> assembly</c><00:27:52.880><c> where</c><00:27:53.039><c> the</c><00:27:53.200><c> problem</c><00:27:53.520><c> is</c>

00:27:53.669 --> 00:27:53.679 align:start position:0%
line of assembly where the problem is
 

00:27:53.679 --> 00:27:54.870 align:start position:0%
line of assembly where the problem is
occurring<00:27:54.080><c> and</c><00:27:54.159><c> then</c><00:27:54.320><c> you</c><00:27:54.480><c> can</c><00:27:54.559><c> set</c><00:27:54.799><c> your</c>

00:27:54.870 --> 00:27:54.880 align:start position:0%
occurring and then you can set your
 

00:27:54.880 --> 00:27:56.470 align:start position:0%
occurring and then you can set your
breakpoints<00:27:55.360><c> accordingly</c>

00:27:56.470 --> 00:27:56.480 align:start position:0%
breakpoints accordingly
 

00:27:56.480 --> 00:27:59.830 align:start position:0%
breakpoints accordingly
but<00:27:56.640><c> for</c><00:27:56.799><c> now</c><00:27:57.440><c> uh</c><00:27:57.840><c> that</c><00:27:58.080><c> top</c><00:27:58.399><c> window</c><00:27:58.880><c> in</c><00:27:59.120><c> tui</c>

00:27:59.830 --> 00:27:59.840 align:start position:0%
but for now uh that top window in tui
 

00:27:59.840 --> 00:28:03.029 align:start position:0%
but for now uh that top window in tui
is<00:28:00.159><c> source</c><00:28:00.640><c> and</c><00:28:00.799><c> if</c><00:28:00.880><c> we</c><00:28:01.360><c> want</c><00:28:01.600><c> to</c><00:28:01.840><c> look</c><00:28:02.080><c> at</c>

00:28:03.029 --> 00:28:03.039 align:start position:0%
is source and if we want to look at
 

00:28:03.039 --> 00:28:04.630 align:start position:0%
is source and if we want to look at
specifically<00:28:03.600><c> the</c><00:28:03.760><c> assembly</c><00:28:04.240><c> we</c><00:28:04.320><c> can</c><00:28:04.480><c> do</c>

00:28:04.630 --> 00:28:04.640 align:start position:0%
specifically the assembly we can do
 

00:28:04.640 --> 00:28:07.990 align:start position:0%
specifically the assembly we can do
layout<00:28:06.520><c> ngdasm</c>

00:28:07.990 --> 00:28:08.000 align:start position:0%
layout ngdasm
 

00:28:08.000 --> 00:28:09.990 align:start position:0%
layout ngdasm
and<00:28:08.159><c> that'll</c><00:28:08.640><c> give</c><00:28:08.880><c> us</c><00:28:09.200><c> all</c><00:28:09.360><c> of</c><00:28:09.440><c> the</c><00:28:09.520><c> assembly</c>

00:28:09.990 --> 00:28:10.000 align:start position:0%
and that'll give us all of the assembly
 

00:28:10.000 --> 00:28:11.110 align:start position:0%
and that'll give us all of the assembly
instructions

00:28:11.110 --> 00:28:11.120 align:start position:0%
instructions
 

00:28:11.120 --> 00:28:13.750 align:start position:0%
instructions
and<00:28:11.840><c> we</c><00:28:12.000><c> can</c><00:28:12.240><c> also</c><00:28:12.720><c> look</c><00:28:12.880><c> at</c><00:28:12.960><c> the</c><00:28:13.120><c> registers</c><00:28:13.679><c> if</c>

00:28:13.750 --> 00:28:13.760 align:start position:0%
and we can also look at the registers if
 

00:28:13.760 --> 00:28:16.149 align:start position:0%
and we can also look at the registers if
we<00:28:13.919><c> type</c><00:28:14.080><c> layout</c><00:28:14.480><c> reg</c><00:28:14.720><c> we'll</c><00:28:14.880><c> get</c><00:28:15.120><c> assembly</c>

00:28:16.149 --> 00:28:16.159 align:start position:0%
we type layout reg we'll get assembly
 

00:28:16.159 --> 00:28:18.549 align:start position:0%
we type layout reg we'll get assembly
and<00:28:16.480><c> registers</c><00:28:17.520><c> and</c><00:28:17.760><c> if</c><00:28:17.840><c> you</c><00:28:18.000><c> find</c><00:28:18.159><c> yourself</c>

00:28:18.549 --> 00:28:18.559 align:start position:0%
and registers and if you find yourself
 

00:28:18.559 --> 00:28:19.909 align:start position:0%
and registers and if you find yourself
you<00:28:18.640><c> know</c><00:28:18.799><c> wanting</c><00:28:19.120><c> to</c><00:28:19.279><c> scroll</c><00:28:19.600><c> through</c>

00:28:19.909 --> 00:28:19.919 align:start position:0%
you know wanting to scroll through
 

00:28:19.919 --> 00:28:21.350 align:start position:0%
you know wanting to scroll through
things

00:28:21.350 --> 00:28:21.360 align:start position:0%
things
 

00:28:21.360 --> 00:28:22.789 align:start position:0%
things
now<00:28:21.520><c> that</c><00:28:21.679><c> we</c><00:28:21.760><c> have</c><00:28:21.919><c> three</c><00:28:22.159><c> windows</c><00:28:22.559><c> we</c><00:28:22.640><c> need</c>

00:28:22.789 --> 00:28:22.799 align:start position:0%
now that we have three windows we need
 

00:28:22.799 --> 00:28:24.549 align:start position:0%
now that we have three windows we need
to<00:28:22.880><c> specify</c><00:28:23.360><c> which</c><00:28:23.520><c> one</c><00:28:23.760><c> is</c><00:28:23.840><c> focused</c><00:28:24.240><c> so</c><00:28:24.399><c> if</c><00:28:24.480><c> i</c>

00:28:24.549 --> 00:28:24.559 align:start position:0%
to specify which one is focused so if i
 

00:28:24.559 --> 00:28:25.909 align:start position:0%
to specify which one is focused so if i
want<00:28:24.720><c> to</c><00:28:24.799><c> look</c><00:28:24.960><c> through</c><00:28:25.200><c> all</c><00:28:25.279><c> the</c><00:28:25.360><c> registers</c>

00:28:25.909 --> 00:28:25.919 align:start position:0%
want to look through all the registers
 

00:28:25.919 --> 00:28:26.710 align:start position:0%
want to look through all the registers
i'm<00:28:26.000><c> going</c><00:28:26.080><c> to</c><00:28:26.320><c> focus</c>

00:28:26.710 --> 00:28:26.720 align:start position:0%
i'm going to focus
 

00:28:26.720 --> 00:28:29.750 align:start position:0%
i'm going to focus
reg<00:28:28.000><c> and</c><00:28:28.159><c> now</c><00:28:28.399><c> my</c><00:28:28.559><c> focus</c><00:28:28.960><c> is</c><00:28:29.120><c> on</c><00:28:29.279><c> the</c><00:28:29.360><c> register</c>

00:28:29.750 --> 00:28:29.760 align:start position:0%
reg and now my focus is on the register
 

00:28:29.760 --> 00:28:31.510 align:start position:0%
reg and now my focus is on the register
window<00:28:30.159><c> so</c><00:28:30.240><c> if</c><00:28:30.399><c> i</c>

00:28:31.510 --> 00:28:31.520 align:start position:0%
window so if i
 

00:28:31.520 --> 00:28:33.590 align:start position:0%
window so if i
move<00:28:31.679><c> the</c><00:28:31.840><c> arrow</c><00:28:32.159><c> keys</c><00:28:32.480><c> or</c><00:28:32.640><c> scroll</c><00:28:33.360><c> it'll</c>

00:28:33.590 --> 00:28:33.600 align:start position:0%
move the arrow keys or scroll it'll
 

00:28:33.600 --> 00:28:35.350 align:start position:0%
move the arrow keys or scroll it'll
start<00:28:33.840><c> scrolling</c><00:28:34.240><c> that</c><00:28:34.399><c> window</c>

00:28:35.350 --> 00:28:35.360 align:start position:0%
start scrolling that window
 

00:28:35.360 --> 00:28:38.070 align:start position:0%
start scrolling that window
so<00:28:35.520><c> for</c><00:28:35.679><c> now</c><00:28:35.919><c> we</c><00:28:36.000><c> can</c><00:28:36.159><c> focus</c><00:28:36.559><c> on</c><00:28:37.440><c> the</c><00:28:37.600><c> assembly</c>

00:28:38.070 --> 00:28:38.080 align:start position:0%
so for now we can focus on the assembly
 

00:28:38.080 --> 00:28:39.510 align:start position:0%
so for now we can focus on the assembly
window

00:28:39.510 --> 00:28:39.520 align:start position:0%
window
 

00:28:39.520 --> 00:28:41.029 align:start position:0%
window
and<00:28:39.679><c> once</c><00:28:39.919><c> we're</c><00:28:40.080><c> here</c><00:28:40.240><c> we</c><00:28:40.399><c> can</c><00:28:40.559><c> see</c><00:28:40.799><c> all</c><00:28:40.960><c> of</c>

00:28:41.029 --> 00:28:41.039 align:start position:0%
and once we're here we can see all of
 

00:28:41.039 --> 00:28:42.549 align:start position:0%
and once we're here we can see all of
the<00:28:41.200><c> things</c><00:28:42.159><c> uh</c>

00:28:42.549 --> 00:28:42.559 align:start position:0%
the things uh
 

00:28:42.559 --> 00:28:44.950 align:start position:0%
the things uh
so<00:28:42.799><c> let's</c><00:28:42.960><c> see</c><00:28:43.200><c> we</c><00:28:43.360><c> can</c><00:28:43.600><c> see</c><00:28:44.000><c> in</c><00:28:44.159><c> the</c><00:28:44.320><c> registry</c>

00:28:44.950 --> 00:28:44.960 align:start position:0%
so let's see we can see in the registry
 

00:28:44.960 --> 00:28:46.630 align:start position:0%
so let's see we can see in the registry
register<00:28:45.440><c> window</c><00:28:45.840><c> we</c><00:28:46.000><c> can</c><00:28:46.080><c> see</c><00:28:46.240><c> that</c><00:28:46.399><c> t</c>

00:28:46.630 --> 00:28:46.640 align:start position:0%
register window we can see that t
 

00:28:46.640 --> 00:28:49.750 align:start position:0%
register window we can see that t
0<00:28:47.039><c> contains</c><00:28:47.520><c> this</c><00:28:47.760><c> value</c><00:28:48.640><c> we</c><00:28:48.720><c> can</c><00:28:48.880><c> see</c><00:28:48.960><c> that</c><00:28:49.200><c> a0</c>

00:28:49.750 --> 00:28:49.760 align:start position:0%
0 contains this value we can see that a0
 

00:28:49.760 --> 00:28:51.830 align:start position:0%
0 contains this value we can see that a0
contains<00:28:50.240><c> this</c><00:28:50.480><c> value</c>

00:28:51.830 --> 00:28:51.840 align:start position:0%
contains this value
 

00:28:51.840 --> 00:28:54.149 align:start position:0%
contains this value
and<00:28:52.240><c> as</c><00:28:52.480><c> we</c><00:28:52.720><c> step</c><00:28:53.039><c> through</c><00:28:53.279><c> the</c><00:28:53.440><c> assembly</c><00:28:54.080><c> we</c>

00:28:54.149 --> 00:28:54.159 align:start position:0%
and as we step through the assembly we
 

00:28:54.159 --> 00:28:55.190 align:start position:0%
and as we step through the assembly we
can<00:28:54.480><c> watch</c>

00:28:55.190 --> 00:28:55.200 align:start position:0%
can watch
 

00:28:55.200 --> 00:28:59.269 align:start position:0%
can watch
see<00:28:55.440><c> okay</c><00:28:57.120><c> t</c><00:28:57.360><c> 0</c><00:28:57.679><c> just</c><00:28:58.000><c> got</c><00:28:58.240><c> the</c><00:28:58.399><c> value</c><00:28:58.720><c> of</c><00:28:58.799><c> a0</c>

00:28:59.269 --> 00:28:59.279 align:start position:0%
see okay t 0 just got the value of a0
 

00:28:59.279 --> 00:28:59.750 align:start position:0%
see okay t 0 just got the value of a0
which<00:28:59.440><c> was</c>

00:28:59.750 --> 00:28:59.760 align:start position:0%
which was
 

00:28:59.760 --> 00:29:01.590 align:start position:0%
which was
5<00:29:00.080><c> and</c><00:29:00.240><c> it's</c><00:29:00.480><c> nicely</c><00:29:00.880><c> highlighted</c><00:29:01.440><c> the</c>

00:29:01.590 --> 00:29:01.600 align:start position:0%
5 and it's nicely highlighted the
 

00:29:01.600 --> 00:29:03.269 align:start position:0%
5 and it's nicely highlighted the
register<00:29:02.000><c> that's</c><00:29:02.320><c> changed</c>

00:29:03.269 --> 00:29:03.279 align:start position:0%
register that's changed
 

00:29:03.279 --> 00:29:05.669 align:start position:0%
register that's changed
here<00:29:04.080><c> and</c><00:29:04.240><c> we</c><00:29:04.399><c> can</c><00:29:04.559><c> just</c><00:29:04.720><c> keep</c><00:29:05.039><c> remember</c><00:29:05.360><c> if</c><00:29:05.440><c> we</c>

00:29:05.669 --> 00:29:05.679 align:start position:0%
here and we can just keep remember if we
 

00:29:05.679 --> 00:29:07.669 align:start position:0%
here and we can just keep remember if we
if<00:29:05.760><c> we</c><00:29:05.840><c> push</c><00:29:06.159><c> enter</c><00:29:06.480><c> we</c><00:29:06.559><c> get</c><00:29:06.799><c> the</c>

00:29:07.669 --> 00:29:07.679 align:start position:0%
if we push enter we get the
 

00:29:07.679 --> 00:29:09.669 align:start position:0%
if we push enter we get the
most<00:29:07.919><c> recently</c><00:29:08.399><c> executed</c><00:29:08.960><c> instructions</c><00:29:09.520><c> so</c>

00:29:09.669 --> 00:29:09.679 align:start position:0%
most recently executed instructions so
 

00:29:09.679 --> 00:29:10.950 align:start position:0%
most recently executed instructions so
we<00:29:09.840><c> can</c><00:29:10.080><c> go</c><00:29:10.320><c> through</c>

00:29:10.950 --> 00:29:10.960 align:start position:0%
we can go through
 

00:29:10.960 --> 00:29:13.430 align:start position:0%
we can go through
all<00:29:11.039><c> right</c><00:29:11.200><c> we</c><00:29:11.360><c> set</c><00:29:11.520><c> a0</c><00:29:12.000><c> to</c><00:29:12.159><c> 0</c><00:29:12.880><c> and</c><00:29:13.039><c> now</c><00:29:13.200><c> we</c><00:29:13.360><c> can</c>

00:29:13.430 --> 00:29:13.440 align:start position:0%
all right we set a0 to 0 and now we can
 

00:29:13.440 --> 00:29:15.110 align:start position:0%
all right we set a0 to 0 and now we can
just<00:29:13.600><c> kind</c><00:29:13.760><c> of</c><00:29:13.840><c> watch</c><00:29:14.159><c> ourselves</c><00:29:14.640><c> go</c><00:29:14.880><c> through</c>

00:29:15.110 --> 00:29:15.120 align:start position:0%
just kind of watch ourselves go through
 

00:29:15.120 --> 00:29:16.389 align:start position:0%
just kind of watch ourselves go through
this<00:29:15.360><c> loop</c>

00:29:16.389 --> 00:29:16.399 align:start position:0%
this loop
 

00:29:16.399 --> 00:29:19.909 align:start position:0%
this loop
and<00:29:17.919><c> sum</c><00:29:18.159><c> up</c><00:29:18.320><c> the</c><00:29:18.399><c> values</c>

00:29:19.909 --> 00:29:19.919 align:start position:0%
and sum up the values
 

00:29:19.919 --> 00:29:21.750 align:start position:0%
and sum up the values
and<00:29:20.080><c> again</c><00:29:20.320><c> this</c><00:29:20.559><c> is</c><00:29:20.640><c> like</c><00:29:20.799><c> a</c><00:29:21.120><c> complete</c><00:29:21.679><c> you</c>

00:29:21.750 --> 00:29:21.760 align:start position:0%
and again this is like a complete you
 

00:29:21.760 --> 00:29:23.430 align:start position:0%
and again this is like a complete you
know<00:29:22.000><c> toy</c><00:29:22.320><c> function</c>

00:29:23.430 --> 00:29:23.440 align:start position:0%
know toy function
 

00:29:23.440 --> 00:29:26.310 align:start position:0%
know toy function
and<00:29:23.600><c> then</c><00:29:23.679><c> we</c><00:29:23.840><c> can</c><00:29:23.919><c> continue</c><00:29:24.960><c> and</c><00:29:25.919><c> you</c><00:29:26.080><c> know</c>

00:29:26.310 --> 00:29:26.320 align:start position:0%
and then we can continue and you know
 

00:29:26.320 --> 00:29:27.590 align:start position:0%
and then we can continue and you know
live<00:29:26.559><c> our</c><00:29:26.720><c> lives</c><00:29:26.960><c> and</c><00:29:27.039><c> if</c><00:29:27.200><c> you're</c><00:29:27.360><c> ever</c>

00:29:27.590 --> 00:29:27.600 align:start position:0%
live our lives and if you're ever
 

00:29:27.600 --> 00:29:29.750 align:start position:0%
live our lives and if you're ever
curious<00:29:28.080><c> about</c>

00:29:29.750 --> 00:29:29.760 align:start position:0%
curious about
 

00:29:29.760 --> 00:29:31.750 align:start position:0%
curious about
what<00:29:30.000><c> kind</c><00:29:30.240><c> of</c><00:29:30.480><c> breakpoints</c><00:29:31.120><c> you've</c><00:29:31.360><c> set</c><00:29:31.600><c> or</c>

00:29:31.750 --> 00:29:31.760 align:start position:0%
what kind of breakpoints you've set or
 

00:29:31.760 --> 00:29:33.990 align:start position:0%
what kind of breakpoints you've set or
you<00:29:31.919><c> lose</c><00:29:32.240><c> track</c><00:29:32.480><c> of</c><00:29:32.720><c> what</c><00:29:32.880><c> you</c><00:29:33.039><c> were</c><00:29:33.279><c> doing</c>

00:29:33.990 --> 00:29:34.000 align:start position:0%
you lose track of what you were doing
 

00:29:34.000 --> 00:29:38.070 align:start position:0%
you lose track of what you were doing
if<00:29:34.159><c> you</c><00:29:34.320><c> type</c><00:29:34.640><c> info</c><00:29:35.840><c> break</c><00:29:36.720><c> or</c><00:29:36.960><c> break</c><00:29:37.279><c> points</c>

00:29:38.070 --> 00:29:38.080 align:start position:0%
if you type info break or break points
 

00:29:38.080 --> 00:29:39.909 align:start position:0%
if you type info break or break points
you<00:29:38.320><c> can</c><00:29:38.559><c> see</c><00:29:38.960><c> all</c><00:29:39.120><c> of</c><00:29:39.200><c> the</c><00:29:39.360><c> breakpoints</c><00:29:39.760><c> that</c>

00:29:39.909 --> 00:29:39.919 align:start position:0%
you can see all of the breakpoints that
 

00:29:39.919 --> 00:29:41.350 align:start position:0%
you can see all of the breakpoints that
you've<00:29:40.080><c> set</c><00:29:40.240><c> in</c><00:29:40.399><c> your</c><00:29:40.559><c> code</c>

00:29:41.350 --> 00:29:41.360 align:start position:0%
you've set in your code
 

00:29:41.360 --> 00:29:43.269 align:start position:0%
you've set in your code
and<00:29:42.080><c> you</c><00:29:42.159><c> can</c><00:29:42.320><c> even</c><00:29:42.559><c> see</c><00:29:42.880><c> okay</c><00:29:43.120><c> this</c>

00:29:43.269 --> 00:29:43.279 align:start position:0%
and you can even see okay this
 

00:29:43.279 --> 00:29:45.510 align:start position:0%
and you can even see okay this
breakpoint<00:29:43.679><c> has</c><00:29:43.840><c> already</c><00:29:44.080><c> been</c><00:29:44.240><c> hit</c><00:29:44.480><c> one</c><00:29:44.799><c> time</c>

00:29:45.510 --> 00:29:45.520 align:start position:0%
breakpoint has already been hit one time
 

00:29:45.520 --> 00:29:47.830 align:start position:0%
breakpoint has already been hit one time
and<00:29:45.600><c> you</c><00:29:45.760><c> get</c><00:29:45.919><c> lots</c><00:29:46.159><c> of</c><00:29:46.240><c> useful</c><00:29:46.640><c> information</c>

00:29:47.830 --> 00:29:47.840 align:start position:0%
and you get lots of useful information
 

00:29:47.840 --> 00:29:49.590 align:start position:0%
and you get lots of useful information
doing<00:29:48.080><c> that</c>

00:29:49.590 --> 00:29:49.600 align:start position:0%
doing that
 

00:29:49.600 --> 00:29:51.510 align:start position:0%
doing that
if<00:29:49.840><c> you</c><00:29:50.399><c> don't</c><00:29:50.559><c> want</c><00:29:50.720><c> to</c><00:29:50.799><c> have</c><00:29:50.960><c> the</c><00:29:51.120><c> register</c>

00:29:51.510 --> 00:29:51.520 align:start position:0%
if you don't want to have the register
 

00:29:51.520 --> 00:29:53.350 align:start position:0%
if you don't want to have the register
window<00:29:51.840><c> but</c><00:29:52.000><c> you</c><00:29:52.159><c> do</c><00:29:52.480><c> want</c><00:29:52.640><c> to</c><00:29:52.720><c> look</c><00:29:53.039><c> at</c><00:29:53.200><c> the</c>

00:29:53.350 --> 00:29:53.360 align:start position:0%
window but you do want to look at the
 

00:29:53.360 --> 00:29:54.789 align:start position:0%
window but you do want to look at the
registers

00:29:54.789 --> 00:29:54.799 align:start position:0%
registers
 

00:29:54.799 --> 00:29:58.230 align:start position:0%
registers
info<00:29:55.360><c> reg</c><00:29:56.000><c> or</c><00:29:56.320><c> info</c><00:29:56.640><c> registers</c><00:29:57.279><c> or</c><00:29:57.440><c> ireg</c><00:29:58.000><c> or</c>

00:29:58.230 --> 00:29:58.240 align:start position:0%
info reg or info registers or ireg or
 

00:29:58.240 --> 00:29:59.269 align:start position:0%
info reg or info registers or ireg or
any<00:29:58.480><c> of</c><00:29:58.559><c> the</c>

00:29:59.269 --> 00:29:59.279 align:start position:0%
any of the
 

00:29:59.279 --> 00:30:02.310 align:start position:0%
any of the
numerous<00:29:59.760><c> gdb</c><00:30:01.440><c> shortenings</c>

00:30:02.310 --> 00:30:02.320 align:start position:0%
numerous gdb shortenings
 

00:30:02.320 --> 00:30:03.830 align:start position:0%
numerous gdb shortenings
will<00:30:02.640><c> bring</c><00:30:02.880><c> up</c><00:30:03.039><c> the</c><00:30:03.120><c> register</c><00:30:03.440><c> window</c><00:30:03.760><c> as</c>

00:30:03.830 --> 00:30:03.840 align:start position:0%
will bring up the register window as
 

00:30:03.840 --> 00:30:05.909 align:start position:0%
will bring up the register window as
well

00:30:05.909 --> 00:30:05.919 align:start position:0%
well
 

00:30:05.919 --> 00:30:08.310 align:start position:0%
well
um<00:30:07.039><c> so</c><00:30:07.279><c> with</c><00:30:07.360><c> that</c><00:30:07.600><c> is</c><00:30:07.679><c> there</c><00:30:07.840><c> any</c><00:30:08.000><c> are</c><00:30:08.159><c> there</c>

00:30:08.310 --> 00:30:08.320 align:start position:0%
um so with that is there any are there
 

00:30:08.320 --> 00:30:09.350 align:start position:0%
um so with that is there any are there
any<00:30:08.559><c> questions</c><00:30:08.960><c> about</c>

00:30:09.350 --> 00:30:09.360 align:start position:0%
any questions about
 

00:30:09.360 --> 00:30:12.470 align:start position:0%
any questions about
gdd<00:30:10.320><c> um</c><00:30:10.640><c> simple</c><00:30:10.960><c> ones</c><00:30:11.279><c> i</c><00:30:11.360><c> know</c><00:30:11.600><c> it's</c><00:30:11.760><c> been</c>

00:30:12.470 --> 00:30:12.480 align:start position:0%
gdd um simple ones i know it's been
 

00:30:12.480 --> 00:30:14.870 align:start position:0%
gdd um simple ones i know it's been
um<00:30:12.960><c> there's</c><00:30:13.200><c> been</c><00:30:13.600><c> lots</c><00:30:13.840><c> of</c><00:30:14.000><c> post</c><00:30:14.159><c> sump</c><00:30:14.480><c> shots</c>

00:30:14.870 --> 00:30:14.880 align:start position:0%
um there's been lots of post sump shots
 

00:30:14.880 --> 00:30:15.909 align:start position:0%
um there's been lots of post sump shots
about<00:30:15.120><c> it</c><00:30:15.279><c> so</c>

00:30:15.909 --> 00:30:15.919 align:start position:0%
about it so
 

00:30:15.919 --> 00:30:17.830 align:start position:0%
about it so
now<00:30:16.159><c> is</c><00:30:16.240><c> a</c><00:30:16.320><c> good</c><00:30:16.399><c> time</c><00:30:16.640><c> to</c><00:30:16.799><c> just</c><00:30:16.960><c> ask</c><00:30:17.360><c> uh</c><00:30:17.600><c> some</c>

00:30:17.830 --> 00:30:17.840 align:start position:0%
now is a good time to just ask uh some
 

00:30:17.840 --> 00:30:19.669 align:start position:0%
now is a good time to just ask uh some
straightforward<00:30:18.559><c> we'll</c><00:30:18.880><c> i'll</c><00:30:19.120><c> be</c><00:30:19.279><c> showing</c>

00:30:19.669 --> 00:30:19.679 align:start position:0%
straightforward we'll i'll be showing
 

00:30:19.679 --> 00:30:20.630 align:start position:0%
straightforward we'll i'll be showing
more

00:30:20.630 --> 00:30:20.640 align:start position:0%
more
 

00:30:20.640 --> 00:30:23.190 align:start position:0%
more
usage<00:30:20.960><c> of</c><00:30:21.200><c> ddb</c><00:30:22.080><c> what</c><00:30:22.320><c> command</c><00:30:22.640><c> did</c><00:30:22.799><c> you</c><00:30:22.880><c> use</c><00:30:23.120><c> to</c>

00:30:23.190 --> 00:30:23.200 align:start position:0%
usage of ddb what command did you use to
 

00:30:23.200 --> 00:30:25.750 align:start position:0%
usage of ddb what command did you use to
open<00:30:23.440><c> the</c><00:30:23.600><c> multiple</c><00:30:24.000><c> windows</c><00:30:24.399><c> so</c><00:30:24.559><c> i</c><00:30:24.720><c> use</c><00:30:24.960><c> tmux</c>

00:30:25.750 --> 00:30:25.760 align:start position:0%
open the multiple windows so i use tmux
 

00:30:25.760 --> 00:30:28.870 align:start position:0%
open the multiple windows so i use tmux
so<00:30:25.919><c> i</c><00:30:26.000><c> can</c><00:30:26.159><c> show</c><00:30:26.399><c> just</c><00:30:26.640><c> from</c><00:30:26.880><c> scratch</c><00:30:28.080><c> uh</c><00:30:28.480><c> if</c><00:30:28.640><c> we</c>

00:30:28.870 --> 00:30:28.880 align:start position:0%
so i can show just from scratch uh if we
 

00:30:28.880 --> 00:30:29.190 align:start position:0%
so i can show just from scratch uh if we
go

00:30:29.190 --> 00:30:29.200 align:start position:0%
go
 

00:30:29.200 --> 00:30:31.669 align:start position:0%
go
here<00:30:29.520><c> and</c><00:30:29.679><c> i</c><00:30:29.840><c> open</c><00:30:30.080><c> a</c><00:30:30.159><c> new</c><00:30:30.399><c> terminal</c><00:30:31.200><c> so</c><00:30:31.360><c> here's</c>

00:30:31.669 --> 00:30:31.679 align:start position:0%
here and i open a new terminal so here's
 

00:30:31.679 --> 00:30:33.750 align:start position:0%
here and i open a new terminal so here's
just<00:30:31.840><c> a</c><00:30:31.919><c> blank</c><00:30:32.159><c> terminal</c>

00:30:33.750 --> 00:30:33.760 align:start position:0%
just a blank terminal
 

00:30:33.760 --> 00:30:35.830 align:start position:0%
just a blank terminal
if<00:30:33.840><c> you</c><00:30:34.000><c> type</c><00:30:34.320><c> tmux</c><00:30:34.960><c> and</c><00:30:35.039><c> this</c><00:30:35.200><c> is</c><00:30:35.360><c> available</c>

00:30:35.830 --> 00:30:35.840 align:start position:0%
if you type tmux and this is available
 

00:30:35.840 --> 00:30:40.070 align:start position:0%
if you type tmux and this is available
on<00:30:36.000><c> athena</c>

00:30:40.070 --> 00:30:40.080 align:start position:0%
 
 

00:30:40.080 --> 00:30:41.590 align:start position:0%
 
i'll<00:30:40.480><c> address</c><00:30:40.720><c> the</c><00:30:40.880><c> next</c><00:30:41.039><c> question</c><00:30:41.360><c> in</c><00:30:41.520><c> a</c>

00:30:41.590 --> 00:30:41.600 align:start position:0%
i'll address the next question in a
 

00:30:41.600 --> 00:30:43.590 align:start position:0%
i'll address the next question in a
second<00:30:42.159><c> so</c><00:30:42.399><c> now</c><00:30:42.559><c> i'm</c><00:30:42.720><c> in</c><00:30:42.799><c> tmux</c><00:30:43.200><c> which</c><00:30:43.360><c> you</c><00:30:43.520><c> can</c>

00:30:43.590 --> 00:30:43.600 align:start position:0%
second so now i'm in tmux which you can
 

00:30:43.600 --> 00:30:44.710 align:start position:0%
second so now i'm in tmux which you can
tell<00:30:43.919><c> by</c><00:30:44.159><c> this</c>

00:30:44.710 --> 00:30:44.720 align:start position:0%
tell by this
 

00:30:44.720 --> 00:30:47.909 align:start position:0%
tell by this
green<00:30:45.200><c> bar</c><00:30:45.600><c> at</c><00:30:45.679><c> the</c><00:30:45.840><c> bottom</c><00:30:46.799><c> and</c><00:30:47.279><c> if</c><00:30:47.440><c> you</c><00:30:47.600><c> want</c>

00:30:47.909 --> 00:30:47.919 align:start position:0%
green bar at the bottom and if you want
 

00:30:47.919 --> 00:30:48.389 align:start position:0%
green bar at the bottom and if you want
to

00:30:48.389 --> 00:30:48.399 align:start position:0%
to
 

00:30:48.399 --> 00:30:49.909 align:start position:0%
to
get<00:30:48.799><c> so</c><00:30:48.960><c> there's</c><00:30:49.120><c> a</c><00:30:49.200><c> couple</c><00:30:49.360><c> ways</c><00:30:49.600><c> you</c><00:30:49.679><c> can</c><00:30:49.760><c> do</c>

00:30:49.909 --> 00:30:49.919 align:start position:0%
get so there's a couple ways you can do
 

00:30:49.919 --> 00:30:51.909 align:start position:0%
get so there's a couple ways you can do
multiple<00:30:50.240><c> windows</c><00:30:50.559><c> in</c><00:30:50.640><c> tebow</c><00:30:51.120><c> tmux</c>

00:30:51.909 --> 00:30:51.919 align:start position:0%
multiple windows in tebow tmux
 

00:30:51.919 --> 00:30:55.669 align:start position:0%
multiple windows in tebow tmux
uh<00:30:52.240><c> if</c><00:30:52.399><c> you're</c><00:30:53.279><c> so</c><00:30:53.520><c> you</c><00:30:53.600><c> can</c><00:30:53.760><c> type</c><00:30:54.559><c> control</c><00:30:54.960><c> bc</c>

00:30:55.669 --> 00:30:55.679 align:start position:0%
uh if you're so you can type control bc
 

00:30:55.679 --> 00:30:58.310 align:start position:0%
uh if you're so you can type control bc
and<00:30:56.480><c> uh</c><00:30:56.799><c> i</c><00:30:56.960><c> know</c><00:30:57.200><c> that's</c><00:30:57.440><c> sometimes</c><00:30:58.000><c> if</c><00:30:58.159><c> you're</c>

00:30:58.310 --> 00:30:58.320 align:start position:0%
and uh i know that's sometimes if you're
 

00:30:58.320 --> 00:30:59.909 align:start position:0%
and uh i know that's sometimes if you're
used<00:30:58.480><c> to</c><00:30:58.559><c> using</c><00:30:58.799><c> emacs</c><00:30:59.279><c> that</c><00:30:59.360><c> will</c><00:30:59.519><c> make</c><00:30:59.679><c> a</c><00:30:59.760><c> lot</c>

00:30:59.909 --> 00:30:59.919 align:start position:0%
used to using emacs that will make a lot
 

00:30:59.919 --> 00:31:00.950 align:start position:0%
used to using emacs that will make a lot
of<00:31:00.000><c> sense</c><00:31:00.399><c> but</c>

00:31:00.950 --> 00:31:00.960 align:start position:0%
of sense but
 

00:31:00.960 --> 00:31:04.149 align:start position:0%
of sense but
um<00:31:02.000><c> normal</c><00:31:02.320><c> people</c><00:31:02.720><c> who</c><00:31:02.880><c> don't</c><00:31:03.039><c> use</c><00:31:03.200><c> emacs</c>

00:31:04.149 --> 00:31:04.159 align:start position:0%
um normal people who don't use emacs
 

00:31:04.159 --> 00:31:06.789 align:start position:0%
um normal people who don't use emacs
that's<00:31:04.799><c> hitting</c><00:31:05.120><c> control</c><00:31:05.760><c> and</c><00:31:05.840><c> then</c><00:31:06.080><c> d</c><00:31:06.640><c> and</c>

00:31:06.789 --> 00:31:06.799 align:start position:0%
that's hitting control and then d and
 

00:31:06.799 --> 00:31:07.590 align:start position:0%
that's hitting control and then d and
then<00:31:07.120><c> hitting</c>

00:31:07.590 --> 00:31:07.600 align:start position:0%
then hitting
 

00:31:07.600 --> 00:31:09.830 align:start position:0%
then hitting
c<00:31:07.919><c> on</c><00:31:08.080><c> its</c><00:31:08.240><c> own</c><00:31:08.480><c> afterwards</c><00:31:09.360><c> that</c><00:31:09.519><c> will</c><00:31:09.679><c> get</c>

00:31:09.830 --> 00:31:09.840 align:start position:0%
c on its own afterwards that will get
 

00:31:09.840 --> 00:31:11.509 align:start position:0%
c on its own afterwards that will get
you<00:31:10.080><c> a</c><00:31:10.159><c> second</c><00:31:10.480><c> window</c><00:31:10.880><c> which</c><00:31:11.120><c> you</c><00:31:11.200><c> can</c><00:31:11.360><c> then</c>

00:31:11.509 --> 00:31:11.519 align:start position:0%
you a second window which you can then
 

00:31:11.519 --> 00:31:13.509 align:start position:0%
you a second window which you can then
navigate<00:31:12.000><c> between</c><00:31:12.480><c> with</c><00:31:12.720><c> control</c><00:31:13.200><c> b</c>

00:31:13.509 --> 00:31:13.519 align:start position:0%
navigate between with control b
 

00:31:13.519 --> 00:31:16.630 align:start position:0%
navigate between with control b
and<00:31:13.600><c> then</c><00:31:13.919><c> p</c><00:31:14.640><c> control</c><00:31:14.960><c> b</c><00:31:15.200><c> and</c><00:31:15.279><c> then</c><00:31:15.600><c> n</c><00:31:16.240><c> to</c><00:31:16.399><c> go</c>

00:31:16.630 --> 00:31:16.640 align:start position:0%
and then p control b and then n to go
 

00:31:16.640 --> 00:31:17.750 align:start position:0%
and then p control b and then n to go
previous<00:31:17.120><c> and</c><00:31:17.279><c> next</c>

00:31:17.750 --> 00:31:17.760 align:start position:0%
previous and next
 

00:31:17.760 --> 00:31:19.350 align:start position:0%
previous and next
yeah<00:31:18.000><c> and</c><00:31:18.080><c> david</c><00:31:18.399><c> just</c><00:31:18.559><c> posted</c><00:31:18.880><c> a</c><00:31:18.960><c> t-much</c>

00:31:19.350 --> 00:31:19.360 align:start position:0%
yeah and david just posted a t-much
 

00:31:19.360 --> 00:31:21.269 align:start position:0%
yeah and david just posted a t-much
cheat<00:31:19.600><c> sheet</c><00:31:19.840><c> which</c><00:31:20.080><c> is</c><00:31:20.240><c> useful</c>

00:31:21.269 --> 00:31:21.279 align:start position:0%
cheat sheet which is useful
 

00:31:21.279 --> 00:31:22.870 align:start position:0%
cheat sheet which is useful
and<00:31:21.440><c> if</c><00:31:21.600><c> you</c><00:31:21.679><c> want</c><00:31:21.840><c> to</c><00:31:21.919><c> split</c><00:31:22.240><c> the</c><00:31:22.320><c> windows</c><00:31:22.799><c> i</c>

00:31:22.870 --> 00:31:22.880 align:start position:0%
and if you want to split the windows i
 

00:31:22.880 --> 00:31:24.310 align:start position:0%
and if you want to split the windows i
think<00:31:23.039><c> it's</c><00:31:23.200><c> ctrl</c><00:31:23.600><c> b</c><00:31:23.919><c> and</c><00:31:24.000><c> then</c>

00:31:24.310 --> 00:31:24.320 align:start position:0%
think it's ctrl b and then
 

00:31:24.320 --> 00:31:27.990 align:start position:0%
think it's ctrl b and then
the<00:31:24.480><c> percent</c><00:31:24.880><c> sign</c><00:31:25.279><c> will</c><00:31:25.440><c> split</c><00:31:25.760><c> them</c><00:31:26.480><c> um</c>

00:31:27.990 --> 00:31:28.000 align:start position:0%
the percent sign will split them um
 

00:31:28.000 --> 00:31:30.549 align:start position:0%
the percent sign will split them um
vertically<00:31:28.720><c> and</c><00:31:28.880><c> then</c><00:31:29.679><c> sing</c><00:31:30.000><c> a</c><00:31:30.159><c> double</c>

00:31:30.549 --> 00:31:30.559 align:start position:0%
vertically and then sing a double
 

00:31:30.559 --> 00:31:31.269 align:start position:0%
vertically and then sing a double
control<00:31:30.960><c> b</c>

00:31:31.269 --> 00:31:31.279 align:start position:0%
control b
 

00:31:31.279 --> 00:31:33.990 align:start position:0%
control b
and<00:31:31.360><c> then</c><00:31:31.600><c> double</c><00:31:31.919><c> quote</c><00:31:32.399><c> we'll</c><00:31:32.799><c> split</c><00:31:33.200><c> them</c>

00:31:33.990 --> 00:31:34.000 align:start position:0%
and then double quote we'll split them
 

00:31:34.000 --> 00:31:35.830 align:start position:0%
and then double quote we'll split them
uh<00:31:34.240><c> horizontally</c>

00:31:35.830 --> 00:31:35.840 align:start position:0%
uh horizontally
 

00:31:35.840 --> 00:31:37.110 align:start position:0%
uh horizontally
and<00:31:35.919><c> so</c><00:31:36.080><c> that's</c><00:31:36.240><c> how</c><00:31:36.399><c> we</c><00:31:36.480><c> get</c><00:31:36.640><c> them</c><00:31:36.720><c> and</c><00:31:36.799><c> if</c>

00:31:37.110 --> 00:31:37.120 align:start position:0%
and so that's how we get them and if
 

00:31:37.120 --> 00:31:39.110 align:start position:0%
and so that's how we get them and if
we're<00:31:37.279><c> in</c><00:31:37.360><c> this</c><00:31:37.519><c> state</c><00:31:37.679><c> we</c><00:31:37.840><c> can</c><00:31:37.919><c> use</c><00:31:38.080><c> control</c><00:31:38.480><c> b</c>

00:31:39.110 --> 00:31:39.120 align:start position:0%
we're in this state we can use control b
 

00:31:39.120 --> 00:31:42.870 align:start position:0%
we're in this state we can use control b
and<00:31:39.360><c> o</c><00:31:40.080><c> to</c><00:31:40.240><c> jump</c><00:31:40.480><c> between</c><00:31:40.960><c> our</c><00:31:41.679><c> windows</c>

00:31:42.870 --> 00:31:42.880 align:start position:0%
and o to jump between our windows
 

00:31:42.880 --> 00:31:44.710 align:start position:0%
and o to jump between our windows
so<00:31:43.039><c> that's</c><00:31:43.200><c> what's</c><00:31:44.000><c> that's</c><00:31:44.240><c> how</c><00:31:44.399><c> i</c><00:31:44.480><c> got</c><00:31:44.640><c> the</c>

00:31:44.710 --> 00:31:44.720 align:start position:0%
so that's what's that's how i got the
 

00:31:44.720 --> 00:31:46.630 align:start position:0%
so that's what's that's how i got the
multiple<00:31:45.120><c> windows</c><00:31:45.600><c> yeah</c><00:31:45.679><c> i</c><00:31:45.760><c> don't</c><00:31:46.000><c> care</c>

00:31:46.630 --> 00:31:46.640 align:start position:0%
multiple windows yeah i don't care
 

00:31:46.640 --> 00:31:49.830 align:start position:0%
multiple windows yeah i don't care
um<00:31:47.919><c> and</c><00:31:48.080><c> then</c><00:31:48.559><c> ahmed</c><00:31:49.200><c> asked</c>

00:31:49.830 --> 00:31:49.840 align:start position:0%
um and then ahmed asked
 

00:31:49.840 --> 00:31:51.190 align:start position:0%
um and then ahmed asked
why<00:31:50.080><c> is</c><00:31:50.159><c> this</c><00:31:50.320><c> displaying</c><00:31:50.720><c> assembly</c>

00:31:51.190 --> 00:31:51.200 align:start position:0%
why is this displaying assembly
 

00:31:51.200 --> 00:31:52.950 align:start position:0%
why is this displaying assembly
addresses<00:31:51.679><c> again</c><00:31:52.080><c> instead</c><00:31:52.399><c> of</c><00:31:52.480><c> c</c><00:31:52.720><c> line</c>

00:31:52.950 --> 00:31:52.960 align:start position:0%
addresses again instead of c line
 

00:31:52.960 --> 00:31:53.750 align:start position:0%
addresses again instead of c line
numbers

00:31:53.750 --> 00:31:53.760 align:start position:0%
numbers
 

00:31:53.760 --> 00:31:57.909 align:start position:0%
numbers
ah<00:31:54.000><c> so</c><00:31:54.720><c> because</c><00:31:55.200><c> the</c><00:31:55.679><c> the</c><00:31:55.919><c> function</c>

00:31:57.909 --> 00:31:57.919 align:start position:0%
ah so because the the function
 

00:31:57.919 --> 00:32:00.230 align:start position:0%
ah so because the the function
so<00:31:58.159><c> if</c><00:31:58.240><c> we</c><00:31:58.320><c> go</c><00:31:58.720><c> back</c><00:31:58.960><c> to</c><00:31:59.360><c> the</c><00:31:59.760><c> assembly</c>

00:32:00.230 --> 00:32:00.240 align:start position:0%
so if we go back to the assembly
 

00:32:00.240 --> 00:32:00.950 align:start position:0%
so if we go back to the assembly
function

00:32:00.950 --> 00:32:00.960 align:start position:0%
function
 

00:32:00.960 --> 00:32:02.870 align:start position:0%
function
this<00:32:01.120><c> is</c><00:32:01.279><c> implemented</c><00:32:01.760><c> entirely</c><00:32:02.240><c> in</c><00:32:02.399><c> assembly</c>

00:32:02.870 --> 00:32:02.880 align:start position:0%
this is implemented entirely in assembly
 

00:32:02.880 --> 00:32:04.310 align:start position:0%
this is implemented entirely in assembly
and<00:32:03.039><c> not</c><00:32:03.200><c> at</c><00:32:03.360><c> all</c><00:32:03.519><c> in</c><00:32:03.760><c> c</c>

00:32:04.310 --> 00:32:04.320 align:start position:0%
and not at all in c
 

00:32:04.320 --> 00:32:05.990 align:start position:0%
and not at all in c
and<00:32:04.399><c> so</c><00:32:04.559><c> there</c><00:32:04.720><c> just</c><00:32:04.960><c> aren't</c><00:32:05.200><c> any</c><00:32:05.440><c> associated</c>

00:32:05.990 --> 00:32:06.000 align:start position:0%
and so there just aren't any associated
 

00:32:06.000 --> 00:32:07.830 align:start position:0%
and so there just aren't any associated
c<00:32:06.240><c> line</c><00:32:06.480><c> numbers</c><00:32:06.799><c> for</c><00:32:06.960><c> this</c>

00:32:07.830 --> 00:32:07.840 align:start position:0%
c line numbers for this
 

00:32:07.840 --> 00:32:10.950 align:start position:0%
c line numbers for this
um<00:32:09.039><c> if</c><00:32:09.360><c> we</c><00:32:09.600><c> were</c><00:32:09.919><c> to</c>

00:32:10.950 --> 00:32:10.960 align:start position:0%
um if we were to
 

00:32:10.960 --> 00:32:13.990 align:start position:0%
um if we were to
set<00:32:11.200><c> a</c><00:32:11.279><c> breakpoint</c><00:32:12.640><c> so</c><00:32:13.120><c> if</c><00:32:13.279><c> you</c><00:32:13.440><c> type</c><00:32:13.679><c> delete</c>

00:32:13.990 --> 00:32:14.000 align:start position:0%
set a breakpoint so if you type delete
 

00:32:14.000 --> 00:32:16.389 align:start position:0%
set a breakpoint so if you type delete
you'll<00:32:14.159><c> delete</c><00:32:14.480><c> all</c><00:32:14.559><c> your</c><00:32:14.720><c> breakpoints</c><00:32:15.919><c> uh</c><00:32:16.240><c> so</c>

00:32:16.389 --> 00:32:16.399 align:start position:0%
you'll delete all your breakpoints uh so
 

00:32:16.399 --> 00:32:18.630 align:start position:0%
you'll delete all your breakpoints uh so
i<00:32:16.640><c> cleared</c><00:32:16.960><c> the</c><00:32:17.039><c> old</c><00:32:17.279><c> one</c><00:32:17.519><c> if</c><00:32:17.679><c> i</c><00:32:17.760><c> now</c><00:32:18.080><c> set</c><00:32:18.399><c> a</c>

00:32:18.630 --> 00:32:18.640 align:start position:0%
i cleared the old one if i now set a
 

00:32:18.640 --> 00:32:19.669 align:start position:0%
i cleared the old one if i now set a
breakpoint<00:32:19.360><c> in</c>

00:32:19.669 --> 00:32:19.679 align:start position:0%
breakpoint in
 

00:32:19.679 --> 00:32:22.230 align:start position:0%
breakpoint in
demo<00:32:20.080><c> one</c><00:32:20.399><c> so</c><00:32:20.559><c> that's</c><00:32:20.799><c> a</c><00:32:20.880><c> c</c><00:32:21.200><c> breakpoint</c><00:32:22.080><c> and</c>

00:32:22.230 --> 00:32:22.240 align:start position:0%
demo one so that's a c breakpoint and
 

00:32:22.240 --> 00:32:23.590 align:start position:0%
demo one so that's a c breakpoint and
continue

00:32:23.590 --> 00:32:23.600 align:start position:0%
continue
 

00:32:23.600 --> 00:32:26.230 align:start position:0%
continue
and<00:32:23.760><c> run</c><00:32:24.000><c> this</c><00:32:24.880><c> now</c><00:32:25.120><c> if</c><00:32:25.279><c> i</c><00:32:25.360><c> go</c><00:32:25.600><c> here</c><00:32:25.840><c> and</c><00:32:26.000><c> type</c>

00:32:26.230 --> 00:32:26.240 align:start position:0%
and run this now if i go here and type
 

00:32:26.240 --> 00:32:27.350 align:start position:0%
and run this now if i go here and type
layout<00:32:26.720><c> split</c>

00:32:27.350 --> 00:32:27.360 align:start position:0%
layout split
 

00:32:27.360 --> 00:32:30.549 align:start position:0%
layout split
i'll<00:32:27.519><c> get</c><00:32:27.679><c> the</c><00:32:27.840><c> c</c><00:32:28.240><c> and</c><00:32:28.399><c> the</c><00:32:28.640><c> assembly</c><00:32:29.919><c> um</c><00:32:30.240><c> or</c><00:32:30.480><c> if</c>

00:32:30.549 --> 00:32:30.559 align:start position:0%
i'll get the c and the assembly um or if
 

00:32:30.559 --> 00:32:31.509 align:start position:0%
i'll get the c and the assembly um or if
i<00:32:30.720><c> just</c><00:32:30.880><c> want</c><00:32:31.120><c> the</c><00:32:31.279><c> c</c>

00:32:31.509 --> 00:32:31.519 align:start position:0%
i just want the c
 

00:32:31.519 --> 00:32:33.110 align:start position:0%
i just want the c
source<00:32:31.840><c> i</c><00:32:31.919><c> can</c><00:32:32.080><c> do</c><00:32:32.240><c> layout</c><00:32:32.559><c> source</c><00:32:32.880><c> and</c><00:32:33.039><c> i'll</c>

00:32:33.110 --> 00:32:33.120 align:start position:0%
source i can do layout source and i'll
 

00:32:33.120 --> 00:32:35.430 align:start position:0%
source i can do layout source and i'll
just<00:32:33.360><c> get</c><00:32:33.519><c> the</c><00:32:33.679><c> c</c>

00:32:35.430 --> 00:32:35.440 align:start position:0%
just get the c
 

00:32:35.440 --> 00:32:37.110 align:start position:0%
just get the c
so<00:32:35.600><c> that's</c><00:32:36.000><c> uh</c><00:32:36.159><c> that's</c><00:32:36.399><c> what's</c><00:32:36.640><c> going</c><00:32:36.799><c> on</c><00:32:37.039><c> it's</c>

00:32:37.110 --> 00:32:37.120 align:start position:0%
so that's uh that's what's going on it's
 

00:32:37.120 --> 00:32:39.269 align:start position:0%
so that's uh that's what's going on it's
just<00:32:37.360><c> a</c><00:32:38.080><c> quirk</c><00:32:38.399><c> of</c><00:32:38.559><c> the</c><00:32:38.720><c> fact</c><00:32:38.880><c> that</c><00:32:39.120><c> this</c>

00:32:39.269 --> 00:32:39.279 align:start position:0%
just a quirk of the fact that this
 

00:32:39.279 --> 00:32:41.110 align:start position:0%
just a quirk of the fact that this
doesn't<00:32:39.519><c> have</c><00:32:39.760><c> associated</c><00:32:40.399><c> c</c><00:32:40.559><c> code</c><00:32:40.799><c> and</c><00:32:40.880><c> so</c><00:32:41.039><c> we</c>

00:32:41.110 --> 00:32:41.120 align:start position:0%
doesn't have associated c code and so we
 

00:32:41.120 --> 00:32:46.230 align:start position:0%
doesn't have associated c code and so we
don't<00:32:41.360><c> see</c><00:32:41.519><c> seedline</c><00:32:42.000><c> numbers</c>

00:32:46.230 --> 00:32:46.240 align:start position:0%
 
 

00:32:46.240 --> 00:32:49.590 align:start position:0%
 
any<00:32:46.480><c> other</c><00:32:46.880><c> any</c><00:32:47.120><c> other</c><00:32:47.279><c> questions</c><00:32:47.919><c> about</c><00:32:48.399><c> gdb</c>

00:32:49.590 --> 00:32:49.600 align:start position:0%
any other any other questions about gdb
 

00:32:49.600 --> 00:32:53.110 align:start position:0%
any other any other questions about gdb
tmox<00:32:51.519><c> and</c><00:32:51.679><c> that</c><00:32:51.919><c> that</c><00:32:52.080><c> sort</c><00:32:52.320><c> of</c><00:32:52.399><c> thing</c>

00:32:53.110 --> 00:32:53.120 align:start position:0%
tmox and that that sort of thing
 

00:32:53.120 --> 00:32:55.110 align:start position:0%
tmox and that that sort of thing
so<00:32:53.360><c> layout</c><00:32:53.760><c> split</c><00:32:54.159><c> is</c><00:32:54.240><c> the</c><00:32:54.320><c> one</c><00:32:54.559><c> that</c><00:32:54.720><c> you</c><00:32:54.880><c> use</c>

00:32:55.110 --> 00:32:55.120 align:start position:0%
so layout split is the one that you use
 

00:32:55.120 --> 00:32:57.269 align:start position:0%
so layout split is the one that you use
to<00:32:55.279><c> bring</c><00:32:55.600><c> up</c><00:32:55.840><c> this</c><00:32:56.159><c> extra</c><00:32:56.559><c> window</c><00:32:56.960><c> of</c><00:32:57.039><c> the</c>

00:32:57.269 --> 00:32:57.279 align:start position:0%
to bring up this extra window of the
 

00:32:57.279 --> 00:32:59.190 align:start position:0%
to bring up this extra window of the
source<00:32:57.600><c> and</c><00:32:57.760><c> assembly</c><00:32:58.240><c> and</c><00:32:58.399><c> so</c><00:32:58.559><c> on</c><00:32:58.880><c> right</c>

00:32:59.190 --> 00:32:59.200 align:start position:0%
source and assembly and so on right
 

00:32:59.200 --> 00:33:02.230 align:start position:0%
source and assembly and so on right
yes<00:32:59.519><c> yes</c><00:32:59.840><c> so</c><00:33:00.159><c> layout</c><00:33:00.720><c> uh</c><00:33:01.519><c> if</c><00:33:01.600><c> you</c><00:33:01.679><c> do</c><00:33:01.840><c> layout</c>

00:33:02.230 --> 00:33:02.240 align:start position:0%
yes yes so layout uh if you do layout
 

00:33:02.240 --> 00:33:03.590 align:start position:0%
yes yes so layout uh if you do layout
split<00:33:02.640><c> that'll</c><00:33:02.960><c> get</c><00:33:03.200><c> you</c>

00:33:03.590 --> 00:33:03.600 align:start position:0%
split that'll get you
 

00:33:03.600 --> 00:33:05.590 align:start position:0%
split that'll get you
source<00:33:04.000><c> and</c><00:33:04.159><c> assembly</c><00:33:04.720><c> layout</c><00:33:05.120><c> source</c><00:33:05.440><c> will</c>

00:33:05.590 --> 00:33:05.600 align:start position:0%
source and assembly layout source will
 

00:33:05.600 --> 00:33:06.630 align:start position:0%
source and assembly layout source will
get<00:33:05.760><c> you</c><00:33:05.919><c> just</c><00:33:06.080><c> source</c>

00:33:06.630 --> 00:33:06.640 align:start position:0%
get you just source
 

00:33:06.640 --> 00:33:08.950 align:start position:0%
get you just source
asm<00:33:07.120><c> we'll</c><00:33:07.279><c> get</c><00:33:07.440><c> you</c><00:33:07.519><c> just</c><00:33:07.760><c> assembly</c><00:33:08.640><c> and</c><00:33:08.799><c> the</c>

00:33:08.950 --> 00:33:08.960 align:start position:0%
asm we'll get you just assembly and the
 

00:33:08.960 --> 00:33:10.470 align:start position:0%
asm we'll get you just assembly and the
registers<00:33:09.519><c> are</c><00:33:09.600><c> their</c><00:33:09.840><c> own</c><00:33:10.000><c> thing</c><00:33:10.159><c> where</c><00:33:10.399><c> if</c>

00:33:10.470 --> 00:33:10.480 align:start position:0%
registers are their own thing where if
 

00:33:10.480 --> 00:33:11.669 align:start position:0%
registers are their own thing where if
you<00:33:10.640><c> type</c><00:33:10.799><c> layout</c><00:33:11.200><c> reg</c>

00:33:11.669 --> 00:33:11.679 align:start position:0%
you type layout reg
 

00:33:11.679 --> 00:33:13.830 align:start position:0%
you type layout reg
i<00:33:11.840><c> think</c><00:33:12.159><c> yeah</c><00:33:13.039><c> that'll</c><00:33:13.360><c> bring</c><00:33:13.600><c> up</c><00:33:13.679><c> the</c>

00:33:13.830 --> 00:33:13.840 align:start position:0%
i think yeah that'll bring up the
 

00:33:13.840 --> 00:33:15.269 align:start position:0%
i think yeah that'll bring up the
registers<00:33:14.480><c> but</c>

00:33:15.269 --> 00:33:15.279 align:start position:0%
registers but
 

00:33:15.279 --> 00:33:17.669 align:start position:0%
registers but
unfortunately<00:33:16.320><c> i</c><00:33:16.480><c> don't</c><00:33:16.720><c> know</c><00:33:17.039><c> of</c><00:33:17.200><c> a</c><00:33:17.279><c> way</c><00:33:17.519><c> to</c>

00:33:17.669 --> 00:33:17.679 align:start position:0%
unfortunately i don't know of a way to
 

00:33:17.679 --> 00:33:18.630 align:start position:0%
unfortunately i don't know of a way to
get

00:33:18.630 --> 00:33:18.640 align:start position:0%
get
 

00:33:18.640 --> 00:33:20.389 align:start position:0%
get
the<00:33:18.799><c> register</c><00:33:19.120><c> of</c><00:33:19.279><c> the</c><00:33:19.360><c> assembly</c><00:33:20.000><c> and</c><00:33:20.080><c> the</c><00:33:20.240><c> c</c>

00:33:20.389 --> 00:33:20.399 align:start position:0%
the register of the assembly and the c
 

00:33:20.399 --> 00:33:22.149 align:start position:0%
the register of the assembly and the c
code<00:33:20.720><c> all</c><00:33:20.880><c> at</c><00:33:21.039><c> the</c><00:33:21.120><c> same</c><00:33:21.360><c> time</c><00:33:21.679><c> outside</c><00:33:22.080><c> of</c>

00:33:22.149 --> 00:33:22.159 align:start position:0%
code all at the same time outside of
 

00:33:22.159 --> 00:33:24.950 align:start position:0%
code all at the same time outside of
using<00:33:22.480><c> inforeg</c><00:33:23.279><c> with</c><00:33:23.440><c> layout</c><00:33:23.840><c> split</c>

00:33:24.950 --> 00:33:24.960 align:start position:0%
using inforeg with layout split
 

00:33:24.960 --> 00:33:28.149 align:start position:0%
using inforeg with layout split
i<00:33:25.120><c> have</c><00:33:25.279><c> a</c><00:33:25.360><c> question</c><00:33:26.399><c> um</c><00:33:26.880><c> so</c><00:33:27.039><c> when</c><00:33:27.200><c> we</c><00:33:27.360><c> set</c><00:33:27.600><c> the</c>

00:33:28.149 --> 00:33:28.159 align:start position:0%
i have a question um so when we set the
 

00:33:28.159 --> 00:33:31.430 align:start position:0%
i have a question um so when we set the
break<00:33:28.480><c> point</c><00:33:28.799><c> uh</c><00:33:29.120><c> add</c><00:33:29.360><c> a</c><00:33:29.440><c> line</c><00:33:29.760><c> right</c><00:33:31.039><c> it</c>

00:33:31.430 --> 00:33:31.440 align:start position:0%
break point uh add a line right it
 

00:33:31.440 --> 00:33:34.549 align:start position:0%
break point uh add a line right it
displays<00:33:32.000><c> the</c><00:33:32.240><c> address</c><00:33:32.960><c> of</c><00:33:33.200><c> the</c><00:33:33.919><c> like</c><00:33:34.240><c> in</c><00:33:34.399><c> this</c>

00:33:34.549 --> 00:33:34.559 align:start position:0%
displays the address of the like in this
 

00:33:34.559 --> 00:33:35.990 align:start position:0%
displays the address of the like in this
case<00:33:34.880><c> break</c><00:33:35.200><c> point</c><00:33:35.440><c> to</c><00:33:35.600><c> add</c>

00:33:35.990 --> 00:33:36.000 align:start position:0%
case break point to add
 

00:33:36.000 --> 00:33:39.269 align:start position:0%
case break point to add
0x<00:33:37.519><c> 354.</c><00:33:38.559><c> um</c>

00:33:39.269 --> 00:33:39.279 align:start position:0%
0x 354. um
 

00:33:39.279 --> 00:33:42.070 align:start position:0%
0x 354. um
what<00:33:39.760><c> any</c><00:33:40.080><c> instruction</c><00:33:40.559><c> might</c><00:33:40.799><c> have</c><00:33:41.120><c> multiple</c>

00:33:42.070 --> 00:33:42.080 align:start position:0%
what any instruction might have multiple
 

00:33:42.080 --> 00:33:42.549 align:start position:0%
what any instruction might have multiple
uh

00:33:42.549 --> 00:33:42.559 align:start position:0%
uh
 

00:33:42.559 --> 00:33:45.509 align:start position:0%
uh
any<00:33:43.200><c> like</c><00:33:43.760><c> line</c><00:33:44.000><c> of</c><00:33:44.159><c> code</c><00:33:44.399><c> in</c><00:33:44.559><c> c</c><00:33:45.039><c> might</c><00:33:45.279><c> have</c>

00:33:45.509 --> 00:33:45.519 align:start position:0%
any like line of code in c might have
 

00:33:45.519 --> 00:33:46.950 align:start position:0%
any like line of code in c might have
multiple<00:33:46.000><c> instructions</c>

00:33:46.950 --> 00:33:46.960 align:start position:0%
multiple instructions
 

00:33:46.960 --> 00:33:49.430 align:start position:0%
multiple instructions
so<00:33:47.120><c> which</c><00:33:47.360><c> one</c><00:33:47.600><c> does</c><00:33:47.840><c> its</c><00:33:48.240><c> uh</c><00:33:48.640><c> show</c><00:33:49.039><c> i</c><00:33:49.200><c> believe</c>

00:33:49.430 --> 00:33:49.440 align:start position:0%
so which one does its uh show i believe
 

00:33:49.440 --> 00:33:51.509 align:start position:0%
so which one does its uh show i believe
it<00:33:49.519><c> shows</c><00:33:49.679><c> the</c><00:33:49.840><c> first</c><00:33:50.080><c> one</c>

00:33:51.509 --> 00:33:51.519 align:start position:0%
it shows the first one
 

00:33:51.519 --> 00:33:54.230 align:start position:0%
it shows the first one
and<00:33:51.760><c> uh</c><00:33:52.000><c> it's</c><00:33:52.720><c> to</c><00:33:52.960><c> you</c><00:33:53.440><c> for</c><00:33:53.679><c> the</c><00:33:53.760><c> person</c><00:33:54.080><c> who</c>

00:33:54.230 --> 00:33:54.240 align:start position:0%
and uh it's to you for the person who
 

00:33:54.240 --> 00:33:54.789 align:start position:0%
and uh it's to you for the person who
asked<00:33:54.399><c> to</c>

00:33:54.789 --> 00:33:54.799 align:start position:0%
asked to
 

00:33:54.799 --> 00:33:57.990 align:start position:0%
asked to
start<00:33:55.120><c> the</c><00:33:55.279><c> tui</c><00:33:56.720><c> it's</c><00:33:56.960><c> i</c><00:33:57.039><c> think</c><00:33:57.200><c> it's</c><00:33:57.360><c> tui</c>

00:33:57.990 --> 00:33:58.000 align:start position:0%
start the tui it's i think it's tui
 

00:33:58.000 --> 00:34:08.389 align:start position:0%
start the tui it's i think it's tui
enable<00:33:58.559><c> not</c><00:33:58.799><c> enable</c><00:33:59.200><c> to</c><00:33:59.360><c> ui</c><00:33:59.760><c> sorry</c><00:34:00.960><c> i</c><00:34:01.360><c> think</c>

00:34:08.389 --> 00:34:08.399 align:start position:0%
 
 

00:34:08.399 --> 00:34:10.869 align:start position:0%
 
um<00:34:09.200><c> yeah</c><00:34:09.599><c> again</c><00:34:10.000><c> there's</c><00:34:10.240><c> like</c><00:34:10.399><c> a</c><00:34:10.480><c> hundred</c>

00:34:10.869 --> 00:34:10.879 align:start position:0%
um yeah again there's like a hundred
 

00:34:10.879 --> 00:34:13.270 align:start position:0%
um yeah again there's like a hundred
cheat<00:34:11.200><c> sheets</c><00:34:11.520><c> out</c><00:34:11.760><c> here</c><00:34:11.919><c> for</c><00:34:12.159><c> gdb</c>

00:34:13.270 --> 00:34:13.280 align:start position:0%
cheat sheets out here for gdb
 

00:34:13.280 --> 00:34:15.510 align:start position:0%
cheat sheets out here for gdb
and<00:34:13.599><c> for</c><00:34:13.919><c> tmux</c><00:34:14.399><c> as</c><00:34:14.480><c> well</c><00:34:14.639><c> so</c><00:34:14.800><c> if</c><00:34:14.960><c> you</c><00:34:15.119><c> ever</c><00:34:15.280><c> find</c>

00:34:15.510 --> 00:34:15.520 align:start position:0%
and for tmux as well so if you ever find
 

00:34:15.520 --> 00:34:16.470 align:start position:0%
and for tmux as well so if you ever find
yourself<00:34:15.919><c> lost</c>

00:34:16.470 --> 00:34:16.480 align:start position:0%
yourself lost
 

00:34:16.480 --> 00:34:21.430 align:start position:0%
yourself lost
i<00:34:16.720><c> t</c><00:34:17.200><c> gdp</c><00:34:17.760><c> even</c><00:34:18.000><c> has</c><00:34:18.159><c> its</c><00:34:18.399><c> own</c><00:34:18.839><c> inbuilt</c><00:34:19.839><c> um</c>

00:34:21.430 --> 00:34:21.440 align:start position:0%
i t gdp even has its own inbuilt um
 

00:34:21.440 --> 00:34:23.990 align:start position:0%
i t gdp even has its own inbuilt um
its<00:34:21.679><c> own</c><00:34:21.839><c> thing</c><00:34:22.079><c> called</c><00:34:22.320><c> apropos</c><00:34:23.520><c> so</c><00:34:23.760><c> if</c><00:34:23.839><c> you</c>

00:34:23.990 --> 00:34:24.000 align:start position:0%
its own thing called apropos so if you
 

00:34:24.000 --> 00:34:25.510 align:start position:0%
its own thing called apropos so if you
look<00:34:24.159><c> for</c><00:34:24.399><c> apropos</c>

00:34:25.510 --> 00:34:25.520 align:start position:0%
look for apropos
 

00:34:25.520 --> 00:34:28.550 align:start position:0%
look for apropos
tui<00:34:26.560><c> it</c><00:34:26.720><c> will</c><00:34:26.879><c> actually</c><00:34:27.280><c> show</c><00:34:27.520><c> you</c><00:34:27.760><c> all</c><00:34:28.000><c> of</c><00:34:28.159><c> the</c>

00:34:28.550 --> 00:34:28.560 align:start position:0%
tui it will actually show you all of the
 

00:34:28.560 --> 00:34:33.430 align:start position:0%
tui it will actually show you all of the
commands<00:34:29.760><c> that</c><00:34:30.480><c> involve</c><00:34:31.040><c> tui</c>

00:34:33.430 --> 00:34:33.440 align:start position:0%
commands that involve tui
 

00:34:33.440 --> 00:34:36.310 align:start position:0%
commands that involve tui
so<00:34:34.000><c> yeah</c><00:34:34.320><c> uh</c><00:34:34.960><c> this</c><00:34:35.119><c> can</c><00:34:35.280><c> be</c><00:34:35.440><c> quite</c><00:34:35.679><c> useful</c><00:34:36.159><c> but</c>

00:34:36.310 --> 00:34:36.320 align:start position:0%
so yeah uh this can be quite useful but
 

00:34:36.320 --> 00:34:38.710 align:start position:0%
so yeah uh this can be quite useful but
it<00:34:36.480><c> can</c><00:34:36.639><c> also</c><00:34:36.879><c> be</c><00:34:37.040><c> a</c><00:34:37.119><c> little</c><00:34:37.280><c> bit</c><00:34:37.520><c> overwhelming</c>

00:34:38.710 --> 00:34:38.720 align:start position:0%
it can also be a little bit overwhelming
 

00:34:38.720 --> 00:34:41.829 align:start position:0%
it can also be a little bit overwhelming
um<00:34:39.839><c> if</c><00:34:40.000><c> you</c><00:34:40.079><c> do</c><00:34:40.240><c> apropos</c><00:34:40.879><c> dash</c><00:34:41.280><c> b</c><00:34:41.520><c> it'll</c><00:34:41.679><c> give</c>

00:34:41.829 --> 00:34:41.839 align:start position:0%
um if you do apropos dash b it'll give
 

00:34:41.839 --> 00:34:44.550 align:start position:0%
um if you do apropos dash b it'll give
you<00:34:42.000><c> even</c><00:34:42.240><c> more</c><00:34:42.560><c> information</c><00:34:43.119><c> i</c><00:34:43.200><c> think</c>

00:34:44.550 --> 00:34:44.560 align:start position:0%
you even more information i think
 

00:34:44.560 --> 00:34:48.389 align:start position:0%
you even more information i think
um<00:34:45.839><c> i</c><00:34:46.079><c> don't</c><00:34:46.240><c> remember</c><00:34:47.200><c> i</c><00:34:47.440><c> i</c><00:34:47.919><c> don't</c><00:34:48.079><c> use</c><00:34:48.240><c> it</c>

00:34:48.389 --> 00:34:48.399 align:start position:0%
um i don't remember i i don't use it
 

00:34:48.399 --> 00:34:50.069 align:start position:0%
um i don't remember i i don't use it
often<00:34:48.639><c> myself</c><00:34:49.040><c> but</c><00:34:49.200><c> if</c><00:34:49.359><c> you</c><00:34:49.520><c> if</c><00:34:49.679><c> you</c><00:34:49.760><c> do</c>

00:34:50.069 --> 00:34:50.079 align:start position:0%
often myself but if you if you do
 

00:34:50.079 --> 00:34:52.230 align:start position:0%
often myself but if you if you do
find<00:34:50.639><c> or</c><00:34:50.879><c> if</c><00:34:51.119><c> you</c><00:34:51.200><c> forget</c><00:34:51.520><c> the</c><00:34:51.679><c> exact</c><00:34:51.919><c> way</c><00:34:52.079><c> to</c>

00:34:52.230 --> 00:34:52.240 align:start position:0%
find or if you forget the exact way to
 

00:34:52.240 --> 00:34:54.069 align:start position:0%
find or if you forget the exact way to
type<00:34:52.480><c> the</c><00:34:52.560><c> command</c><00:34:52.960><c> in</c><00:34:53.200><c> in</c><00:34:53.359><c> gdb</c><00:34:53.839><c> and</c><00:34:53.919><c> you</c><00:34:54.000><c> don't</c>

00:34:54.069 --> 00:34:54.079 align:start position:0%
type the command in in gdb and you don't
 

00:34:54.079 --> 00:34:55.990 align:start position:0%
type the command in in gdb and you don't
feel<00:34:54.240><c> like</c><00:34:54.399><c> googling</c><00:34:54.800><c> it</c><00:34:54.960><c> apropos</c>

00:34:55.990 --> 00:34:56.000 align:start position:0%
feel like googling it apropos
 

00:34:56.000 --> 00:34:57.990 align:start position:0%
feel like googling it apropos
will<00:34:56.320><c> will</c><00:34:56.560><c> uh</c><00:34:56.800><c> often</c><00:34:57.200><c> be</c><00:34:57.359><c> able</c><00:34:57.599><c> to</c><00:34:57.680><c> find</c>

00:34:57.990 --> 00:34:58.000 align:start position:0%
will will uh often be able to find
 

00:34:58.000 --> 00:34:59.349 align:start position:0%
will will uh often be able to find
exactly<00:34:58.320><c> what</c><00:34:58.480><c> you're</c><00:34:58.640><c> looking</c><00:34:58.960><c> for</c><00:34:59.200><c> in</c>

00:34:59.349 --> 00:34:59.359 align:start position:0%
exactly what you're looking for in
 

00:34:59.359 --> 00:35:00.710 align:start position:0%
exactly what you're looking for in
addition<00:34:59.680><c> to</c><00:34:59.839><c> a</c><00:34:59.920><c> whole</c><00:35:00.079><c> bunch</c><00:35:00.320><c> of</c><00:35:00.400><c> stuff</c><00:35:00.640><c> you</c>

00:35:00.710 --> 00:35:00.720 align:start position:0%
addition to a whole bunch of stuff you
 

00:35:00.720 --> 00:35:02.230 align:start position:0%
addition to a whole bunch of stuff you
weren't<00:35:00.960><c> looking</c><00:35:01.200><c> for</c>

00:35:02.230 --> 00:35:02.240 align:start position:0%
weren't looking for
 

00:35:02.240 --> 00:35:05.270 align:start position:0%
weren't looking for
um<00:35:04.240><c> yeah</c><00:35:04.560><c> so</c>

00:35:05.270 --> 00:35:05.280 align:start position:0%
um yeah so
 

00:35:05.280 --> 00:35:06.790 align:start position:0%
um yeah so
that<00:35:05.440><c> can</c><00:35:05.520><c> be</c><00:35:05.599><c> quite</c><00:35:05.760><c> useful</c><00:35:06.079><c> gdp</c><00:35:06.480><c> is</c>

00:35:06.790 --> 00:35:06.800 align:start position:0%
that can be quite useful gdp is
 

00:35:06.800 --> 00:35:08.470 align:start position:0%
that can be quite useful gdp is
extremely<00:35:07.200><c> well</c><00:35:07.440><c> documented</c><00:35:08.079><c> as</c><00:35:08.160><c> well</c>

00:35:08.470 --> 00:35:08.480 align:start position:0%
extremely well documented as well
 

00:35:08.480 --> 00:35:11.030 align:start position:0%
extremely well documented as well
so<00:35:09.119><c> um</c><00:35:09.839><c> yeah</c><00:35:10.079><c> if</c><00:35:10.240><c> you</c><00:35:10.320><c> ever</c><00:35:10.480><c> find</c><00:35:10.720><c> yourself</c>

00:35:11.030 --> 00:35:11.040 align:start position:0%
so um yeah if you ever find yourself
 

00:35:11.040 --> 00:35:12.069 align:start position:0%
so um yeah if you ever find yourself
lost

00:35:12.069 --> 00:35:12.079 align:start position:0%
lost
 

00:35:12.079 --> 00:35:16.710 align:start position:0%
lost
you<00:35:12.160><c> know</c><00:35:13.040><c> google</c><00:35:13.359><c> is</c><00:35:13.440><c> your</c><00:35:13.599><c> friend</c><00:35:15.040><c> um</c>

00:35:16.710 --> 00:35:16.720 align:start position:0%
you know google is your friend um
 

00:35:16.720 --> 00:35:18.710 align:start position:0%
you know google is your friend um
so<00:35:16.880><c> now</c><00:35:17.040><c> that</c><00:35:17.200><c> we</c><00:35:17.520><c> we've</c><00:35:17.760><c> kind</c><00:35:17.920><c> of</c><00:35:18.000><c> been</c><00:35:18.240><c> over</c>

00:35:18.710 --> 00:35:18.720 align:start position:0%
so now that we we've kind of been over
 

00:35:18.720 --> 00:35:20.150 align:start position:0%
so now that we we've kind of been over
assembly<00:35:19.680><c> and</c>

00:35:20.150 --> 00:35:20.160 align:start position:0%
assembly and
 

00:35:20.160 --> 00:35:22.950 align:start position:0%
assembly and
and<00:35:20.480><c> risk</c><00:35:20.880><c> five</c><00:35:21.440><c> and</c><00:35:21.760><c> these</c><00:35:21.920><c> sort</c><00:35:22.160><c> of</c><00:35:22.240><c> things</c><00:35:22.800><c> i</c>

00:35:22.950 --> 00:35:22.960 align:start position:0%
and risk five and these sort of things i
 

00:35:22.960 --> 00:35:24.470 align:start position:0%
and risk five and these sort of things i
want<00:35:23.119><c> to</c><00:35:23.200><c> dive</c><00:35:23.440><c> a</c><00:35:23.520><c> little</c><00:35:23.680><c> bit</c><00:35:23.839><c> more</c><00:35:24.160><c> into</c><00:35:24.400><c> the</c>

00:35:24.470 --> 00:35:24.480 align:start position:0%
want to dive a little bit more into the
 

00:35:24.480 --> 00:35:25.750 align:start position:0%
want to dive a little bit more into the
specifics

00:35:25.750 --> 00:35:25.760 align:start position:0%
specifics
 

00:35:25.760 --> 00:35:28.470 align:start position:0%
specifics
um<00:35:26.160><c> of</c><00:35:26.480><c> what</c><00:35:26.640><c> you</c><00:35:27.200><c> you</c><00:35:27.599><c> really</c><00:35:27.839><c> need</c><00:35:28.000><c> to</c><00:35:28.079><c> know</c>

00:35:28.470 --> 00:35:28.480 align:start position:0%
um of what you you really need to know
 

00:35:28.480 --> 00:35:29.589 align:start position:0%
um of what you you really need to know
for<00:35:28.720><c> the</c>

00:35:29.589 --> 00:35:29.599 align:start position:0%
for the
 

00:35:29.599 --> 00:35:32.310 align:start position:0%
for the
lab<00:35:30.079><c> coming</c><00:35:30.400><c> up</c><00:35:30.960><c> and</c><00:35:31.200><c> also</c><00:35:31.680><c> is</c><00:35:31.920><c> this</c><00:35:32.079><c> will</c><00:35:32.160><c> be</c><00:35:32.320><c> a</c>

00:35:32.310 --> 00:35:32.320 align:start position:0%
lab coming up and also is this will be a
 

00:35:32.320 --> 00:35:33.829 align:start position:0%
lab coming up and also is this will be a
little<00:35:32.480><c> bit</c><00:35:32.640><c> of</c><00:35:32.720><c> review</c><00:35:33.119><c> from</c><00:35:33.280><c> the</c><00:35:33.359><c> document</c>

00:35:33.829 --> 00:35:33.839 align:start position:0%
little bit of review from the document
 

00:35:33.839 --> 00:35:34.630 align:start position:0%
little bit of review from the document
that<00:35:33.920><c> you've</c><00:35:34.240><c> all</c>

00:35:34.630 --> 00:35:34.640 align:start position:0%
that you've all
 

00:35:34.640 --> 00:35:37.030 align:start position:0%
that you've all
of<00:35:34.800><c> course</c><00:35:35.040><c> as</c><00:35:35.200><c> diligent</c><00:35:35.680><c> students</c><00:35:36.800><c> read</c>

00:35:37.030 --> 00:35:37.040 align:start position:0%
of course as diligent students read
 

00:35:37.040 --> 00:35:38.870 align:start position:0%
of course as diligent students read
through<00:35:37.599><c> thoroughly</c>

00:35:38.870 --> 00:35:38.880 align:start position:0%
through thoroughly
 

00:35:38.880 --> 00:35:42.829 align:start position:0%
through thoroughly
uh<00:35:39.760><c> in</c><00:35:39.920><c> preparation</c><00:35:40.560><c> for</c><00:35:40.720><c> this</c><00:35:41.119><c> lecture</c>

00:35:42.829 --> 00:35:42.839 align:start position:0%
uh in preparation for this lecture
 

00:35:42.839 --> 00:35:45.670 align:start position:0%
uh in preparation for this lecture
um<00:35:43.920><c> so</c><00:35:44.240><c> you</c><00:35:44.400><c> know</c><00:35:44.480><c> this</c><00:35:44.720><c> table</c><00:35:45.040><c> will</c><00:35:45.280><c> of</c><00:35:45.359><c> course</c>

00:35:45.670 --> 00:35:45.680 align:start position:0%
um so you know this table will of course
 

00:35:45.680 --> 00:35:47.829 align:start position:0%
um so you know this table will of course
be<00:35:45.920><c> uh</c><00:35:46.160><c> wildly</c><00:35:46.640><c> familiar</c><00:35:47.040><c> to</c><00:35:47.200><c> you</c><00:35:47.359><c> all</c>

00:35:47.829 --> 00:35:47.839 align:start position:0%
be uh wildly familiar to you all
 

00:35:47.839 --> 00:35:51.109 align:start position:0%
be uh wildly familiar to you all
and<00:35:48.480><c> uh</c><00:35:49.680><c> from</c><00:35:50.079><c> from</c><00:35:50.240><c> both</c><00:35:50.400><c> double</c><00:35:50.720><c> o4</c>

00:35:51.109 --> 00:35:51.119 align:start position:0%
and uh from from both double o4
 

00:35:51.119 --> 00:35:53.109 align:start position:0%
and uh from from both double o4
and<00:35:51.280><c> from</c><00:35:51.440><c> what</c><00:35:51.599><c> you've</c><00:35:51.839><c> read</c><00:35:52.400><c> and</c><00:35:52.720><c> this</c><00:35:52.960><c> is</c>

00:35:53.109 --> 00:35:53.119 align:start position:0%
and from what you've read and this is
 

00:35:53.119 --> 00:35:55.270 align:start position:0%
and from what you've read and this is
the<00:35:53.280><c> table</c><00:35:53.680><c> of</c><00:35:54.000><c> registers</c><00:35:54.640><c> and</c>

00:35:55.270 --> 00:35:55.280 align:start position:0%
the table of registers and
 

00:35:55.280 --> 00:35:58.710 align:start position:0%
the table of registers and
registers<00:35:56.079><c> are</c><00:35:56.800><c> little</c><00:35:57.440><c> you</c><00:35:57.599><c> know</c><00:35:57.760><c> locations</c>

00:35:58.710 --> 00:35:58.720 align:start position:0%
registers are little you know locations
 

00:35:58.720 --> 00:36:02.790 align:start position:0%
registers are little you know locations
on<00:35:59.119><c> the</c><00:35:59.359><c> cpu</c><00:36:00.480><c> or</c><00:36:00.960><c> on</c><00:36:01.040><c> the</c><00:36:01.200><c> processor</c>

00:36:02.790 --> 00:36:02.800 align:start position:0%
on the cpu or on the processor
 

00:36:02.800 --> 00:36:05.430 align:start position:0%
on the cpu or on the processor
pre-defined<00:36:03.680><c> that</c><00:36:03.839><c> it</c><00:36:04.000><c> can</c><00:36:04.240><c> use</c><00:36:04.640><c> to</c><00:36:04.960><c> store</c>

00:36:05.430 --> 00:36:05.440 align:start position:0%
pre-defined that it can use to store
 

00:36:05.440 --> 00:36:06.390 align:start position:0%
pre-defined that it can use to store
values

00:36:06.390 --> 00:36:06.400 align:start position:0%
values
 

00:36:06.400 --> 00:36:08.630 align:start position:0%
values
and<00:36:06.560><c> this</c><00:36:06.800><c> is</c><00:36:06.960><c> important</c><00:36:07.359><c> because</c><00:36:08.079><c> assembly</c>

00:36:08.630 --> 00:36:08.640 align:start position:0%
and this is important because assembly
 

00:36:08.640 --> 00:36:09.510 align:start position:0%
and this is important because assembly
operations

00:36:09.510 --> 00:36:09.520 align:start position:0%
operations
 

00:36:09.520 --> 00:36:11.510 align:start position:0%
operations
if<00:36:09.920><c> we</c><00:36:10.079><c> remember</c><00:36:10.320><c> from</c><00:36:10.480><c> the</c><00:36:10.560><c> assembly</c><00:36:10.960><c> code</c>

00:36:11.510 --> 00:36:11.520 align:start position:0%
if we remember from the assembly code
 

00:36:11.520 --> 00:36:14.069 align:start position:0%
if we remember from the assembly code
the<00:36:12.160><c> assembly</c><00:36:12.560><c> doesn't</c><00:36:12.960><c> operate</c><00:36:13.359><c> on</c><00:36:13.680><c> memory</c>

00:36:14.069 --> 00:36:14.079 align:start position:0%
the assembly doesn't operate on memory
 

00:36:14.079 --> 00:36:16.069 align:start position:0%
the assembly doesn't operate on memory
it<00:36:14.240><c> operates</c><00:36:14.640><c> on</c><00:36:14.800><c> registers</c><00:36:15.359><c> so</c><00:36:15.520><c> when</c><00:36:15.680><c> we</c><00:36:15.839><c> do</c>

00:36:16.069 --> 00:36:16.079 align:start position:0%
it operates on registers so when we do
 

00:36:16.079 --> 00:36:17.510 align:start position:0%
it operates on registers so when we do
add<00:36:16.320><c> when</c><00:36:16.480><c> we</c><00:36:16.560><c> do</c><00:36:16.720><c> subtract</c>

00:36:17.510 --> 00:36:17.520 align:start position:0%
add when we do subtract
 

00:36:17.520 --> 00:36:20.950 align:start position:0%
add when we do subtract
we're<00:36:17.760><c> operating</c><00:36:18.480><c> on</c><00:36:18.880><c> registers</c><00:36:19.920><c> um</c>

00:36:20.950 --> 00:36:20.960 align:start position:0%
we're operating on registers um
 

00:36:20.960 --> 00:36:22.790 align:start position:0%
we're operating on registers um
and<00:36:21.119><c> so</c><00:36:21.280><c> what</c><00:36:21.440><c> you'll</c><00:36:21.680><c> often</c><00:36:22.000><c> see</c><00:36:22.400><c> as</c><00:36:22.640><c> the</c>

00:36:22.790 --> 00:36:22.800 align:start position:0%
and so what you'll often see as the
 

00:36:22.800 --> 00:36:24.150 align:start position:0%
and so what you'll often see as the
pattern<00:36:23.599><c> for</c>

00:36:24.150 --> 00:36:24.160 align:start position:0%
pattern for
 

00:36:24.160 --> 00:36:26.069 align:start position:0%
pattern for
for<00:36:24.320><c> writing</c><00:36:24.720><c> assembly</c><00:36:25.280><c> is</c><00:36:25.359><c> we'll</c><00:36:25.520><c> have</c><00:36:25.839><c> some</c>

00:36:26.069 --> 00:36:26.079 align:start position:0%
for writing assembly is we'll have some
 

00:36:26.079 --> 00:36:27.510 align:start position:0%
for writing assembly is we'll have some
kind<00:36:26.320><c> of</c><00:36:26.480><c> a</c><00:36:26.640><c> load</c>

00:36:27.510 --> 00:36:27.520 align:start position:0%
kind of a load
 

00:36:27.520 --> 00:36:30.950 align:start position:0%
kind of a load
so<00:36:27.680><c> we'll</c><00:36:28.160><c> load</c><00:36:28.640><c> some</c><00:36:29.040><c> value</c>

00:36:30.950 --> 00:36:30.960 align:start position:0%
so we'll load some value
 

00:36:30.960 --> 00:36:34.630 align:start position:0%
so we'll load some value
to<00:36:31.119><c> a</c><00:36:31.280><c> register</c><00:36:33.040><c> and</c><00:36:33.680><c> that</c><00:36:33.920><c> value</c><00:36:34.240><c> can</c><00:36:34.400><c> be</c><00:36:34.480><c> from</c>

00:36:34.630 --> 00:36:34.640 align:start position:0%
to a register and that value can be from
 

00:36:34.640 --> 00:36:35.109 align:start position:0%
to a register and that value can be from
memory

00:36:35.109 --> 00:36:35.119 align:start position:0%
memory
 

00:36:35.119 --> 00:36:38.310 align:start position:0%
memory
or<00:36:35.280><c> it</c><00:36:35.359><c> can</c><00:36:35.520><c> be</c><00:36:35.599><c> from</c><00:36:35.760><c> another</c><00:36:36.240><c> uh</c><00:36:36.560><c> register</c>

00:36:38.310 --> 00:36:38.320 align:start position:0%
or it can be from another uh register
 

00:36:38.320 --> 00:36:40.550 align:start position:0%
or it can be from another uh register
and<00:36:39.440><c> and</c><00:36:39.599><c> here</c><00:36:39.760><c> i'm</c><00:36:39.839><c> referring</c><00:36:40.160><c> to</c><00:36:40.240><c> load</c><00:36:40.480><c> in</c>

00:36:40.550 --> 00:36:40.560 align:start position:0%
and and here i'm referring to load in
 

00:36:40.560 --> 00:36:42.310 align:start position:0%
and and here i'm referring to load in
general<00:36:40.880><c> not</c><00:36:41.040><c> the</c><00:36:41.119><c> load</c><00:36:41.359><c> instruction</c>

00:36:42.310 --> 00:36:42.320 align:start position:0%
general not the load instruction
 

00:36:42.320 --> 00:36:45.750 align:start position:0%
general not the load instruction
um<00:36:43.440><c> and</c><00:36:43.520><c> then</c><00:36:43.760><c> we'll</c><00:36:44.079><c> operate</c>

00:36:45.750 --> 00:36:45.760 align:start position:0%
um and then we'll operate
 

00:36:45.760 --> 00:36:48.630 align:start position:0%
um and then we'll operate
so<00:36:46.160><c> we'll</c><00:36:46.320><c> perform</c><00:36:46.720><c> some</c><00:36:47.040><c> operation</c><00:36:48.240><c> on</c><00:36:48.480><c> the</c>

00:36:48.630 --> 00:36:48.640 align:start position:0%
so we'll perform some operation on the
 

00:36:48.640 --> 00:36:49.349 align:start position:0%
so we'll perform some operation on the
register

00:36:49.349 --> 00:36:49.359 align:start position:0%
register
 

00:36:49.359 --> 00:36:50.870 align:start position:0%
register
and<00:36:49.440><c> then</c><00:36:49.599><c> if</c><00:36:49.760><c> we</c><00:36:49.920><c> care</c><00:36:50.160><c> about</c><00:36:50.320><c> the</c><00:36:50.480><c> result</c><00:36:50.800><c> of</c>

00:36:50.870 --> 00:36:50.880 align:start position:0%
and then if we care about the result of
 

00:36:50.880 --> 00:36:52.550 align:start position:0%
and then if we care about the result of
that<00:36:51.119><c> operation</c><00:36:51.680><c> outside</c><00:36:52.000><c> of</c><00:36:52.079><c> the</c><00:36:52.240><c> return</c>

00:36:52.550 --> 00:36:52.560 align:start position:0%
that operation outside of the return
 

00:36:52.560 --> 00:36:53.349 align:start position:0%
that operation outside of the return
address

00:36:53.349 --> 00:36:53.359 align:start position:0%
address
 

00:36:53.359 --> 00:36:56.870 align:start position:0%
address
we<00:36:53.680><c> will</c><00:36:54.079><c> um</c><00:36:54.960><c> will</c><00:36:55.280><c> store</c><00:36:56.320><c> that</c>

00:36:56.870 --> 00:36:56.880 align:start position:0%
we will um will store that
 

00:36:56.880 --> 00:37:00.470 align:start position:0%
we will um will store that
register<00:36:57.760><c> to</c><00:36:58.720><c> somewhere</c>

00:37:00.470 --> 00:37:00.480 align:start position:0%
register to somewhere
 

00:37:00.480 --> 00:37:01.990 align:start position:0%
register to somewhere
to<00:37:00.720><c> some</c><00:37:00.880><c> locate</c><00:37:01.200><c> that</c><00:37:01.359><c> will</c><00:37:01.599><c> store</c><00:37:01.760><c> that</c>

00:37:01.990 --> 00:37:02.000 align:start position:0%
to some locate that will store that
 

00:37:02.000 --> 00:37:03.990 align:start position:0%
to some locate that will store that
register<00:37:02.480><c> to</c><00:37:02.720><c> some</c><00:37:02.960><c> location</c>

00:37:03.990 --> 00:37:04.000 align:start position:0%
register to some location
 

00:37:04.000 --> 00:37:08.150 align:start position:0%
register to some location
do<00:37:04.240><c> that</c><00:37:04.480><c> in</c><00:37:04.560><c> memory</c><00:37:05.359><c> or</c><00:37:06.800><c> to</c><00:37:07.040><c> another</c><00:37:07.359><c> register</c>

00:37:08.150 --> 00:37:08.160 align:start position:0%
do that in memory or to another register
 

00:37:08.160 --> 00:37:09.750 align:start position:0%
do that in memory or to another register
and<00:37:08.240><c> so</c><00:37:08.400><c> that's</c><00:37:08.720><c> that's</c><00:37:09.040><c> uh</c><00:37:09.280><c> generally</c><00:37:09.680><c> the</c>

00:37:09.750 --> 00:37:09.760 align:start position:0%
and so that's that's uh generally the
 

00:37:09.760 --> 00:37:11.750 align:start position:0%
and so that's that's uh generally the
way<00:37:09.920><c> things</c><00:37:10.160><c> work</c><00:37:10.480><c> and</c><00:37:10.720><c> and</c><00:37:11.119><c> registers</c><00:37:11.680><c> are</c>

00:37:11.750 --> 00:37:11.760 align:start position:0%
way things work and and registers are
 

00:37:11.760 --> 00:37:13.990 align:start position:0%
way things work and and registers are
the<00:37:12.000><c> absolute</c><00:37:12.480><c> fastest</c><00:37:12.960><c> way</c><00:37:13.119><c> to</c><00:37:13.280><c> perform</c>

00:37:13.990 --> 00:37:14.000 align:start position:0%
the absolute fastest way to perform
 

00:37:14.000 --> 00:37:16.550 align:start position:0%
the absolute fastest way to perform
any<00:37:14.240><c> sort</c><00:37:14.480><c> of</c><00:37:14.560><c> calculation</c><00:37:15.520><c> uh</c><00:37:15.760><c> or</c><00:37:15.920><c> to</c><00:37:16.079><c> access</c>

00:37:16.550 --> 00:37:16.560 align:start position:0%
any sort of calculation uh or to access
 

00:37:16.560 --> 00:37:18.310 align:start position:0%
any sort of calculation uh or to access
any<00:37:16.800><c> value</c><00:37:17.200><c> and</c><00:37:17.359><c> that's</c><00:37:17.599><c> why</c>

00:37:18.310 --> 00:37:18.320 align:start position:0%
any value and that's why
 

00:37:18.320 --> 00:37:21.030 align:start position:0%
any value and that's why
um<00:37:18.880><c> it's</c><00:37:19.119><c> important</c><00:37:19.760><c> to</c><00:37:19.920><c> use</c><00:37:20.160><c> them</c><00:37:20.480><c> and</c><00:37:20.640><c> also</c>

00:37:21.030 --> 00:37:21.040 align:start position:0%
um it's important to use them and also
 

00:37:21.040 --> 00:37:21.750 align:start position:0%
um it's important to use them and also
why

00:37:21.750 --> 00:37:21.760 align:start position:0%
why
 

00:37:21.760 --> 00:37:24.150 align:start position:0%
why
we<00:37:22.000><c> prefer</c><00:37:22.560><c> using</c><00:37:22.880><c> registers</c><00:37:23.599><c> over</c><00:37:23.920><c> using</c>

00:37:24.150 --> 00:37:24.160 align:start position:0%
we prefer using registers over using
 

00:37:24.160 --> 00:37:26.069 align:start position:0%
we prefer using registers over using
memory<00:37:24.560><c> so</c><00:37:24.720><c> if</c><00:37:24.880><c> you</c><00:37:25.040><c> remember</c><00:37:25.440><c> from</c>

00:37:26.069 --> 00:37:26.079 align:start position:0%
memory so if you remember from
 

00:37:26.079 --> 00:37:28.390 align:start position:0%
memory so if you remember from
the<00:37:26.240><c> reading</c><00:37:27.040><c> when</c><00:37:27.200><c> we</c><00:37:27.440><c> call</c><00:37:27.760><c> functions</c><00:37:28.160><c> so</c>

00:37:28.390 --> 00:37:28.400 align:start position:0%
the reading when we call functions so
 

00:37:28.400 --> 00:37:30.150 align:start position:0%
the reading when we call functions so
you<00:37:28.480><c> can</c><00:37:28.720><c> see</c><00:37:28.960><c> here</c><00:37:29.200><c> that</c><00:37:29.359><c> registers</c>

00:37:30.150 --> 00:37:30.160 align:start position:0%
you can see here that registers
 

00:37:30.160 --> 00:37:33.829 align:start position:0%
you can see here that registers
a0<00:37:30.720><c> to</c><00:37:30.880><c> 7</c><00:37:32.400><c> and</c>

00:37:33.829 --> 00:37:33.839 align:start position:0%
a0 to 7 and
 

00:37:33.839 --> 00:37:35.829 align:start position:0%
a0 to 7 and
in<00:37:34.000><c> general</c><00:37:34.320><c> when</c><00:37:34.480><c> we</c><00:37:34.640><c> speak</c><00:37:34.800><c> about</c><00:37:35.119><c> registers</c>

00:37:35.829 --> 00:37:35.839 align:start position:0%
in general when we speak about registers
 

00:37:35.839 --> 00:37:37.030 align:start position:0%
in general when we speak about registers
we

00:37:37.030 --> 00:37:37.040 align:start position:0%
we
 

00:37:37.040 --> 00:37:39.030 align:start position:0%
we
we<00:37:37.200><c> will</c><00:37:37.680><c> be</c><00:37:38.000><c> referring</c><00:37:38.480><c> to</c><00:37:38.560><c> them</c><00:37:38.720><c> by</c><00:37:38.880><c> their</c>

00:37:39.030 --> 00:37:39.040 align:start position:0%
we will be referring to them by their
 

00:37:39.040 --> 00:37:41.270 align:start position:0%
we will be referring to them by their
abi<00:37:39.599><c> name</c><00:37:40.000><c> um</c>

00:37:41.270 --> 00:37:41.280 align:start position:0%
abi name um
 

00:37:41.280 --> 00:37:43.190 align:start position:0%
abi name um
not<00:37:41.520><c> only</c><00:37:41.760><c> is</c><00:37:41.920><c> it</c><00:37:42.240><c> less</c><00:37:42.400><c> confusing</c><00:37:42.880><c> it's</c><00:37:43.040><c> just</c>

00:37:43.190 --> 00:37:43.200 align:start position:0%
not only is it less confusing it's just
 

00:37:43.200 --> 00:37:44.550 align:start position:0%
not only is it less confusing it's just
a<00:37:43.280><c> standard</c><00:37:43.680><c> and</c><00:37:43.839><c> it's</c><00:37:43.920><c> also</c><00:37:44.160><c> the</c><00:37:44.320><c> way</c><00:37:44.480><c> that</c>

00:37:44.550 --> 00:37:44.560 align:start position:0%
a standard and it's also the way that
 

00:37:44.560 --> 00:37:46.069 align:start position:0%
a standard and it's also the way that
you'll<00:37:44.720><c> write</c><00:37:44.960><c> assembly</c><00:37:45.440><c> code</c>

00:37:46.069 --> 00:37:46.079 align:start position:0%
you'll write assembly code
 

00:37:46.079 --> 00:37:49.430 align:start position:0%
you'll write assembly code
um<00:37:46.560><c> this</c><00:37:47.440><c> you</c><00:37:47.599><c> know</c><00:37:48.240><c> these</c><00:37:48.560><c> actual</c><00:37:48.960><c> numbers</c>

00:37:49.430 --> 00:37:49.440 align:start position:0%
um this you know these actual numbers
 

00:37:49.440 --> 00:37:51.109 align:start position:0%
um this you know these actual numbers
are<00:37:49.599><c> not</c><00:37:49.839><c> super</c><00:37:50.240><c> important</c>

00:37:51.109 --> 00:37:51.119 align:start position:0%
are not super important
 

00:37:51.119 --> 00:37:54.390 align:start position:0%
are not super important
the<00:37:51.440><c> only</c><00:37:51.920><c> case</c><00:37:52.240><c> where</c><00:37:52.480><c> it</c><00:37:52.560><c> does</c><00:37:52.880><c> matter</c><00:37:53.520><c> is</c>

00:37:54.390 --> 00:37:54.400 align:start position:0%
the only case where it does matter is
 

00:37:54.400 --> 00:37:57.270 align:start position:0%
the only case where it does matter is
for<00:37:55.040><c> the</c><00:37:55.359><c> compressed</c><00:37:55.920><c> version</c><00:37:56.240><c> of</c><00:37:56.400><c> risk</c><00:37:56.720><c> 5</c>

00:37:57.270 --> 00:37:57.280 align:start position:0%
for the compressed version of risk 5
 

00:37:57.280 --> 00:37:58.310 align:start position:0%
for the compressed version of risk 5
instructions

00:37:58.310 --> 00:37:58.320 align:start position:0%
instructions
 

00:37:58.320 --> 00:38:01.030 align:start position:0%
instructions
and<00:37:58.640><c> if</c><00:37:58.720><c> you</c><00:37:58.880><c> want</c><00:37:58.960><c> to</c><00:37:59.040><c> know</c><00:37:59.200><c> more</c><00:37:59.440><c> about</c><00:37:59.680><c> that</c>

00:38:01.030 --> 00:38:01.040 align:start position:0%
and if you want to know more about that
 

00:38:01.040 --> 00:38:02.710 align:start position:0%
and if you want to know more about that
feel<00:38:01.280><c> free</c><00:38:01.440><c> to</c><00:38:01.520><c> read</c><00:38:01.760><c> up</c><00:38:01.920><c> about</c><00:38:02.079><c> it</c><00:38:02.240><c> the</c><00:38:02.320><c> basic</c>

00:38:02.710 --> 00:38:02.720 align:start position:0%
feel free to read up about it the basic
 

00:38:02.720 --> 00:38:03.990 align:start position:0%
feel free to read up about it the basic
idea<00:38:03.200><c> is</c><00:38:03.440><c> that</c><00:38:03.680><c> risk</c>

00:38:03.990 --> 00:38:04.000 align:start position:0%
idea is that risk
 

00:38:04.000 --> 00:38:07.190 align:start position:0%
idea is that risk
5<00:38:05.200><c> normal</c><00:38:05.520><c> instructions</c><00:38:06.079><c> are</c><00:38:06.160><c> 64</c><00:38:06.800><c> bits</c>

00:38:07.190 --> 00:38:07.200 align:start position:0%
5 normal instructions are 64 bits
 

00:38:07.200 --> 00:38:08.870 align:start position:0%
5 normal instructions are 64 bits
but<00:38:07.359><c> there's</c><00:38:07.680><c> also</c><00:38:07.920><c> a</c><00:38:08.079><c> compressed</c><00:38:08.480><c> version</c><00:38:08.800><c> in</c>

00:38:08.870 --> 00:38:08.880 align:start position:0%
but there's also a compressed version in
 

00:38:08.880 --> 00:38:10.790 align:start position:0%
but there's also a compressed version in
which<00:38:09.119><c> instructions</c><00:38:09.599><c> are</c><00:38:09.680><c> 16</c><00:38:10.160><c> bits</c>

00:38:10.790 --> 00:38:10.800 align:start position:0%
which instructions are 16 bits
 

00:38:10.800 --> 00:38:12.790 align:start position:0%
which instructions are 16 bits
and<00:38:10.880><c> we</c><00:38:11.040><c> use</c><00:38:11.280><c> less</c><00:38:11.599><c> registers</c><00:38:12.480><c> and</c><00:38:12.640><c> the</c>

00:38:12.790 --> 00:38:12.800 align:start position:0%
and we use less registers and the
 

00:38:12.800 --> 00:38:14.790 align:start position:0%
and we use less registers and the
registers<00:38:13.200><c> we</c><00:38:13.359><c> use</c><00:38:13.599><c> in</c><00:38:13.760><c> that</c><00:38:14.000><c> case</c>

00:38:14.790 --> 00:38:14.800 align:start position:0%
registers we use in that case
 

00:38:14.800 --> 00:38:17.510 align:start position:0%
registers we use in that case
are<00:38:15.839><c> 8</c><00:38:16.160><c> through</c><00:38:16.640><c> 15.</c><00:38:17.119><c> those</c><00:38:17.280><c> are</c><00:38:17.359><c> the</c>

00:38:17.510 --> 00:38:17.520 align:start position:0%
are 8 through 15. those are the
 

00:38:17.520 --> 00:38:19.190 align:start position:0%
are 8 through 15. those are the
registers<00:38:17.920><c> that</c><00:38:18.000><c> are</c><00:38:18.079><c> available</c><00:38:18.560><c> to</c><00:38:18.720><c> us</c>

00:38:19.190 --> 00:38:19.200 align:start position:0%
registers that are available to us
 

00:38:19.200 --> 00:38:20.790 align:start position:0%
registers that are available to us
so<00:38:19.359><c> i</c><00:38:19.440><c> think</c><00:38:19.599><c> somebody</c><00:38:19.920><c> had</c><00:38:20.079><c> a</c><00:38:20.240><c> question</c><00:38:20.560><c> about</c>

00:38:20.790 --> 00:38:20.800 align:start position:0%
so i think somebody had a question about
 

00:38:20.800 --> 00:38:23.430 align:start position:0%
so i think somebody had a question about
you<00:38:20.880><c> know</c><00:38:21.440><c> why</c><00:38:21.680><c> is</c><00:38:21.839><c> this</c><00:38:22.160><c> s1</c><00:38:22.720><c> register</c>

00:38:23.430 --> 00:38:23.440 align:start position:0%
you know why is this s1 register
 

00:38:23.440 --> 00:38:26.630 align:start position:0%
you know why is this s1 register
x9<00:38:24.079><c> why</c><00:38:24.320><c> is</c><00:38:24.560><c> it</c><00:38:25.440><c> separated</c><00:38:26.000><c> from</c><00:38:26.240><c> all</c><00:38:26.400><c> of</c><00:38:26.480><c> the</c>

00:38:26.630 --> 00:38:26.640 align:start position:0%
x9 why is it separated from all of the
 

00:38:26.640 --> 00:38:27.190 align:start position:0%
x9 why is it separated from all of the
other<00:38:26.960><c> s</c>

00:38:27.190 --> 00:38:27.200 align:start position:0%
other s
 

00:38:27.200 --> 00:38:29.670 align:start position:0%
other s
registers<00:38:28.160><c> and</c><00:38:28.640><c> my</c><00:38:28.880><c> guess</c><00:38:29.119><c> is</c><00:38:29.280><c> that</c><00:38:29.440><c> that's</c>

00:38:29.670 --> 00:38:29.680 align:start position:0%
registers and my guess is that that's
 

00:38:29.680 --> 00:38:31.829 align:start position:0%
registers and my guess is that that's
why

00:38:31.829 --> 00:38:31.839 align:start position:0%
why
 

00:38:31.839 --> 00:38:33.109 align:start position:0%
why
that<00:38:32.000><c> we</c><00:38:32.160><c> separated</c><00:38:32.560><c> from</c><00:38:32.720><c> all</c><00:38:32.800><c> of</c><00:38:32.880><c> the</c><00:38:33.040><c> other</c>

00:38:33.109 --> 00:38:33.119 align:start position:0%
that we separated from all of the other
 

00:38:33.119 --> 00:38:34.870 align:start position:0%
that we separated from all of the other
ones<00:38:33.440><c> because</c><00:38:33.760><c> it's</c><00:38:34.000><c> available</c>

00:38:34.870 --> 00:38:34.880 align:start position:0%
ones because it's available
 

00:38:34.880 --> 00:38:37.750 align:start position:0%
ones because it's available
in<00:38:35.440><c> compressed</c><00:38:35.920><c> instruction</c><00:38:36.480><c> mode</c><00:38:37.280><c> whereas</c>

00:38:37.750 --> 00:38:37.760 align:start position:0%
in compressed instruction mode whereas
 

00:38:37.760 --> 00:38:40.069 align:start position:0%
in compressed instruction mode whereas
s2<00:38:38.079><c> to</c><00:38:38.240><c> 11</c><00:38:38.640><c> or</c><00:38:38.720><c> not</c>

00:38:40.069 --> 00:38:40.079 align:start position:0%
s2 to 11 or not
 

00:38:40.079 --> 00:38:41.829 align:start position:0%
s2 to 11 or not
and<00:38:40.240><c> so</c><00:38:40.400><c> that's</c><00:38:40.560><c> the</c><00:38:40.720><c> idea</c><00:38:41.119><c> so</c><00:38:41.280><c> that's</c><00:38:41.599><c> that's</c>

00:38:41.829 --> 00:38:41.839 align:start position:0%
and so that's the idea so that's that's
 

00:38:41.839 --> 00:38:43.589 align:start position:0%
and so that's the idea so that's that's
for<00:38:42.000><c> compressed</c><00:38:42.400><c> but</c><00:38:42.560><c> outside</c><00:38:42.880><c> of</c><00:38:42.960><c> that</c>

00:38:43.589 --> 00:38:43.599 align:start position:0%
for compressed but outside of that
 

00:38:43.599 --> 00:38:46.470 align:start position:0%
for compressed but outside of that
registers<00:38:44.079><c> will</c><00:38:44.160><c> always</c><00:38:44.640><c> be</c><00:38:44.800><c> referred</c><00:38:45.200><c> to</c><00:38:46.000><c> by</c>

00:38:46.470 --> 00:38:46.480 align:start position:0%
registers will always be referred to by
 

00:38:46.480 --> 00:38:47.190 align:start position:0%
registers will always be referred to by
their

00:38:47.190 --> 00:38:47.200 align:start position:0%
their
 

00:38:47.200 --> 00:38:50.069 align:start position:0%
their
abi<00:38:47.680><c> name</c><00:38:48.000><c> and</c><00:38:48.079><c> so</c><00:38:48.400><c> a0</c><00:38:48.880><c> to</c><00:38:49.040><c> a7</c><00:38:49.520><c> are</c><00:38:49.680><c> used</c><00:38:49.839><c> for</c>

00:38:50.069 --> 00:38:50.079 align:start position:0%
abi name and so a0 to a7 are used for
 

00:38:50.079 --> 00:38:51.270 align:start position:0%
abi name and so a0 to a7 are used for
function<00:38:50.480><c> arguments</c>

00:38:51.270 --> 00:38:51.280 align:start position:0%
function arguments
 

00:38:51.280 --> 00:38:52.630 align:start position:0%
function arguments
but<00:38:51.440><c> if</c><00:38:51.599><c> we</c><00:38:51.680><c> have</c><00:38:51.760><c> a</c><00:38:51.839><c> function</c><00:38:52.160><c> that</c><00:38:52.320><c> takes</c>

00:38:52.630 --> 00:38:52.640 align:start position:0%
but if we have a function that takes
 

00:38:52.640 --> 00:38:55.109 align:start position:0%
but if we have a function that takes
more<00:38:53.040><c> than</c><00:38:53.760><c> the</c><00:38:54.000><c> eight</c><00:38:54.240><c> arguments</c><00:38:54.720><c> that</c><00:38:54.880><c> those</c>

00:38:55.109 --> 00:38:55.119 align:start position:0%
more than the eight arguments that those
 

00:38:55.119 --> 00:38:57.510 align:start position:0%
more than the eight arguments that those
registers<00:38:55.680><c> give</c><00:38:55.920><c> us</c><00:38:56.079><c> access</c><00:38:56.560><c> to</c>

00:38:57.510 --> 00:38:57.520 align:start position:0%
registers give us access to
 

00:38:57.520 --> 00:38:59.990 align:start position:0%
registers give us access to
we<00:38:57.839><c> do</c><00:38:58.000><c> need</c><00:38:58.240><c> to</c><00:38:58.320><c> use</c><00:38:58.480><c> memory</c><00:38:58.880><c> but</c><00:38:59.040><c> that's</c><00:38:59.760><c> this</c>

00:38:59.990 --> 00:39:00.000 align:start position:0%
we do need to use memory but that's this
 

00:39:00.000 --> 00:39:01.190 align:start position:0%
we do need to use memory but that's this
is<00:39:00.079><c> kind</c><00:39:00.240><c> of</c><00:39:00.320><c> an</c><00:39:00.480><c> illustration</c><00:39:00.880><c> of</c><00:39:00.960><c> the</c><00:39:01.040><c> fact</c>

00:39:01.190 --> 00:39:01.200 align:start position:0%
is kind of an illustration of the fact
 

00:39:01.200 --> 00:39:02.710 align:start position:0%
is kind of an illustration of the fact
that<00:39:01.359><c> we</c><00:39:01.520><c> don't</c><00:39:01.680><c> want</c><00:39:01.839><c> to</c><00:39:01.920><c> use</c><00:39:02.079><c> memory</c><00:39:02.400><c> when</c><00:39:02.560><c> we</c>

00:39:02.710 --> 00:39:02.720 align:start position:0%
that we don't want to use memory when we
 

00:39:02.720 --> 00:39:04.310 align:start position:0%
that we don't want to use memory when we
can<00:39:02.960><c> use</c><00:39:03.119><c> registers</c>

00:39:04.310 --> 00:39:04.320 align:start position:0%
can use registers
 

00:39:04.320 --> 00:39:07.190 align:start position:0%
can use registers
we<00:39:04.480><c> only</c><00:39:05.040><c> we</c><00:39:05.200><c> only</c><00:39:05.520><c> use</c><00:39:06.240><c> a</c><00:39:06.320><c> memory</c><00:39:06.720><c> if</c><00:39:06.880><c> we</c><00:39:06.960><c> have</c>

00:39:07.190 --> 00:39:07.200 align:start position:0%
we only we only use a memory if we have
 

00:39:07.200 --> 00:39:08.710 align:start position:0%
we only we only use a memory if we have
to

00:39:08.710 --> 00:39:08.720 align:start position:0%
to
 

00:39:08.720 --> 00:39:10.790 align:start position:0%
to
and<00:39:08.880><c> this</c><00:39:09.200><c> uh</c><00:39:09.359><c> this</c><00:39:09.599><c> column</c><00:39:10.000><c> here</c><00:39:10.240><c> the</c><00:39:10.400><c> saver</c>

00:39:10.790 --> 00:39:10.800 align:start position:0%
and this uh this column here the saver
 

00:39:10.800 --> 00:39:12.069 align:start position:0%
and this uh this column here the saver
column

00:39:12.069 --> 00:39:12.079 align:start position:0%
column
 

00:39:12.079 --> 00:39:14.069 align:start position:0%
column
this<00:39:12.320><c> is</c><00:39:12.480><c> also</c><00:39:13.119><c> extremely</c><00:39:13.599><c> important</c><00:39:13.920><c> when</c>

00:39:14.069 --> 00:39:14.079 align:start position:0%
this is also extremely important when
 

00:39:14.079 --> 00:39:16.230 align:start position:0%
this is also extremely important when
we're<00:39:14.240><c> discussing</c><00:39:14.720><c> registers</c><00:39:15.359><c> caller</c><00:39:15.760><c> versus</c>

00:39:16.230 --> 00:39:16.240 align:start position:0%
we're discussing registers caller versus
 

00:39:16.240 --> 00:39:17.829 align:start position:0%
we're discussing registers caller versus
callee<00:39:16.800><c> saved</c>

00:39:17.829 --> 00:39:17.839 align:start position:0%
callee saved
 

00:39:17.839 --> 00:39:21.270 align:start position:0%
callee saved
and<00:39:18.240><c> um</c><00:39:19.760><c> the</c><00:39:20.000><c> terms</c><00:39:20.400><c> are</c>

00:39:21.270 --> 00:39:21.280 align:start position:0%
and um the terms are
 

00:39:21.280 --> 00:39:23.990 align:start position:0%
and um the terms are
i<00:39:21.599><c> confuse</c><00:39:22.079><c> them</c><00:39:22.880><c> regularly</c><00:39:23.520><c> caller</c><00:39:23.920><c> and</c>

00:39:23.990 --> 00:39:24.000 align:start position:0%
i confuse them regularly caller and
 

00:39:24.000 --> 00:39:26.150 align:start position:0%
i confuse them regularly caller and
callie<00:39:24.320><c> they</c><00:39:24.480><c> only</c><00:39:24.720><c> differ</c><00:39:25.040><c> by</c><00:39:25.200><c> one</c><00:39:25.440><c> letter</c>

00:39:26.150 --> 00:39:26.160 align:start position:0%
callie they only differ by one letter
 

00:39:26.160 --> 00:39:29.190 align:start position:0%
callie they only differ by one letter
the<00:39:26.720><c> easiest</c><00:39:27.280><c> way</c><00:39:27.599><c> that</c><00:39:28.240><c> i</c><00:39:28.480><c> found</c><00:39:28.720><c> to</c><00:39:28.880><c> remember</c>

00:39:29.190 --> 00:39:29.200 align:start position:0%
the easiest way that i found to remember
 

00:39:29.200 --> 00:39:30.470 align:start position:0%
the easiest way that i found to remember
them<00:39:29.520><c> is</c><00:39:29.680><c> that</c>

00:39:30.470 --> 00:39:30.480 align:start position:0%
them is that
 

00:39:30.480 --> 00:39:34.390 align:start position:0%
them is that
caller<00:39:31.119><c> saved</c><00:39:31.599><c> registers</c><00:39:32.880><c> are</c><00:39:33.359><c> not</c>

00:39:34.390 --> 00:39:34.400 align:start position:0%
caller saved registers are not
 

00:39:34.400 --> 00:39:37.589 align:start position:0%
caller saved registers are not
preserved

00:39:37.589 --> 00:39:37.599 align:start position:0%
 
 

00:39:37.599 --> 00:39:42.230 align:start position:0%
 
across<00:39:39.760><c> a</c><00:39:39.920><c> function</c><00:39:40.839><c> call</c>

00:39:42.230 --> 00:39:42.240 align:start position:0%
across a function call
 

00:39:42.240 --> 00:39:46.790 align:start position:0%
across a function call
so<00:39:43.200><c> and</c><00:39:43.680><c> callee</c><00:39:44.160><c> saved</c><00:39:44.480><c> registers</c>

00:39:46.790 --> 00:39:46.800 align:start position:0%
so and callee saved registers
 

00:39:46.800 --> 00:39:52.069 align:start position:0%
so and callee saved registers
are<00:39:47.040><c> preserved</c><00:39:49.599><c> what</c><00:39:49.760><c> i</c><00:39:49.920><c> mean</c><00:39:50.240><c> by</c><00:39:50.480><c> this</c>

00:39:52.069 --> 00:39:52.079 align:start position:0%
are preserved what i mean by this
 

00:39:52.079 --> 00:39:55.190 align:start position:0%
are preserved what i mean by this
is<00:39:52.240><c> that</c>

00:39:55.190 --> 00:39:55.200 align:start position:0%
 
 

00:39:55.200 --> 00:39:58.069 align:start position:0%
 
a<00:39:55.520><c> caller</c><00:39:56.000><c> saved</c><00:39:56.320><c> register</c><00:39:57.520><c> can</c><00:39:57.760><c> be</c>

00:39:58.069 --> 00:39:58.079 align:start position:0%
a caller saved register can be
 

00:39:58.079 --> 00:39:59.190 align:start position:0%
a caller saved register can be
overwritten

00:39:59.190 --> 00:39:59.200 align:start position:0%
overwritten
 

00:39:59.200 --> 00:40:02.310 align:start position:0%
overwritten
by<00:40:00.240><c> the</c><00:40:00.960><c> function</c><00:40:01.359><c> so</c><00:40:01.680><c> let's</c><00:40:01.839><c> say</c><00:40:02.000><c> i</c><00:40:02.160><c> have</c>

00:40:02.310 --> 00:40:02.320 align:start position:0%
by the function so let's say i have
 

00:40:02.320 --> 00:40:03.030 align:start position:0%
by the function so let's say i have
function<00:40:02.720><c> a</c>

00:40:03.030 --> 00:40:03.040 align:start position:0%
function a
 

00:40:03.040 --> 00:40:05.589 align:start position:0%
function a
which<00:40:03.280><c> calls</c><00:40:03.599><c> function</c><00:40:04.000><c> b</c><00:40:04.800><c> any</c><00:40:05.040><c> registers</c>

00:40:05.589 --> 00:40:05.599 align:start position:0%
which calls function b any registers
 

00:40:05.599 --> 00:40:07.109 align:start position:0%
which calls function b any registers
being<00:40:05.920><c> used</c><00:40:06.240><c> by</c><00:40:06.480><c> function</c><00:40:06.880><c> a</c>

00:40:07.109 --> 00:40:07.119 align:start position:0%
being used by function a
 

00:40:07.119 --> 00:40:10.309 align:start position:0%
being used by function a
that<00:40:07.280><c> are</c><00:40:07.440><c> caller</c><00:40:08.000><c> saved</c><00:40:08.960><c> call</c><00:40:09.599><c> function</c><00:40:10.000><c> b</c>

00:40:10.309 --> 00:40:10.319 align:start position:0%
that are caller saved call function b
 

00:40:10.319 --> 00:40:12.710 align:start position:0%
that are caller saved call function b
can<00:40:10.640><c> overwrite</c><00:40:11.200><c> when</c><00:40:11.359><c> it</c><00:40:11.440><c> gets</c><00:40:11.760><c> called</c><00:40:12.480><c> and</c><00:40:12.640><c> i</c>

00:40:12.710 --> 00:40:12.720 align:start position:0%
can overwrite when it gets called and i
 

00:40:12.720 --> 00:40:14.550 align:start position:0%
can overwrite when it gets called and i
think<00:40:12.960><c> a</c><00:40:13.040><c> good</c><00:40:13.280><c> illustration</c><00:40:13.920><c> of</c><00:40:14.079><c> this</c>

00:40:14.550 --> 00:40:14.560 align:start position:0%
think a good illustration of this
 

00:40:14.560 --> 00:40:17.349 align:start position:0%
think a good illustration of this
is<00:40:14.880><c> the</c><00:40:14.960><c> return</c><00:40:15.440><c> address</c><00:40:16.400><c> because</c><00:40:17.040><c> you</c><00:40:17.200><c> know</c>

00:40:17.349 --> 00:40:17.359 align:start position:0%
is the return address because you know
 

00:40:17.359 --> 00:40:19.030 align:start position:0%
is the return address because you know
you<00:40:17.440><c> can</c><00:40:17.599><c> see</c><00:40:17.760><c> that</c><00:40:17.920><c> the</c><00:40:18.079><c> return</c><00:40:18.480><c> address</c><00:40:18.800><c> is</c>

00:40:19.030 --> 00:40:19.040 align:start position:0%
you can see that the return address is
 

00:40:19.040 --> 00:40:21.109 align:start position:0%
you can see that the return address is
caller<00:40:19.440><c> saved</c>

00:40:21.109 --> 00:40:21.119 align:start position:0%
caller saved
 

00:40:21.119 --> 00:40:23.109 align:start position:0%
caller saved
and<00:40:21.359><c> that's</c><00:40:21.680><c> important</c><00:40:22.160><c> because</c><00:40:22.800><c> every</c>

00:40:23.109 --> 00:40:23.119 align:start position:0%
and that's important because every
 

00:40:23.119 --> 00:40:25.750 align:start position:0%
and that's important because every
function<00:40:23.839><c> needs</c><00:40:24.240><c> to</c><00:40:24.400><c> use</c><00:40:24.640><c> the</c><00:40:24.800><c> return</c><00:40:25.119><c> address</c>

00:40:25.750 --> 00:40:25.760 align:start position:0%
function needs to use the return address
 

00:40:25.760 --> 00:40:28.630 align:start position:0%
function needs to use the return address
so<00:40:26.400><c> when</c><00:40:26.640><c> a</c><00:40:26.880><c> calls</c><00:40:27.200><c> b</c><00:40:27.599><c> it's</c><00:40:27.839><c> important</c><00:40:28.160><c> that</c><00:40:28.400><c> b</c>

00:40:28.630 --> 00:40:28.640 align:start position:0%
so when a calls b it's important that b
 

00:40:28.640 --> 00:40:30.069 align:start position:0%
so when a calls b it's important that b
be<00:40:28.880><c> able</c><00:40:29.200><c> to</c>

00:40:30.069 --> 00:40:30.079 align:start position:0%
be able to
 

00:40:30.079 --> 00:40:31.990 align:start position:0%
be able to
overwrite<00:40:30.960><c> the</c><00:40:31.119><c> value</c><00:40:31.520><c> in</c><00:40:31.599><c> the</c><00:40:31.680><c> return</c>

00:40:31.990 --> 00:40:32.000 align:start position:0%
overwrite the value in the return
 

00:40:32.000 --> 00:40:34.390 align:start position:0%
overwrite the value in the return
address<00:40:32.480><c> hence</c><00:40:32.800><c> why</c><00:40:32.960><c> it's</c><00:40:33.119><c> caller</c><00:40:33.520><c> saved</c>

00:40:34.390 --> 00:40:34.400 align:start position:0%
address hence why it's caller saved
 

00:40:34.400 --> 00:40:37.750 align:start position:0%
address hence why it's caller saved
and<00:40:34.640><c> callee</c><00:40:35.119><c> saved</c><00:40:35.440><c> registers</c><00:40:36.720><c> are</c><00:40:36.880><c> just</c><00:40:37.280><c> our</c>

00:40:37.750 --> 00:40:37.760 align:start position:0%
and callee saved registers are just our
 

00:40:37.760 --> 00:40:40.069 align:start position:0%
and callee saved registers are just our
convention<00:40:38.240><c> that</c><00:40:38.400><c> we</c><00:40:38.640><c> use</c>

00:40:40.069 --> 00:40:40.079 align:start position:0%
convention that we use
 

00:40:40.079 --> 00:40:42.150 align:start position:0%
convention that we use
the<00:40:40.319><c> frame</c><00:40:40.640><c> pointer</c><00:40:41.040><c> is</c><00:40:41.200><c> important</c><00:40:41.760><c> for</c><00:40:41.920><c> that</c>

00:40:42.150 --> 00:40:42.160 align:start position:0%
the frame pointer is important for that
 

00:40:42.160 --> 00:40:44.069 align:start position:0%
the frame pointer is important for that
reason

00:40:44.069 --> 00:40:44.079 align:start position:0%
reason
 

00:40:44.079 --> 00:40:45.670 align:start position:0%
reason
and<00:40:44.400><c> those</c><00:40:44.720><c> are</c><00:40:44.960><c> preserved</c><00:40:45.359><c> across</c><00:40:45.599><c> the</c>

00:40:45.670 --> 00:40:45.680 align:start position:0%
and those are preserved across the
 

00:40:45.680 --> 00:40:47.430 align:start position:0%
and those are preserved across the
function<00:40:46.000><c> calls</c><00:40:46.240><c> so</c><00:40:46.480><c> basically</c><00:40:46.880><c> any</c><00:40:47.040><c> register</c>

00:40:47.430 --> 00:40:47.440 align:start position:0%
function calls so basically any register
 

00:40:47.440 --> 00:40:49.030 align:start position:0%
function calls so basically any register
that<00:40:47.599><c> is</c><00:40:47.760><c> caller</c><00:40:48.240><c> saved</c>

00:40:49.030 --> 00:40:49.040 align:start position:0%
that is caller saved
 

00:40:49.040 --> 00:40:50.470 align:start position:0%
that is caller saved
the<00:40:49.200><c> function</c><00:40:49.520><c> that</c><00:40:49.680><c> is</c><00:40:49.760><c> making</c><00:40:50.079><c> the</c><00:40:50.240><c> call</c>

00:40:50.470 --> 00:40:50.480 align:start position:0%
the function that is making the call
 

00:40:50.480 --> 00:40:52.550 align:start position:0%
the function that is making the call
needs<00:40:50.720><c> to</c><00:40:50.880><c> worry</c><00:40:51.119><c> about</c><00:40:51.359><c> those</c><00:40:51.599><c> registers</c>

00:40:52.550 --> 00:40:52.560 align:start position:0%
needs to worry about those registers
 

00:40:52.560 --> 00:40:54.069 align:start position:0%
needs to worry about those registers
and<00:40:52.720><c> if</c><00:40:52.880><c> they're</c><00:40:53.040><c> calling</c><00:40:53.520><c> saved</c><00:40:54.000><c> the</c>

00:40:54.069 --> 00:40:54.079 align:start position:0%
and if they're calling saved the
 

00:40:54.079 --> 00:40:55.829 align:start position:0%
and if they're calling saved the
function<00:40:54.480><c> that</c><00:40:54.640><c> is</c><00:40:54.800><c> being</c><00:40:55.119><c> called</c>

00:40:55.829 --> 00:40:55.839 align:start position:0%
function that is being called
 

00:40:55.839 --> 00:40:57.349 align:start position:0%
function that is being called
needs<00:40:56.079><c> to</c><00:40:56.240><c> worry</c><00:40:56.480><c> about</c><00:40:56.800><c> preserving</c><00:40:57.280><c> the</c>

00:40:57.349 --> 00:40:57.359 align:start position:0%
needs to worry about preserving the
 

00:40:57.359 --> 00:40:59.750 align:start position:0%
needs to worry about preserving the
value<00:40:57.760><c> in</c><00:40:57.920><c> those</c><00:40:58.160><c> registers</c>

00:40:59.750 --> 00:40:59.760 align:start position:0%
value in those registers
 

00:40:59.760 --> 00:41:02.710 align:start position:0%
value in those registers
and<00:41:00.000><c> again</c><00:41:00.240><c> you</c><00:41:00.400><c> know</c><00:41:00.880><c> i</c><00:41:01.119><c> i</c><00:41:01.760><c> regularly</c><00:41:02.319><c> confuse</c>

00:41:02.710 --> 00:41:02.720 align:start position:0%
and again you know i i regularly confuse
 

00:41:02.720 --> 00:41:03.270 align:start position:0%
and again you know i i regularly confuse
the<00:41:02.880><c> two</c>

00:41:03.270 --> 00:41:03.280 align:start position:0%
the two
 

00:41:03.280 --> 00:41:07.750 align:start position:0%
the two
and<00:41:03.599><c> find</c><00:41:03.839><c> myself</c><00:41:04.240><c> returning</c><00:41:05.200><c> to</c><00:41:05.359><c> this</c><00:41:05.599><c> table</c>

00:41:07.750 --> 00:41:07.760 align:start position:0%
and find myself returning to this table
 

00:41:07.760 --> 00:41:11.109 align:start position:0%
and find myself returning to this table
to<00:41:08.400><c> remind</c><00:41:08.800><c> myself</c><00:41:09.200><c> about</c><00:41:09.440><c> what</c><00:41:09.599><c> they</c><00:41:09.760><c> do</c>

00:41:11.109 --> 00:41:11.119 align:start position:0%
to remind myself about what they do
 

00:41:11.119 --> 00:41:14.150 align:start position:0%
to remind myself about what they do
and<00:41:11.680><c> so</c><00:41:12.640><c> you</c><00:41:12.720><c> know</c><00:41:12.960><c> you</c><00:41:13.520><c> if</c><00:41:13.599><c> you</c><00:41:13.760><c> remember</c><00:41:14.000><c> from</c>

00:41:14.150 --> 00:41:14.160 align:start position:0%
and so you know you if you remember from
 

00:41:14.160 --> 00:41:14.870 align:start position:0%
and so you know you if you remember from
the<00:41:14.319><c> reading</c>

00:41:14.870 --> 00:41:14.880 align:start position:0%
the reading
 

00:41:14.880 --> 00:41:18.150 align:start position:0%
the reading
all<00:41:15.040><c> of</c><00:41:15.119><c> these</c><00:41:15.359><c> registers</c><00:41:16.240><c> are</c><00:41:16.560><c> 64</c><00:41:17.280><c> bits</c><00:41:17.760><c> wide</c>

00:41:18.150 --> 00:41:18.160 align:start position:0%
all of these registers are 64 bits wide
 

00:41:18.160 --> 00:41:19.349 align:start position:0%
all of these registers are 64 bits wide
so<00:41:18.319><c> they</c><00:41:18.480><c> have</c><00:41:18.640><c> 64</c>

00:41:19.349 --> 00:41:19.359 align:start position:0%
so they have 64
 

00:41:19.359 --> 00:41:22.550 align:start position:0%
so they have 64
places<00:41:19.680><c> where</c><00:41:19.920><c> we</c><00:41:20.079><c> can</c><00:41:20.240><c> put</c><00:41:20.480><c> things</c><00:41:21.440><c> and</c>

00:41:22.550 --> 00:41:22.560 align:start position:0%
places where we can put things and
 

00:41:22.560 --> 00:41:24.950 align:start position:0%
places where we can put things and
the<00:41:22.720><c> various</c><00:41:23.200><c> data</c><00:41:23.520><c> types</c><00:41:24.000><c> are</c><00:41:24.160><c> made</c><00:41:24.480><c> to</c><00:41:24.720><c> fit</c>

00:41:24.950 --> 00:41:24.960 align:start position:0%
the various data types are made to fit
 

00:41:24.960 --> 00:41:27.190 align:start position:0%
the various data types are made to fit
into<00:41:25.280><c> those</c><00:41:25.520><c> 64</c><00:41:26.079><c> bits</c>

00:41:27.190 --> 00:41:27.200 align:start position:0%
into those 64 bits
 

00:41:27.200 --> 00:41:28.950 align:start position:0%
into those 64 bits
based<00:41:27.520><c> on</c><00:41:27.599><c> the</c><00:41:27.760><c> calling</c><00:41:28.079><c> convention</c><00:41:28.560><c> so</c><00:41:28.800><c> if</c><00:41:28.880><c> we</c>

00:41:28.950 --> 00:41:28.960 align:start position:0%
based on the calling convention so if we
 

00:41:28.960 --> 00:41:30.710 align:start position:0%
based on the calling convention so if we
have<00:41:29.040><c> a</c><00:41:29.119><c> 32-bit</c><00:41:29.760><c> integer</c>

00:41:30.710 --> 00:41:30.720 align:start position:0%
have a 32-bit integer
 

00:41:30.720 --> 00:41:32.309 align:start position:0%
have a 32-bit integer
depending<00:41:31.119><c> on</c><00:41:31.280><c> how</c><00:41:31.440><c> it's</c><00:41:31.839><c> whether</c><00:41:32.079><c> or</c><00:41:32.160><c> not</c>

00:41:32.309 --> 00:41:32.319 align:start position:0%
depending on how it's whether or not
 

00:41:32.319 --> 00:41:34.230 align:start position:0%
depending on how it's whether or not
it's<00:41:32.480><c> sign</c><00:41:32.720><c> extended</c><00:41:33.599><c> you</c><00:41:33.680><c> know</c><00:41:33.839><c> we'll</c><00:41:34.000><c> either</c>

00:41:34.230 --> 00:41:34.240 align:start position:0%
it's sign extended you know we'll either
 

00:41:34.240 --> 00:41:36.150 align:start position:0%
it's sign extended you know we'll either
add<00:41:34.400><c> zeros</c><00:41:34.800><c> or</c><00:41:34.880><c> ones</c><00:41:35.359><c> to</c><00:41:35.599><c> the</c><00:41:35.680><c> front</c><00:41:35.839><c> of</c><00:41:35.920><c> that</c>

00:41:36.150 --> 00:41:36.160 align:start position:0%
add zeros or ones to the front of that
 

00:41:36.160 --> 00:41:37.109 align:start position:0%
add zeros or ones to the front of that
integer

00:41:37.109 --> 00:41:37.119 align:start position:0%
integer
 

00:41:37.119 --> 00:41:38.870 align:start position:0%
integer
in<00:41:37.200><c> order</c><00:41:37.440><c> to</c><00:41:37.520><c> make</c><00:41:37.599><c> it</c><00:41:37.760><c> 64</c><00:41:38.160><c> bits</c><00:41:38.480><c> to</c><00:41:38.560><c> put</c><00:41:38.720><c> in</c>

00:41:38.870 --> 00:41:38.880 align:start position:0%
in order to make it 64 bits to put in
 

00:41:38.880 --> 00:41:40.470 align:start position:0%
in order to make it 64 bits to put in
these<00:41:39.040><c> registers</c>

00:41:40.470 --> 00:41:40.480 align:start position:0%
these registers
 

00:41:40.480 --> 00:41:42.790 align:start position:0%
these registers
so<00:41:40.720><c> before</c><00:41:40.960><c> we</c><00:41:41.119><c> move</c><00:41:41.359><c> on</c><00:41:42.000><c> uh</c><00:41:42.240><c> does</c><00:41:42.400><c> anybody</c>

00:41:42.790 --> 00:41:42.800 align:start position:0%
so before we move on uh does anybody
 

00:41:42.800 --> 00:41:44.710 align:start position:0%
so before we move on uh does anybody
have<00:41:43.119><c> questions</c><00:41:43.680><c> about</c>

00:41:44.710 --> 00:41:44.720 align:start position:0%
have questions about
 

00:41:44.720 --> 00:41:47.510 align:start position:0%
have questions about
registers<00:41:45.599><c> or</c><00:41:46.800><c> things</c><00:41:47.040><c> things</c><00:41:47.280><c> of</c><00:41:47.359><c> that</c>

00:41:47.510 --> 00:41:47.520 align:start position:0%
registers or things things of that
 

00:41:47.520 --> 00:41:58.069 align:start position:0%
registers or things things of that
nature

00:41:58.069 --> 00:41:58.079 align:start position:0%
 
 

00:41:58.079 --> 00:42:01.109 align:start position:0%
 
i<00:41:58.400><c> have</c><00:41:58.560><c> a</c><00:41:58.720><c> question</c><00:41:59.359><c> can</c><00:41:59.599><c> you</c><00:42:00.240><c> have</c><00:42:00.560><c> a</c>

00:42:01.109 --> 00:42:01.119 align:start position:0%
i have a question can you have a
 

00:42:01.119 --> 00:42:05.349 align:start position:0%
i have a question can you have a
can<00:42:01.280><c> you</c><00:42:01.440><c> put</c><00:42:01.680><c> a</c><00:42:01.760><c> return</c><00:42:02.160><c> value</c><00:42:02.560><c> in</c><00:42:02.800><c> a1</c>

00:42:05.349 --> 00:42:05.359 align:start position:0%
can you put a return value in a1
 

00:42:05.359 --> 00:42:08.550 align:start position:0%
can you put a return value in a1
yes<00:42:05.680><c> it's</c><00:42:05.760><c> a</c><00:42:05.839><c> good</c><00:42:06.079><c> question</c><00:42:06.560><c> so</c><00:42:07.680><c> um</c><00:42:08.319><c> i</c><00:42:08.400><c> think</c>

00:42:08.550 --> 00:42:08.560 align:start position:0%
yes it's a good question so um i think
 

00:42:08.560 --> 00:42:09.430 align:start position:0%
yes it's a good question so um i think
in<00:42:08.720><c> theory</c>

00:42:09.430 --> 00:42:09.440 align:start position:0%
in theory
 

00:42:09.440 --> 00:42:14.550 align:start position:0%
in theory
you<00:42:10.640><c> can</c><00:42:11.040><c> the</c><00:42:11.280><c> reason</c><00:42:11.760><c> why</c><00:42:12.400><c> we</c><00:42:12.640><c> say</c><00:42:12.880><c> a0</c><00:42:13.280><c> to</c><00:42:13.520><c> a1</c>

00:42:14.550 --> 00:42:14.560 align:start position:0%
you can the reason why we say a0 to a1
 

00:42:14.560 --> 00:42:16.950 align:start position:0%
you can the reason why we say a0 to a1
is<00:42:14.800><c> if</c><00:42:14.960><c> a</c><00:42:15.040><c> function</c><00:42:15.440><c> returns</c><00:42:15.760><c> a</c><00:42:15.920><c> long</c><00:42:16.240><c> long</c>

00:42:16.950 --> 00:42:16.960 align:start position:0%
is if a function returns a long long
 

00:42:16.960 --> 00:42:18.790 align:start position:0%
is if a function returns a long long
which<00:42:17.200><c> is</c><00:42:17.319><c> 128</c><00:42:18.400><c> bits</c>

00:42:18.790 --> 00:42:18.800 align:start position:0%
which is 128 bits
 

00:42:18.800 --> 00:42:21.430 align:start position:0%
which is 128 bits
so<00:42:19.119><c> if</c><00:42:19.280><c> you</c><00:42:19.520><c> remember</c><00:42:19.920><c> from</c><00:42:20.079><c> the</c><00:42:20.240><c> reading</c><00:42:21.119><c> if</c><00:42:21.280><c> a</c>

00:42:21.430 --> 00:42:21.440 align:start position:0%
so if you remember from the reading if a
 

00:42:21.440 --> 00:42:23.589 align:start position:0%
so if you remember from the reading if a
function<00:42:21.839><c> argument</c><00:42:22.319><c> is</c><00:42:22.480><c> 100</c><00:42:22.960><c> is</c><00:42:23.119><c> more</c><00:42:23.280><c> than</c>

00:42:23.589 --> 00:42:23.599 align:start position:0%
function argument is 100 is more than
 

00:42:23.599 --> 00:42:26.069 align:start position:0%
function argument is 100 is more than
a<00:42:23.920><c> pointer</c><00:42:24.880><c> word</c><00:42:25.119><c> and</c><00:42:25.440><c> so</c><00:42:25.599><c> when</c><00:42:25.760><c> we</c><00:42:25.839><c> refer</c><00:42:26.000><c> to</c>

00:42:26.069 --> 00:42:26.079 align:start position:0%
a pointer word and so when we refer to
 

00:42:26.079 --> 00:42:28.150 align:start position:0%
a pointer word and so when we refer to
the prior<00:42:26.319><c> word</c><00:42:26.480><c> size</c><00:42:26.720><c> we're</c><00:42:26.880><c> saying</c><00:42:27.040><c> 64</c><00:42:27.599><c> bits</c>

00:42:28.150 --> 00:42:28.160 align:start position:0%
the prior word size we're saying 64 bits
 

00:42:28.160 --> 00:42:29.750 align:start position:0%
the prior word size we're saying 64 bits
so<00:42:28.400><c> if</c><00:42:28.560><c> we</c><00:42:28.640><c> have</c><00:42:28.800><c> something</c><00:42:29.119><c> that</c><00:42:29.280><c> is</c><00:42:29.520><c> twice</c>

00:42:29.750 --> 00:42:29.760 align:start position:0%
so if we have something that is twice
 

00:42:29.760 --> 00:42:32.309 align:start position:0%
so if we have something that is twice
the<00:42:29.920><c> size</c><00:42:30.240><c> of</c><00:42:30.400><c> a</c><00:42:30.480><c> pointer</c><00:42:30.880><c> word</c>

00:42:32.309 --> 00:42:32.319 align:start position:0%
the size of a pointer word
 

00:42:32.319 --> 00:42:35.349 align:start position:0%
the size of a pointer word
um<00:42:33.040><c> we</c><00:42:33.200><c> can</c><00:42:33.440><c> put</c><00:42:33.599><c> that</c><00:42:33.839><c> in</c><00:42:34.000><c> a</c><00:42:34.079><c> register</c><00:42:34.640><c> pair</c>

00:42:35.349 --> 00:42:35.359 align:start position:0%
um we can put that in a register pair
 

00:42:35.359 --> 00:42:37.510 align:start position:0%
um we can put that in a register pair
and<00:42:35.599><c> so</c><00:42:36.240><c> the</c><00:42:36.400><c> same</c><00:42:36.640><c> convention</c><00:42:37.119><c> holds</c><00:42:37.359><c> true</c>

00:42:37.510 --> 00:42:37.520 align:start position:0%
and so the same convention holds true
 

00:42:37.520 --> 00:42:39.270 align:start position:0%
and so the same convention holds true
for<00:42:37.680><c> return</c><00:42:38.079><c> addresses</c><00:42:38.560><c> where</c><00:42:38.800><c> if</c><00:42:38.960><c> we</c><00:42:39.119><c> have</c>

00:42:39.270 --> 00:42:39.280 align:start position:0%
for return addresses where if we have
 

00:42:39.280 --> 00:42:40.150 align:start position:0%
for return addresses where if we have
something<00:42:39.599><c> that's</c>

00:42:40.150 --> 00:42:40.160 align:start position:0%
something that's
 

00:42:40.160 --> 00:42:42.790 align:start position:0%
something that's
the<00:42:40.319><c> size</c><00:42:40.640><c> of</c><00:42:41.280><c> twice</c><00:42:41.599><c> a</c><00:42:41.680><c> pointer</c><00:42:42.079><c> word</c><00:42:42.480><c> we</c><00:42:42.640><c> can</c>

00:42:42.790 --> 00:42:42.800 align:start position:0%
the size of twice a pointer word we can
 

00:42:42.800 --> 00:42:44.150 align:start position:0%
the size of twice a pointer word we can
stick<00:42:43.040><c> that</c><00:42:43.200><c> in</c><00:42:43.359><c> a0</c><00:42:43.920><c> and</c>

00:42:44.150 --> 00:42:44.160 align:start position:0%
stick that in a0 and
 

00:42:44.160 --> 00:42:46.390 align:start position:0%
stick that in a0 and
a1<00:42:44.640><c> and</c><00:42:44.720><c> use</c><00:42:44.960><c> that</c><00:42:45.119><c> as</c><00:42:45.280><c> the</c><00:42:45.359><c> return</c><00:42:45.680><c> address</c><00:42:46.319><c> i</c>

00:42:46.390 --> 00:42:46.400 align:start position:0%
a1 and use that as the return address i
 

00:42:46.400 --> 00:42:47.829 align:start position:0%
a1 and use that as the return address i
think<00:42:46.560><c> you'll</c><00:42:46.720><c> run</c><00:42:46.880><c> into</c><00:42:47.119><c> problems</c><00:42:47.520><c> if</c><00:42:47.599><c> you</c>

00:42:47.829 --> 00:42:47.839 align:start position:0%
think you'll run into problems if you
 

00:42:47.839 --> 00:42:49.829 align:start position:0%
think you'll run into problems if you
only<00:42:48.079><c> try</c><00:42:48.240><c> to</c><00:42:48.319><c> put</c><00:42:48.480><c> something</c><00:42:48.720><c> in</c><00:42:48.880><c> a1</c>

00:42:49.829 --> 00:42:49.839 align:start position:0%
only try to put something in a1
 

00:42:49.839 --> 00:42:55.829 align:start position:0%
only try to put something in a1
make<00:42:50.079><c> sense</c><00:42:50.480><c> thanks</c>

00:42:55.829 --> 00:42:55.839 align:start position:0%
 
 

00:42:55.839 --> 00:42:58.710 align:start position:0%
 
why<00:42:56.079><c> are</c><00:42:56.240><c> the</c><00:42:57.680><c> registers</c><00:42:58.240><c> not</c><00:42:58.480><c> like</c>

00:42:58.710 --> 00:42:58.720 align:start position:0%
why are the registers not like
 

00:42:58.720 --> 00:42:59.510 align:start position:0%
why are the registers not like
continuous

00:42:59.510 --> 00:42:59.520 align:start position:0%
continuous
 

00:42:59.520 --> 00:43:03.109 align:start position:0%
continuous
so<00:43:00.160><c> why</c><00:43:00.400><c> is</c><00:43:00.560><c> like</c><00:43:00.800><c> a</c><00:43:01.040><c> zero</c><00:43:01.440><c> and</c><00:43:01.599><c> one</c><00:43:02.480><c> separate</c>

00:43:03.109 --> 00:43:03.119 align:start position:0%
so why is like a zero and one separate
 

00:43:03.119 --> 00:43:05.990 align:start position:0%
so why is like a zero and one separate
from<00:43:04.640><c> sorry</c><00:43:04.880><c> no</c><00:43:05.040><c> that's</c><00:43:05.280><c> a</c><00:43:05.440><c> that's</c><00:43:05.680><c> a</c><00:43:05.760><c> bad</c>

00:43:05.990 --> 00:43:06.000 align:start position:0%
from sorry no that's a that's a bad
 

00:43:06.000 --> 00:43:08.390 align:start position:0%
from sorry no that's a that's a bad
example<00:43:06.400><c> what's</c><00:43:06.720><c> why</c><00:43:06.960><c> is</c><00:43:07.160><c> s1</c>

00:43:08.390 --> 00:43:08.400 align:start position:0%
example what's why is s1
 

00:43:08.400 --> 00:43:10.550 align:start position:0%
example what's why is s1
separate<00:43:08.800><c> from</c><00:43:09.040><c> s2</c><00:43:09.520><c> why</c><00:43:09.680><c> are</c><00:43:09.839><c> the</c><00:43:10.000><c> a's</c><00:43:10.400><c> in</c>

00:43:10.550 --> 00:43:10.560 align:start position:0%
separate from s2 why are the a's in
 

00:43:10.560 --> 00:43:13.109 align:start position:0%
separate from s2 why are the a's in
between<00:43:10.960><c> like</c><00:43:11.200><c> is</c><00:43:11.359><c> there</c><00:43:11.520><c> any</c><00:43:11.839><c> point</c><00:43:12.079><c> in</c><00:43:12.160><c> that</c>

00:43:13.109 --> 00:43:13.119 align:start position:0%
between like is there any point in that
 

00:43:13.119 --> 00:43:15.430 align:start position:0%
between like is there any point in that
yeah<00:43:13.359><c> so</c><00:43:13.760><c> uh</c><00:43:14.319><c> i</c><00:43:14.400><c> mentioned</c><00:43:14.720><c> this</c><00:43:14.960><c> briefly</c>

00:43:15.430 --> 00:43:15.440 align:start position:0%
yeah so uh i mentioned this briefly
 

00:43:15.440 --> 00:43:16.950 align:start position:0%
yeah so uh i mentioned this briefly
earlier<00:43:15.839><c> but</c><00:43:16.000><c> there</c><00:43:16.240><c> is</c><00:43:16.400><c> a</c>

00:43:16.950 --> 00:43:16.960 align:start position:0%
earlier but there is a
 

00:43:16.960 --> 00:43:19.109 align:start position:0%
earlier but there is a
compressed<00:43:17.839><c> this</c><00:43:18.079><c> is</c><00:43:18.160><c> a</c><00:43:18.319><c> guess</c><00:43:18.640><c> i</c><00:43:18.720><c> don't</c><00:43:19.040><c> i</c>

00:43:19.109 --> 00:43:19.119 align:start position:0%
compressed this is a guess i don't i
 

00:43:19.119 --> 00:43:20.309 align:start position:0%
compressed this is a guess i don't i
don't<00:43:19.280><c> know</c><00:43:19.520><c> for</c><00:43:19.680><c> sure</c>

00:43:20.309 --> 00:43:20.319 align:start position:0%
don't know for sure
 

00:43:20.319 --> 00:43:23.109 align:start position:0%
don't know for sure
but<00:43:20.560><c> there's</c><00:43:20.880><c> a</c><00:43:20.960><c> compressed</c><00:43:21.599><c> version</c><00:43:22.240><c> of</c><00:43:22.800><c> the</c>

00:43:23.109 --> 00:43:23.119 align:start position:0%
but there's a compressed version of the
 

00:43:23.119 --> 00:43:23.910 align:start position:0%
but there's a compressed version of the
risc<00:43:23.440><c> 5</c>

00:43:23.910 --> 00:43:23.920 align:start position:0%
risc 5
 

00:43:23.920 --> 00:43:26.950 align:start position:0%
risc 5
instructions<00:43:25.280><c> which</c><00:43:25.599><c> are</c><00:43:25.839><c> 16</c><00:43:26.160><c> bits</c><00:43:26.480><c> in</c><00:43:26.640><c> size</c>

00:43:26.950 --> 00:43:26.960 align:start position:0%
instructions which are 16 bits in size
 

00:43:26.960 --> 00:43:28.950 align:start position:0%
instructions which are 16 bits in size
as<00:43:27.119><c> opposed</c><00:43:27.440><c> to</c><00:43:27.599><c> 64.</c>

00:43:28.950 --> 00:43:28.960 align:start position:0%
as opposed to 64.
 

00:43:28.960 --> 00:43:32.309 align:start position:0%
as opposed to 64.
and<00:43:30.640><c> you</c><00:43:30.720><c> would</c><00:43:30.880><c> use</c><00:43:31.119><c> that</c><00:43:31.280><c> to</c><00:43:31.440><c> try</c><00:43:31.680><c> and</c>

00:43:32.309 --> 00:43:32.319 align:start position:0%
and you would use that to try and
 

00:43:32.319 --> 00:43:34.470 align:start position:0%
and you would use that to try and
make<00:43:32.480><c> your</c><00:43:32.640><c> code</c><00:43:32.800><c> take</c><00:43:33.040><c> less</c><00:43:33.280><c> space</c><00:43:33.520><c> in</c><00:43:33.599><c> memory</c>

00:43:34.470 --> 00:43:34.480 align:start position:0%
make your code take less space in memory
 

00:43:34.480 --> 00:43:36.710 align:start position:0%
make your code take less space in memory
and<00:43:35.200><c> when</c><00:43:35.359><c> you</c><00:43:35.599><c> use</c><00:43:35.760><c> those</c><00:43:36.079><c> 16-bit</c>

00:43:36.710 --> 00:43:36.720 align:start position:0%
and when you use those 16-bit
 

00:43:36.720 --> 00:43:38.309 align:start position:0%
and when you use those 16-bit
instructions<00:43:37.359><c> you</c><00:43:37.520><c> only</c><00:43:37.839><c> have</c>

00:43:38.309 --> 00:43:38.319 align:start position:0%
instructions you only have
 

00:43:38.319 --> 00:43:42.069 align:start position:0%
instructions you only have
accesses<00:43:39.040><c> to</c><00:43:39.200><c> registers</c><00:43:40.319><c> 8</c><00:43:40.560><c> through</c><00:43:40.960><c> 15.</c>

00:43:42.069 --> 00:43:42.079 align:start position:0%
accesses to registers 8 through 15.
 

00:43:42.079 --> 00:43:45.990 align:start position:0%
accesses to registers 8 through 15.
so<00:43:42.240><c> i</c><00:43:42.480><c> think</c><00:43:42.880><c> s1</c><00:43:43.440><c> is</c><00:43:43.599><c> separate</c><00:43:44.160><c> from</c><00:43:44.480><c> s2</c><00:43:44.880><c> to</c><00:43:45.119><c> 11</c>

00:43:45.990 --> 00:43:46.000 align:start position:0%
so i think s1 is separate from s2 to 11
 

00:43:46.000 --> 00:43:47.910 align:start position:0%
so i think s1 is separate from s2 to 11
because<00:43:46.480><c> they</c><00:43:46.880><c> want</c><00:43:47.040><c> to</c><00:43:47.119><c> make</c><00:43:47.280><c> it</c><00:43:47.440><c> clear</c><00:43:47.680><c> that</c>

00:43:47.910 --> 00:43:47.920 align:start position:0%
because they want to make it clear that
 

00:43:47.920 --> 00:43:49.990 align:start position:0%
because they want to make it clear that
s1<00:43:48.800><c> is</c><00:43:48.960><c> available</c><00:43:49.520><c> to</c><00:43:49.680><c> you</c>

00:43:49.990 --> 00:43:50.000 align:start position:0%
s1 is available to you
 

00:43:50.000 --> 00:43:51.990 align:start position:0%
s1 is available to you
in<00:43:50.079><c> the</c><00:43:50.400><c> compressed</c><00:43:50.880><c> instruction</c><00:43:51.440><c> mode</c>

00:43:51.990 --> 00:43:52.000 align:start position:0%
in the compressed instruction mode
 

00:43:52.000 --> 00:43:54.550 align:start position:0%
in the compressed instruction mode
whereas<00:43:52.400><c> s2</c><00:43:52.640><c> to</c><00:43:52.800><c> 11</c><00:43:53.200><c> aren't</c>

00:43:54.550 --> 00:43:54.560 align:start position:0%
whereas s2 to 11 aren't
 

00:43:54.560 --> 00:43:56.790 align:start position:0%
whereas s2 to 11 aren't
um<00:43:55.359><c> and</c><00:43:55.520><c> the</c><00:43:55.680><c> reason</c><00:43:56.240><c> you</c><00:43:56.319><c> know</c><00:43:56.480><c> i</c><00:43:56.560><c> don't</c><00:43:56.640><c> know</c>

00:43:56.790 --> 00:43:56.800 align:start position:0%
um and the reason you know i don't know
 

00:43:56.800 --> 00:43:58.470 align:start position:0%
um and the reason you know i don't know
why<00:43:56.960><c> they</c><00:43:57.119><c> picked</c><00:43:57.440><c> x</c>

00:43:58.470 --> 00:43:58.480 align:start position:0%
why they picked x
 

00:43:58.480 --> 00:44:01.670 align:start position:0%
why they picked x
x<00:43:58.640><c> eight</c><00:43:58.880><c> to</c><00:43:59.359><c> 15</c><00:44:00.319><c> but</c><00:44:00.640><c> i</c><00:44:00.880><c> suspect</c><00:44:01.280><c> that</c><00:44:01.440><c> that's</c>

00:44:01.670 --> 00:44:01.680 align:start position:0%
x eight to 15 but i suspect that that's
 

00:44:01.680 --> 00:44:03.030 align:start position:0%
x eight to 15 but i suspect that that's
just<00:44:01.839><c> they</c><00:44:02.079><c> looked</c><00:44:02.319><c> at</c><00:44:02.400><c> a</c><00:44:02.480><c> bunch</c><00:44:02.640><c> of</c><00:44:02.720><c> code</c><00:44:02.960><c> and</c>

00:44:03.030 --> 00:44:03.040 align:start position:0%
just they looked at a bunch of code and
 

00:44:03.040 --> 00:44:04.069 align:start position:0%
just they looked at a bunch of code and
we're<00:44:03.200><c> like</c><00:44:03.359><c> oh</c><00:44:03.520><c> these</c><00:44:03.680><c> are</c><00:44:03.760><c> the</c><00:44:03.839><c> most</c>

00:44:04.069 --> 00:44:04.079 align:start position:0%
we're like oh these are the most
 

00:44:04.079 --> 00:44:09.850 align:start position:0%
we're like oh these are the most
commonly<00:44:04.480><c> used</c><00:44:06.839><c> registers</c>

00:44:09.850 --> 00:44:09.860 align:start position:0%
 
 

00:44:09.860 --> 00:44:17.109 align:start position:0%
 
[Music]

00:44:17.109 --> 00:44:17.119 align:start position:0%
 
 

00:44:17.119 --> 00:44:20.870 align:start position:0%
 
any<00:44:17.359><c> other</c><00:44:17.680><c> questions</c>

00:44:20.870 --> 00:44:20.880 align:start position:0%
 
 

00:44:20.880 --> 00:44:24.870 align:start position:0%
 
i<00:44:21.040><c> had</c><00:44:21.200><c> a</c><00:44:21.280><c> question</c><00:44:22.000><c> um</c><00:44:23.760><c> besides</c><00:44:24.240><c> the</c><00:44:24.400><c> frame</c>

00:44:24.870 --> 00:44:24.880 align:start position:0%
i had a question um besides the frame
 

00:44:24.880 --> 00:44:27.030 align:start position:0%
i had a question um besides the frame
pointer<00:44:25.440><c> the</c><00:44:25.599><c> stack</c><00:44:26.000><c> pointer</c><00:44:26.400><c> and</c><00:44:26.560><c> all</c>

00:44:27.030 --> 00:44:27.040 align:start position:0%
pointer the stack pointer and all
 

00:44:27.040 --> 00:44:29.829 align:start position:0%
pointer the stack pointer and all
uh<00:44:27.599><c> i</c><00:44:27.920><c> i</c><00:44:28.079><c> don't</c><00:44:28.240><c> know</c><00:44:28.480><c> why</c><00:44:28.640><c> we</c><00:44:28.800><c> would</c><00:44:29.040><c> need</c><00:44:29.359><c> more</c>

00:44:29.829 --> 00:44:29.839 align:start position:0%
uh i i don't know why we would need more
 

00:44:29.839 --> 00:44:30.550 align:start position:0%
uh i i don't know why we would need more
call

00:44:30.550 --> 00:44:30.560 align:start position:0%
call
 

00:44:30.560 --> 00:44:33.589 align:start position:0%
call
callista<00:44:31.280><c> registers</c><00:44:32.560><c> but</c><00:44:32.800><c> we</c><00:44:32.960><c> do</c><00:44:33.200><c> have</c>

00:44:33.589 --> 00:44:33.599 align:start position:0%
callista registers but we do have
 

00:44:33.599 --> 00:44:37.670 align:start position:0%
callista registers but we do have
like<00:44:33.839><c> a</c><00:44:33.920><c> bunch</c><00:44:34.160><c> of</c><00:44:34.240><c> them</c><00:44:35.359><c> yeah</c><00:44:36.560><c> the</c><00:44:36.800><c> s1s</c>

00:44:37.670 --> 00:44:37.680 align:start position:0%
like a bunch of them yeah the s1s
 

00:44:37.680 --> 00:44:40.550 align:start position:0%
like a bunch of them yeah the s1s
to<00:44:38.400><c> 11s</c><00:44:38.960><c> those</c><00:44:39.280><c> are</c><00:44:39.440><c> just</c><00:44:39.680><c> for</c><00:44:39.920><c> i</c><00:44:40.079><c> believe</c><00:44:40.319><c> used</c>

00:44:40.550 --> 00:44:40.560 align:start position:0%
to 11s those are just for i believe used
 

00:44:40.560 --> 00:44:42.470 align:start position:0%
to 11s those are just for i believe used
there<00:44:40.800><c> for</c><00:44:40.960><c> freedom</c><00:44:41.280><c> for</c><00:44:41.440><c> the</c><00:44:41.520><c> compiler</c>

00:44:42.470 --> 00:44:42.480 align:start position:0%
there for freedom for the compiler
 

00:44:42.480 --> 00:44:45.349 align:start position:0%
there for freedom for the compiler
or<00:44:42.640><c> for</c><00:44:42.800><c> the</c><00:44:42.960><c> programmer</c><00:44:43.520><c> to</c><00:44:43.599><c> use</c><00:44:44.319><c> um</c><00:44:45.119><c> so</c><00:44:45.280><c> there</c>

00:44:45.349 --> 00:44:45.359 align:start position:0%
or for the programmer to use um so there
 

00:44:45.359 --> 00:44:46.790 align:start position:0%
or for the programmer to use um so there
are<00:44:45.520><c> maybe</c><00:44:45.760><c> there</c><00:44:45.839><c> are</c><00:44:46.000><c> certain</c><00:44:46.240><c> cases</c><00:44:46.640><c> where</c>

00:44:46.790 --> 00:44:46.800 align:start position:0%
are maybe there are certain cases where
 

00:44:46.800 --> 00:44:47.510 align:start position:0%
are maybe there are certain cases where
you<00:44:46.960><c> want</c>

00:44:47.510 --> 00:44:47.520 align:start position:0%
you want
 

00:44:47.520 --> 00:44:49.190 align:start position:0%
you want
you<00:44:47.680><c> want</c><00:44:47.920><c> to</c><00:44:48.000><c> guarantee</c><00:44:48.480><c> that</c><00:44:48.640><c> something</c><00:44:49.040><c> is</c>

00:44:49.190 --> 00:44:49.200 align:start position:0%
you want to guarantee that something is
 

00:44:49.200 --> 00:44:50.950 align:start position:0%
you want to guarantee that something is
still<00:44:49.440><c> around</c>

00:44:50.950 --> 00:44:50.960 align:start position:0%
still around
 

00:44:50.960 --> 00:44:53.829 align:start position:0%
still around
after<00:44:51.920><c> after</c><00:44:52.160><c> your</c><00:44:52.400><c> function</c><00:44:52.800><c> call</c><00:44:53.520><c> the</c>

00:44:53.829 --> 00:44:53.839 align:start position:0%
after after your function call the
 

00:44:53.839 --> 00:44:55.829 align:start position:0%
after after your function call the
compiler<00:44:54.560><c> can</c><00:44:54.800><c> choose</c><00:44:55.200><c> to</c><00:44:55.359><c> use</c>

00:44:55.829 --> 00:44:55.839 align:start position:0%
compiler can choose to use
 

00:44:55.839 --> 00:45:00.150 align:start position:0%
compiler can choose to use
s1<00:44:56.720><c> 211</c><00:44:57.520><c> to</c><00:44:57.680><c> do</c><00:44:57.839><c> that</c>

00:45:00.150 --> 00:45:00.160 align:start position:0%
 
 

00:45:00.160 --> 00:45:02.710 align:start position:0%
 
i<00:45:00.319><c> don't</c><00:45:00.560><c> have</c><00:45:00.800><c> like</c><00:45:01.520><c> on</c><00:45:01.839><c> hand</c><00:45:02.079><c> a</c><00:45:02.240><c> specific</c>

00:45:02.710 --> 00:45:02.720 align:start position:0%
i don't have like on hand a specific
 

00:45:02.720 --> 00:45:04.710 align:start position:0%
i don't have like on hand a specific
example<00:45:03.200><c> of</c><00:45:03.280><c> where</c><00:45:03.440><c> that's</c><00:45:03.760><c> useful</c>

00:45:04.710 --> 00:45:04.720 align:start position:0%
example of where that's useful
 

00:45:04.720 --> 00:45:07.910 align:start position:0%
example of where that's useful
but<00:45:05.200><c> i'm</c><00:45:05.599><c> sure</c><00:45:05.839><c> it</c><00:45:05.920><c> shows</c><00:45:06.240><c> up</c><00:45:07.280><c> where</c>

00:45:07.910 --> 00:45:07.920 align:start position:0%
but i'm sure it shows up where
 

00:45:07.920 --> 00:45:14.309 align:start position:0%
but i'm sure it shows up where
having<00:45:08.240><c> a</c><00:45:08.319><c> callee</c><00:45:08.640><c> save</c><00:45:08.960><c> value</c><00:45:09.280><c> is</c><00:45:09.440><c> important</c>

00:45:14.309 --> 00:45:14.319 align:start position:0%
 
 

00:45:14.319 --> 00:45:15.750 align:start position:0%
 
but<00:45:14.480><c> these</c><00:45:14.640><c> are</c><00:45:14.720><c> basically</c><00:45:15.280><c> basically</c><00:45:15.680><c> you</c>

00:45:15.750 --> 00:45:15.760 align:start position:0%
but these are basically basically you
 

00:45:15.760 --> 00:45:17.430 align:start position:0%
but these are basically basically you
know<00:45:15.920><c> programmer</c><00:45:16.400><c> or</c><00:45:16.480><c> compiler's</c><00:45:17.040><c> choice</c><00:45:17.280><c> to</c>

00:45:17.430 --> 00:45:17.440 align:start position:0%
know programmer or compiler's choice to
 

00:45:17.440 --> 00:45:18.150 align:start position:0%
know programmer or compiler's choice to
use

00:45:18.150 --> 00:45:18.160 align:start position:0%
use
 

00:45:18.160 --> 00:45:22.390 align:start position:0%
use
that's<00:45:18.400><c> 1</c><00:45:18.640><c> to</c><00:45:18.800><c> 11.</c>

00:45:22.390 --> 00:45:22.400 align:start position:0%
 
 

00:45:22.400 --> 00:45:23.589 align:start position:0%
 
and<00:45:22.560><c> i</c><00:45:22.640><c> should</c><00:45:22.800><c> note</c><00:45:23.040><c> that</c><00:45:23.200><c> these</c><00:45:23.440><c> these</c>

00:45:23.589 --> 00:45:23.599 align:start position:0%
and i should note that these these
 

00:45:23.599 --> 00:45:25.109 align:start position:0%
and i should note that these these
floating<00:45:24.079><c> point</c><00:45:24.319><c> registers</c><00:45:24.880><c> they're</c><00:45:25.040><c> for</c>

00:45:25.109 --> 00:45:25.119 align:start position:0%
floating point registers they're for
 

00:45:25.119 --> 00:45:27.030 align:start position:0%
floating point registers they're for
floating<00:45:25.440><c> point</c><00:45:25.680><c> arithmetic</c>

00:45:27.030 --> 00:45:27.040 align:start position:0%
floating point arithmetic
 

00:45:27.040 --> 00:45:30.069 align:start position:0%
floating point arithmetic
i<00:45:28.480><c> as</c><00:45:28.640><c> far</c><00:45:28.800><c> as</c><00:45:28.960><c> i'm</c><00:45:29.119><c> aware</c><00:45:29.359><c> you</c><00:45:29.440><c> won't</c><00:45:29.680><c> see</c><00:45:29.839><c> them</c>

00:45:30.069 --> 00:45:30.079 align:start position:0%
i as far as i'm aware you won't see them
 

00:45:30.079 --> 00:45:31.670 align:start position:0%
i as far as i'm aware you won't see them
in<00:45:30.160><c> this</c><00:45:30.400><c> class</c>

00:45:31.670 --> 00:45:31.680 align:start position:0%
in this class
 

00:45:31.680 --> 00:45:33.349 align:start position:0%
in this class
and<00:45:31.839><c> so</c><00:45:32.000><c> you</c><00:45:32.480><c> don't</c><00:45:32.640><c> really</c><00:45:32.880><c> need</c><00:45:33.040><c> to</c><00:45:33.119><c> worry</c>

00:45:33.349 --> 00:45:33.359 align:start position:0%
and so you don't really need to worry
 

00:45:33.359 --> 00:45:38.550 align:start position:0%
and so you don't really need to worry
about<00:45:33.520><c> them</c>

00:45:38.550 --> 00:45:38.560 align:start position:0%
 
 

00:45:38.560 --> 00:45:41.829 align:start position:0%
 
okay<00:45:39.520><c> so</c><00:45:39.680><c> we</c><00:45:39.920><c> started</c><00:45:40.240><c> talking</c><00:45:40.800><c> a</c><00:45:40.960><c> little</c><00:45:41.280><c> bit</c>

00:45:41.829 --> 00:45:41.839 align:start position:0%
okay so we started talking a little bit
 

00:45:41.839 --> 00:45:45.430 align:start position:0%
okay so we started talking a little bit
about<00:45:43.760><c> function</c><00:45:44.240><c> calls</c>

00:45:45.430 --> 00:45:45.440 align:start position:0%
about function calls
 

00:45:45.440 --> 00:45:48.630 align:start position:0%
about function calls
and<00:45:47.119><c> so</c><00:45:47.359><c> with</c><00:45:47.520><c> that</c><00:45:47.760><c> i</c><00:45:47.920><c> want</c><00:45:48.079><c> to</c>

00:45:48.630 --> 00:45:48.640 align:start position:0%
and so with that i want to
 

00:45:48.640 --> 00:45:54.390 align:start position:0%
and so with that i want to
move<00:45:48.880><c> us</c><00:45:49.280><c> into</c><00:45:50.880><c> discussion</c><00:45:51.599><c> of</c><00:45:51.920><c> the</c><00:45:52.079><c> stack</c>

00:45:54.390 --> 00:45:54.400 align:start position:0%
move us into discussion of the stack
 

00:45:54.400 --> 00:45:57.829 align:start position:0%
move us into discussion of the stack
so<00:45:54.640><c> this</c><00:45:54.880><c> is</c><00:45:56.560><c> this</c><00:45:56.800><c> is</c>

00:45:57.829 --> 00:45:57.839 align:start position:0%
so this is this is
 

00:45:57.839 --> 00:46:01.030 align:start position:0%
so this is this is
we're<00:45:58.000><c> talking</c><00:45:58.319><c> about</c><00:45:58.560><c> the</c><00:45:58.839><c> stack</c><00:46:00.000><c> and</c>

00:46:01.030 --> 00:46:01.040 align:start position:0%
we're talking about the stack and
 

00:46:01.040 --> 00:46:03.910 align:start position:0%
we're talking about the stack and
the<00:46:01.200><c> stack</c><00:46:02.240><c> if</c><00:46:02.400><c> you've</c><00:46:02.640><c> seen</c><00:46:02.880><c> it</c><00:46:03.520><c> likely</c>

00:46:03.910 --> 00:46:03.920 align:start position:0%
the stack if you've seen it likely
 

00:46:03.920 --> 00:46:04.550 align:start position:0%
the stack if you've seen it likely
before

00:46:04.550 --> 00:46:04.560 align:start position:0%
before
 

00:46:04.560 --> 00:46:07.430 align:start position:0%
before
the<00:46:05.440><c> reason</c><00:46:05.839><c> why</c><00:46:06.000><c> the</c><00:46:06.160><c> stack</c><00:46:06.400><c> is</c><00:46:06.560><c> important</c><00:46:07.200><c> is</c>

00:46:07.430 --> 00:46:07.440 align:start position:0%
the reason why the stack is important is
 

00:46:07.440 --> 00:46:07.750 align:start position:0%
the reason why the stack is important is
it

00:46:07.750 --> 00:46:07.760 align:start position:0%
it
 

00:46:07.760 --> 00:46:11.270 align:start position:0%
it
it's<00:46:08.000><c> what</c><00:46:08.560><c> keeps</c><00:46:08.880><c> our</c><00:46:09.200><c> functions</c>

00:46:11.270 --> 00:46:11.280 align:start position:0%
it's what keeps our functions
 

00:46:11.280 --> 00:46:14.630 align:start position:0%
it's what keeps our functions
organized<00:46:12.160><c> and</c><00:46:12.560><c> sane</c><00:46:13.040><c> and</c><00:46:13.359><c> it's</c><00:46:13.599><c> what</c><00:46:13.760><c> allows</c>

00:46:14.630 --> 00:46:14.640 align:start position:0%
organized and sane and it's what allows
 

00:46:14.640 --> 00:46:16.550 align:start position:0%
organized and sane and it's what allows
and<00:46:14.720><c> what</c><00:46:14.880><c> makes</c><00:46:15.200><c> functions</c><00:46:15.599><c> work</c><00:46:16.079><c> it</c><00:46:16.240><c> what</c>

00:46:16.550 --> 00:46:16.560 align:start position:0%
and what makes functions work it what
 

00:46:16.560 --> 00:46:17.990 align:start position:0%
and what makes functions work it what
it's<00:46:16.720><c> what</c><00:46:16.960><c> makes</c><00:46:17.440><c> return</c>

00:46:17.990 --> 00:46:18.000 align:start position:0%
it's what makes return
 

00:46:18.000 --> 00:46:21.030 align:start position:0%
it's what makes return
work<00:46:18.400><c> and</c><00:46:18.560><c> it's</c><00:46:18.800><c> also</c><00:46:19.599><c> uh</c><00:46:19.920><c> where</c><00:46:20.319><c> often</c><00:46:20.720><c> we'll</c>

00:46:21.030 --> 00:46:21.040 align:start position:0%
work and it's also uh where often we'll
 

00:46:21.040 --> 00:46:21.990 align:start position:0%
work and it's also uh where often we'll
find<00:46:21.280><c> ourselves</c>

00:46:21.990 --> 00:46:22.000 align:start position:0%
find ourselves
 

00:46:22.000 --> 00:46:24.790 align:start position:0%
find ourselves
saving<00:46:22.640><c> our</c><00:46:22.960><c> registers</c><00:46:24.079><c> and</c><00:46:24.319><c> things</c><00:46:24.640><c> like</c>

00:46:24.790 --> 00:46:24.800 align:start position:0%
saving our registers and things like
 

00:46:24.800 --> 00:46:26.829 align:start position:0%
saving our registers and things like
that

00:46:26.829 --> 00:46:26.839 align:start position:0%
that
 

00:46:26.839 --> 00:46:29.430 align:start position:0%
that
um

00:46:29.430 --> 00:46:29.440 align:start position:0%
um
 

00:46:29.440 --> 00:46:32.710 align:start position:0%
um
so<00:46:31.839><c> here</c><00:46:32.160><c> i've</c>

00:46:32.710 --> 00:46:32.720 align:start position:0%
so here i've
 

00:46:32.720 --> 00:46:35.710 align:start position:0%
so here i've
given<00:46:33.200><c> just</c><00:46:33.599><c> a</c><00:46:34.160><c> pretty</c><00:46:34.720><c> simple</c><00:46:35.359><c> um</c>

00:46:35.710 --> 00:46:35.720 align:start position:0%
given just a pretty simple um
 

00:46:35.720 --> 00:46:36.950 align:start position:0%
given just a pretty simple um
[Music]

00:46:36.950 --> 00:46:36.960 align:start position:0%
[Music]
 

00:46:36.960 --> 00:46:39.829 align:start position:0%
[Music]
layout<00:46:37.440><c> of</c><00:46:37.760><c> what</c><00:46:38.000><c> a</c><00:46:38.079><c> stack</c><00:46:38.560><c> looks</c><00:46:38.800><c> like</c><00:46:39.280><c> and</c><00:46:39.599><c> so</c>

00:46:39.829 --> 00:46:39.839 align:start position:0%
layout of what a stack looks like and so
 

00:46:39.839 --> 00:46:41.430 align:start position:0%
layout of what a stack looks like and so
each<00:46:40.160><c> of</c><00:46:40.319><c> these</c>

00:46:41.430 --> 00:46:41.440 align:start position:0%
each of these
 

00:46:41.440 --> 00:46:44.790 align:start position:0%
each of these
boxes<00:46:42.000><c> here</c><00:46:42.560><c> is</c><00:46:42.880><c> what</c><00:46:43.040><c> we</c><00:46:43.280><c> refer</c><00:46:43.680><c> to</c>

00:46:44.790 --> 00:46:44.800 align:start position:0%
boxes here is what we refer to
 

00:46:44.800 --> 00:46:49.030 align:start position:0%
boxes here is what we refer to
as<00:46:45.599><c> a</c><00:46:46.160><c> stack</c><00:46:47.599><c> frame</c>

00:46:49.030 --> 00:46:49.040 align:start position:0%
as a stack frame
 

00:46:49.040 --> 00:46:52.390 align:start position:0%
as a stack frame
and<00:46:49.599><c> every</c><00:46:50.000><c> time</c><00:46:50.480><c> we</c><00:46:50.720><c> get</c>

00:46:52.390 --> 00:46:52.400 align:start position:0%
and every time we get
 

00:46:52.400 --> 00:46:59.910 align:start position:0%
and every time we get
which<00:46:52.640><c> are</c><00:46:52.880><c> generated</c><00:46:53.440><c> by</c><00:46:53.760><c> function</c><00:46:54.839><c> calls</c>

00:46:59.910 --> 00:46:59.920 align:start position:0%
 
 

00:46:59.920 --> 00:47:03.270 align:start position:0%
 
um<00:47:01.520><c> every</c><00:47:01.839><c> time</c><00:47:02.000><c> we</c><00:47:02.160><c> call</c><00:47:02.400><c> a</c><00:47:02.480><c> function</c>

00:47:03.270 --> 00:47:03.280 align:start position:0%
um every time we call a function
 

00:47:03.280 --> 00:47:06.309 align:start position:0%
um every time we call a function
that<00:47:03.599><c> function</c><00:47:04.480><c> makes</c><00:47:04.800><c> for</c><00:47:04.960><c> itself</c><00:47:05.839><c> its</c><00:47:06.079><c> own</c>

00:47:06.309 --> 00:47:06.319 align:start position:0%
that function makes for itself its own
 

00:47:06.319 --> 00:47:07.670 align:start position:0%
that function makes for itself its own
stack<00:47:06.720><c> frame</c>

00:47:07.670 --> 00:47:07.680 align:start position:0%
stack frame
 

00:47:07.680 --> 00:47:11.030 align:start position:0%
stack frame
and<00:47:08.800><c> which</c><00:47:09.040><c> is</c><00:47:09.200><c> in</c><00:47:09.280><c> which</c><00:47:09.520><c> it</c><00:47:09.760><c> uses</c><00:47:10.160><c> itself</c><00:47:10.640><c> and</c>

00:47:11.030 --> 00:47:11.040 align:start position:0%
and which is in which it uses itself and
 

00:47:11.040 --> 00:47:13.750 align:start position:0%
and which is in which it uses itself and
does<00:47:11.280><c> that</c><00:47:11.599><c> by</c><00:47:11.920><c> moving</c><00:47:12.319><c> around</c><00:47:13.200><c> the</c><00:47:13.359><c> stack</c>

00:47:13.750 --> 00:47:13.760 align:start position:0%
does that by moving around the stack
 

00:47:13.760 --> 00:47:14.470 align:start position:0%
does that by moving around the stack
pointer

00:47:14.470 --> 00:47:14.480 align:start position:0%
pointer
 

00:47:14.480 --> 00:47:17.190 align:start position:0%
pointer
so<00:47:14.880><c> here's</c><00:47:15.200><c> the</c><00:47:15.280><c> stack</c><00:47:15.599><c> pointer</c><00:47:16.400><c> and</c><00:47:16.720><c> this</c><00:47:16.960><c> is</c>

00:47:17.190 --> 00:47:17.200 align:start position:0%
so here's the stack pointer and this is
 

00:47:17.200 --> 00:47:17.829 align:start position:0%
so here's the stack pointer and this is
uh

00:47:17.829 --> 00:47:17.839 align:start position:0%
uh
 

00:47:17.839 --> 00:47:20.150 align:start position:0%
uh
and<00:47:18.079><c> it's</c><00:47:18.240><c> very</c><00:47:18.480><c> important</c><00:47:18.800><c> to</c><00:47:18.960><c> remember</c><00:47:19.920><c> with</c>

00:47:20.150 --> 00:47:20.160 align:start position:0%
and it's very important to remember with
 

00:47:20.160 --> 00:47:21.750 align:start position:0%
and it's very important to remember with
stacks

00:47:21.750 --> 00:47:21.760 align:start position:0%
stacks
 

00:47:21.760 --> 00:47:24.790 align:start position:0%
stacks
we<00:47:22.079><c> start</c><00:47:22.880><c> from</c><00:47:23.200><c> high</c><00:47:23.440><c> addresses</c>

00:47:24.790 --> 00:47:24.800 align:start position:0%
we start from high addresses
 

00:47:24.800 --> 00:47:28.150 align:start position:0%
we start from high addresses
and<00:47:24.960><c> we</c><00:47:25.119><c> grow</c><00:47:25.680><c> downwards</c><00:47:27.200><c> to</c>

00:47:28.150 --> 00:47:28.160 align:start position:0%
and we grow downwards to
 

00:47:28.160 --> 00:47:30.710 align:start position:0%
and we grow downwards to
low<00:47:28.480><c> addresses</c><00:47:28.960><c> so</c><00:47:29.119><c> the</c><00:47:29.280><c> stack</c><00:47:29.680><c> grows</c><00:47:30.240><c> down</c>

00:47:30.710 --> 00:47:30.720 align:start position:0%
low addresses so the stack grows down
 

00:47:30.720 --> 00:47:32.150 align:start position:0%
low addresses so the stack grows down
always

00:47:32.150 --> 00:47:32.160 align:start position:0%
always
 

00:47:32.160 --> 00:47:34.390 align:start position:0%
always
and<00:47:32.319><c> so</c><00:47:33.040><c> you'll</c><00:47:33.280><c> see</c><00:47:33.520><c> that</c><00:47:33.599><c> the</c><00:47:33.839><c> arithmetic</c>

00:47:34.390 --> 00:47:34.400 align:start position:0%
and so you'll see that the arithmetic
 

00:47:34.400 --> 00:47:36.230 align:start position:0%
and so you'll see that the arithmetic
for<00:47:34.559><c> a</c><00:47:34.640><c> stack</c><00:47:34.960><c> pointer</c><00:47:35.520><c> is</c><00:47:35.760><c> uh</c>

00:47:36.230 --> 00:47:36.240 align:start position:0%
for a stack pointer is uh
 

00:47:36.240 --> 00:47:38.470 align:start position:0%
for a stack pointer is uh
is<00:47:36.559><c> usually</c><00:47:36.960><c> done</c><00:47:37.200><c> via</c><00:47:37.599><c> subtraction</c><00:47:38.240><c> when</c><00:47:38.400><c> we</c>

00:47:38.470 --> 00:47:38.480 align:start position:0%
is usually done via subtraction when we
 

00:47:38.480 --> 00:47:40.230 align:start position:0%
is usually done via subtraction when we
want<00:47:38.640><c> to</c><00:47:38.800><c> make</c><00:47:39.040><c> a</c><00:47:39.119><c> new</c><00:47:39.280><c> stack</c><00:47:39.599><c> frame</c>

00:47:40.230 --> 00:47:40.240 align:start position:0%
want to make a new stack frame
 

00:47:40.240 --> 00:47:43.270 align:start position:0%
want to make a new stack frame
in<00:47:40.480><c> assembly</c><00:47:40.880><c> so</c><00:47:41.040><c> the</c><00:47:41.119><c> stack</c><00:47:41.359><c> grows</c><00:47:41.680><c> downwards</c>

00:47:43.270 --> 00:47:43.280 align:start position:0%
in assembly so the stack grows downwards
 

00:47:43.280 --> 00:47:46.230 align:start position:0%
in assembly so the stack grows downwards
and<00:47:43.520><c> stack</c><00:47:43.920><c> frames</c><00:47:44.319><c> for</c><00:47:44.480><c> a</c><00:47:44.559><c> function</c><00:47:45.119><c> contain</c>

00:47:46.230 --> 00:47:46.240 align:start position:0%
and stack frames for a function contain
 

00:47:46.240 --> 00:47:48.950 align:start position:0%
and stack frames for a function contain
saved<00:47:46.480><c> registers</c><00:47:47.200><c> local</c><00:47:47.599><c> variables</c>

00:47:48.950 --> 00:47:48.960 align:start position:0%
saved registers local variables
 

00:47:48.960 --> 00:47:51.510 align:start position:0%
saved registers local variables
um<00:47:49.440><c> also</c><00:47:49.839><c> like</c><00:47:50.000><c> i</c><00:47:50.319><c> like</c><00:47:50.480><c> i</c><00:47:50.559><c> was</c><00:47:50.720><c> saying</c><00:47:50.960><c> if</c><00:47:51.359><c> you</c>

00:47:51.510 --> 00:47:51.520 align:start position:0%
um also like i like i was saying if you
 

00:47:51.520 --> 00:47:51.990 align:start position:0%
um also like i like i was saying if you
run<00:47:51.760><c> out</c>

00:47:51.990 --> 00:47:52.000 align:start position:0%
run out
 

00:47:52.000 --> 00:47:54.630 align:start position:0%
run out
of<00:47:52.720><c> argument</c><00:47:53.200><c> registers</c><00:47:54.160><c> additional</c>

00:47:54.630 --> 00:47:54.640 align:start position:0%
of argument registers additional
 

00:47:54.640 --> 00:47:56.309 align:start position:0%
of argument registers additional
arguments<00:47:55.040><c> will</c><00:47:55.200><c> show</c><00:47:55.359><c> up</c><00:47:55.520><c> on</c><00:47:55.599><c> the</c><00:47:55.680><c> stack</c>

00:47:56.309 --> 00:47:56.319 align:start position:0%
arguments will show up on the stack
 

00:47:56.319 --> 00:47:58.150 align:start position:0%
arguments will show up on the stack
and<00:47:56.400><c> so</c><00:47:56.559><c> not</c><00:47:56.720><c> at</c><00:47:57.119><c> stack</c><00:47:57.440><c> frames</c><00:47:57.680><c> are</c><00:47:57.760><c> not</c><00:47:58.000><c> all</c>

00:47:58.150 --> 00:47:58.160 align:start position:0%
and so not at stack frames are not all
 

00:47:58.160 --> 00:47:59.430 align:start position:0%
and so not at stack frames are not all
the<00:47:58.240><c> same</c><00:47:58.559><c> size</c>

00:47:59.430 --> 00:47:59.440 align:start position:0%
the same size
 

00:47:59.440 --> 00:48:00.790 align:start position:0%
the same size
even<00:47:59.599><c> though</c><00:47:59.760><c> they</c><00:47:59.920><c> are</c><00:48:00.079><c> in</c><00:48:00.160><c> this</c><00:48:00.319><c> diagram</c>

00:48:00.790 --> 00:48:00.800 align:start position:0%
even though they are in this diagram
 

00:48:00.800 --> 00:48:02.630 align:start position:0%
even though they are in this diagram
that's<00:48:01.040><c> not</c><00:48:01.200><c> the</c><00:48:01.359><c> case</c><00:48:02.000><c> different</c><00:48:02.319><c> functions</c>

00:48:02.630 --> 00:48:02.640 align:start position:0%
that's not the case different functions
 

00:48:02.640 --> 00:48:03.990 align:start position:0%
that's not the case different functions
have<00:48:02.800><c> different</c><00:48:02.960><c> numbers</c><00:48:03.359><c> of</c><00:48:03.599><c> local</c>

00:48:03.990 --> 00:48:04.000 align:start position:0%
have different numbers of local
 

00:48:04.000 --> 00:48:06.630 align:start position:0%
have different numbers of local
variables<00:48:04.800><c> different</c><00:48:05.200><c> safe</c><00:48:05.520><c> registers</c>

00:48:06.630 --> 00:48:06.640 align:start position:0%
variables different safe registers
 

00:48:06.640 --> 00:48:08.790 align:start position:0%
variables different safe registers
so<00:48:06.880><c> on</c><00:48:07.040><c> and</c><00:48:07.200><c> so</c><00:48:07.359><c> forth</c><00:48:08.000><c> and</c><00:48:08.160><c> so</c><00:48:08.319><c> stack</c><00:48:08.559><c> frames</c>

00:48:08.790 --> 00:48:08.800 align:start position:0%
so on and so forth and so stack frames
 

00:48:08.800 --> 00:48:10.470 align:start position:0%
so on and so forth and so stack frames
will<00:48:08.880><c> be</c><00:48:09.040><c> different</c><00:48:09.359><c> sizes</c><00:48:09.839><c> but</c><00:48:10.000><c> the</c><00:48:10.240><c> two</c>

00:48:10.470 --> 00:48:10.480 align:start position:0%
will be different sizes but the two
 

00:48:10.480 --> 00:48:12.790 align:start position:0%
will be different sizes but the two
things<00:48:10.880><c> that</c><00:48:11.040><c> you</c><00:48:11.119><c> can</c><00:48:11.359><c> definitely</c><00:48:11.839><c> count</c><00:48:12.160><c> on</c>

00:48:12.790 --> 00:48:12.800 align:start position:0%
things that you can definitely count on
 

00:48:12.800 --> 00:48:14.950 align:start position:0%
things that you can definitely count on
which<00:48:13.040><c> are</c><00:48:13.200><c> important</c><00:48:13.760><c> is</c><00:48:13.920><c> that</c><00:48:14.480><c> uh</c><00:48:14.800><c> the</c>

00:48:14.950 --> 00:48:14.960 align:start position:0%
which are important is that uh the
 

00:48:14.960 --> 00:48:16.470 align:start position:0%
which are important is that uh the
return<00:48:15.359><c> address</c><00:48:15.760><c> will</c><00:48:15.920><c> always</c><00:48:16.160><c> be</c>

00:48:16.470 --> 00:48:16.480 align:start position:0%
return address will always be
 

00:48:16.480 --> 00:48:19.270 align:start position:0%
return address will always be
on<00:48:16.640><c> the</c><00:48:16.880><c> first</c><00:48:17.200><c> thing</c><00:48:17.599><c> and</c><00:48:17.760><c> the</c><00:48:17.920><c> frame</c><00:48:18.240><c> pointer</c>

00:48:19.270 --> 00:48:19.280 align:start position:0%
on the first thing and the frame pointer
 

00:48:19.280 --> 00:48:21.109 align:start position:0%
on the first thing and the frame pointer
the<00:48:19.440><c> previous</c><00:48:19.920><c> frames</c><00:48:20.240><c> frame</c><00:48:20.480><c> pointer</c><00:48:20.960><c> is</c>

00:48:21.109 --> 00:48:21.119 align:start position:0%
the previous frames frame pointer is
 

00:48:21.119 --> 00:48:23.190 align:start position:0%
the previous frames frame pointer is
also<00:48:21.520><c> going</c><00:48:21.839><c> to</c><00:48:22.000><c> show</c><00:48:22.160><c> up</c><00:48:22.319><c> on</c><00:48:22.400><c> the</c><00:48:22.559><c> stack</c>

00:48:23.190 --> 00:48:23.200 align:start position:0%
also going to show up on the stack
 

00:48:23.200 --> 00:48:26.630 align:start position:0%
also going to show up on the stack
at<00:48:23.359><c> a</c><00:48:23.440><c> predictable</c><00:48:24.000><c> location</c><00:48:25.040><c> so</c>

00:48:26.630 --> 00:48:26.640 align:start position:0%
at a predictable location so
 

00:48:26.640 --> 00:48:29.270 align:start position:0%
at a predictable location so
the<00:48:26.800><c> two</c><00:48:27.119><c> important</c><00:48:27.520><c> registers</c><00:48:28.079><c> here</c><00:48:28.400><c> are</c><00:48:28.800><c> sp</c>

00:48:29.270 --> 00:48:29.280 align:start position:0%
the two important registers here are sp
 

00:48:29.280 --> 00:48:30.710 align:start position:0%
the two important registers here are sp
which<00:48:29.599><c> you</c><00:48:29.680><c> know</c><00:48:29.839><c> as</c><00:48:30.000><c> we</c><00:48:30.160><c> discussed</c>

00:48:30.710 --> 00:48:30.720 align:start position:0%
which you know as we discussed
 

00:48:30.720 --> 00:48:33.349 align:start position:0%
which you know as we discussed
is<00:48:30.960><c> used</c><00:48:31.359><c> for</c><00:48:32.240><c> this</c><00:48:32.480><c> is</c><00:48:32.720><c> the</c><00:48:32.880><c> bottom</c><00:48:33.119><c> of</c><00:48:33.200><c> the</c>

00:48:33.349 --> 00:48:33.359 align:start position:0%
is used for this is the bottom of the
 

00:48:33.359 --> 00:48:35.670 align:start position:0%
is used for this is the bottom of the
stack

00:48:35.670 --> 00:48:35.680 align:start position:0%
stack
 

00:48:35.680 --> 00:48:38.230 align:start position:0%
stack
or<00:48:36.400><c> generally</c><00:48:37.200><c> you</c><00:48:37.280><c> know</c><00:48:37.440><c> it's</c><00:48:37.599><c> the</c><00:48:37.760><c> location</c>

00:48:38.230 --> 00:48:38.240 align:start position:0%
or generally you know it's the location
 

00:48:38.240 --> 00:48:39.270 align:start position:0%
or generally you know it's the location
of<00:48:38.319><c> the</c><00:48:38.480><c> stack</c>

00:48:39.270 --> 00:48:39.280 align:start position:0%
of the stack
 

00:48:39.280 --> 00:48:43.270 align:start position:0%
of the stack
and<00:48:39.440><c> then</c><00:48:39.760><c> fp</c><00:48:40.319><c> is</c><00:48:40.559><c> our</c><00:48:40.720><c> also</c><00:48:41.520><c> important</c>

00:48:43.270 --> 00:48:43.280 align:start position:0%
and then fp is our also important
 

00:48:43.280 --> 00:48:46.309 align:start position:0%
and then fp is our also important
register<00:48:43.920><c> and</c><00:48:44.079><c> this</c><00:48:44.319><c> points</c><00:48:44.720><c> to</c><00:48:44.960><c> the</c><00:48:45.200><c> top</c><00:48:46.000><c> of</c>

00:48:46.309 --> 00:48:46.319 align:start position:0%
register and this points to the top of
 

00:48:46.319 --> 00:48:48.870 align:start position:0%
register and this points to the top of
the<00:48:46.839><c> current</c>

00:48:48.870 --> 00:48:48.880 align:start position:0%
the current
 

00:48:48.880 --> 00:48:52.470 align:start position:0%
the current
frame<00:48:50.720><c> and</c><00:48:50.880><c> this</c><00:48:51.119><c> is</c><00:48:51.280><c> important</c><00:48:51.680><c> because</c>

00:48:52.470 --> 00:48:52.480 align:start position:0%
frame and this is important because
 

00:48:52.480 --> 00:48:54.790 align:start position:0%
frame and this is important because
that<00:48:52.720><c> means</c><00:48:52.960><c> that</c><00:48:53.119><c> the</c><00:48:53.280><c> return</c><00:48:53.680><c> address</c><00:48:54.559><c> and</c>

00:48:54.790 --> 00:48:54.800 align:start position:0%
that means that the return address and
 

00:48:54.800 --> 00:48:56.230 align:start position:0%
that means that the return address and
the<00:48:54.960><c> previous</c><00:48:55.520><c> fp</c>

00:48:56.230 --> 00:48:56.240 align:start position:0%
the previous fp
 

00:48:56.240 --> 00:48:59.589 align:start position:0%
the previous fp
will<00:48:56.559><c> always</c><00:48:56.960><c> be</c><00:48:57.200><c> at</c><00:48:57.359><c> a</c><00:48:57.520><c> fixed</c><00:48:58.400><c> location</c>

00:48:59.589 --> 00:48:59.599 align:start position:0%
will always be at a fixed location
 

00:48:59.599 --> 00:49:02.710 align:start position:0%
will always be at a fixed location
from<00:49:00.160><c> the</c><00:49:00.400><c> current</c><00:49:00.880><c> frame</c><00:49:01.200><c> pointer</c><00:49:02.319><c> so</c><00:49:02.480><c> that</c>

00:49:02.710 --> 00:49:02.720 align:start position:0%
from the current frame pointer so that
 

00:49:02.720 --> 00:49:03.829 align:start position:0%
from the current frame pointer so that
means<00:49:03.200><c> that</c>

00:49:03.829 --> 00:49:03.839 align:start position:0%
means that
 

00:49:03.839 --> 00:49:05.990 align:start position:0%
means that
if<00:49:04.000><c> i</c><00:49:04.160><c> want</c><00:49:04.319><c> to</c><00:49:04.480><c> find</c><00:49:04.800><c> my</c><00:49:04.960><c> return</c><00:49:05.280><c> address</c><00:49:05.680><c> or</c><00:49:05.839><c> i</c>

00:49:05.990 --> 00:49:06.000 align:start position:0%
if i want to find my return address or i
 

00:49:06.000 --> 00:49:07.829 align:start position:0%
if i want to find my return address or i
want<00:49:06.160><c> to</c><00:49:06.240><c> find</c><00:49:06.480><c> the</c><00:49:06.559><c> previous</c><00:49:07.040><c> frame</c>

00:49:07.829 --> 00:49:07.839 align:start position:0%
want to find the previous frame
 

00:49:07.839 --> 00:49:10.630 align:start position:0%
want to find the previous frame
i<00:49:08.000><c> can</c><00:49:08.240><c> always</c><00:49:08.640><c> get</c><00:49:08.880><c> to</c><00:49:09.040><c> those</c><00:49:09.440><c> values</c><00:49:10.160><c> by</c>

00:49:10.630 --> 00:49:10.640 align:start position:0%
i can always get to those values by
 

00:49:10.640 --> 00:49:13.589 align:start position:0%
i can always get to those values by
looking<00:49:11.119><c> at</c><00:49:11.440><c> the</c><00:49:11.680><c> current</c><00:49:12.000><c> frame</c><00:49:12.400><c> pointer</c>

00:49:13.589 --> 00:49:13.599 align:start position:0%
looking at the current frame pointer
 

00:49:13.599 --> 00:49:15.510 align:start position:0%
looking at the current frame pointer
and<00:49:13.839><c> the</c><00:49:14.000><c> reason</c><00:49:14.319><c> why</c><00:49:14.480><c> we</c><00:49:14.720><c> store</c><00:49:14.960><c> the</c><00:49:15.119><c> previous</c>

00:49:15.510 --> 00:49:15.520 align:start position:0%
and the reason why we store the previous
 

00:49:15.520 --> 00:49:17.750 align:start position:0%
and the reason why we store the previous
frame<00:49:15.839><c> pointer</c><00:49:16.559><c> is</c><00:49:16.720><c> to</c><00:49:16.960><c> allow</c><00:49:17.359><c> us</c>

00:49:17.750 --> 00:49:17.760 align:start position:0%
frame pointer is to allow us
 

00:49:17.760 --> 00:49:19.750 align:start position:0%
frame pointer is to allow us
to<00:49:18.240><c> jump</c><00:49:18.559><c> back</c><00:49:18.800><c> so</c><00:49:18.960><c> once</c><00:49:19.200><c> this</c><00:49:19.359><c> function</c>

00:49:19.750 --> 00:49:19.760 align:start position:0%
to jump back so once this function
 

00:49:19.760 --> 00:49:22.710 align:start position:0%
to jump back so once this function
returns<00:49:20.559><c> we</c><00:49:20.720><c> can</c><00:49:20.960><c> move</c><00:49:21.280><c> this</c><00:49:21.599><c> into</c><00:49:21.920><c> fp</c>

00:49:22.710 --> 00:49:22.720 align:start position:0%
returns we can move this into fp
 

00:49:22.720 --> 00:49:25.349 align:start position:0%
returns we can move this into fp
and<00:49:22.960><c> all</c><00:49:23.119><c> of</c><00:49:23.200><c> a</c><00:49:23.280><c> sudden</c><00:49:23.839><c> fp</c><00:49:24.240><c> again</c><00:49:24.960><c> will</c><00:49:25.119><c> go</c>

00:49:25.349 --> 00:49:25.359 align:start position:0%
and all of a sudden fp again will go
 

00:49:25.359 --> 00:49:26.549 align:start position:0%
and all of a sudden fp again will go
from<00:49:25.520><c> pointing</c><00:49:25.920><c> to</c><00:49:26.079><c> this</c>

00:49:26.549 --> 00:49:26.559 align:start position:0%
from pointing to this
 

00:49:26.559 --> 00:49:29.349 align:start position:0%
from pointing to this
this<00:49:26.800><c> stack</c><00:49:27.119><c> frame</c><00:49:28.079><c> to</c><00:49:28.480><c> now</c><00:49:28.720><c> pointing</c><00:49:29.040><c> to</c><00:49:29.200><c> this</c>

00:49:29.349 --> 00:49:29.359 align:start position:0%
this stack frame to now pointing to this
 

00:49:29.359 --> 00:49:30.309 align:start position:0%
this stack frame to now pointing to this
stack<00:49:29.680><c> frame</c>

00:49:30.309 --> 00:49:30.319 align:start position:0%
stack frame
 

00:49:30.319 --> 00:49:32.150 align:start position:0%
stack frame
and<00:49:30.480><c> so</c><00:49:30.640><c> we</c><00:49:30.880><c> use</c><00:49:31.040><c> the</c><00:49:31.200><c> frame</c><00:49:31.520><c> pointer</c><00:49:31.920><c> to</c>

00:49:32.150 --> 00:49:32.160 align:start position:0%
and so we use the frame pointer to
 

00:49:32.160 --> 00:49:34.069 align:start position:0%
and so we use the frame pointer to
manipulate<00:49:32.800><c> our</c><00:49:33.040><c> stack</c><00:49:33.440><c> frames</c>

00:49:34.069 --> 00:49:34.079 align:start position:0%
manipulate our stack frames
 

00:49:34.079 --> 00:49:35.510 align:start position:0%
manipulate our stack frames
and<00:49:34.240><c> make</c><00:49:34.400><c> sure</c><00:49:34.640><c> we're</c><00:49:34.800><c> always</c><00:49:35.119><c> pointing</c><00:49:35.440><c> to</c>

00:49:35.510 --> 00:49:35.520 align:start position:0%
and make sure we're always pointing to
 

00:49:35.520 --> 00:49:37.270 align:start position:0%
and make sure we're always pointing to
the<00:49:35.680><c> one</c><00:49:35.920><c> corresponding</c>

00:49:37.270 --> 00:49:37.280 align:start position:0%
the one corresponding
 

00:49:37.280 --> 00:49:40.950 align:start position:0%
the one corresponding
to<00:49:38.000><c> the</c><00:49:38.960><c> correct</c><00:49:39.440><c> function</c>

00:49:40.950 --> 00:49:40.960 align:start position:0%
to the correct function
 

00:49:40.960 --> 00:49:42.870 align:start position:0%
to the correct function
and<00:49:41.119><c> that's</c><00:49:41.359><c> that's</c><00:49:41.599><c> kind</c><00:49:41.760><c> of</c><00:49:41.839><c> how</c><00:49:42.079><c> things</c><00:49:42.400><c> uh</c>

00:49:42.870 --> 00:49:42.880 align:start position:0%
and that's that's kind of how things uh
 

00:49:42.880 --> 00:49:44.150 align:start position:0%
and that's that's kind of how things uh
how<00:49:43.119><c> things</c><00:49:43.359><c> are</c><00:49:43.440><c> done</c>

00:49:44.150 --> 00:49:44.160 align:start position:0%
how things are done
 

00:49:44.160 --> 00:49:47.829 align:start position:0%
how things are done
and<00:49:44.480><c> uh</c><00:49:45.200><c> the</c><00:49:45.599><c> these</c><00:49:46.000><c> pieces</c><00:49:46.480><c> of</c><00:49:46.640><c> the</c><00:49:46.800><c> stack</c>

00:49:47.829 --> 00:49:47.839 align:start position:0%
and uh the these pieces of the stack
 

00:49:47.839 --> 00:49:50.870 align:start position:0%
and uh the these pieces of the stack
um<00:49:48.160><c> need</c><00:49:48.319><c> to</c><00:49:48.480><c> be</c><00:49:48.640><c> created</c><00:49:49.280><c> by</c><00:49:49.920><c> assembly</c>

00:49:50.870 --> 00:49:50.880 align:start position:0%
um need to be created by assembly
 

00:49:50.880 --> 00:49:52.710 align:start position:0%
um need to be created by assembly
and<00:49:51.040><c> so</c><00:49:51.280><c> everything's</c><00:49:52.079><c> everything</c><00:49:52.400><c> in</c><00:49:52.480><c> that</c>

00:49:52.710 --> 00:49:52.720 align:start position:0%
and so everything's everything in that
 

00:49:52.720 --> 00:49:54.309 align:start position:0%
and so everything's everything in that
calling<00:49:53.119><c> conventions</c>

00:49:54.309 --> 00:49:54.319 align:start position:0%
calling conventions
 

00:49:54.319 --> 00:49:57.190 align:start position:0%
calling conventions
document<00:49:54.960><c> that</c><00:49:55.119><c> you</c><00:49:55.359><c> read</c><00:49:55.599><c> about</c><00:49:56.400><c> that's</c><00:49:56.880><c> all</c>

00:49:57.190 --> 00:49:57.200 align:start position:0%
document that you read about that's all
 

00:49:57.200 --> 00:49:59.349 align:start position:0%
document that you read about that's all
um<00:49:57.599><c> enforced</c><00:49:58.480><c> by</c>

00:49:59.349 --> 00:49:59.359 align:start position:0%
um enforced by
 

00:49:59.359 --> 00:50:01.030 align:start position:0%
um enforced by
effectively<00:49:59.920><c> by</c><00:50:00.079><c> the</c><00:50:00.240><c> compiler</c><00:50:00.720><c> so</c><00:50:00.960><c> the</c>

00:50:01.030 --> 00:50:01.040 align:start position:0%
effectively by the compiler so the
 

00:50:01.040 --> 00:50:03.030 align:start position:0%
effectively by the compiler so the
compiler<00:50:01.680><c> adheres</c><00:50:02.319><c> to</c>

00:50:03.030 --> 00:50:03.040 align:start position:0%
compiler adheres to
 

00:50:03.040 --> 00:50:05.589 align:start position:0%
compiler adheres to
the<00:50:03.280><c> calling</c><00:50:03.680><c> convention</c><00:50:04.720><c> and</c><00:50:05.040><c> it's</c><00:50:05.359><c> what</c>

00:50:05.589 --> 00:50:05.599 align:start position:0%
the calling convention and it's what
 

00:50:05.599 --> 00:50:06.950 align:start position:0%
the calling convention and it's what
generates<00:50:06.079><c> the</c><00:50:06.240><c> stack</c><00:50:06.640><c> frame</c>

00:50:06.950 --> 00:50:06.960 align:start position:0%
generates the stack frame
 

00:50:06.960 --> 00:50:08.950 align:start position:0%
generates the stack frame
it<00:50:07.040><c> generates</c><00:50:07.440><c> the</c><00:50:07.599><c> assembly</c><00:50:08.160><c> code</c><00:50:08.720><c> that</c>

00:50:08.950 --> 00:50:08.960 align:start position:0%
it generates the assembly code that
 

00:50:08.960 --> 00:50:10.390 align:start position:0%
it generates the assembly code that
makes<00:50:09.280><c> our</c><00:50:09.359><c> stack</c><00:50:09.760><c> frames</c><00:50:10.079><c> look</c>

00:50:10.390 --> 00:50:10.400 align:start position:0%
makes our stack frames look
 

00:50:10.400 --> 00:50:13.190 align:start position:0%
makes our stack frames look
correct<00:50:11.119><c> so</c><00:50:11.440><c> often</c><00:50:12.400><c> at</c><00:50:12.559><c> the</c><00:50:12.720><c> top</c><00:50:12.960><c> of</c><00:50:13.119><c> a</c>

00:50:13.190 --> 00:50:13.200 align:start position:0%
correct so often at the top of a
 

00:50:13.200 --> 00:50:15.270 align:start position:0%
correct so often at the top of a
function<00:50:13.680><c> you'll</c><00:50:13.920><c> see</c><00:50:14.160><c> what's</c><00:50:14.400><c> called</c>

00:50:15.270 --> 00:50:15.280 align:start position:0%
function you'll see what's called
 

00:50:15.280 --> 00:50:21.270 align:start position:0%
function you'll see what's called
a<00:50:15.680><c> function</c><00:50:17.599><c> prolog</c>

00:50:21.270 --> 00:50:21.280 align:start position:0%
 
 

00:50:21.280 --> 00:50:23.270 align:start position:0%
 
and<00:50:21.760><c> then</c><00:50:22.079><c> there</c><00:50:22.240><c> will</c><00:50:22.400><c> be</c><00:50:22.559><c> the</c><00:50:22.640><c> body</c><00:50:22.960><c> of</c><00:50:23.040><c> the</c>

00:50:23.270 --> 00:50:23.280 align:start position:0%
and then there will be the body of the
 

00:50:23.280 --> 00:50:24.390 align:start position:0%
and then there will be the body of the
function

00:50:24.390 --> 00:50:24.400 align:start position:0%
function
 

00:50:24.400 --> 00:50:27.589 align:start position:0%
function
and<00:50:24.559><c> then</c><00:50:24.720><c> there</c><00:50:24.880><c> will</c><00:50:25.040><c> be</c><00:50:26.079><c> an</c><00:50:26.319><c> epilogue</c>

00:50:27.589 --> 00:50:27.599 align:start position:0%
and then there will be an epilogue
 

00:50:27.599 --> 00:50:30.230 align:start position:0%
and then there will be an epilogue
that<00:50:28.160><c> shows</c><00:50:28.480><c> up</c><00:50:28.720><c> after</c><00:50:28.960><c> that</c><00:50:29.440><c> so</c><00:50:29.680><c> this</c><00:50:29.839><c> is</c><00:50:30.000><c> kind</c>

00:50:30.230 --> 00:50:30.240 align:start position:0%
that shows up after that so this is kind
 

00:50:30.240 --> 00:50:31.910 align:start position:0%
that shows up after that so this is kind
of<00:50:30.480><c> like</c>

00:50:31.910 --> 00:50:31.920 align:start position:0%
of like
 

00:50:31.920 --> 00:50:35.270 align:start position:0%
of like
what<00:50:32.160><c> an</c><00:50:32.960><c> assembly</c><00:50:33.839><c> uh</c>

00:50:35.270 --> 00:50:35.280 align:start position:0%
what an assembly uh
 

00:50:35.280 --> 00:50:37.750 align:start position:0%
what an assembly uh
function<00:50:35.839><c> will</c><00:50:36.079><c> often</c><00:50:36.400><c> look</c><00:50:36.640><c> like</c><00:50:37.359><c> and</c><00:50:37.599><c> we'll</c>

00:50:37.750 --> 00:50:37.760 align:start position:0%
function will often look like and we'll
 

00:50:37.760 --> 00:50:39.750 align:start position:0%
function will often look like and we'll
take<00:50:38.000><c> a</c><00:50:38.079><c> look</c><00:50:38.319><c> at</c><00:50:38.400><c> that</c>

00:50:39.750 --> 00:50:39.760 align:start position:0%
take a look at that
 

00:50:39.760 --> 00:50:43.190 align:start position:0%
take a look at that
now<00:50:41.119><c> so</c><00:50:41.280><c> here</c><00:50:41.520><c> i</c><00:50:41.599><c> have</c><00:50:41.760><c> another</c><00:50:42.160><c> function</c>

00:50:43.190 --> 00:50:43.200 align:start position:0%
now so here i have another function
 

00:50:43.200 --> 00:50:45.670 align:start position:0%
now so here i have another function
something<00:50:43.599><c> so</c><00:50:43.920><c> you</c><00:50:44.160><c> you'll</c><00:50:44.559><c> you'll</c><00:50:44.800><c> note</c><00:50:45.040><c> that</c>

00:50:45.670 --> 00:50:45.680 align:start position:0%
something so you you'll you'll note that
 

00:50:45.680 --> 00:50:48.150 align:start position:0%
something so you you'll you'll note that
studently<00:50:46.160><c> that</c><00:50:46.319><c> sum2</c><00:50:46.800><c> did</c><00:50:47.040><c> not</c><00:50:47.280><c> have</c>

00:50:48.150 --> 00:50:48.160 align:start position:0%
studently that sum2 did not have
 

00:50:48.160 --> 00:50:50.549 align:start position:0%
studently that sum2 did not have
any<00:50:48.400><c> of</c><00:50:48.559><c> these</c><00:50:48.800><c> things</c><00:50:49.200><c> that</c><00:50:49.359><c> it</c><00:50:49.920><c> it</c><00:50:50.079><c> should</c><00:50:50.400><c> if</c>

00:50:50.549 --> 00:50:50.559 align:start position:0%
any of these things that it it should if
 

00:50:50.559 --> 00:50:52.069 align:start position:0%
any of these things that it it should if
it<00:50:50.640><c> was</c><00:50:50.800><c> a</c><00:50:50.880><c> proper</c><00:50:51.280><c> function</c>

00:50:52.069 --> 00:50:52.079 align:start position:0%
it was a proper function
 

00:50:52.079 --> 00:50:53.750 align:start position:0%
it was a proper function
and<00:50:52.160><c> this</c><00:50:52.400><c> works</c><00:50:52.720><c> fine</c><00:50:53.040><c> because</c><00:50:53.280><c> it's</c><00:50:53.440><c> simple</c>

00:50:53.750 --> 00:50:53.760 align:start position:0%
and this works fine because it's simple
 

00:50:53.760 --> 00:50:55.190 align:start position:0%
and this works fine because it's simple
enough<00:50:54.160><c> so</c><00:50:54.400><c> it</c><00:50:54.480><c> does</c><00:50:54.720><c> all</c><00:50:54.880><c> of</c><00:50:55.040><c> its</c>

00:50:55.190 --> 00:50:55.200 align:start position:0%
enough so it does all of its
 

00:50:55.200 --> 00:50:56.390 align:start position:0%
enough so it does all of its
computations<00:50:56.079><c> on</c>

00:50:56.390 --> 00:50:56.400 align:start position:0%
computations on
 

00:50:56.400 --> 00:50:59.109 align:start position:0%
computations on
a0<00:50:57.040><c> and</c><00:50:57.119><c> so</c><00:50:57.280><c> things</c><00:50:57.599><c> are</c><00:50:58.240><c> things</c><00:50:58.559><c> are</c><00:50:58.640><c> good</c><00:50:58.960><c> and</c>

00:50:59.109 --> 00:50:59.119 align:start position:0%
a0 and so things are things are good and
 

00:50:59.119 --> 00:51:00.790 align:start position:0%
a0 and so things are things are good and
we're<00:50:59.280><c> also</c><00:50:59.599><c> not</c><00:50:59.839><c> it's</c><00:51:00.000><c> a</c><00:51:00.240><c> it's</c><00:51:00.480><c> a</c><00:51:00.559><c> leaf</c>

00:51:00.790 --> 00:51:00.800 align:start position:0%
we're also not it's a it's a leaf
 

00:51:00.800 --> 00:51:01.589 align:start position:0%
we're also not it's a it's a leaf
function

00:51:01.589 --> 00:51:01.599 align:start position:0%
function
 

00:51:01.599 --> 00:51:03.910 align:start position:0%
function
so<00:51:02.319><c> you'll</c><00:51:02.559><c> see</c><00:51:02.880><c> if</c><00:51:03.040><c> you</c><00:51:03.200><c> see</c><00:51:03.359><c> the</c><00:51:03.440><c> term</c><00:51:03.680><c> leaf</c>

00:51:03.910 --> 00:51:03.920 align:start position:0%
so you'll see if you see the term leaf
 

00:51:03.920 --> 00:51:05.270 align:start position:0%
so you'll see if you see the term leaf
function<00:51:04.240><c> that's</c><00:51:04.480><c> a</c><00:51:04.559><c> function</c><00:51:04.800><c> that</c><00:51:04.960><c> doesn't</c>

00:51:05.270 --> 00:51:05.280 align:start position:0%
function that's a function that doesn't
 

00:51:05.280 --> 00:51:06.950 align:start position:0%
function that's a function that doesn't
call<00:51:05.520><c> another</c><00:51:05.839><c> function</c>

00:51:06.950 --> 00:51:06.960 align:start position:0%
call another function
 

00:51:06.960 --> 00:51:08.870 align:start position:0%
call another function
and<00:51:07.119><c> the</c><00:51:07.359><c> functions</c><00:51:07.760><c> are</c><00:51:07.920><c> special</c><00:51:08.480><c> in</c><00:51:08.640><c> that</c>

00:51:08.870 --> 00:51:08.880 align:start position:0%
and the functions are special in that
 

00:51:08.880 --> 00:51:11.109 align:start position:0%
and the functions are special in that
they<00:51:09.680><c> don't</c><00:51:10.079><c> need</c><00:51:10.480><c> to</c>

00:51:11.109 --> 00:51:11.119 align:start position:0%
they don't need to
 

00:51:11.119 --> 00:51:14.230 align:start position:0%
they don't need to
worry<00:51:11.520><c> about</c><00:51:12.000><c> saving</c><00:51:13.440><c> their</c><00:51:13.680><c> own</c><00:51:13.839><c> return</c>

00:51:14.230 --> 00:51:14.240 align:start position:0%
worry about saving their own return
 

00:51:14.240 --> 00:51:15.030 align:start position:0%
worry about saving their own return
address

00:51:15.030 --> 00:51:15.040 align:start position:0%
address
 

00:51:15.040 --> 00:51:17.430 align:start position:0%
address
or<00:51:15.520><c> saving</c><00:51:15.920><c> really</c><00:51:16.240><c> any</c><00:51:16.480><c> of</c><00:51:16.559><c> the</c><00:51:16.720><c> caller</c><00:51:17.119><c> saved</c>

00:51:17.430 --> 00:51:17.440 align:start position:0%
or saving really any of the caller saved
 

00:51:17.440 --> 00:51:18.710 align:start position:0%
or saving really any of the caller saved
registers

00:51:18.710 --> 00:51:18.720 align:start position:0%
registers
 

00:51:18.720 --> 00:51:21.750 align:start position:0%
registers
because<00:51:20.319><c> they're</c><00:51:20.559><c> going</c><00:51:20.880><c> to</c><00:51:21.440><c> they're</c><00:51:21.599><c> not</c>

00:51:21.750 --> 00:51:21.760 align:start position:0%
because they're going to they're not
 

00:51:21.760 --> 00:51:23.190 align:start position:0%
because they're going to they're not
going<00:51:21.920><c> to</c><00:51:22.000><c> make</c><00:51:22.160><c> another</c><00:51:22.480><c> function</c><00:51:22.800><c> call</c><00:51:23.040><c> so</c>

00:51:23.190 --> 00:51:23.200 align:start position:0%
going to make another function call so
 

00:51:23.200 --> 00:51:24.309 align:start position:0%
going to make another function call so
they<00:51:23.359><c> don't</c><00:51:23.520><c> have</c><00:51:23.680><c> to</c><00:51:23.760><c> be</c>

00:51:24.309 --> 00:51:24.319 align:start position:0%
they don't have to be
 

00:51:24.319 --> 00:51:27.109 align:start position:0%
they don't have to be
as<00:51:24.559><c> careful</c><00:51:25.440><c> some</c><00:51:25.680><c> then</c><00:51:25.920><c> double</c><00:51:26.400><c> on</c><00:51:26.640><c> the</c><00:51:26.880><c> other</c>

00:51:27.109 --> 00:51:27.119 align:start position:0%
as careful some then double on the other
 

00:51:27.119 --> 00:51:27.670 align:start position:0%
as careful some then double on the other
hand

00:51:27.670 --> 00:51:27.680 align:start position:0%
hand
 

00:51:27.680 --> 00:51:29.829 align:start position:0%
hand
is<00:51:27.920><c> not</c><00:51:28.160><c> a</c><00:51:28.319><c> leaf</c><00:51:28.480><c> function</c><00:51:29.040><c> so</c><00:51:29.200><c> you</c><00:51:29.359><c> can</c><00:51:29.520><c> see</c>

00:51:29.829 --> 00:51:29.839 align:start position:0%
is not a leaf function so you can see
 

00:51:29.839 --> 00:51:31.430 align:start position:0%
is not a leaf function so you can see
here<00:51:30.240><c> it</c><00:51:30.480><c> calls</c>

00:51:31.430 --> 00:51:31.440 align:start position:0%
here it calls
 

00:51:31.440 --> 00:51:35.750 align:start position:0%
here it calls
um<00:51:31.839><c> sum2</c><00:51:33.599><c> and</c><00:51:33.760><c> so</c><00:51:34.319><c> it</c><00:51:34.480><c> does</c><00:51:34.800><c> need</c><00:51:35.040><c> to</c><00:51:35.280><c> include</c>

00:51:35.750 --> 00:51:35.760 align:start position:0%
um sum2 and so it does need to include
 

00:51:35.760 --> 00:51:36.470 align:start position:0%
um sum2 and so it does need to include
that

00:51:36.470 --> 00:51:36.480 align:start position:0%
that
 

00:51:36.480 --> 00:51:39.190 align:start position:0%
that
that<00:51:36.720><c> prolog</c><00:51:37.280><c> and</c><00:51:37.359><c> so</c><00:51:37.520><c> we</c><00:51:37.680><c> see</c><00:51:37.920><c> here</c><00:51:38.319><c> that</c><00:51:39.040><c> we</c>

00:51:39.190 --> 00:51:39.200 align:start position:0%
that prolog and so we see here that we
 

00:51:39.200 --> 00:51:40.150 align:start position:0%
that prolog and so we see here that we
are<00:51:39.359><c> subtracting</c>

00:51:40.150 --> 00:51:40.160 align:start position:0%
are subtracting
 

00:51:40.160 --> 00:51:42.870 align:start position:0%
are subtracting
16<00:51:40.960><c> from</c><00:51:41.280><c> the</c><00:51:41.440><c> stack</c><00:51:41.839><c> pointer</c><00:51:42.480><c> so</c><00:51:42.640><c> we're</c>

00:51:42.870 --> 00:51:42.880 align:start position:0%
16 from the stack pointer so we're
 

00:51:42.880 --> 00:51:43.829 align:start position:0%
16 from the stack pointer so we're
making<00:51:43.280><c> space</c>

00:51:43.829 --> 00:51:43.839 align:start position:0%
making space
 

00:51:43.839 --> 00:51:46.549 align:start position:0%
making space
on<00:51:44.000><c> our</c><00:51:44.240><c> stack</c><00:51:45.040><c> we're</c><00:51:45.359><c> storing</c><00:51:45.920><c> the</c><00:51:46.079><c> return</c>

00:51:46.549 --> 00:51:46.559 align:start position:0%
on our stack we're storing the return
 

00:51:46.559 --> 00:51:47.190 align:start position:0%
on our stack we're storing the return
address

00:51:47.190 --> 00:51:47.200 align:start position:0%
address
 

00:51:47.200 --> 00:51:50.150 align:start position:0%
address
for<00:51:47.359><c> something</c><00:51:47.920><c> double</c><00:51:48.800><c> on</c><00:51:49.119><c> the</c><00:51:49.280><c> stack</c><00:51:50.000><c> and</c>

00:51:50.150 --> 00:51:50.160 align:start position:0%
for something double on the stack and
 

00:51:50.160 --> 00:51:52.309 align:start position:0%
for something double on the stack and
then<00:51:50.400><c> we</c><00:51:50.559><c> make</c><00:51:50.880><c> our</c><00:51:51.040><c> call</c><00:51:51.280><c> to</c><00:51:51.440><c> sum2</c>

00:51:52.309 --> 00:51:52.319 align:start position:0%
then we make our call to sum2
 

00:51:52.319 --> 00:51:53.829 align:start position:0%
then we make our call to sum2
and<00:51:52.480><c> after</c><00:51:52.720><c> that</c><00:51:52.960><c> all</c><00:51:53.119><c> this</c><00:51:53.359><c> this</c><00:51:53.520><c> function</c>

00:51:53.829 --> 00:51:53.839 align:start position:0%
and after that all this this function
 

00:51:53.839 --> 00:51:55.589 align:start position:0%
and after that all this this function
does<00:51:54.079><c> is</c><00:51:54.240><c> it</c><00:51:54.319><c> calls</c><00:51:54.559><c> sum2</c><00:51:55.200><c> and</c><00:51:55.280><c> then</c>

00:51:55.589 --> 00:51:55.599 align:start position:0%
does is it calls sum2 and then
 

00:51:55.599 --> 00:51:59.109 align:start position:0%
does is it calls sum2 and then
doubles<00:51:56.000><c> the</c><00:51:56.160><c> result</c><00:51:58.079><c> doubles</c><00:51:58.480><c> the</c><00:51:58.640><c> result</c>

00:51:59.109 --> 00:51:59.119 align:start position:0%
doubles the result doubles the result
 

00:51:59.119 --> 00:52:01.829 align:start position:0%
doubles the result doubles the result
turned<00:51:59.440><c> by</c><00:51:59.680><c> some</c><00:52:00.000><c> two</c><00:52:00.559><c> and</c><00:52:00.800><c> here</c><00:52:01.119><c> you</c><00:52:01.280><c> can</c><00:52:01.440><c> see</c>

00:52:01.829 --> 00:52:01.839 align:start position:0%
turned by some two and here you can see
 

00:52:01.839 --> 00:52:02.390 align:start position:0%
turned by some two and here you can see
the

00:52:02.390 --> 00:52:02.400 align:start position:0%
the
 

00:52:02.400 --> 00:52:05.910 align:start position:0%
the
epilog<00:52:02.960><c> so</c><00:52:03.119><c> we</c><00:52:03.359><c> load</c><00:52:04.880><c> the</c><00:52:05.040><c> return</c><00:52:05.440><c> address</c>

00:52:05.910 --> 00:52:05.920 align:start position:0%
epilog so we load the return address
 

00:52:05.920 --> 00:52:08.950 align:start position:0%
epilog so we load the return address
back<00:52:06.240><c> in</c><00:52:06.800><c> to</c><00:52:07.040><c> ra</c><00:52:08.079><c> and</c>

00:52:08.950 --> 00:52:08.960 align:start position:0%
back in to ra and
 

00:52:08.960 --> 00:52:11.589 align:start position:0%
back in to ra and
delete<00:52:09.359><c> our</c><00:52:09.599><c> stack</c><00:52:09.920><c> frame</c><00:52:10.319><c> and</c><00:52:10.400><c> then</c><00:52:10.720><c> jump</c><00:52:11.359><c> out</c>

00:52:11.589 --> 00:52:11.599 align:start position:0%
delete our stack frame and then jump out
 

00:52:11.599 --> 00:52:13.750 align:start position:0%
delete our stack frame and then jump out
of<00:52:11.680><c> the</c><00:52:11.839><c> function</c>

00:52:13.750 --> 00:52:13.760 align:start position:0%
of the function
 

00:52:13.760 --> 00:52:16.150 align:start position:0%
of the function
and<00:52:13.920><c> so</c><00:52:14.079><c> we</c><00:52:14.240><c> can</c><00:52:14.480><c> run</c><00:52:14.720><c> that</c><00:52:15.599><c> to</c><00:52:15.680><c> make</c><00:52:15.839><c> sure</c><00:52:16.079><c> it</c>

00:52:16.150 --> 00:52:16.160 align:start position:0%
and so we can run that to make sure it
 

00:52:16.160 --> 00:52:20.630 align:start position:0%
and so we can run that to make sure it
does<00:52:16.400><c> what</c><00:52:16.559><c> we</c><00:52:16.720><c> would</c><00:52:16.960><c> expect</c>

00:52:20.630 --> 00:52:20.640 align:start position:0%
 
 

00:52:20.640 --> 00:52:24.230 align:start position:0%
 
we<00:52:20.720><c> can</c><00:52:20.880><c> go</c><00:52:21.200><c> here</c>

00:52:24.230 --> 00:52:24.240 align:start position:0%
 
 

00:52:24.240 --> 00:52:27.589 align:start position:0%
 
we<00:52:24.319><c> can</c><00:52:24.559><c> run</c><00:52:25.520><c> so</c><00:52:25.760><c> if</c><00:52:25.920><c> we</c><00:52:26.079><c> run</c><00:52:26.240><c> demo2</c><00:52:27.119><c> or</c><00:52:27.280><c> demo</c>

00:52:27.589 --> 00:52:27.599 align:start position:0%
we can run so if we run demo2 or demo
 

00:52:27.599 --> 00:52:29.510 align:start position:0%
we can run so if we run demo2 or demo
one<00:52:27.839><c> we</c><00:52:27.920><c> got</c><00:52:28.079><c> a</c><00:52:28.160><c> result</c><00:52:28.559><c> of</c><00:52:28.640><c> 15</c>

00:52:29.510 --> 00:52:29.520 align:start position:0%
one we got a result of 15
 

00:52:29.520 --> 00:52:31.190 align:start position:0%
one we got a result of 15
for<00:52:29.760><c> the</c><00:52:29.839><c> sum</c><00:52:30.160><c> and</c><00:52:30.319><c> i'll</c><00:52:30.400><c> tell</c><00:52:30.559><c> you</c><00:52:30.720><c> that</c><00:52:30.880><c> demo</c>

00:52:31.190 --> 00:52:31.200 align:start position:0%
for the sum and i'll tell you that demo
 

00:52:31.200 --> 00:52:33.589 align:start position:0%
for the sum and i'll tell you that demo
two<00:52:31.520><c> just</c><00:52:31.839><c> uh</c><00:52:32.400><c> just</c><00:52:32.640><c> calls</c><00:52:32.880><c> something</c><00:52:33.280><c> double</c>

00:52:33.589 --> 00:52:33.599 align:start position:0%
two just uh just calls something double
 

00:52:33.599 --> 00:52:34.630 align:start position:0%
two just uh just calls something double
and<00:52:33.839><c> indeed</c>

00:52:34.630 --> 00:52:34.640 align:start position:0%
and indeed
 

00:52:34.640 --> 00:52:37.990 align:start position:0%
and indeed
you<00:52:34.720><c> know</c><00:52:34.880><c> it</c><00:52:35.040><c> happily</c><00:52:35.920><c> doubles</c><00:52:36.640><c> the</c><00:52:37.599><c> sum</c>

00:52:37.990 --> 00:52:38.000 align:start position:0%
you know it happily doubles the sum
 

00:52:38.000 --> 00:52:41.190 align:start position:0%
you know it happily doubles the sum
returned<00:52:38.559><c> by</c><00:52:38.720><c> some</c><00:52:39.040><c> two</c><00:52:40.559><c> and</c>

00:52:41.190 --> 00:52:41.200 align:start position:0%
returned by some two and
 

00:52:41.200 --> 00:52:45.349 align:start position:0%
returned by some two and
so<00:52:41.680><c> a</c><00:52:42.000><c> question</c><00:52:42.400><c> i</c><00:52:42.480><c> have</c><00:52:42.800><c> for</c><00:52:43.119><c> for</c><00:52:43.359><c> anybody</c>

00:52:45.349 --> 00:52:45.359 align:start position:0%
so a question i have for for anybody
 

00:52:45.359 --> 00:52:48.470 align:start position:0%
so a question i have for for anybody
what<00:52:45.599><c> happens</c><00:52:46.240><c> if</c><00:52:46.559><c> we</c><00:52:47.040><c> uh</c><00:52:47.359><c> delete</c>

00:52:48.470 --> 00:52:48.480 align:start position:0%
what happens if we uh delete
 

00:52:48.480 --> 00:52:52.230 align:start position:0%
what happens if we uh delete
this<00:52:48.800><c> prologue</c><00:52:50.160><c> and</c><00:52:50.559><c> f</c><00:52:51.200><c> so</c><00:52:51.359><c> what</c><00:52:51.599><c> happens</c>

00:52:52.230 --> 00:52:52.240 align:start position:0%
this prologue and f so what happens
 

00:52:52.240 --> 00:52:55.030 align:start position:0%
this prologue and f so what happens
if<00:52:52.480><c> we</c><00:52:52.640><c> just</c><00:52:52.880><c> have</c><00:52:53.200><c> this</c><00:52:54.079><c> as</c><00:52:54.319><c> our</c><00:52:54.480><c> function</c>

00:52:55.030 --> 00:52:55.040 align:start position:0%
if we just have this as our function
 

00:52:55.040 --> 00:52:56.549 align:start position:0%
if we just have this as our function
something<00:52:55.520><c> double</c><00:52:55.760><c> can</c><00:52:55.920><c> anybody</c><00:52:56.240><c> predict</c>

00:52:56.549 --> 00:52:56.559 align:start position:0%
something double can anybody predict
 

00:52:56.559 --> 00:53:01.510 align:start position:0%
something double can anybody predict
what's<00:52:56.800><c> going</c><00:52:56.880><c> to</c><00:52:58.839><c> happen</c>

00:53:01.510 --> 00:53:01.520 align:start position:0%
what's going to happen
 

00:53:01.520 --> 00:53:03.109 align:start position:0%
what's going to happen
i<00:53:01.599><c> mean</c><00:53:01.920><c> one</c><00:53:02.079><c> thing</c><00:53:02.319><c> is</c><00:53:02.480><c> that</c><00:53:02.720><c> some</c><00:53:02.960><c> then</c>

00:53:03.109 --> 00:53:03.119 align:start position:0%
i mean one thing is that some then
 

00:53:03.119 --> 00:53:05.109 align:start position:0%
i mean one thing is that some then
double<00:53:03.520><c> wouldn't</c><00:53:04.000><c> know</c>

00:53:05.109 --> 00:53:05.119 align:start position:0%
double wouldn't know
 

00:53:05.119 --> 00:53:07.270 align:start position:0%
double wouldn't know
the<00:53:05.280><c> return</c><00:53:05.680><c> address</c><00:53:06.079><c> that</c><00:53:06.319><c> it</c><00:53:06.559><c> should</c><00:53:06.800><c> return</c>

00:53:07.270 --> 00:53:07.280 align:start position:0%
the return address that it should return
 

00:53:07.280 --> 00:53:09.109 align:start position:0%
the return address that it should return
to<00:53:07.920><c> so</c><00:53:08.079><c> upon</c><00:53:08.480><c> calling</c>

00:53:09.109 --> 00:53:09.119 align:start position:0%
to so upon calling
 

00:53:09.119 --> 00:53:11.990 align:start position:0%
to so upon calling
sum<00:53:09.440><c> to</c><00:53:10.800><c> that's</c><00:53:11.119><c> going</c><00:53:11.280><c> to</c><00:53:11.440><c> override</c><00:53:11.839><c> the</c>

00:53:11.990 --> 00:53:12.000 align:start position:0%
sum to that's going to override the
 

00:53:12.000 --> 00:53:13.270 align:start position:0%
sum to that's going to override the
return<00:53:12.400><c> address</c><00:53:12.880><c> to</c><00:53:13.040><c> be</c>

00:53:13.270 --> 00:53:13.280 align:start position:0%
return address to be
 

00:53:13.280 --> 00:53:15.670 align:start position:0%
return address to be
some<00:53:13.440><c> then</c><00:53:13.599><c> double</c><00:53:14.000><c> so</c><00:53:14.160><c> at</c><00:53:14.240><c> the</c><00:53:14.319><c> end</c><00:53:14.559><c> of</c><00:53:15.440><c> thumb</c>

00:53:15.670 --> 00:53:15.680 align:start position:0%
some then double so at the end of thumb
 

00:53:15.680 --> 00:53:16.309 align:start position:0%
some then double so at the end of thumb
then<00:53:15.839><c> double</c>

00:53:16.309 --> 00:53:16.319 align:start position:0%
then double
 

00:53:16.319 --> 00:53:17.990 align:start position:0%
then double
it's<00:53:16.480><c> not</c><00:53:16.640><c> going</c><00:53:16.800><c> to</c><00:53:16.960><c> return</c><00:53:17.280><c> to</c><00:53:17.440><c> its</c><00:53:17.599><c> original</c>

00:53:17.990 --> 00:53:18.000 align:start position:0%
it's not going to return to its original
 

00:53:18.000 --> 00:53:19.430 align:start position:0%
it's not going to return to its original
call

00:53:19.430 --> 00:53:19.440 align:start position:0%
call
 

00:53:19.440 --> 00:53:22.309 align:start position:0%
call
yeah<00:53:19.760><c> exactly</c><00:53:20.480><c> um</c><00:53:20.800><c> and</c><00:53:20.880><c> we</c><00:53:21.040><c> can</c><00:53:21.280><c> see</c><00:53:22.079><c> that</c>

00:53:22.309 --> 00:53:22.319 align:start position:0%
yeah exactly um and we can see that
 

00:53:22.319 --> 00:53:23.990 align:start position:0%
yeah exactly um and we can see that
that's<00:53:22.640><c> what</c><00:53:22.880><c> happens</c>

00:53:23.990 --> 00:53:24.000 align:start position:0%
that's what happens
 

00:53:24.000 --> 00:53:27.030 align:start position:0%
that's what happens
again<00:53:25.599><c> so</c><00:53:26.160><c> if</c><00:53:26.319><c> we</c>

00:53:27.030 --> 00:53:27.040 align:start position:0%
again so if we
 

00:53:27.040 --> 00:53:31.109 align:start position:0%
again so if we
exit<00:53:27.440><c> out</c><00:53:27.520><c> of</c><00:53:27.680><c> this</c><00:53:28.640><c> and</c><00:53:28.880><c> we</c><00:53:29.040><c> exit</c><00:53:29.359><c> out</c><00:53:29.520><c> of</c><00:53:29.599><c> this</c>

00:53:31.109 --> 00:53:31.119 align:start position:0%
exit out of this and we exit out of this
 

00:53:31.119 --> 00:53:33.190 align:start position:0%
exit out of this and we exit out of this
and<00:53:31.200><c> we</c><00:53:31.440><c> recompile</c><00:53:32.240><c> with</c><00:53:32.559><c> now</c><00:53:32.800><c> with</c><00:53:33.040><c> our</c>

00:53:33.190 --> 00:53:33.200 align:start position:0%
and we recompile with now with our
 

00:53:33.200 --> 00:53:35.589 align:start position:0%
and we recompile with now with our
broken<00:53:33.599><c> function</c>

00:53:35.589 --> 00:53:35.599 align:start position:0%
broken function
 

00:53:35.599 --> 00:53:37.190 align:start position:0%
broken function
we<00:53:35.760><c> can</c><00:53:35.920><c> take</c><00:53:36.160><c> a</c><00:53:36.240><c> look</c><00:53:36.480><c> at</c><00:53:36.640><c> exactly</c><00:53:36.960><c> what's</c>

00:53:37.190 --> 00:53:37.200 align:start position:0%
we can take a look at exactly what's
 

00:53:37.200 --> 00:53:39.349 align:start position:0%
we can take a look at exactly what's
going<00:53:37.280><c> to</c><00:53:37.440><c> happen</c><00:53:37.760><c> so</c><00:53:37.920><c> we</c><00:53:38.079><c> can</c><00:53:38.559><c> actually</c>

00:53:39.349 --> 00:53:39.359 align:start position:0%
going to happen so we can actually
 

00:53:39.359 --> 00:53:45.270 align:start position:0%
going to happen so we can actually
set<00:53:39.599><c> our</c><00:53:39.760><c> breakpoint</c><00:53:40.400><c> for</c><00:53:40.559><c> something</c><00:53:40.960><c> double</c>

00:53:45.270 --> 00:53:45.280 align:start position:0%
 
 

00:53:45.280 --> 00:53:49.430 align:start position:0%
 
and<00:53:46.000><c> set</c><00:53:46.319><c> up</c><00:53:46.800><c> tui</c><00:53:48.160><c> and</c><00:53:48.400><c> let</c><00:53:48.559><c> it</c><00:53:48.640><c> continue</c><00:53:49.119><c> so</c><00:53:49.280><c> if</c>

00:53:49.430 --> 00:53:49.440 align:start position:0%
and set up tui and let it continue so if
 

00:53:49.440 --> 00:53:50.870 align:start position:0%
and set up tui and let it continue so if
we<00:53:49.520><c> now</c><00:53:49.839><c> run</c><00:53:50.079><c> demo</c><00:53:50.480><c> 2</c>

00:53:50.870 --> 00:53:50.880 align:start position:0%
we now run demo 2
 

00:53:50.880 --> 00:53:54.230 align:start position:0%
we now run demo 2
okay<00:53:51.200><c> we're</c><00:53:51.359><c> at</c><00:53:51.599><c> some</c><00:53:51.839><c> then</c><00:53:52.079><c> double</c><00:53:53.280><c> and</c>

00:53:54.230 --> 00:53:54.240 align:start position:0%
okay we're at some then double and
 

00:53:54.240 --> 00:53:56.309 align:start position:0%
okay we're at some then double and
again<00:53:54.559><c> this</c><00:53:54.720><c> is</c><00:53:54.880><c> an</c><00:53:55.040><c> assembly</c><00:53:55.520><c> only</c><00:53:55.760><c> function</c>

00:53:56.309 --> 00:53:56.319 align:start position:0%
again this is an assembly only function
 

00:53:56.319 --> 00:53:58.630 align:start position:0%
again this is an assembly only function
so<00:53:56.880><c> we're</c><00:53:57.119><c> going</c><00:53:57.200><c> to</c><00:53:57.280><c> want</c><00:53:57.440><c> to</c><00:53:57.520><c> look</c><00:53:57.760><c> at</c><00:53:57.920><c> it</c><00:53:58.160><c> in</c>

00:53:58.630 --> 00:53:58.640 align:start position:0%
so we're going to want to look at it in
 

00:53:58.640 --> 00:54:02.630 align:start position:0%
so we're going to want to look at it in
assembly<00:53:59.599><c> so</c><00:53:59.839><c> we'll</c><00:54:00.000><c> do</c><00:54:00.319><c> layout</c><00:54:00.720><c> asm</c><00:54:01.440><c> layout</c>

00:54:02.630 --> 00:54:02.640 align:start position:0%
assembly so we'll do layout asm layout
 

00:54:02.640 --> 00:54:04.390 align:start position:0%
assembly so we'll do layout asm layout
reg<00:54:03.040><c> because</c><00:54:03.200><c> it's</c><00:54:03.440><c> important</c><00:54:03.920><c> what's</c><00:54:04.160><c> in</c><00:54:04.240><c> the</c>

00:54:04.390 --> 00:54:04.400 align:start position:0%
reg because it's important what's in the
 

00:54:04.400 --> 00:54:06.549 align:start position:0%
reg because it's important what's in the
registers<00:54:04.880><c> in</c><00:54:04.960><c> this</c><00:54:05.200><c> case</c>

00:54:06.549 --> 00:54:06.559 align:start position:0%
registers in this case
 

00:54:06.559 --> 00:54:08.230 align:start position:0%
registers in this case
and<00:54:06.640><c> you'll</c><00:54:06.880><c> see</c><00:54:07.040><c> that</c><00:54:07.200><c> gdb</c><00:54:07.760><c> knows</c><00:54:08.000><c> a</c><00:54:08.079><c> whole</c>

00:54:08.230 --> 00:54:08.240 align:start position:0%
and you'll see that gdb knows a whole
 

00:54:08.240 --> 00:54:09.990 align:start position:0%
and you'll see that gdb knows a whole
bunch<00:54:08.480><c> of</c><00:54:08.640><c> extra</c><00:54:08.880><c> information</c>

00:54:09.990 --> 00:54:10.000 align:start position:0%
bunch of extra information
 

00:54:10.000 --> 00:54:14.710 align:start position:0%
bunch of extra information
and<00:54:10.240><c> so</c><00:54:10.400><c> we</c><00:54:10.559><c> can</c><00:54:10.800><c> see</c><00:54:11.119><c> that</c>

00:54:14.710 --> 00:54:14.720 align:start position:0%
 
 

00:54:14.720 --> 00:54:16.710 align:start position:0%
 
we<00:54:14.800><c> can</c><00:54:14.960><c> see</c><00:54:15.119><c> that</c><00:54:15.359><c> ra</c><00:54:15.920><c> currently</c><00:54:16.400><c> so</c><00:54:16.559><c> the</c>

00:54:16.710 --> 00:54:16.720 align:start position:0%
we can see that ra currently so the
 

00:54:16.720 --> 00:54:19.430 align:start position:0%
we can see that ra currently so the
return<00:54:17.040><c> address</c><00:54:17.359><c> currently</c><00:54:17.839><c> points</c><00:54:18.160><c> to</c><00:54:18.319><c> demo2</c>

00:54:19.430 --> 00:54:19.440 align:start position:0%
return address currently points to demo2
 

00:54:19.440 --> 00:54:22.470 align:start position:0%
return address currently points to demo2
the<00:54:19.920><c> plus</c><00:54:20.240><c> 18</c><00:54:21.119><c> so</c>

00:54:22.470 --> 00:54:22.480 align:start position:0%
the plus 18 so
 

00:54:22.480 --> 00:54:24.230 align:start position:0%
the plus 18 so
it<00:54:22.640><c> points</c><00:54:22.960><c> effectively</c><00:54:23.440><c> into</c><00:54:23.680><c> the</c><00:54:23.839><c> function</c>

00:54:24.230 --> 00:54:24.240 align:start position:0%
it points effectively into the function
 

00:54:24.240 --> 00:54:26.150 align:start position:0%
it points effectively into the function
demo2

00:54:26.150 --> 00:54:26.160 align:start position:0%
demo2
 

00:54:26.160 --> 00:54:29.670 align:start position:0%
demo2
and<00:54:26.319><c> now</c><00:54:27.119><c> we</c><00:54:27.280><c> can</c><00:54:27.520><c> run</c><00:54:28.160><c> um</c><00:54:29.040><c> we</c><00:54:29.200><c> can</c><00:54:29.359><c> just</c><00:54:29.520><c> kind</c>

00:54:29.670 --> 00:54:29.680 align:start position:0%
and now we can run um we can just kind
 

00:54:29.680 --> 00:54:31.430 align:start position:0%
and now we can run um we can just kind
of<00:54:29.760><c> step</c><00:54:30.079><c> through</c><00:54:30.319><c> our</c><00:54:30.400><c> function</c><00:54:30.880><c> and</c><00:54:31.040><c> see</c>

00:54:31.430 --> 00:54:31.440 align:start position:0%
of step through our function and see
 

00:54:31.440 --> 00:54:35.750 align:start position:0%
of step through our function and see
what<00:54:31.680><c> happens</c><00:54:33.839><c> so</c><00:54:34.160><c> we've</c><00:54:34.400><c> called</c><00:54:34.720><c> sum2</c>

00:54:35.750 --> 00:54:35.760 align:start position:0%
what happens so we've called sum2
 

00:54:35.760 --> 00:54:37.349 align:start position:0%
what happens so we've called sum2
and<00:54:35.920><c> immediately</c><00:54:36.480><c> we</c><00:54:36.640><c> can</c><00:54:36.880><c> see</c><00:54:37.040><c> that</c><00:54:37.200><c> the</c>

00:54:37.349 --> 00:54:37.359 align:start position:0%
and immediately we can see that the
 

00:54:37.359 --> 00:54:39.270 align:start position:0%
and immediately we can see that the
return<00:54:37.760><c> address</c><00:54:38.720><c> was</c>

00:54:39.270 --> 00:54:39.280 align:start position:0%
return address was
 

00:54:39.280 --> 00:54:41.990 align:start position:0%
return address was
overwritten<00:54:39.920><c> by</c><00:54:40.160><c> sum</c><00:54:40.480><c> 2</c><00:54:40.799><c> to</c><00:54:40.960><c> now</c><00:54:41.200><c> point</c><00:54:41.520><c> to</c><00:54:41.760><c> sum</c>

00:54:41.990 --> 00:54:42.000 align:start position:0%
overwritten by sum 2 to now point to sum
 

00:54:42.000 --> 00:54:43.349 align:start position:0%
overwritten by sum 2 to now point to sum
then<00:54:42.160><c> double</c><00:54:42.480><c> plus</c><00:54:42.720><c> 4</c>

00:54:43.349 --> 00:54:43.359 align:start position:0%
then double plus 4
 

00:54:43.359 --> 00:54:44.630 align:start position:0%
then double plus 4
which<00:54:43.599><c> makes</c><00:54:43.839><c> sense</c><00:54:44.079><c> you</c><00:54:44.240><c> know</c><00:54:44.319><c> that's</c><00:54:44.480><c> what</c>

00:54:44.630 --> 00:54:44.640 align:start position:0%
which makes sense you know that's what
 

00:54:44.640 --> 00:54:46.950 align:start position:0%
which makes sense you know that's what
we'd<00:54:44.880><c> expect</c><00:54:45.599><c> if</c><00:54:45.760><c> we</c><00:54:45.839><c> go</c><00:54:46.000><c> back</c><00:54:46.240><c> into</c><00:54:46.559><c> our</c><00:54:46.640><c> code</c>

00:54:46.950 --> 00:54:46.960 align:start position:0%
we'd expect if we go back into our code
 

00:54:46.960 --> 00:54:48.309 align:start position:0%
we'd expect if we go back into our code
we<00:54:47.119><c> call</c><00:54:47.440><c> sum</c><00:54:47.760><c> 2</c>

00:54:48.309 --> 00:54:48.319 align:start position:0%
we call sum 2
 

00:54:48.319 --> 00:54:52.710 align:start position:0%
we call sum 2
and<00:54:48.480><c> so</c><00:54:48.640><c> sum2</c><00:54:49.119><c> should</c><00:54:49.359><c> return</c><00:54:50.160><c> to</c><00:54:50.480><c> uh</c><00:54:50.799><c> to</c><00:54:50.960><c> here</c>

00:54:52.710 --> 00:54:52.720 align:start position:0%
and so sum2 should return to uh to here
 

00:54:52.720 --> 00:54:54.660 align:start position:0%
and so sum2 should return to uh to here
and<00:54:52.880><c> now</c><00:54:53.520><c> we</c><00:54:53.760><c> can</c><00:54:54.079><c> step</c><00:54:54.400><c> through</c>

00:54:54.660 --> 00:54:54.670 align:start position:0%
and now we can step through
 

00:54:54.670 --> 00:54:55.910 align:start position:0%
and now we can step through
[Music]

00:54:55.910 --> 00:54:55.920 align:start position:0%
[Music]
 

00:54:55.920 --> 00:54:59.270 align:start position:0%
[Music]
you<00:54:56.000><c> know</c><00:54:56.400><c> so</c><00:54:56.720><c> on</c><00:54:57.440><c> up</c><00:54:57.839><c> and</c><00:54:58.160><c> uh</c>

00:54:59.270 --> 00:54:59.280 align:start position:0%
you know so on up and uh
 

00:54:59.280 --> 00:55:05.349 align:start position:0%
you know so on up and uh
then<00:54:59.440><c> we</c><00:54:59.599><c> get</c><00:54:59.839><c> back</c><00:55:00.240><c> into</c>

00:55:05.349 --> 00:55:05.359 align:start position:0%
 
 

00:55:05.359 --> 00:55:14.470 align:start position:0%
 
whoops<00:55:06.240><c> the</c><00:55:06.400><c> wrong</c><00:55:06.799><c> s</c>

00:55:14.470 --> 00:55:14.480 align:start position:0%
 
 

00:55:14.480 --> 00:55:16.390 align:start position:0%
 
okay<00:55:14.720><c> so</c><00:55:14.960><c> now</c><00:55:15.119><c> we're</c><00:55:15.280><c> here</c><00:55:15.599><c> and</c><00:55:15.760><c> now</c><00:55:15.920><c> when</c><00:55:16.160><c> sum</c>

00:55:16.390 --> 00:55:16.400 align:start position:0%
okay so now we're here and now when sum
 

00:55:16.400 --> 00:55:17.990 align:start position:0%
okay so now we're here and now when sum
then<00:55:16.640><c> double</c><00:55:16.960><c> returns</c>

00:55:17.990 --> 00:55:18.000 align:start position:0%
then double returns
 

00:55:18.000 --> 00:55:21.109 align:start position:0%
then double returns
as<00:55:18.319><c> exactly</c><00:55:18.720><c> as</c><00:55:18.880><c> amir</c><00:55:19.200><c> pointed</c><00:55:19.599><c> out</c><00:55:20.079><c> um</c><00:55:20.799><c> its</c>

00:55:21.109 --> 00:55:21.119 align:start position:0%
as exactly as amir pointed out um its
 

00:55:21.119 --> 00:55:23.030 align:start position:0%
as exactly as amir pointed out um its
return<00:55:21.599><c> it</c><00:55:21.760><c> has</c><00:55:22.000><c> not</c><00:55:22.160><c> restored</c><00:55:22.720><c> its</c><00:55:22.880><c> own</c>

00:55:23.030 --> 00:55:23.040 align:start position:0%
return it has not restored its own
 

00:55:23.040 --> 00:55:24.230 align:start position:0%
return it has not restored its own
return<00:55:23.440><c> address</c>

00:55:24.230 --> 00:55:24.240 align:start position:0%
return address
 

00:55:24.240 --> 00:55:26.069 align:start position:0%
return address
and<00:55:24.480><c> instead</c><00:55:24.960><c> its</c><00:55:25.119><c> return</c><00:55:25.520><c> address</c><00:55:25.760><c> is</c><00:55:25.920><c> still</c>

00:55:26.069 --> 00:55:26.079 align:start position:0%
and instead its return address is still
 

00:55:26.079 --> 00:55:27.990 align:start position:0%
and instead its return address is still
the<00:55:26.240><c> one</c><00:55:26.400><c> that</c><00:55:26.559><c> was</c><00:55:26.799><c> used</c><00:55:27.200><c> by</c>

00:55:27.990 --> 00:55:28.000 align:start position:0%
the one that was used by
 

00:55:28.000 --> 00:55:31.750 align:start position:0%
the one that was used by
um<00:55:29.359><c> sum</c><00:55:29.760><c> two</c><00:55:30.319><c> and</c><00:55:30.559><c> so</c><00:55:30.799><c> we</c><00:55:31.040><c> will</c>

00:55:31.750 --> 00:55:31.760 align:start position:0%
um sum two and so we will
 

00:55:31.760 --> 00:55:34.870 align:start position:0%
um sum two and so we will
get<00:55:32.000><c> into</c><00:55:32.480><c> an</c><00:55:32.640><c> infinite</c><00:55:33.040><c> loop</c><00:55:33.680><c> where</c><00:55:33.839><c> we</c><00:55:34.079><c> just</c>

00:55:34.870 --> 00:55:34.880 align:start position:0%
get into an infinite loop where we just
 

00:55:34.880 --> 00:55:37.270 align:start position:0%
get into an infinite loop where we just
keep<00:55:35.440><c> doing</c><00:55:35.760><c> this</c><00:55:36.240><c> over</c><00:55:36.559><c> and</c><00:55:36.640><c> over</c><00:55:36.880><c> and</c><00:55:37.040><c> over</c>

00:55:37.270 --> 00:55:37.280 align:start position:0%
keep doing this over and over and over
 

00:55:37.280 --> 00:55:39.829 align:start position:0%
keep doing this over and over and over
again<00:55:37.839><c> and</c><00:55:38.000><c> we'll</c><00:55:38.160><c> never</c><00:55:38.400><c> terminate</c><00:55:38.960><c> from</c><00:55:39.200><c> it</c>

00:55:39.829 --> 00:55:39.839 align:start position:0%
again and we'll never terminate from it
 

00:55:39.839 --> 00:55:42.069 align:start position:0%
again and we'll never terminate from it
and<00:55:40.000><c> so</c><00:55:40.160><c> this</c><00:55:40.400><c> is</c><00:55:40.559><c> a</c><00:55:41.119><c> i</c><00:55:41.440><c> think</c><00:55:41.599><c> this</c><00:55:41.760><c> is</c><00:55:41.839><c> a</c><00:55:41.920><c> good</c>

00:55:42.069 --> 00:55:42.079 align:start position:0%
and so this is a i think this is a good
 

00:55:42.079 --> 00:55:43.990 align:start position:0%
and so this is a i think this is a good
illustration<00:55:42.720><c> of</c><00:55:42.960><c> why</c><00:55:43.119><c> it's</c><00:55:43.440><c> important</c><00:55:43.839><c> to</c>

00:55:43.990 --> 00:55:44.000 align:start position:0%
illustration of why it's important to
 

00:55:44.000 --> 00:55:46.230 align:start position:0%
illustration of why it's important to
keep<00:55:44.240><c> track</c><00:55:44.480><c> of</c><00:55:44.640><c> our</c><00:55:44.880><c> caller</c><00:55:45.359><c> versus</c><00:55:45.839><c> callee</c>

00:55:46.230 --> 00:55:46.240 align:start position:0%
keep track of our caller versus callee
 

00:55:46.240 --> 00:55:47.750 align:start position:0%
keep track of our caller versus callee
saved<00:55:46.640><c> registers</c>

00:55:47.750 --> 00:55:47.760 align:start position:0%
saved registers
 

00:55:47.760 --> 00:55:49.190 align:start position:0%
saved registers
and<00:55:47.839><c> hopefully</c><00:55:48.240><c> this</c><00:55:48.400><c> also</c><00:55:48.720><c> shows</c><00:55:48.960><c> that</c><00:55:49.040><c> you</c>

00:55:49.190 --> 00:55:49.200 align:start position:0%
and hopefully this also shows that you
 

00:55:49.200 --> 00:55:51.750 align:start position:0%
and hopefully this also shows that you
can<00:55:50.160><c> use</c><00:55:50.559><c> kind</c><00:55:50.720><c> of</c><00:55:50.799><c> gdb</c><00:55:51.359><c> to</c>

00:55:51.750 --> 00:55:51.760 align:start position:0%
can use kind of gdb to
 

00:55:51.760 --> 00:55:54.710 align:start position:0%
can use kind of gdb to
debug<00:55:52.960><c> these</c><00:55:53.280><c> sorts</c><00:55:53.599><c> of</c><00:55:54.160><c> these</c><00:55:54.400><c> sorts</c><00:55:54.640><c> of</c>

00:55:54.710 --> 00:55:54.720 align:start position:0%
debug these sorts of these sorts of
 

00:55:54.720 --> 00:55:55.910 align:start position:0%
debug these sorts of these sorts of
problems<00:55:55.119><c> so</c><00:55:55.280><c> let's</c>

00:55:55.910 --> 00:55:55.920 align:start position:0%
problems so let's
 

00:55:55.920 --> 00:55:59.030 align:start position:0%
problems so let's
restore<00:55:56.319><c> what</c><00:55:56.480><c> we</c><00:55:56.640><c> had</c><00:55:58.319><c> and</c><00:55:58.480><c> we'll</c><00:55:58.640><c> go</c>

00:55:59.030 --> 00:55:59.040 align:start position:0%
restore what we had and we'll go
 

00:55:59.040 --> 00:56:04.230 align:start position:0%
restore what we had and we'll go
into<00:55:59.599><c> some</c><00:55:59.920><c> other</c><00:56:00.079><c> demos</c><00:56:01.119><c> to</c><00:56:01.760><c> talk</c><00:56:02.000><c> about</c>

00:56:04.230 --> 00:56:04.240 align:start position:0%
into some other demos to talk about
 

00:56:04.240 --> 00:56:07.270 align:start position:0%
into some other demos to talk about
to<00:56:04.480><c> illustrate</c><00:56:05.200><c> uh</c><00:56:05.920><c> somebody</c><00:56:06.400><c> asked</c><00:56:06.799><c> why</c><00:56:07.040><c> are</c>

00:56:07.270 --> 00:56:07.280 align:start position:0%
to illustrate uh somebody asked why are
 

00:56:07.280 --> 00:56:08.870 align:start position:0%
to illustrate uh somebody asked why are
we<00:56:07.520><c> subtracting</c><00:56:08.079><c> 16</c>

00:56:08.870 --> 00:56:08.880 align:start position:0%
we subtracting 16
 

00:56:08.880 --> 00:56:11.270 align:start position:0%
we subtracting 16
that's<00:56:09.200><c> to</c><00:56:09.599><c> put</c><00:56:09.839><c> space</c><00:56:10.559><c> to</c><00:56:10.640><c> get</c><00:56:10.799><c> our</c><00:56:10.960><c> stack</c>

00:56:11.270 --> 00:56:11.280 align:start position:0%
that's to put space to get our stack
 

00:56:11.280 --> 00:56:12.069 align:start position:0%
that's to put space to get our stack
frame

00:56:12.069 --> 00:56:12.079 align:start position:0%
frame
 

00:56:12.079 --> 00:56:15.349 align:start position:0%
frame
so<00:56:13.119><c> this</c><00:56:13.359><c> is</c><00:56:13.680><c> subtracting</c><00:56:14.240><c> 16</c><00:56:14.640><c> from</c><00:56:14.880><c> the</c><00:56:14.960><c> stack</c>

00:56:15.349 --> 00:56:15.359 align:start position:0%
so this is subtracting 16 from the stack
 

00:56:15.359 --> 00:56:17.349 align:start position:0%
so this is subtracting 16 from the stack
pointer<00:56:15.920><c> so</c><00:56:16.079><c> it's</c><00:56:16.240><c> moving</c><00:56:16.559><c> it</c><00:56:16.640><c> down</c><00:56:16.960><c> basically</c>

00:56:17.349 --> 00:56:17.359 align:start position:0%
pointer so it's moving it down basically
 

00:56:17.359 --> 00:56:18.470 align:start position:0%
pointer so it's moving it down basically
in<00:56:17.520><c> memory</c>

00:56:18.470 --> 00:56:18.480 align:start position:0%
in memory
 

00:56:18.480 --> 00:56:21.109 align:start position:0%
in memory
um<00:56:19.680><c> moving</c><00:56:20.000><c> it</c><00:56:20.079><c> down</c><00:56:20.319><c> so</c><00:56:20.480><c> that</c><00:56:20.640><c> we</c><00:56:20.799><c> now</c><00:56:20.960><c> have</c>

00:56:21.109 --> 00:56:21.119 align:start position:0%
um moving it down so that we now have
 

00:56:21.119 --> 00:56:22.710 align:start position:0%
um moving it down so that we now have
space<00:56:21.440><c> for</c><00:56:21.599><c> our</c><00:56:21.760><c> own</c><00:56:21.920><c> stack</c><00:56:22.240><c> frame</c><00:56:22.480><c> and</c><00:56:22.559><c> then</c>

00:56:22.710 --> 00:56:22.720 align:start position:0%
space for our own stack frame and then
 

00:56:22.720 --> 00:56:24.230 align:start position:0%
space for our own stack frame and then
we<00:56:22.799><c> can</c><00:56:22.960><c> stick</c><00:56:23.280><c> stuff</c><00:56:23.520><c> there</c>

00:56:24.230 --> 00:56:24.240 align:start position:0%
we can stick stuff there
 

00:56:24.240 --> 00:56:27.030 align:start position:0%
we can stick stuff there
so<00:56:24.480><c> because</c><00:56:24.880><c> uh</c><00:56:25.119><c> at</c><00:56:25.599><c> this</c><00:56:25.839><c> point</c><00:56:26.079><c> in</c><00:56:26.240><c> fact</c><00:56:26.880><c> we</c>

00:56:27.030 --> 00:56:27.040 align:start position:0%
so because uh at this point in fact we
 

00:56:27.040 --> 00:56:28.390 align:start position:0%
so because uh at this point in fact we
don't<00:56:27.200><c> want</c><00:56:27.359><c> to</c><00:56:27.440><c> override</c><00:56:27.920><c> what's</c><00:56:28.160><c> at</c><00:56:28.319><c> the</c>

00:56:28.390 --> 00:56:28.400 align:start position:0%
don't want to override what's at the
 

00:56:28.400 --> 00:56:30.309 align:start position:0%
don't want to override what's at the
stack<00:56:28.839><c> pointer</c><00:56:29.760><c> uh</c>

00:56:30.309 --> 00:56:30.319 align:start position:0%
stack pointer uh
 

00:56:30.319 --> 00:56:33.750 align:start position:0%
stack pointer uh
why<00:56:30.559><c> not</c><00:56:30.880><c> four</c><00:56:31.440><c> is</c><00:56:31.920><c> just</c><00:56:32.480><c> um</c>

00:56:33.750 --> 00:56:33.760 align:start position:0%
why not four is just um
 

00:56:33.760 --> 00:56:36.789 align:start position:0%
why not four is just um
well<00:56:34.400><c> four</c>

00:56:36.789 --> 00:56:36.799 align:start position:0%
 
 

00:56:36.799 --> 00:56:39.030 align:start position:0%
 
we<00:56:36.960><c> need</c><00:56:37.119><c> to</c><00:56:37.200><c> do</c><00:56:37.520><c> 16</c><00:56:38.079><c> because</c><00:56:38.480><c> instructions</c>

00:56:39.030 --> 00:56:39.040 align:start position:0%
we need to do 16 because instructions
 

00:56:39.040 --> 00:56:42.829 align:start position:0%
we need to do 16 because instructions
are<00:56:39.520><c> 64.</c>

00:56:42.829 --> 00:56:42.839 align:start position:0%
 
 

00:56:42.839 --> 00:56:45.510 align:start position:0%
 
uh<00:56:44.079><c> yeah</c><00:56:44.319><c> i</c><00:56:44.400><c> guess</c><00:56:44.640><c> i</c><00:56:44.720><c> guess</c><00:56:44.880><c> we</c><00:56:45.040><c> wouldn't</c>

00:56:45.510 --> 00:56:45.520 align:start position:0%
uh yeah i guess i guess we wouldn't
 

00:56:45.520 --> 00:56:48.789 align:start position:0%
uh yeah i guess i guess we wouldn't
don't<00:56:46.000><c> actually</c><00:56:46.559><c> need</c><00:56:46.799><c> to</c><00:56:46.960><c> do</c><00:56:47.200><c> 16</c><00:56:48.160><c> but</c><00:56:48.480><c> that's</c>

00:56:48.789 --> 00:56:48.799 align:start position:0%
don't actually need to do 16 but that's
 

00:56:48.799 --> 00:56:51.030 align:start position:0%
don't actually need to do 16 but that's
generally<00:56:49.359><c> what</c><00:56:49.599><c> you'll</c><00:56:49.839><c> see</c>

00:56:51.030 --> 00:56:51.040 align:start position:0%
generally what you'll see
 

00:56:51.040 --> 00:56:52.950 align:start position:0%
generally what you'll see
um<00:56:51.520><c> you'll</c><00:56:51.760><c> generally</c><00:56:52.160><c> just</c><00:56:52.480><c> see</c><00:56:52.720><c> i</c><00:56:52.799><c> don't</c>

00:56:52.950 --> 00:56:52.960 align:start position:0%
um you'll generally just see i don't
 

00:56:52.960 --> 00:56:54.390 align:start position:0%
um you'll generally just see i don't
think<00:56:53.520><c> yeah</c>

00:56:54.390 --> 00:56:54.400 align:start position:0%
think yeah
 

00:56:54.400 --> 00:56:56.470 align:start position:0%
think yeah
you<00:56:54.640><c> you</c><00:56:54.880><c> can't</c><00:56:55.119><c> you</c><00:56:55.280><c> can't</c><00:56:55.520><c> do</c><00:56:55.760><c> four</c><00:56:56.079><c> because</c>

00:56:56.470 --> 00:56:56.480 align:start position:0%
you you can't you can't do four because
 

00:56:56.480 --> 00:56:58.710 align:start position:0%
you you can't you can't do four because
uh<00:56:56.799><c> you</c><00:56:56.960><c> need</c><00:56:57.200><c> eight</c><00:56:57.920><c> so</c><00:56:58.079><c> four</c><00:56:58.319><c> doesn't</c><00:56:58.559><c> work</c>

00:56:58.710 --> 00:56:58.720 align:start position:0%
uh you need eight so four doesn't work
 

00:56:58.720 --> 00:56:59.589 align:start position:0%
uh you need eight so four doesn't work
but<00:56:58.880><c> i</c><00:56:58.960><c> think</c><00:56:59.119><c> you</c><00:56:59.200><c> can</c><00:56:59.280><c> do</c>

00:56:59.589 --> 00:56:59.599 align:start position:0%
but i think you can do
 

00:56:59.599 --> 00:57:03.190 align:start position:0%
but i think you can do
uh<00:57:01.280><c> you</c><00:57:01.440><c> need</c><00:57:01.680><c> the</c><00:57:01.839><c> instruction</c><00:57:02.400><c> size</c>

00:57:03.190 --> 00:57:03.200 align:start position:0%
uh you need the instruction size
 

00:57:03.200 --> 00:57:04.630 align:start position:0%
uh you need the instruction size
and<00:57:03.359><c> the</c><00:57:03.440><c> size</c><00:57:03.760><c> of</c><00:57:03.839><c> the</c><00:57:03.920><c> register</c><00:57:04.319><c> right</c><00:57:04.480><c> so</c>

00:57:04.630 --> 00:57:04.640 align:start position:0%
and the size of the register right so
 

00:57:04.640 --> 00:57:06.230 align:start position:0%
and the size of the register right so
registers<00:57:05.040><c> are</c><00:57:05.119><c> 64.</c>

00:57:06.230 --> 00:57:06.240 align:start position:0%
registers are 64.
 

00:57:06.240 --> 00:57:08.069 align:start position:0%
registers are 64.
yeah<00:57:06.480><c> and</c><00:57:06.640><c> then</c><00:57:06.799><c> so</c><00:57:07.040><c> the</c><00:57:07.200><c> convention</c><00:57:07.760><c> why</c><00:57:08.000><c> you</c>

00:57:08.069 --> 00:57:08.079 align:start position:0%
yeah and then so the convention why you
 

00:57:08.079 --> 00:57:10.150 align:start position:0%
yeah and then so the convention why you
usually<00:57:08.480><c> see</c><00:57:08.720><c> 16</c><00:57:09.200><c> is</c><00:57:09.359><c> because</c><00:57:09.520><c> if</c><00:57:09.680><c> we</c><00:57:09.920><c> jump</c>

00:57:10.150 --> 00:57:10.160 align:start position:0%
usually see 16 is because if we jump
 

00:57:10.160 --> 00:57:11.430 align:start position:0%
usually see 16 is because if we jump
back<00:57:10.400><c> to</c><00:57:10.480><c> our</c><00:57:10.640><c> document</c>

00:57:11.430 --> 00:57:11.440 align:start position:0%
back to our document
 

00:57:11.440 --> 00:57:13.349 align:start position:0%
back to our document
usually<00:57:11.760><c> we</c><00:57:12.079><c> have</c><00:57:12.160><c> the</c><00:57:12.240><c> return</c><00:57:12.640><c> address</c><00:57:13.119><c> and</c>

00:57:13.349 --> 00:57:13.359 align:start position:0%
usually we have the return address and
 

00:57:13.359 --> 00:57:14.549 align:start position:0%
usually we have the return address and
the<00:57:13.520><c> frame</c><00:57:13.839><c> pointer</c>

00:57:14.549 --> 00:57:14.559 align:start position:0%
the frame pointer
 

00:57:14.559 --> 00:57:17.349 align:start position:0%
the frame pointer
uh<00:57:14.960><c> but</c><00:57:15.119><c> we're</c><00:57:15.280><c> not</c><00:57:15.440><c> doing</c><00:57:15.680><c> that</c><00:57:15.839><c> here</c><00:57:16.160><c> because</c>

00:57:17.349 --> 00:57:17.359 align:start position:0%
uh but we're not doing that here because
 

00:57:17.359 --> 00:57:19.030 align:start position:0%
uh but we're not doing that here because
we're<00:57:17.599><c> being</c><00:57:17.920><c> uh</c>

00:57:19.030 --> 00:57:19.040 align:start position:0%
we're being uh
 

00:57:19.040 --> 00:57:22.150 align:start position:0%
we're being uh
not<00:57:19.280><c> super</c><00:57:19.599><c> careful</c><00:57:20.000><c> with</c><00:57:20.240><c> our</c><00:57:20.480><c> assembly</c>

00:57:22.150 --> 00:57:22.160 align:start position:0%
not super careful with our assembly
 

00:57:22.160 --> 00:57:25.430 align:start position:0%
not super careful with our assembly
so<00:57:22.319><c> normally</c><00:57:22.880><c> if</c><00:57:23.040><c> we</c><00:57:23.280><c> if</c><00:57:23.359><c> we</c><00:57:23.520><c> look</c><00:57:23.760><c> in</c>

00:57:25.430 --> 00:57:25.440 align:start position:0%
so normally if we if we look in
 

00:57:25.440 --> 00:57:27.510 align:start position:0%
so normally if we if we look in
i'm<00:57:25.599><c> sure</c><00:57:25.760><c> if</c><00:57:25.839><c> we</c><00:57:26.000><c> look</c><00:57:26.160><c> in</c><00:57:26.240><c> kernel.asm</c><00:57:27.280><c> we'll</c>

00:57:27.510 --> 00:57:27.520 align:start position:0%
i'm sure if we look in kernel.asm we'll
 

00:57:27.520 --> 00:57:28.950 align:start position:0%
i'm sure if we look in kernel.asm we'll
see

00:57:28.950 --> 00:57:28.960 align:start position:0%
see
 

00:57:28.960 --> 00:57:31.990 align:start position:0%
see
yeah<00:57:29.200><c> so</c><00:57:29.359><c> if</c><00:57:29.440><c> we</c><00:57:29.520><c> look</c><00:57:29.760><c> in</c><00:57:29.839><c> kernel.</c><00:57:31.680><c> we</c><00:57:31.839><c> see</c>

00:57:31.990 --> 00:57:32.000 align:start position:0%
yeah so if we look in kernel. we see
 

00:57:32.000 --> 00:57:33.670 align:start position:0%
yeah so if we look in kernel. we see
it's<00:57:32.160><c> also</c><00:57:32.400><c> you</c><00:57:32.480><c> know</c><00:57:32.640><c> 16</c><00:57:33.119><c> this</c><00:57:33.200><c> is</c><00:57:33.359><c> generally</c>

00:57:33.670 --> 00:57:33.680 align:start position:0%
it's also you know 16 this is generally
 

00:57:33.680 --> 00:57:37.990 align:start position:0%
it's also you know 16 this is generally
what<00:57:33.839><c> you'll</c><00:57:34.000><c> see</c><00:57:34.160><c> with</c><00:57:34.319><c> the</c><00:57:34.400><c> compiler</c>

00:57:37.990 --> 00:57:38.000 align:start position:0%
 
 

00:57:38.000 --> 00:57:41.190 align:start position:0%
 
um<00:57:39.119><c> okay</c><00:57:39.760><c> so</c>

00:57:41.190 --> 00:57:41.200 align:start position:0%
um okay so
 

00:57:41.200 --> 00:57:46.789 align:start position:0%
um okay so
now<00:57:41.520><c> we</c><00:57:41.680><c> can</c><00:57:43.760><c> go</c><00:57:43.920><c> back</c><00:57:44.160><c> to</c><00:57:44.400><c> this</c>

00:57:46.789 --> 00:57:46.799 align:start position:0%
 
 

00:57:46.799 --> 00:57:49.270 align:start position:0%
 
fixed<00:57:47.119><c> our</c><00:57:47.280><c> function</c><00:57:48.319><c> and</c><00:57:48.559><c> now</c><00:57:48.799><c> we</c><00:57:48.880><c> can</c><00:57:49.040><c> look</c>

00:57:49.270 --> 00:57:49.280 align:start position:0%
fixed our function and now we can look
 

00:57:49.280 --> 00:57:52.829 align:start position:0%
fixed our function and now we can look
at<00:57:49.359><c> some</c><00:57:49.599><c> c</c>

00:57:52.829 --> 00:57:52.839 align:start position:0%
 
 

00:57:52.839 --> 00:57:54.549 align:start position:0%
 
code

00:57:54.549 --> 00:57:54.559 align:start position:0%
code
 

00:57:54.559 --> 00:57:57.750 align:start position:0%
code
all<00:57:54.640><c> right</c><00:57:54.880><c> so</c><00:57:55.040><c> here</c><00:57:55.280><c> we</c><00:57:55.440><c> have</c><00:57:56.559><c> demo</c><00:57:57.280><c> four</c>

00:57:57.750 --> 00:57:57.760 align:start position:0%
all right so here we have demo four
 

00:57:57.760 --> 00:58:01.349 align:start position:0%
all right so here we have demo four
which<00:57:58.160><c> is</c><00:57:58.319><c> just</c><00:57:58.640><c> basically</c><00:57:59.520><c> um</c><00:58:00.640><c> a</c><00:58:00.799><c> copy</c><00:58:01.119><c> of</c><00:58:01.280><c> a</c>

00:58:01.349 --> 00:58:01.359 align:start position:0%
which is just basically um a copy of a
 

00:58:01.359 --> 00:58:02.150 align:start position:0%
which is just basically um a copy of a
main<00:58:01.680><c> function</c>

00:58:02.150 --> 00:58:02.160 align:start position:0%
main function
 

00:58:02.160 --> 00:58:05.510 align:start position:0%
main function
like<00:58:02.400><c> a</c><00:58:02.720><c> imitation</c><00:58:03.599><c> of</c><00:58:04.000><c> the</c><00:58:04.160><c> main</c><00:58:04.480><c> function</c>

00:58:05.510 --> 00:58:05.520 align:start position:0%
like a imitation of the main function
 

00:58:05.520 --> 00:58:08.950 align:start position:0%
like a imitation of the main function
so<00:58:06.480><c> we</c><00:58:06.720><c> have</c><00:58:07.280><c> our</c><00:58:07.839><c> args</c>

00:58:08.950 --> 00:58:08.960 align:start position:0%
so we have our args
 

00:58:08.960 --> 00:58:11.670 align:start position:0%
so we have our args
which<00:58:09.119><c> is</c><00:58:09.200><c> an</c><00:58:09.359><c> array</c><00:58:09.599><c> of</c><00:58:09.760><c> strings</c><00:58:10.720><c> and</c><00:58:11.119><c> we</c><00:58:11.280><c> have</c>

00:58:11.670 --> 00:58:11.680 align:start position:0%
which is an array of strings and we have
 

00:58:11.680 --> 00:58:13.430 align:start position:0%
which is an array of strings and we have
dummy<00:58:12.000><c> main</c><00:58:12.319><c> which</c><00:58:12.559><c> takes</c>

00:58:13.430 --> 00:58:13.440 align:start position:0%
dummy main which takes
 

00:58:13.440 --> 00:58:15.670 align:start position:0%
dummy main which takes
uh<00:58:13.599><c> the</c><00:58:14.079><c> number</c><00:58:14.319><c> of</c><00:58:14.480><c> arguments</c><00:58:15.280><c> and</c><00:58:15.520><c> the</c>

00:58:15.670 --> 00:58:15.680 align:start position:0%
uh the number of arguments and the
 

00:58:15.680 --> 00:58:16.789 align:start position:0%
uh the number of arguments and the
arguments<00:58:16.160><c> frame</c>

00:58:16.789 --> 00:58:16.799 align:start position:0%
arguments frame
 

00:58:16.799 --> 00:58:20.069 align:start position:0%
arguments frame
and<00:58:17.119><c> just</c><00:58:17.280><c> prints</c><00:58:17.760><c> it</c><00:58:17.920><c> out</c><00:58:18.400><c> um</c><00:58:18.720><c> for</c><00:58:18.960><c> us</c>

00:58:20.069 --> 00:58:20.079 align:start position:0%
and just prints it out um for us
 

00:58:20.079 --> 00:58:21.670 align:start position:0%
and just prints it out um for us
and<00:58:20.160><c> so</c><00:58:20.319><c> that's</c><00:58:20.559><c> all</c><00:58:20.720><c> that's</c><00:58:21.280><c> that's</c><00:58:21.520><c> all</c>

00:58:21.670 --> 00:58:21.680 align:start position:0%
and so that's all that's that's all
 

00:58:21.680 --> 00:58:23.190 align:start position:0%
and so that's all that's that's all
that's<00:58:21.839><c> happening</c><00:58:22.319><c> here</c><00:58:22.799><c> it's</c><00:58:22.960><c> pretty</c>

00:58:23.190 --> 00:58:23.200 align:start position:0%
that's happening here it's pretty
 

00:58:23.200 --> 00:58:24.630 align:start position:0%
that's happening here it's pretty
straightforward

00:58:24.630 --> 00:58:24.640 align:start position:0%
straightforward
 

00:58:24.640 --> 00:58:27.910 align:start position:0%
straightforward
uh<00:58:25.119><c> if</c><00:58:25.280><c> we</c><00:58:25.520><c> set</c><00:58:25.920><c> a</c><00:58:26.160><c> breakpoint</c><00:58:27.040><c> in</c>

00:58:27.910 --> 00:58:27.920 align:start position:0%
uh if we set a breakpoint in
 

00:58:27.920 --> 00:58:31.190 align:start position:0%
uh if we set a breakpoint in
dummy<00:58:28.319><c> main</c>

00:58:31.190 --> 00:58:31.200 align:start position:0%
 
 

00:58:31.200 --> 00:58:35.510 align:start position:0%
 
and<00:58:31.520><c> we</c><00:58:31.839><c> pop</c><00:58:32.160><c> over</c><00:58:33.760><c> let</c><00:58:33.920><c> this</c>

00:58:35.510 --> 00:58:35.520 align:start position:0%
and we pop over let this
 

00:58:35.520 --> 00:58:38.630 align:start position:0%
and we pop over let this
okay<00:58:35.920><c> we</c><00:58:36.079><c> let</c><00:58:36.319><c> this</c><00:58:36.480><c> continue</c><00:58:37.520><c> and</c><00:58:37.760><c> we</c><00:58:38.400><c> we</c>

00:58:38.630 --> 00:58:38.640 align:start position:0%
okay we let this continue and we we
 

00:58:38.640 --> 00:58:39.349 align:start position:0%
okay we let this continue and we we
start<00:58:38.880><c> this</c>

00:58:39.349 --> 00:58:39.359 align:start position:0%
start this
 

00:58:39.359 --> 00:58:42.069 align:start position:0%
start this
we<00:58:39.520><c> run</c><00:58:39.760><c> down</c><00:58:40.240><c> four</c><00:58:41.040><c> okay</c><00:58:41.280><c> so</c><00:58:41.440><c> we</c><00:58:41.680><c> now</c><00:58:41.839><c> we've</c>

00:58:42.069 --> 00:58:42.079 align:start position:0%
we run down four okay so we now we've
 

00:58:42.079 --> 00:58:42.870 align:start position:0%
we run down four okay so we now we've
hit

00:58:42.870 --> 00:58:42.880 align:start position:0%
hit
 

00:58:42.880 --> 00:58:46.230 align:start position:0%
hit
um<00:58:43.280><c> dummy</c><00:58:43.680><c> main</c><00:58:45.040><c> and</c><00:58:45.119><c> there's</c><00:58:45.359><c> a</c><00:58:45.440><c> couple</c><00:58:45.680><c> of</c><00:58:45.920><c> uh</c>

00:58:46.230 --> 00:58:46.240 align:start position:0%
um dummy main and there's a couple of uh
 

00:58:46.240 --> 00:58:51.430 align:start position:0%
um dummy main and there's a couple of uh
important<00:58:46.640><c> things</c><00:58:47.680><c> to</c><00:58:48.640><c> uh</c><00:58:49.040><c> remember</c><00:58:49.680><c> about</c>

00:58:51.430 --> 00:58:51.440 align:start position:0%
important things to uh remember about
 

00:58:51.440 --> 00:58:53.670 align:start position:0%
important things to uh remember about
uh<00:58:52.240><c> that</c><00:58:52.400><c> you</c><00:58:52.480><c> can</c><00:58:52.559><c> use</c><00:58:52.720><c> gdp</c><00:58:53.200><c> for</c><00:58:53.359><c> regarding</c>

00:58:53.670 --> 00:58:53.680 align:start position:0%
uh that you can use gdp for regarding
 

00:58:53.680 --> 00:58:54.549 align:start position:0%
uh that you can use gdp for regarding
stack<00:58:54.000><c> frames</c>

00:58:54.549 --> 00:58:54.559 align:start position:0%
stack frames
 

00:58:54.559 --> 00:58:58.230 align:start position:0%
stack frames
so<00:58:54.799><c> if</c><00:58:54.880><c> we</c><00:58:55.119><c> type</c><00:58:55.760><c> i</c><00:58:56.319><c> so</c><00:58:56.480><c> again</c><00:58:56.720><c> that's</c><00:58:57.040><c> info</c>

00:58:58.230 --> 00:58:58.240 align:start position:0%
so if we type i so again that's info
 

00:58:58.240 --> 00:59:00.549 align:start position:0%
so if we type i so again that's info
if<00:58:58.319><c> we</c><00:58:58.480><c> type</c><00:58:58.799><c> iframe</c><00:58:59.760><c> we</c><00:58:59.920><c> can</c><00:59:00.079><c> see</c><00:59:00.240><c> a</c><00:59:00.400><c> whole</c>

00:59:00.549 --> 00:59:00.559 align:start position:0%
if we type iframe we can see a whole
 

00:59:00.559 --> 00:59:01.510 align:start position:0%
if we type iframe we can see a whole
bunch<00:59:00.880><c> of</c><00:59:01.119><c> uh</c>

00:59:01.510 --> 00:59:01.520 align:start position:0%
bunch of uh
 

00:59:01.520 --> 00:59:03.829 align:start position:0%
bunch of uh
useful<00:59:02.000><c> information</c><00:59:02.799><c> about</c><00:59:03.200><c> the</c><00:59:03.359><c> current</c>

00:59:03.829 --> 00:59:03.839 align:start position:0%
useful information about the current
 

00:59:03.839 --> 00:59:04.789 align:start position:0%
useful information about the current
stack<00:59:04.240><c> frame</c>

00:59:04.789 --> 00:59:04.799 align:start position:0%
stack frame
 

00:59:04.799 --> 00:59:06.710 align:start position:0%
stack frame
so<00:59:04.960><c> we</c><00:59:05.119><c> can</c><00:59:05.200><c> see</c><00:59:05.440><c> we're</c><00:59:05.599><c> at</c><00:59:05.680><c> stack</c><00:59:06.000><c> level</c><00:59:06.319><c> zero</c>

00:59:06.710 --> 00:59:06.720 align:start position:0%
so we can see we're at stack level zero
 

00:59:06.720 --> 00:59:08.069 align:start position:0%
so we can see we're at stack level zero
level<00:59:07.040><c> zero</c><00:59:07.440><c> means</c>

00:59:08.069 --> 00:59:08.079 align:start position:0%
level zero means
 

00:59:08.079 --> 00:59:10.470 align:start position:0%
level zero means
it's<00:59:08.400><c> uh</c><00:59:08.799><c> earth</c><00:59:09.119><c> is</c><00:59:09.280><c> down</c><00:59:09.599><c> in</c><00:59:09.760><c> the</c><00:59:09.920><c> call</c><00:59:10.160><c> stack</c>

00:59:10.470 --> 00:59:10.480 align:start position:0%
it's uh earth is down in the call stack
 

00:59:10.480 --> 00:59:11.990 align:start position:0%
it's uh earth is down in the call stack
that<00:59:10.640><c> we</c><00:59:10.799><c> can</c><00:59:10.960><c> go</c>

00:59:11.990 --> 00:59:12.000 align:start position:0%
that we can go
 

00:59:12.000 --> 00:59:15.589 align:start position:0%
that we can go
and<00:59:12.400><c> the</c><00:59:12.559><c> frame</c><00:59:13.280><c> is</c><00:59:13.440><c> at</c><00:59:13.599><c> this</c><00:59:13.839><c> address</c>

00:59:15.589 --> 00:59:15.599 align:start position:0%
and the frame is at this address
 

00:59:15.599 --> 00:59:17.990 align:start position:0%
and the frame is at this address
the<00:59:15.760><c> program</c><00:59:16.240><c> counter</c><00:59:17.119><c> which</c><00:59:17.359><c> is</c><00:59:17.520><c> okay</c><00:59:17.839><c> that's</c>

00:59:17.990 --> 00:59:18.000 align:start position:0%
the program counter which is okay that's
 

00:59:18.000 --> 00:59:19.190 align:start position:0%
the program counter which is okay that's
all<00:59:18.160><c> well</c><00:59:18.400><c> and</c><00:59:18.559><c> good</c>

00:59:19.190 --> 00:59:19.200 align:start position:0%
all well and good
 

00:59:19.200 --> 00:59:22.069 align:start position:0%
all well and good
we<00:59:19.359><c> have</c><00:59:19.520><c> a</c><00:59:19.599><c> save</c><00:59:19.920><c> program</c><00:59:20.319><c> counter</c><00:59:20.799><c> as</c><00:59:20.880><c> well</c>

00:59:22.069 --> 00:59:22.079 align:start position:0%
we have a save program counter as well
 

00:59:22.079 --> 00:59:22.710 align:start position:0%
we have a save program counter as well
and<00:59:22.240><c> if</c><00:59:22.400><c> we</c>

00:59:22.710 --> 00:59:22.720 align:start position:0%
and if we
 

00:59:22.720 --> 00:59:25.349 align:start position:0%
and if we
again<00:59:23.040><c> if</c><00:59:23.119><c> we</c><00:59:23.520><c> take</c><00:59:23.760><c> this</c><00:59:24.000><c> address</c><00:59:24.880><c> and</c><00:59:25.119><c> we</c>

00:59:25.349 --> 00:59:25.359 align:start position:0%
again if we take this address and we
 

00:59:25.359 --> 00:59:25.990 align:start position:0%
again if we take this address and we
jump

00:59:25.990 --> 00:59:26.000 align:start position:0%
jump
 

00:59:26.000 --> 00:59:28.320 align:start position:0%
jump
into<00:59:27.359><c> kernel.asm</c>

00:59:28.320 --> 00:59:28.330 align:start position:0%
into kernel.asm
 

00:59:28.330 --> 00:59:29.670 align:start position:0%
into kernel.asm
[Music]

00:59:29.670 --> 00:59:29.680 align:start position:0%
[Music]
 

00:59:29.680 --> 00:59:31.990 align:start position:0%
[Music]
and<00:59:29.839><c> we</c><00:59:30.079><c> search</c><00:59:30.319><c> for</c><00:59:30.480><c> that</c><00:59:30.720><c> address</c><00:59:31.520><c> we</c><00:59:31.680><c> can</c>

00:59:31.990 --> 00:59:32.000 align:start position:0%
and we search for that address we can
 

00:59:32.000 --> 00:59:33.190 align:start position:0%
and we search for that address we can
indeed<00:59:32.400><c> see</c>

00:59:33.190 --> 00:59:33.200 align:start position:0%
indeed see
 

00:59:33.200 --> 00:59:38.390 align:start position:0%
indeed see
that<00:59:34.400><c> that</c><00:59:34.720><c> address</c><00:59:35.280><c> is</c><00:59:35.760><c> inside</c><00:59:36.400><c> of</c>

00:59:38.390 --> 00:59:38.400 align:start position:0%
that that address is inside of
 

00:59:38.400 --> 00:59:40.789 align:start position:0%
that that address is inside of
inside<00:59:39.200><c> of</c><00:59:39.440><c> demo</c><00:59:39.839><c> form</c><00:59:40.160><c> which</c><00:59:40.319><c> is</c><00:59:40.400><c> exactly</c>

00:59:40.789 --> 00:59:40.799 align:start position:0%
inside of demo form which is exactly
 

00:59:40.799 --> 00:59:42.230 align:start position:0%
inside of demo form which is exactly
where<00:59:41.040><c> we</c><00:59:41.280><c> expect</c>

00:59:42.230 --> 00:59:42.240 align:start position:0%
where we expect
 

00:59:42.240 --> 00:59:45.750 align:start position:0%
where we expect
the<00:59:42.559><c> program</c><00:59:43.119><c> to</c><00:59:43.440><c> return</c><00:59:43.920><c> to</c><00:59:44.880><c> and</c><00:59:45.359><c> it</c><00:59:45.440><c> was</c>

00:59:45.750 --> 00:59:45.760 align:start position:0%
the program to return to and it was
 

00:59:45.760 --> 00:59:48.630 align:start position:0%
the program to return to and it was
called<00:59:46.160><c> by</c><00:59:46.400><c> a</c><00:59:46.559><c> frame</c><00:59:46.960><c> at</c><00:59:47.040><c> this</c><00:59:47.280><c> address</c><00:59:48.400><c> source</c>

00:59:48.630 --> 00:59:48.640 align:start position:0%
called by a frame at this address source
 

00:59:48.640 --> 00:59:49.510 align:start position:0%
called by a frame at this address source
language<00:59:49.119><c> c</c>

00:59:49.510 --> 00:59:49.520 align:start position:0%
language c
 

00:59:49.520 --> 00:59:51.829 align:start position:0%
language c
you<00:59:49.599><c> know</c><00:59:49.760><c> that's</c><00:59:50.000><c> that's</c><00:59:50.319><c> nice</c><00:59:51.200><c> to</c><00:59:51.359><c> know</c><00:59:51.680><c> and</c>

00:59:51.829 --> 00:59:51.839 align:start position:0%
you know that's that's nice to know and
 

00:59:51.839 --> 00:59:53.670 align:start position:0%
you know that's that's nice to know and
then<00:59:52.079><c> we</c><00:59:52.240><c> have</c><00:59:52.559><c> the</c><00:59:52.720><c> argument</c><00:59:53.200><c> list</c>

00:59:53.670 --> 00:59:53.680 align:start position:0%
then we have the argument list
 

00:59:53.680 --> 00:59:57.030 align:start position:0%
then we have the argument list
also<00:59:54.079><c> starts</c><00:59:54.400><c> at</c><00:59:54.480><c> this</c><00:59:54.720><c> address</c><00:59:56.000><c> of</c><00:59:56.079><c> course</c>

00:59:57.030 --> 00:59:57.040 align:start position:0%
also starts at this address of course
 

00:59:57.040 --> 00:59:59.109 align:start position:0%
also starts at this address of course
in<00:59:57.119><c> this</c><00:59:57.440><c> case</c><00:59:58.480><c> we</c><00:59:58.640><c> have</c><00:59:58.720><c> most</c><00:59:58.960><c> of</c><00:59:59.040><c> our</c>

00:59:59.109 --> 00:59:59.119 align:start position:0%
in this case we have most of our
 

00:59:59.119 --> 01:00:00.230 align:start position:0%
in this case we have most of our
arguments<00:59:59.839><c> in</c>

01:00:00.230 --> 01:00:00.240 align:start position:0%
arguments in
 

01:00:00.240 --> 01:00:03.109 align:start position:0%
arguments in
registers<01:00:01.440><c> uh</c><01:00:01.680><c> and</c><01:00:01.760><c> then</c><01:00:01.920><c> we</c><01:00:02.079><c> can</c><01:00:02.319><c> even</c><01:00:02.640><c> see</c>

01:00:03.109 --> 01:00:03.119 align:start position:0%
registers uh and then we can even see
 

01:00:03.119 --> 01:00:03.430 align:start position:0%
registers uh and then we can even see
what

01:00:03.430 --> 01:00:03.440 align:start position:0%
what
 

01:00:03.440 --> 01:00:06.870 align:start position:0%
what
args<01:00:03.760><c> are</c><01:00:04.000><c> we</c><01:00:04.160><c> mean</c><01:00:04.400><c> rxc</c><01:00:05.680><c> is</c><01:00:06.319><c> three</c>

01:00:06.870 --> 01:00:06.880 align:start position:0%
args are we mean rxc is three
 

01:00:06.880 --> 01:00:10.390 align:start position:0%
args are we mean rxc is three
and<01:00:07.359><c> rv</c><01:00:08.160><c> is</c><01:00:08.480><c> this</c><01:00:08.720><c> address</c>

01:00:10.390 --> 01:00:10.400 align:start position:0%
and rv is this address
 

01:00:10.400 --> 01:00:13.510 align:start position:0%
and rv is this address
and<01:00:11.119><c> if</c><01:00:11.280><c> we</c><01:00:11.359><c> want</c><01:00:11.520><c> to</c><01:00:11.680><c> more</c><01:00:12.079><c> in</c><01:00:12.240><c> depth</c><01:00:13.040><c> examine</c>

01:00:13.510 --> 01:00:13.520 align:start position:0%
and if we want to more in depth examine
 

01:00:13.520 --> 01:00:15.670 align:start position:0%
and if we want to more in depth examine
things<01:00:13.839><c> we</c><01:00:14.000><c> can</c><01:00:14.160><c> look</c><01:00:14.400><c> at</c><01:00:14.559><c> things</c><01:00:14.799><c> like</c>

01:00:15.670 --> 01:00:15.680 align:start position:0%
things we can look at things like
 

01:00:15.680 --> 01:00:19.109 align:start position:0%
things we can look at things like
info<01:00:16.160><c> arcs</c><01:00:17.680><c> which</c><01:00:17.920><c> will</c><01:00:18.079><c> tell</c><01:00:18.319><c> us</c><01:00:18.640><c> information</c>

01:00:19.109 --> 01:00:19.119 align:start position:0%
info arcs which will tell us information
 

01:00:19.119 --> 01:00:21.349 align:start position:0%
info arcs which will tell us information
about<01:00:19.359><c> the</c><01:00:19.520><c> arguments</c><01:00:20.000><c> of</c><01:00:20.079><c> the</c><01:00:20.240><c> function</c>

01:00:21.349 --> 01:00:21.359 align:start position:0%
about the arguments of the function
 

01:00:21.359 --> 01:00:25.190 align:start position:0%
about the arguments of the function
we<01:00:21.520><c> can</c><01:00:22.000><c> look</c><01:00:22.400><c> at</c><01:00:23.520><c> but</c><01:00:23.680><c> more</c><01:00:24.000><c> importantly</c>

01:00:25.190 --> 01:00:25.200 align:start position:0%
we can look at but more importantly
 

01:00:25.200 --> 01:00:28.549 align:start position:0%
we can look at but more importantly
we<01:00:25.359><c> can</c><01:00:25.760><c> type</c><01:00:26.000><c> if</c><01:00:26.160><c> we</c><01:00:26.240><c> type</c><01:00:26.480><c> back</c><01:00:26.799><c> trace</c><01:00:27.680><c> or</c><01:00:28.079><c> bt</c>

01:00:28.549 --> 01:00:28.559 align:start position:0%
we can type if we type back trace or bt
 

01:00:28.559 --> 01:00:30.069 align:start position:0%
we can type if we type back trace or bt
works<01:00:28.960><c> as</c><01:00:29.119><c> well</c>

01:00:30.069 --> 01:00:30.079 align:start position:0%
works as well
 

01:00:30.079 --> 01:00:33.990 align:start position:0%
works as well
we<01:00:30.319><c> get</c><01:00:30.640><c> a</c><01:00:30.880><c> full</c><01:00:31.200><c> back</c><01:00:31.520><c> trace</c><01:00:32.079><c> of</c><01:00:32.640><c> all</c><01:00:32.960><c> of</c><01:00:33.119><c> the</c>

01:00:33.990 --> 01:00:34.000 align:start position:0%
we get a full back trace of all of the
 

01:00:34.000 --> 01:00:37.030 align:start position:0%
we get a full back trace of all of the
stacks<01:00:34.640><c> uh</c><01:00:34.960><c> the</c><01:00:35.440><c> all</c><01:00:35.599><c> of</c><01:00:35.680><c> the</c><01:00:35.760><c> stack</c><01:00:36.160><c> frames</c>

01:00:37.030 --> 01:00:37.040 align:start position:0%
stacks uh the all of the stack frames
 

01:00:37.040 --> 01:00:38.950 align:start position:0%
stacks uh the all of the stack frames
from<01:00:37.359><c> the</c><01:00:37.520><c> call</c><01:00:37.760><c> stack</c><01:00:38.079><c> so</c><01:00:38.319><c> you</c><01:00:38.559><c> can</c><01:00:38.640><c> see</c><01:00:38.880><c> you</c>

01:00:38.950 --> 01:00:38.960 align:start position:0%
from the call stack so you can see you
 

01:00:38.960 --> 01:00:40.230 align:start position:0%
from the call stack so you can see you
know<01:00:39.119><c> something</c><01:00:39.520><c> questionable</c><01:00:39.920><c> happened</c>

01:00:40.230 --> 01:00:40.240 align:start position:0%
know something questionable happened
 

01:00:40.240 --> 01:00:41.990 align:start position:0%
know something questionable happened
here<01:00:40.559><c> that's</c><01:00:40.799><c> when</c><01:00:40.960><c> we</c><01:00:41.119><c> invoked</c><01:00:41.440><c> a</c><01:00:41.520><c> system</c>

01:00:41.990 --> 01:00:42.000 align:start position:0%
here that's when we invoked a system
 

01:00:42.000 --> 01:00:44.870 align:start position:0%
here that's when we invoked a system
call<01:00:42.799><c> um</c><01:00:43.440><c> then</c><01:00:43.680><c> we</c><01:00:43.760><c> get</c><01:00:43.920><c> to</c><01:00:44.079><c> the</c><01:00:44.160><c> user</c><01:00:44.480><c> track</c>

01:00:44.870 --> 01:00:44.880 align:start position:0%
call um then we get to the user track
 

01:00:44.880 --> 01:00:45.589 align:start position:0%
call um then we get to the user track
function

01:00:45.589 --> 01:00:45.599 align:start position:0%
function
 

01:00:45.599 --> 01:00:47.990 align:start position:0%
function
then<01:00:45.760><c> to</c><01:00:45.920><c> the</c><01:00:46.079><c> syscall</c><01:00:46.640><c> function</c><01:00:47.680><c> then</c><01:00:47.839><c> to</c>

01:00:47.990 --> 01:00:48.000 align:start position:0%
then to the syscall function then to
 

01:00:48.000 --> 01:00:49.270 align:start position:0%
then to the syscall function then to
sysdemo

01:00:49.270 --> 01:00:49.280 align:start position:0%
sysdemo
 

01:00:49.280 --> 01:00:52.470 align:start position:0%
sysdemo
then<01:00:49.440><c> to</c><01:00:49.599><c> demo</c><01:00:50.000><c> four</c><01:00:51.440><c> and</c><01:00:51.599><c> then</c><01:00:51.839><c> finally</c><01:00:52.319><c> to</c>

01:00:52.470 --> 01:00:52.480 align:start position:0%
then to demo four and then finally to
 

01:00:52.480 --> 01:00:54.150 align:start position:0%
then to demo four and then finally to
dummy<01:00:52.799><c> main</c>

01:00:54.150 --> 01:00:54.160 align:start position:0%
dummy main
 

01:00:54.160 --> 01:00:56.069 align:start position:0%
dummy main
and<01:00:54.319><c> if</c><01:00:54.480><c> we</c><01:00:54.559><c> want</c><01:00:54.720><c> to</c><01:00:55.200><c> investigate</c><01:00:55.839><c> any</c><01:00:56.000><c> of</c>

01:00:56.069 --> 01:00:56.079 align:start position:0%
and if we want to investigate any of
 

01:00:56.079 --> 01:00:57.349 align:start position:0%
and if we want to investigate any of
these<01:00:56.240><c> stack</c><01:00:56.559><c> frames</c>

01:00:57.349 --> 01:00:57.359 align:start position:0%
these stack frames
 

01:00:57.359 --> 01:01:00.230 align:start position:0%
these stack frames
more<01:00:57.680><c> in</c><01:00:57.839><c> depth</c><01:00:58.319><c> we</c><01:00:58.640><c> can</c><01:00:58.880><c> do</c><01:00:59.280><c> frame</c><01:00:59.760><c> and</c><01:00:59.920><c> then</c>

01:01:00.230 --> 01:01:00.240 align:start position:0%
more in depth we can do frame and then
 

01:01:00.240 --> 01:01:01.589 align:start position:0%
more in depth we can do frame and then
whatever<01:01:00.720><c> number</c>

01:01:01.589 --> 01:01:01.599 align:start position:0%
whatever number
 

01:01:01.599 --> 01:01:03.750 align:start position:0%
whatever number
uh<01:01:01.920><c> is</c><01:01:02.079><c> along</c><01:01:02.400><c> the</c><01:01:02.559><c> side</c><01:01:02.880><c> here</c><01:01:03.119><c> so</c><01:01:03.280><c> let's</c><01:01:03.440><c> say</c><01:01:03.680><c> i</c>

01:01:03.750 --> 01:01:03.760 align:start position:0%
uh is along the side here so let's say i
 

01:01:03.760 --> 01:01:05.829 align:start position:0%
uh is along the side here so let's say i
want<01:01:03.920><c> to</c><01:01:04.000><c> look</c><01:01:04.160><c> at</c><01:01:04.240><c> what</c><01:01:04.400><c> was</c><01:01:04.559><c> my</c><01:01:04.720><c> stack</c><01:01:05.119><c> frame</c>

01:01:05.829 --> 01:01:05.839 align:start position:0%
want to look at what was my stack frame
 

01:01:05.839 --> 01:01:07.670 align:start position:0%
want to look at what was my stack frame
when<01:01:06.160><c> six</c><01:01:06.400><c> calls</c><01:01:06.799><c> are</c><01:01:06.960><c> called</c><01:01:07.200><c> i</c><01:01:07.280><c> can</c><01:01:07.440><c> go</c><01:01:07.599><c> to</c>

01:01:07.670 --> 01:01:07.680 align:start position:0%
when six calls are called i can go to
 

01:01:07.680 --> 01:01:09.990 align:start position:0%
when six calls are called i can go to
frame<01:01:08.079><c> three</c><01:01:08.799><c> and</c><01:01:08.960><c> so</c><01:01:09.200><c> now</c><01:01:09.520><c> i'm</c>

01:01:09.990 --> 01:01:10.000 align:start position:0%
frame three and so now i'm
 

01:01:10.000 --> 01:01:11.910 align:start position:0%
frame three and so now i'm
inside<01:01:10.319><c> of</c><01:01:10.400><c> gdb</c><01:01:10.880><c> i'm</c><01:01:11.040><c> looking</c><01:01:11.359><c> at</c><01:01:11.440><c> that</c><01:01:11.599><c> stack</c>

01:01:11.910 --> 01:01:11.920 align:start position:0%
inside of gdb i'm looking at that stack
 

01:01:11.920 --> 01:01:13.829 align:start position:0%
inside of gdb i'm looking at that stack
frame<01:01:12.079><c> so</c><01:01:12.240><c> if</c><01:01:12.400><c> i</c><01:01:12.480><c> type</c><01:01:12.799><c> info</c><01:01:13.119><c> frame</c>

01:01:13.829 --> 01:01:13.839 align:start position:0%
frame so if i type info frame
 

01:01:13.839 --> 01:01:16.549 align:start position:0%
frame so if i type info frame
i<01:01:14.000><c> can</c><01:01:14.160><c> get</c><01:01:14.400><c> this</c><01:01:15.680><c> and</c><01:01:15.839><c> here</c><01:01:16.000><c> we</c><01:01:16.160><c> get</c><01:01:16.319><c> a</c><01:01:16.319><c> lot</c>

01:01:16.549 --> 01:01:16.559 align:start position:0%
i can get this and here we get a lot
 

01:01:16.559 --> 01:01:17.109 align:start position:0%
i can get this and here we get a lot
more

01:01:17.109 --> 01:01:17.119 align:start position:0%
more
 

01:01:17.119 --> 01:01:19.109 align:start position:0%
more
a<01:01:17.440><c> lot</c><01:01:17.599><c> more</c><01:01:17.920><c> information</c><01:01:18.559><c> we</c><01:01:18.640><c> have</c><01:01:18.799><c> a</c><01:01:18.880><c> bunch</c>

01:01:19.109 --> 01:01:19.119 align:start position:0%
a lot more information we have a bunch
 

01:01:19.119 --> 01:01:22.390 align:start position:0%
a lot more information we have a bunch
of<01:01:19.280><c> saved</c><01:01:19.680><c> registers</c>

01:01:22.390 --> 01:01:22.400 align:start position:0%
of saved registers
 

01:01:22.400 --> 01:01:25.270 align:start position:0%
of saved registers
we<01:01:22.640><c> have</c><01:01:23.119><c> some</c><01:01:23.440><c> local</c><01:01:23.880><c> variables</c><01:01:24.960><c> we</c><01:01:25.119><c> don't</c>

01:01:25.270 --> 01:01:25.280 align:start position:0%
we have some local variables we don't
 

01:01:25.280 --> 01:01:27.510 align:start position:0%
we have some local variables we don't
have<01:01:25.440><c> any</c><01:01:25.680><c> arguments</c><01:01:26.240><c> to</c><01:01:26.400><c> this</c><01:01:26.640><c> function</c>

01:01:27.510 --> 01:01:27.520 align:start position:0%
have any arguments to this function
 

01:01:27.520 --> 01:01:29.270 align:start position:0%
have any arguments to this function
we<01:01:27.680><c> can</c><01:01:27.839><c> see</c><01:01:28.160><c> where</c><01:01:28.319><c> the</c><01:01:28.480><c> program</c><01:01:28.799><c> counter</c>

01:01:29.270 --> 01:01:29.280 align:start position:0%
we can see where the program counter
 

01:01:29.280 --> 01:01:31.190 align:start position:0%
we can see where the program counter
where<01:01:29.440><c> we're</c><01:01:29.599><c> supposed</c><01:01:29.839><c> to</c><01:01:30.000><c> jump</c><01:01:30.240><c> back</c><01:01:30.480><c> to</c>

01:01:31.190 --> 01:01:31.200 align:start position:0%
where we're supposed to jump back to
 

01:01:31.200 --> 01:01:32.950 align:start position:0%
where we're supposed to jump back to
um<01:01:31.520><c> all</c><01:01:31.680><c> kinds</c><01:01:31.920><c> of</c><01:01:32.000><c> things</c><01:01:32.319><c> like</c><01:01:32.480><c> that</c><01:01:32.640><c> so</c><01:01:32.799><c> this</c>

01:01:32.950 --> 01:01:32.960 align:start position:0%
um all kinds of things like that so this
 

01:01:32.960 --> 01:01:34.630 align:start position:0%
um all kinds of things like that so this
is<01:01:33.040><c> super</c><01:01:33.280><c> super</c><01:01:33.599><c> useful</c><01:01:34.079><c> for</c>

01:01:34.630 --> 01:01:34.640 align:start position:0%
is super super useful for
 

01:01:34.640 --> 01:01:36.150 align:start position:0%
is super super useful for
if<01:01:34.799><c> you're</c><01:01:34.960><c> debugging</c><01:01:35.440><c> things</c><01:01:35.680><c> and</c><01:01:35.839><c> in</c><01:01:35.920><c> fact</c>

01:01:36.150 --> 01:01:36.160 align:start position:0%
if you're debugging things and in fact
 

01:01:36.160 --> 01:01:38.549 align:start position:0%
if you're debugging things and in fact
it's<01:01:36.240><c> so</c><01:01:36.480><c> useful</c><01:01:37.119><c> we</c><01:01:37.280><c> make</c><01:01:37.520><c> you</c><01:01:37.760><c> implement</c>

01:01:38.549 --> 01:01:38.559 align:start position:0%
it's so useful we make you implement
 

01:01:38.559 --> 01:01:41.589 align:start position:0%
it's so useful we make you implement
um<01:01:38.960><c> your</c><01:01:39.200><c> own</c><01:01:39.440><c> version</c><01:01:40.240><c> not</c><01:01:40.799><c> nowhere</c><01:01:41.119><c> near</c><01:01:41.359><c> and</c>

01:01:41.589 --> 01:01:41.599 align:start position:0%
um your own version not nowhere near and
 

01:01:41.599 --> 01:01:41.829 align:start position:0%
um your own version not nowhere near and
as

01:01:41.829 --> 01:01:41.839 align:start position:0%
as
 

01:01:41.839 --> 01:01:44.950 align:start position:0%
as
in<01:01:41.920><c> depth</c><01:01:42.160><c> as</c><01:01:42.319><c> what</c><01:01:42.400><c> udb</c><01:01:42.880><c> tells</c><01:01:43.200><c> you</c><01:01:43.760><c> but</c><01:01:44.000><c> we're</c>

01:01:44.950 --> 01:01:44.960 align:start position:0%
in depth as what udb tells you but we're
 

01:01:44.960 --> 01:01:46.710 align:start position:0%
in depth as what udb tells you but we're
one<01:01:45.119><c> of</c><01:01:45.200><c> the</c><01:01:45.359><c> exercises</c><01:01:45.920><c> on</c><01:01:46.079><c> the</c><01:01:46.160><c> next</c><01:01:46.400><c> lab</c>

01:01:46.710 --> 01:01:46.720 align:start position:0%
one of the exercises on the next lab
 

01:01:46.720 --> 01:01:48.630 align:start position:0%
one of the exercises on the next lab
will<01:01:46.960><c> be</c><01:01:47.119><c> to</c><01:01:47.359><c> implement</c><01:01:47.839><c> your</c><01:01:48.000><c> own</c>

01:01:48.630 --> 01:01:48.640 align:start position:0%
will be to implement your own
 

01:01:48.640 --> 01:01:51.190 align:start position:0%
will be to implement your own
backtrace<01:01:49.520><c> helper</c><01:01:49.920><c> function</c><01:01:50.400><c> for</c><01:01:50.640><c> use</c><01:01:50.960><c> when</c>

01:01:51.190 --> 01:01:51.200 align:start position:0%
backtrace helper function for use when
 

01:01:51.200 --> 01:01:53.990 align:start position:0%
backtrace helper function for use when
debugging<01:01:51.839><c> things</c><01:01:52.160><c> inside</c><01:01:52.400><c> the</c><01:01:52.559><c> lab</c>

01:01:53.990 --> 01:01:54.000 align:start position:0%
debugging things inside the lab
 

01:01:54.000 --> 01:01:56.069 align:start position:0%
debugging things inside the lab
and<01:01:54.160><c> so</c><01:01:54.400><c> back</c><01:01:54.640><c> back</c><01:01:54.799><c> traces</c><01:01:55.280><c> uh</c><01:01:55.440><c> is</c><01:01:55.839><c> quite</c>

01:01:56.069 --> 01:01:56.079 align:start position:0%
and so back back traces uh is quite
 

01:01:56.079 --> 01:01:58.309 align:start position:0%
and so back back traces uh is quite
useful<01:01:56.720><c> and</c><01:01:56.799><c> then</c><01:01:57.039><c> if</c><01:01:57.119><c> we</c><01:01:57.280><c> type</c><01:01:57.520><c> frame</c><01:01:57.680><c> 0</c><01:01:58.000><c> or</c><01:01:58.160><c> we</c>

01:01:58.309 --> 01:01:58.319 align:start position:0%
useful and then if we type frame 0 or we
 

01:01:58.319 --> 01:01:59.349 align:start position:0%
useful and then if we type frame 0 or we
go<01:01:58.480><c> back</c><01:01:58.720><c> to</c>

01:01:59.349 --> 01:01:59.359 align:start position:0%
go back to
 

01:01:59.359 --> 01:02:02.870 align:start position:0%
go back to
where<01:01:59.599><c> we</c><01:01:59.760><c> were</c><01:02:00.079><c> supposed</c><01:02:00.480><c> to</c><01:02:00.720><c> be</c>

01:02:02.870 --> 01:02:02.880 align:start position:0%
where we were supposed to be
 

01:02:02.880 --> 01:02:04.710 align:start position:0%
where we were supposed to be
and<01:02:03.520><c> if</c><01:02:03.680><c> we</c><01:02:03.839><c> want</c><01:02:04.000><c> to</c><01:02:04.160><c> investigate</c><01:02:04.640><c> you</c>

01:02:04.710 --> 01:02:04.720 align:start position:0%
and if we want to investigate you
 

01:02:04.720 --> 01:02:06.710 align:start position:0%
and if we want to investigate you
probably<01:02:04.960><c> noticed</c><01:02:05.520><c> it's</c><01:02:05.680><c> not</c><01:02:05.920><c> super</c><01:02:06.319><c> helpful</c>

01:02:06.710 --> 01:02:06.720 align:start position:0%
probably noticed it's not super helpful
 

01:02:06.720 --> 01:02:09.270 align:start position:0%
probably noticed it's not super helpful
you<01:02:06.799><c> know</c><01:02:07.039><c> rv</c><01:02:07.520><c> is</c><01:02:07.599><c> a</c><01:02:07.760><c> string</c>

01:02:09.270 --> 01:02:09.280 align:start position:0%
you know rv is a string
 

01:02:09.280 --> 01:02:11.029 align:start position:0%
you know rv is a string
as<01:02:09.440><c> an</c><01:02:09.520><c> array</c><01:02:09.839><c> of</c><01:02:09.920><c> strings</c><01:02:10.400><c> and</c><01:02:10.480><c> so</c><01:02:10.720><c> we</c><01:02:10.880><c> just</c>

01:02:11.029 --> 01:02:11.039 align:start position:0%
as an array of strings and so we just
 

01:02:11.039 --> 01:02:12.789 align:start position:0%
as an array of strings and so we just
get<01:02:11.200><c> a</c><01:02:11.359><c> ref</c><01:02:11.680><c> we</c><01:02:11.839><c> just</c><01:02:12.000><c> get</c><01:02:12.240><c> a</c>

01:02:12.789 --> 01:02:12.799 align:start position:0%
get a ref we just get a
 

01:02:12.799 --> 01:02:15.029 align:start position:0%
get a ref we just get a
an<01:02:13.039><c> address</c><01:02:13.839><c> for</c><01:02:14.000><c> where</c><01:02:14.240><c> that's</c><01:02:14.559><c> actually</c>

01:02:15.029 --> 01:02:15.039 align:start position:0%
an address for where that's actually
 

01:02:15.039 --> 01:02:15.910 align:start position:0%
an address for where that's actually
stored

01:02:15.910 --> 01:02:15.920 align:start position:0%
stored
 

01:02:15.920 --> 01:02:17.349 align:start position:0%
stored
and<01:02:16.160><c> if</c><01:02:16.319><c> we</c><01:02:16.400><c> want</c><01:02:16.559><c> to</c><01:02:16.640><c> look</c><01:02:16.880><c> at</c><01:02:16.960><c> what's</c><01:02:17.280><c> in</c>

01:02:17.349 --> 01:02:17.359 align:start position:0%
and if we want to look at what's in
 

01:02:17.359 --> 01:02:18.549 align:start position:0%
and if we want to look at what's in
there<01:02:17.520><c> there's</c><01:02:17.680><c> a</c><01:02:17.760><c> couple</c><01:02:17.920><c> ways</c><01:02:18.160><c> of</c><01:02:18.319><c> doing</c>

01:02:18.549 --> 01:02:18.559 align:start position:0%
there there's a couple ways of doing
 

01:02:18.559 --> 01:02:19.190 align:start position:0%
there there's a couple ways of doing
this

01:02:19.190 --> 01:02:19.200 align:start position:0%
this
 

01:02:19.200 --> 01:02:22.710 align:start position:0%
this
uh<01:02:19.839><c> the</c><01:02:20.000><c> easiest</c><01:02:20.720><c> is</c><01:02:21.200><c> uh</c><01:02:21.520><c> if</c><01:02:21.680><c> we</c><01:02:21.839><c> type</c><01:02:22.079><c> print</c><01:02:22.400><c> p</c>

01:02:22.710 --> 01:02:22.720 align:start position:0%
uh the easiest is uh if we type print p
 

01:02:22.720 --> 01:02:26.150 align:start position:0%
uh the easiest is uh if we type print p
is<01:02:22.880><c> for</c><01:02:23.119><c> print</c><01:02:24.079><c> and</c><01:02:24.400><c> then</c><01:02:24.720><c> if</c><01:02:24.880><c> we</c><01:02:25.520><c> d</c>

01:02:26.150 --> 01:02:26.160 align:start position:0%
is for print and then if we d
 

01:02:26.160 --> 01:02:28.470 align:start position:0%
is for print and then if we d
uh<01:02:26.480><c> dereference</c><01:02:27.200><c> the</c><01:02:27.440><c> address</c><01:02:27.839><c> so</c><01:02:27.920><c> we</c><01:02:28.079><c> go</c><01:02:28.240><c> look</c>

01:02:28.470 --> 01:02:28.480 align:start position:0%
uh dereference the address so we go look
 

01:02:28.480 --> 01:02:29.270 align:start position:0%
uh dereference the address so we go look
at<01:02:28.559><c> what's</c><01:02:28.799><c> at</c><01:02:28.880><c> the</c>

01:02:29.270 --> 01:02:29.280 align:start position:0%
at what's at the
 

01:02:29.280 --> 01:02:32.309 align:start position:0%
at what's at the
address<01:02:29.920><c> we</c><01:02:30.160><c> can</c><01:02:30.319><c> do</c><01:02:31.039><c> that</c><01:02:31.839><c> and</c>

01:02:32.309 --> 01:02:32.319 align:start position:0%
address we can do that and
 

01:02:32.319 --> 01:02:35.109 align:start position:0%
address we can do that and
you<01:02:32.400><c> know</c><01:02:32.559><c> as</c><01:02:32.720><c> you</c><01:02:32.880><c> would</c><01:02:33.119><c> expect</c><01:02:34.720><c> we</c><01:02:34.799><c> get</c><01:02:35.039><c> the</c>

01:02:35.109 --> 01:02:35.119 align:start position:0%
you know as you would expect we get the
 

01:02:35.119 --> 01:02:37.510 align:start position:0%
you know as you would expect we get the
first<01:02:35.520><c> element</c><01:02:36.000><c> of</c><01:02:36.079><c> that</c><01:02:36.319><c> array</c><01:02:36.799><c> because</c>

01:02:37.510 --> 01:02:37.520 align:start position:0%
first element of that array because
 

01:02:37.520 --> 01:02:39.750 align:start position:0%
first element of that array because
when<01:02:37.760><c> it</c><01:02:37.839><c> tries</c><01:02:38.240><c> to</c><01:02:38.400><c> print</c><01:02:38.640><c> a</c><01:02:38.799><c> string</c><01:02:39.200><c> it'll</c><01:02:39.520><c> go</c>

01:02:39.750 --> 01:02:39.760 align:start position:0%
when it tries to print a string it'll go
 

01:02:39.760 --> 01:02:41.430 align:start position:0%
when it tries to print a string it'll go
you<01:02:39.920><c> know</c><01:02:40.000><c> as</c><01:02:40.160><c> c</c><01:02:40.400><c> says</c><01:02:40.640><c> it'll</c><01:02:40.799><c> go</c><01:02:40.960><c> in</c><01:02:41.119><c> until</c><01:02:41.359><c> it</c>

01:02:41.430 --> 01:02:41.440 align:start position:0%
you know as c says it'll go in until it
 

01:02:41.440 --> 01:02:43.029 align:start position:0%
you know as c says it'll go in until it
hits<01:02:41.680><c> the</c><01:02:41.839><c> null</c><01:02:42.079><c> character</c>

01:02:43.029 --> 01:02:43.039 align:start position:0%
hits the null character
 

01:02:43.039 --> 01:02:44.710 align:start position:0%
hits the null character
so<01:02:43.280><c> we</c><01:02:43.359><c> get</c><01:02:43.599><c> foo</c><01:02:43.920><c> which</c><01:02:44.079><c> is</c><01:02:44.160><c> the</c><01:02:44.240><c> first</c><01:02:44.400><c> element</c>

01:02:44.710 --> 01:02:44.720 align:start position:0%
so we get foo which is the first element
 

01:02:44.720 --> 01:02:46.150 align:start position:0%
so we get foo which is the first element
that<01:02:44.880><c> array</c><01:02:45.119><c> and</c><01:02:45.280><c> if</c><01:02:45.359><c> we</c><01:02:45.440><c> want</c><01:02:45.599><c> to</c><01:02:45.680><c> get</c><01:02:45.839><c> more</c>

01:02:46.150 --> 01:02:46.160 align:start position:0%
that array and if we want to get more
 

01:02:46.160 --> 01:02:47.029 align:start position:0%
that array and if we want to get more
things

01:02:47.029 --> 01:02:47.039 align:start position:0%
things
 

01:02:47.039 --> 01:02:50.390 align:start position:0%
things
we<01:02:47.200><c> can</c><01:02:48.000><c> put</c><01:02:48.240><c> in</c><01:02:48.400><c> the</c><01:02:48.480><c> length</c><01:02:48.960><c> so</c><01:02:49.200><c> if</c><01:02:49.280><c> we</c><01:02:49.440><c> do</c>

01:02:50.390 --> 01:02:50.400 align:start position:0%
we can put in the length so if we do
 

01:02:50.400 --> 01:02:51.670 align:start position:0%
we can put in the length so if we do
and<01:02:50.480><c> then</c><01:02:50.720><c> a</c><01:02:50.799><c> number</c><01:02:51.039><c> it'll</c><01:02:51.280><c> go</c><01:02:51.359><c> up</c><01:02:51.520><c> to</c><01:02:51.599><c> a</c>

01:02:51.670 --> 01:02:51.680 align:start position:0%
and then a number it'll go up to a
 

01:02:51.680 --> 01:02:53.829 align:start position:0%
and then a number it'll go up to a
certain<01:02:52.079><c> index</c><01:02:52.799><c> so</c><01:02:52.960><c> then</c><01:02:53.200><c> we</c><01:02:53.359><c> can</c><01:02:53.520><c> see</c>

01:02:53.829 --> 01:02:53.839 align:start position:0%
certain index so then we can see
 

01:02:53.839 --> 01:02:57.109 align:start position:0%
certain index so then we can see
both<01:02:54.079><c> of</c><01:02:54.240><c> the</c><01:02:54.400><c> strings</c><01:02:54.799><c> here</c><01:02:55.839><c> and</c>

01:02:57.109 --> 01:02:57.119 align:start position:0%
both of the strings here and
 

01:02:57.119 --> 01:02:59.510 align:start position:0%
both of the strings here and
you<01:02:57.200><c> know</c><01:02:57.359><c> again</c><01:02:57.599><c> gdb</c><01:02:58.079><c> is</c><01:02:58.240><c> quite</c><01:02:58.400><c> smart</c><01:02:58.799><c> so</c><01:02:59.359><c> we</c>

01:02:59.510 --> 01:02:59.520 align:start position:0%
you know again gdb is quite smart so we
 

01:02:59.520 --> 01:03:01.349 align:start position:0%
you know again gdb is quite smart so we
can<01:02:59.760><c> even</c>

01:03:01.349 --> 01:03:01.359 align:start position:0%
can even
 

01:03:01.359 --> 01:03:03.829 align:start position:0%
can even
use<01:03:01.599><c> rxe</c><01:03:02.240><c> to</c><01:03:02.400><c> print</c><01:03:02.720><c> out</c><01:03:02.880><c> the</c><01:03:03.039><c> whole</c><01:03:03.440><c> argument</c>

01:03:03.829 --> 01:03:03.839 align:start position:0%
use rxe to print out the whole argument
 

01:03:03.839 --> 01:03:05.510 align:start position:0%
use rxe to print out the whole argument
array

01:03:05.510 --> 01:03:05.520 align:start position:0%
array
 

01:03:05.520 --> 01:03:07.750 align:start position:0%
array
and<01:03:05.680><c> so</c><01:03:05.920><c> all</c><01:03:06.000><c> of</c><01:03:06.079><c> that</c><01:03:06.319><c> information</c><01:03:07.520><c> is</c>

01:03:07.750 --> 01:03:07.760 align:start position:0%
and so all of that information is
 

01:03:07.760 --> 01:03:10.390 align:start position:0%
and so all of that information is
available<01:03:08.240><c> to</c><01:03:08.400><c> you</c>

01:03:10.390 --> 01:03:10.400 align:start position:0%
available to you
 

01:03:10.400 --> 01:03:12.710 align:start position:0%
available to you
however<01:03:10.880><c> you</c><01:03:11.200><c> you</c><01:03:11.359><c> want</c><01:03:11.599><c> to</c><01:03:11.680><c> get</c><01:03:11.839><c> it</c><01:03:12.000><c> so</c><01:03:12.240><c> gdp</c><01:03:12.640><c> is</c>

01:03:12.710 --> 01:03:12.720 align:start position:0%
however you you want to get it so gdp is
 

01:03:12.720 --> 01:03:14.789 align:start position:0%
however you you want to get it so gdp is
a<01:03:12.799><c> super</c><01:03:13.039><c> powerful</c><01:03:13.440><c> tool</c>

01:03:14.789 --> 01:03:14.799 align:start position:0%
a super powerful tool
 

01:03:14.799 --> 01:03:17.190 align:start position:0%
a super powerful tool
why<01:03:15.039><c> does</c><01:03:15.359><c> gdb</c><01:03:15.920><c> or</c><01:03:16.400><c> sorry</c><01:03:16.720><c> why</c><01:03:16.880><c> does</c><01:03:17.039><c> the</c>

01:03:17.190 --> 01:03:17.200 align:start position:0%
why does gdb or sorry why does the
 

01:03:17.200 --> 01:03:18.309 align:start position:0%
why does gdb or sorry why does the
compiler<01:03:17.760><c> sometimes</c>

01:03:18.309 --> 01:03:18.319 align:start position:0%
compiler sometimes
 

01:03:18.319 --> 01:03:21.430 align:start position:0%
compiler sometimes
optimize<01:03:19.039><c> out</c><01:03:19.680><c> rg</c><01:03:21.119><c> c</c>

01:03:21.430 --> 01:03:21.440 align:start position:0%
optimize out rg c
 

01:03:21.440 --> 01:03:24.309 align:start position:0%
optimize out rg c
and<01:03:21.599><c> rgb</c><01:03:22.319><c> that</c><01:03:22.480><c> has</c><01:03:22.720><c> happened</c><01:03:22.960><c> to</c><01:03:23.039><c> be</c><01:03:23.200><c> before</c>

01:03:24.309 --> 01:03:24.319 align:start position:0%
and rgb that has happened to be before
 

01:03:24.319 --> 01:03:25.670 align:start position:0%
and rgb that has happened to be before
yeah<01:03:24.559><c> uh</c><01:03:24.880><c> that</c><01:03:25.039><c> just</c><01:03:25.200><c> means</c><01:03:25.440><c> that</c><01:03:25.599><c> the</c>

01:03:25.670 --> 01:03:25.680 align:start position:0%
yeah uh that just means that the
 

01:03:25.680 --> 01:03:28.150 align:start position:0%
yeah uh that just means that the
compiler<01:03:26.240><c> found</c><01:03:26.559><c> a</c><01:03:26.640><c> more</c><01:03:26.960><c> efficient</c><01:03:27.359><c> way</c>

01:03:28.150 --> 01:03:28.160 align:start position:0%
compiler found a more efficient way
 

01:03:28.160 --> 01:03:29.589 align:start position:0%
compiler found a more efficient way
likely<01:03:28.480><c> it</c><01:03:28.559><c> just</c><01:03:28.720><c> got</c><01:03:28.960><c> rid</c><01:03:29.119><c> of</c><01:03:29.200><c> the</c><01:03:29.280><c> variable</c>

01:03:29.589 --> 01:03:29.599 align:start position:0%
likely it just got rid of the variable
 

01:03:29.599 --> 01:03:31.829 align:start position:0%
likely it just got rid of the variable
and<01:03:29.760><c> it's</c><01:03:30.000><c> doing</c><01:03:30.240><c> all</c><01:03:30.400><c> of</c><01:03:30.480><c> its</c><01:03:30.640><c> operations</c>

01:03:31.829 --> 01:03:31.839 align:start position:0%
and it's doing all of its operations
 

01:03:31.839 --> 01:03:34.470 align:start position:0%
and it's doing all of its operations
um<01:03:32.319><c> directly</c><01:03:32.880><c> you</c><01:03:33.039><c> know</c><01:03:33.680><c> via</c><01:03:33.920><c> regis</c><01:03:34.240><c> it</c><01:03:34.319><c> might</c>

01:03:34.470 --> 01:03:34.480 align:start position:0%
um directly you know via regis it might
 

01:03:34.480 --> 01:03:36.630 align:start position:0%
um directly you know via regis it might
be<01:03:34.640><c> doing</c><01:03:34.880><c> all</c><01:03:35.039><c> of</c><01:03:35.119><c> its</c><01:03:35.280><c> operations</c><01:03:35.760><c> on</c><01:03:35.920><c> a0</c><01:03:36.400><c> for</c>

01:03:36.630 --> 01:03:36.640 align:start position:0%
be doing all of its operations on a0 for
 

01:03:36.640 --> 01:03:37.829 align:start position:0%
be doing all of its operations on a0 for
example

01:03:37.829 --> 01:03:37.839 align:start position:0%
example
 

01:03:37.839 --> 01:03:39.029 align:start position:0%
example
it<01:03:37.920><c> might</c><01:03:38.160><c> just</c><01:03:38.319><c> be</c><01:03:38.480><c> doing</c><01:03:38.720><c> all</c><01:03:38.880><c> of</c><01:03:38.960><c> its</c>

01:03:39.029 --> 01:03:39.039 align:start position:0%
it might just be doing all of its
 

01:03:39.039 --> 01:03:41.029 align:start position:0%
it might just be doing all of its
computations<01:03:39.680><c> on</c><01:03:39.839><c> the</c><01:03:39.920><c> return</c><01:03:40.240><c> address</c>

01:03:41.029 --> 01:03:41.039 align:start position:0%
computations on the return address
 

01:03:41.039 --> 01:03:42.630 align:start position:0%
computations on the return address
it's<01:03:41.280><c> pretty</c><01:03:41.440><c> common</c><01:03:41.760><c> to</c><01:03:41.920><c> see</c><01:03:42.079><c> something</c><01:03:42.400><c> like</c>

01:03:42.630 --> 01:03:42.640 align:start position:0%
it's pretty common to see something like
 

01:03:42.640 --> 01:03:44.549 align:start position:0%
it's pretty common to see something like
that<01:03:42.960><c> if</c><01:03:43.119><c> you</c><01:03:43.440><c> um</c>

01:03:44.549 --> 01:03:44.559 align:start position:0%
that if you um
 

01:03:44.559 --> 01:03:46.309 align:start position:0%
that if you um
if<01:03:44.720><c> it's</c><01:03:44.880><c> a</c><01:03:44.960><c> variable</c><01:03:45.359><c> that's</c><01:03:45.680><c> not</c><01:03:46.000><c> you</c><01:03:46.079><c> know</c>

01:03:46.309 --> 01:03:46.319 align:start position:0%
if it's a variable that's not you know
 

01:03:46.319 --> 01:03:47.589 align:start position:0%
if it's a variable that's not you know
100

01:03:47.589 --> 01:03:47.599 align:start position:0%
100
 

01:03:47.599 --> 01:03:50.309 align:start position:0%
100
necessary<01:03:48.799><c> uh</c><01:03:49.039><c> if</c><01:03:49.200><c> you</c><01:03:49.760><c> you</c><01:03:49.839><c> know</c><01:03:50.000><c> we</c><01:03:50.160><c> don't</c>

01:03:50.309 --> 01:03:50.319 align:start position:0%
necessary uh if you you know we don't
 

01:03:50.319 --> 01:03:50.710 align:start position:0%
necessary uh if you you know we don't
let

01:03:50.710 --> 01:03:50.720 align:start position:0%
let
 

01:03:50.720 --> 01:03:51.910 align:start position:0%
let
we<01:03:50.799><c> don't</c><01:03:51.039><c> give</c><01:03:51.200><c> you</c><01:03:51.359><c> control</c><01:03:51.680><c> over</c><01:03:51.839><c> the</c>

01:03:51.910 --> 01:03:51.920 align:start position:0%
we don't give you control over the
 

01:03:51.920 --> 01:03:53.430 align:start position:0%
we don't give you control over the
compiler<01:03:52.400><c> but</c><01:03:52.559><c> if</c><01:03:52.640><c> you</c><01:03:52.799><c> ever</c><01:03:52.960><c> find</c><01:03:53.200><c> that</c><01:03:53.359><c> in</c>

01:03:53.430 --> 01:03:53.440 align:start position:0%
compiler but if you ever find that in
 

01:03:53.440 --> 01:03:54.470 align:start position:0%
compiler but if you ever find that in
your<01:03:53.599><c> day-to-day</c>

01:03:54.470 --> 01:03:54.480 align:start position:0%
your day-to-day
 

01:03:54.480 --> 01:03:57.029 align:start position:0%
your day-to-day
you<01:03:54.640><c> can</c><01:03:54.880><c> try</c><01:03:55.280><c> setting</c><01:03:55.760><c> the</c><01:03:56.160><c> optimization</c>

01:03:57.029 --> 01:03:57.039 align:start position:0%
you can try setting the optimization
 

01:03:57.039 --> 01:03:59.589 align:start position:0%
you can try setting the optimization
flag<01:03:57.520><c> for</c><01:03:57.760><c> the</c><01:03:57.920><c> compiler</c><01:03:58.400><c> to</c><01:03:58.559><c> zero</c>

01:03:59.589 --> 01:03:59.599 align:start position:0%
flag for the compiler to zero
 

01:03:59.599 --> 01:04:01.910 align:start position:0%
flag for the compiler to zero
um<01:04:00.079><c> but</c><01:04:00.319><c> even</c><01:04:00.559><c> then</c><01:04:01.039><c> you</c><01:04:01.119><c> know</c><01:04:01.280><c> the</c><01:04:01.359><c> compiler</c>

01:04:01.910 --> 01:04:01.920 align:start position:0%
um but even then you know the compiler
 

01:04:01.920 --> 01:04:03.829 align:start position:0%
um but even then you know the compiler
will<01:04:02.079><c> do</c><01:04:02.480><c> we'll</c><01:04:02.640><c> do</c><01:04:02.799><c> its</c><01:04:03.039><c> we'll</c><01:04:03.200><c> do</c><01:04:03.359><c> some</c><01:04:03.599><c> level</c>

01:04:03.829 --> 01:04:03.839 align:start position:0%
will do we'll do its we'll do some level
 

01:04:03.839 --> 01:04:05.510 align:start position:0%
will do we'll do its we'll do some level
of<01:04:03.920><c> optimization</c>

01:04:05.510 --> 01:04:05.520 align:start position:0%
of optimization
 

01:04:05.520 --> 01:04:08.789 align:start position:0%
of optimization
uh<01:04:06.240><c> your</c><01:04:06.480><c> hand</c><01:04:06.720><c> is</c><01:04:06.880><c> raised</c><01:04:08.319><c> yeah</c>

01:04:08.789 --> 01:04:08.799 align:start position:0%
uh your hand is raised yeah
 

01:04:08.799 --> 01:04:12.150 align:start position:0%
uh your hand is raised yeah
um<01:04:10.000><c> what's</c><01:04:10.400><c> the</c><01:04:10.880><c> address</c><01:04:11.520><c> besides</c>

01:04:12.150 --> 01:04:12.160 align:start position:0%
um what's the address besides
 

01:04:12.160 --> 01:04:14.309 align:start position:0%
um what's the address besides
that<01:04:12.559><c> dollar</c><01:04:13.039><c> one</c><01:04:13.280><c> or</c><01:04:13.440><c> dollar</c><01:04:13.760><c> two</c><01:04:14.000><c> you</c><01:04:14.160><c> know</c>

01:04:14.309 --> 01:04:14.319 align:start position:0%
that dollar one or dollar two you know
 

01:04:14.319 --> 01:04:15.750 align:start position:0%
that dollar one or dollar two you know
like<01:04:14.720><c> before</c><01:04:15.200><c> foo</c>

01:04:15.750 --> 01:04:15.760 align:start position:0%
like before foo
 

01:04:15.760 --> 01:04:18.950 align:start position:0%
like before foo
or<01:04:16.000><c> bar</c><01:04:16.640><c> uh</c><01:04:16.880><c> dollar</c><01:04:17.599><c> this</c>

01:04:18.950 --> 01:04:18.960 align:start position:0%
or bar uh dollar this
 

01:04:18.960 --> 01:04:21.349 align:start position:0%
or bar uh dollar this
yeah<01:04:19.119><c> so</c><01:04:19.280><c> what's</c><01:04:19.520><c> that</c><01:04:19.760><c> address</c><01:04:20.559><c> is</c><01:04:20.880><c> that</c><01:04:21.200><c> the</c>

01:04:21.349 --> 01:04:21.359 align:start position:0%
yeah so what's that address is that the
 

01:04:21.359 --> 01:04:22.309 align:start position:0%
yeah so what's that address is that the
address<01:04:21.680><c> where</c>

01:04:22.309 --> 01:04:22.319 align:start position:0%
address where
 

01:04:22.319 --> 01:04:26.069 align:start position:0%
address where
foo<01:04:22.720><c> is</c><01:04:23.599><c> probably</c><01:04:24.839><c> yeah</c>

01:04:26.069 --> 01:04:26.079 align:start position:0%
foo is probably yeah
 

01:04:26.079 --> 01:04:28.309 align:start position:0%
foo is probably yeah
but<01:04:26.240><c> but</c><01:04:26.400><c> then</c><01:04:26.720><c> rv</c><01:04:27.359><c> points</c><01:04:27.680><c> to</c><01:04:27.920><c> some</c><01:04:28.079><c> other</c>

01:04:28.309 --> 01:04:28.319 align:start position:0%
but but then rv points to some other
 

01:04:28.319 --> 01:04:30.789 align:start position:0%
but but then rv points to some other
address<01:04:28.960><c> shouldn't</c><01:04:29.280><c> those</c><01:04:29.520><c> be</c><01:04:29.680><c> the</c><01:04:29.839><c> same</c>

01:04:30.789 --> 01:04:30.799 align:start position:0%
address shouldn't those be the same
 

01:04:30.799 --> 01:04:35.109 align:start position:0%
address shouldn't those be the same
uh<01:04:32.000><c> so</c><01:04:32.240><c> our</c><01:04:32.559><c> rv</c><01:04:33.039><c> is</c><01:04:33.200><c> on</c><01:04:33.359><c> the</c><01:04:33.599><c> stack</c>

01:04:35.109 --> 01:04:35.119 align:start position:0%
uh so our rv is on the stack
 

01:04:35.119 --> 01:04:38.230 align:start position:0%
uh so our rv is on the stack
and<01:04:36.480><c> it'll</c><01:04:37.119><c> so</c><01:04:37.280><c> the</c><01:04:37.440><c> reason</c><01:04:37.760><c> why</c>

01:04:38.230 --> 01:04:38.240 align:start position:0%
and it'll so the reason why
 

01:04:38.240 --> 01:04:39.910 align:start position:0%
and it'll so the reason why
you<01:04:38.319><c> know</c><01:04:38.480><c> if</c><01:04:38.559><c> you</c><01:04:38.720><c> look</c><01:04:38.880><c> at</c><01:04:38.960><c> these</c><01:04:39.280><c> addresses</c>

01:04:39.910 --> 01:04:39.920 align:start position:0%
you know if you look at these addresses
 

01:04:39.920 --> 01:04:41.670 align:start position:0%
you know if you look at these addresses
we<01:04:40.000><c> can</c><01:04:40.160><c> see</c><01:04:40.319><c> that</c><01:04:40.480><c> they're</c><01:04:40.640><c> in</c><01:04:40.720><c> the</c><01:04:40.880><c> kernel</c>

01:04:41.670 --> 01:04:41.680 align:start position:0%
we can see that they're in the kernel
 

01:04:41.680 --> 01:04:44.710 align:start position:0%
we can see that they're in the kernel
uh<01:04:42.000><c> just</c><01:04:42.319><c> by</c><01:04:42.480><c> the</c><01:04:42.799><c> eight</c><01:04:43.039><c> zero</c><01:04:43.280><c> zero</c><01:04:43.760><c> zero</c>

01:04:44.710 --> 01:04:44.720 align:start position:0%
uh just by the eight zero zero zero
 

01:04:44.720 --> 01:04:47.510 align:start position:0%
uh just by the eight zero zero zero
um<01:04:45.200><c> which</c><01:04:45.440><c> makes</c><01:04:45.680><c> sense</c><01:04:46.000><c> because</c><01:04:46.400><c> we</c><01:04:47.359><c> they're</c>

01:04:47.510 --> 01:04:47.520 align:start position:0%
um which makes sense because we they're
 

01:04:47.520 --> 01:04:49.910 align:start position:0%
um which makes sense because we they're
declared<01:04:48.000><c> statically</c><01:04:48.640><c> right</c><01:04:48.880><c> so</c><01:04:49.119><c> in</c><01:04:49.280><c> demos</c><01:04:49.760><c> if</c>

01:04:49.910 --> 01:04:49.920 align:start position:0%
declared statically right so in demos if
 

01:04:49.920 --> 01:04:51.910 align:start position:0%
declared statically right so in demos if
i<01:04:50.000><c> go</c><01:04:50.160><c> here</c><01:04:50.480><c> they're</c><01:04:50.640><c> declared</c><01:04:51.119><c> here</c>

01:04:51.910 --> 01:04:51.920 align:start position:0%
i go here they're declared here
 

01:04:51.920 --> 01:04:53.270 align:start position:0%
i go here they're declared here
and<01:04:52.079><c> so</c><01:04:52.240><c> they're</c><01:04:52.400><c> basically</c><01:04:52.799><c> they're</c><01:04:52.960><c> sitting</c>

01:04:53.270 --> 01:04:53.280 align:start position:0%
and so they're basically they're sitting
 

01:04:53.280 --> 01:04:55.270 align:start position:0%
and so they're basically they're sitting
somewhere<01:04:53.599><c> in</c><01:04:53.680><c> the</c><01:04:53.920><c> kernel</c><01:04:54.720><c> and</c><01:04:54.880><c> they're</c><01:04:55.119><c> all</c>

01:04:55.270 --> 01:04:55.280 align:start position:0%
somewhere in the kernel and they're all
 

01:04:55.280 --> 01:04:56.069 align:start position:0%
somewhere in the kernel and they're all
car<01:04:55.520><c> stars</c>

01:04:56.069 --> 01:04:56.079 align:start position:0%
car stars
 

01:04:56.079 --> 01:04:59.990 align:start position:0%
car stars
args<01:04:56.880><c> arcs</c><01:04:57.440><c> or</c><01:04:57.599><c> rv</c><01:04:58.640><c> is</c><01:04:58.799><c> an</c><01:04:58.960><c> array</c><01:04:59.200><c> of</c><01:04:59.359><c> car</c><01:04:59.599><c> stars</c>

01:04:59.990 --> 01:05:00.000 align:start position:0%
args arcs or rv is an array of car stars
 

01:05:00.000 --> 01:05:02.230 align:start position:0%
args arcs or rv is an array of car stars
and<01:05:00.079><c> so</c><01:05:00.319><c> i</c><01:05:00.400><c> imagine</c><01:05:00.720><c> that</c><01:05:00.880><c> each</c><01:05:01.119><c> element</c>

01:05:02.230 --> 01:05:02.240 align:start position:0%
and so i imagine that each element
 

01:05:02.240 --> 01:05:05.750 align:start position:0%
and so i imagine that each element
points<01:05:02.559><c> to</c><01:05:04.319><c> points</c><01:05:04.640><c> to</c>

01:05:05.750 --> 01:05:05.760 align:start position:0%
points to points to
 

01:05:05.760 --> 01:05:08.230 align:start position:0%
points to points to
its<01:05:05.920><c> own</c><01:05:06.160><c> string</c><01:05:06.480><c> right</c><01:05:06.960><c> so</c><01:05:07.680><c> it's</c><01:05:07.760><c> an</c><01:05:07.920><c> array</c><01:05:08.160><c> of</c>

01:05:08.230 --> 01:05:08.240 align:start position:0%
its own string right so it's an array of
 

01:05:08.240 --> 01:05:20.829 align:start position:0%
its own string right so it's an array of
pointers

01:05:20.829 --> 01:05:20.839 align:start position:0%
 
 

01:05:20.839 --> 01:05:24.630 align:start position:0%
 
crazy

01:05:24.630 --> 01:05:24.640 align:start position:0%
 
 

01:05:24.640 --> 01:05:27.349 align:start position:0%
 
i<01:05:24.960><c> also</c><01:05:25.200><c> have</c><01:05:25.359><c> a</c><01:05:25.440><c> question</c><01:05:25.680><c> about</c><01:05:25.920><c> this</c><01:05:26.400><c> uh</c><01:05:26.720><c> the</c>

01:05:27.349 --> 01:05:27.359 align:start position:0%
i also have a question about this uh the
 

01:05:27.359 --> 01:05:29.270 align:start position:0%
i also have a question about this uh the
dollar<01:05:27.839><c> three</c><01:05:28.160><c> version</c><01:05:28.480><c> of</c>

01:05:29.270 --> 01:05:29.280 align:start position:0%
dollar three version of
 

01:05:29.280 --> 01:05:32.470 align:start position:0%
dollar three version of
the<01:05:29.839><c> array</c><01:05:31.280><c> has</c><01:05:31.839><c> if</c><01:05:32.000><c> i</c><01:05:32.079><c> look</c>

01:05:32.470 --> 01:05:32.480 align:start position:0%
the array has if i look
 

01:05:32.480 --> 01:05:35.270 align:start position:0%
the array has if i look
at<01:05:32.559><c> these</c><01:05:32.799><c> addresses</c><01:05:33.839><c> the</c><01:05:34.000><c> first</c><01:05:34.240><c> one</c><01:05:34.400><c> is</c>

01:05:35.270 --> 01:05:35.280 align:start position:0%
at these addresses the first one is
 

01:05:35.280 --> 01:05:35.990 align:start position:0%
at these addresses the first one is
suffixed<01:05:35.760><c> by</c>

01:05:35.990 --> 01:05:36.000 align:start position:0%
suffixed by
 

01:05:36.000 --> 01:05:39.589 align:start position:0%
suffixed by
38.<01:05:37.599><c> second</c><01:05:37.920><c> one</c><01:05:38.079><c> is</c><01:05:38.160><c> suffixed</c><01:05:38.640><c> by</c><01:05:38.880><c> 40.</c>

01:05:39.589 --> 01:05:39.599 align:start position:0%
38. second one is suffixed by 40.
 

01:05:39.599 --> 01:05:43.190 align:start position:0%
38. second one is suffixed by 40.
the<01:05:39.760><c> third</c><01:05:40.079><c> one</c><01:05:40.240><c> is</c><01:05:41.039><c> 48</c><01:05:42.480><c> which</c><01:05:42.720><c> is</c>

01:05:43.190 --> 01:05:43.200 align:start position:0%
the third one is 48 which is
 

01:05:43.200 --> 01:05:45.510 align:start position:0%
the third one is 48 which is
not<01:05:43.440><c> uniform</c><01:05:44.160><c> even</c><01:05:44.480><c> though</c><01:05:44.880><c> the</c><01:05:45.039><c> length</c><01:05:45.359><c> of</c>

01:05:45.510 --> 01:05:45.520 align:start position:0%
not uniform even though the length of
 

01:05:45.520 --> 01:05:47.990 align:start position:0%
not uniform even though the length of
each<01:05:46.000><c> of</c><01:05:46.079><c> the</c><01:05:46.319><c> three</c><01:05:46.559><c> arguments</c>

01:05:47.990 --> 01:05:48.000 align:start position:0%
each of the three arguments
 

01:05:48.000 --> 01:05:51.109 align:start position:0%
each of the three arguments
is<01:05:48.240><c> three</c><01:05:49.200><c> so</c><01:05:49.520><c> why</c><01:05:49.520><c> why</c><01:05:50.079><c> are</c><01:05:50.160><c> they</c><01:05:50.319><c> different</c>

01:05:51.109 --> 01:05:51.119 align:start position:0%
is three so why why are they different
 

01:05:51.119 --> 01:05:54.470 align:start position:0%
is three so why why are they different
uh<01:05:52.400><c> not</c><01:05:52.720><c> in</c><01:05:53.039><c> i'm</c><01:05:53.200><c> not</c><01:05:53.359><c> 100</c>

01:05:54.470 --> 01:05:54.480 align:start position:0%
uh not in i'm not 100
 

01:05:54.480 --> 01:05:56.150 align:start position:0%
uh not in i'm not 100
certain<01:05:54.960><c> my</c><01:05:55.200><c> guess</c><01:05:55.440><c> is</c><01:05:55.599><c> that</c><01:05:55.680><c> this</c><01:05:55.920><c> is</c><01:05:56.000><c> an</c>

01:05:56.150 --> 01:05:56.160 align:start position:0%
certain my guess is that this is an
 

01:05:56.160 --> 01:05:58.710 align:start position:0%
certain my guess is that this is an
attempt<01:05:56.640><c> to</c><01:05:57.039><c> align</c><01:05:57.520><c> things</c>

01:05:58.710 --> 01:05:58.720 align:start position:0%
attempt to align things
 

01:05:58.720 --> 01:06:03.430 align:start position:0%
attempt to align things
um<01:06:00.000><c> right</c><01:06:00.319><c> so</c><01:06:01.280><c> to</c><01:06:01.440><c> get</c><01:06:01.599><c> them</c><01:06:01.920><c> on</c><01:06:02.160><c> a</c><01:06:02.240><c> reasonable</c>

01:06:03.430 --> 01:06:03.440 align:start position:0%
um right so to get them on a reasonable
 

01:06:03.440 --> 01:06:06.069 align:start position:0%
um right so to get them on a reasonable
alignment<01:06:04.480><c> and</c><01:06:04.720><c> it</c><01:06:04.880><c> is</c><01:06:05.119><c> uniform</c><01:06:05.599><c> in</c><01:06:05.680><c> hex</c><01:06:05.920><c> as</c>

01:06:06.069 --> 01:06:06.079 align:start position:0%
alignment and it is uniform in hex as
 

01:06:06.079 --> 01:06:08.390 align:start position:0%
alignment and it is uniform in hex as
people<01:06:06.319><c> are</c><01:06:06.400><c> pointing</c><01:06:06.720><c> out</c>

01:06:08.390 --> 01:06:08.400 align:start position:0%
people are pointing out
 

01:06:08.400 --> 01:06:11.750 align:start position:0%
people are pointing out
oh<01:06:10.000><c> right</c><01:06:10.319><c> yeah</c><01:06:10.559><c> yeah</c><01:06:10.720><c> that</c><01:06:10.880><c> makes</c><01:06:11.039><c> sense</c>

01:06:11.750 --> 01:06:11.760 align:start position:0%
oh right yeah yeah that makes sense
 

01:06:11.760 --> 01:06:14.870 align:start position:0%
oh right yeah yeah that makes sense
oh<01:06:12.480><c> oh</c><01:06:12.880><c> yes</c><01:06:13.119><c> i</c><01:06:13.200><c> see</c><01:06:13.440><c> it</c><01:06:13.599><c> now</c><01:06:14.000><c> yeah</c><01:06:14.400><c> right</c>

01:06:14.870 --> 01:06:14.880 align:start position:0%
oh oh yes i see it now yeah right
 

01:06:14.880 --> 01:06:17.029 align:start position:0%
oh oh yes i see it now yeah right
thanks<01:06:16.000><c> so</c><01:06:16.160><c> you'll</c><01:06:16.319><c> sometimes</c><01:06:16.640><c> see</c><01:06:16.880><c> where</c>

01:06:17.029 --> 01:06:17.039 align:start position:0%
thanks so you'll sometimes see where
 

01:06:17.039 --> 01:06:18.150 align:start position:0%
thanks so you'll sometimes see where
straight<01:06:17.440><c> things</c><01:06:17.680><c> are</c>

01:06:18.150 --> 01:06:18.160 align:start position:0%
straight things are
 

01:06:18.160 --> 01:06:20.309 align:start position:0%
straight things are
laid<01:06:18.400><c> out</c><01:06:18.559><c> strangely</c><01:06:19.599><c> where</c><01:06:19.760><c> there</c><01:06:20.000><c> might</c><01:06:20.160><c> be</c>

01:06:20.309 --> 01:06:20.319 align:start position:0%
laid out strangely where there might be
 

01:06:20.319 --> 01:06:22.390 align:start position:0%
laid out strangely where there might be
two<01:06:20.559><c> things</c><01:06:21.039><c> at</c><01:06:21.200><c> strange</c><01:06:21.599><c> offsets</c><01:06:22.000><c> and</c><01:06:22.079><c> that's</c>

01:06:22.390 --> 01:06:22.400 align:start position:0%
two things at strange offsets and that's
 

01:06:22.400 --> 01:06:22.710 align:start position:0%
two things at strange offsets and that's
just

01:06:22.710 --> 01:06:22.720 align:start position:0%
just
 

01:06:22.720 --> 01:06:24.789 align:start position:0%
just
because<01:06:22.960><c> not</c><01:06:23.119><c> everything</c><01:06:23.520><c> is</c><01:06:23.680><c> uh</c><01:06:24.240><c> naturally</c>

01:06:24.789 --> 01:06:24.799 align:start position:0%
because not everything is uh naturally
 

01:06:24.799 --> 01:06:26.309 align:start position:0%
because not everything is uh naturally
the<01:06:24.880><c> same</c><01:06:25.119><c> size</c>

01:06:26.309 --> 01:06:26.319 align:start position:0%
the same size
 

01:06:26.319 --> 01:06:37.270 align:start position:0%
the same size
um<01:06:27.359><c> okay</c><01:06:28.240><c> any</c><01:06:28.559><c> other</c><01:06:30.839><c> questions</c>

01:06:37.270 --> 01:06:37.280 align:start position:0%
 
 

01:06:37.280 --> 01:06:41.109 align:start position:0%
 
okay<01:06:38.000><c> uh</c><01:06:38.640><c> we</c><01:06:38.720><c> can</c><01:06:38.960><c> skip</c><01:06:39.440><c> the</c><01:06:39.680><c> fifth</c><01:06:39.920><c> demo</c>

01:06:41.109 --> 01:06:41.119 align:start position:0%
okay uh we can skip the fifth demo
 

01:06:41.119 --> 01:06:43.670 align:start position:0%
okay uh we can skip the fifth demo
and<01:06:41.760><c> so</c><01:06:41.920><c> another</c><01:06:42.319><c> useful</c><01:06:42.880><c> function</c><01:06:43.280><c> that</c><01:06:43.440><c> we</c>

01:06:43.670 --> 01:06:43.680 align:start position:0%
and so another useful function that we
 

01:06:43.680 --> 01:06:44.150 align:start position:0%
and so another useful function that we
get

01:06:44.150 --> 01:06:44.160 align:start position:0%
get
 

01:06:44.160 --> 01:06:48.069 align:start position:0%
get
from<01:06:44.720><c> gdb</c><01:06:45.599><c> are</c>

01:06:48.069 --> 01:06:48.079 align:start position:0%
 
 

01:06:48.079 --> 01:06:50.390 align:start position:0%
 
instead<01:06:48.400><c> of</c><01:06:48.559><c> just</c><01:06:48.880><c> break</c><01:06:49.200><c> points</c><01:06:50.000><c> uh</c><01:06:50.240><c> there</c>

01:06:50.390 --> 01:06:50.400 align:start position:0%
instead of just break points uh there
 

01:06:50.400 --> 01:06:52.390 align:start position:0%
instead of just break points uh there
are<01:06:50.480><c> also</c><01:06:50.880><c> watch</c><01:06:51.200><c> points</c><01:06:51.599><c> and</c><01:06:51.680><c> we</c><01:06:51.839><c> can</c><01:06:52.000><c> also</c>

01:06:52.390 --> 01:06:52.400 align:start position:0%
are also watch points and we can also
 

01:06:52.400 --> 01:06:53.510 align:start position:0%
are also watch points and we can also
set

01:06:53.510 --> 01:06:53.520 align:start position:0%
set
 

01:06:53.520 --> 01:06:58.150 align:start position:0%
set
conditional<01:06:54.079><c> break</c><01:06:54.400><c> points</c><01:06:55.359><c> so</c>

01:06:58.150 --> 01:06:58.160 align:start position:0%
 
 

01:06:58.160 --> 01:07:02.069 align:start position:0%
 
i'll<01:06:58.319><c> just</c><01:06:58.799><c> briefly</c><01:06:59.200><c> go</c><01:06:59.440><c> over</c><01:06:59.599><c> that</c>

01:07:02.069 --> 01:07:02.079 align:start position:0%
 
 

01:07:02.079 --> 01:07:05.670 align:start position:0%
 
we<01:07:02.319><c> run</c><01:07:02.720><c> demo</c><01:07:03.200><c> six</c><01:07:04.079><c> so</c><01:07:04.240><c> we</c><01:07:04.400><c> can</c><01:07:04.720><c> set</c>

01:07:05.670 --> 01:07:05.680 align:start position:0%
we run demo six so we can set
 

01:07:05.680 --> 01:07:07.990 align:start position:0%
we run demo six so we can set
inside<01:07:06.079><c> this</c><01:07:06.319><c> function</c><01:07:06.799><c> we</c><01:07:06.960><c> can</c><01:07:07.359><c> watch</c><01:07:07.680><c> so</c><01:07:07.839><c> we</c>

01:07:07.990 --> 01:07:08.000 align:start position:0%
inside this function we can watch so we
 

01:07:08.000 --> 01:07:09.670 align:start position:0%
inside this function we can watch so we
can<01:07:08.079><c> set</c><01:07:08.319><c> a</c><01:07:08.400><c> watch</c><01:07:08.720><c> point</c>

01:07:09.670 --> 01:07:09.680 align:start position:0%
can set a watch point
 

01:07:09.680 --> 01:07:15.589 align:start position:0%
can set a watch point
um<01:07:10.400><c> i</c><01:07:10.480><c> think</c><01:07:10.799><c> here</c><01:07:11.039><c> you'll</c><01:07:11.359><c> see</c><01:07:12.839><c> um</c>

01:07:15.589 --> 01:07:15.599 align:start position:0%
um i think here you'll see um
 

01:07:15.599 --> 01:07:18.309 align:start position:0%
um i think here you'll see um
yeah<01:07:15.839><c> so</c><01:07:16.000><c> here</c><01:07:16.240><c> you'll</c><01:07:16.480><c> see</c><01:07:16.640><c> what</c><01:07:16.960><c> uh</c><01:07:17.839><c> luca</c><01:07:18.160><c> was</c>

01:07:18.309 --> 01:07:18.319 align:start position:0%
yeah so here you'll see what uh luca was
 

01:07:18.319 --> 01:07:20.150 align:start position:0%
yeah so here you'll see what uh luca was
talking<01:07:18.720><c> about</c><01:07:19.119><c> where</c>

01:07:20.150 --> 01:07:20.160 align:start position:0%
talking about where
 

01:07:20.160 --> 01:07:22.710 align:start position:0%
talking about where
we<01:07:20.319><c> see</c><01:07:20.480><c> that</c><01:07:20.720><c> sum</c><01:07:20.960><c> has</c><01:07:21.119><c> been</c><01:07:21.440><c> optimized</c><01:07:22.000><c> out</c>

01:07:22.710 --> 01:07:22.720 align:start position:0%
we see that sum has been optimized out
 

01:07:22.720 --> 01:07:24.470 align:start position:0%
we see that sum has been optimized out
likely<01:07:23.119><c> because</c><01:07:23.440><c> it's</c><01:07:23.599><c> just</c><01:07:23.760><c> being</c>

01:07:24.470 --> 01:07:24.480 align:start position:0%
likely because it's just being
 

01:07:24.480 --> 01:07:27.589 align:start position:0%
likely because it's just being
put<01:07:24.640><c> in</c><01:07:24.799><c> a</c><01:07:24.880><c> zero</c><01:07:25.200><c> or</c><01:07:25.280><c> something</c><01:07:27.039><c> we</c><01:07:27.200><c> can</c><01:07:27.359><c> look</c>

01:07:27.589 --> 01:07:27.599 align:start position:0%
put in a zero or something we can look
 

01:07:27.599 --> 01:07:29.349 align:start position:0%
put in a zero or something we can look
even<01:07:27.839><c> at</c><01:07:27.920><c> the</c><01:07:28.079><c> assembly</c><01:07:28.559><c> for</c><01:07:28.720><c> this</c><01:07:28.960><c> right</c><01:07:29.200><c> so</c>

01:07:29.349 --> 01:07:29.359 align:start position:0%
even at the assembly for this right so
 

01:07:29.359 --> 01:07:31.349 align:start position:0%
even at the assembly for this right so
we<01:07:29.520><c> can</c><01:07:29.680><c> do</c><01:07:29.839><c> layout</c>

01:07:31.349 --> 01:07:31.359 align:start position:0%
we can do layout
 

01:07:31.359 --> 01:07:34.549 align:start position:0%
we can do layout
splits<01:07:32.960><c> and</c><01:07:33.680><c> yeah</c><01:07:33.920><c> indeed</c><01:07:34.160><c> we</c><01:07:34.240><c> can</c><01:07:34.319><c> see</c><01:07:34.480><c> that</c>

01:07:34.549 --> 01:07:34.559 align:start position:0%
splits and yeah indeed we can see that
 

01:07:34.559 --> 01:07:36.390 align:start position:0%
splits and yeah indeed we can see that
it<01:07:34.720><c> all</c><01:07:34.880><c> just</c><01:07:35.039><c> being</c><01:07:35.280><c> uh</c>

01:07:36.390 --> 01:07:36.400 align:start position:0%
it all just being uh
 

01:07:36.400 --> 01:07:37.910 align:start position:0%
it all just being uh
it's<01:07:36.559><c> all</c><01:07:36.720><c> just</c><01:07:36.880><c> being</c><01:07:37.039><c> done</c><01:07:37.280><c> on</c><01:07:37.359><c> the</c><01:07:37.440><c> stack</c><01:07:37.760><c> it</c>

01:07:37.910 --> 01:07:37.920 align:start position:0%
it's all just being done on the stack it
 

01:07:37.920 --> 01:07:40.150 align:start position:0%
it's all just being done on the stack it
looks<01:07:38.160><c> like</c><01:07:38.319><c> to</c><01:07:38.480><c> me</c>

01:07:40.150 --> 01:07:40.160 align:start position:0%
looks like to me
 

01:07:40.160 --> 01:07:41.950 align:start position:0%
looks like to me
oh<01:07:40.319><c> no</c><01:07:40.480><c> it's</c><01:07:40.640><c> all</c><01:07:40.720><c> just</c><01:07:40.960><c> being</c><01:07:41.119><c> done</c><01:07:41.280><c> in</c><01:07:41.440><c> s0</c>

01:07:41.950 --> 01:07:41.960 align:start position:0%
oh no it's all just being done in s0
 

01:07:41.960 --> 01:07:43.270 align:start position:0%
oh no it's all just being done in s0
s013

01:07:43.270 --> 01:07:43.280 align:start position:0%
s013
 

01:07:43.280 --> 01:07:46.950 align:start position:0%
s013
so<01:07:43.520><c> here</c><01:07:43.760><c> you</c><01:07:43.920><c> can</c><01:07:44.000><c> see</c><01:07:44.160><c> that</c><01:07:44.319><c> the</c><01:07:44.559><c> the</c>

01:07:46.950 --> 01:07:46.960 align:start position:0%
 
 

01:07:46.960 --> 01:07:48.789 align:start position:0%
 
compiler<01:07:47.440><c> decided</c><01:07:47.839><c> even</c><01:07:48.079><c> to</c><01:07:48.160><c> use</c><01:07:48.319><c> the</c><01:07:48.480><c> quality</c>

01:07:48.789 --> 01:07:48.799 align:start position:0%
compiler decided even to use the quality
 

01:07:48.799 --> 01:07:51.349 align:start position:0%
compiler decided even to use the quality
saved<01:07:49.039><c> registers</c>

01:07:51.349 --> 01:07:51.359 align:start position:0%
saved registers
 

01:07:51.359 --> 01:07:54.230 align:start position:0%
saved registers
and<01:07:52.000><c> so</c><01:07:52.160><c> we</c><01:07:52.319><c> can</c><01:07:52.480><c> set</c><01:07:52.720><c> things</c><01:07:53.119><c> like</c><01:07:53.680><c> we</c><01:07:53.839><c> can</c><01:07:53.920><c> do</c>

01:07:54.230 --> 01:07:54.240 align:start position:0%
and so we can set things like we can do
 

01:07:54.240 --> 01:07:55.029 align:start position:0%
and so we can set things like we can do
watch

01:07:55.029 --> 01:07:55.039 align:start position:0%
watch
 

01:07:55.039 --> 01:07:58.230 align:start position:0%
watch
on<01:07:56.880><c> i</c>

01:07:58.230 --> 01:07:58.240 align:start position:0%
on i
 

01:07:58.240 --> 01:08:00.230 align:start position:0%
on i
or<01:07:58.960><c> we</c><01:07:59.119><c> haven't</c><01:07:59.359><c> declared</c><01:07:59.760><c> i</c><01:07:59.920><c> yet</c><01:08:00.079><c> because</c>

01:08:00.230 --> 01:08:00.240 align:start position:0%
or we haven't declared i yet because
 

01:08:00.240 --> 01:08:02.710 align:start position:0%
or we haven't declared i yet because
we're<01:08:00.400><c> not</c><01:08:00.640><c> inside</c>

01:08:02.710 --> 01:08:02.720 align:start position:0%
we're not inside
 

01:08:02.720 --> 01:08:05.990 align:start position:0%
we're not inside
we're<01:08:02.880><c> not</c><01:08:03.119><c> inside</c><01:08:03.839><c> the</c><01:08:04.079><c> for</c><01:08:04.319><c> loop</c><01:08:05.200><c> so</c><01:08:05.440><c> if</c><01:08:05.599><c> we</c>

01:08:05.990 --> 01:08:06.000 align:start position:0%
we're not inside the for loop so if we
 

01:08:06.000 --> 01:08:08.630 align:start position:0%
we're not inside the for loop so if we
step<01:08:06.960><c> through</c><01:08:07.200><c> the</c><01:08:07.280><c> c</c><01:08:07.520><c> instructions</c><01:08:08.240><c> now</c><01:08:08.480><c> if</c>

01:08:08.630 --> 01:08:08.640 align:start position:0%
step through the c instructions now if
 

01:08:08.640 --> 01:08:11.430 align:start position:0%
step through the c instructions now if
we<01:08:08.839><c> do</c><01:08:09.920><c> information</c><01:08:10.400><c> for</c><01:08:10.480><c> the</c><01:08:10.640><c> locals</c><01:08:11.119><c> we</c><01:08:11.280><c> see</c>

01:08:11.430 --> 01:08:11.440 align:start position:0%
we do information for the locals we see
 

01:08:11.440 --> 01:08:12.390 align:start position:0%
we do information for the locals we see
we<01:08:11.599><c> get</c><01:08:11.839><c> i</c>

01:08:12.390 --> 01:08:12.400 align:start position:0%
we get i
 

01:08:12.400 --> 01:08:16.149 align:start position:0%
we get i
we<01:08:12.559><c> can</c><01:08:12.720><c> even</c><01:08:13.039><c> watch</c><01:08:13.440><c> um</c><01:08:14.880><c> watchpoint</c><01:08:15.680><c> on</c>

01:08:16.149 --> 01:08:16.159 align:start position:0%
we can even watch um watchpoint on
 

01:08:16.159 --> 01:08:20.470 align:start position:0%
we can even watch um watchpoint on
sum<01:08:17.600><c> so</c><01:08:18.000><c> now</c><01:08:18.400><c> anytime</c><01:08:18.799><c> that</c><01:08:19.040><c> sum</c><01:08:19.359><c> changes</c>

01:08:20.470 --> 01:08:20.480 align:start position:0%
sum so now anytime that sum changes
 

01:08:20.480 --> 01:08:23.430 align:start position:0%
sum so now anytime that sum changes
we'll<01:08:20.719><c> actually</c><01:08:21.120><c> get</c><01:08:21.839><c> a</c><01:08:22.239><c> notification</c><01:08:23.120><c> so</c><01:08:23.279><c> we</c>

01:08:23.430 --> 01:08:23.440 align:start position:0%
we'll actually get a notification so we
 

01:08:23.440 --> 01:08:24.789 align:start position:0%
we'll actually get a notification so we
can<01:08:23.520><c> continue</c>

01:08:24.789 --> 01:08:24.799 align:start position:0%
can continue
 

01:08:24.799 --> 01:08:27.590 align:start position:0%
can continue
and<01:08:24.960><c> then</c><01:08:26.000><c> we'll</c><01:08:26.159><c> get</c><01:08:26.319><c> a</c><01:08:26.400><c> delete</c><01:08:26.799><c> here</c><01:08:27.120><c> because</c>

01:08:27.590 --> 01:08:27.600 align:start position:0%
and then we'll get a delete here because
 

01:08:27.600 --> 01:08:27.990 align:start position:0%
and then we'll get a delete here because
some

01:08:27.990 --> 01:08:28.000 align:start position:0%
some
 

01:08:28.000 --> 01:08:30.550 align:start position:0%
some
has<01:08:28.319><c> been</c><01:08:28.640><c> removed</c><01:08:29.520><c> so</c><01:08:29.679><c> we</c><01:08:29.839><c> can't</c><01:08:30.159><c> we</c><01:08:30.319><c> can't</c>

01:08:30.550 --> 01:08:30.560 align:start position:0%
has been removed so we can't we can't
 

01:08:30.560 --> 01:08:31.829 align:start position:0%
has been removed so we can't we can't
actually<01:08:30.880><c> watch</c><01:08:31.199><c> it</c>

01:08:31.829 --> 01:08:31.839 align:start position:0%
actually watch it
 

01:08:31.839 --> 01:08:35.910 align:start position:0%
actually watch it
we<01:08:32.000><c> can</c><01:08:32.239><c> even</c><01:08:32.480><c> do</c><01:08:32.719><c> things</c><01:08:33.040><c> like</c><01:08:34.319><c> break</c><01:08:34.799><c> points</c>

01:08:35.910 --> 01:08:35.920 align:start position:0%
we can even do things like break points
 

01:08:35.920 --> 01:08:37.749 align:start position:0%
we can even do things like break points
on<01:08:36.400><c> sum2</c><01:08:36.880><c> so</c><01:08:37.040><c> this</c><01:08:37.120><c> is</c><01:08:37.199><c> a</c><01:08:37.279><c> conditional</c>

01:08:37.749 --> 01:08:37.759 align:start position:0%
on sum2 so this is a conditional
 

01:08:37.759 --> 01:08:39.030 align:start position:0%
on sum2 so this is a conditional
breakpoint

01:08:39.030 --> 01:08:39.040 align:start position:0%
breakpoint
 

01:08:39.040 --> 01:08:42.229 align:start position:0%
breakpoint
if<01:08:40.159><c> well</c><01:08:40.400><c> let's</c><01:08:40.719><c> actually</c><01:08:41.040><c> see</c><01:08:41.359><c> what</c><01:08:41.520><c> is</c><01:08:41.920><c> i</c>

01:08:42.229 --> 01:08:42.239 align:start position:0%
if well let's actually see what is i
 

01:08:42.239 --> 01:08:44.630 align:start position:0%
if well let's actually see what is i
currently<01:08:42.719><c> so</c><01:08:42.960><c> i</c><01:08:43.120><c> is</c><01:08:43.279><c> currently</c><01:08:43.679><c> one</c><01:08:44.400><c> let's</c>

01:08:44.630 --> 01:08:44.640 align:start position:0%
currently so i is currently one let's
 

01:08:44.640 --> 01:08:45.269 align:start position:0%
currently so i is currently one let's
say

01:08:45.269 --> 01:08:45.279 align:start position:0%
say
 

01:08:45.279 --> 01:08:47.590 align:start position:0%
say
i<01:08:45.440><c> think</c><01:08:45.679><c> my</c><01:08:45.920><c> loop</c><01:08:46.239><c> is</c><01:08:46.400><c> breaking</c><01:08:46.960><c> and</c><01:08:47.199><c> whenever</c>

01:08:47.590 --> 01:08:47.600 align:start position:0%
i think my loop is breaking and whenever
 

01:08:47.600 --> 01:08:48.789 align:start position:0%
i think my loop is breaking and whenever
i<01:08:47.839><c> is</c><01:08:48.080><c> five</c>

01:08:48.789 --> 01:08:48.799 align:start position:0%
i is five
 

01:08:48.799 --> 01:08:50.630 align:start position:0%
i is five
well<01:08:49.120><c> if</c><01:08:49.199><c> i</c><01:08:49.359><c> want</c><01:08:49.520><c> to</c><01:08:49.679><c> specifically</c><01:08:50.159><c> debug</c>

01:08:50.630 --> 01:08:50.640 align:start position:0%
well if i want to specifically debug
 

01:08:50.640 --> 01:08:53.749 align:start position:0%
well if i want to specifically debug
that<01:08:50.960><c> case</c><01:08:51.600><c> i</c><01:08:51.759><c> can</c><01:08:51.920><c> set</c><01:08:52.159><c> a</c><01:08:52.239><c> breakpoint</c>

01:08:53.749 --> 01:08:53.759 align:start position:0%
that case i can set a breakpoint
 

01:08:53.759 --> 01:08:58.630 align:start position:0%
that case i can set a breakpoint
on<01:08:55.839><c> sum2</c>

01:08:58.630 --> 01:08:58.640 align:start position:0%
 
 

01:08:58.640 --> 01:09:02.789 align:start position:0%
 
if<01:08:59.359><c> i</c><01:09:00.719><c> equals</c><01:09:01.199><c> five</c>

01:09:02.789 --> 01:09:02.799 align:start position:0%
if i equals five
 

01:09:02.799 --> 01:09:05.269 align:start position:0%
if i equals five
so<01:09:03.040><c> now</c><01:09:03.440><c> we</c><01:09:03.600><c> have</c><01:09:03.759><c> this</c><01:09:04.000><c> breakpoint</c><01:09:04.880><c> and</c><01:09:05.040><c> if</c><01:09:05.120><c> we</c>

01:09:05.269 --> 01:09:05.279 align:start position:0%
so now we have this breakpoint and if we
 

01:09:05.279 --> 01:09:06.630 align:start position:0%
so now we have this breakpoint and if we
continue<01:09:05.839><c> along</c>

01:09:06.630 --> 01:09:06.640 align:start position:0%
continue along
 

01:09:06.640 --> 01:09:09.669 align:start position:0%
continue along
we'll<01:09:06.799><c> get</c><01:09:06.960><c> to</c><01:09:07.199><c> some</c><01:09:07.520><c> two</c><01:09:08.319><c> and</c><01:09:08.719><c> uh</c><01:09:09.040><c> we</c><01:09:09.199><c> can</c><01:09:09.440><c> see</c>

01:09:09.669 --> 01:09:09.679 align:start position:0%
we'll get to some two and uh we can see
 

01:09:09.679 --> 01:09:11.510 align:start position:0%
we'll get to some two and uh we can see
that<01:09:09.920><c> it</c><01:09:10.159><c> actually</c><01:09:10.480><c> printed</c><01:09:10.880><c> out</c>

01:09:11.510 --> 01:09:11.520 align:start position:0%
that it actually printed out
 

01:09:11.520 --> 01:09:14.149 align:start position:0%
that it actually printed out
the<01:09:11.679><c> first</c><01:09:12.000><c> couple</c><01:09:12.319><c> values</c><01:09:13.359><c> and</c><01:09:13.440><c> so</c><01:09:13.679><c> we</c><01:09:13.839><c> only</c>

01:09:14.149 --> 01:09:14.159 align:start position:0%
the first couple values and so we only
 

01:09:14.159 --> 01:09:15.910 align:start position:0%
the first couple values and so we only
break<01:09:14.400><c> now</c><01:09:14.640><c> on</c><01:09:14.799><c> some</c><01:09:15.120><c> two</c>

01:09:15.910 --> 01:09:15.920 align:start position:0%
break now on some two
 

01:09:15.920 --> 01:09:19.510 align:start position:0%
break now on some two
if<01:09:17.440><c> if</c><01:09:18.000><c> i</c><01:09:18.319><c> if</c><01:09:18.400><c> we</c><01:09:18.560><c> hit</c><01:09:18.799><c> that</c><01:09:18.960><c> breakpoint</c>

01:09:19.510 --> 01:09:19.520 align:start position:0%
if if i if we hit that breakpoint
 

01:09:19.520 --> 01:09:21.189 align:start position:0%
if if i if we hit that breakpoint
condition

01:09:21.189 --> 01:09:21.199 align:start position:0%
condition
 

01:09:21.199 --> 01:09:22.870 align:start position:0%
condition
and<01:09:21.279><c> so</c><01:09:21.440><c> that's</c><01:09:21.679><c> uh</c><01:09:22.000><c> this</c><01:09:22.159><c> can</c><01:09:22.319><c> be</c><01:09:22.560><c> again</c><01:09:22.719><c> this</c>

01:09:22.870 --> 01:09:22.880 align:start position:0%
and so that's uh this can be again this
 

01:09:22.880 --> 01:09:24.550 align:start position:0%
and so that's uh this can be again this
can<01:09:23.040><c> be</c><01:09:23.120><c> useful</c><01:09:23.520><c> if</c><01:09:23.679><c> you</c><01:09:23.759><c> want</c><01:09:23.920><c> to</c><01:09:24.080><c> debug</c>

01:09:24.550 --> 01:09:24.560 align:start position:0%
can be useful if you want to debug
 

01:09:24.560 --> 01:09:26.470 align:start position:0%
can be useful if you want to debug
specific<01:09:24.960><c> edge</c><01:09:25.199><c> cases</c><01:09:25.600><c> of</c><01:09:25.679><c> your</c><01:09:25.839><c> code</c>

01:09:26.470 --> 01:09:26.480 align:start position:0%
specific edge cases of your code
 

01:09:26.480 --> 01:09:29.189 align:start position:0%
specific edge cases of your code
and<01:09:26.719><c> watch</c><01:09:27.040><c> points</c><01:09:27.359><c> can</c><01:09:27.520><c> be</c><01:09:27.679><c> useful</c><01:09:28.799><c> if</c><01:09:29.040><c> for</c>

01:09:29.189 --> 01:09:29.199 align:start position:0%
and watch points can be useful if for
 

01:09:29.199 --> 01:09:30.550 align:start position:0%
and watch points can be useful if for
instance<01:09:29.679><c> you</c><01:09:29.920><c> think</c><01:09:30.080><c> that</c><01:09:30.239><c> something</c>

01:09:30.550 --> 01:09:30.560 align:start position:0%
instance you think that something
 

01:09:30.560 --> 01:09:31.829 align:start position:0%
instance you think that something
shouldn't<01:09:30.799><c> be</c><01:09:30.960><c> changing</c>

01:09:31.829 --> 01:09:31.839 align:start position:0%
shouldn't be changing
 

01:09:31.839 --> 01:09:34.870 align:start position:0%
shouldn't be changing
but<01:09:32.080><c> you</c><01:09:32.239><c> suspect</c><01:09:32.640><c> that</c><01:09:32.799><c> it</c><01:09:32.960><c> is</c><01:09:33.679><c> or</c><01:09:34.560><c> you</c><01:09:34.719><c> think</c>

01:09:34.870 --> 01:09:34.880 align:start position:0%
but you suspect that it is or you think
 

01:09:34.880 --> 01:09:36.149 align:start position:0%
but you suspect that it is or you think
that<01:09:35.040><c> something</c><01:09:35.359><c> is</c><01:09:35.520><c> going</c><01:09:35.759><c> wrong</c>

01:09:36.149 --> 01:09:36.159 align:start position:0%
that something is going wrong
 

01:09:36.159 --> 01:09:39.829 align:start position:0%
that something is going wrong
every<01:09:36.400><c> time</c><01:09:36.960><c> you</c><01:09:37.199><c> change</c><01:09:37.520><c> a</c><01:09:37.600><c> certain</c><01:09:37.920><c> variable</c>

01:09:39.829 --> 01:09:39.839 align:start position:0%
every time you change a certain variable
 

01:09:39.839 --> 01:09:41.910 align:start position:0%
every time you change a certain variable
and<01:09:40.000><c> so</c><01:09:40.159><c> that's</c><01:09:40.560><c> that's</c><01:09:40.799><c> uh</c><01:09:41.040><c> that's</c><01:09:41.359><c> one</c><01:09:41.679><c> one</c>

01:09:41.910 --> 01:09:41.920 align:start position:0%
and so that's that's uh that's one one
 

01:09:41.920 --> 01:09:43.590 align:start position:0%
and so that's that's uh that's one one
usage<01:09:42.239><c> for</c><01:09:42.400><c> that</c>

01:09:43.590 --> 01:09:43.600 align:start position:0%
usage for that
 

01:09:43.600 --> 01:09:45.510 align:start position:0%
usage for that
and<01:09:43.920><c> uh</c><01:09:44.400><c> the</c><01:09:44.560><c> last</c><01:09:44.799><c> thing</c><01:09:44.960><c> i</c><01:09:45.040><c> want</c><01:09:45.199><c> to</c><01:09:45.279><c> talk</c>

01:09:45.510 --> 01:09:45.520 align:start position:0%
and uh the last thing i want to talk
 

01:09:45.520 --> 01:09:48.309 align:start position:0%
and uh the last thing i want to talk
about<01:09:45.920><c> today</c><01:09:46.480><c> is</c><01:09:46.839><c> structs</c>

01:09:48.309 --> 01:09:48.319 align:start position:0%
about today is structs
 

01:09:48.319 --> 01:09:50.070 align:start position:0%
about today is structs
structs<01:09:48.719><c> are</c><01:09:48.799><c> pretty</c><01:09:49.120><c> important</c><01:09:49.679><c> and</c><01:09:49.839><c> they'll</c>

01:09:50.070 --> 01:09:50.080 align:start position:0%
structs are pretty important and they'll
 

01:09:50.080 --> 01:09:51.590 align:start position:0%
structs are pretty important and they'll
come<01:09:50.239><c> up</c><01:09:50.719><c> in</c>

01:09:51.590 --> 01:09:51.600 align:start position:0%
come up in
 

01:09:51.600 --> 01:09:55.030 align:start position:0%
come up in
um<01:09:53.040><c> in</c><01:09:53.279><c> the</c><01:09:53.440><c> labs</c><01:09:53.920><c> often</c>

01:09:55.030 --> 01:09:55.040 align:start position:0%
um in the labs often
 

01:09:55.040 --> 01:09:58.790 align:start position:0%
um in the labs often
and<01:09:56.000><c> also</c><01:09:57.440><c> so</c><01:09:57.679><c> what</c><01:09:57.920><c> asks</c>

01:09:58.790 --> 01:09:58.800 align:start position:0%
and also so what asks
 

01:09:58.800 --> 01:10:00.470 align:start position:0%
and also so what asks
i'll<01:09:58.960><c> talk</c><01:09:59.120><c> a</c><01:09:59.199><c> little</c><01:09:59.360><c> bit</c><01:09:59.520><c> about</c><01:10:00.080><c> the</c><01:10:00.239><c> way</c>

01:10:00.470 --> 01:10:00.480 align:start position:0%
i'll talk a little bit about the way
 

01:10:00.480 --> 01:10:03.590 align:start position:0%
i'll talk a little bit about the way
structs<01:10:01.199><c> are</c><01:10:01.360><c> laid</c><01:10:01.600><c> out</c><01:10:01.679><c> in</c><01:10:01.920><c> memory</c>

01:10:03.590 --> 01:10:03.600 align:start position:0%
structs are laid out in memory
 

01:10:03.600 --> 01:10:06.550 align:start position:0%
structs are laid out in memory
and<01:10:03.760><c> so</c><01:10:04.000><c> a</c><01:10:04.080><c> struct</c><01:10:04.480><c> is</c><01:10:04.560><c> basically</c><01:10:05.520><c> um</c><01:10:06.239><c> it's</c><01:10:06.480><c> a</c>

01:10:06.550 --> 01:10:06.560 align:start position:0%
and so a struct is basically um it's a
 

01:10:06.560 --> 01:10:08.630 align:start position:0%
and so a struct is basically um it's a
continuous<01:10:07.199><c> contiguous</c><01:10:07.840><c> area</c><01:10:08.080><c> of</c><01:10:08.239><c> memory</c><01:10:08.480><c> so</c>

01:10:08.630 --> 01:10:08.640 align:start position:0%
continuous contiguous area of memory so
 

01:10:08.640 --> 01:10:11.430 align:start position:0%
continuous contiguous area of memory so
if<01:10:08.719><c> we</c><01:10:08.880><c> have</c><01:10:08.960><c> some</c><01:10:09.199><c> struct</c>

01:10:11.430 --> 01:10:11.440 align:start position:0%
if we have some struct
 

01:10:11.440 --> 01:10:14.790 align:start position:0%
if we have some struct
and<01:10:11.760><c> we</c><01:10:11.920><c> have</c><01:10:12.320><c> like</c><01:10:13.120><c> field</c><01:10:13.440><c> one</c><01:10:14.000><c> field</c><01:10:14.320><c> two</c>

01:10:14.790 --> 01:10:14.800 align:start position:0%
and we have like field one field two
 

01:10:14.800 --> 01:10:18.149 align:start position:0%
and we have like field one field two
field<01:10:15.120><c> three</c><01:10:17.120><c> when</c><01:10:17.280><c> we</c><01:10:17.440><c> make</c><01:10:17.600><c> that</c><01:10:17.760><c> struck</c>

01:10:18.149 --> 01:10:18.159 align:start position:0%
field three when we make that struck
 

01:10:18.159 --> 01:10:19.510 align:start position:0%
field three when we make that struck
those<01:10:18.400><c> fields</c><01:10:18.719><c> are</c><01:10:18.800><c> going</c><01:10:18.880><c> to</c><01:10:18.960><c> be</c>

01:10:19.510 --> 01:10:19.520 align:start position:0%
those fields are going to be
 

01:10:19.520 --> 01:10:22.630 align:start position:0%
those fields are going to be
aligned<01:10:20.080><c> next</c><01:10:20.320><c> to</c><01:10:20.480><c> each</c><01:10:20.640><c> other</c><01:10:22.159><c> in</c><01:10:22.320><c> memories</c>

01:10:22.630 --> 01:10:22.640 align:start position:0%
aligned next to each other in memories
 

01:10:22.640 --> 01:10:24.310 align:start position:0%
aligned next to each other in memories
and<01:10:22.719><c> you</c><01:10:22.800><c> can</c><01:10:23.120><c> kind</c><01:10:23.280><c> of</c><01:10:23.360><c> think</c><01:10:23.520><c> of</c><01:10:23.679><c> this</c>

01:10:24.310 --> 01:10:24.320 align:start position:0%
and you can kind of think of this
 

01:10:24.320 --> 01:10:27.110 align:start position:0%
and you can kind of think of this
like<01:10:24.640><c> an</c><01:10:24.800><c> array</c><01:10:25.360><c> but</c><01:10:25.600><c> f1</c><01:10:26.000><c> f2</c><01:10:26.320><c> and</c><01:10:26.480><c> f3</c><01:10:26.800><c> can</c><01:10:26.960><c> all</c>

01:10:27.110 --> 01:10:27.120 align:start position:0%
like an array but f1 f2 and f3 can all
 

01:10:27.120 --> 01:10:28.470 align:start position:0%
like an array but f1 f2 and f3 can all
be<01:10:27.280><c> different</c><01:10:27.520><c> types</c>

01:10:28.470 --> 01:10:28.480 align:start position:0%
be different types
 

01:10:28.480 --> 01:10:31.830 align:start position:0%
be different types
and<01:10:29.280><c> uh</c><01:10:30.560><c> we</c><01:10:30.719><c> can</c><01:10:31.440><c> uh</c>

01:10:31.830 --> 01:10:31.840 align:start position:0%
and uh we can uh
 

01:10:31.840 --> 01:10:33.270 align:start position:0%
and uh we can uh
pass<01:10:32.080><c> them</c><01:10:32.239><c> as</c><01:10:32.400><c> functions</c><01:10:32.800><c> usually</c><01:10:33.120><c> they're</c>

01:10:33.270 --> 01:10:33.280 align:start position:0%
pass them as functions usually they're
 

01:10:33.280 --> 01:10:34.870 align:start position:0%
pass them as functions usually they're
past<01:10:33.600><c> uh</c><01:10:33.760><c> pass</c><01:10:34.000><c> them</c><01:10:34.159><c> as</c><01:10:34.320><c> arguments</c><01:10:34.719><c> to</c>

01:10:34.870 --> 01:10:34.880 align:start position:0%
past uh pass them as arguments to
 

01:10:34.880 --> 01:10:35.830 align:start position:0%
past uh pass them as arguments to
functions

01:10:35.830 --> 01:10:35.840 align:start position:0%
functions
 

01:10:35.840 --> 01:10:38.149 align:start position:0%
functions
usually<01:10:36.239><c> they're</c><01:10:36.400><c> passed</c><01:10:36.640><c> by</c><01:10:36.880><c> reference</c><01:10:37.760><c> so</c>

01:10:38.149 --> 01:10:38.159 align:start position:0%
usually they're passed by reference so
 

01:10:38.159 --> 01:10:40.229 align:start position:0%
usually they're passed by reference so
here<01:10:38.400><c> i've</c><01:10:38.640><c> made</c><01:10:38.800><c> a</c><01:10:38.880><c> struct</c><01:10:39.280><c> person</c>

01:10:40.229 --> 01:10:40.239 align:start position:0%
here i've made a struct person
 

01:10:40.239 --> 01:10:44.149 align:start position:0%
here i've made a struct person
with<01:10:40.560><c> two</c><01:10:40.880><c> integer</c><01:10:41.440><c> arguments</c><01:10:42.840><c> and</c>

01:10:44.149 --> 01:10:44.159 align:start position:0%
with two integer arguments and
 

01:10:44.159 --> 01:10:46.550 align:start position:0%
with two integer arguments and
i'm<01:10:44.400><c> passing</c><01:10:44.800><c> them</c><01:10:45.600><c> passing</c><01:10:45.920><c> a</c><01:10:46.000><c> person</c><01:10:46.320><c> as</c><01:10:46.480><c> an</c>

01:10:46.550 --> 01:10:46.560 align:start position:0%
i'm passing them passing a person as an
 

01:10:46.560 --> 01:10:48.310 align:start position:0%
i'm passing them passing a person as an
argument<01:10:46.960><c> to</c><01:10:47.040><c> print</c><01:10:47.280><c> person</c>

01:10:48.310 --> 01:10:48.320 align:start position:0%
argument to print person
 

01:10:48.320 --> 01:10:51.110 align:start position:0%
argument to print person
and<01:10:49.040><c> uh</c><01:10:49.679><c> printing</c><01:10:50.000><c> out</c><01:10:50.480><c> some</c><01:10:50.719><c> of</c><01:10:50.800><c> that</c>

01:10:51.110 --> 01:10:51.120 align:start position:0%
and uh printing out some of that
 

01:10:51.120 --> 01:10:52.149 align:start position:0%
and uh printing out some of that
information

01:10:52.149 --> 01:10:52.159 align:start position:0%
information
 

01:10:52.159 --> 01:10:54.870 align:start position:0%
information
so<01:10:52.400><c> if</c><01:10:52.480><c> we</c><01:10:52.640><c> hop</c><01:10:52.880><c> into</c><01:10:53.520><c> gdb</c><01:10:54.159><c> and</c><01:10:54.320><c> let's</c><01:10:54.560><c> delete</c>

01:10:54.870 --> 01:10:54.880 align:start position:0%
so if we hop into gdb and let's delete
 

01:10:54.880 --> 01:10:57.030 align:start position:0%
so if we hop into gdb and let's delete
all<01:10:54.960><c> of</c><01:10:55.120><c> our</c><01:10:55.199><c> breakpoints</c><01:10:55.679><c> and</c><01:10:55.840><c> watch</c><01:10:56.080><c> points</c>

01:10:57.030 --> 01:10:57.040 align:start position:0%
all of our breakpoints and watch points
 

01:10:57.040 --> 01:11:00.310 align:start position:0%
all of our breakpoints and watch points
and<01:10:57.280><c> now</c><01:10:57.520><c> we</c><01:10:57.679><c> can</c><01:10:57.760><c> set</c><01:10:57.920><c> a</c><01:10:58.000><c> breakpoint</c><01:10:58.640><c> at</c>

01:11:00.310 --> 01:11:00.320 align:start position:0%
and now we can set a breakpoint at
 

01:11:00.320 --> 01:11:04.149 align:start position:0%
and now we can set a breakpoint at
person<01:11:01.679><c> and</c><01:11:02.640><c> let's</c><01:11:02.880><c> continue</c>

01:11:04.149 --> 01:11:04.159 align:start position:0%
person and let's continue
 

01:11:04.159 --> 01:11:07.590 align:start position:0%
person and let's continue
and<01:11:04.560><c> run</c><01:11:05.199><c> seventh</c><01:11:05.679><c> demo</c>

01:11:07.590 --> 01:11:07.600 align:start position:0%
and run seventh demo
 

01:11:07.600 --> 01:11:09.270 align:start position:0%
and run seventh demo
we<01:11:07.760><c> can</c><01:11:07.920><c> see</c><01:11:08.080><c> that</c><01:11:08.239><c> now</c><01:11:08.400><c> we're</c><01:11:08.640><c> here</c><01:11:08.880><c> and</c><01:11:08.960><c> so</c><01:11:09.120><c> if</c>

01:11:09.270 --> 01:11:09.280 align:start position:0%
we can see that now we're here and so if
 

01:11:09.280 --> 01:11:11.030 align:start position:0%
we can see that now we're here and so if
we<01:11:09.360><c> type</c><01:11:09.679><c> iframe</c>

01:11:11.030 --> 01:11:11.040 align:start position:0%
we type iframe
 

01:11:11.040 --> 01:11:15.350 align:start position:0%
we type iframe
we<01:11:11.199><c> can</c><01:11:11.360><c> see</c><01:11:11.920><c> that</c><01:11:12.800><c> we</c><01:11:12.960><c> have</c><01:11:13.440><c> an</c><01:11:13.600><c> argument</c><01:11:14.239><c> p</c>

01:11:15.350 --> 01:11:15.360 align:start position:0%
we can see that we have an argument p
 

01:11:15.360 --> 01:11:18.870 align:start position:0%
we can see that we have an argument p
and<01:11:15.840><c> indeed</c><01:11:16.800><c> we</c><01:11:16.960><c> can</c><01:11:17.360><c> if</c><01:11:17.520><c> we</c><01:11:17.600><c> do</c><01:11:18.159><c> print</c>

01:11:18.870 --> 01:11:18.880 align:start position:0%
and indeed we can if we do print
 

01:11:18.880 --> 01:11:22.709 align:start position:0%
and indeed we can if we do print
p<01:11:20.640><c> if</c><01:11:21.199><c> we</c><01:11:21.280><c> can</c><01:11:21.440><c> even</c><01:11:21.679><c> tell</c><01:11:21.920><c> that</c><01:11:22.080><c> it's</c><01:11:22.239><c> a</c><01:11:22.320><c> struct</c>

01:11:22.709 --> 01:11:22.719 align:start position:0%
p if we can even tell that it's a struct
 

01:11:22.719 --> 01:11:23.510 align:start position:0%
p if we can even tell that it's a struct
person

01:11:23.510 --> 01:11:23.520 align:start position:0%
person
 

01:11:23.520 --> 01:11:26.870 align:start position:0%
person
at<01:11:23.600><c> this</c><01:11:24.840><c> address</c><01:11:25.920><c> and</c>

01:11:26.870 --> 01:11:26.880 align:start position:0%
at this address and
 

01:11:26.880 --> 01:11:30.229 align:start position:0%
at this address and
we<01:11:27.040><c> can</c><01:11:27.360><c> if</c><01:11:27.520><c> we</c><01:11:27.679><c> dereference</c><01:11:28.480><c> it</c>

01:11:30.229 --> 01:11:30.239 align:start position:0%
we can if we dereference it
 

01:11:30.239 --> 01:11:32.550 align:start position:0%
we can if we dereference it
gdb<01:11:30.640><c> will</c><01:11:30.800><c> tell</c><01:11:31.040><c> us</c><01:11:31.199><c> exactly</c><01:11:31.679><c> what</c><01:11:32.000><c> p</c><01:11:32.320><c> looks</c>

01:11:32.550 --> 01:11:32.560 align:start position:0%
gdb will tell us exactly what p looks
 

01:11:32.560 --> 01:11:35.270 align:start position:0%
gdb will tell us exactly what p looks
like<01:11:32.960><c> it</c><01:11:33.040><c> has</c><01:11:33.280><c> id</c><01:11:33.600><c> 1215</c>

01:11:35.270 --> 01:11:35.280 align:start position:0%
like it has id 1215
 

01:11:35.280 --> 01:11:39.110 align:start position:0%
like it has id 1215
age<01:11:35.520><c> is</c><01:11:35.600><c> 22</c><01:11:37.679><c> and</c><01:11:37.920><c> just</c><01:11:38.080><c> to</c><01:11:38.320><c> show</c><01:11:38.560><c> kind</c><01:11:38.719><c> of</c><01:11:38.880><c> how</c>

01:11:39.110 --> 01:11:39.120 align:start position:0%
age is 22 and just to show kind of how
 

01:11:39.120 --> 01:11:40.630 align:start position:0%
age is 22 and just to show kind of how
things<01:11:39.520><c> are</c>

01:11:40.630 --> 01:11:40.640 align:start position:0%
things are
 

01:11:40.640 --> 01:11:43.750 align:start position:0%
things are
laid<01:11:40.960><c> out</c><01:11:42.000><c> we</c><01:11:42.159><c> can</c><01:11:42.400><c> take</c><01:11:42.640><c> this</c><01:11:42.880><c> address</c>

01:11:43.750 --> 01:11:43.760 align:start position:0%
laid out we can take this address
 

01:11:43.760 --> 01:11:53.669 align:start position:0%
laid out we can take this address
and<01:11:44.000><c> we</c><01:11:44.159><c> do</c><01:11:44.400><c> x</c><01:11:45.280><c> hd</c><01:11:46.080><c> at</c><01:11:46.239><c> this</c>

01:11:53.669 --> 01:11:53.679 align:start position:0%
 
 

01:11:53.679 --> 01:12:02.149 align:start position:0%
 
i address<01:11:54.239><c> exactly</c>

01:12:02.149 --> 01:12:02.159 align:start position:0%
 
 

01:12:02.159 --> 01:12:04.310 align:start position:0%
 
so<01:12:02.320><c> if</c><01:12:02.480><c> we</c><01:12:02.880><c> again</c><01:12:03.199><c> so</c><01:12:03.360><c> we</c><01:12:03.520><c> can</c><01:12:03.679><c> use</c><01:12:03.920><c> this</c><01:12:04.159><c> to</c>

01:12:04.310 --> 01:12:04.320 align:start position:0%
so if we again so we can use this to
 

01:12:04.320 --> 01:12:05.270 align:start position:0%
so if we again so we can use this to
debug

01:12:05.270 --> 01:12:05.280 align:start position:0%
debug
 

01:12:05.280 --> 01:12:08.709 align:start position:0%
debug
our<01:12:06.840><c> structures</c><01:12:07.920><c> in</c>

01:12:08.709 --> 01:12:08.719 align:start position:0%
our structures in
 

01:12:08.719 --> 01:12:11.910 align:start position:0%
our structures in
in<01:12:08.880><c> the</c><01:12:09.040><c> code</c><01:12:10.880><c> we</c><01:12:11.040><c> can</c><01:12:11.120><c> take</c><01:12:11.280><c> a</c><01:12:11.360><c> look</c><01:12:11.600><c> at</c><01:12:11.679><c> what's</c>

01:12:11.910 --> 01:12:11.920 align:start position:0%
in the code we can take a look at what's
 

01:12:11.920 --> 01:12:13.750 align:start position:0%
in the code we can take a look at what's
going<01:12:12.239><c> on</c>

01:12:13.750 --> 01:12:13.760 align:start position:0%
going on
 

01:12:13.760 --> 01:12:16.870 align:start position:0%
going on
with<01:12:14.080><c> structures</c><01:12:14.719><c> this</c><01:12:14.960><c> way</c><01:12:15.280><c> so</c><01:12:15.440><c> gdb</c><01:12:16.560><c> is</c><01:12:16.800><c> a</c>

01:12:16.870 --> 01:12:16.880 align:start position:0%
with structures this way so gdb is a
 

01:12:16.880 --> 01:12:18.070 align:start position:0%
with structures this way so gdb is a
super<01:12:17.199><c> powerful</c><01:12:17.679><c> tool</c>

01:12:18.070 --> 01:12:18.080 align:start position:0%
super powerful tool
 

01:12:18.080 --> 01:12:20.229 align:start position:0%
super powerful tool
not<01:12:18.320><c> just</c><01:12:18.640><c> for</c><01:12:19.360><c> you</c><01:12:19.440><c> know</c><01:12:19.679><c> stepping</c><01:12:20.000><c> through</c>

01:12:20.229 --> 01:12:20.239 align:start position:0%
not just for you know stepping through
 

01:12:20.239 --> 01:12:22.790 align:start position:0%
not just for you know stepping through
code<01:12:20.480><c> but</c><01:12:20.640><c> also</c><01:12:20.960><c> for</c><01:12:21.199><c> examining</c>

01:12:22.790 --> 01:12:22.800 align:start position:0%
code but also for examining
 

01:12:22.800 --> 01:12:26.229 align:start position:0%
code but also for examining
all<01:12:23.120><c> kinds</c><01:12:23.520><c> of</c><01:12:25.040><c> potentially</c><01:12:25.679><c> problematic</c>

01:12:26.229 --> 01:12:26.239 align:start position:0%
all kinds of potentially problematic
 

01:12:26.239 --> 01:12:28.149 align:start position:0%
all kinds of potentially problematic
pieces<01:12:26.640><c> in</c><01:12:26.719><c> your</c><01:12:26.880><c> code</c><01:12:27.360><c> and</c><01:12:27.679><c> looking</c><01:12:28.000><c> at</c>

01:12:28.149 --> 01:12:28.159 align:start position:0%
pieces in your code and looking at
 

01:12:28.159 --> 01:12:29.990 align:start position:0%
pieces in your code and looking at
arguments<01:12:28.800><c> and</c><01:12:28.960><c> stack</c><01:12:29.280><c> frames</c><01:12:29.679><c> and</c><01:12:29.760><c> things</c>

01:12:29.990 --> 01:12:30.000 align:start position:0%
arguments and stack frames and things
 

01:12:30.000 --> 01:12:30.870 align:start position:0%
arguments and stack frames and things
like<01:12:30.159><c> that</c>

01:12:30.870 --> 01:12:30.880 align:start position:0%
like that
 

01:12:30.880 --> 01:12:32.470 align:start position:0%
like that
and<01:12:31.040><c> this</c><01:12:31.199><c> will</c><01:12:31.360><c> be</c><01:12:31.840><c> hopefully</c><01:12:32.239><c> will</c><01:12:32.400><c> be</c>

01:12:32.470 --> 01:12:32.480 align:start position:0%
and this will be hopefully will be
 

01:12:32.480 --> 01:12:35.350 align:start position:0%
and this will be hopefully will be
useful<01:12:33.360><c> in</c><01:12:33.520><c> the</c><01:12:33.600><c> next</c><01:12:33.920><c> lab</c>

01:12:35.350 --> 01:12:35.360 align:start position:0%
useful in the next lab
 

01:12:35.360 --> 01:12:37.990 align:start position:0%
useful in the next lab
when<01:12:35.520><c> you</c><01:12:35.679><c> have</c><01:12:35.840><c> to</c><01:12:36.000><c> work</c><01:12:36.239><c> with</c><01:12:37.040><c> um</c><01:12:37.440><c> with</c><01:12:37.679><c> stack</c>

01:12:37.990 --> 01:12:38.000 align:start position:0%
when you have to work with um with stack
 

01:12:38.000 --> 01:12:40.070 align:start position:0%
when you have to work with um with stack
frames<01:12:38.400><c> and</c><01:12:38.560><c> with</c><01:12:38.800><c> assembly</c><01:12:39.280><c> code</c>

01:12:40.070 --> 01:12:40.080 align:start position:0%
frames and with assembly code
 

01:12:40.080 --> 01:12:42.709 align:start position:0%
frames and with assembly code
so<01:12:40.960><c> that's</c><01:12:41.600><c> that's</c><01:12:41.840><c> mostly</c><01:12:42.159><c> what</c><01:12:42.320><c> i</c><01:12:42.400><c> wanted</c><01:12:42.560><c> to</c>

01:12:42.709 --> 01:12:42.719 align:start position:0%
so that's that's mostly what i wanted to
 

01:12:42.719 --> 01:12:44.070 align:start position:0%
so that's that's mostly what i wanted to
talk<01:12:42.880><c> about</c><01:12:43.120><c> today</c><01:12:43.440><c> so</c>

01:12:44.070 --> 01:12:44.080 align:start position:0%
talk about today so
 

01:12:44.080 --> 01:12:47.350 align:start position:0%
talk about today so
with<01:12:44.239><c> the</c><01:12:44.400><c> last</c><01:12:44.719><c> kind</c><01:12:44.880><c> of</c><01:12:46.080><c> seven</c><01:12:46.480><c> minutes</c><01:12:47.040><c> of</c>

01:12:47.350 --> 01:12:47.360 align:start position:0%
with the last kind of seven minutes of
 

01:12:47.360 --> 01:12:47.910 align:start position:0%
with the last kind of seven minutes of
lecture

01:12:47.910 --> 01:12:47.920 align:start position:0%
lecture
 

01:12:47.920 --> 01:12:50.550 align:start position:0%
lecture
i'll<01:12:48.480><c> open</c><01:12:48.719><c> it</c><01:12:48.800><c> up</c><01:12:48.960><c> to</c><01:12:49.760><c> any</c><01:12:50.159><c> any</c><01:12:50.400><c> other</c>

01:12:50.550 --> 01:12:50.560 align:start position:0%
i'll open it up to any any other
 

01:12:50.560 --> 01:12:59.350 align:start position:0%
i'll open it up to any any other
questions<01:12:51.040><c> that</c><01:12:51.120><c> you</c><01:12:51.280><c> guys</c><01:12:51.440><c> have</c>

01:12:59.350 --> 01:12:59.360 align:start position:0%
 
 

01:12:59.360 --> 01:13:02.790 align:start position:0%
 
i<01:12:59.520><c> had</c><01:12:59.679><c> a</c><01:12:59.760><c> bit</c><01:12:59.840><c> of</c><01:12:59.920><c> a</c><01:13:00.080><c> tangential</c><01:13:00.719><c> question</c><01:13:02.080><c> who</c>

01:13:02.790 --> 01:13:02.800 align:start position:0%
i had a bit of a tangential question who
 

01:13:02.800 --> 01:13:05.110 align:start position:0%
i had a bit of a tangential question who
is<01:13:02.960><c> in</c><01:13:03.280><c> who</c><01:13:03.440><c> manages</c><01:13:04.000><c> the</c><01:13:04.320><c> the</c><01:13:04.560><c> creation</c><01:13:04.960><c> of</c>

01:13:05.110 --> 01:13:05.120 align:start position:0%
is in who manages the the creation of
 

01:13:05.120 --> 01:13:05.910 align:start position:0%
is in who manages the the creation of
compilers

01:13:05.910 --> 01:13:05.920 align:start position:0%
compilers
 

01:13:05.920 --> 01:13:08.709 align:start position:0%
compilers
from<01:13:06.320><c> like</c><01:13:06.480><c> to</c><01:13:06.719><c> get</c><01:13:06.960><c> from</c><01:13:07.280><c> c</c><01:13:07.600><c> to</c><01:13:07.760><c> various</c><01:13:08.480><c> uh</c>

01:13:08.709 --> 01:13:08.719 align:start position:0%
from like to get from c to various uh
 

01:13:08.719 --> 01:13:10.229 align:start position:0%
from like to get from c to various uh
instruction<01:13:09.120><c> set</c><01:13:09.360><c> architectures</c><01:13:10.000><c> is</c><01:13:10.159><c> that</c>

01:13:10.229 --> 01:13:10.239 align:start position:0%
instruction set architectures is that
 

01:13:10.239 --> 01:13:11.910 align:start position:0%
instruction set architectures is that
the<01:13:10.480><c> creator</c><01:13:11.040><c> of</c><01:13:11.199><c> the</c><01:13:11.280><c> instruction</c><01:13:11.679><c> set</c>

01:13:11.910 --> 01:13:11.920 align:start position:0%
the creator of the instruction set
 

01:13:11.920 --> 01:13:13.270 align:start position:0%
the creator of the instruction set
architecture<01:13:12.400><c> is</c><01:13:12.560><c> it</c><01:13:12.640><c> a</c><01:13:12.719><c> third</c><01:13:12.960><c> party</c>

01:13:13.270 --> 01:13:13.280 align:start position:0%
architecture is it a third party
 

01:13:13.280 --> 01:13:14.550 align:start position:0%
architecture is it a third party
something<01:13:13.520><c> like</c><01:13:13.679><c> that</c>

01:13:14.550 --> 01:13:14.560 align:start position:0%
something like that
 

01:13:14.560 --> 01:13:18.070 align:start position:0%
something like that
um<01:13:15.600><c> i</c><01:13:15.840><c> believe</c><01:13:16.800><c> that</c><01:13:17.360><c> it</c><01:13:17.600><c> is</c>

01:13:18.070 --> 01:13:18.080 align:start position:0%
um i believe that it is
 

01:13:18.080 --> 01:13:19.910 align:start position:0%
um i believe that it is
not<01:13:18.320><c> the</c><01:13:18.480><c> creator</c><01:13:18.800><c> of</c><01:13:18.960><c> the</c><01:13:19.040><c> instruction</c><01:13:19.600><c> set</c>

01:13:19.910 --> 01:13:19.920 align:start position:0%
not the creator of the instruction set
 

01:13:19.920 --> 01:13:22.310 align:start position:0%
not the creator of the instruction set
so<01:13:20.159><c> it's</c><01:13:20.400><c> often</c><01:13:20.719><c> a</c><01:13:20.800><c> third</c><01:13:21.040><c> party</c>

01:13:22.310 --> 01:13:22.320 align:start position:0%
so it's often a third party
 

01:13:22.320 --> 01:13:24.149 align:start position:0%
so it's often a third party
so<01:13:22.480><c> the</c><01:13:22.640><c> two</c><01:13:22.880><c> big</c><01:13:23.120><c> c</c><01:13:23.280><c> compilers</c><01:13:23.920><c> that</c><01:13:24.000><c> you'll</c>

01:13:24.149 --> 01:13:24.159 align:start position:0%
so the two big c compilers that you'll
 

01:13:24.159 --> 01:13:26.229 align:start position:0%
so the two big c compilers that you'll
see<01:13:24.400><c> refer</c><01:13:24.719><c> to</c><01:13:24.880><c> are</c><01:13:25.040><c> gcc</c>

01:13:26.229 --> 01:13:26.239 align:start position:0%
see refer to are gcc
 

01:13:26.239 --> 01:13:28.630 align:start position:0%
see refer to are gcc
which<01:13:26.480><c> is</c><01:13:26.640><c> maintained</c><01:13:27.199><c> by</c><01:13:27.520><c> i</c><01:13:27.679><c> think</c><01:13:27.840><c> the</c><01:13:28.080><c> gnu</c>

01:13:28.630 --> 01:13:28.640 align:start position:0%
which is maintained by i think the gnu
 

01:13:28.640 --> 01:13:29.990 align:start position:0%
which is maintained by i think the gnu
foundation

01:13:29.990 --> 01:13:30.000 align:start position:0%
foundation
 

01:13:30.000 --> 01:13:33.430 align:start position:0%
foundation
and<01:13:30.640><c> uh</c><01:13:31.440><c> c</c><01:13:31.679><c> lang</c><01:13:32.080><c> or</c><01:13:32.159><c> llvm</c>

01:13:33.430 --> 01:13:33.440 align:start position:0%
and uh c lang or llvm
 

01:13:33.440 --> 01:13:36.070 align:start position:0%
and uh c lang or llvm
which<01:13:33.760><c> is</c><01:13:34.080><c> its</c><01:13:34.320><c> own</c><01:13:34.640><c> thing</c><01:13:34.960><c> so</c><01:13:35.280><c> i</c><01:13:35.360><c> think</c><01:13:36.000><c> you</c>

01:13:36.070 --> 01:13:36.080 align:start position:0%
which is its own thing so i think you
 

01:13:36.080 --> 01:13:37.270 align:start position:0%
which is its own thing so i think you
know<01:13:36.239><c> you</c><01:13:36.400><c> can</c><01:13:36.640><c> find</c>

01:13:37.270 --> 01:13:37.280 align:start position:0%
know you can find
 

01:13:37.280 --> 01:13:39.669 align:start position:0%
know you can find
i<01:13:37.440><c> believe</c><01:13:37.840><c> lovm</c><01:13:38.400><c> is</c><01:13:38.560><c> even</c><01:13:38.800><c> open</c><01:13:39.040><c> source</c><01:13:39.520><c> so</c>

01:13:39.669 --> 01:13:39.679 align:start position:0%
i believe lovm is even open source so
 

01:13:39.679 --> 01:13:40.950 align:start position:0%
i believe lovm is even open source so
you<01:13:39.840><c> can</c><01:13:40.080><c> find</c>

01:13:40.950 --> 01:13:40.960 align:start position:0%
you can find
 

01:13:40.960 --> 01:13:43.110 align:start position:0%
you can find
um<01:13:42.000><c> you</c><01:13:42.080><c> can</c><01:13:42.320><c> you</c><01:13:42.480><c> can</c><01:13:42.560><c> find</c><01:13:42.800><c> the</c><01:13:42.880><c> code</c>

01:13:43.110 --> 01:13:43.120 align:start position:0%
um you can you can find the code
 

01:13:43.120 --> 01:13:44.550 align:start position:0%
um you can you can find the code
specifically<01:13:43.600><c> that</c><01:13:43.760><c> does</c><01:13:44.000><c> this</c>

01:13:44.550 --> 01:13:44.560 align:start position:0%
specifically that does this
 

01:13:44.560 --> 01:13:46.790 align:start position:0%
specifically that does this
uh<01:13:45.040><c> when</c><01:13:45.199><c> a</c><01:13:45.280><c> new</c><01:13:45.520><c> instruction</c><01:13:46.159><c> set</c><01:13:46.560><c> is</c>

01:13:46.790 --> 01:13:46.800 align:start position:0%
uh when a new instruction set is
 

01:13:46.800 --> 01:13:48.790 align:start position:0%
uh when a new instruction set is
released<01:13:47.440><c> such</c><01:13:47.679><c> as</c><01:13:47.760><c> risk</c><01:13:48.080><c> five</c>

01:13:48.790 --> 01:13:48.800 align:start position:0%
released such as risk five
 

01:13:48.800 --> 01:13:50.870 align:start position:0%
released such as risk five
that<01:13:49.120><c> calling</c><01:13:49.520><c> convention</c><01:13:50.080><c> document</c><01:13:50.560><c> as</c><01:13:50.719><c> well</c>

01:13:50.870 --> 01:13:50.880 align:start position:0%
that calling convention document as well
 

01:13:50.880 --> 01:13:53.350 align:start position:0%
that calling convention document as well
as<01:13:51.120><c> all</c><01:13:51.280><c> of</c><01:13:51.440><c> those</c><01:13:51.760><c> instruction</c><01:13:52.320><c> documents</c>

01:13:53.350 --> 01:13:53.360 align:start position:0%
as all of those instruction documents
 

01:13:53.360 --> 01:13:54.950 align:start position:0%
as all of those instruction documents
uh<01:13:53.760><c> i</c><01:13:53.840><c> think</c><01:13:54.000><c> you're</c><01:13:54.159><c> careful</c><01:13:54.480><c> but</c><01:13:54.640><c> i</c><01:13:54.719><c> assume</c>

01:13:54.950 --> 01:13:54.960 align:start position:0%
uh i think you're careful but i assume
 

01:13:54.960 --> 01:13:56.790 align:start position:0%
uh i think you're careful but i assume
there's<01:13:55.199><c> like</c><01:13:55.280><c> a</c><01:13:55.360><c> high</c><01:13:55.600><c> level</c><01:13:55.840><c> of</c><01:13:56.000><c> cooperation</c>

01:13:56.790 --> 01:13:56.800 align:start position:0%
there's like a high level of cooperation
 

01:13:56.800 --> 01:13:58.470 align:start position:0%
there's like a high level of cooperation
between<01:13:57.120><c> the</c><01:13:57.199><c> compiler</c><01:13:57.760><c> designer</c><01:13:58.239><c> and</c><01:13:58.320><c> the</c>

01:13:58.470 --> 01:13:58.480 align:start position:0%
between the compiler designer and the
 

01:13:58.480 --> 01:14:00.229 align:start position:0%
between the compiler designer and the
instruction<01:13:58.960><c> set</c><01:13:59.199><c> designer</c>

01:14:00.229 --> 01:14:00.239 align:start position:0%
instruction set designer
 

01:14:00.239 --> 01:14:03.750 align:start position:0%
instruction set designer
um<01:14:01.600><c> but</c><01:14:01.760><c> yeah</c><01:14:02.560><c> short</c><01:14:02.800><c> answer</c><01:14:03.040><c> is</c><01:14:03.199><c> i</c><01:14:03.360><c> i</c><01:14:03.440><c> believe</c>

01:14:03.750 --> 01:14:03.760 align:start position:0%
um but yeah short answer is i i believe
 

01:14:03.760 --> 01:14:04.550 align:start position:0%
um but yeah short answer is i i believe
it's<01:14:03.920><c> a</c><01:14:04.080><c> third</c>

01:14:04.550 --> 01:14:04.560 align:start position:0%
it's a third
 

01:14:04.560 --> 01:14:07.110 align:start position:0%
it's a third
third<01:14:04.800><c> party</c><01:14:05.120><c> who</c><01:14:05.280><c> does</c><01:14:05.520><c> it</c><01:14:05.679><c> likely</c><01:14:06.080><c> with</c><01:14:06.719><c> a</c>

01:14:07.110 --> 01:14:07.120 align:start position:0%
third party who does it likely with a
 

01:14:07.120 --> 01:14:08.709 align:start position:0%
third party who does it likely with a
lot<01:14:07.280><c> of</c><01:14:07.360><c> cooperation</c><01:14:08.080><c> from</c><01:14:08.239><c> the</c><01:14:08.320><c> people</c><01:14:08.560><c> who</c>

01:14:08.709 --> 01:14:08.719 align:start position:0%
lot of cooperation from the people who
 

01:14:08.719 --> 01:14:09.830 align:start position:0%
lot of cooperation from the people who
make<01:14:08.880><c> the</c><01:14:08.960><c> instruction</c><01:14:09.440><c> set</c>

01:14:09.830 --> 01:14:09.840 align:start position:0%
make the instruction set
 

01:14:09.840 --> 01:14:12.709 align:start position:0%
make the instruction set
risk<01:14:10.080><c> five</c><01:14:10.480><c> is</c><01:14:10.640><c> probably</c><01:14:11.920><c> risk</c><01:14:12.159><c> five</c><01:14:12.400><c> might</c><01:14:12.560><c> be</c>

01:14:12.709 --> 01:14:12.719 align:start position:0%
risk five is probably risk five might be
 

01:14:12.719 --> 01:14:14.870 align:start position:0%
risk five is probably risk five might be
an<01:14:12.880><c> exception</c><01:14:13.920><c> where</c><01:14:14.159><c> because</c><01:14:14.480><c> it</c><01:14:14.560><c> came</c><01:14:14.800><c> out</c>

01:14:14.870 --> 01:14:14.880 align:start position:0%
an exception where because it came out
 

01:14:14.880 --> 01:14:16.550 align:start position:0%
an exception where because it came out
of<01:14:15.040><c> a</c><01:14:15.120><c> research</c><01:14:15.600><c> project</c>

01:14:16.550 --> 01:14:16.560 align:start position:0%
of a research project
 

01:14:16.560 --> 01:14:18.550 align:start position:0%
of a research project
they<01:14:16.800><c> may</c><01:14:16.960><c> have</c><01:14:17.199><c> written</c><01:14:17.520><c> the</c><01:14:17.920><c> the</c><01:14:18.080><c> compiler</c>

01:14:18.550 --> 01:14:18.560 align:start position:0%
they may have written the the compiler
 

01:14:18.560 --> 01:14:20.149 align:start position:0%
they may have written the the compiler
for<01:14:18.800><c> it</c><01:14:18.960><c> themselves</c>

01:14:20.149 --> 01:14:20.159 align:start position:0%
for it themselves
 

01:14:20.159 --> 01:14:23.270 align:start position:0%
for it themselves
as<01:14:20.320><c> well</c><01:14:21.360><c> i</c><01:14:21.600><c> i</c><01:14:21.760><c> don't</c><01:14:22.000><c> think</c><01:14:22.320><c> intel</c><01:14:22.719><c> has</c>

01:14:23.270 --> 01:14:23.280 align:start position:0%
as well i i don't think intel has
 

01:14:23.280 --> 01:14:26.870 align:start position:0%
as well i i don't think intel has
for<01:14:23.440><c> example</c><01:14:23.840><c> has</c><01:14:24.080><c> input</c><01:14:24.560><c> in</c><01:14:24.800><c> uh</c><01:14:25.840><c> in</c><01:14:25.920><c> gcc</c><01:14:26.640><c> or</c>

01:14:26.870 --> 01:14:26.880 align:start position:0%
for example has input in uh in gcc or
 

01:14:26.880 --> 01:14:45.510 align:start position:0%
for example has input in uh in gcc or
llvm

01:14:45.510 --> 01:14:45.520 align:start position:0%
 
 

01:14:45.520 --> 01:14:54.630 align:start position:0%
 
other<01:14:45.840><c> questions</c>

01:14:54.630 --> 01:14:54.640 align:start position:0%
 
 

01:14:54.640 --> 01:14:57.830 align:start position:0%
 
okay<01:14:55.760><c> well</c><01:14:56.400><c> uh</c><01:14:57.280><c> thanks</c>

01:14:57.830 --> 01:14:57.840 align:start position:0%
okay well uh thanks
 

01:14:57.840 --> 01:14:59.910 align:start position:0%
okay well uh thanks
for<01:14:58.320><c> listening</c><01:14:58.719><c> in</c><01:14:58.800><c> that</c><01:14:59.040><c> case</c><01:14:59.360><c> and</c><01:14:59.440><c> i</c><01:14:59.600><c> guess</c>

01:14:59.910 --> 01:14:59.920 align:start position:0%
for listening in that case and i guess
 

01:14:59.920 --> 01:15:01.750 align:start position:0%
for listening in that case and i guess
we<01:15:00.080><c> can</c><01:15:00.320><c> uh</c>

01:15:01.750 --> 01:15:01.760 align:start position:0%
we can uh
 

01:15:01.760 --> 01:15:04.870 align:start position:0%
we can uh
we<01:15:01.920><c> can</c><01:15:02.560><c> end</c><01:15:02.800><c> the</c><01:15:02.880><c> lecture</c><01:15:03.199><c> here</c><01:15:03.840><c> uh</c><01:15:04.480><c> with</c><01:15:04.719><c> five</c>

01:15:04.870 --> 01:15:04.880 align:start position:0%
we can end the lecture here uh with five
 

01:15:04.880 --> 01:15:06.470 align:start position:0%
we can end the lecture here uh with five
minutes<01:15:05.199><c> to</c><01:15:05.280><c> spare</c><01:15:05.679><c> so</c>

01:15:06.470 --> 01:15:06.480 align:start position:0%
minutes to spare so
 

01:15:06.480 --> 01:15:09.520 align:start position:0%
minutes to spare so
have<01:15:06.719><c> a</c><01:15:06.960><c> nice</c><01:15:07.199><c> rest</c><01:15:07.440><c> of</c>

