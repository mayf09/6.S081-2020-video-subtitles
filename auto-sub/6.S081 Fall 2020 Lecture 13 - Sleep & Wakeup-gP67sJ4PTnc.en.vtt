WEBVTT
Kind: captions
Language: en

00:00:05.520 --> 00:00:06.869 align:start position:0%
 
all<00:00:05.680><c> right</c>

00:00:06.869 --> 00:00:06.879 align:start position:0%
all right
 

00:00:06.879 --> 00:00:09.030 align:start position:0%
all right
i'd<00:00:07.040><c> like</c><00:00:07.200><c> to</c><00:00:07.279><c> get</c><00:00:07.520><c> started</c><00:00:08.080><c> um</c><00:00:08.480><c> can</c><00:00:08.720><c> anyone</c>

00:00:09.030 --> 00:00:09.040 align:start position:0%
i'd like to get started um can anyone
 

00:00:09.040 --> 00:00:09.910 align:start position:0%
i'd like to get started um can anyone
hear<00:00:09.280><c> me</c>

00:00:09.910 --> 00:00:09.920 align:start position:0%
hear me
 

00:00:09.920 --> 00:00:13.350 align:start position:0%
hear me
yep<00:00:10.480><c> loud</c><00:00:10.719><c> and</c><00:00:10.800><c> clear</c><00:00:11.519><c> good</c><00:00:12.400><c> all</c><00:00:12.559><c> right</c><00:00:12.880><c> so</c>

00:00:13.350 --> 00:00:13.360 align:start position:0%
yep loud and clear good all right so
 

00:00:13.360 --> 00:00:15.350 align:start position:0%
yep loud and clear good all right so
today<00:00:13.759><c> my</c><00:00:13.920><c> plan</c><00:00:14.400><c> is</c><00:00:14.559><c> for</c><00:00:14.719><c> first</c><00:00:14.960><c> i</c><00:00:15.040><c> want</c><00:00:15.200><c> to</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
today my plan is for first i want to
 

00:00:15.360 --> 00:00:17.189 align:start position:0%
today my plan is for first i want to
spend<00:00:15.519><c> a</c><00:00:15.599><c> few</c><00:00:15.759><c> minutes</c><00:00:16.240><c> um</c>

00:00:17.189 --> 00:00:17.199 align:start position:0%
spend a few minutes um
 

00:00:17.199 --> 00:00:19.510 align:start position:0%
spend a few minutes um
re-emphasizing<00:00:18.080><c> some</c><00:00:18.320><c> points</c><00:00:18.880><c> from</c><00:00:19.279><c> the</c>

00:00:19.510 --> 00:00:19.520 align:start position:0%
re-emphasizing some points from the
 

00:00:19.520 --> 00:00:21.590 align:start position:0%
re-emphasizing some points from the
lecture<00:00:19.920><c> last</c><00:00:20.160><c> week</c><00:00:20.480><c> on</c><00:00:20.720><c> thread</c><00:00:21.039><c> switching</c>

00:00:21.590 --> 00:00:21.600 align:start position:0%
lecture last week on thread switching
 

00:00:21.600 --> 00:00:22.230 align:start position:0%
lecture last week on thread switching
because

00:00:22.230 --> 00:00:22.240 align:start position:0%
because
 

00:00:22.240 --> 00:00:23.910 align:start position:0%
because
they<00:00:22.400><c> turned</c><00:00:22.640><c> out</c><00:00:22.720><c> to</c><00:00:22.800><c> be</c><00:00:22.880><c> important</c><00:00:23.279><c> points</c>

00:00:23.910 --> 00:00:23.920 align:start position:0%
they turned out to be important points
 

00:00:23.920 --> 00:00:25.029 align:start position:0%
they turned out to be important points
and<00:00:24.080><c> then</c><00:00:24.160><c> i</c><00:00:24.240><c> wanted</c><00:00:24.400><c> to</c><00:00:24.480><c> spend</c><00:00:24.720><c> most</c><00:00:24.880><c> of</c><00:00:24.960><c> the</c>

00:00:25.029 --> 00:00:25.039 align:start position:0%
and then i wanted to spend most of the
 

00:00:25.039 --> 00:00:26.310 align:start position:0%
and then i wanted to spend most of the
lecture<00:00:25.439><c> talking</c><00:00:25.680><c> about</c>

00:00:26.310 --> 00:00:26.320 align:start position:0%
lecture talking about
 

00:00:26.320 --> 00:00:29.589 align:start position:0%
lecture talking about
something<00:00:26.640><c> called</c><00:00:27.359><c> coordination</c><00:00:29.279><c> which</c><00:00:29.519><c> is</c>

00:00:29.589 --> 00:00:29.599 align:start position:0%
something called coordination which is
 

00:00:29.599 --> 00:00:30.870 align:start position:0%
something called coordination which is
the<00:00:29.679><c> larger</c><00:00:30.080><c> term</c><00:00:30.320><c> for</c>

00:00:30.870 --> 00:00:30.880 align:start position:0%
the larger term for
 

00:00:30.880 --> 00:00:33.190 align:start position:0%
the larger term for
xv6<00:00:31.519><c> sleep</c><00:00:31.760><c> and</c><00:00:31.840><c> wake-up</c><00:00:32.239><c> mechanism</c><00:00:32.960><c> and</c><00:00:33.120><c> in</c>

00:00:33.190 --> 00:00:33.200 align:start position:0%
xv6 sleep and wake-up mechanism and in
 

00:00:33.200 --> 00:00:33.990 align:start position:0%
xv6 sleep and wake-up mechanism and in
particularly

00:00:33.990 --> 00:00:34.000 align:start position:0%
particularly
 

00:00:34.000 --> 00:00:35.590 align:start position:0%
particularly
i'm<00:00:34.239><c> going</c><00:00:34.399><c> to</c><00:00:34.480><c> talk</c><00:00:34.640><c> about</c><00:00:34.800><c> the</c><00:00:34.880><c> lost</c><00:00:35.200><c> wake-up</c>

00:00:35.590 --> 00:00:35.600 align:start position:0%
i'm going to talk about the lost wake-up
 

00:00:35.600 --> 00:00:37.670 align:start position:0%
i'm going to talk about the lost wake-up
problem<00:00:36.960><c> all</c><00:00:37.120><c> right</c>

00:00:37.670 --> 00:00:37.680 align:start position:0%
problem all right
 

00:00:37.680 --> 00:00:41.030 align:start position:0%
problem all right
so<00:00:38.399><c> um</c><00:00:39.360><c> one</c><00:00:40.000><c> one</c><00:00:40.160><c> point</c><00:00:40.399><c> i</c><00:00:40.480><c> want</c><00:00:40.640><c> to</c><00:00:40.719><c> just</c>

00:00:41.030 --> 00:00:41.040 align:start position:0%
so um one one point i want to just
 

00:00:41.040 --> 00:00:46.549 align:start position:0%
so um one one point i want to just
mention<00:00:41.360><c> again</c><00:00:42.000><c> is</c><00:00:42.239><c> that</c><00:00:42.840><c> uh</c>

00:00:46.549 --> 00:00:46.559 align:start position:0%
 
 

00:00:46.559 --> 00:00:50.229 align:start position:0%
 
is<00:00:46.719><c> the</c><00:00:46.800><c> fact</c><00:00:47.120><c> that</c><00:00:47.520><c> xv6</c><00:00:48.399><c> whenever</c><00:00:49.440><c> um</c>

00:00:50.229 --> 00:00:50.239 align:start position:0%
is the fact that xv6 whenever um
 

00:00:50.239 --> 00:00:53.590 align:start position:0%
is the fact that xv6 whenever um
anything<00:00:50.559><c> calls</c><00:00:50.960><c> switch</c><00:00:51.520><c> to</c><00:00:51.760><c> switch</c><00:00:53.199><c> from</c><00:00:53.360><c> one</c>

00:00:53.590 --> 00:00:53.600 align:start position:0%
anything calls switch to switch from one
 

00:00:53.600 --> 00:00:54.630 align:start position:0%
anything calls switch to switch from one
thread<00:00:53.840><c> to</c><00:00:54.000><c> another</c>

00:00:54.630 --> 00:00:54.640 align:start position:0%
thread to another
 

00:00:54.640 --> 00:00:56.470 align:start position:0%
thread to another
usually<00:00:54.960><c> from</c><00:00:55.199><c> a</c><00:00:55.600><c> kernel</c><00:00:55.920><c> thread</c><00:00:56.160><c> to</c><00:00:56.320><c> the</c>

00:00:56.470 --> 00:00:56.480 align:start position:0%
usually from a kernel thread to the
 

00:00:56.480 --> 00:00:58.389 align:start position:0%
usually from a kernel thread to the
scheduler<00:00:56.960><c> thread</c>

00:00:58.389 --> 00:00:58.399 align:start position:0%
scheduler thread
 

00:00:58.399 --> 00:01:01.510 align:start position:0%
scheduler thread
it's<00:00:58.640><c> always</c><00:00:58.960><c> preceded</c><00:01:00.320><c> by</c><00:01:00.559><c> an</c><00:01:00.719><c> acquire</c>

00:01:01.510 --> 00:01:01.520 align:start position:0%
it's always preceded by an acquire
 

00:01:01.520 --> 00:01:06.630 align:start position:0%
it's always preceded by an acquire
of<00:01:03.120><c> this</c><00:01:03.440><c> processes</c><00:01:04.479><c> lock</c>

00:01:06.630 --> 00:01:06.640 align:start position:0%
of this processes lock
 

00:01:06.640 --> 00:01:08.710 align:start position:0%
of this processes lock
so<00:01:06.880><c> a</c><00:01:07.040><c> process</c><00:01:07.520><c> requires</c><00:01:07.920><c> this</c><00:01:08.159><c> lock</c><00:01:08.479><c> called</c>

00:01:08.710 --> 00:01:08.720 align:start position:0%
so a process requires this lock called
 

00:01:08.720 --> 00:01:10.070 align:start position:0%
so a process requires this lock called
switch

00:01:10.070 --> 00:01:10.080 align:start position:0%
switch
 

00:01:10.080 --> 00:01:11.670 align:start position:0%
switch
which<00:01:10.400><c> always</c><00:01:10.640><c> switches</c><00:01:11.040><c> into</c><00:01:11.200><c> the</c><00:01:11.280><c> scheduler</c>

00:01:11.670 --> 00:01:11.680 align:start position:0%
which always switches into the scheduler
 

00:01:11.680 --> 00:01:13.190 align:start position:0%
which always switches into the scheduler
and<00:01:11.840><c> it's</c><00:01:11.920><c> the</c><00:01:12.080><c> schedule</c><00:01:12.479><c> that</c><00:01:12.640><c> releases</c><00:01:13.040><c> the</c>

00:01:13.190 --> 00:01:13.200 align:start position:0%
and it's the schedule that releases the
 

00:01:13.200 --> 00:01:14.789 align:start position:0%
and it's the schedule that releases the
lock

00:01:14.789 --> 00:01:14.799 align:start position:0%
lock
 

00:01:14.799 --> 00:01:18.149 align:start position:0%
lock
um<00:01:16.799><c> and</c><00:01:16.960><c> in</c><00:01:17.040><c> fact</c><00:01:17.439><c> almost</c><00:01:17.759><c> always</c><00:01:18.000><c> the</c>

00:01:18.149 --> 00:01:18.159 align:start position:0%
um and in fact almost always the
 

00:01:18.159 --> 00:01:19.510 align:start position:0%
um and in fact almost always the
sequence<00:01:18.479><c> looks</c><00:01:18.720><c> more</c><00:01:18.880><c> like</c><00:01:19.119><c> this</c>

00:01:19.510 --> 00:01:19.520 align:start position:0%
sequence looks more like this
 

00:01:19.520 --> 00:01:21.670 align:start position:0%
sequence looks more like this
where<00:01:19.840><c> the</c><00:01:20.159><c> a</c><00:01:20.320><c> process</c><00:01:21.040><c> it</c><00:01:21.200><c> wants</c><00:01:21.360><c> to</c><00:01:21.439><c> go</c><00:01:21.520><c> to</c>

00:01:21.670 --> 00:01:21.680 align:start position:0%
where the a process it wants to go to
 

00:01:21.680 --> 00:01:23.190 align:start position:0%
where the a process it wants to go to
sleep<00:01:21.920><c> for</c><00:01:22.000><c> some</c><00:01:22.240><c> reason</c><00:01:22.640><c> it's</c><00:01:22.799><c> yielding</c><00:01:23.119><c> the</c>

00:01:23.190 --> 00:01:23.200 align:start position:0%
sleep for some reason it's yielding the
 

00:01:23.200 --> 00:01:24.789 align:start position:0%
sleep for some reason it's yielding the
cpu<00:01:23.680><c> or</c><00:01:23.759><c> waiting</c><00:01:24.000><c> for</c><00:01:24.159><c> something</c>

00:01:24.789 --> 00:01:24.799 align:start position:0%
cpu or waiting for something
 

00:01:24.799 --> 00:01:27.350 align:start position:0%
cpu or waiting for something
um<00:01:25.040><c> it</c><00:01:25.119><c> acquires</c><00:01:25.520><c> a</c><00:01:25.600><c> lock</c><00:01:25.840><c> on</c><00:01:26.000><c> itself</c><00:01:26.720><c> it</c><00:01:26.960><c> sets</c>

00:01:27.350 --> 00:01:27.360 align:start position:0%
um it acquires a lock on itself it sets
 

00:01:27.360 --> 00:01:29.109 align:start position:0%
um it acquires a lock on itself it sets
its<00:01:27.680><c> state</c>

00:01:29.109 --> 00:01:29.119 align:start position:0%
its state
 

00:01:29.119 --> 00:01:31.749 align:start position:0%
its state
um<00:01:30.720><c> and</c><00:01:30.960><c> there's</c><00:01:31.119><c> a</c><00:01:31.200><c> number</c><00:01:31.439><c> of</c><00:01:31.520><c> different</c>

00:01:31.749 --> 00:01:31.759 align:start position:0%
um and there's a number of different
 

00:01:31.759 --> 00:01:32.870 align:start position:0%
um and there's a number of different
states<00:01:32.159><c> what</c><00:01:32.400><c> we</c><00:01:32.560><c> see</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
states what we see
 

00:01:32.880 --> 00:01:35.510 align:start position:0%
states what we see
we<00:01:32.960><c> saw</c><00:01:33.200><c> last</c><00:01:33.439><c> week</c><00:01:33.680><c> was</c><00:01:34.799><c> set</c><00:01:34.960><c> at</c><00:01:35.119><c> stake</c><00:01:35.280><c> to</c>

00:01:35.510 --> 00:01:35.520 align:start position:0%
we saw last week was set at stake to
 

00:01:35.520 --> 00:01:38.310 align:start position:0%
we saw last week was set at stake to
runnable

00:01:38.310 --> 00:01:38.320 align:start position:0%
 
 

00:01:38.320 --> 00:01:40.710 align:start position:0%
 
instead<00:01:38.640><c> of</c><00:01:38.840><c> running</c><00:01:39.759><c> um</c><00:01:40.079><c> and</c><00:01:40.240><c> then</c><00:01:40.479><c> call</c>

00:01:40.710 --> 00:01:40.720 align:start position:0%
instead of running um and then call
 

00:01:40.720 --> 00:01:41.749 align:start position:0%
instead of running um and then call
switch

00:01:41.749 --> 00:01:41.759 align:start position:0%
switch
 

00:01:41.759 --> 00:01:45.910 align:start position:0%
switch
or<00:01:42.000><c> sked</c><00:01:42.640><c> which</c><00:01:43.439><c> itself</c><00:01:43.920><c> calls</c><00:01:44.159><c> switch</c>

00:01:45.910 --> 00:01:45.920 align:start position:0%
or sked which itself calls switch
 

00:01:45.920 --> 00:01:48.630 align:start position:0%
or sked which itself calls switch
um<00:01:47.040><c> and</c><00:01:47.200><c> that</c><00:01:47.600><c> you</c><00:01:47.680><c> know</c><00:01:47.840><c> this</c><00:01:48.079><c> switch</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
um and that you know this switch
 

00:01:48.640 --> 00:01:49.749 align:start position:0%
um and that you know this switch
basically<00:01:49.119><c> switches</c>

00:01:49.749 --> 00:01:49.759 align:start position:0%
basically switches
 

00:01:49.759 --> 00:01:52.630 align:start position:0%
basically switches
threads<00:01:50.640><c> um</c><00:01:51.360><c> over</c><00:01:51.600><c> into</c><00:01:51.840><c> the</c><00:01:52.079><c> scheduler</c>

00:01:52.630 --> 00:01:52.640 align:start position:0%
threads um over into the scheduler
 

00:01:52.640 --> 00:01:53.830 align:start position:0%
threads um over into the scheduler
thread

00:01:53.830 --> 00:01:53.840 align:start position:0%
thread
 

00:01:53.840 --> 00:01:56.789 align:start position:0%
thread
which<00:01:54.399><c> so</c><00:01:54.640><c> as</c><00:01:55.360><c> previous</c><00:01:55.840><c> call</c><00:01:56.079><c> to</c><00:01:56.320><c> switch</c><00:01:56.640><c> over</c>

00:01:56.789 --> 00:01:56.799 align:start position:0%
which so as previous call to switch over
 

00:01:56.799 --> 00:01:57.429 align:start position:0%
which so as previous call to switch over
in<00:01:56.880><c> the</c>

00:01:57.429 --> 00:01:57.439 align:start position:0%
in the
 

00:01:57.439 --> 00:02:01.429 align:start position:0%
in the
scheduler<00:01:58.079><c> thread</c><00:01:58.320><c> returns</c><00:02:00.399><c> um</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
scheduler thread returns um
 

00:02:01.439 --> 00:02:06.149 align:start position:0%
scheduler thread returns um
and<00:02:01.520><c> then</c><00:02:01.680><c> the</c><00:02:01.840><c> sweat</c><00:02:04.200><c> scheduler</c><00:02:05.280><c> thread</c>

00:02:06.149 --> 00:02:06.159 align:start position:0%
and then the sweat scheduler thread
 

00:02:06.159 --> 00:02:09.830 align:start position:0%
and then the sweat scheduler thread
calls<00:02:06.560><c> release</c><00:02:07.280><c> on</c><00:02:08.319><c> um</c>

00:02:09.830 --> 00:02:09.840 align:start position:0%
calls release on um
 

00:02:09.840 --> 00:02:11.670 align:start position:0%
calls release on um
the<00:02:10.000><c> lock</c><00:02:10.239><c> of</c><00:02:10.319><c> the</c><00:02:10.479><c> process</c><00:02:10.879><c> that's</c><00:02:11.440><c> just</c>

00:02:11.670 --> 00:02:11.680 align:start position:0%
the lock of the process that's just
 

00:02:11.680 --> 00:02:13.990 align:start position:0%
the lock of the process that's just
yielded<00:02:12.160><c> the</c><00:02:12.239><c> cpu</c>

00:02:13.990 --> 00:02:14.000 align:start position:0%
yielded the cpu
 

00:02:14.000 --> 00:02:17.990 align:start position:0%
yielded the cpu
um<00:02:16.400><c> the</c><00:02:16.800><c> reason</c><00:02:17.120><c> for</c><00:02:17.280><c> this</c>

00:02:17.990 --> 00:02:18.000 align:start position:0%
um the reason for this
 

00:02:18.000 --> 00:02:22.229 align:start position:0%
um the reason for this
just<00:02:18.239><c> to</c><00:02:18.400><c> repeat</c><00:02:19.200><c> um</c><00:02:20.000><c> is</c><00:02:20.160><c> that</c><00:02:20.840><c> uh</c>

00:02:22.229 --> 00:02:22.239 align:start position:0%
just to repeat um is that uh
 

00:02:22.239 --> 00:02:24.550 align:start position:0%
just to repeat um is that uh
the<00:02:22.640><c> acquisition</c><00:02:23.200><c> of</c><00:02:23.280><c> this</c><00:02:23.520><c> lock</c><00:02:24.239><c> on</c><00:02:24.400><c> the</c>

00:02:24.550 --> 00:02:24.560 align:start position:0%
the acquisition of this lock on the
 

00:02:24.560 --> 00:02:25.750 align:start position:0%
the acquisition of this lock on the
process<00:02:24.959><c> prevents</c>

00:02:25.750 --> 00:02:25.760 align:start position:0%
process prevents
 

00:02:25.760 --> 00:02:29.190 align:start position:0%
process prevents
the<00:02:25.920><c> scheduler</c><00:02:26.480><c> on</c><00:02:26.640><c> a</c><00:02:26.720><c> different</c><00:02:27.200><c> core</c><00:02:28.080><c> from</c>

00:02:29.190 --> 00:02:29.200 align:start position:0%
the scheduler on a different core from
 

00:02:29.200 --> 00:02:33.030 align:start position:0%
the scheduler on a different core from
from<00:02:29.840><c> looking</c><00:02:30.400><c> right</c><00:02:30.640><c> at</c><00:02:30.879><c> this</c><00:02:31.120><c> point</c><00:02:31.440><c> in</c><00:02:31.599><c> time</c>

00:02:33.030 --> 00:02:33.040 align:start position:0%
from looking right at this point in time
 

00:02:33.040 --> 00:02:35.430 align:start position:0%
from looking right at this point in time
and<00:02:33.360><c> seeing</c><00:02:33.680><c> that</c><00:02:33.840><c> oh</c><00:02:34.160><c> this</c><00:02:34.560><c> thread</c><00:02:35.120><c> is</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
and seeing that oh this thread is
 

00:02:35.440 --> 00:02:36.470 align:start position:0%
and seeing that oh this thread is
runnable

00:02:36.470 --> 00:02:36.480 align:start position:0%
runnable
 

00:02:36.480 --> 00:02:38.710 align:start position:0%
runnable
and<00:02:36.879><c> trying</c><00:02:37.120><c> to</c><00:02:37.280><c> run</c><00:02:37.519><c> it</c><00:02:38.080><c> because</c><00:02:38.319><c> every</c><00:02:38.560><c> other</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
and trying to run it because every other
 

00:02:38.720 --> 00:02:41.350 align:start position:0%
and trying to run it because every other
core<00:02:39.040><c> may</c><00:02:39.200><c> be</c><00:02:39.280><c> running</c><00:02:39.599><c> a</c><00:02:39.760><c> scheduler</c><00:02:40.239><c> loop</c>

00:02:41.350 --> 00:02:41.360 align:start position:0%
core may be running a scheduler loop
 

00:02:41.360 --> 00:02:44.229 align:start position:0%
core may be running a scheduler loop
which<00:02:41.599><c> is</c><00:02:41.760><c> continually</c><00:02:42.480><c> looping</c><00:02:42.800><c> over</c><00:02:43.040><c> the</c><00:02:43.280><c> uh</c>

00:02:44.229 --> 00:02:44.239 align:start position:0%
which is continually looping over the uh
 

00:02:44.239 --> 00:02:45.190 align:start position:0%
which is continually looping over the uh
process<00:02:44.640><c> table</c>

00:02:45.190 --> 00:02:45.200 align:start position:0%
process table
 

00:02:45.200 --> 00:02:47.589 align:start position:0%
process table
looking<00:02:45.440><c> for</c><00:02:45.599><c> runnable</c><00:02:46.000><c> threads</c><00:02:47.040><c> so</c><00:02:47.200><c> any</c><00:02:47.440><c> one</c>

00:02:47.589 --> 00:02:47.599 align:start position:0%
looking for runnable threads so any one
 

00:02:47.599 --> 00:02:48.309 align:start position:0%
looking for runnable threads so any one
of<00:02:47.680><c> them</c><00:02:47.920><c> may</c>

00:02:48.309 --> 00:02:48.319 align:start position:0%
of them may
 

00:02:48.319 --> 00:02:50.390 align:start position:0%
of them may
see<00:02:48.480><c> that</c><00:02:48.640><c> this</c><00:02:48.800><c> thread's</c><00:02:49.120><c> runnable</c><00:02:50.000><c> if</c><00:02:50.239><c> we</c>

00:02:50.390 --> 00:02:50.400 align:start position:0%
see that this thread's runnable if we
 

00:02:50.400 --> 00:02:52.630 align:start position:0%
see that this thread's runnable if we
hadn't<00:02:50.720><c> acquired</c><00:02:51.120><c> the</c><00:02:51.280><c> process</c><00:02:51.760><c> lock</c>

00:02:52.630 --> 00:02:52.640 align:start position:0%
hadn't acquired the process lock
 

00:02:52.640 --> 00:02:53.990 align:start position:0%
hadn't acquired the process lock
so<00:02:52.879><c> the</c><00:02:52.959><c> fact</c><00:02:53.120><c> that</c><00:02:53.200><c> we</c><00:02:53.280><c> acquire</c><00:02:53.519><c> the</c><00:02:53.599><c> process</c>

00:02:53.990 --> 00:02:54.000 align:start position:0%
so the fact that we acquire the process
 

00:02:54.000 --> 00:02:55.670 align:start position:0%
so the fact that we acquire the process
lock<00:02:54.239><c> means</c><00:02:54.480><c> that</c><00:02:54.800><c> the</c><00:02:54.879><c> other</c><00:02:55.040><c> schedulers</c>

00:02:55.670 --> 00:02:55.680 align:start position:0%
lock means that the other schedulers
 

00:02:55.680 --> 00:02:56.229 align:start position:0%
lock means that the other schedulers
before<00:02:55.920><c> they</c>

00:02:56.229 --> 00:02:56.239 align:start position:0%
before they
 

00:02:56.239 --> 00:02:58.630 align:start position:0%
before they
even<00:02:56.480><c> look</c><00:02:56.720><c> at</c><00:02:56.800><c> a</c><00:02:57.040><c> process</c><00:02:57.440><c> of</c><00:02:57.519><c> state</c><00:02:58.400><c> must</c>

00:02:58.630 --> 00:02:58.640 align:start position:0%
even look at a process of state must
 

00:02:58.640 --> 00:03:00.309 align:start position:0%
even look at a process of state must
acquire<00:02:58.959><c> its</c><00:02:59.200><c> lock</c><00:02:59.440><c> so</c><00:02:59.599><c> we</c><00:02:59.680><c> know</c><00:02:59.920><c> after</c>

00:03:00.309 --> 00:03:00.319 align:start position:0%
acquire its lock so we know after
 

00:03:00.319 --> 00:03:02.149 align:start position:0%
acquire its lock so we know after
this<00:03:00.560><c> acquisition</c><00:03:01.440><c> no</c><00:03:01.680><c> other</c><00:03:01.840><c> thread</c><00:03:02.080><c> is</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
this acquisition no other thread is
 

00:03:02.159 --> 00:03:03.350 align:start position:0%
this acquisition no other thread is
going<00:03:02.239><c> to</c><00:03:02.319><c> look</c><00:03:02.480><c> at</c><00:03:02.560><c> the</c><00:03:02.720><c> lock</c>

00:03:03.350 --> 00:03:03.360 align:start position:0%
going to look at the lock
 

00:03:03.360 --> 00:03:05.509 align:start position:0%
going to look at the lock
we<00:03:03.599><c> can't</c><00:03:03.920><c> give</c><00:03:04.159><c> up</c><00:03:04.400><c> the</c><00:03:04.560><c> lock</c><00:03:04.959><c> here</c><00:03:05.200><c> though</c><00:03:05.440><c> we</c>

00:03:05.509 --> 00:03:05.519 align:start position:0%
we can't give up the lock here though we
 

00:03:05.519 --> 00:03:06.550 align:start position:0%
we can't give up the lock here though we
can't<00:03:05.680><c> give</c><00:03:05.920><c> up</c><00:03:06.000><c> the</c><00:03:06.159><c> lock</c>

00:03:06.550 --> 00:03:06.560 align:start position:0%
can't give up the lock
 

00:03:06.560 --> 00:03:08.790 align:start position:0%
can't give up the lock
before<00:03:07.040><c> calling</c><00:03:07.440><c> switch</c><00:03:07.920><c> that</c><00:03:08.159><c> is</c><00:03:08.640><c> this</c>

00:03:08.790 --> 00:03:08.800 align:start position:0%
before calling switch that is this
 

00:03:08.800 --> 00:03:10.390 align:start position:0%
before calling switch that is this
thread<00:03:09.120><c> acquires</c><00:03:09.519><c> a</c><00:03:09.599><c> lock</c><00:03:09.840><c> but</c><00:03:09.920><c> it</c><00:03:10.000><c> can't</c><00:03:10.159><c> give</c>

00:03:10.390 --> 00:03:10.400 align:start position:0%
thread acquires a lock but it can't give
 

00:03:10.400 --> 00:03:11.430 align:start position:0%
thread acquires a lock but it can't give
it<00:03:10.560><c> up</c>

00:03:11.430 --> 00:03:11.440 align:start position:0%
it up
 

00:03:11.440 --> 00:03:13.509 align:start position:0%
it up
because<00:03:11.680><c> if</c><00:03:11.760><c> we</c><00:03:11.920><c> did</c><00:03:12.239><c> then</c><00:03:12.879><c> right</c><00:03:13.120><c> after</c><00:03:13.360><c> we</c>

00:03:13.509 --> 00:03:13.519 align:start position:0%
because if we did then right after we
 

00:03:13.519 --> 00:03:15.910 align:start position:0%
because if we did then right after we
gave<00:03:13.680><c> it</c><00:03:13.840><c> up</c><00:03:14.400><c> some</c><00:03:14.720><c> other</c>

00:03:15.910 --> 00:03:15.920 align:start position:0%
gave it up some other
 

00:03:15.920 --> 00:03:17.509 align:start position:0%
gave it up some other
core<00:03:16.319><c> scheduler</c><00:03:16.800><c> would</c><00:03:16.959><c> probably</c><00:03:17.360><c> start</c>

00:03:17.509 --> 00:03:17.519 align:start position:0%
core scheduler would probably start
 

00:03:17.519 --> 00:03:20.070 align:start position:0%
core scheduler would probably start
running<00:03:17.840><c> this</c><00:03:18.080><c> process</c><00:03:18.800><c> even</c><00:03:19.120><c> though</c>

00:03:20.070 --> 00:03:20.080 align:start position:0%
running this process even though
 

00:03:20.080 --> 00:03:22.149 align:start position:0%
running this process even though
the<00:03:20.239><c> thread</c><00:03:20.560><c> is</c><00:03:20.720><c> currently</c><00:03:21.200><c> running</c><00:03:21.760><c> on</c><00:03:21.920><c> this</c>

00:03:22.149 --> 00:03:22.159 align:start position:0%
the thread is currently running on this
 

00:03:22.159 --> 00:03:23.750 align:start position:0%
the thread is currently running on this
core<00:03:22.800><c> i</c><00:03:22.959><c> mean</c><00:03:23.120><c> having</c><00:03:23.360><c> two</c>

00:03:23.750 --> 00:03:23.760 align:start position:0%
core i mean having two
 

00:03:23.760 --> 00:03:26.309 align:start position:0%
core i mean having two
cores<00:03:24.159><c> run</c><00:03:24.400><c> the</c><00:03:24.480><c> same</c><00:03:24.799><c> thread</c><00:03:25.680><c> using</c><00:03:26.000><c> the</c><00:03:26.080><c> same</c>

00:03:26.309 --> 00:03:26.319 align:start position:0%
cores run the same thread using the same
 

00:03:26.319 --> 00:03:26.869 align:start position:0%
cores run the same thread using the same
stack

00:03:26.869 --> 00:03:26.879 align:start position:0%
stack
 

00:03:26.879 --> 00:03:31.990 align:start position:0%
stack
is<00:03:28.959><c> would</c><00:03:29.120><c> cause</c><00:03:29.360><c> a</c><00:03:29.440><c> pretty</c><00:03:29.680><c> instant</c><00:03:30.000><c> crash</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
is would cause a pretty instant crash
 

00:03:32.000 --> 00:03:34.390 align:start position:0%
is would cause a pretty instant crash
and<00:03:32.159><c> therefore</c><00:03:32.959><c> the</c><00:03:33.519><c> process</c><00:03:33.920><c> acquires</c><00:03:34.239><c> the</c>

00:03:34.390 --> 00:03:34.400 align:start position:0%
and therefore the process acquires the
 

00:03:34.400 --> 00:03:35.990 align:start position:0%
and therefore the process acquires the
lock<00:03:34.799><c> and</c><00:03:34.959><c> doesn't</c><00:03:35.280><c> release</c><00:03:35.599><c> it</c><00:03:35.680><c> on</c><00:03:35.760><c> call</c>

00:03:35.990 --> 00:03:36.000 align:start position:0%
lock and doesn't release it on call
 

00:03:36.000 --> 00:03:37.910 align:start position:0%
lock and doesn't release it on call
switch<00:03:36.319><c> and</c><00:03:36.480><c> a</c><00:03:36.720><c> different</c><00:03:37.040><c> thread</c><00:03:37.440><c> namely</c><00:03:37.760><c> the</c>

00:03:37.910 --> 00:03:37.920 align:start position:0%
switch and a different thread namely the
 

00:03:37.920 --> 00:03:39.509 align:start position:0%
switch and a different thread namely the
scheduler<00:03:38.480><c> thread</c>

00:03:39.509 --> 00:03:39.519 align:start position:0%
scheduler thread
 

00:03:39.519 --> 00:03:41.509 align:start position:0%
scheduler thread
actually<00:03:39.840><c> releases</c><00:03:40.319><c> the</c><00:03:40.480><c> lock</c><00:03:40.799><c> at</c><00:03:40.959><c> a</c><00:03:41.120><c> point</c>

00:03:41.509 --> 00:03:41.519 align:start position:0%
actually releases the lock at a point
 

00:03:41.519 --> 00:03:42.789 align:start position:0%
actually releases the lock at a point
after<00:03:41.920><c> this</c><00:03:42.239><c> thread</c>

00:03:42.789 --> 00:03:42.799 align:start position:0%
after this thread
 

00:03:42.799 --> 00:03:44.470 align:start position:0%
after this thread
has<00:03:43.040><c> completely</c><00:03:43.440><c> stopped</c><00:03:43.840><c> using</c><00:03:44.080><c> its</c><00:03:44.239><c> own</c>

00:03:44.470 --> 00:03:44.480 align:start position:0%
has completely stopped using its own
 

00:03:44.480 --> 00:03:46.149 align:start position:0%
has completely stopped using its own
stack<00:03:44.959><c> so</c><00:03:45.120><c> at</c><00:03:45.200><c> this</c><00:03:45.360><c> point</c><00:03:45.599><c> it's</c><00:03:45.760><c> okay</c>

00:03:46.149 --> 00:03:46.159 align:start position:0%
stack so at this point it's okay
 

00:03:46.159 --> 00:03:50.070 align:start position:0%
stack so at this point it's okay
for<00:03:46.319><c> another</c><00:03:47.280><c> course</c><00:03:47.680><c> scheduler</c>

00:03:50.070 --> 00:03:50.080 align:start position:0%
for another course scheduler
 

00:03:50.080 --> 00:03:51.589 align:start position:0%
for another course scheduler
to<00:03:50.239><c> start</c><00:03:50.480><c> running</c><00:03:50.720><c> this</c><00:03:50.879><c> thread</c><00:03:51.280><c> because</c><00:03:51.519><c> the</c>

00:03:51.589 --> 00:03:51.599 align:start position:0%
to start running this thread because the
 

00:03:51.599 --> 00:03:53.990 align:start position:0%
to start running this thread because the
thread<00:03:51.920><c> is</c><00:03:52.239><c> now</c><00:03:52.799><c> no</c><00:03:53.040><c> longer</c><00:03:53.360><c> running</c>

00:03:53.990 --> 00:03:54.000 align:start position:0%
thread is now no longer running
 

00:03:54.000 --> 00:03:58.869 align:start position:0%
thread is now no longer running
and<00:03:54.159><c> has</c><00:03:54.319><c> given</c><00:03:54.560><c> up</c><00:03:55.840><c> given</c><00:03:56.080><c> up</c><00:03:56.239><c> the</c><00:03:56.319><c> processor</c>

00:03:58.869 --> 00:03:58.879 align:start position:0%
 
 

00:03:58.879 --> 00:04:01.429 align:start position:0%
 
okay<00:03:59.360><c> so</c><00:03:59.519><c> that's</c><00:03:59.760><c> an</c><00:03:59.840><c> important</c><00:04:00.239><c> point</c><00:04:01.200><c> and</c>

00:04:01.429 --> 00:04:01.439 align:start position:0%
okay so that's an important point and
 

00:04:01.439 --> 00:04:03.030 align:start position:0%
okay so that's an important point and
it'll<00:04:01.680><c> come</c><00:04:01.840><c> up</c><00:04:02.000><c> in</c><00:04:02.080><c> a</c><00:04:02.159><c> few</c><00:04:02.319><c> minutes</c><00:04:02.720><c> it's</c><00:04:02.879><c> one</c>

00:04:03.030 --> 00:04:03.040 align:start position:0%
it'll come up in a few minutes it's one
 

00:04:03.040 --> 00:04:05.110 align:start position:0%
it'll come up in a few minutes it's one
of<00:04:03.120><c> the</c><00:04:03.280><c> many</c><00:04:03.519><c> constraints</c><00:04:04.159><c> on</c><00:04:04.239><c> the</c><00:04:04.400><c> design</c><00:04:04.959><c> of</c>

00:04:05.110 --> 00:04:05.120 align:start position:0%
of the many constraints on the design of
 

00:04:05.120 --> 00:04:05.750 align:start position:0%
of the many constraints on the design of
the

00:04:05.750 --> 00:04:05.760 align:start position:0%
the
 

00:04:05.760 --> 00:04:09.030 align:start position:0%
the
sleep<00:04:06.080><c> wake</c><00:04:06.319><c> up</c><00:04:06.480><c> coordination</c><00:04:07.120><c> scheme</c>

00:04:09.030 --> 00:04:09.040 align:start position:0%
sleep wake up coordination scheme
 

00:04:09.040 --> 00:04:12.789 align:start position:0%
sleep wake up coordination scheme
any<00:04:09.280><c> questions</c><00:04:09.760><c> about</c><00:04:11.120><c> this</c><00:04:11.439><c> holding</c><00:04:12.000><c> of</c><00:04:12.159><c> the</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
any questions about this holding of the
 

00:04:12.799 --> 00:04:19.509 align:start position:0%
any questions about this holding of the
p<00:04:13.040><c> arrow</c><00:04:13.280><c> lock</c><00:04:13.599><c> across</c><00:04:14.000><c> switch</c>

00:04:19.509 --> 00:04:19.519 align:start position:0%
 
 

00:04:19.519 --> 00:04:22.950 align:start position:0%
 
yeah<00:04:19.840><c> if</c><00:04:20.880><c> yes</c><00:04:21.600><c> when</c><00:04:21.759><c> we</c><00:04:21.919><c> have</c><00:04:22.160><c> multiple</c>

00:04:22.950 --> 00:04:22.960 align:start position:0%
yeah if yes when we have multiple
 

00:04:22.960 --> 00:04:25.590 align:start position:0%
yeah if yes when we have multiple
cores<00:04:23.680><c> the</c><00:04:23.840><c> only</c><00:04:24.080><c> reason</c><00:04:24.400><c> they're</c><00:04:24.639><c> able</c><00:04:25.040><c> to</c>

00:04:25.590 --> 00:04:25.600 align:start position:0%
cores the only reason they're able to
 

00:04:25.600 --> 00:04:26.870 align:start position:0%
cores the only reason they're able to
have<00:04:25.840><c> the</c><00:04:26.000><c> same</c>

00:04:26.870 --> 00:04:26.880 align:start position:0%
have the same
 

00:04:26.880 --> 00:04:28.790 align:start position:0%
have the same
view<00:04:27.120><c> of</c><00:04:27.199><c> the</c><00:04:27.360><c> lock</c><00:04:27.600><c> is</c><00:04:27.759><c> because</c><00:04:28.080><c> there's</c><00:04:28.400><c> a</c>

00:04:28.790 --> 00:04:28.800 align:start position:0%
view of the lock is because there's a
 

00:04:28.800 --> 00:04:30.310 align:start position:0%
view of the lock is because there's a
single<00:04:29.280><c> shared</c><00:04:29.759><c> physical</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
single shared physical
 

00:04:30.320 --> 00:04:33.590 align:start position:0%
single shared physical
memory<00:04:30.720><c> system</c><00:04:31.199><c> right</c><00:04:31.759><c> that</c><00:04:32.000><c> is</c><00:04:32.080><c> correct</c>

00:04:33.590 --> 00:04:33.600 align:start position:0%
memory system right that is correct
 

00:04:33.600 --> 00:04:36.150 align:start position:0%
memory system right that is correct
so<00:04:33.840><c> what</c><00:04:34.080><c> is</c><00:04:34.240><c> there</c><00:04:34.960><c> like</c><00:04:35.280><c> implementations</c>

00:04:36.150 --> 00:04:36.160 align:start position:0%
so what is there like implementations
 

00:04:36.160 --> 00:04:37.110 align:start position:0%
so what is there like implementations
where<00:04:36.400><c> there's</c>

00:04:37.110 --> 00:04:37.120 align:start position:0%
where there's
 

00:04:37.120 --> 00:04:39.350 align:start position:0%
where there's
weird<00:04:37.520><c> file</c><00:04:37.840><c> systems</c><00:04:38.320><c> that</c><00:04:38.560><c> can't</c><00:04:38.880><c> guarantee</c>

00:04:39.350 --> 00:04:39.360 align:start position:0%
weird file systems that can't guarantee
 

00:04:39.360 --> 00:04:43.430 align:start position:0%
weird file systems that can't guarantee
this<00:04:39.680><c> atmosphere</c><00:04:40.400><c> so</c><00:04:40.639><c> we</c><00:04:40.720><c> can</c><00:04:40.880><c> lock</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
this atmosphere so we can lock
 

00:04:43.440 --> 00:04:45.830 align:start position:0%
this atmosphere so we can lock
if<00:04:43.600><c> you</c><00:04:43.680><c> buy</c><00:04:44.000><c> two</c><00:04:44.160><c> computers</c><00:04:45.280><c> then</c><00:04:45.520><c> they</c><00:04:45.680><c> don't</c>

00:04:45.830 --> 00:04:45.840 align:start position:0%
if you buy two computers then they don't
 

00:04:45.840 --> 00:04:48.710 align:start position:0%
if you buy two computers then they don't
share<00:04:46.080><c> memory</c>

00:04:48.710 --> 00:04:48.720 align:start position:0%
 
 

00:04:48.720 --> 00:04:50.550 align:start position:0%
 
right<00:04:49.199><c> so</c><00:04:49.360><c> that's</c><00:04:49.600><c> one</c><00:04:49.759><c> way</c><00:04:49.919><c> to</c><00:04:50.000><c> do</c><00:04:50.160><c> if</c><00:04:50.240><c> you</c><00:04:50.320><c> buy</c>

00:04:50.550 --> 00:04:50.560 align:start position:0%
right so that's one way to do if you buy
 

00:04:50.560 --> 00:04:51.909 align:start position:0%
right so that's one way to do if you buy
two<00:04:50.800><c> separate</c><00:04:51.120><c> computers</c>

00:04:51.909 --> 00:04:51.919 align:start position:0%
two separate computers
 

00:04:51.919 --> 00:04:53.749 align:start position:0%
two separate computers
then<00:04:52.080><c> they</c><00:04:52.240><c> won't</c><00:04:52.479><c> share</c><00:04:52.880><c> memory</c><00:04:53.280><c> and</c><00:04:53.680><c> we</c>

00:04:53.749 --> 00:04:53.759 align:start position:0%
then they won't share memory and we
 

00:04:53.759 --> 00:04:56.870 align:start position:0%
then they won't share memory and we
wouldn't<00:04:54.160><c> have</c><00:04:54.320><c> any</c><00:04:54.479><c> of</c><00:04:54.560><c> these</c><00:04:54.840><c> problems</c>

00:04:56.870 --> 00:04:56.880 align:start position:0%
wouldn't have any of these problems
 

00:04:56.880 --> 00:05:00.310 align:start position:0%
wouldn't have any of these problems
it's<00:04:57.120><c> just</c><00:04:57.280><c> that</c><00:04:57.440><c> the</c><00:04:58.960><c> way</c><00:04:59.600><c> processor</c><00:05:00.080><c> chips</c>

00:05:00.310 --> 00:05:00.320 align:start position:0%
it's just that the way processor chips
 

00:05:00.320 --> 00:05:02.390 align:start position:0%
it's just that the way processor chips
look<00:05:00.560><c> these</c><00:05:00.800><c> days</c>

00:05:02.390 --> 00:05:02.400 align:start position:0%
look these days
 

00:05:02.400 --> 00:05:03.749 align:start position:0%
look these days
there's<00:05:02.639><c> always</c><00:05:02.880><c> multiple</c><00:05:03.280><c> cores</c><00:05:03.600><c> on</c><00:05:03.680><c> a</c>

00:05:03.749 --> 00:05:03.759 align:start position:0%
there's always multiple cores on a
 

00:05:03.759 --> 00:05:05.029 align:start position:0%
there's always multiple cores on a
single<00:05:04.000><c> processor</c><00:05:04.479><c> chip</c><00:05:04.720><c> and</c><00:05:04.800><c> so</c><00:05:04.960><c> the</c>

00:05:05.029 --> 00:05:05.039 align:start position:0%
single processor chip and so the
 

00:05:05.039 --> 00:05:06.230 align:start position:0%
single processor chip and so the
hardware<00:05:05.600><c> just</c>

00:05:06.230 --> 00:05:06.240 align:start position:0%
hardware just
 

00:05:06.240 --> 00:05:09.430 align:start position:0%
hardware just
is<00:05:06.479><c> built</c><00:05:07.360><c> to</c><00:05:07.440><c> have</c><00:05:07.680><c> multiple</c><00:05:08.160><c> cores</c><00:05:09.120><c> sharing</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
is built to have multiple cores sharing
 

00:05:09.440 --> 00:05:12.870 align:start position:0%
is built to have multiple cores sharing
the<00:05:09.600><c> same</c><00:05:09.919><c> memory</c><00:05:10.320><c> system</c>

00:05:12.870 --> 00:05:12.880 align:start position:0%
 
 

00:05:12.880 --> 00:05:17.749 align:start position:0%
 
i<00:05:13.039><c> see</c><00:05:13.440><c> thanks</c><00:05:14.639><c> yeah</c>

00:05:17.749 --> 00:05:17.759 align:start position:0%
 
 

00:05:17.759 --> 00:05:22.469 align:start position:0%
 
okay<00:05:19.680><c> so</c><00:05:19.840><c> that's</c><00:05:20.000><c> one</c><00:05:20.240><c> point</c>

00:05:22.469 --> 00:05:22.479 align:start position:0%
okay so that's one point
 

00:05:22.479 --> 00:05:24.710 align:start position:0%
okay so that's one point
another<00:05:22.880><c> point</c><00:05:23.440><c> um</c><00:05:24.160><c> which</c><00:05:24.400><c> i</c><00:05:24.479><c> don't</c><00:05:24.639><c> think</c>

00:05:24.710 --> 00:05:24.720 align:start position:0%
another point um which i don't think
 

00:05:24.720 --> 00:05:26.230 align:start position:0%
another point um which i don't think
i've<00:05:24.880><c> mentioned</c><00:05:25.199><c> yet</c><00:05:25.440><c> has</c><00:05:25.680><c> to</c><00:05:25.840><c> do</c>

00:05:26.230 --> 00:05:26.240 align:start position:0%
i've mentioned yet has to do
 

00:05:26.240 --> 00:05:29.350 align:start position:0%
i've mentioned yet has to do
with<00:05:27.360><c> uh</c><00:05:28.000><c> the</c><00:05:28.160><c> fact</c><00:05:28.400><c> that</c><00:05:29.120><c> in</c>

00:05:29.350 --> 00:05:29.360 align:start position:0%
with uh the fact that in
 

00:05:29.360 --> 00:05:33.189 align:start position:0%
with uh the fact that in
xv6<00:05:30.639><c> a</c><00:05:30.800><c> process</c><00:05:31.280><c> is</c><00:05:31.520><c> not</c><00:05:31.840><c> allowed</c><00:05:32.240><c> to</c><00:05:32.400><c> hold</c>

00:05:33.189 --> 00:05:33.199 align:start position:0%
xv6 a process is not allowed to hold
 

00:05:33.199 --> 00:05:37.670 align:start position:0%
xv6 a process is not allowed to hold
any<00:05:33.520><c> other</c><00:05:33.840><c> lock</c><00:05:34.400><c> when</c><00:05:34.639><c> it</c><00:05:35.199><c> calls</c><00:05:35.600><c> switch</c>

00:05:37.670 --> 00:05:37.680 align:start position:0%
any other lock when it calls switch
 

00:05:37.680 --> 00:05:40.070 align:start position:0%
any other lock when it calls switch
process<00:05:38.160><c> is</c><00:05:38.240><c> required</c><00:05:38.800><c> to</c><00:05:38.960><c> hold</c><00:05:39.360><c> p</c><00:05:39.600><c> arrow</c><00:05:39.840><c> lock</c>

00:05:40.070 --> 00:05:40.080 align:start position:0%
process is required to hold p arrow lock
 

00:05:40.080 --> 00:05:41.670 align:start position:0%
process is required to hold p arrow lock
when<00:05:40.240><c> it</c><00:05:40.320><c> calls</c><00:05:40.560><c> switch</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
when it calls switch
 

00:05:41.680 --> 00:05:44.230 align:start position:0%
when it calls switch
but<00:05:41.919><c> is</c><00:05:42.080><c> forbidden</c><00:05:42.960><c> to</c><00:05:43.039><c> hold</c><00:05:43.520><c> any</c><00:05:43.759><c> other</c><00:05:44.000><c> lock</c>

00:05:44.230 --> 00:05:44.240 align:start position:0%
but is forbidden to hold any other lock
 

00:05:44.240 --> 00:05:45.270 align:start position:0%
but is forbidden to hold any other lock
when<00:05:44.400><c> it</c><00:05:44.479><c> calls</c><00:05:44.800><c> switch</c>

00:05:45.270 --> 00:05:45.280 align:start position:0%
when it calls switch
 

00:05:45.280 --> 00:05:47.029 align:start position:0%
when it calls switch
so<00:05:45.440><c> this</c><00:05:45.600><c> is</c><00:05:45.680><c> another</c><00:05:46.080><c> important</c><00:05:46.479><c> constraint</c>

00:05:47.029 --> 00:05:47.039 align:start position:0%
so this is another important constraint
 

00:05:47.039 --> 00:05:48.310 align:start position:0%
so this is another important constraint
on<00:05:47.120><c> the</c><00:05:47.280><c> design</c><00:05:47.680><c> of</c>

00:05:48.310 --> 00:05:48.320 align:start position:0%
on the design of
 

00:05:48.320 --> 00:05:51.270 align:start position:0%
on the design of
many<00:05:48.639><c> things</c><00:05:49.039><c> including</c><00:05:50.479><c> how</c><00:05:50.720><c> sleep</c><00:05:51.039><c> is</c><00:05:51.120><c> going</c>

00:05:51.270 --> 00:05:51.280 align:start position:0%
many things including how sleep is going
 

00:05:51.280 --> 00:05:52.870 align:start position:0%
many things including how sleep is going
to<00:05:51.360><c> work</c><00:05:51.680><c> so</c>

00:05:52.870 --> 00:05:52.880 align:start position:0%
to work so
 

00:05:52.880 --> 00:05:54.550 align:start position:0%
to work so
let<00:05:53.039><c> me</c><00:05:53.120><c> lay</c><00:05:53.360><c> out</c><00:05:53.440><c> the</c><00:05:53.520><c> reasoning</c><00:05:53.919><c> for</c><00:05:54.080><c> this</c><00:05:54.240><c> so</c>

00:05:54.550 --> 00:05:54.560 align:start position:0%
let me lay out the reasoning for this so
 

00:05:54.560 --> 00:06:02.950 align:start position:0%
let me lay out the reasoning for this so
it's<00:05:54.880><c> no</c><00:05:55.199><c> other</c><00:05:55.440><c> locks</c>

00:06:02.950 --> 00:06:02.960 align:start position:0%
 
 

00:06:02.960 --> 00:06:07.990 align:start position:0%
 
when<00:06:03.199><c> you</c><00:06:03.280><c> call</c><00:06:04.840><c> switch</c>

00:06:07.990 --> 00:06:08.000 align:start position:0%
 
 

00:06:08.000 --> 00:06:10.150 align:start position:0%
 
um<00:06:08.319><c> a</c><00:06:08.400><c> scenario</c><00:06:09.199><c> sort</c><00:06:09.360><c> of</c><00:06:09.440><c> illustrating</c><00:06:09.919><c> why</c>

00:06:10.150 --> 00:06:10.160 align:start position:0%
um a scenario sort of illustrating why
 

00:06:10.160 --> 00:06:12.230 align:start position:0%
um a scenario sort of illustrating why
this<00:06:10.400><c> is</c><00:06:10.800><c> this</c><00:06:11.039><c> rule</c><00:06:11.280><c> has</c><00:06:11.440><c> to</c><00:06:11.600><c> be</c><00:06:11.680><c> enforced</c><00:06:12.080><c> and</c>

00:06:12.230 --> 00:06:12.240 align:start position:0%
this is this rule has to be enforced and
 

00:06:12.240 --> 00:06:13.909 align:start position:0%
this is this rule has to be enforced and
this<00:06:12.400><c> is</c><00:06:12.560><c> a</c><00:06:12.639><c> rule</c><00:06:13.120><c> that</c>

00:06:13.909 --> 00:06:13.919 align:start position:0%
this is a rule that
 

00:06:13.919 --> 00:06:17.510 align:start position:0%
this is a rule that
you<00:06:14.080><c> know</c><00:06:14.960><c> if</c><00:06:15.120><c> you're</c><00:06:16.560><c> extending</c><00:06:17.199><c> you</c><00:06:17.360><c> know</c><00:06:17.440><c> if</c>

00:06:17.510 --> 00:06:17.520 align:start position:0%
you know if you're extending you know if
 

00:06:17.520 --> 00:06:19.350 align:start position:0%
you know if you're extending you know if
you're<00:06:17.680><c> a</c><00:06:17.759><c> programmer</c><00:06:18.319><c> developing</c><00:06:18.720><c> the</c><00:06:18.880><c> xv6</c>

00:06:19.350 --> 00:06:19.360 align:start position:0%
you're a programmer developing the xv6
 

00:06:19.360 --> 00:06:20.870 align:start position:0%
you're a programmer developing the xv6
kernel<00:06:19.680><c> you</c><00:06:19.759><c> have</c><00:06:19.840><c> to</c><00:06:20.000><c> follow</c><00:06:20.400><c> this</c><00:06:20.639><c> rule</c>

00:06:20.870 --> 00:06:20.880 align:start position:0%
kernel you have to follow this rule
 

00:06:20.880 --> 00:06:21.830 align:start position:0%
kernel you have to follow this rule
along<00:06:21.199><c> with</c>

00:06:21.830 --> 00:06:21.840 align:start position:0%
along with
 

00:06:21.840 --> 00:06:25.270 align:start position:0%
along with
many<00:06:22.080><c> other</c><00:06:22.240><c> rules</c><00:06:24.319><c> so</c><00:06:24.479><c> the</c><00:06:24.639><c> justification</c>

00:06:25.270 --> 00:06:25.280 align:start position:0%
many other rules so the justification
 

00:06:25.280 --> 00:06:26.070 align:start position:0%
many other rules so the justification
for<00:06:25.440><c> this</c><00:06:25.600><c> rule</c>

00:06:26.070 --> 00:06:26.080 align:start position:0%
for this rule
 

00:06:26.080 --> 00:06:27.990 align:start position:0%
for this rule
supposing<00:06:26.479><c> we</c><00:06:26.639><c> have</c><00:06:26.960><c> process</c><00:06:27.440><c> one</c><00:06:27.680><c> or</c><00:06:27.919><c> you</c>

00:06:27.990 --> 00:06:28.000 align:start position:0%
supposing we have process one or you
 

00:06:28.000 --> 00:06:30.629 align:start position:0%
supposing we have process one or you
know<00:06:28.479><c> the</c><00:06:28.720><c> kernel</c><00:06:29.039><c> thread</c><00:06:29.360><c> for</c><00:06:29.600><c> process</c><00:06:30.000><c> one</c>

00:06:30.629 --> 00:06:30.639 align:start position:0%
know the kernel thread for process one
 

00:06:30.639 --> 00:06:33.670 align:start position:0%
know the kernel thread for process one
and<00:06:31.039><c> it</c><00:06:31.199><c> requires</c><00:06:31.759><c> some</c><00:06:32.080><c> lock</c>

00:06:33.670 --> 00:06:33.680 align:start position:0%
and it requires some lock
 

00:06:33.680 --> 00:06:35.270 align:start position:0%
and it requires some lock
not<00:06:34.000><c> its</c><00:06:34.160><c> price</c><00:06:34.400><c> of</c><00:06:34.479><c> stock</c><00:06:34.720><c> but</c><00:06:34.880><c> just</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
not its price of stock but just
 

00:06:35.280 --> 00:06:36.870 align:start position:0%
not its price of stock but just
something<00:06:35.520><c> like</c><00:06:35.680><c> maybe</c><00:06:35.919><c> it's</c><00:06:36.160><c> using</c><00:06:36.400><c> the</c><00:06:36.560><c> disk</c>

00:06:36.870 --> 00:06:36.880 align:start position:0%
something like maybe it's using the disk
 

00:06:36.880 --> 00:06:38.230 align:start position:0%
something like maybe it's using the disk
or<00:06:37.039><c> using</c><00:06:37.360><c> the</c><00:06:37.520><c> ur</c>

00:06:38.230 --> 00:06:38.240 align:start position:0%
or using the ur
 

00:06:38.240 --> 00:06:42.150 align:start position:0%
or using the ur
to<00:06:38.479><c> console</c><00:06:39.280><c> and</c><00:06:39.919><c> acquire</c><00:06:40.319><c> some</c><00:06:40.560><c> lock</c>

00:06:42.150 --> 00:06:42.160 align:start position:0%
to console and acquire some lock
 

00:06:42.160 --> 00:06:45.110 align:start position:0%
to console and acquire some lock
and<00:06:42.319><c> supposing</c><00:06:42.800><c> it</c><00:06:42.960><c> did</c><00:06:43.280><c> then</c><00:06:44.639><c> give</c><00:06:44.880><c> up</c><00:06:45.039><c> the</c>

00:06:45.110 --> 00:06:45.120 align:start position:0%
and supposing it did then give up the
 

00:06:45.120 --> 00:06:47.670 align:start position:0%
and supposing it did then give up the
cpu<00:06:45.600><c> by</c><00:06:45.759><c> calling</c><00:06:46.160><c> switch</c><00:06:46.560><c> or</c><00:06:46.720><c> yield</c><00:06:47.120><c> or</c><00:06:47.280><c> sked</c>

00:06:47.670 --> 00:06:47.680 align:start position:0%
cpu by calling switch or yield or sked
 

00:06:47.680 --> 00:06:48.309 align:start position:0%
cpu by calling switch or yield or sked
or<00:06:47.840><c> something</c>

00:06:48.309 --> 00:06:48.319 align:start position:0%
or something
 

00:06:48.319 --> 00:06:51.430 align:start position:0%
or something
while<00:06:48.560><c> still</c><00:06:48.800><c> holding</c><00:06:49.039><c> this</c><00:06:49.280><c> lock</c>

00:06:51.430 --> 00:06:51.440 align:start position:0%
while still holding this lock
 

00:06:51.440 --> 00:06:53.990 align:start position:0%
while still holding this lock
so<00:06:51.599><c> now</c><00:06:51.840><c> p1</c><00:06:52.560><c> holds</c><00:06:52.800><c> a</c><00:06:52.880><c> lock</c><00:06:53.120><c> this</c><00:06:53.360><c> lock's</c><00:06:53.599><c> held</c>

00:06:53.990 --> 00:06:54.000 align:start position:0%
so now p1 holds a lock this lock's held
 

00:06:54.000 --> 00:06:56.230 align:start position:0%
so now p1 holds a lock this lock's held
but<00:06:54.240><c> it's</c><00:06:54.319><c> not</c><00:06:54.560><c> running</c>

00:06:56.230 --> 00:06:56.240 align:start position:0%
but it's not running
 

00:06:56.240 --> 00:06:58.309 align:start position:0%
but it's not running
and<00:06:56.720><c> imagine</c><00:06:57.199><c> also</c><00:06:57.520><c> for</c><00:06:57.599><c> a</c><00:06:57.680><c> moment</c><00:06:58.000><c> that</c><00:06:58.080><c> we're</c>

00:06:58.309 --> 00:06:58.319 align:start position:0%
and imagine also for a moment that we're
 

00:06:58.319 --> 00:07:01.749 align:start position:0%
and imagine also for a moment that we're
on<00:06:58.400><c> a</c><00:06:58.479><c> machine</c><00:06:58.880><c> with</c><00:06:59.039><c> just</c><00:06:59.280><c> a</c><00:06:59.360><c> single</c><00:06:59.840><c> core</c>

00:07:01.749 --> 00:07:01.759 align:start position:0%
on a machine with just a single core
 

00:07:01.759 --> 00:07:03.830 align:start position:0%
on a machine with just a single core
so<00:07:01.840><c> there's</c><00:07:02.080><c> only</c><00:07:02.240><c> one</c><00:07:02.560><c> core</c><00:07:03.120><c> the</c><00:07:03.360><c> process</c><00:07:03.680><c> one</c>

00:07:03.830 --> 00:07:03.840 align:start position:0%
so there's only one core the process one
 

00:07:03.840 --> 00:07:04.790 align:start position:0%
so there's only one core the process one
called<00:07:04.080><c> switch</c>

00:07:04.790 --> 00:07:04.800 align:start position:0%
called switch
 

00:07:04.800 --> 00:07:06.309 align:start position:0%
called switch
which<00:07:05.039><c> transfers</c><00:07:05.520><c> the</c><00:07:05.680><c> scheduler</c><00:07:06.160><c> the</c>

00:07:06.309 --> 00:07:06.319 align:start position:0%
which transfers the scheduler the
 

00:07:06.319 --> 00:07:08.230 align:start position:0%
which transfers the scheduler the
scheduler<00:07:06.800><c> sees</c><00:07:07.039><c> a</c><00:07:07.120><c> hot</c><00:07:07.360><c> process</c><00:07:07.759><c> two's</c>

00:07:08.230 --> 00:07:08.240 align:start position:0%
scheduler sees a hot process two's
 

00:07:08.240 --> 00:07:09.990 align:start position:0%
scheduler sees a hot process two's
kernel<00:07:08.560><c> thread</c><00:07:08.880><c> is</c><00:07:08.960><c> waiting</c><00:07:09.280><c> to</c><00:07:09.440><c> run</c>

00:07:09.990 --> 00:07:10.000 align:start position:0%
kernel thread is waiting to run
 

00:07:10.000 --> 00:07:11.990 align:start position:0%
kernel thread is waiting to run
and<00:07:10.160><c> so</c><00:07:10.319><c> the</c><00:07:10.400><c> scheduler</c><00:07:10.880><c> switches</c><00:07:11.199><c> to</c><00:07:11.360><c> process</c>

00:07:11.990 --> 00:07:12.000 align:start position:0%
and so the scheduler switches to process
 

00:07:12.000 --> 00:07:13.990 align:start position:0%
and so the scheduler switches to process
starts<00:07:12.479><c> running</c><00:07:12.800><c> process</c><00:07:13.199><c> to</c><00:07:13.440><c> two</c><00:07:13.680><c> switches</c>

00:07:13.990 --> 00:07:14.000 align:start position:0%
starts running process to two switches
 

00:07:14.000 --> 00:07:15.029 align:start position:0%
starts running process to two switches
to<00:07:14.160><c> process</c><00:07:14.560><c> two</c>

00:07:15.029 --> 00:07:15.039 align:start position:0%
to process two
 

00:07:15.039 --> 00:07:16.469 align:start position:0%
to process two
and<00:07:15.199><c> supposing</c><00:07:15.599><c> process</c><00:07:15.919><c> two</c><00:07:16.080><c> for</c><00:07:16.240><c> whatever</c>

00:07:16.469 --> 00:07:16.479 align:start position:0%
and supposing process two for whatever
 

00:07:16.479 --> 00:07:18.309 align:start position:0%
and supposing process two for whatever
reason<00:07:16.800><c> maybe</c><00:07:17.120><c> it</c><00:07:17.360><c> also</c><00:07:17.599><c> wants</c><00:07:17.840><c> to</c><00:07:18.000><c> use</c><00:07:18.160><c> the</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
reason maybe it also wants to use the
 

00:07:18.319 --> 00:07:19.270 align:start position:0%
reason maybe it also wants to use the
disk<00:07:18.720><c> or</c>

00:07:19.270 --> 00:07:19.280 align:start position:0%
disk or
 

00:07:19.280 --> 00:07:21.749 align:start position:0%
disk or
use<00:07:19.520><c> the</c><00:07:19.599><c> uart</c><00:07:20.160><c> or</c><00:07:20.240><c> something</c><00:07:20.880><c> and</c><00:07:21.120><c> it</c><00:07:21.280><c> calls</c>

00:07:21.749 --> 00:07:21.759 align:start position:0%
use the uart or something and it calls
 

00:07:21.759 --> 00:07:22.469 align:start position:0%
use the uart or something and it calls
acquire

00:07:22.469 --> 00:07:22.479 align:start position:0%
acquire
 

00:07:22.479 --> 00:07:27.670 align:start position:0%
acquire
on<00:07:22.720><c> the</c><00:07:22.880><c> same</c><00:07:23.280><c> lock</c>

00:07:27.670 --> 00:07:27.680 align:start position:0%
 
 

00:07:27.680 --> 00:07:30.710 align:start position:0%
 
so<00:07:27.840><c> we</c><00:07:28.000><c> have</c><00:07:28.160><c> a</c><00:07:28.639><c> second</c><00:07:29.039><c> acquire</c><00:07:29.520><c> of</c><00:07:29.599><c> this</c><00:07:29.919><c> lock</c>

00:07:30.710 --> 00:07:30.720 align:start position:0%
so we have a second acquire of this lock
 

00:07:30.720 --> 00:07:33.749 align:start position:0%
so we have a second acquire of this lock
it's<00:07:30.880><c> the</c><00:07:31.120><c> same</c><00:07:31.759><c> the</c><00:07:31.919><c> same</c><00:07:32.240><c> lock</c>

00:07:33.749 --> 00:07:33.759 align:start position:0%
it's the same the same lock
 

00:07:33.759 --> 00:07:35.029 align:start position:0%
it's the same the same lock
of<00:07:33.840><c> course</c><00:07:34.080><c> the</c><00:07:34.160><c> lock's</c><00:07:34.400><c> already</c><00:07:34.639><c> held</c><00:07:34.880><c> so</c>

00:07:35.029 --> 00:07:35.039 align:start position:0%
of course the lock's already held so
 

00:07:35.039 --> 00:07:36.790 align:start position:0%
of course the lock's already held so
this<00:07:35.199><c> acquirer</c><00:07:35.520><c> can't</c><00:07:35.759><c> get</c><00:07:36.000><c> it</c><00:07:36.479><c> these</c><00:07:36.639><c> are</c>

00:07:36.790 --> 00:07:36.800 align:start position:0%
this acquirer can't get it these are
 

00:07:36.800 --> 00:07:37.909 align:start position:0%
this acquirer can't get it these are
spin<00:07:37.120><c> locks</c>

00:07:37.909 --> 00:07:37.919 align:start position:0%
spin locks
 

00:07:37.919 --> 00:07:39.909 align:start position:0%
spin locks
so<00:07:38.319><c> what</c><00:07:38.479><c> this</c><00:07:38.720><c> actually</c><00:07:39.039><c> causes</c><00:07:39.440><c> to</c><00:07:39.520><c> happen</c>

00:07:39.909 --> 00:07:39.919 align:start position:0%
so what this actually causes to happen
 

00:07:39.919 --> 00:07:41.909 align:start position:0%
so what this actually causes to happen
is<00:07:40.000><c> that</c><00:07:40.400><c> process</c><00:07:40.880><c> two</c>

00:07:41.909 --> 00:07:41.919 align:start position:0%
is that process two
 

00:07:41.919 --> 00:07:44.309 align:start position:0%
is that process two
inside<00:07:42.400><c> acquire</c><00:07:43.120><c> will</c><00:07:43.280><c> just</c><00:07:43.520><c> sit</c><00:07:43.759><c> in</c><00:07:43.919><c> a</c><00:07:44.000><c> loop</c>

00:07:44.309 --> 00:07:44.319 align:start position:0%
inside acquire will just sit in a loop
 

00:07:44.319 --> 00:07:45.909 align:start position:0%
inside acquire will just sit in a loop
spinning<00:07:44.879><c> waiting</c><00:07:45.199><c> for</c><00:07:45.360><c> the</c><00:07:45.440><c> lock</c><00:07:45.680><c> to</c><00:07:45.759><c> be</c>

00:07:45.909 --> 00:07:45.919 align:start position:0%
spinning waiting for the lock to be
 

00:07:45.919 --> 00:07:47.110 align:start position:0%
spinning waiting for the lock to be
released

00:07:47.110 --> 00:07:47.120 align:start position:0%
released
 

00:07:47.120 --> 00:07:49.029 align:start position:0%
released
and<00:07:47.520><c> acquire</c><00:07:47.840><c> won't</c><00:07:48.000><c> return</c><00:07:48.720><c> and</c><00:07:48.800><c> since</c>

00:07:49.029 --> 00:07:49.039 align:start position:0%
and acquire won't return and since
 

00:07:49.039 --> 00:07:50.550 align:start position:0%
and acquire won't return and since
acquirer<00:07:49.440><c> doesn't</c><00:07:49.680><c> return</c>

00:07:50.550 --> 00:07:50.560 align:start position:0%
acquirer doesn't return
 

00:07:50.560 --> 00:07:52.469 align:start position:0%
acquirer doesn't return
process<00:07:51.039><c> 2</c><00:07:51.360><c> can't</c><00:07:51.599><c> doesn't</c><00:07:51.840><c> have</c><00:07:51.919><c> a</c><00:07:52.080><c> chance</c>

00:07:52.469 --> 00:07:52.479 align:start position:0%
process 2 can't doesn't have a chance
 

00:07:52.479 --> 00:07:53.990 align:start position:0%
process 2 can't doesn't have a chance
even<00:07:52.639><c> though</c><00:07:52.800><c> it</c><00:07:52.879><c> may</c><00:07:53.039><c> be</c><00:07:53.199><c> willing</c><00:07:53.520><c> to</c><00:07:53.680><c> yield</c>

00:07:53.990 --> 00:07:54.000 align:start position:0%
even though it may be willing to yield
 

00:07:54.000 --> 00:07:55.270 align:start position:0%
even though it may be willing to yield
the<00:07:54.160><c> cpu</c><00:07:54.560><c> when</c><00:07:54.720><c> it's</c><00:07:54.879><c> done</c>

00:07:55.270 --> 00:07:55.280 align:start position:0%
the cpu when it's done
 

00:07:55.280 --> 00:07:57.350 align:start position:0%
the cpu when it's done
later<00:07:55.599><c> on</c><00:07:56.479><c> it</c><00:07:56.560><c> doesn't</c><00:07:56.720><c> get</c><00:07:56.879><c> a</c><00:07:56.960><c> chance</c><00:07:57.199><c> to</c>

00:07:57.350 --> 00:07:57.360 align:start position:0%
later on it doesn't get a chance to
 

00:07:57.360 --> 00:07:58.869 align:start position:0%
later on it doesn't get a chance to
because<00:07:57.599><c> acquire</c><00:07:58.000><c> doesn't</c>

00:07:58.869 --> 00:07:58.879 align:start position:0%
because acquire doesn't
 

00:07:58.879 --> 00:08:01.270 align:start position:0%
because acquire doesn't
return<00:07:59.280><c> until</c><00:07:59.520><c> the</c><00:07:59.680><c> lock's</c><00:08:00.000><c> released</c><00:08:01.039><c> but</c><00:08:01.199><c> the</c>

00:08:01.270 --> 00:08:01.280 align:start position:0%
return until the lock's released but the
 

00:08:01.280 --> 00:08:03.029 align:start position:0%
return until the lock's released but the
only<00:08:01.440><c> way</c><00:08:01.599><c> the</c><00:08:01.680><c> lock</c><00:08:01.919><c> could</c><00:08:02.080><c> be</c><00:08:02.160><c> released</c>

00:08:03.029 --> 00:08:03.039 align:start position:0%
only way the lock could be released
 

00:08:03.039 --> 00:08:06.869 align:start position:0%
only way the lock could be released
is<00:08:03.199><c> if</c><00:08:03.680><c> process</c><00:08:04.240><c> one</c><00:08:05.680><c> resumes</c><00:08:06.240><c> execution</c><00:08:06.800><c> and</c>

00:08:06.869 --> 00:08:06.879 align:start position:0%
is if process one resumes execution and
 

00:08:06.879 --> 00:08:09.110 align:start position:0%
is if process one resumes execution and
presumably<00:08:07.520><c> later</c>

00:08:09.110 --> 00:08:09.120 align:start position:0%
presumably later
 

00:08:09.120 --> 00:08:11.589 align:start position:0%
presumably later
if<00:08:09.280><c> it's</c><00:08:09.520><c> correctly</c><00:08:10.400><c> it</c><00:08:10.560><c> doesn't</c><00:08:10.800><c> have</c>

00:08:11.589 --> 00:08:11.599 align:start position:0%
if it's correctly it doesn't have
 

00:08:11.599 --> 00:08:12.869 align:start position:0%
if it's correctly it doesn't have
terrible<00:08:12.000><c> bugs</c><00:08:12.319><c> in</c><00:08:12.479><c> it</c>

00:08:12.869 --> 00:08:12.879 align:start position:0%
terrible bugs in it
 

00:08:12.879 --> 00:08:15.110 align:start position:0%
terrible bugs in it
it<00:08:13.039><c> was</c><00:08:13.360><c> going</c><00:08:13.440><c> to</c><00:08:13.599><c> call</c><00:08:14.240><c> was</c><00:08:14.479><c> intending</c><00:08:14.960><c> to</c>

00:08:15.110 --> 00:08:15.120 align:start position:0%
it was going to call was intending to
 

00:08:15.120 --> 00:08:16.710 align:start position:0%
it was going to call was intending to
release<00:08:15.520><c> this</c><00:08:15.759><c> lock</c>

00:08:16.710 --> 00:08:16.720 align:start position:0%
release this lock
 

00:08:16.720 --> 00:08:19.110 align:start position:0%
release this lock
right<00:08:17.039><c> but</c><00:08:17.199><c> it</c><00:08:17.360><c> hasn't</c><00:08:17.599><c> happened</c><00:08:18.000><c> yet</c><00:08:18.879><c> because</c>

00:08:19.110 --> 00:08:19.120 align:start position:0%
right but it hasn't happened yet because
 

00:08:19.120 --> 00:08:20.070 align:start position:0%
right but it hasn't happened yet because
it<00:08:19.199><c> called</c><00:08:19.520><c> switch</c>

00:08:20.070 --> 00:08:20.080 align:start position:0%
it called switch
 

00:08:20.080 --> 00:08:22.309 align:start position:0%
it called switch
and<00:08:20.319><c> process</c><00:08:20.720><c> 2</c><00:08:21.039><c> is</c><00:08:21.599><c> spinning</c><00:08:22.000><c> waiting</c><00:08:22.240><c> for</c>

00:08:22.309 --> 00:08:22.319 align:start position:0%
and process 2 is spinning waiting for
 

00:08:22.319 --> 00:08:24.830 align:start position:0%
and process 2 is spinning waiting for
the<00:08:22.400><c> lock</c><00:08:22.560><c> so</c><00:08:22.720><c> this</c><00:08:22.879><c> is</c><00:08:22.960><c> a</c><00:08:23.039><c> deadlock</c>

00:08:24.830 --> 00:08:24.840 align:start position:0%
the lock so this is a deadlock
 

00:08:24.840 --> 00:08:27.430 align:start position:0%
the lock so this is a deadlock
right<00:08:27.039><c> and</c>

00:08:27.430 --> 00:08:27.440 align:start position:0%
right and
 

00:08:27.440 --> 00:08:34.550 align:start position:0%
right and
it<00:08:27.520><c> will</c><00:08:27.680><c> just</c><00:08:27.840><c> cause</c><00:08:28.160><c> the</c><00:08:28.240><c> system</c><00:08:28.720><c> to</c><00:08:30.240><c> freeze</c>

00:08:34.550 --> 00:08:34.560 align:start position:0%
 
 

00:08:34.560 --> 00:08:36.070 align:start position:0%
 
and<00:08:34.719><c> while</c><00:08:34.959><c> i've</c><00:08:35.120><c> described</c><00:08:35.599><c> this</c><00:08:35.839><c> in</c><00:08:36.000><c> the</c>

00:08:36.070 --> 00:08:36.080 align:start position:0%
and while i've described this in the
 

00:08:36.080 --> 00:08:38.310 align:start position:0%
and while i've described this in the
context<00:08:36.479><c> of</c><00:08:36.640><c> a</c><00:08:36.719><c> machine</c><00:08:37.039><c> with</c><00:08:37.200><c> a</c><00:08:37.360><c> single</c><00:08:37.760><c> cpu</c><00:08:38.240><c> a</c>

00:08:38.310 --> 00:08:38.320 align:start position:0%
context of a machine with a single cpu a
 

00:08:38.320 --> 00:08:39.909 align:start position:0%
context of a machine with a single cpu a
single<00:08:38.719><c> core</c>

00:08:39.909 --> 00:08:39.919 align:start position:0%
single core
 

00:08:39.919 --> 00:08:42.389 align:start position:0%
single core
you<00:08:40.080><c> can</c><00:08:40.240><c> construct</c><00:08:40.719><c> scenarios</c><00:08:41.519><c> that</c><00:08:42.080><c> using</c>

00:08:42.389 --> 00:08:42.399 align:start position:0%
you can construct scenarios that using
 

00:08:42.399 --> 00:08:45.110 align:start position:0%
you can construct scenarios that using
multiple<00:08:42.880><c> locks</c>

00:08:45.110 --> 00:08:45.120 align:start position:0%
multiple locks
 

00:08:45.120 --> 00:08:47.030 align:start position:0%
multiple locks
would<00:08:45.360><c> cause</c><00:08:45.680><c> the</c><00:08:45.839><c> same</c><00:08:46.080><c> kind</c><00:08:46.240><c> of</c><00:08:46.320><c> deadlock</c><00:08:46.880><c> on</c>

00:08:47.030 --> 00:08:47.040 align:start position:0%
would cause the same kind of deadlock on
 

00:08:47.040 --> 00:08:49.910 align:start position:0%
would cause the same kind of deadlock on
a<00:08:47.200><c> machine</c><00:08:47.440><c> with</c><00:08:47.600><c> multiple</c><00:08:48.000><c> cores</c>

00:08:49.910 --> 00:08:49.920 align:start position:0%
a machine with multiple cores
 

00:08:49.920 --> 00:08:52.389 align:start position:0%
a machine with multiple cores
and<00:08:50.080><c> so</c><00:08:50.320><c> as</c><00:08:50.399><c> a</c><00:08:50.480><c> result</c><00:08:51.519><c> we</c><00:08:51.600><c> have</c><00:08:51.760><c> a</c><00:08:52.080><c> general</c>

00:08:52.389 --> 00:08:52.399 align:start position:0%
and so as a result we have a general
 

00:08:52.399 --> 00:08:54.150 align:start position:0%
and so as a result we have a general
prohibition<00:08:53.120><c> in</c><00:08:53.360><c> xv6</c>

00:08:54.150 --> 00:08:54.160 align:start position:0%
prohibition in xv6
 

00:08:54.160 --> 00:08:56.389 align:start position:0%
prohibition in xv6
that<00:08:54.959><c> you're</c><00:08:55.200><c> not</c><00:08:55.360><c> allowed</c><00:08:55.600><c> to</c><00:08:55.680><c> hold</c><00:08:56.080><c> spin</c>

00:08:56.389 --> 00:08:56.399 align:start position:0%
that you're not allowed to hold spin
 

00:08:56.399 --> 00:08:58.070 align:start position:0%
that you're not allowed to hold spin
locks

00:08:58.070 --> 00:08:58.080 align:start position:0%
locks
 

00:08:58.080 --> 00:09:01.750 align:start position:0%
locks
across<00:08:58.399><c> the</c><00:08:58.480><c> switch</c><00:09:00.959><c> any</c><00:09:01.200><c> questions</c><00:09:01.519><c> about</c>

00:09:01.750 --> 00:09:01.760 align:start position:0%
across the switch any questions about
 

00:09:01.760 --> 00:09:06.230 align:start position:0%
across the switch any questions about
this<00:09:01.920><c> rule</c>

00:09:06.230 --> 00:09:06.240 align:start position:0%
 
 

00:09:06.240 --> 00:09:08.389 align:start position:0%
 
there's<00:09:06.480><c> a</c><00:09:06.720><c> question</c><00:09:06.959><c> in</c><00:09:07.120><c> the</c><00:09:07.200><c> chat</c><00:09:07.600><c> robert</c><00:09:08.000><c> oh</c>

00:09:08.389 --> 00:09:08.399 align:start position:0%
there's a question in the chat robert oh
 

00:09:08.399 --> 00:09:10.070 align:start position:0%
there's a question in the chat robert oh
uh<00:09:08.720><c> wouldn't</c><00:09:08.959><c> you</c><00:09:09.120><c> have</c><00:09:09.200><c> a</c><00:09:09.279><c> timer</c><00:09:09.680><c> interrupt</c>

00:09:10.070 --> 00:09:10.080 align:start position:0%
uh wouldn't you have a timer interrupt
 

00:09:10.080 --> 00:09:12.870 align:start position:0%
uh wouldn't you have a timer interrupt
switch<00:09:10.399><c> to</c><00:09:10.560><c> p1</c><00:09:11.120><c> which</c><00:09:11.279><c> resolves</c><00:09:11.839><c> the</c><00:09:11.920><c> deadlock</c>

00:09:12.870 --> 00:09:12.880 align:start position:0%
switch to p1 which resolves the deadlock
 

00:09:12.880 --> 00:09:15.590 align:start position:0%
switch to p1 which resolves the deadlock
okay<00:09:13.279><c> so</c><00:09:13.760><c> um</c><00:09:14.160><c> yet</c><00:09:14.480><c> it</c><00:09:14.560><c> does</c><00:09:14.800><c> turn</c><00:09:15.120><c> out</c><00:09:15.279><c> so</c><00:09:15.440><c> we're</c>

00:09:15.590 --> 00:09:15.600 align:start position:0%
okay so um yet it does turn out so we're
 

00:09:15.600 --> 00:09:16.230 align:start position:0%
okay so um yet it does turn out so we're
running

00:09:16.230 --> 00:09:16.240 align:start position:0%
running
 

00:09:16.240 --> 00:09:17.509 align:start position:0%
running
both<00:09:16.640><c> all</c><00:09:16.720><c> this</c><00:09:16.880><c> stuff's</c><00:09:17.120><c> running</c><00:09:17.360><c> in</c><00:09:17.440><c> the</c>

00:09:17.509 --> 00:09:17.519 align:start position:0%
both all this stuff's running in the
 

00:09:17.519 --> 00:09:19.430 align:start position:0%
both all this stuff's running in the
kernel<00:09:18.240><c> right</c><00:09:18.480><c> it's</c><00:09:18.640><c> you</c><00:09:18.800><c> know</c><00:09:18.959><c> acquire</c>

00:09:19.430 --> 00:09:19.440 align:start position:0%
kernel right it's you know acquire
 

00:09:19.440 --> 00:09:21.910 align:start position:0%
kernel right it's you know acquire
release<00:09:19.920><c> switch</c><00:09:20.399><c> you</c><00:09:20.560><c> know</c><00:09:20.720><c> it's</c><00:09:20.880><c> only</c><00:09:21.760><c> it's</c>

00:09:21.910 --> 00:09:21.920 align:start position:0%
release switch you know it's only it's
 

00:09:21.920 --> 00:09:23.190 align:start position:0%
release switch you know it's only it's
all<00:09:22.080><c> kernel</c><00:09:22.399><c> code</c><00:09:22.560><c> so</c><00:09:22.640><c> we're</c><00:09:22.720><c> now</c><00:09:22.880><c> running</c><00:09:23.040><c> in</c>

00:09:23.190 --> 00:09:23.200 align:start position:0%
all kernel code so we're now running in
 

00:09:23.200 --> 00:09:25.110 align:start position:0%
all kernel code so we're now running in
user<00:09:23.440><c> space</c><00:09:23.839><c> but</c><00:09:24.080><c> indeed</c>

00:09:25.110 --> 00:09:25.120 align:start position:0%
user space but indeed
 

00:09:25.120 --> 00:09:29.190 align:start position:0%
user space but indeed
a<00:09:25.200><c> timer</c><00:09:25.519><c> interrupt</c><00:09:26.080><c> could</c><00:09:26.320><c> occur</c><00:09:27.120><c> and</c><00:09:28.000><c> um</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
a timer interrupt could occur and um
 

00:09:29.200 --> 00:09:31.910 align:start position:0%
a timer interrupt could occur and um
expisius<00:09:30.000><c> is</c><00:09:30.320><c> actually</c><00:09:30.800><c> and</c><00:09:31.200><c> allows</c><00:09:31.600><c> timer</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
expisius is actually and allows timer
 

00:09:31.920 --> 00:09:32.949 align:start position:0%
expisius is actually and allows timer
interrupts

00:09:32.949 --> 00:09:32.959 align:start position:0%
interrupts
 

00:09:32.959 --> 00:09:35.990 align:start position:0%
interrupts
to<00:09:33.120><c> happen</c><00:09:33.680><c> in</c><00:09:34.399><c> while</c><00:09:34.640><c> running</c><00:09:34.880><c> kernel</c><00:09:35.200><c> code</c>

00:09:35.990 --> 00:09:36.000 align:start position:0%
to happen in while running kernel code
 

00:09:36.000 --> 00:09:38.470 align:start position:0%
to happen in while running kernel code
uh<00:09:36.399><c> system</c><00:09:36.720><c> call</c><00:09:36.959><c> code</c><00:09:37.600><c> and</c><00:09:37.760><c> in</c><00:09:37.920><c> fact</c><00:09:38.240><c> if</c><00:09:38.320><c> you</c>

00:09:38.470 --> 00:09:38.480 align:start position:0%
uh system call code and in fact if you
 

00:09:38.480 --> 00:09:39.509 align:start position:0%
uh system call code and in fact if you
look<00:09:38.640><c> at</c><00:09:38.720><c> the</c>

00:09:39.509 --> 00:09:39.519 align:start position:0%
look at the
 

00:09:39.519 --> 00:09:41.990 align:start position:0%
look at the
um<00:09:39.920><c> kernel</c><00:09:40.240><c> trap</c><00:09:40.640><c> code</c><00:09:41.040><c> or</c><00:09:41.279><c> whatever</c><00:09:41.600><c> it</c><00:09:41.760><c> is</c><00:09:41.839><c> in</c>

00:09:41.990 --> 00:09:42.000 align:start position:0%
um kernel trap code or whatever it is in
 

00:09:42.000 --> 00:09:42.870 align:start position:0%
um kernel trap code or whatever it is in
trap.c

00:09:42.870 --> 00:09:42.880 align:start position:0%
trap.c
 

00:09:42.880 --> 00:09:44.949 align:start position:0%
trap.c
you'll<00:09:43.120><c> see</c><00:09:43.360><c> that</c><00:09:43.920><c> if</c><00:09:44.080><c> the</c><00:09:44.240><c> timer</c><00:09:44.640><c> interrupt</c>

00:09:44.949 --> 00:09:44.959 align:start position:0%
you'll see that if the timer interrupt
 

00:09:44.959 --> 00:09:46.150 align:start position:0%
you'll see that if the timer interrupt
happens<00:09:45.440><c> while</c>

00:09:46.150 --> 00:09:46.160 align:start position:0%
happens while
 

00:09:46.160 --> 00:09:48.470 align:start position:0%
happens while
xp6<00:09:46.720><c> is</c><00:09:47.040><c> executing</c><00:09:47.519><c> the</c><00:09:47.600><c> kernel</c><00:09:47.920><c> it</c><00:09:48.000><c> will</c><00:09:48.240><c> call</c>

00:09:48.470 --> 00:09:48.480 align:start position:0%
xp6 is executing the kernel it will call
 

00:09:48.480 --> 00:09:49.910 align:start position:0%
xp6 is executing the kernel it will call
yield

00:09:49.910 --> 00:09:49.920 align:start position:0%
yield
 

00:09:49.920 --> 00:09:52.389 align:start position:0%
yield
so<00:09:50.080><c> if</c><00:09:50.240><c> a</c><00:09:50.320><c> timer</c><00:09:50.720><c> interrupt</c><00:09:51.120><c> could</c><00:09:51.440><c> happen</c>

00:09:52.389 --> 00:09:52.399 align:start position:0%
so if a timer interrupt could happen
 

00:09:52.399 --> 00:09:54.389 align:start position:0%
so if a timer interrupt could happen
while<00:09:52.560><c> we're</c><00:09:52.720><c> running</c><00:09:53.040><c> acquire</c><00:09:53.519><c> here</c>

00:09:54.389 --> 00:09:54.399 align:start position:0%
while we're running acquire here
 

00:09:54.399 --> 00:09:59.030 align:start position:0%
while we're running acquire here
then<00:09:54.640><c> actually</c><00:09:57.200><c> we</c><00:09:57.360><c> would</c><00:09:57.519><c> be</c><00:09:57.680><c> saved</c><00:09:58.240><c> because</c>

00:09:59.030 --> 00:09:59.040 align:start position:0%
then actually we would be saved because
 

00:09:59.040 --> 00:10:00.550 align:start position:0%
then actually we would be saved because
call<00:09:59.279><c> yield</c><00:09:59.600><c> yield</c><00:09:59.839><c> would</c><00:10:00.000><c> switch</c><00:10:00.240><c> back</c><00:10:00.399><c> here</c>

00:10:00.550 --> 00:10:00.560 align:start position:0%
call yield yield would switch back here
 

00:10:00.560 --> 00:10:02.230 align:start position:0%
call yield yield would switch back here
and<00:10:00.720><c> hopefully</c><00:10:01.040><c> p1</c><00:10:01.440><c> would</c><00:10:01.519><c> then</c><00:10:01.760><c> resume</c><00:10:02.160><c> and</c>

00:10:02.230 --> 00:10:02.240 align:start position:0%
and hopefully p1 would then resume and
 

00:10:02.240 --> 00:10:03.509 align:start position:0%
and hopefully p1 would then resume and
eventually<00:10:02.640><c> release</c><00:10:03.040><c> the</c><00:10:03.120><c> lock</c>

00:10:03.509 --> 00:10:03.519 align:start position:0%
eventually release the lock
 

00:10:03.519 --> 00:10:07.269 align:start position:0%
eventually release the lock
however<00:10:05.040><c> for</c><00:10:05.279><c> reasons</c><00:10:05.680><c> that</c><00:10:06.240><c> were</c>

00:10:07.269 --> 00:10:07.279 align:start position:0%
however for reasons that were
 

00:10:07.279 --> 00:10:10.069 align:start position:0%
however for reasons that were
explained<00:10:07.600><c> in</c><00:10:07.760><c> a</c><00:10:07.839><c> previous</c><00:10:08.160><c> lecture</c><00:10:08.720><c> a</c><00:10:08.959><c> choir</c>

00:10:10.069 --> 00:10:10.079 align:start position:0%
explained in a previous lecture a choir
 

00:10:10.079 --> 00:10:12.069 align:start position:0%
explained in a previous lecture a choir
turns<00:10:10.480><c> off</c><00:10:10.880><c> interrupts</c>

00:10:12.069 --> 00:10:12.079 align:start position:0%
turns off interrupts
 

00:10:12.079 --> 00:10:13.750 align:start position:0%
turns off interrupts
before<00:10:12.480><c> it</c><00:10:12.640><c> starts</c><00:10:12.880><c> to</c><00:10:13.040><c> wait</c><00:10:13.200><c> for</c><00:10:13.360><c> the</c><00:10:13.440><c> lock</c>

00:10:13.750 --> 00:10:13.760 align:start position:0%
before it starts to wait for the lock
 

00:10:13.760 --> 00:10:16.069 align:start position:0%
before it starts to wait for the lock
because<00:10:14.000><c> we</c><00:10:14.480><c> absolutely</c><00:10:15.200><c> for</c><00:10:15.360><c> other</c><00:10:15.600><c> reasons</c>

00:10:16.069 --> 00:10:16.079 align:start position:0%
because we absolutely for other reasons
 

00:10:16.079 --> 00:10:17.829 align:start position:0%
because we absolutely for other reasons
cannot<00:10:16.399><c> afford</c>

00:10:17.829 --> 00:10:17.839 align:start position:0%
cannot afford
 

00:10:17.839 --> 00:10:19.670 align:start position:0%
cannot afford
to<00:10:18.000><c> have</c><00:10:18.160><c> an</c><00:10:18.320><c> interrupt</c><00:10:18.720><c> happen</c><00:10:19.360><c> while</c><00:10:19.519><c> we're</c>

00:10:19.670 --> 00:10:19.680 align:start position:0%
to have an interrupt happen while we're
 

00:10:19.680 --> 00:10:21.350 align:start position:0%
to have an interrupt happen while we're
holding<00:10:20.079><c> a</c><00:10:20.160><c> lock</c><00:10:20.480><c> because</c><00:10:20.720><c> that</c><00:10:20.800><c> would</c><00:10:20.959><c> cause</c>

00:10:21.350 --> 00:10:21.360 align:start position:0%
holding a lock because that would cause
 

00:10:21.360 --> 00:10:23.190 align:start position:0%
holding a lock because that would cause
a<00:10:21.519><c> different</c><00:10:21.839><c> kind</c><00:10:22.000><c> of</c><00:10:22.160><c> deadlock</c>

00:10:23.190 --> 00:10:23.200 align:start position:0%
a different kind of deadlock
 

00:10:23.200 --> 00:10:26.870 align:start position:0%
a different kind of deadlock
if<00:10:23.440><c> the</c><00:10:23.680><c> interrupt</c><00:10:24.079><c> handler</c>

00:10:26.870 --> 00:10:26.880 align:start position:0%
 
 

00:10:26.880 --> 00:10:29.590 align:start position:0%
 
needed<00:10:27.200><c> to</c><00:10:27.360><c> use</c><00:10:27.680><c> needed</c><00:10:27.920><c> to</c><00:10:28.079><c> acquire</c><00:10:28.480><c> the</c><00:10:28.640><c> lock</c>

00:10:29.590 --> 00:10:29.600 align:start position:0%
needed to use needed to acquire the lock
 

00:10:29.600 --> 00:10:30.230 align:start position:0%
needed to use needed to acquire the lock
that

00:10:30.230 --> 00:10:30.240 align:start position:0%
that
 

00:10:30.240 --> 00:10:33.430 align:start position:0%
that
this<00:10:30.480><c> acquirer</c><00:10:31.279><c> had</c><00:10:31.519><c> possibly</c><00:10:32.480><c> um</c>

00:10:33.430 --> 00:10:33.440 align:start position:0%
this acquirer had possibly um
 

00:10:33.440 --> 00:10:35.269 align:start position:0%
this acquirer had possibly um
just<00:10:33.680><c> acquired</c><00:10:34.399><c> so</c><00:10:34.560><c> if</c><00:10:34.640><c> you</c><00:10:34.720><c> look</c><00:10:34.880><c> at</c><00:10:34.959><c> the</c><00:10:35.040><c> code</c>

00:10:35.269 --> 00:10:35.279 align:start position:0%
just acquired so if you look at the code
 

00:10:35.279 --> 00:10:36.710 align:start position:0%
just acquired so if you look at the code
for<00:10:35.440><c> acquiring</c><00:10:35.920><c> xv6</c>

00:10:36.710 --> 00:10:36.720 align:start position:0%
for acquiring xv6
 

00:10:36.720 --> 00:10:37.910 align:start position:0%
for acquiring xv6
you'll<00:10:36.880><c> see</c><00:10:37.040><c> the</c><00:10:37.120><c> first</c><00:10:37.279><c> thing</c><00:10:37.440><c> it</c><00:10:37.600><c> does</c><00:10:37.760><c> is</c>

00:10:37.910 --> 00:10:37.920 align:start position:0%
you'll see the first thing it does is
 

00:10:37.920 --> 00:10:40.230 align:start position:0%
you'll see the first thing it does is
turn<00:10:38.079><c> off</c><00:10:38.320><c> interrupts</c><00:10:38.959><c> and</c><00:10:39.120><c> then</c><00:10:39.360><c> spins</c>

00:10:40.230 --> 00:10:40.240 align:start position:0%
turn off interrupts and then spins
 

00:10:40.240 --> 00:10:42.069 align:start position:0%
turn off interrupts and then spins
and<00:10:40.399><c> you</c><00:10:40.480><c> may</c><00:10:40.640><c> wonder</c><00:10:40.959><c> geez</c><00:10:41.519><c> why</c><00:10:41.680><c> doesn't</c><00:10:41.920><c> it</c>

00:10:42.069 --> 00:10:42.079 align:start position:0%
and you may wonder geez why doesn't it
 

00:10:42.079 --> 00:10:44.150 align:start position:0%
and you may wonder geez why doesn't it
spin<00:10:42.800><c> and</c><00:10:42.880><c> then</c><00:10:43.120><c> turn</c><00:10:43.360><c> off</c><00:10:43.519><c> interrupts</c><00:10:44.000><c> and</c>

00:10:44.150 --> 00:10:44.160 align:start position:0%
spin and then turn off interrupts and
 

00:10:44.160 --> 00:10:45.190 align:start position:0%
spin and then turn off interrupts and
the<00:10:44.240><c> reason</c><00:10:44.560><c> is</c>

00:10:45.190 --> 00:10:45.200 align:start position:0%
the reason is
 

00:10:45.200 --> 00:10:46.790 align:start position:0%
the reason is
that<00:10:45.360><c> would</c><00:10:45.519><c> allow</c><00:10:45.839><c> a</c><00:10:46.000><c> short</c><00:10:46.240><c> period</c><00:10:46.560><c> of</c><00:10:46.640><c> time</c>

00:10:46.790 --> 00:10:46.800 align:start position:0%
that would allow a short period of time
 

00:10:46.800 --> 00:10:48.870 align:start position:0%
that would allow a short period of time
to<00:10:47.040><c> occur</c><00:10:47.279><c> in</c><00:10:47.360><c> which</c><00:10:47.519><c> the</c><00:10:47.680><c> lock</c><00:10:47.920><c> is</c><00:10:48.079><c> held</c>

00:10:48.870 --> 00:10:48.880 align:start position:0%
to occur in which the lock is held
 

00:10:48.880 --> 00:10:51.269 align:start position:0%
to occur in which the lock is held
but<00:10:49.120><c> interrupts</c><00:10:49.600><c> weren't</c><00:10:49.920><c> disabled</c><00:10:51.120><c> and</c>

00:10:51.269 --> 00:10:51.279 align:start position:0%
but interrupts weren't disabled and
 

00:10:51.279 --> 00:10:52.069 align:start position:0%
but interrupts weren't disabled and
again

00:10:52.069 --> 00:10:52.079 align:start position:0%
again
 

00:10:52.079 --> 00:10:53.829 align:start position:0%
again
a<00:10:52.240><c> device</c><00:10:52.640><c> interrupted</c><00:10:53.040><c> that</c><00:10:53.279><c> time</c><00:10:53.680><c> might</c>

00:10:53.829 --> 00:10:53.839 align:start position:0%
a device interrupted that time might
 

00:10:53.839 --> 00:10:55.190 align:start position:0%
a device interrupted that time might
cause<00:10:54.079><c> a</c><00:10:54.160><c> deadlock</c>

00:10:55.190 --> 00:10:55.200 align:start position:0%
cause a deadlock
 

00:10:55.200 --> 00:10:57.110 align:start position:0%
cause a deadlock
so<00:10:55.440><c> unfortunately</c><00:10:56.079><c> this</c><00:10:56.320><c> other</c><00:10:56.560><c> requirement</c>

00:10:57.110 --> 00:10:57.120 align:start position:0%
so unfortunately this other requirement
 

00:10:57.120 --> 00:10:59.430 align:start position:0%
so unfortunately this other requirement
that<00:10:57.279><c> we</c><00:10:58.079><c> leave</c><00:10:58.320><c> interrupts</c><00:10:58.880><c> off</c><00:10:59.120><c> while</c><00:10:59.279><c> we're</c>

00:10:59.430 --> 00:10:59.440 align:start position:0%
that we leave interrupts off while we're
 

00:10:59.440 --> 00:11:00.870 align:start position:0%
that we leave interrupts off while we're
spinning<00:10:59.839><c> waiting</c><00:11:00.079><c> for</c><00:11:00.240><c> a</c><00:11:00.320><c> lock</c>

00:11:00.870 --> 00:11:00.880 align:start position:0%
spinning waiting for a lock
 

00:11:00.880 --> 00:11:03.110 align:start position:0%
spinning waiting for a lock
prevents<00:11:01.760><c> the</c><00:11:01.920><c> timer</c><00:11:02.320><c> interrupt</c><00:11:02.720><c> from</c><00:11:02.880><c> going</c>

00:11:03.110 --> 00:11:03.120 align:start position:0%
prevents the timer interrupt from going
 

00:11:03.120 --> 00:11:04.230 align:start position:0%
prevents the timer interrupt from going
off<00:11:03.279><c> and</c><00:11:03.440><c> therefore</c>

00:11:04.230 --> 00:11:04.240 align:start position:0%
off and therefore
 

00:11:04.240 --> 00:11:06.069 align:start position:0%
off and therefore
prevents<00:11:04.800><c> process</c><00:11:05.120><c> two</c><00:11:05.279><c> from</c><00:11:05.440><c> yielding</c><00:11:05.920><c> back</c>

00:11:06.069 --> 00:11:06.079 align:start position:0%
prevents process two from yielding back
 

00:11:06.079 --> 00:11:07.829 align:start position:0%
prevents process two from yielding back
to<00:11:06.240><c> process</c><00:11:06.640><c> one</c>

00:11:07.829 --> 00:11:07.839 align:start position:0%
to process one
 

00:11:07.839 --> 00:11:10.949 align:start position:0%
to process one
it's<00:11:08.000><c> a</c><00:11:08.079><c> good</c><00:11:08.320><c> question</c><00:11:09.839><c> um</c>

00:11:10.949 --> 00:11:10.959 align:start position:0%
it's a good question um
 

00:11:10.959 --> 00:11:12.389 align:start position:0%
it's a good question um
okay<00:11:11.200><c> so</c><00:11:11.279><c> another</c><00:11:11.519><c> question</c><00:11:11.760><c> can</c><00:11:11.920><c> i</c><00:11:12.079><c> repeat</c>

00:11:12.389 --> 00:11:12.399 align:start position:0%
okay so another question can i repeat
 

00:11:12.399 --> 00:11:15.990 align:start position:0%
okay so another question can i repeat
how<00:11:12.640><c> deadlocks</c><00:11:13.760><c> are</c><00:11:13.920><c> avoided</c>

00:11:15.990 --> 00:11:16.000 align:start position:0%
how deadlocks are avoided
 

00:11:16.000 --> 00:11:19.430 align:start position:0%
how deadlocks are avoided
um

00:11:19.430 --> 00:11:19.440 align:start position:0%
 
 

00:11:19.440 --> 00:11:21.750 align:start position:0%
 
oh<00:11:19.760><c> deadlocks</c><00:11:20.240><c> are</c><00:11:20.320><c> avoided</c><00:11:20.640><c> in</c><00:11:20.800><c> xv6</c><00:11:21.519><c> by</c>

00:11:21.750 --> 00:11:21.760 align:start position:0%
oh deadlocks are avoided in xv6 by
 

00:11:21.760 --> 00:11:24.069 align:start position:0%
oh deadlocks are avoided in xv6 by
prohibiting<00:11:22.240><c> this</c>

00:11:24.069 --> 00:11:24.079 align:start position:0%
prohibiting this
 

00:11:24.079 --> 00:11:27.670 align:start position:0%
prohibiting this
xv6<00:11:24.560><c> code</c><00:11:24.880><c> is</c><00:11:25.040><c> not</c><00:11:25.279><c> allowed</c><00:11:26.640><c> to</c><00:11:26.880><c> acquire</c><00:11:27.440><c> any</c>

00:11:27.670 --> 00:11:27.680 align:start position:0%
xv6 code is not allowed to acquire any
 

00:11:27.680 --> 00:11:27.990 align:start position:0%
xv6 code is not allowed to acquire any
lock

00:11:27.990 --> 00:11:28.000 align:start position:0%
lock
 

00:11:28.000 --> 00:11:30.310 align:start position:0%
lock
other<00:11:28.160><c> than</c><00:11:28.640><c> p</c><00:11:28.800><c> arrow</c><00:11:29.120><c> lock</c><00:11:29.680><c> and</c><00:11:29.760><c> then</c><00:11:30.000><c> call</c>

00:11:30.310 --> 00:11:30.320 align:start position:0%
other than p arrow lock and then call
 

00:11:30.320 --> 00:11:31.190 align:start position:0%
other than p arrow lock and then call
switch

00:11:31.190 --> 00:11:31.200 align:start position:0%
switch
 

00:11:31.200 --> 00:11:32.550 align:start position:0%
switch
and<00:11:31.360><c> if</c><00:11:31.519><c> you</c><00:11:31.600><c> look</c><00:11:31.760><c> at</c><00:11:31.839><c> the</c><00:11:31.920><c> code</c><00:11:32.160><c> for</c><00:11:32.240><c> switch</c>

00:11:32.550 --> 00:11:32.560 align:start position:0%
and if you look at the code for switch
 

00:11:32.560 --> 00:11:34.870 align:start position:0%
and if you look at the code for switch
there's<00:11:32.720><c> actually</c><00:11:33.839><c> some</c><00:11:34.160><c> checks</c><00:11:34.480><c> and</c><00:11:34.560><c> switch</c>

00:11:34.870 --> 00:11:34.880 align:start position:0%
there's actually some checks and switch
 

00:11:34.880 --> 00:11:36.550 align:start position:0%
there's actually some checks and switch
that<00:11:35.040><c> are</c><00:11:35.200><c> equivalent</c><00:11:35.600><c> to</c><00:11:35.760><c> checking</c><00:11:36.079><c> that</c>

00:11:36.550 --> 00:11:36.560 align:start position:0%
that are equivalent to checking that
 

00:11:36.560 --> 00:11:38.710 align:start position:0%
that are equivalent to checking that
no<00:11:36.800><c> locks</c><00:11:37.120><c> are</c><00:11:37.279><c> held</c><00:11:37.839><c> other</c><00:11:38.079><c> than</c><00:11:38.240><c> p</c><00:11:38.480><c> arrow</c>

00:11:38.710 --> 00:11:38.720 align:start position:0%
no locks are held other than p arrow
 

00:11:38.720 --> 00:11:39.990 align:start position:0%
no locks are held other than p arrow
lock

00:11:39.990 --> 00:11:40.000 align:start position:0%
lock
 

00:11:40.000 --> 00:11:43.030 align:start position:0%
lock
so<00:11:40.240><c> the</c><00:11:40.640><c> problem</c><00:11:40.880><c> with</c><00:11:40.959><c> this</c><00:11:41.200><c> is</c><00:11:41.279><c> this</c><00:11:41.519><c> code</c><00:11:42.880><c> if</c>

00:11:43.030 --> 00:11:43.040 align:start position:0%
so the problem with this is this code if
 

00:11:43.040 --> 00:11:44.710 align:start position:0%
so the problem with this is this code if
it<00:11:43.120><c> occurred</c><00:11:43.360><c> in</c><00:11:43.440><c> the</c><00:11:43.519><c> xv6</c><00:11:44.000><c> kernel</c><00:11:44.399><c> would</c><00:11:44.560><c> be</c>

00:11:44.710 --> 00:11:44.720 align:start position:0%
it occurred in the xv6 kernel would be
 

00:11:44.720 --> 00:11:45.269 align:start position:0%
it occurred in the xv6 kernel would be
illegal

00:11:45.269 --> 00:11:45.279 align:start position:0%
illegal
 

00:11:45.279 --> 00:11:47.590 align:start position:0%
illegal
and<00:11:45.440><c> would</c><00:11:45.920><c> could</c><00:11:46.160><c> easily</c><00:11:46.399><c> cause</c><00:11:46.720><c> a</c><00:11:46.800><c> deadlock</c>

00:11:47.590 --> 00:11:47.600 align:start position:0%
and would could easily cause a deadlock
 

00:11:47.600 --> 00:11:50.069 align:start position:0%
and would could easily cause a deadlock
so<00:11:47.760><c> it's</c><00:11:47.920><c> forbidden</c>

00:11:50.069 --> 00:11:50.079 align:start position:0%
so it's forbidden
 

00:11:50.079 --> 00:11:53.829 align:start position:0%
so it's forbidden
does<00:11:50.240><c> that</c><00:11:50.399><c> answer</c><00:11:50.720><c> the</c><00:11:50.800><c> question</c><00:11:52.079><c> okay</c>

00:11:53.829 --> 00:11:53.839 align:start position:0%
does that answer the question okay
 

00:11:53.839 --> 00:12:01.509 align:start position:0%
does that answer the question okay
um<00:11:54.880><c> other</c><00:11:55.120><c> questions</c>

00:12:01.509 --> 00:12:01.519 align:start position:0%
 
 

00:12:01.519 --> 00:12:04.870 align:start position:0%
 
okay<00:12:02.000><c> um</c><00:12:02.480><c> okay</c><00:12:02.639><c> so</c><00:12:02.880><c> keep</c><00:12:03.120><c> this</c><00:12:03.279><c> rule</c><00:12:03.680><c> and</c><00:12:03.760><c> the</c>

00:12:04.870 --> 00:12:04.880 align:start position:0%
okay um okay so keep this rule and the
 

00:12:04.880 --> 00:12:06.550 align:start position:0%
okay um okay so keep this rule and the
previous<00:12:05.279><c> need</c><00:12:05.519><c> to</c><00:12:05.600><c> hold</c><00:12:05.839><c> p</c><00:12:06.000><c> arrow</c><00:12:06.240><c> lock</c>

00:12:06.550 --> 00:12:06.560 align:start position:0%
previous need to hold p arrow lock
 

00:12:06.560 --> 00:12:08.230 align:start position:0%
previous need to hold p arrow lock
across<00:12:06.880><c> switch</c><00:12:07.200><c> in</c><00:12:07.279><c> mind</c>

00:12:08.230 --> 00:12:08.240 align:start position:0%
across switch in mind
 

00:12:08.240 --> 00:12:10.069 align:start position:0%
across switch in mind
because<00:12:08.399><c> they'll</c><00:12:08.639><c> come</c><00:12:08.800><c> up</c><00:12:08.959><c> again</c><00:12:09.680><c> in</c><00:12:09.920><c> our</c>

00:12:10.069 --> 00:12:10.079 align:start position:0%
because they'll come up again in our
 

00:12:10.079 --> 00:12:11.430 align:start position:0%
because they'll come up again in our
discussion<00:12:10.560><c> of</c><00:12:10.639><c> how</c><00:12:10.880><c> sleep</c>

00:12:11.430 --> 00:12:11.440 align:start position:0%
discussion of how sleep
 

00:12:11.440 --> 00:12:15.030 align:start position:0%
discussion of how sleep
and<00:12:11.600><c> wake-up</c><00:12:12.000><c> work</c>

00:12:15.030 --> 00:12:15.040 align:start position:0%
 
 

00:12:15.040 --> 00:12:22.829 align:start position:0%
 
all<00:12:15.200><c> right</c><00:12:15.680><c> new</c><00:12:15.839><c> topic</c><00:12:16.560><c> um</c>

00:12:22.829 --> 00:12:22.839 align:start position:0%
 
 

00:12:22.839 --> 00:12:29.350 align:start position:0%
 
coordination

00:12:29.350 --> 00:12:29.360 align:start position:0%
 
 

00:12:29.360 --> 00:12:35.190 align:start position:0%
 
which<00:12:29.600><c> really</c><00:12:29.839><c> means</c><00:12:30.079><c> sleep</c>

00:12:35.190 --> 00:12:35.200 align:start position:0%
 
 

00:12:35.200 --> 00:12:39.670 align:start position:0%
 
the<00:12:36.839><c> um</c>

00:12:39.670 --> 00:12:39.680 align:start position:0%
the um
 

00:12:39.680 --> 00:12:41.990 align:start position:0%
the um
uh<00:12:40.320><c> we've</c><00:12:40.480><c> heard</c><00:12:40.720><c> a</c><00:12:40.720><c> lot</c><00:12:40.880><c> about</c><00:12:41.120><c> locks</c><00:12:41.760><c> and</c>

00:12:41.990 --> 00:12:42.000 align:start position:0%
uh we've heard a lot about locks and
 

00:12:42.000 --> 00:12:43.190 align:start position:0%
uh we've heard a lot about locks and
locks<00:12:42.320><c> are</c><00:12:42.480><c> fantastic</c>

00:12:43.190 --> 00:12:43.200 align:start position:0%
locks are fantastic
 

00:12:43.200 --> 00:12:45.190 align:start position:0%
locks are fantastic
for<00:12:43.360><c> situations</c><00:12:43.920><c> where</c><00:12:44.160><c> different</c><00:12:44.480><c> threads</c>

00:12:45.190 --> 00:12:45.200 align:start position:0%
for situations where different threads
 

00:12:45.200 --> 00:12:47.190 align:start position:0%
for situations where different threads
really<00:12:45.680><c> want</c><00:12:45.920><c> to</c><00:12:46.079><c> not</c><00:12:46.320><c> be</c><00:12:46.560><c> aware</c>

00:12:47.190 --> 00:12:47.200 align:start position:0%
really want to not be aware
 

00:12:47.200 --> 00:12:48.470 align:start position:0%
really want to not be aware
and<00:12:47.279><c> not</c><00:12:47.440><c> have</c><00:12:47.600><c> to</c><00:12:47.680><c> worry</c><00:12:47.920><c> about</c><00:12:48.160><c> or</c><00:12:48.240><c> think</c>

00:12:48.470 --> 00:12:48.480 align:start position:0%
and not have to worry about or think
 

00:12:48.480 --> 00:12:50.230 align:start position:0%
and not have to worry about or think
about<00:12:48.639><c> what</c><00:12:48.880><c> other</c><00:12:49.040><c> threads</c><00:12:49.360><c> are</c><00:12:49.519><c> up</c><00:12:49.680><c> to</c><00:12:50.079><c> we</c>

00:12:50.230 --> 00:12:50.240 align:start position:0%
about what other threads are up to we
 

00:12:50.240 --> 00:12:52.069 align:start position:0%
about what other threads are up to we
hold<00:12:50.480><c> locks</c><00:12:50.720><c> and</c><00:12:50.800><c> share</c><00:12:51.040><c> data</c><00:12:51.519><c> that</c><00:12:51.680><c> means</c><00:12:51.920><c> we</c>

00:12:52.069 --> 00:12:52.079 align:start position:0%
hold locks and share data that means we
 

00:12:52.079 --> 00:12:53.670 align:start position:0%
hold locks and share data that means we
just<00:12:52.240><c> like</c><00:12:52.399><c> never</c><00:12:52.639><c> have</c><00:12:52.800><c> to</c><00:12:52.880><c> worry</c><00:12:53.200><c> about</c><00:12:53.440><c> the</c>

00:12:53.670 --> 00:12:53.680 align:start position:0%
just like never have to worry about the
 

00:12:53.680 --> 00:12:55.910 align:start position:0%
just like never have to worry about the
possibility<00:12:54.160><c> that</c><00:12:54.320><c> some</c><00:12:54.480><c> other</c><00:12:54.720><c> lock</c><00:12:55.040><c> is</c>

00:12:55.910 --> 00:12:55.920 align:start position:0%
possibility that some other lock is
 

00:12:55.920 --> 00:12:57.750 align:start position:0%
possibility that some other lock is
is<00:12:56.160><c> or</c><00:12:56.240><c> maybe</c><00:12:56.560><c> not</c><00:12:56.880><c> who</c><00:12:57.040><c> knows</c><00:12:57.279><c> using</c><00:12:57.600><c> that</c>

00:12:57.750 --> 00:12:57.760 align:start position:0%
is or maybe not who knows using that
 

00:12:57.760 --> 00:12:59.269 align:start position:0%
is or maybe not who knows using that
data<00:12:58.079><c> because</c><00:12:58.399><c> the</c><00:12:58.639><c> lock</c>

00:12:59.269 --> 00:12:59.279 align:start position:0%
data because the lock
 

00:12:59.279 --> 00:13:00.790 align:start position:0%
data because the lock
sort<00:12:59.440><c> of</c><00:12:59.519><c> causes</c><00:12:59.839><c> things</c><00:13:00.079><c> to</c><00:13:00.160><c> happen</c><00:13:00.399><c> one</c><00:13:00.639><c> at</c><00:13:00.720><c> a</c>

00:13:00.790 --> 00:13:00.800 align:start position:0%
sort of causes things to happen one at a
 

00:13:00.800 --> 00:13:02.790 align:start position:0%
sort of causes things to happen one at a
time<00:13:02.000><c> but</c>

00:13:02.790 --> 00:13:02.800 align:start position:0%
time but
 

00:13:02.800 --> 00:13:04.389 align:start position:0%
time but
when<00:13:02.959><c> you're</c><00:13:03.120><c> writing</c><00:13:03.360><c> threaded</c><00:13:03.760><c> code</c><00:13:04.240><c> there</c>

00:13:04.389 --> 00:13:04.399 align:start position:0%
when you're writing threaded code there
 

00:13:04.399 --> 00:13:07.269 align:start position:0%
when you're writing threaded code there
are<00:13:04.639><c> also</c><00:13:04.959><c> situations</c><00:13:05.839><c> where</c><00:13:06.000><c> you</c><00:13:06.240><c> explicitly</c>

00:13:07.269 --> 00:13:07.279 align:start position:0%
are also situations where you explicitly
 

00:13:07.279 --> 00:13:09.829 align:start position:0%
are also situations where you explicitly
want<00:13:08.079><c> to</c><00:13:08.320><c> wait</c><00:13:08.560><c> for</c><00:13:08.800><c> some</c><00:13:09.040><c> specific</c><00:13:09.600><c> event</c>

00:13:09.829 --> 00:13:09.839 align:start position:0%
want to wait for some specific event
 

00:13:09.839 --> 00:13:10.710 align:start position:0%
want to wait for some specific event
where<00:13:10.079><c> you</c><00:13:10.240><c> want</c>

00:13:10.710 --> 00:13:10.720 align:start position:0%
where you want
 

00:13:10.720 --> 00:13:14.710 align:start position:0%
where you want
different<00:13:10.959><c> threads</c><00:13:11.360><c> to</c><00:13:11.600><c> interact</c>

00:13:14.710 --> 00:13:14.720 align:start position:0%
 
 

00:13:14.720 --> 00:13:18.069 align:start position:0%
 
so<00:13:14.880><c> for</c><00:13:15.040><c> example</c><00:13:16.480><c> supposing</c><00:13:16.959><c> we</c><00:13:17.120><c> have</c><00:13:17.680><c> pipes</c>

00:13:18.069 --> 00:13:18.079 align:start position:0%
so for example supposing we have pipes
 

00:13:18.079 --> 00:13:19.670 align:start position:0%
so for example supposing we have pipes
and<00:13:18.160><c> we</c><00:13:18.240><c> got</c><00:13:18.399><c> a</c><00:13:18.480><c> reader</c><00:13:18.880><c> and</c><00:13:18.959><c> a</c><00:13:19.120><c> writer</c>

00:13:19.670 --> 00:13:19.680 align:start position:0%
and we got a reader and a writer
 

00:13:19.680 --> 00:13:22.710 align:start position:0%
and we got a reader and a writer
right<00:13:20.000><c> if</c><00:13:20.160><c> i'm</c><00:13:20.800><c> reading</c><00:13:21.120><c> a</c><00:13:21.279><c> pipe</c><00:13:22.399><c> and</c><00:13:22.480><c> there's</c>

00:13:22.710 --> 00:13:22.720 align:start position:0%
right if i'm reading a pipe and there's
 

00:13:22.720 --> 00:13:24.790 align:start position:0%
right if i'm reading a pipe and there's
nothing<00:13:22.959><c> currently</c><00:13:23.360><c> to</c><00:13:23.440><c> read</c><00:13:23.680><c> in</c><00:13:23.760><c> the</c><00:13:23.920><c> pipe</c>

00:13:24.790 --> 00:13:24.800 align:start position:0%
nothing currently to read in the pipe
 

00:13:24.800 --> 00:13:27.030 align:start position:0%
nothing currently to read in the pipe
i<00:13:24.880><c> want</c><00:13:25.040><c> to</c><00:13:25.120><c> be</c><00:13:25.279><c> able</c><00:13:25.360><c> to</c><00:13:25.600><c> wait</c><00:13:26.240><c> for</c><00:13:26.560><c> any</c><00:13:26.800><c> other</c>

00:13:27.030 --> 00:13:27.040 align:start position:0%
i want to be able to wait for any other
 

00:13:27.040 --> 00:13:28.790 align:start position:0%
i want to be able to wait for any other
process<00:13:27.440><c> to</c><00:13:27.600><c> write</c><00:13:27.839><c> data</c><00:13:28.079><c> to</c><00:13:28.240><c> the</c><00:13:28.320><c> pipes</c><00:13:28.720><c> i</c>

00:13:28.790 --> 00:13:28.800 align:start position:0%
process to write data to the pipes i
 

00:13:28.800 --> 00:13:30.389 align:start position:0%
process to write data to the pipes i
want<00:13:28.959><c> to</c><00:13:29.200><c> wait</c><00:13:29.519><c> for</c><00:13:29.680><c> this</c><00:13:29.839><c> sort</c><00:13:30.079><c> of</c>

00:13:30.389 --> 00:13:30.399 align:start position:0%
want to wait for this sort of
 

00:13:30.399 --> 00:13:33.509 align:start position:0%
want to wait for this sort of
pipe<00:13:30.720><c> is</c><00:13:30.880><c> not</c><00:13:31.200><c> empty</c><00:13:31.519><c> event</c>

00:13:33.509 --> 00:13:33.519 align:start position:0%
pipe is not empty event
 

00:13:33.519 --> 00:13:36.470 align:start position:0%
pipe is not empty event
similarly<00:13:34.000><c> if</c><00:13:34.160><c> i'm</c><00:13:34.240><c> reading</c><00:13:34.480><c> the</c><00:13:34.720><c> disk</c><00:13:36.320><c> or</c>

00:13:36.470 --> 00:13:36.480 align:start position:0%
similarly if i'm reading the disk or
 

00:13:36.480 --> 00:13:41.509 align:start position:0%
similarly if i'm reading the disk or
writing<00:13:36.800><c> the</c><00:13:36.959><c> disk</c>

00:13:41.509 --> 00:13:41.519 align:start position:0%
 
 

00:13:41.519 --> 00:13:43.590 align:start position:0%
 
if<00:13:41.680><c> i'm</c><00:13:41.760><c> reading</c><00:13:42.079><c> the</c><00:13:42.160><c> disk</c><00:13:42.560><c> then</c><00:13:42.959><c> i</c><00:13:43.120><c> want</c><00:13:43.279><c> to</c>

00:13:43.590 --> 00:13:43.600 align:start position:0%
if i'm reading the disk then i want to
 

00:13:43.600 --> 00:13:45.350 align:start position:0%
if i'm reading the disk then i want to
be<00:13:43.760><c> able</c><00:13:43.839><c> to</c><00:13:44.000><c> tell</c><00:13:44.160><c> the</c><00:13:44.320><c> disk</c><00:13:44.560><c> controller</c><00:13:45.120><c> look</c>

00:13:45.350 --> 00:13:45.360 align:start position:0%
be able to tell the disk controller look
 

00:13:45.360 --> 00:13:47.110 align:start position:0%
be able to tell the disk controller look
please<00:13:45.680><c> read</c><00:13:45.920><c> a</c><00:13:46.079><c> particular</c><00:13:46.560><c> block</c><00:13:46.880><c> on</c><00:13:46.959><c> the</c>

00:13:47.110 --> 00:13:47.120 align:start position:0%
please read a particular block on the
 

00:13:47.120 --> 00:13:47.670 align:start position:0%
please read a particular block on the
disk

00:13:47.670 --> 00:13:47.680 align:start position:0%
disk
 

00:13:47.680 --> 00:13:49.910 align:start position:0%
disk
it<00:13:47.760><c> may</c><00:13:47.920><c> take</c><00:13:48.079><c> a</c><00:13:48.160><c> long</c><00:13:48.399><c> time</c><00:13:48.639><c> milliseconds</c>

00:13:49.910 --> 00:13:49.920 align:start position:0%
it may take a long time milliseconds
 

00:13:49.920 --> 00:13:52.230 align:start position:0%
it may take a long time milliseconds
long<00:13:50.240><c> long</c><00:13:50.480><c> time</c><00:13:50.800><c> before</c><00:13:51.040><c> the</c><00:13:51.199><c> disk</c>

00:13:52.230 --> 00:13:52.240 align:start position:0%
long long time before the disk
 

00:13:52.240 --> 00:13:53.590 align:start position:0%
long long time before the disk
finally<00:13:52.480><c> finishes</c><00:13:52.880><c> the</c><00:13:52.959><c> read</c><00:13:53.199><c> especially</c><00:13:53.519><c> if</c>

00:13:53.590 --> 00:13:53.600 align:start position:0%
finally finishes the read especially if
 

00:13:53.600 --> 00:13:56.230 align:start position:0%
finally finishes the read especially if
it<00:13:53.680><c> has</c><00:13:53.839><c> to</c><00:13:54.079><c> seek</c><00:13:54.320><c> and</c><00:13:54.480><c> rotate</c>

00:13:56.230 --> 00:13:56.240 align:start position:0%
it has to seek and rotate
 

00:13:56.240 --> 00:13:57.990 align:start position:0%
it has to seek and rotate
and<00:13:56.480><c> the</c><00:13:56.560><c> process</c><00:13:56.959><c> is</c><00:13:57.040><c> doing</c><00:13:57.279><c> the</c><00:13:57.360><c> read</c><00:13:57.760><c> needs</c>

00:13:57.990 --> 00:13:58.000 align:start position:0%
and the process is doing the read needs
 

00:13:58.000 --> 00:13:59.670 align:start position:0%
and the process is doing the read needs
to<00:13:58.079><c> be</c><00:13:58.160><c> able</c><00:13:58.320><c> to</c><00:13:58.399><c> wait</c><00:13:58.639><c> for</c><00:13:58.880><c> that</c><00:13:59.120><c> specific</c>

00:13:59.670 --> 00:13:59.680 align:start position:0%
to be able to wait for that specific
 

00:13:59.680 --> 00:14:00.310 align:start position:0%
to be able to wait for that specific
event

00:14:00.310 --> 00:14:00.320 align:start position:0%
event
 

00:14:00.320 --> 00:14:01.910 align:start position:0%
event
we<00:14:00.480><c> want</c><00:14:00.639><c> to</c><00:14:00.720><c> wait</c><00:14:00.880><c> for</c><00:14:01.199><c> the</c><00:14:01.279><c> disk</c><00:14:01.519><c> read</c><00:14:01.760><c> to</c>

00:14:01.910 --> 00:14:01.920 align:start position:0%
we want to wait for the disk read to
 

00:14:01.920 --> 00:14:05.590 align:start position:0%
we want to wait for the disk read to
complete

00:14:05.590 --> 00:14:05.600 align:start position:0%
 
 

00:14:05.600 --> 00:14:07.990 align:start position:0%
 
similarly<00:14:06.560><c> you</c><00:14:06.720><c> may</c><00:14:06.959><c> have</c><00:14:07.040><c> noticed</c><00:14:07.839><c> when</c>

00:14:07.990 --> 00:14:08.000 align:start position:0%
similarly you may have noticed when
 

00:14:08.000 --> 00:14:09.590 align:start position:0%
similarly you may have noticed when
you're<00:14:08.240><c> programming</c><00:14:08.720><c> that</c>

00:14:09.590 --> 00:14:09.600 align:start position:0%
you're programming that
 

00:14:09.600 --> 00:14:11.350 align:start position:0%
you're programming that
a<00:14:09.680><c> unix</c><00:14:10.160><c> program</c><00:14:10.480><c> can</c><00:14:10.639><c> make</c><00:14:10.800><c> the</c><00:14:10.959><c> weight</c>

00:14:11.350 --> 00:14:11.360 align:start position:0%
a unix program can make the weight
 

00:14:11.360 --> 00:14:13.509 align:start position:0%
a unix program can make the weight
system<00:14:11.839><c> call</c>

00:14:13.509 --> 00:14:13.519 align:start position:0%
system call
 

00:14:13.519 --> 00:14:15.350 align:start position:0%
system call
and<00:14:13.600><c> what</c><00:14:13.839><c> weight</c><00:14:14.079><c> does</c><00:14:14.399><c> is</c><00:14:14.560><c> it</c><00:14:14.880><c> causes</c><00:14:15.279><c> the</c>

00:14:15.350 --> 00:14:15.360 align:start position:0%
and what weight does is it causes the
 

00:14:15.360 --> 00:14:16.949 align:start position:0%
and what weight does is it causes the
calling<00:14:15.680><c> process</c><00:14:16.160><c> to</c><00:14:16.240><c> wait</c><00:14:16.560><c> until</c>

00:14:16.949 --> 00:14:16.959 align:start position:0%
calling process to wait until
 

00:14:16.959 --> 00:14:19.430 align:start position:0%
calling process to wait until
any<00:14:17.199><c> of</c><00:14:17.360><c> its</c><00:14:17.600><c> children</c><00:14:18.079><c> exit</c><00:14:18.560><c> so</c><00:14:18.959><c> here</c><00:14:19.199><c> we</c><00:14:19.360><c> have</c>

00:14:19.430 --> 00:14:19.440 align:start position:0%
any of its children exit so here we have
 

00:14:19.440 --> 00:14:20.389 align:start position:0%
any of its children exit so here we have
the<00:14:19.600><c> parent</c><00:14:20.000><c> shot</c>

00:14:20.389 --> 00:14:20.399 align:start position:0%
the parent shot
 

00:14:20.399 --> 00:14:22.470 align:start position:0%
the parent shot
process<00:14:20.880><c> intentionally</c><00:14:21.519><c> waiting</c><00:14:22.079><c> for</c><00:14:22.240><c> some</c>

00:14:22.470 --> 00:14:22.480 align:start position:0%
process intentionally waiting for some
 

00:14:22.480 --> 00:14:25.430 align:start position:0%
process intentionally waiting for some
event<00:14:22.880><c> sort</c><00:14:23.040><c> of</c><00:14:23.199><c> caused</c><00:14:23.600><c> by</c><00:14:23.760><c> another</c><00:14:24.160><c> process</c>

00:14:25.430 --> 00:14:25.440 align:start position:0%
event sort of caused by another process
 

00:14:25.440 --> 00:14:27.509 align:start position:0%
event sort of caused by another process
so<00:14:25.600><c> these</c><00:14:25.760><c> are</c><00:14:25.920><c> all</c><00:14:26.079><c> situations</c><00:14:26.720><c> where</c><00:14:27.360><c> a</c>

00:14:27.509 --> 00:14:27.519 align:start position:0%
so these are all situations where a
 

00:14:27.519 --> 00:14:29.110 align:start position:0%
so these are all situations where a
process<00:14:27.920><c> needs</c><00:14:28.079><c> to</c><00:14:28.240><c> wait</c><00:14:28.560><c> for</c><00:14:28.800><c> a</c>

00:14:29.110 --> 00:14:29.120 align:start position:0%
process needs to wait for a
 

00:14:29.120 --> 00:14:32.069 align:start position:0%
process needs to wait for a
specific<00:14:29.519><c> event</c><00:14:29.920><c> either</c><00:14:30.480><c> typically</c><00:14:30.880><c> io</c><00:14:31.519><c> or</c>

00:14:32.069 --> 00:14:32.079 align:start position:0%
specific event either typically io or
 

00:14:32.079 --> 00:14:33.430 align:start position:0%
specific event either typically io or
another<00:14:32.480><c> process</c>

00:14:33.430 --> 00:14:33.440 align:start position:0%
another process
 

00:14:33.440 --> 00:14:36.389 align:start position:0%
another process
sort<00:14:33.680><c> of</c><00:14:34.800><c> declaring</c><00:14:35.360><c> that</c><00:14:35.519><c> something</c>

00:14:36.389 --> 00:14:36.399 align:start position:0%
sort of declaring that something
 

00:14:36.399 --> 00:14:39.430 align:start position:0%
sort of declaring that something
specific<00:14:36.880><c> has</c><00:14:37.040><c> happened</c>

00:14:39.430 --> 00:14:39.440 align:start position:0%
specific has happened
 

00:14:39.440 --> 00:14:41.829 align:start position:0%
specific has happened
and<00:14:39.680><c> coordination</c><00:14:40.399><c> is</c><00:14:40.480><c> the</c><00:14:40.720><c> sort</c><00:14:40.880><c> of</c><00:14:41.440><c> tool</c>

00:14:41.829 --> 00:14:41.839 align:start position:0%
and coordination is the sort of tool
 

00:14:41.839 --> 00:14:43.430 align:start position:0%
and coordination is the sort of tool
that<00:14:42.079><c> helps</c><00:14:42.399><c> us</c>

00:14:43.430 --> 00:14:43.440 align:start position:0%
that helps us
 

00:14:43.440 --> 00:14:45.189 align:start position:0%
that helps us
solve<00:14:43.680><c> these</c><00:14:43.839><c> kind</c><00:14:44.000><c> of</c><00:14:44.079><c> problems</c><00:14:44.959><c> or</c>

00:14:45.189 --> 00:14:45.199 align:start position:0%
solve these kind of problems or
 

00:14:45.199 --> 00:14:48.230 align:start position:0%
solve these kind of problems or
implement<00:14:46.079><c> these</c><00:14:46.320><c> kind</c><00:14:46.480><c> of</c><00:14:46.560><c> requirements</c>

00:14:48.230 --> 00:14:48.240 align:start position:0%
implement these kind of requirements
 

00:14:48.240 --> 00:14:50.150 align:start position:0%
implement these kind of requirements
and<00:14:48.399><c> coordination</c><00:14:48.880><c> is</c><00:14:49.120><c> totally</c><00:14:49.600><c> fundamental</c>

00:14:50.150 --> 00:14:50.160 align:start position:0%
and coordination is totally fundamental
 

00:14:50.160 --> 00:14:52.310 align:start position:0%
and coordination is totally fundamental
just<00:14:50.399><c> just</c><00:14:50.560><c> like</c><00:14:50.720><c> with</c><00:14:50.959><c> locks</c>

00:14:52.310 --> 00:14:52.320 align:start position:0%
just just like with locks
 

00:14:52.320 --> 00:14:54.470 align:start position:0%
just just like with locks
coordination<00:14:52.880><c> is</c><00:14:53.040><c> another</c><00:14:53.279><c> fundamental</c><00:14:54.000><c> tool</c>

00:14:54.470 --> 00:14:54.480 align:start position:0%
coordination is another fundamental tool
 

00:14:54.480 --> 00:14:56.550 align:start position:0%
coordination is another fundamental tool
for<00:14:55.199><c> writing</c><00:14:55.600><c> threaded</c><00:14:56.000><c> programs</c><00:14:56.399><c> and</c><00:14:56.480><c> it</c>

00:14:56.550 --> 00:14:56.560 align:start position:0%
for writing threaded programs and it
 

00:14:56.560 --> 00:14:57.350 align:start position:0%
for writing threaded programs and it
comes<00:14:56.800><c> up</c>

00:14:57.350 --> 00:14:57.360 align:start position:0%
comes up
 

00:14:57.360 --> 00:15:00.790 align:start position:0%
comes up
all<00:14:57.600><c> the</c><00:14:57.680><c> time</c><00:14:59.600><c> all</c><00:14:59.760><c> right</c><00:15:00.000><c> so</c>

00:15:00.790 --> 00:15:00.800 align:start position:0%
all the time all right so
 

00:15:00.800 --> 00:15:03.990 align:start position:0%
all the time all right so
how<00:15:01.120><c> could</c><00:15:01.519><c> we</c><00:15:02.320><c> have</c><00:15:02.480><c> a</c><00:15:02.639><c> process</c>

00:15:03.990 --> 00:15:04.000 align:start position:0%
how could we have a process
 

00:15:04.000 --> 00:15:06.389 align:start position:0%
how could we have a process
or<00:15:04.079><c> a</c><00:15:04.240><c> thread</c><00:15:04.880><c> wait</c><00:15:05.279><c> for</c><00:15:05.600><c> this</c><00:15:05.920><c> this</c><00:15:06.079><c> kind</c><00:15:06.240><c> of</c>

00:15:06.389 --> 00:15:06.399 align:start position:0%
or a thread wait for this this kind of
 

00:15:06.399 --> 00:15:08.150 align:start position:0%
or a thread wait for this this kind of
event

00:15:08.150 --> 00:15:08.160 align:start position:0%
event
 

00:15:08.160 --> 00:15:10.470 align:start position:0%
event
so<00:15:08.320><c> one</c><00:15:08.560><c> possibility</c><00:15:09.440><c> there's</c><00:15:09.760><c> an</c><00:15:10.000><c> extremely</c>

00:15:10.470 --> 00:15:10.480 align:start position:0%
so one possibility there's an extremely
 

00:15:10.480 --> 00:15:11.750 align:start position:0%
so one possibility there's an extremely
straightforward<00:15:11.120><c> one</c>

00:15:11.750 --> 00:15:11.760 align:start position:0%
straightforward one
 

00:15:11.760 --> 00:15:15.750 align:start position:0%
straightforward one
is<00:15:12.160><c> just</c><00:15:12.399><c> a</c><00:15:12.639><c> busy</c><00:15:12.959><c> weight</c><00:15:14.079><c> to</c><00:15:14.240><c> loop</c>

00:15:15.750 --> 00:15:15.760 align:start position:0%
is just a busy weight to loop
 

00:15:15.760 --> 00:15:19.110 align:start position:0%
is just a busy weight to loop
so<00:15:16.000><c> you</c><00:15:16.079><c> could</c><00:15:16.240><c> imagine</c><00:15:18.480><c> and</c><00:15:18.560><c> we'll</c><00:15:18.720><c> discard</c>

00:15:19.110 --> 00:15:19.120 align:start position:0%
so you could imagine and we'll discard
 

00:15:19.120 --> 00:15:21.509 align:start position:0%
so you could imagine and we'll discard
this<00:15:19.279><c> is</c><00:15:19.360><c> a</c><00:15:19.440><c> bad</c><00:15:19.680><c> idea</c><00:15:19.920><c> in</c><00:15:20.000><c> a</c><00:15:20.079><c> moment</c><00:15:20.399><c> but</c>

00:15:21.509 --> 00:15:21.519 align:start position:0%
this is a bad idea in a moment but
 

00:15:21.519 --> 00:15:23.829 align:start position:0%
this is a bad idea in a moment but
let's<00:15:21.680><c> say</c><00:15:21.920><c> we</c><00:15:22.079><c> want</c><00:15:22.240><c> to</c><00:15:22.399><c> read</c><00:15:22.560><c> from</c><00:15:22.800><c> a</c><00:15:22.880><c> pipe</c><00:15:23.680><c> we</c>

00:15:23.829 --> 00:15:23.839 align:start position:0%
let's say we want to read from a pipe we
 

00:15:23.839 --> 00:15:25.590 align:start position:0%
let's say we want to read from a pipe we
just<00:15:24.079><c> write</c><00:15:24.320><c> a</c><00:15:24.399><c> loop</c><00:15:24.639><c> in</c><00:15:24.800><c> the</c><00:15:24.959><c> pipe</c><00:15:25.279><c> read</c>

00:15:25.590 --> 00:15:25.600 align:start position:0%
just write a loop in the pipe read
 

00:15:25.600 --> 00:15:25.990 align:start position:0%
just write a loop in the pipe read
function

00:15:25.990 --> 00:15:26.000 align:start position:0%
function
 

00:15:26.000 --> 00:15:29.189 align:start position:0%
function
that<00:15:26.240><c> says</c><00:15:26.800><c> you</c><00:15:26.880><c> know</c><00:15:27.120><c> while</c>

00:15:29.189 --> 00:15:29.199 align:start position:0%
that says you know while
 

00:15:29.199 --> 00:15:34.389 align:start position:0%
that says you know while
you<00:15:29.360><c> know</c><00:15:29.519><c> the</c><00:15:29.759><c> pipe</c><00:15:30.079><c> buffer</c><00:15:30.480><c> is</c><00:15:30.720><c> empty</c>

00:15:34.389 --> 00:15:34.399 align:start position:0%
 
 

00:15:34.399 --> 00:15:38.629 align:start position:0%
 
we're<00:15:34.639><c> gonna</c><00:15:35.920><c> do</c><00:15:36.720><c> absolutely</c><00:15:37.279><c> nothing</c>

00:15:38.629 --> 00:15:38.639 align:start position:0%
we're gonna do absolutely nothing
 

00:15:38.639 --> 00:15:39.990 align:start position:0%
we're gonna do absolutely nothing
all<00:15:38.800><c> right</c><00:15:39.040><c> and</c><00:15:39.120><c> we're</c><00:15:39.360><c> going</c><00:15:39.440><c> to</c><00:15:39.680><c> let's</c><00:15:39.839><c> just</c>

00:15:39.990 --> 00:15:40.000 align:start position:0%
all right and we're going to let's just
 

00:15:40.000 --> 00:15:41.430 align:start position:0%
all right and we're going to let's just
sit<00:15:40.160><c> in</c><00:15:40.240><c> this</c><00:15:40.399><c> loop</c><00:15:40.720><c> going</c><00:15:40.959><c> round</c><00:15:41.199><c> and</c><00:15:41.279><c> round</c>

00:15:41.430 --> 00:15:41.440 align:start position:0%
sit in this loop going round and round
 

00:15:41.440 --> 00:15:42.629 align:start position:0%
sit in this loop going round and round
in<00:15:41.519><c> this</c><00:15:41.680><c> loop</c>

00:15:42.629 --> 00:15:42.639 align:start position:0%
in this loop
 

00:15:42.639 --> 00:15:44.550 align:start position:0%
in this loop
until<00:15:42.959><c> maybe</c><00:15:43.199><c> some</c><00:15:43.440><c> other</c><00:15:43.680><c> thread</c><00:15:44.079><c> on</c><00:15:44.240><c> another</c>

00:15:44.550 --> 00:15:44.560 align:start position:0%
until maybe some other thread on another
 

00:15:44.560 --> 00:15:46.629 align:start position:0%
until maybe some other thread on another
core<00:15:45.199><c> writes</c><00:15:45.600><c> into</c><00:15:45.759><c> the</c><00:15:45.839><c> buffer</c><00:15:46.240><c> and</c><00:15:46.320><c> makes</c><00:15:46.480><c> it</c>

00:15:46.629 --> 00:15:46.639 align:start position:0%
core writes into the buffer and makes it
 

00:15:46.639 --> 00:15:48.230 align:start position:0%
core writes into the buffer and makes it
not<00:15:46.880><c> empty</c><00:15:47.199><c> and</c><00:15:47.279><c> then</c><00:15:47.440><c> this</c><00:15:47.600><c> loop</c><00:15:47.759><c> will</c><00:15:47.920><c> finish</c>

00:15:48.230 --> 00:15:48.240 align:start position:0%
not empty and then this loop will finish
 

00:15:48.240 --> 00:15:49.910 align:start position:0%
not empty and then this loop will finish
and<00:15:48.320><c> then</c><00:15:48.560><c> we'll</c><00:15:48.800><c> you</c><00:15:48.880><c> know</c><00:15:49.040><c> return</c><00:15:49.360><c> the</c><00:15:49.440><c> data</c>

00:15:49.910 --> 00:15:49.920 align:start position:0%
and then we'll you know return the data
 

00:15:49.920 --> 00:15:51.189 align:start position:0%
and then we'll you know return the data
or<00:15:50.079><c> whatever</c><00:15:50.399><c> it</c><00:15:50.480><c> is</c><00:15:50.560><c> we're</c><00:15:50.720><c> supposed</c>

00:15:51.189 --> 00:15:51.199 align:start position:0%
or whatever it is we're supposed
 

00:15:51.199 --> 00:15:56.550 align:start position:0%
or whatever it is we're supposed
to<00:15:51.360><c> do</c><00:15:51.519><c> with</c><00:15:51.680><c> the</c><00:15:51.759><c> data</c><00:15:53.360><c> um</c>

00:15:56.550 --> 00:15:56.560 align:start position:0%
 
 

00:15:56.560 --> 00:15:57.749 align:start position:0%
 
so<00:15:56.720><c> you</c><00:15:56.800><c> can</c><00:15:56.880><c> imagine</c><00:15:57.120><c> writing</c><00:15:57.360><c> code</c><00:15:57.600><c> like</c>

00:15:57.749 --> 00:15:57.759 align:start position:0%
so you can imagine writing code like
 

00:15:57.759 --> 00:15:59.269 align:start position:0%
so you can imagine writing code like
this<00:15:57.920><c> and</c><00:15:58.079><c> actually</c><00:15:58.320><c> there</c><00:15:58.560><c> is</c><00:15:58.720><c> a</c><00:15:58.800><c> little</c><00:15:59.040><c> bit</c>

00:15:59.269 --> 00:15:59.279 align:start position:0%
this and actually there is a little bit
 

00:15:59.279 --> 00:15:59.749 align:start position:0%
this and actually there is a little bit
of

00:15:59.749 --> 00:15:59.759 align:start position:0%
of
 

00:15:59.759 --> 00:16:01.749 align:start position:0%
of
there<00:16:00.000><c> may</c><00:16:00.240><c> be</c><00:16:00.800><c> you</c><00:16:00.880><c> know</c><00:16:01.120><c> small</c><00:16:01.360><c> amounts</c><00:16:01.680><c> of</c>

00:16:01.749 --> 00:16:01.759 align:start position:0%
there may be you know small amounts of
 

00:16:01.759 --> 00:16:03.189 align:start position:0%
there may be you know small amounts of
code<00:16:02.000><c> like</c><00:16:02.160><c> this</c><00:16:02.399><c> like</c><00:16:02.720><c> if</c><00:16:02.880><c> you</c>

00:16:03.189 --> 00:16:03.199 align:start position:0%
code like this like if you
 

00:16:03.199 --> 00:16:05.590 align:start position:0%
code like this like if you
know<00:16:04.399><c> that</c><00:16:04.560><c> the</c><00:16:04.720><c> thing</c><00:16:04.880><c> you're</c><00:16:05.040><c> waiting</c><00:16:05.360><c> for</c>

00:16:05.590 --> 00:16:05.600 align:start position:0%
know that the thing you're waiting for
 

00:16:05.600 --> 00:16:06.949 align:start position:0%
know that the thing you're waiting for
is<00:16:05.920><c> extremely</c><00:16:06.480><c> like</c>

00:16:06.949 --> 00:16:06.959 align:start position:0%
is extremely like
 

00:16:06.959 --> 00:16:08.949 align:start position:0%
is extremely like
likely<00:16:07.279><c> to</c><00:16:07.360><c> happen</c><00:16:07.839><c> and</c><00:16:08.320><c> a</c><00:16:08.480><c> tenth</c><00:16:08.720><c> of</c><00:16:08.880><c> a</c>

00:16:08.949 --> 00:16:08.959 align:start position:0%
likely to happen and a tenth of a
 

00:16:08.959 --> 00:16:10.870 align:start position:0%
likely to happen and a tenth of a
microsecond<00:16:09.680><c> let's</c><00:16:09.920><c> say</c>

00:16:10.870 --> 00:16:10.880 align:start position:0%
microsecond let's say
 

00:16:10.880 --> 00:16:13.110 align:start position:0%
microsecond let's say
this<00:16:11.199><c> may</c><00:16:11.360><c> be</c><00:16:11.519><c> the</c><00:16:11.680><c> best</c><00:16:11.920><c> way</c><00:16:12.079><c> to</c><00:16:12.160><c> wait</c><00:16:12.480><c> for</c><00:16:12.639><c> it</c>

00:16:13.110 --> 00:16:13.120 align:start position:0%
this may be the best way to wait for it
 

00:16:13.120 --> 00:16:13.910 align:start position:0%
this may be the best way to wait for it
so

00:16:13.910 --> 00:16:13.920 align:start position:0%
so
 

00:16:13.920 --> 00:16:16.230 align:start position:0%
so
typically<00:16:14.320><c> this</c><00:16:14.480><c> is</c><00:16:14.639><c> done</c><00:16:14.880><c> with</c><00:16:15.759><c> some</c><00:16:16.000><c> kinds</c>

00:16:16.230 --> 00:16:16.240 align:start position:0%
typically this is done with some kinds
 

00:16:16.240 --> 00:16:18.389 align:start position:0%
typically this is done with some kinds
of<00:16:16.399><c> device</c><00:16:16.800><c> hardware</c>

00:16:18.389 --> 00:16:18.399 align:start position:0%
of device hardware
 

00:16:18.399 --> 00:16:20.230 align:start position:0%
of device hardware
where<00:16:18.560><c> you</c><00:16:18.720><c> ask</c><00:16:18.959><c> the</c><00:16:19.040><c> device</c><00:16:19.600><c> hardware</c><00:16:20.000><c> to</c><00:16:20.079><c> do</c>

00:16:20.230 --> 00:16:20.240 align:start position:0%
where you ask the device hardware to do
 

00:16:20.240 --> 00:16:22.069 align:start position:0%
where you ask the device hardware to do
something<00:16:20.560><c> you</c><00:16:20.800><c> know</c><00:16:21.360><c> it</c><00:16:21.519><c> will</c><00:16:21.680><c> always</c>

00:16:22.069 --> 00:16:22.079 align:start position:0%
something you know it will always
 

00:16:22.079 --> 00:16:23.990 align:start position:0%
something you know it will always
complete<00:16:22.399><c> that</c><00:16:22.639><c> task</c><00:16:23.040><c> in</c><00:16:23.199><c> a</c><00:16:23.279><c> tiny</c><00:16:23.600><c> amount</c><00:16:23.839><c> of</c>

00:16:23.990 --> 00:16:24.000 align:start position:0%
complete that task in a tiny amount of
 

00:16:24.000 --> 00:16:25.829 align:start position:0%
complete that task in a tiny amount of
time

00:16:25.829 --> 00:16:25.839 align:start position:0%
time
 

00:16:25.839 --> 00:16:28.470 align:start position:0%
time
just<00:16:26.079><c> sitting</c><00:16:26.320><c> in</c><00:16:26.480><c> a</c><00:16:26.959><c> short</c><00:16:27.279><c> loop</c><00:16:28.079><c> can</c><00:16:28.240><c> be</c><00:16:28.399><c> the</c>

00:16:28.470 --> 00:16:28.480 align:start position:0%
just sitting in a short loop can be the
 

00:16:28.480 --> 00:16:29.189 align:start position:0%
just sitting in a short loop can be the
right<00:16:28.720><c> answer</c>

00:16:29.189 --> 00:16:29.199 align:start position:0%
right answer
 

00:16:29.199 --> 00:16:31.350 align:start position:0%
right answer
but<00:16:29.440><c> if</c><00:16:29.920><c> this</c><00:16:30.160><c> might</c><00:16:30.399><c> take</c><00:16:30.800><c> a</c><00:16:30.959><c> long</c><00:16:31.199><c> time</c>

00:16:31.350 --> 00:16:31.360 align:start position:0%
but if this might take a long time
 

00:16:31.360 --> 00:16:33.030 align:start position:0%
but if this might take a long time
milliseconds<00:16:32.079><c> or</c><00:16:32.240><c> you</c><00:16:32.320><c> just</c><00:16:32.480><c> don't</c><00:16:32.639><c> know</c><00:16:32.800><c> how</c>

00:16:33.030 --> 00:16:33.040 align:start position:0%
milliseconds or you just don't know how
 

00:16:33.040 --> 00:16:33.910 align:start position:0%
milliseconds or you just don't know how
long<00:16:33.360><c> right</c>

00:16:33.910 --> 00:16:33.920 align:start position:0%
long right
 

00:16:33.920 --> 00:16:36.150 align:start position:0%
long right
maybe<00:16:34.320><c> it's</c><00:16:34.480><c> going</c><00:16:34.639><c> to</c><00:16:34.720><c> be</c><00:16:35.120><c> 10</c><00:16:35.360><c> minutes</c><00:16:35.839><c> before</c>

00:16:36.150 --> 00:16:36.160 align:start position:0%
maybe it's going to be 10 minutes before
 

00:16:36.160 --> 00:16:39.030 align:start position:0%
maybe it's going to be 10 minutes before
whatever<00:16:36.560><c> process</c><00:16:36.959><c> is</c><00:16:37.120><c> writing</c><00:16:37.440><c> the</c><00:16:37.519><c> pipe</c>

00:16:39.030 --> 00:16:39.040 align:start position:0%
whatever process is writing the pipe
 

00:16:39.040 --> 00:16:40.870 align:start position:0%
whatever process is writing the pipe
actually<00:16:39.279><c> writes</c><00:16:39.600><c> anything</c><00:16:40.399><c> then</c><00:16:40.560><c> we</c><00:16:40.720><c> don't</c>

00:16:40.870 --> 00:16:40.880 align:start position:0%
actually writes anything then we don't
 

00:16:40.880 --> 00:16:42.949 align:start position:0%
actually writes anything then we don't
want<00:16:40.959><c> to</c><00:16:41.120><c> spin</c><00:16:41.360><c> there</c><00:16:41.600><c> and</c><00:16:41.759><c> waste</c><00:16:42.079><c> cpu</c><00:16:42.560><c> time</c>

00:16:42.949 --> 00:16:42.959 align:start position:0%
want to spin there and waste cpu time
 

00:16:42.959 --> 00:16:45.350 align:start position:0%
want to spin there and waste cpu time
which<00:16:43.279><c> could</c><00:16:43.440><c> be</c><00:16:43.600><c> used</c><00:16:43.920><c> to</c><00:16:44.800><c> you</c><00:16:44.880><c> know</c><00:16:45.120><c> find</c>

00:16:45.350 --> 00:16:45.360 align:start position:0%
which could be used to you know find
 

00:16:45.360 --> 00:16:46.550 align:start position:0%
which could be used to you know find
more<00:16:45.600><c> digits</c><00:16:46.000><c> of</c><00:16:46.079><c> pi</c>

00:16:46.550 --> 00:16:46.560 align:start position:0%
more digits of pi
 

00:16:46.560 --> 00:16:49.590 align:start position:0%
more digits of pi
or<00:16:46.720><c> something</c><00:16:47.040><c> else</c><00:16:47.279><c> useful</c><00:16:48.720><c> we</c><00:16:48.880><c> want</c><00:16:49.040><c> to</c><00:16:49.360><c> give</c>

00:16:49.590 --> 00:16:49.600 align:start position:0%
or something else useful we want to give
 

00:16:49.600 --> 00:16:53.189 align:start position:0%
or something else useful we want to give
up<00:16:49.759><c> the</c><00:16:49.839><c> cpu</c><00:16:50.320><c> instead</c>

00:16:53.189 --> 00:16:53.199 align:start position:0%
 
 

00:16:53.199 --> 00:16:55.189 align:start position:0%
 
and<00:16:53.680><c> only</c><00:16:54.160><c> we</c><00:16:54.320><c> want</c><00:16:54.480><c> some</c><00:16:54.639><c> way</c><00:16:54.800><c> to</c><00:16:54.880><c> give</c><00:16:54.959><c> up</c><00:16:55.120><c> the</c>

00:16:55.189 --> 00:16:55.199 align:start position:0%
and only we want some way to give up the
 

00:16:55.199 --> 00:16:56.389 align:start position:0%
and only we want some way to give up the
cpu<00:16:55.600><c> like</c><00:16:55.839><c> switch</c>

00:16:56.389 --> 00:16:56.399 align:start position:0%
cpu like switch
 

00:16:56.399 --> 00:16:58.389 align:start position:0%
cpu like switch
but<00:16:56.560><c> actually</c><00:16:56.880><c> regain</c><00:16:57.360><c> the</c><00:16:57.519><c> cpu</c><00:16:58.000><c> when</c><00:16:58.240><c> the</c>

00:16:58.389 --> 00:16:58.399 align:start position:0%
but actually regain the cpu when the
 

00:16:58.399 --> 00:16:59.590 align:start position:0%
but actually regain the cpu when the
event<00:16:58.639><c> we</c><00:16:58.800><c> care</c><00:16:59.040><c> about</c>

00:16:59.590 --> 00:16:59.600 align:start position:0%
event we care about
 

00:16:59.600 --> 00:17:02.389 align:start position:0%
event we care about
has<00:16:59.839><c> actually</c><00:17:00.160><c> occurred</c><00:17:00.720><c> and</c><00:17:00.880><c> it's</c><00:17:01.040><c> that</c><00:17:01.279><c> that</c>

00:17:02.389 --> 00:17:02.399 align:start position:0%
has actually occurred and it's that that
 

00:17:02.399 --> 00:17:04.230 align:start position:0%
has actually occurred and it's that that
coordination<00:17:03.040><c> is</c><00:17:03.120><c> all</c><00:17:03.279><c> about</c><00:17:03.519><c> techniques</c><00:17:04.000><c> to</c>

00:17:04.230 --> 00:17:04.240 align:start position:0%
coordination is all about techniques to
 

00:17:04.240 --> 00:17:05.750 align:start position:0%
coordination is all about techniques to
give<00:17:04.480><c> up</c><00:17:04.559><c> the</c><00:17:04.720><c> cpu</c>

00:17:05.750 --> 00:17:05.760 align:start position:0%
give up the cpu
 

00:17:05.760 --> 00:17:08.150 align:start position:0%
give up the cpu
until<00:17:06.559><c> the</c><00:17:06.959><c> condition</c><00:17:07.439><c> the</c><00:17:07.600><c> event</c><00:17:07.919><c> that</c><00:17:08.000><c> we're</c>

00:17:08.150 --> 00:17:08.160 align:start position:0%
until the condition the event that we're
 

00:17:08.160 --> 00:17:11.590 align:start position:0%
until the condition the event that we're
waiting<00:17:08.559><c> for</c><00:17:08.880><c> has</c><00:17:09.120><c> actually</c><00:17:09.439><c> occurred</c>

00:17:11.590 --> 00:17:11.600 align:start position:0%
waiting for has actually occurred
 

00:17:11.600 --> 00:17:14.390 align:start position:0%
waiting for has actually occurred
and<00:17:12.079><c> again</c><00:17:13.039><c> uh</c><00:17:13.520><c> sleep</c><00:17:13.760><c> and</c><00:17:13.839><c> wake</c><00:17:14.079><c> up</c><00:17:14.160><c> there's</c>

00:17:14.390 --> 00:17:14.400 align:start position:0%
and again uh sleep and wake up there's
 

00:17:14.400 --> 00:17:15.669 align:start position:0%
and again uh sleep and wake up there's
actu<00:17:14.640><c> there's</c><00:17:14.880><c> a</c><00:17:14.959><c> number</c><00:17:15.280><c> of</c><00:17:15.439><c> different</c>

00:17:15.669 --> 00:17:15.679 align:start position:0%
actu there's a number of different
 

00:17:15.679 --> 00:17:17.189 align:start position:0%
actu there's a number of different
coordination<00:17:16.240><c> primitives</c><00:17:16.720><c> that</c><00:17:16.799><c> people</c><00:17:17.039><c> have</c>

00:17:17.189 --> 00:17:17.199 align:start position:0%
coordination primitives that people have
 

00:17:17.199 --> 00:17:20.150 align:start position:0%
coordination primitives that people have
invented<00:17:17.679><c> over</c><00:17:17.839><c> the</c><00:17:18.000><c> years</c>

00:17:20.150 --> 00:17:20.160 align:start position:0%
invented over the years
 

00:17:20.160 --> 00:17:23.270 align:start position:0%
invented over the years
and<00:17:20.400><c> xv6</c><00:17:21.919><c> in</c><00:17:22.000><c> common</c><00:17:22.319><c> with</c><00:17:22.480><c> many</c><00:17:22.799><c> flavors</c><00:17:23.120><c> of</c>

00:17:23.270 --> 00:17:23.280 align:start position:0%
and xv6 in common with many flavors of
 

00:17:23.280 --> 00:17:24.549 align:start position:0%
and xv6 in common with many flavors of
unix

00:17:24.549 --> 00:17:24.559 align:start position:0%
unix
 

00:17:24.559 --> 00:17:27.350 align:start position:0%
unix
uses<00:17:24.880><c> something</c><00:17:25.120><c> called</c><00:17:25.280><c> sleep</c><00:17:25.600><c> and</c><00:17:25.679><c> wake</c><00:17:25.919><c> up</c>

00:17:27.350 --> 00:17:27.360 align:start position:0%
uses something called sleep and wake up
 

00:17:27.360 --> 00:17:28.230 align:start position:0%
uses something called sleep and wake up
okay

00:17:28.230 --> 00:17:28.240 align:start position:0%
okay
 

00:17:28.240 --> 00:17:30.630 align:start position:0%
okay
um<00:17:29.360><c> all</c><00:17:29.440><c> right</c><00:17:29.600><c> with</c><00:17:29.760><c> this</c><00:17:30.000><c> background</c><00:17:30.480><c> i'd</c>

00:17:30.630 --> 00:17:30.640 align:start position:0%
um all right with this background i'd
 

00:17:30.640 --> 00:17:32.230 align:start position:0%
um all right with this background i'd
like<00:17:30.799><c> to</c>

00:17:32.230 --> 00:17:32.240 align:start position:0%
like to
 

00:17:32.240 --> 00:17:35.430 align:start position:0%
like to
switch<00:17:32.799><c> to</c><00:17:34.400><c> looking</c><00:17:34.720><c> at</c><00:17:35.120><c> the</c>

00:17:35.430 --> 00:17:35.440 align:start position:0%
switch to looking at the
 

00:17:35.440 --> 00:17:43.029 align:start position:0%
switch to looking at the
code<00:17:35.760><c> in</c><00:17:35.919><c> xv6</c>

00:17:43.029 --> 00:17:43.039 align:start position:0%
 
 

00:17:43.039 --> 00:17:46.150 align:start position:0%
 
all<00:17:43.200><c> right</c><00:17:43.280><c> so</c><00:17:43.440><c> i've</c><00:17:43.600><c> just</c><00:17:44.559><c> shared</c><00:17:44.799><c> my</c><00:17:45.039><c> screen</c>

00:17:46.150 --> 00:17:46.160 align:start position:0%
all right so i've just shared my screen
 

00:17:46.160 --> 00:17:48.310 align:start position:0%
all right so i've just shared my screen
let<00:17:46.400><c> me</c><00:17:46.480><c> know</c><00:17:46.640><c> if</c><00:17:46.799><c> the</c><00:17:47.039><c> screen</c><00:17:47.440><c> share</c><00:17:48.000><c> did</c><00:17:48.160><c> not</c>

00:17:48.310 --> 00:17:48.320 align:start position:0%
let me know if the screen share did not
 

00:17:48.320 --> 00:17:50.470 align:start position:0%
let me know if the screen share did not
work

00:17:50.470 --> 00:17:50.480 align:start position:0%
work
 

00:17:50.480 --> 00:17:52.630 align:start position:0%
work
okay<00:17:50.799><c> i</c><00:17:50.960><c> have</c><00:17:51.600><c> in</c><00:17:51.760><c> preparation</c><00:17:52.320><c> for</c><00:17:52.480><c> this</c>

00:17:52.630 --> 00:17:52.640 align:start position:0%
okay i have in preparation for this
 

00:17:52.640 --> 00:17:54.950 align:start position:0%
okay i have in preparation for this
lecture

00:17:54.950 --> 00:17:54.960 align:start position:0%
lecture
 

00:17:54.960 --> 00:17:57.830 align:start position:0%
lecture
rewritten<00:17:55.520><c> some</c><00:17:55.679><c> of</c><00:17:55.760><c> the</c><00:17:56.000><c> code</c><00:17:56.640><c> in</c><00:17:56.960><c> the</c><00:17:57.280><c> uart</c>

00:17:57.830 --> 00:17:57.840 align:start position:0%
rewritten some of the code in the uart
 

00:17:57.840 --> 00:17:58.549 align:start position:0%
rewritten some of the code in the uart
driver

00:17:58.549 --> 00:17:58.559 align:start position:0%
driver
 

00:17:58.559 --> 00:18:02.230 align:start position:0%
driver
that's<00:17:58.880><c> the</c><00:17:59.520><c> serial</c><00:18:00.000><c> driver</c><00:18:00.480><c> that</c><00:18:01.360><c> xv6</c><00:18:01.919><c> uses</c>

00:18:02.230 --> 00:18:02.240 align:start position:0%
that's the serial driver that xv6 uses
 

00:18:02.240 --> 00:18:03.430 align:start position:0%
that's the serial driver that xv6 uses
to<00:18:02.480><c> read</c><00:18:02.720><c> and</c><00:18:02.880><c> write</c>

00:18:03.430 --> 00:18:03.440 align:start position:0%
to read and write
 

00:18:03.440 --> 00:18:05.909 align:start position:0%
to read and write
characters<00:18:03.840><c> from</c><00:18:04.000><c> the</c><00:18:04.080><c> console</c><00:18:05.520><c> and</c><00:18:05.600><c> so</c><00:18:05.760><c> i</c>

00:18:05.909 --> 00:18:05.919 align:start position:0%
characters from the console and so i
 

00:18:05.919 --> 00:18:07.669 align:start position:0%
characters from the console and so i
have<00:18:06.000><c> this</c><00:18:06.240><c> function</c><00:18:06.559><c> uart</c><00:18:06.960><c> right</c><00:18:07.200><c> which</c>

00:18:07.669 --> 00:18:07.679 align:start position:0%
have this function uart right which
 

00:18:07.679 --> 00:18:09.590 align:start position:0%
have this function uart right which
when<00:18:07.919><c> a</c><00:18:08.000><c> program</c><00:18:08.320><c> like</c><00:18:08.480><c> the</c><00:18:08.720><c> shell</c><00:18:09.120><c> prints</c><00:18:09.440><c> its</c>

00:18:09.590 --> 00:18:09.600 align:start position:0%
when a program like the shell prints its
 

00:18:09.600 --> 00:18:12.870 align:start position:0%
when a program like the shell prints its
prompt<00:18:09.919><c> or</c><00:18:10.080><c> produces</c><00:18:10.480><c> any</c><00:18:10.640><c> other</c><00:18:10.880><c> output</c>

00:18:12.870 --> 00:18:12.880 align:start position:0%
prompt or produces any other output
 

00:18:12.880 --> 00:18:14.710 align:start position:0%
prompt or produces any other output
that<00:18:13.120><c> you</c><00:18:13.280><c> know</c><00:18:13.360><c> makes</c><00:18:13.600><c> a</c><00:18:13.679><c> write</c><00:18:14.000><c> system</c><00:18:14.320><c> call</c>

00:18:14.710 --> 00:18:14.720 align:start position:0%
that you know makes a write system call
 

00:18:14.720 --> 00:18:16.870 align:start position:0%
that you know makes a write system call
and<00:18:15.280><c> in</c><00:18:15.520><c> my</c><00:18:15.760><c> slightly</c><00:18:16.080><c> modified</c><00:18:16.480><c> version</c><00:18:16.720><c> of</c>

00:18:16.870 --> 00:18:16.880 align:start position:0%
and in my slightly modified version of
 

00:18:16.880 --> 00:18:17.590 align:start position:0%
and in my slightly modified version of
xv6

00:18:17.590 --> 00:18:17.600 align:start position:0%
xv6
 

00:18:17.600 --> 00:18:19.750 align:start position:0%
xv6
that<00:18:17.840><c> right</c><00:18:18.080><c> system</c><00:18:18.400><c> call</c><00:18:18.799><c> ends</c><00:18:19.200><c> up</c><00:18:19.440><c> with</c><00:18:19.679><c> a</c>

00:18:19.750 --> 00:18:19.760 align:start position:0%
that right system call ends up with a
 

00:18:19.760 --> 00:18:21.430 align:start position:0%
that right system call ends up with a
call<00:18:20.000><c> to</c><00:18:20.160><c> uart</c><00:18:20.720><c> right</c>

00:18:21.430 --> 00:18:21.440 align:start position:0%
call to uart right
 

00:18:21.440 --> 00:18:23.270 align:start position:0%
call to uart right
in<00:18:21.600><c> the</c><00:18:21.840><c> uart</c><00:18:22.240><c> driver</c><00:18:22.480><c> which</c><00:18:22.720><c> actually</c><00:18:22.960><c> writes</c>

00:18:23.270 --> 00:18:23.280 align:start position:0%
in the uart driver which actually writes
 

00:18:23.280 --> 00:18:25.270 align:start position:0%
in the uart driver which actually writes
the<00:18:23.440><c> characters</c><00:18:24.240><c> in</c><00:18:24.320><c> this</c><00:18:24.559><c> loop</c>

00:18:25.270 --> 00:18:25.280 align:start position:0%
the characters in this loop
 

00:18:25.280 --> 00:18:31.750 align:start position:0%
the characters in this loop
um<00:18:26.000><c> one</c><00:18:26.320><c> by</c><00:18:26.559><c> one</c><00:18:27.039><c> to</c><00:18:27.200><c> the</c><00:18:27.840><c> uart</c><00:18:28.320><c> hardware</c>

00:18:31.750 --> 00:18:31.760 align:start position:0%
 
 

00:18:31.760 --> 00:18:34.390 align:start position:0%
 
and<00:18:31.840><c> this</c><00:18:32.080><c> is</c><00:18:32.799><c> written</c><00:18:33.039><c> in</c><00:18:33.200><c> a</c><00:18:33.280><c> sort</c><00:18:33.440><c> of</c><00:18:33.520><c> classic</c>

00:18:34.390 --> 00:18:34.400 align:start position:0%
and this is written in a sort of classic
 

00:18:34.400 --> 00:18:37.430 align:start position:0%
and this is written in a sort of classic
device<00:18:34.880><c> driver</c><00:18:35.200><c> style</c>

00:18:37.430 --> 00:18:37.440 align:start position:0%
device driver style
 

00:18:37.440 --> 00:18:40.830 align:start position:0%
device driver style
you'll<00:18:37.600><c> see</c><00:18:37.840><c> code</c><00:18:38.080><c> like</c><00:18:38.320><c> this</c><00:18:39.360><c> in</c><00:18:39.520><c> many</c><00:18:39.760><c> device</c>

00:18:40.830 --> 00:18:40.840 align:start position:0%
you'll see code like this in many device
 

00:18:40.840 --> 00:18:41.990 align:start position:0%
you'll see code like this in many device
drivers

00:18:41.990 --> 00:18:42.000 align:start position:0%
drivers
 

00:18:42.000 --> 00:18:43.830 align:start position:0%
drivers
okay<00:18:42.320><c> so</c><00:18:42.880><c> one</c><00:18:43.039><c> of</c><00:18:43.120><c> the</c><00:18:43.200><c> things</c><00:18:43.360><c> that's</c><00:18:43.600><c> going</c>

00:18:43.830 --> 00:18:43.840 align:start position:0%
okay so one of the things that's going
 

00:18:43.840 --> 00:18:45.990 align:start position:0%
okay so one of the things that's going
on<00:18:44.080><c> here</c><00:18:44.400><c> is</c><00:18:44.559><c> that</c><00:18:44.720><c> the</c><00:18:44.799><c> uart</c><00:18:45.280><c> hardware</c>

00:18:45.990 --> 00:18:46.000 align:start position:0%
on here is that the uart hardware
 

00:18:46.000 --> 00:18:48.870 align:start position:0%
on here is that the uart hardware
can<00:18:46.160><c> only</c><00:18:46.480><c> accept</c><00:18:47.840><c> one</c><00:18:48.160><c> character</c><00:18:48.640><c> for</c>

00:18:48.870 --> 00:18:48.880 align:start position:0%
can only accept one character for
 

00:18:48.880 --> 00:18:50.470 align:start position:0%
can only accept one character for
transmission<00:18:49.520><c> at</c><00:18:49.679><c> a</c><00:18:49.760><c> time</c>

00:18:50.470 --> 00:18:50.480 align:start position:0%
transmission at a time
 

00:18:50.480 --> 00:18:52.150 align:start position:0%
transmission at a time
and<00:18:50.559><c> so</c><00:18:50.720><c> the</c><00:18:50.799><c> way</c><00:18:50.960><c> this</c><00:18:51.120><c> code</c><00:18:51.440><c> has</c><00:18:51.600><c> to</c><00:18:51.679><c> look</c><00:18:52.080><c> you</c>

00:18:52.150 --> 00:18:52.160 align:start position:0%
and so the way this code has to look you
 

00:18:52.160 --> 00:18:53.190 align:start position:0%
and so the way this code has to look you
know<00:18:52.320><c> typically</c><00:18:52.640><c> you</c><00:18:52.720><c> have</c><00:18:52.799><c> lots</c><00:18:53.039><c> of</c>

00:18:53.190 --> 00:18:53.200 align:start position:0%
know typically you have lots of
 

00:18:53.200 --> 00:18:53.990 align:start position:0%
know typically you have lots of
characters<00:18:53.600><c> you</c>

00:18:53.990 --> 00:18:54.000 align:start position:0%
characters you
 

00:18:54.000 --> 00:18:56.230 align:start position:0%
characters you
want<00:18:54.160><c> to</c><00:18:54.320><c> write</c><00:18:55.280><c> you</c><00:18:55.440><c> can</c><00:18:55.600><c> write</c><00:18:55.840><c> a</c><00:18:55.919><c> character</c>

00:18:56.230 --> 00:18:56.240 align:start position:0%
want to write you can write a character
 

00:18:56.240 --> 00:18:57.909 align:start position:0%
want to write you can write a character
to<00:18:56.400><c> the</c><00:18:56.480><c> uart</c><00:18:56.799><c> hardware</c>

00:18:57.909 --> 00:18:57.919 align:start position:0%
to the uart hardware
 

00:18:57.919 --> 00:18:59.110 align:start position:0%
to the uart hardware
and<00:18:58.080><c> it</c><00:18:58.160><c> needs</c><00:18:58.320><c> to</c><00:18:58.400><c> wait</c><00:18:58.640><c> for</c><00:18:58.720><c> the</c><00:18:58.799><c> uart</c>

00:18:59.110 --> 00:18:59.120 align:start position:0%
and it needs to wait for the uart
 

00:18:59.120 --> 00:19:00.950 align:start position:0%
and it needs to wait for the uart
hardware<00:18:59.520><c> to</c><00:18:59.600><c> say</c><00:18:59.840><c> yes</c><00:19:00.160><c> i</c><00:19:00.400><c> finish</c>

00:19:00.950 --> 00:19:00.960 align:start position:0%
hardware to say yes i finish
 

00:19:00.960 --> 00:19:02.310 align:start position:0%
hardware to say yes i finish
sending<00:19:01.200><c> that</c><00:19:01.360><c> character</c><00:19:01.679><c> i'm</c><00:19:01.840><c> ready</c><00:19:02.080><c> for</c><00:19:02.240><c> a</c>

00:19:02.310 --> 00:19:02.320 align:start position:0%
sending that character i'm ready for a
 

00:19:02.320 --> 00:19:04.549 align:start position:0%
sending that character i'm ready for a
new<00:19:02.480><c> one</c><00:19:02.720><c> and</c><00:19:02.799><c> then</c><00:19:03.600><c> the</c><00:19:03.760><c> driver</c><00:19:04.080><c> can</c><00:19:04.240><c> write</c><00:19:04.480><c> a</c>

00:19:04.549 --> 00:19:04.559 align:start position:0%
new one and then the driver can write a
 

00:19:04.559 --> 00:19:05.669 align:start position:0%
new one and then the driver can write a
new<00:19:04.720><c> one</c>

00:19:05.669 --> 00:19:05.679 align:start position:0%
new one
 

00:19:05.679 --> 00:19:07.350 align:start position:0%
new one
a<00:19:05.840><c> new</c><00:19:06.000><c> character</c><00:19:06.400><c> the</c><00:19:06.480><c> next</c><00:19:06.720><c> character</c><00:19:07.200><c> to</c>

00:19:07.350 --> 00:19:07.360 align:start position:0%
a new character the next character to
 

00:19:07.360 --> 00:19:09.510 align:start position:0%
a new character the next character to
output<00:19:08.240><c> because</c>

00:19:09.510 --> 00:19:09.520 align:start position:0%
output because
 

00:19:09.520 --> 00:19:11.909 align:start position:0%
output because
this<00:19:09.760><c> hardware</c><00:19:10.160><c> can</c><00:19:10.400><c> operate</c><00:19:10.880><c> very</c><00:19:11.280><c> slowly</c>

00:19:11.909 --> 00:19:11.919 align:start position:0%
this hardware can operate very slowly
 

00:19:11.919 --> 00:19:13.909 align:start position:0%
this hardware can operate very slowly
like<00:19:12.400><c> maybe</c><00:19:12.720><c> only</c><00:19:12.960><c> a</c><00:19:13.039><c> thousand</c><00:19:13.520><c> characters</c>

00:19:13.909 --> 00:19:13.919 align:start position:0%
like maybe only a thousand characters
 

00:19:13.919 --> 00:19:14.789 align:start position:0%
like maybe only a thousand characters
per<00:19:14.160><c> second</c>

00:19:14.789 --> 00:19:14.799 align:start position:0%
per second
 

00:19:14.799 --> 00:19:16.390 align:start position:0%
per second
the<00:19:14.960><c> amount</c><00:19:15.200><c> of</c><00:19:15.280><c> time</c><00:19:15.440><c> we</c><00:19:15.520><c> have</c><00:19:15.679><c> to</c><00:19:15.760><c> wait</c>

00:19:16.390 --> 00:19:16.400 align:start position:0%
the amount of time we have to wait
 

00:19:16.400 --> 00:19:18.710 align:start position:0%
the amount of time we have to wait
between<00:19:16.880><c> characters</c><00:19:17.760><c> can</c><00:19:17.919><c> be</c><00:19:18.080><c> very</c><00:19:18.320><c> long</c><00:19:18.559><c> like</c>

00:19:18.710 --> 00:19:18.720 align:start position:0%
between characters can be very long like
 

00:19:18.720 --> 00:19:20.710 align:start position:0%
between characters can be very long like
a<00:19:18.799><c> millisecond</c><00:19:19.280><c> is</c><00:19:19.440><c> a</c><00:19:19.520><c> long</c><00:19:19.919><c> long</c><00:19:20.240><c> time</c>

00:19:20.710 --> 00:19:20.720 align:start position:0%
a millisecond is a long long time
 

00:19:20.720 --> 00:19:23.110 align:start position:0%
a millisecond is a long long time
on<00:19:20.880><c> modern</c><00:19:21.200><c> computer</c><00:19:21.679><c> it's</c><00:19:22.480><c> you</c><00:19:22.559><c> know</c><00:19:22.960><c> a</c>

00:19:23.110 --> 00:19:23.120 align:start position:0%
on modern computer it's you know a
 

00:19:23.120 --> 00:19:25.909 align:start position:0%
on modern computer it's you know a
billion<00:19:23.760><c> cycles</c><00:19:24.160><c> a</c><00:19:24.320><c> million</c><00:19:24.720><c> cycles</c><00:19:25.200><c> maybe</c>

00:19:25.909 --> 00:19:25.919 align:start position:0%
billion cycles a million cycles maybe
 

00:19:25.919 --> 00:19:27.669 align:start position:0%
billion cycles a million cycles maybe
um<00:19:26.240><c> which</c><00:19:26.640><c> a</c><00:19:26.799><c> huge</c><00:19:27.039><c> amount</c><00:19:27.200><c> of</c><00:19:27.280><c> work</c><00:19:27.440><c> could</c><00:19:27.520><c> be</c>

00:19:27.669 --> 00:19:27.679 align:start position:0%
um which a huge amount of work could be
 

00:19:27.679 --> 00:19:29.669 align:start position:0%
um which a huge amount of work could be
done<00:19:27.919><c> so</c><00:19:28.320><c> we'd</c><00:19:28.559><c> really</c><00:19:28.720><c> prefer</c><00:19:29.200><c> not</c><00:19:29.360><c> to</c>

00:19:29.669 --> 00:19:29.679 align:start position:0%
done so we'd really prefer not to
 

00:19:29.679 --> 00:19:32.230 align:start position:0%
done so we'd really prefer not to
just<00:19:29.919><c> spin</c><00:19:30.880><c> waiting</c><00:19:31.200><c> for</c><00:19:31.360><c> the</c><00:19:31.440><c> uart</c><00:19:31.840><c> to</c><00:19:31.919><c> finish</c>

00:19:32.230 --> 00:19:32.240 align:start position:0%
just spin waiting for the uart to finish
 

00:19:32.240 --> 00:19:34.150 align:start position:0%
just spin waiting for the uart to finish
sending<00:19:32.559><c> each</c><00:19:32.799><c> character</c>

00:19:34.150 --> 00:19:34.160 align:start position:0%
sending each character
 

00:19:34.160 --> 00:19:37.110 align:start position:0%
sending each character
we'd<00:19:34.320><c> like</c><00:19:34.480><c> to</c><00:19:34.559><c> have</c><00:19:34.720><c> a</c><00:19:34.799><c> better</c><00:19:35.039><c> way</c><00:19:35.600><c> and</c><00:19:35.760><c> so</c><00:19:36.960><c> in</c>

00:19:37.110 --> 00:19:37.120 align:start position:0%
we'd like to have a better way and so in
 

00:19:37.120 --> 00:19:39.669 align:start position:0%
we'd like to have a better way and so in
fact<00:19:37.919><c> xv6</c><00:19:38.640><c> has</c><00:19:38.960><c> a</c><00:19:39.039><c> better</c><00:19:39.360><c> way</c>

00:19:39.669 --> 00:19:39.679 align:start position:0%
fact xv6 has a better way
 

00:19:39.679 --> 00:19:42.470 align:start position:0%
fact xv6 has a better way
like<00:19:40.000><c> like</c><00:19:40.240><c> most</c><00:19:40.480><c> operating</c><00:19:40.799><c> systems</c><00:19:42.320><c> the</c>

00:19:42.470 --> 00:19:42.480 align:start position:0%
like like most operating systems the
 

00:19:42.480 --> 00:19:43.990 align:start position:0%
like like most operating systems the
uart<00:19:42.960><c> hardware</c>

00:19:43.990 --> 00:19:44.000 align:start position:0%
uart hardware
 

00:19:44.000 --> 00:19:46.070 align:start position:0%
uart hardware
will<00:19:44.400><c> raise</c><00:19:44.720><c> and</c><00:19:44.960><c> interrupt</c><00:19:45.520><c> after</c><00:19:45.760><c> it's</c>

00:19:46.070 --> 00:19:46.080 align:start position:0%
will raise and interrupt after it's
 

00:19:46.080 --> 00:19:48.470 align:start position:0%
will raise and interrupt after it's
finished<00:19:46.400><c> sending</c><00:19:46.799><c> each</c><00:19:47.120><c> character</c>

00:19:48.470 --> 00:19:48.480 align:start position:0%
finished sending each character
 

00:19:48.480 --> 00:19:50.150 align:start position:0%
finished sending each character
and<00:19:48.559><c> so</c><00:19:48.880><c> we</c><00:19:49.200><c> have</c><00:19:49.360><c> not</c><00:19:49.520><c> just</c><00:19:49.760><c> this</c><00:19:50.000><c> right</c>

00:19:50.150 --> 00:19:50.160 align:start position:0%
and so we have not just this right
 

00:19:50.160 --> 00:19:52.630 align:start position:0%
and so we have not just this right
routine<00:19:51.360><c> wheels</c><00:19:51.679><c> the</c><00:19:51.760><c> uart</c><00:19:52.080><c> driver</c><00:19:52.400><c> has</c><00:19:52.559><c> an</c>

00:19:52.630 --> 00:19:52.640 align:start position:0%
routine wheels the uart driver has an
 

00:19:52.640 --> 00:19:53.830 align:start position:0%
routine wheels the uart driver has an
interrupt<00:19:53.039><c> routine</c>

00:19:53.830 --> 00:19:53.840 align:start position:0%
interrupt routine
 

00:19:53.840 --> 00:19:56.789 align:start position:0%
interrupt routine
which<00:19:54.480><c> i</c><00:19:54.640><c> think</c><00:19:54.799><c> trap.c</c><00:19:55.600><c> calls</c><00:19:55.919><c> when</c><00:19:56.160><c> the</c><00:19:56.240><c> uart</c>

00:19:56.789 --> 00:19:56.799 align:start position:0%
which i think trap.c calls when the uart
 

00:19:56.799 --> 00:19:57.990 align:start position:0%
which i think trap.c calls when the uart
hardware

00:19:57.990 --> 00:19:58.000 align:start position:0%
hardware
 

00:19:58.000 --> 00:19:59.909 align:start position:0%
hardware
raises<00:19:58.400><c> an</c><00:19:58.559><c> interrupt</c><00:19:59.280><c> to</c><00:19:59.440><c> say</c><00:19:59.600><c> that</c><00:19:59.760><c> it's</c>

00:19:59.909 --> 00:19:59.919 align:start position:0%
raises an interrupt to say that it's
 

00:19:59.919 --> 00:20:02.470 align:start position:0%
raises an interrupt to say that it's
finished<00:20:00.400><c> and</c><00:20:00.720><c> the</c><00:20:00.880><c> interrupt</c><00:20:01.280><c> routine</c>

00:20:02.470 --> 00:20:02.480 align:start position:0%
finished and the interrupt routine
 

00:20:02.480 --> 00:20:04.710 align:start position:0%
finished and the interrupt routine
checks<00:20:02.880><c> the</c><00:20:03.039><c> uart</c><00:20:03.679><c> it</c><00:20:03.760><c> reads</c><00:20:04.080><c> one</c><00:20:04.240><c> of</c><00:20:04.320><c> the</c>

00:20:04.710 --> 00:20:04.720 align:start position:0%
checks the uart it reads one of the
 

00:20:04.720 --> 00:20:06.470 align:start position:0%
checks the uart it reads one of the
memory<00:20:05.120><c> map</c><00:20:05.360><c> registers</c><00:20:05.919><c> in</c><00:20:06.000><c> the</c><00:20:06.159><c> uart</c>

00:20:06.470 --> 00:20:06.480 align:start position:0%
memory map registers in the uart
 

00:20:06.480 --> 00:20:07.350 align:start position:0%
memory map registers in the uart
hardware

00:20:07.350 --> 00:20:07.360 align:start position:0%
hardware
 

00:20:07.360 --> 00:20:09.750 align:start position:0%
hardware
to<00:20:07.520><c> look</c><00:20:07.679><c> for</c><00:20:07.840><c> the</c><00:20:08.159><c> flag</c><00:20:08.559><c> that</c><00:20:08.799><c> says</c><00:20:09.200><c> i'm</c><00:20:09.440><c> done</c>

00:20:09.750 --> 00:20:09.760 align:start position:0%
to look for the flag that says i'm done
 

00:20:09.760 --> 00:20:11.270 align:start position:0%
to look for the flag that says i'm done
transmitting<00:20:10.400><c> which</c><00:20:10.640><c> is</c><00:20:10.720><c> this</c>

00:20:11.270 --> 00:20:11.280 align:start position:0%
transmitting which is this
 

00:20:11.280 --> 00:20:14.950 align:start position:0%
transmitting which is this
lsr<00:20:11.760><c> tx</c><00:20:12.159><c> idle</c><00:20:12.480><c> flag</c><00:20:13.520><c> and</c><00:20:13.679><c> if</c><00:20:13.760><c> that</c><00:20:13.919><c> flag's</c><00:20:14.320><c> set</c>

00:20:14.950 --> 00:20:14.960 align:start position:0%
lsr tx idle flag and if that flag's set
 

00:20:14.960 --> 00:20:18.230 align:start position:0%
lsr tx idle flag and if that flag's set
then<00:20:16.000><c> the</c><00:20:16.159><c> interrupt</c><00:20:16.480><c> routine</c><00:20:16.880><c> actually</c><00:20:17.840><c> sets</c>

00:20:18.230 --> 00:20:18.240 align:start position:0%
then the interrupt routine actually sets
 

00:20:18.240 --> 00:20:19.110 align:start position:0%
then the interrupt routine actually sets
this

00:20:19.110 --> 00:20:19.120 align:start position:0%
this
 

00:20:19.120 --> 00:20:22.310 align:start position:0%
this
flag<00:20:19.440><c> in</c><00:20:19.520><c> memory</c><00:20:21.280><c> and</c><00:20:21.360><c> makes</c><00:20:21.600><c> this</c><00:20:21.840><c> wake-up</c>

00:20:22.310 --> 00:20:22.320 align:start position:0%
flag in memory and makes this wake-up
 

00:20:22.320 --> 00:20:23.190 align:start position:0%
flag in memory and makes this wake-up
call

00:20:23.190 --> 00:20:23.200 align:start position:0%
call
 

00:20:23.200 --> 00:20:26.149 align:start position:0%
call
which<00:20:23.840><c> will</c><00:20:24.080><c> cause</c><00:20:24.559><c> the</c><00:20:24.960><c> you</c><00:20:25.200><c> are</c><00:20:25.600><c> right</c>

00:20:26.149 --> 00:20:26.159 align:start position:0%
which will cause the you are right
 

00:20:26.159 --> 00:20:29.029 align:start position:0%
which will cause the you are right
whatever<00:20:26.640><c> threat</c><00:20:26.960><c> is</c><00:20:27.039><c> in</c><00:20:27.120><c> your</c><00:20:27.440><c> right</c><00:20:27.760><c> to</c>

00:20:29.029 --> 00:20:29.039 align:start position:0%
whatever threat is in your right to
 

00:20:29.039 --> 00:20:32.549 align:start position:0%
whatever threat is in your right to
return<00:20:29.440><c> from</c><00:20:29.679><c> its</c><00:20:29.840><c> sleep</c><00:20:30.240><c> here</c><00:20:31.120><c> and</c>

00:20:32.549 --> 00:20:32.559 align:start position:0%
return from its sleep here and
 

00:20:32.559 --> 00:20:35.110 align:start position:0%
return from its sleep here and
attempt<00:20:32.880><c> to</c><00:20:33.039><c> send</c><00:20:33.280><c> a</c><00:20:33.360><c> new</c><00:20:33.520><c> character</c><00:20:34.799><c> so</c><00:20:34.960><c> the</c>

00:20:35.110 --> 00:20:35.120 align:start position:0%
attempt to send a new character so the
 

00:20:35.120 --> 00:20:37.029 align:start position:0%
attempt to send a new character so the
game<00:20:35.440><c> is</c><00:20:35.679><c> that</c>

00:20:37.029 --> 00:20:37.039 align:start position:0%
game is that
 

00:20:37.039 --> 00:20:38.870 align:start position:0%
game is that
if<00:20:37.280><c> a</c><00:20:37.520><c> thread</c><00:20:38.000><c> needs</c><00:20:38.159><c> to</c><00:20:38.240><c> wait</c><00:20:38.480><c> for</c><00:20:38.640><c> something</c>

00:20:38.870 --> 00:20:38.880 align:start position:0%
if a thread needs to wait for something
 

00:20:38.880 --> 00:20:41.110 align:start position:0%
if a thread needs to wait for something
and<00:20:38.960><c> here</c><00:20:39.120><c> we</c><00:20:39.280><c> go</c><00:20:39.360><c> we</c><00:20:39.520><c> need</c><00:20:39.679><c> to</c><00:20:39.760><c> wait</c><00:20:40.080><c> for</c><00:20:40.240><c> the</c>

00:20:41.110 --> 00:20:41.120 align:start position:0%
and here we go we need to wait for the
 

00:20:41.120 --> 00:20:43.270 align:start position:0%
and here we go we need to wait for the
uart<00:20:41.679><c> hardware</c><00:20:42.159><c> to</c><00:20:42.320><c> be</c><00:20:42.480><c> willing</c><00:20:42.799><c> to</c><00:20:42.880><c> accept</c><00:20:43.200><c> a</c>

00:20:43.270 --> 00:20:43.280 align:start position:0%
uart hardware to be willing to accept a
 

00:20:43.280 --> 00:20:45.430 align:start position:0%
uart hardware to be willing to accept a
new<00:20:43.440><c> character</c><00:20:44.000><c> it'll</c><00:20:44.159><c> call</c><00:20:44.400><c> sleep</c>

00:20:45.430 --> 00:20:45.440 align:start position:0%
new character it'll call sleep
 

00:20:45.440 --> 00:20:49.350 align:start position:0%
new character it'll call sleep
waiting<00:20:45.760><c> for</c><00:20:45.919><c> a</c><00:20:46.000><c> specific</c><00:20:47.039><c> condition</c><00:20:47.520><c> usually</c>

00:20:49.350 --> 00:20:49.360 align:start position:0%
waiting for a specific condition usually
 

00:20:49.360 --> 00:20:52.470 align:start position:0%
waiting for a specific condition usually
and<00:20:49.679><c> when</c><00:20:49.840><c> the</c><00:20:49.919><c> condition</c><00:20:50.640><c> is</c><00:20:50.880><c> fulfilled</c>

00:20:52.470 --> 00:20:52.480 align:start position:0%
and when the condition is fulfilled
 

00:20:52.480 --> 00:20:54.149 align:start position:0%
and when the condition is fulfilled
code<00:20:52.799><c> that</c><00:20:52.960><c> realizes</c><00:20:53.440><c> the</c><00:20:53.520><c> condition</c><00:20:54.080><c> is</c>

00:20:54.149 --> 00:20:54.159 align:start position:0%
code that realizes the condition is
 

00:20:54.159 --> 00:20:56.149 align:start position:0%
code that realizes the condition is
fulfilled<00:20:54.640><c> we'll</c><00:20:54.799><c> call</c><00:20:55.039><c> wake</c><00:20:55.280><c> up</c>

00:20:56.149 --> 00:20:56.159 align:start position:0%
fulfilled we'll call wake up
 

00:20:56.159 --> 00:20:59.110 align:start position:0%
fulfilled we'll call wake up
so<00:20:56.320><c> these</c><00:20:56.559><c> sleeps</c><00:20:56.880><c> and</c><00:20:56.960><c> wakeups</c><00:20:57.360><c> are</c><00:20:57.440><c> paired</c>

00:20:59.110 --> 00:20:59.120 align:start position:0%
so these sleeps and wakeups are paired
 

00:20:59.120 --> 00:20:59.830 align:start position:0%
so these sleeps and wakeups are paired
and

00:20:59.830 --> 00:20:59.840 align:start position:0%
and
 

00:20:59.840 --> 00:21:01.110 align:start position:0%
and
sleep<00:21:00.080><c> we'll</c><00:21:00.240><c> look</c><00:21:00.320><c> at</c><00:21:00.400><c> the</c><00:21:00.559><c> implementation</c>

00:21:01.110 --> 00:21:01.120 align:start position:0%
sleep we'll look at the implementation
 

00:21:01.120 --> 00:21:02.789 align:start position:0%
sleep we'll look at the implementation
by<00:21:01.280><c> and</c><00:21:01.360><c> by</c><00:21:01.600><c> but</c><00:21:01.919><c> sleep</c><00:21:02.240><c> does</c><00:21:02.400><c> a</c><00:21:02.480><c> number</c><00:21:02.640><c> of</c>

00:21:02.789 --> 00:21:02.799 align:start position:0%
by and by but sleep does a number of
 

00:21:02.799 --> 00:21:03.190 align:start position:0%
by and by but sleep does a number of
things

00:21:03.190 --> 00:21:03.200 align:start position:0%
things
 

00:21:03.200 --> 00:21:05.990 align:start position:0%
things
and<00:21:03.280><c> then</c><00:21:03.760><c> calls</c><00:21:04.080><c> switch</c><00:21:04.799><c> in</c><00:21:04.960><c> order</c><00:21:05.280><c> to</c><00:21:05.760><c> give</c>

00:21:05.990 --> 00:21:06.000 align:start position:0%
and then calls switch in order to give
 

00:21:06.000 --> 00:21:09.029 align:start position:0%
and then calls switch in order to give
up<00:21:06.080><c> the</c><00:21:06.240><c> cpu</c>

00:21:09.029 --> 00:21:09.039 align:start position:0%
 
 

00:21:09.039 --> 00:21:12.070 align:start position:0%
 
one<00:21:09.760><c> thing</c><00:21:10.000><c> to</c><00:21:10.159><c> notice</c><00:21:10.559><c> is</c><00:21:10.640><c> that</c><00:21:11.520><c> the</c><00:21:11.679><c> wake</c><00:21:11.919><c> up</c>

00:21:12.070 --> 00:21:12.080 align:start position:0%
one thing to notice is that the wake up
 

00:21:12.080 --> 00:21:13.510 align:start position:0%
one thing to notice is that the wake up
and<00:21:12.159><c> the</c><00:21:12.240><c> sleep</c><00:21:12.480><c> have</c><00:21:12.640><c> to</c><00:21:12.720><c> be</c><00:21:12.880><c> linked</c><00:21:13.120><c> together</c>

00:21:13.510 --> 00:21:13.520 align:start position:0%
and the sleep have to be linked together
 

00:21:13.520 --> 00:21:14.149 align:start position:0%
and the sleep have to be linked together
somehow

00:21:14.149 --> 00:21:14.159 align:start position:0%
somehow
 

00:21:14.159 --> 00:21:16.549 align:start position:0%
somehow
that<00:21:14.400><c> is</c><00:21:15.039><c> when</c><00:21:15.120><c> we</c><00:21:15.280><c> call</c><00:21:15.600><c> wake</c><00:21:15.840><c> up</c><00:21:16.159><c> we</c><00:21:16.320><c> really</c>

00:21:16.549 --> 00:21:16.559 align:start position:0%
that is when we call wake up we really
 

00:21:16.559 --> 00:21:17.909 align:start position:0%
that is when we call wake up we really
only<00:21:16.799><c> want</c><00:21:16.960><c> to</c><00:21:17.039><c> wake</c><00:21:17.280><c> up</c>

00:21:17.909 --> 00:21:17.919 align:start position:0%
only want to wake up
 

00:21:17.919 --> 00:21:19.029 align:start position:0%
only want to wake up
threads<00:21:18.240><c> that</c><00:21:18.400><c> are</c><00:21:18.480><c> waiting</c><00:21:18.720><c> for</c><00:21:18.880><c> the</c>

00:21:19.029 --> 00:21:19.039 align:start position:0%
threads that are waiting for the
 

00:21:19.039 --> 00:21:21.270 align:start position:0%
threads that are waiting for the
specific<00:21:19.760><c> event</c><00:21:20.240><c> that</c><00:21:20.400><c> we</c><00:21:20.640><c> realize</c><00:21:21.039><c> has</c>

00:21:21.270 --> 00:21:21.280 align:start position:0%
specific event that we realize has
 

00:21:21.280 --> 00:21:21.909 align:start position:0%
specific event that we realize has
happened

00:21:21.909 --> 00:21:21.919 align:start position:0%
happened
 

00:21:21.919 --> 00:21:23.909 align:start position:0%
happened
and<00:21:22.080><c> so</c><00:21:22.720><c> uh</c><00:21:22.880><c> sleep</c><00:21:23.120><c> and</c><00:21:23.200><c> wake</c><00:21:23.440><c> up</c><00:21:23.520><c> take</c><00:21:23.679><c> this</c>

00:21:23.909 --> 00:21:23.919 align:start position:0%
and so uh sleep and wake up take this
 

00:21:23.919 --> 00:21:25.029 align:start position:0%
and so uh sleep and wake up take this
argument

00:21:25.029 --> 00:21:25.039 align:start position:0%
argument
 

00:21:25.039 --> 00:21:27.990 align:start position:0%
argument
um<00:21:25.840><c> which</c><00:21:26.080><c> is</c><00:21:26.159><c> called</c><00:21:26.400><c> the</c><00:21:26.559><c> sleep</c><00:21:26.960><c> channel</c><00:21:27.760><c> so</c>

00:21:27.990 --> 00:21:28.000 align:start position:0%
um which is called the sleep channel so
 

00:21:28.000 --> 00:21:29.270 align:start position:0%
um which is called the sleep channel so
wake<00:21:28.240><c> up</c><00:21:28.480><c> supplies</c>

00:21:29.270 --> 00:21:29.280 align:start position:0%
wake up supplies
 

00:21:29.280 --> 00:21:32.870 align:start position:0%
wake up supplies
the<00:21:29.440><c> very</c><00:21:29.679><c> same</c><00:21:30.000><c> value</c><00:21:30.720><c> here</c><00:21:31.600><c> that</c>

00:21:32.870 --> 00:21:32.880 align:start position:0%
the very same value here that
 

00:21:32.880 --> 00:21:35.190 align:start position:0%
the very same value here that
we're<00:21:33.120><c> passing</c><00:21:33.440><c> to</c><00:21:33.600><c> sleep</c><00:21:34.480><c> sleep</c><00:21:34.720><c> and</c><00:21:34.799><c> wake</c><00:21:35.039><c> up</c>

00:21:35.190 --> 00:21:35.200 align:start position:0%
we're passing to sleep sleep and wake up
 

00:21:35.200 --> 00:21:36.950 align:start position:0%
we're passing to sleep sleep and wake up
actually<00:21:35.840><c> don't</c><00:21:36.000><c> really</c><00:21:36.320><c> look</c>

00:21:36.950 --> 00:21:36.960 align:start position:0%
actually don't really look
 

00:21:36.960 --> 00:21:39.310 align:start position:0%
actually don't really look
don't<00:21:37.200><c> care</c><00:21:37.440><c> what</c><00:21:37.600><c> the</c><00:21:38.240><c> these</c><00:21:38.640><c> they</c><00:21:38.799><c> just</c><00:21:38.960><c> take</c>

00:21:39.310 --> 00:21:39.320 align:start position:0%
don't care what the these they just take
 

00:21:39.320 --> 00:21:41.430 align:start position:0%
don't care what the these they just take
64-bit<00:21:40.400><c> values</c><00:21:40.799><c> here</c><00:21:40.880><c> they</c><00:21:41.039><c> don't</c><00:21:41.120><c> care</c><00:21:41.360><c> what</c>

00:21:41.430 --> 00:21:41.440 align:start position:0%
64-bit values here they don't care what
 

00:21:41.440 --> 00:21:43.029 align:start position:0%
64-bit values here they don't care what
they<00:21:41.600><c> are</c><00:21:41.760><c> really</c>

00:21:43.029 --> 00:21:43.039 align:start position:0%
they are really
 

00:21:43.039 --> 00:21:47.669 align:start position:0%
they are really
the<00:21:43.200><c> only</c><00:21:43.440><c> thing</c><00:21:43.600><c> that's</c><00:21:43.760><c> going</c><00:21:44.080><c> on</c><00:21:44.320><c> is</c><00:21:44.559><c> that</c>

00:21:47.669 --> 00:21:47.679 align:start position:0%
 
 

00:21:47.679 --> 00:21:52.390 align:start position:0%
 
when<00:21:48.000><c> if</c><00:21:48.080><c> we</c><00:21:48.400><c> sleep</c><00:21:49.840><c> on</c><00:21:50.000><c> a</c><00:21:50.159><c> particular</c>

00:21:52.390 --> 00:21:52.400 align:start position:0%
when if we sleep on a particular
 

00:21:52.400 --> 00:21:53.990 align:start position:0%
when if we sleep on a particular
sleep<00:21:52.720><c> channel</c><00:21:53.120><c> this</c><00:21:53.280><c> particular</c><00:21:53.679><c> weight</c>

00:21:53.990 --> 00:21:54.000 align:start position:0%
sleep channel this particular weight
 

00:21:54.000 --> 00:21:55.830 align:start position:0%
sleep channel this particular weight
channel

00:21:55.830 --> 00:21:55.840 align:start position:0%
channel
 

00:21:55.840 --> 00:21:57.669 align:start position:0%
channel
we<00:21:56.000><c> want</c><00:21:56.159><c> the</c><00:21:56.320><c> wake</c><00:21:56.640><c> up</c><00:21:56.720><c> to</c><00:21:56.880><c> pass</c><00:21:57.200><c> the</c><00:21:57.360><c> very</c>

00:21:57.669 --> 00:21:57.679 align:start position:0%
we want the wake up to pass the very
 

00:21:57.679 --> 00:22:00.710 align:start position:0%
we want the wake up to pass the very
same<00:21:58.080><c> value</c><00:21:58.480><c> here</c><00:21:58.880><c> in</c><00:21:59.039><c> order</c><00:21:59.280><c> to</c><00:21:59.440><c> show</c><00:21:59.679><c> that</c><00:21:59.840><c> it</c>

00:22:00.710 --> 00:22:00.720 align:start position:0%
same value here in order to show that it
 

00:22:00.720 --> 00:22:02.710 align:start position:0%
same value here in order to show that it
indicate<00:22:01.360><c> which</c><00:22:01.600><c> sleepers</c><00:22:02.000><c> it</c><00:22:02.080><c> wants</c><00:22:02.320><c> to</c><00:22:02.480><c> wake</c>

00:22:02.710 --> 00:22:02.720 align:start position:0%
indicate which sleepers it wants to wake
 

00:22:02.720 --> 00:22:05.909 align:start position:0%
indicate which sleepers it wants to wake
up

00:22:05.909 --> 00:22:05.919 align:start position:0%
 
 

00:22:05.919 --> 00:22:10.870 align:start position:0%
 
any<00:22:06.080><c> questions</c><00:22:06.400><c> about</c><00:22:06.559><c> this</c><00:22:06.960><c> interface</c><00:22:08.640><c> okay</c>

00:22:10.870 --> 00:22:10.880 align:start position:0%
any questions about this interface okay
 

00:22:10.880 --> 00:22:12.470 align:start position:0%
any questions about this interface okay
so<00:22:11.039><c> there's</c><00:22:11.280><c> a</c><00:22:11.360><c> question</c><00:22:11.760><c> just</c><00:22:11.919><c> to</c><00:22:12.080><c> clarify</c>

00:22:12.470 --> 00:22:12.480 align:start position:0%
so there's a question just to clarify
 

00:22:12.480 --> 00:22:13.909 align:start position:0%
so there's a question just to clarify
the<00:22:12.559><c> process</c><00:22:12.960><c> has</c><00:22:13.120><c> not</c><00:22:13.280><c> woken</c><00:22:13.679><c> up</c>

00:22:13.909 --> 00:22:13.919 align:start position:0%
the process has not woken up
 

00:22:13.919 --> 00:22:18.549 align:start position:0%
the process has not woken up
every<00:22:14.960><c> for</c><00:22:15.120><c> every</c><00:22:15.360><c> character</c><00:22:15.760><c> that's</c><00:22:16.000><c> written</c>

00:22:18.549 --> 00:22:18.559 align:start position:0%
 
 

00:22:18.559 --> 00:22:21.830 align:start position:0%
 
um<00:22:20.559><c> okay</c><00:22:21.280><c> let's</c><00:22:21.520><c> see</c>

00:22:21.830 --> 00:22:21.840 align:start position:0%
um okay let's see
 

00:22:21.840 --> 00:22:23.990 align:start position:0%
um okay let's see
in<00:22:22.159><c> this</c><00:22:22.559><c> driver</c><00:22:23.039><c> that</c><00:22:23.280><c> i've</c><00:22:23.440><c> specially</c>

00:22:23.990 --> 00:22:24.000 align:start position:0%
in this driver that i've specially
 

00:22:24.000 --> 00:22:26.630 align:start position:0%
in this driver that i've specially
hacked<00:22:24.720><c> for</c><00:22:24.960><c> demonstration</c><00:22:25.600><c> purposes</c>

00:22:26.630 --> 00:22:26.640 align:start position:0%
hacked for demonstration purposes
 

00:22:26.640 --> 00:22:30.070 align:start position:0%
hacked for demonstration purposes
um<00:22:27.600><c> there's</c><00:22:27.840><c> an</c><00:22:28.000><c> interrupt</c><00:22:28.720><c> per</c><00:22:29.039><c> character</c>

00:22:30.070 --> 00:22:30.080 align:start position:0%
um there's an interrupt per character
 

00:22:30.080 --> 00:22:32.789 align:start position:0%
um there's an interrupt per character
so<00:22:30.240><c> the</c><00:22:30.640><c> the</c><00:22:31.039><c> uh</c><00:22:31.360><c> the</c><00:22:31.520><c> way</c><00:22:32.159><c> you</c><00:22:32.400><c> are</c><00:22:32.559><c> right</c>

00:22:32.789 --> 00:22:32.799 align:start position:0%
so the the uh the way you are right
 

00:22:32.799 --> 00:22:33.669 align:start position:0%
so the the uh the way you are right
works<00:22:33.200><c> is</c><00:22:33.360><c> that</c>

00:22:33.669 --> 00:22:33.679 align:start position:0%
works is that
 

00:22:33.679 --> 00:22:35.830 align:start position:0%
works is that
for<00:22:33.919><c> each</c><00:22:34.240><c> character</c><00:22:34.799><c> that</c><00:22:34.960><c> is</c><00:22:35.200><c> in</c><00:22:35.280><c> this</c><00:22:35.440><c> while</c>

00:22:35.830 --> 00:22:35.840 align:start position:0%
for each character that is in this while
 

00:22:35.840 --> 00:22:36.950 align:start position:0%
for each character that is in this while
for<00:22:35.919><c> each</c><00:22:36.080><c> character</c><00:22:36.400><c> in</c><00:22:36.480><c> the</c><00:22:36.559><c> buffer</c><00:22:36.880><c> of</c>

00:22:36.950 --> 00:22:36.960 align:start position:0%
for each character in the buffer of
 

00:22:36.960 --> 00:22:38.630 align:start position:0%
for each character in the buffer of
characters<00:22:37.280><c> we're</c><00:22:37.440><c> supposed</c><00:22:37.679><c> to</c><00:22:37.840><c> write</c>

00:22:38.630 --> 00:22:38.640 align:start position:0%
characters we're supposed to write
 

00:22:38.640 --> 00:22:42.070 align:start position:0%
characters we're supposed to write
we<00:22:39.679><c> wait</c><00:22:40.400><c> here</c><00:22:41.120><c> in</c><00:22:41.200><c> this</c><00:22:41.440><c> loop</c>

00:22:42.070 --> 00:22:42.080 align:start position:0%
we wait here in this loop
 

00:22:42.080 --> 00:22:43.830 align:start position:0%
we wait here in this loop
until<00:22:42.400><c> the</c><00:22:42.480><c> uart</c><00:22:42.799><c> is</c><00:22:42.880><c> ready</c><00:22:43.120><c> to</c><00:22:43.280><c> accept</c><00:22:43.679><c> one</c>

00:22:43.830 --> 00:22:43.840 align:start position:0%
until the uart is ready to accept one
 

00:22:43.840 --> 00:22:45.909 align:start position:0%
until the uart is ready to accept one
more<00:22:44.080><c> character</c><00:22:44.960><c> we</c><00:22:45.200><c> write</c><00:22:45.440><c> one</c><00:22:45.679><c> more</c>

00:22:45.909 --> 00:22:45.919 align:start position:0%
more character we write one more
 

00:22:45.919 --> 00:22:47.350 align:start position:0%
more character we write one more
character

00:22:47.350 --> 00:22:47.360 align:start position:0%
character
 

00:22:47.360 --> 00:22:50.950 align:start position:0%
character
we<00:22:47.520><c> set</c><00:22:47.679><c> this</c><00:22:47.840><c> done</c><00:22:48.159><c> flag</c><00:22:48.559><c> to</c><00:22:48.720><c> zero</c>

00:22:50.950 --> 00:22:50.960 align:start position:0%
we set this done flag to zero
 

00:22:50.960 --> 00:22:53.830 align:start position:0%
we set this done flag to zero
and<00:22:51.440><c> go</c><00:22:51.600><c> back</c><00:22:52.000><c> and</c><00:22:52.320><c> wait</c><00:22:52.960><c> typically</c><00:22:53.360><c> in</c><00:22:53.520><c> sleep</c>

00:22:53.830 --> 00:22:53.840 align:start position:0%
and go back and wait typically in sleep
 

00:22:53.840 --> 00:22:55.909 align:start position:0%
and go back and wait typically in sleep
until<00:22:54.159><c> the</c><00:22:54.240><c> done</c><00:22:54.480><c> flag</c><00:22:54.799><c> is</c><00:22:54.880><c> one</c>

00:22:55.909 --> 00:22:55.919 align:start position:0%
until the done flag is one
 

00:22:55.919 --> 00:22:58.710 align:start position:0%
until the done flag is one
um<00:22:56.400><c> and</c><00:22:56.559><c> then</c><00:22:56.720><c> after</c><00:22:57.039><c> the</c><00:22:58.000><c> you</c><00:22:58.240><c> are</c><00:22:58.400><c> finished</c>

00:22:58.710 --> 00:22:58.720 align:start position:0%
um and then after the you are finished
 

00:22:58.720 --> 00:23:00.070 align:start position:0%
um and then after the you are finished
ascending<00:22:59.200><c> this</c><00:22:59.440><c> character</c>

00:23:00.070 --> 00:23:00.080 align:start position:0%
ascending this character
 

00:23:00.080 --> 00:23:01.750 align:start position:0%
ascending this character
it'll<00:23:00.400><c> interrupt</c><00:23:01.120><c> and</c><00:23:01.200><c> the</c><00:23:01.360><c> interrupt</c>

00:23:01.750 --> 00:23:01.760 align:start position:0%
it'll interrupt and the interrupt
 

00:23:01.760 --> 00:23:03.350 align:start position:0%
it'll interrupt and the interrupt
routine<00:23:02.080><c> will</c><00:23:02.159><c> set</c><00:23:02.480><c> done</c><00:23:02.640><c> to</c><00:23:02.799><c> one</c><00:23:03.039><c> and</c><00:23:03.120><c> do</c><00:23:03.280><c> the</c>

00:23:03.350 --> 00:23:03.360 align:start position:0%
routine will set done to one and do the
 

00:23:03.360 --> 00:23:05.590 align:start position:0%
routine will set done to one and do the
wake<00:23:03.600><c> up</c><00:23:03.760><c> so</c><00:23:03.919><c> in</c><00:23:04.000><c> fact</c><00:23:04.159><c> there</c><00:23:04.400><c> is</c><00:23:04.480><c> a</c>

00:23:05.590 --> 00:23:05.600 align:start position:0%
wake up so in fact there is a
 

00:23:05.600 --> 00:23:07.350 align:start position:0%
wake up so in fact there is a
wake<00:23:05.919><c> up</c><00:23:06.080><c> a</c><00:23:06.240><c> sleep</c><00:23:06.480><c> and</c><00:23:06.640><c> a</c><00:23:06.720><c> wake</c><00:23:06.960><c> up</c><00:23:07.120><c> and</c><00:23:07.200><c> an</c>

00:23:07.350 --> 00:23:07.360 align:start position:0%
wake up a sleep and a wake up and an
 

00:23:07.360 --> 00:23:08.950 align:start position:0%
wake up a sleep and a wake up and an
iteration<00:23:07.760><c> of</c><00:23:07.840><c> the</c><00:23:08.000><c> loop</c><00:23:08.320><c> for</c><00:23:08.480><c> every</c><00:23:08.640><c> single</c>

00:23:08.950 --> 00:23:08.960 align:start position:0%
iteration of the loop for every single
 

00:23:08.960 --> 00:23:11.029 align:start position:0%
iteration of the loop for every single
character

00:23:11.029 --> 00:23:11.039 align:start position:0%
character
 

00:23:11.039 --> 00:23:13.990 align:start position:0%
character
and<00:23:11.200><c> more</c><00:23:11.760><c> the</c><00:23:11.919><c> uart</c><00:23:12.320><c> is</c><00:23:12.480><c> actually</c><00:23:12.799><c> capable</c><00:23:13.360><c> of</c>

00:23:13.990 --> 00:23:14.000 align:start position:0%
and more the uart is actually capable of
 

00:23:14.000 --> 00:23:15.350 align:start position:0%
and more the uart is actually capable of
sending

00:23:15.350 --> 00:23:15.360 align:start position:0%
sending
 

00:23:15.360 --> 00:23:19.350 align:start position:0%
sending
um<00:23:16.320><c> some</c><00:23:16.480><c> number</c><00:23:16.880><c> like</c><00:23:17.919><c> 4</c><00:23:18.240><c> or</c><00:23:18.400><c> 16</c><00:23:18.960><c> or</c><00:23:19.039><c> something</c>

00:23:19.350 --> 00:23:19.360 align:start position:0%
um some number like 4 or 16 or something
 

00:23:19.360 --> 00:23:21.029 align:start position:0%
um some number like 4 or 16 or something
characters<00:23:19.760><c> at</c><00:23:19.919><c> a</c><00:23:20.000><c> time</c><00:23:20.159><c> so</c><00:23:20.320><c> a</c><00:23:20.400><c> more</c><00:23:20.640><c> efficient</c>

00:23:21.029 --> 00:23:21.039 align:start position:0%
characters at a time so a more efficient
 

00:23:21.039 --> 00:23:22.149 align:start position:0%
characters at a time so a more efficient
driver<00:23:21.360><c> would</c>

00:23:22.149 --> 00:23:22.159 align:start position:0%
driver would
 

00:23:22.159 --> 00:23:26.630 align:start position:0%
driver would
would<00:23:22.880><c> uh</c><00:23:23.440><c> hand</c><00:23:23.840><c> 16</c><00:23:24.400><c> characters</c><00:23:24.880><c> to</c><00:23:25.039><c> the</c><00:23:25.120><c> uart</c>

00:23:26.630 --> 00:23:26.640 align:start position:0%
would uh hand 16 characters to the uart
 

00:23:26.640 --> 00:23:28.630 align:start position:0%
would uh hand 16 characters to the uart
per<00:23:26.880><c> iteration</c><00:23:27.440><c> of</c><00:23:27.520><c> this</c><00:23:27.760><c> loop</c><00:23:28.320><c> and</c><00:23:28.400><c> there'd</c>

00:23:28.630 --> 00:23:28.640 align:start position:0%
per iteration of this loop and there'd
 

00:23:28.640 --> 00:23:30.630 align:start position:0%
per iteration of this loop and there'd
be<00:23:28.720><c> an</c><00:23:28.880><c> interrupt</c><00:23:29.280><c> every</c><00:23:29.520><c> 16</c><00:23:29.919><c> characters</c>

00:23:30.630 --> 00:23:30.640 align:start position:0%
be an interrupt every 16 characters
 

00:23:30.640 --> 00:23:32.630 align:start position:0%
be an interrupt every 16 characters
and<00:23:30.880><c> higher</c><00:23:31.200><c> speed</c><00:23:31.520><c> devices</c><00:23:32.320><c> you</c><00:23:32.480><c> know</c>

00:23:32.630 --> 00:23:32.640 align:start position:0%
and higher speed devices you know
 

00:23:32.640 --> 00:23:34.950 align:start position:0%
and higher speed devices you know
typically<00:23:33.039><c> like</c><00:23:33.440><c> ethernet</c><00:23:33.919><c> drivers</c>

00:23:34.950 --> 00:23:34.960 align:start position:0%
typically like ethernet drivers
 

00:23:34.960 --> 00:23:36.549 align:start position:0%
typically like ethernet drivers
typically<00:23:35.360><c> accept</c><00:23:35.679><c> many</c><00:23:35.919><c> more</c><00:23:36.159><c> bytes</c><00:23:36.480><c> than</c>

00:23:36.549 --> 00:23:36.559 align:start position:0%
typically accept many more bytes than
 

00:23:36.559 --> 00:23:39.909 align:start position:0%
typically accept many more bytes than
that<00:23:37.039><c> per</c><00:23:37.360><c> interrupt</c>

00:23:39.909 --> 00:23:39.919 align:start position:0%
that per interrupt
 

00:23:39.919 --> 00:23:43.510 align:start position:0%
that per interrupt
all<00:23:40.080><c> right</c><00:23:42.320><c> okay</c><00:23:42.559><c> so</c><00:23:42.720><c> this</c><00:23:42.880><c> is</c><00:23:42.960><c> just</c><00:23:43.200><c> a</c>

00:23:43.510 --> 00:23:43.520 align:start position:0%
all right okay so this is just a
 

00:23:43.520 --> 00:23:47.029 align:start position:0%
all right okay so this is just a
illustration<00:23:44.240><c> of</c><00:23:46.080><c> what</c><00:23:46.320><c> the</c><00:23:46.400><c> interface</c><00:23:46.799><c> looks</c>

00:23:47.029 --> 00:23:47.039 align:start position:0%
illustration of what the interface looks
 

00:23:47.039 --> 00:23:48.830 align:start position:0%
illustration of what the interface looks
like

00:23:48.830 --> 00:23:48.840 align:start position:0%
like
 

00:23:48.840 --> 00:23:51.750 align:start position:0%
like
um<00:23:49.520><c> uh</c><00:23:50.159><c> sleep</c><00:23:50.400><c> and</c><00:23:50.480><c> wake</c><00:23:50.640><c> up</c><00:23:50.799><c> are</c><00:23:50.880><c> nice</c><00:23:51.120><c> because</c>

00:23:51.750 --> 00:23:51.760 align:start position:0%
um uh sleep and wake up are nice because
 

00:23:51.760 --> 00:23:53.110 align:start position:0%
um uh sleep and wake up are nice because
or<00:23:51.919><c> one</c><00:23:52.159><c> reason</c><00:23:52.400><c> they're</c><00:23:52.559><c> nice</c><00:23:52.799><c> is</c><00:23:52.960><c> they're</c>

00:23:53.110 --> 00:23:53.120 align:start position:0%
or one reason they're nice is they're
 

00:23:53.120 --> 00:23:55.430 align:start position:0%
or one reason they're nice is they're
relatively<00:23:53.679><c> flexible</c><00:23:54.559><c> um</c><00:23:54.799><c> sleep</c><00:23:55.120><c> and</c><00:23:55.200><c> wake</c><00:23:55.360><c> up</c>

00:23:55.430 --> 00:23:55.440 align:start position:0%
relatively flexible um sleep and wake up
 

00:23:55.440 --> 00:23:56.870 align:start position:0%
relatively flexible um sleep and wake up
don't<00:23:55.600><c> really</c><00:23:55.840><c> care</c><00:23:56.080><c> what</c><00:23:56.240><c> it</c><00:23:56.400><c> is</c><00:23:56.480><c> you're</c><00:23:56.720><c> up</c>

00:23:56.870 --> 00:23:56.880 align:start position:0%
don't really care what it is you're up
 

00:23:56.880 --> 00:23:57.669 align:start position:0%
don't really care what it is you're up
to

00:23:57.669 --> 00:23:57.679 align:start position:0%
to
 

00:23:57.679 --> 00:24:00.870 align:start position:0%
to
um<00:23:58.720><c> you</c><00:23:58.799><c> know</c><00:23:58.960><c> you</c><00:23:59.120><c> can</c>

00:24:00.870 --> 00:24:00.880 align:start position:0%
um you know you can
 

00:24:00.880 --> 00:24:02.230 align:start position:0%
um you know you can
you<00:24:01.039><c> don't</c><00:24:01.120><c> have</c><00:24:01.200><c> to</c><00:24:01.360><c> tell</c><00:24:01.679><c> sleep</c><00:24:01.919><c> what</c><00:24:02.159><c> you're</c>

00:24:02.230 --> 00:24:02.240 align:start position:0%
you don't have to tell sleep what you're
 

00:24:02.240 --> 00:24:03.750 align:start position:0%
you don't have to tell sleep what you're
waiting<00:24:02.559><c> for</c><00:24:02.799><c> you</c><00:24:02.960><c> don't</c><00:24:03.120><c> have</c><00:24:03.200><c> to</c><00:24:03.279><c> tell</c><00:24:03.520><c> wake</c>

00:24:03.750 --> 00:24:03.760 align:start position:0%
waiting for you don't have to tell wake
 

00:24:03.760 --> 00:24:04.870 align:start position:0%
waiting for you don't have to tell wake
up<00:24:03.840><c> what</c><00:24:04.080><c> event</c><00:24:04.400><c> happened</c>

00:24:04.870 --> 00:24:04.880 align:start position:0%
up what event happened
 

00:24:04.880 --> 00:24:06.789 align:start position:0%
up what event happened
you<00:24:05.039><c> just</c><00:24:05.200><c> need</c><00:24:05.360><c> to</c><00:24:05.520><c> have</c><00:24:05.600><c> these</c><00:24:05.919><c> matching</c>

00:24:06.789 --> 00:24:06.799 align:start position:0%
you just need to have these matching
 

00:24:06.799 --> 00:24:07.909 align:start position:0%
you just need to have these matching
sleep<00:24:07.200><c> channel</c>

00:24:07.909 --> 00:24:07.919 align:start position:0%
sleep channel
 

00:24:07.919 --> 00:24:12.149 align:start position:0%
sleep channel
64-bit<00:24:08.640><c> values</c><00:24:10.880><c> however</c>

00:24:12.149 --> 00:24:12.159 align:start position:0%
64-bit values however
 

00:24:12.159 --> 00:24:15.430 align:start position:0%
64-bit values however
there's<00:24:12.400><c> one</c><00:24:12.880><c> uh</c><00:24:13.600><c> interesting</c><00:24:14.640><c> property</c><00:24:15.200><c> of</c>

00:24:15.430 --> 00:24:15.440 align:start position:0%
there's one uh interesting property of
 

00:24:15.440 --> 00:24:16.710 align:start position:0%
there's one uh interesting property of
the<00:24:15.520><c> sleep</c><00:24:15.919><c> interface</c>

00:24:16.710 --> 00:24:16.720 align:start position:0%
the sleep interface
 

00:24:16.720 --> 00:24:18.950 align:start position:0%
the sleep interface
we<00:24:16.880><c> have</c><00:24:16.960><c> to</c><00:24:17.200><c> pass</c><00:24:17.520><c> it</c><00:24:17.679><c> a</c><00:24:17.840><c> lock</c><00:24:18.240><c> here</c><00:24:18.720><c> there's</c>

00:24:18.950 --> 00:24:18.960 align:start position:0%
we have to pass it a lock here there's
 

00:24:18.960 --> 00:24:21.029 align:start position:0%
we have to pass it a lock here there's
the<00:24:19.120><c> second</c><00:24:19.440><c> argument</c>

00:24:21.029 --> 00:24:21.039 align:start position:0%
the second argument
 

00:24:21.039 --> 00:24:24.549 align:start position:0%
the second argument
this<00:24:21.279><c> lock</c><00:24:21.600><c> argument</c><00:24:22.640><c> and</c>

00:24:24.549 --> 00:24:24.559 align:start position:0%
this lock argument and
 

00:24:24.559 --> 00:24:27.590 align:start position:0%
this lock argument and
there's<00:24:24.799><c> a</c><00:24:24.880><c> big</c><00:24:25.120><c> story</c><00:24:25.840><c> behind</c><00:24:26.559><c> why</c><00:24:26.960><c> sleep</c>

00:24:27.590 --> 00:24:27.600 align:start position:0%
there's a big story behind why sleep
 

00:24:27.600 --> 00:24:31.269 align:start position:0%
there's a big story behind why sleep
takes<00:24:27.840><c> this</c><00:24:28.080><c> second</c><00:24:28.400><c> argument</c><00:24:30.480><c> and</c>

00:24:31.269 --> 00:24:31.279 align:start position:0%
takes this second argument and
 

00:24:31.279 --> 00:24:34.070 align:start position:0%
takes this second argument and
i'm<00:24:31.679><c> gonna</c><00:24:32.080><c> explain</c><00:24:32.480><c> what's</c><00:24:32.720><c> going</c><00:24:32.960><c> on</c><00:24:33.520><c> but</c>

00:24:34.070 --> 00:24:34.080 align:start position:0%
i'm gonna explain what's going on but
 

00:24:34.080 --> 00:24:35.590 align:start position:0%
i'm gonna explain what's going on but
the<00:24:34.320><c> high</c><00:24:34.559><c> level</c>

00:24:35.590 --> 00:24:35.600 align:start position:0%
the high level
 

00:24:35.600 --> 00:24:38.870 align:start position:0%
the high level
uh<00:24:36.080><c> picture</c><00:24:36.400><c> is</c><00:24:36.559><c> that</c><00:24:37.919><c> um</c>

00:24:38.870 --> 00:24:38.880 align:start position:0%
uh picture is that um
 

00:24:38.880 --> 00:24:41.269 align:start position:0%
uh picture is that um
it's<00:24:39.279><c> not</c><00:24:39.520><c> doesn't</c><00:24:39.760><c> seem</c><00:24:40.000><c> to</c><00:24:40.159><c> be</c><00:24:40.320><c> possible</c><00:24:40.880><c> to</c>

00:24:41.269 --> 00:24:41.279 align:start position:0%
it's not doesn't seem to be possible to
 

00:24:41.279 --> 00:24:43.110 align:start position:0%
it's not doesn't seem to be possible to
to<00:24:41.840><c> design</c><00:24:42.320><c> a</c><00:24:42.480><c> sleep</c>

00:24:43.110 --> 00:24:43.120 align:start position:0%
to design a sleep
 

00:24:43.120 --> 00:24:46.230 align:start position:0%
to design a sleep
that<00:24:43.840><c> is</c><00:24:44.000><c> completely</c><00:24:44.720><c> ignorant</c><00:24:45.520><c> of</c>

00:24:46.230 --> 00:24:46.240 align:start position:0%
that is completely ignorant of
 

00:24:46.240 --> 00:24:50.070 align:start position:0%
that is completely ignorant of
what<00:24:46.400><c> it</c><00:24:46.559><c> is</c><00:24:46.640><c> you're</c><00:24:46.880><c> trying</c><00:24:47.120><c> to</c><00:24:47.200><c> wait</c><00:24:47.520><c> for</c>

00:24:50.070 --> 00:24:50.080 align:start position:0%
 
 

00:24:50.080 --> 00:24:51.830 align:start position:0%
 
you<00:24:50.400><c> it's</c><00:24:50.720><c> it's</c><00:24:50.880><c> hard</c><00:24:51.120><c> to</c><00:24:51.279><c> write</c><00:24:51.520><c> a</c><00:24:51.600><c> sort</c><00:24:51.760><c> of</c>

00:24:51.830 --> 00:24:51.840 align:start position:0%
you it's it's hard to write a sort of
 

00:24:51.840 --> 00:24:53.430 align:start position:0%
you it's it's hard to write a sort of
general<00:24:52.159><c> purpose</c><00:24:52.480><c> sleep</c><00:24:52.799><c> that</c>

00:24:53.430 --> 00:24:53.440 align:start position:0%
general purpose sleep that
 

00:24:53.440 --> 00:24:55.510 align:start position:0%
general purpose sleep that
simply<00:24:53.840><c> sleeps</c><00:24:54.400><c> waiting</c><00:24:54.720><c> for</c><00:24:54.880><c> some</c><00:24:55.120><c> specific</c>

00:24:55.510 --> 00:24:55.520 align:start position:0%
simply sleeps waiting for some specific
 

00:24:55.520 --> 00:24:56.870 align:start position:0%
simply sleeps waiting for some specific
event

00:24:56.870 --> 00:24:56.880 align:start position:0%
event
 

00:24:56.880 --> 00:24:58.470 align:start position:0%
event
and<00:24:57.039><c> this</c><00:24:57.279><c> is</c><00:24:57.440><c> danger</c><00:24:57.840><c> which</c><00:24:58.000><c> we'll</c><00:24:58.080><c> see</c><00:24:58.240><c> in</c><00:24:58.320><c> a</c>

00:24:58.470 --> 00:24:58.480 align:start position:0%
and this is danger which we'll see in a
 

00:24:58.480 --> 00:25:00.070 align:start position:0%
and this is danger which we'll see in a
moment<00:24:58.720><c> called</c><00:24:58.880><c> lost</c><00:24:58.880><c> loss</c><00:24:59.200><c> wakeups</c>

00:25:00.070 --> 00:25:00.080 align:start position:0%
moment called lost loss wakeups
 

00:25:00.080 --> 00:25:01.909 align:start position:0%
moment called lost loss wakeups
that<00:25:00.559><c> just</c><00:25:00.799><c> about</c><00:25:01.039><c> every</c><00:25:01.279><c> coordination</c>

00:25:01.909 --> 00:25:01.919 align:start position:0%
that just about every coordination
 

00:25:01.919 --> 00:25:03.830 align:start position:0%
that just about every coordination
mechanism<00:25:02.480><c> has</c><00:25:02.640><c> to</c><00:25:02.880><c> grapple</c><00:25:03.200><c> with</c><00:25:03.360><c> somehow</c>

00:25:03.830 --> 00:25:03.840 align:start position:0%
mechanism has to grapple with somehow
 

00:25:03.840 --> 00:25:06.470 align:start position:0%
mechanism has to grapple with somehow
and<00:25:03.919><c> deal</c><00:25:04.080><c> with</c><00:25:04.240><c> somehow</c>

00:25:06.470 --> 00:25:06.480 align:start position:0%
and deal with somehow
 

00:25:06.480 --> 00:25:09.350 align:start position:0%
and deal with somehow
and<00:25:06.720><c> in</c><00:25:07.120><c> the</c><00:25:07.279><c> sleep</c><00:25:07.600><c> interface</c><00:25:08.880><c> this</c><00:25:09.120><c> fact</c>

00:25:09.350 --> 00:25:09.360 align:start position:0%
and in the sleep interface this fact
 

00:25:09.360 --> 00:25:10.470 align:start position:0%
and in the sleep interface this fact
that<00:25:09.440><c> we</c><00:25:09.520><c> have</c><00:25:09.600><c> to</c><00:25:09.679><c> pass</c><00:25:10.000><c> a</c><00:25:10.080><c> lock</c>

00:25:10.470 --> 00:25:10.480 align:start position:0%
that we have to pass a lock
 

00:25:10.480 --> 00:25:13.110 align:start position:0%
that we have to pass a lock
is<00:25:10.640><c> sort</c><00:25:10.880><c> of</c><00:25:11.039><c> a</c><00:25:11.120><c> little</c><00:25:11.360><c> bit</c><00:25:11.600><c> of</c><00:25:12.640><c> ugly</c>

00:25:13.110 --> 00:25:13.120 align:start position:0%
is sort of a little bit of ugly
 

00:25:13.120 --> 00:25:14.149 align:start position:0%
is sort of a little bit of ugly
implementation

00:25:14.149 --> 00:25:14.159 align:start position:0%
implementation
 

00:25:14.159 --> 00:25:16.470 align:start position:0%
implementation
leaking<00:25:14.559><c> through</c><00:25:14.799><c> into</c><00:25:15.039><c> the</c><00:25:15.120><c> interface</c><00:25:16.320><c> in</c><00:25:16.400><c> a</c>

00:25:16.470 --> 00:25:16.480 align:start position:0%
leaking through into the interface in a
 

00:25:16.480 --> 00:25:21.990 align:start position:0%
leaking through into the interface in a
way<00:25:16.720><c> i'll</c><00:25:16.880><c> explain</c><00:25:17.279><c> in</c><00:25:17.360><c> just</c><00:25:17.600><c> a</c><00:25:17.679><c> moment</c>

00:25:21.990 --> 00:25:22.000 align:start position:0%
 
 

00:25:22.000 --> 00:25:23.350 align:start position:0%
 
yeah<00:25:22.240><c> i'll</c><00:25:22.400><c> explain</c><00:25:22.720><c> oh</c><00:25:22.880><c> there's</c><00:25:23.039><c> a</c><00:25:23.120><c> question</c>

00:25:23.350 --> 00:25:23.360 align:start position:0%
yeah i'll explain oh there's a question
 

00:25:23.360 --> 00:25:25.029 align:start position:0%
yeah i'll explain oh there's a question
why<00:25:23.520><c> do</c><00:25:23.600><c> we</c><00:25:23.679><c> need</c><00:25:23.840><c> the</c><00:25:24.000><c> done</c><00:25:24.320><c> flag</c>

00:25:25.029 --> 00:25:25.039 align:start position:0%
why do we need the done flag
 

00:25:25.039 --> 00:25:27.430 align:start position:0%
why do we need the done flag
and<00:25:25.279><c> the</c><00:25:25.440><c> sleep</c><00:25:25.760><c> channel</c><00:25:26.240><c> i</c><00:25:26.400><c> will</c><00:25:26.960><c> hold</c><00:25:27.200><c> on</c><00:25:27.279><c> to</c>

00:25:27.430 --> 00:25:27.440 align:start position:0%
and the sleep channel i will hold on to
 

00:25:27.440 --> 00:25:28.789 align:start position:0%
and the sleep channel i will hold on to
that<00:25:27.600><c> question</c>

00:25:28.789 --> 00:25:28.799 align:start position:0%
that question
 

00:25:28.799 --> 00:25:33.110 align:start position:0%
that question
i'll<00:25:29.039><c> explain</c><00:25:29.360><c> that</c><00:25:29.600><c> in</c><00:25:29.760><c> 5</c><00:25:29.919><c> or</c><00:25:30.000><c> 10</c><00:25:30.159><c> minutes</c>

00:25:33.110 --> 00:25:33.120 align:start position:0%
 
 

00:25:33.120 --> 00:25:36.390 align:start position:0%
 
okay<00:25:33.440><c> so</c><00:25:34.400><c> before</c><00:25:34.880><c> explaining</c><00:25:35.760><c> why</c><00:25:36.000><c> it</c><00:25:36.159><c> is</c><00:25:36.240><c> what</c>

00:25:36.390 --> 00:25:36.400 align:start position:0%
okay so before explaining why it is what
 

00:25:36.400 --> 00:25:38.549 align:start position:0%
okay so before explaining why it is what
it<00:25:36.559><c> is</c><00:25:36.640><c> that</c><00:25:36.720><c> sleep</c><00:25:37.039><c> is</c><00:25:37.120><c> doing</c><00:25:37.360><c> with</c><00:25:37.520><c> this</c><00:25:37.679><c> lock</c>

00:25:38.549 --> 00:25:38.559 align:start position:0%
it is that sleep is doing with this lock
 

00:25:38.559 --> 00:25:41.990 align:start position:0%
it is that sleep is doing with this lock
i<00:25:38.799><c> actually</c><00:25:39.039><c> want</c><00:25:39.200><c> to</c><00:25:40.960><c> talk</c><00:25:41.200><c> a</c><00:25:41.279><c> bit</c><00:25:41.520><c> about</c><00:25:41.760><c> what</c>

00:25:41.990 --> 00:25:42.000 align:start position:0%
i actually want to talk a bit about what
 

00:25:42.000 --> 00:25:43.190 align:start position:0%
i actually want to talk a bit about what
the<00:25:42.159><c> implications</c><00:25:42.720><c> would</c><00:25:42.880><c> be</c>

00:25:43.190 --> 00:25:43.200 align:start position:0%
the implications would be
 

00:25:43.200 --> 00:25:46.630 align:start position:0%
the implications would be
if<00:25:44.240><c> we</c><00:25:44.400><c> had</c><00:25:44.559><c> a</c><00:25:44.640><c> simpler</c><00:25:45.200><c> sleep</c>

00:25:46.630 --> 00:25:46.640 align:start position:0%
if we had a simpler sleep
 

00:25:46.640 --> 00:25:49.029 align:start position:0%
if we had a simpler sleep
that<00:25:47.120><c> didn't</c><00:25:47.440><c> have</c><00:25:47.760><c> didn't</c><00:25:48.000><c> take</c><00:25:48.240><c> that</c><00:25:48.640><c> extra</c>

00:25:49.029 --> 00:25:49.039 align:start position:0%
that didn't have didn't take that extra
 

00:25:49.039 --> 00:25:54.830 align:start position:0%
that didn't have didn't take that extra
lock<00:25:49.360><c> argument</c>

00:25:54.830 --> 00:25:54.840 align:start position:0%
 
 

00:25:54.840 --> 00:25:59.190 align:start position:0%
 
so

00:25:59.190 --> 00:25:59.200 align:start position:0%
 
 

00:25:59.200 --> 00:26:05.269 align:start position:0%
 
all<00:25:59.279><c> right</c><00:25:59.600><c> so</c>

00:26:05.269 --> 00:26:05.279 align:start position:0%
 
 

00:26:05.279 --> 00:26:11.990 align:start position:0%
 
and<00:26:05.520><c> the</c><00:26:05.600><c> topic</c><00:26:05.919><c> here</c><00:26:06.320><c> is</c><00:26:07.120><c> lost</c><00:26:07.520><c> wake</c><00:26:08.840><c> ups</c>

00:26:11.990 --> 00:26:12.000 align:start position:0%
 
 

00:26:12.000 --> 00:26:15.430 align:start position:0%
 
that's<00:26:12.320><c> the</c><00:26:14.320><c> problem</c><00:26:14.640><c> i'm</c><00:26:14.720><c> going</c><00:26:14.880><c> to</c><00:26:14.960><c> describe</c>

00:26:15.430 --> 00:26:15.440 align:start position:0%
that's the problem i'm going to describe
 

00:26:15.440 --> 00:26:16.390 align:start position:0%
that's the problem i'm going to describe
now

00:26:16.390 --> 00:26:16.400 align:start position:0%
now
 

00:26:16.400 --> 00:26:19.510 align:start position:0%
now
um<00:26:17.360><c> so</c><00:26:18.159><c> uh</c>

00:26:19.510 --> 00:26:19.520 align:start position:0%
um so uh
 

00:26:19.520 --> 00:26:22.830 align:start position:0%
um so uh
suppose<00:26:20.000><c> that</c><00:26:20.159><c> the</c><00:26:20.320><c> interface</c><00:26:20.720><c> was</c><00:26:21.039><c> just</c>

00:26:22.830 --> 00:26:22.840 align:start position:0%
suppose that the interface was just
 

00:26:22.840 --> 00:26:26.470 align:start position:0%
suppose that the interface was just
sleep<00:26:25.360><c> on</c><00:26:25.520><c> this</c><00:26:25.760><c> arbitrary</c>

00:26:26.470 --> 00:26:26.480 align:start position:0%
sleep on this arbitrary
 

00:26:26.480 --> 00:26:29.590 align:start position:0%
sleep on this arbitrary
channel<00:26:26.799><c> value</c><00:26:27.360><c> with</c><00:26:27.600><c> no</c><00:26:28.159><c> second</c><00:26:28.480><c> argument</c>

00:26:29.590 --> 00:26:29.600 align:start position:0%
channel value with no second argument
 

00:26:29.600 --> 00:26:33.350 align:start position:0%
channel value with no second argument
um<00:26:31.600><c> uh</c><00:26:32.320><c> you</c><00:26:32.480><c> can't</c><00:26:32.640><c> make</c><00:26:32.799><c> this</c><00:26:32.960><c> work</c><00:26:33.120><c> so</c><00:26:33.279><c> i'm</c>

00:26:33.350 --> 00:26:33.360 align:start position:0%
um uh you can't make this work so i'm
 

00:26:33.360 --> 00:26:37.990 align:start position:0%
um uh you can't make this work so i'm
actually<00:26:33.600><c> going</c><00:26:33.679><c> to</c><00:26:33.760><c> call</c><00:26:33.919><c> this</c><00:26:34.159><c> broken</c><00:26:34.640><c> sleep</c>

00:26:37.990 --> 00:26:38.000 align:start position:0%
 
 

00:26:38.000 --> 00:26:40.870 align:start position:0%
 
and<00:26:38.640><c> you</c><00:26:38.799><c> could</c><00:26:38.960><c> imagine</c><00:26:40.320><c> if</c><00:26:40.400><c> we</c><00:26:40.559><c> didn't</c><00:26:40.720><c> know</c>

00:26:40.870 --> 00:26:40.880 align:start position:0%
and you could imagine if we didn't know
 

00:26:40.880 --> 00:26:41.990 align:start position:0%
and you could imagine if we didn't know
better<00:26:41.200><c> that</c>

00:26:41.990 --> 00:26:42.000 align:start position:0%
better that
 

00:26:42.000 --> 00:26:45.110 align:start position:0%
better that
a<00:26:42.159><c> sleep</c><00:26:42.480><c> like</c><00:26:42.640><c> this</c><00:26:42.880><c> could</c><00:26:43.120><c> simply</c><00:26:44.720><c> set</c>

00:26:45.110 --> 00:26:45.120 align:start position:0%
a sleep like this could simply set
 

00:26:45.120 --> 00:26:48.470 align:start position:0%
a sleep like this could simply set
the<00:26:46.640><c> state</c><00:26:47.039><c> of</c><00:26:47.200><c> the</c>

00:26:48.470 --> 00:26:48.480 align:start position:0%
the state of the
 

00:26:48.480 --> 00:26:51.669 align:start position:0%
the state of the
process<00:26:50.080><c> to</c><00:26:50.240><c> this</c><00:26:50.559><c> special</c><00:26:50.880><c> sleeping</c><00:26:51.279><c> value</c>

00:26:51.669 --> 00:26:51.679 align:start position:0%
process to this special sleeping value
 

00:26:51.679 --> 00:26:53.190 align:start position:0%
process to this special sleeping value
which<00:26:51.919><c> says</c><00:26:52.159><c> i</c><00:26:52.240><c> don't</c><00:26:52.400><c> want</c><00:26:52.480><c> to</c><00:26:52.559><c> run</c><00:26:52.799><c> anymore</c>

00:26:53.190 --> 00:26:53.200 align:start position:0%
which says i don't want to run anymore
 

00:26:53.200 --> 00:26:55.830 align:start position:0%
which says i don't want to run anymore
i'm<00:26:53.600><c> waiting</c><00:26:53.919><c> for</c><00:26:54.080><c> a</c><00:26:54.240><c> specific</c><00:26:54.640><c> event</c>

00:26:55.830 --> 00:26:55.840 align:start position:0%
i'm waiting for a specific event
 

00:26:55.840 --> 00:26:57.669 align:start position:0%
i'm waiting for a specific event
and<00:26:55.919><c> then</c><00:26:56.240><c> if</c><00:26:56.320><c> you</c><00:26:56.400><c> look</c><00:26:56.559><c> at</c><00:26:56.640><c> the</c><00:26:57.039><c> xv6's</c>

00:26:57.669 --> 00:26:57.679 align:start position:0%
and then if you look at the xv6's
 

00:26:57.679 --> 00:26:58.789 align:start position:0%
and then if you look at the xv6's
implementation<00:26:58.159><c> of</c><00:26:58.240><c> sleep</c><00:26:58.400><c> you'll</c><00:26:58.559><c> see</c><00:26:58.720><c> it</c>

00:26:58.789 --> 00:26:58.799 align:start position:0%
implementation of sleep you'll see it
 

00:26:58.799 --> 00:26:59.430 align:start position:0%
implementation of sleep you'll see it
does<00:26:59.039><c> this</c>

00:26:59.430 --> 00:26:59.440 align:start position:0%
does this
 

00:26:59.440 --> 00:27:02.789 align:start position:0%
does this
among<00:26:59.760><c> other</c><00:27:00.000><c> things</c><00:27:01.679><c> we</c><00:27:01.840><c> need</c><00:27:02.000><c> to</c><00:27:02.240><c> record</c>

00:27:02.789 --> 00:27:02.799 align:start position:0%
among other things we need to record
 

00:27:02.799 --> 00:27:03.750 align:start position:0%
among other things we need to record
this<00:27:03.039><c> special</c>

00:27:03.750 --> 00:27:03.760 align:start position:0%
this special
 

00:27:03.760 --> 00:27:06.230 align:start position:0%
this special
sleep<00:27:04.080><c> channel</c><00:27:04.480><c> value</c><00:27:05.440><c> so</c><00:27:05.600><c> that</c><00:27:05.760><c> a</c><00:27:05.919><c> future</c>

00:27:06.230 --> 00:27:06.240 align:start position:0%
sleep channel value so that a future
 

00:27:06.240 --> 00:27:07.669 align:start position:0%
sleep channel value so that a future
call<00:27:06.640><c> to</c><00:27:06.880><c> wake</c><00:27:07.120><c> up</c><00:27:07.279><c> can</c>

00:27:07.669 --> 00:27:07.679 align:start position:0%
call to wake up can
 

00:27:07.679 --> 00:27:09.269 align:start position:0%
call to wake up can
realize<00:27:08.159><c> that</c><00:27:08.240><c> we're</c><00:27:08.480><c> actually</c><00:27:08.720><c> waiting</c><00:27:09.120><c> for</c>

00:27:09.269 --> 00:27:09.279 align:start position:0%
realize that we're actually waiting for
 

00:27:09.279 --> 00:27:12.870 align:start position:0%
realize that we're actually waiting for
the<00:27:10.320><c> thing</c><00:27:10.559><c> that</c><00:27:10.720><c> the</c><00:27:10.960><c> um</c>

00:27:12.870 --> 00:27:12.880 align:start position:0%
the thing that the um
 

00:27:12.880 --> 00:27:15.029 align:start position:0%
the thing that the um
wake<00:27:13.120><c> up</c><00:27:13.279><c> is</c><00:27:13.360><c> waking</c><00:27:13.679><c> us</c><00:27:13.919><c> up</c><00:27:14.000><c> for</c><00:27:14.240><c> so</c><00:27:14.640><c> you</c><00:27:14.799><c> could</c>

00:27:15.029 --> 00:27:15.039 align:start position:0%
wake up is waking us up for so you could
 

00:27:15.039 --> 00:27:16.230 align:start position:0%
wake up is waking us up for so you could
imagine<00:27:15.360><c> a</c><00:27:15.760><c> sleep</c>

00:27:16.230 --> 00:27:16.240 align:start position:0%
imagine a sleep
 

00:27:16.240 --> 00:27:18.389 align:start position:0%
imagine a sleep
and<00:27:16.400><c> it</c><00:27:16.480><c> would</c><00:27:16.640><c> be</c><00:27:16.799><c> broken</c><00:27:17.360><c> that</c><00:27:17.760><c> really</c><00:27:18.159><c> just</c>

00:27:18.389 --> 00:27:18.399 align:start position:0%
and it would be broken that really just
 

00:27:18.399 --> 00:27:20.310 align:start position:0%
and it would be broken that really just
did<00:27:18.640><c> this</c><00:27:19.039><c> i</c><00:27:19.120><c> guess</c><00:27:19.279><c> you'd</c><00:27:19.440><c> have</c><00:27:19.520><c> to</c><00:27:19.840><c> take</c>

00:27:20.310 --> 00:27:20.320 align:start position:0%
did this i guess you'd have to take
 

00:27:20.320 --> 00:27:26.070 align:start position:0%
did this i guess you'd have to take
acquire<00:27:22.799><c> this</c><00:27:23.039><c> process</c><00:27:23.360><c> is</c><00:27:23.520><c> lock</c><00:27:23.840><c> also</c>

00:27:26.070 --> 00:27:26.080 align:start position:0%
acquire this process is lock also
 

00:27:26.080 --> 00:27:30.549 align:start position:0%
acquire this process is lock also
and<00:27:26.159><c> then</c><00:27:26.320><c> of</c><00:27:26.399><c> course</c><00:27:26.640><c> money</c><00:27:26.880><c> wake</c><00:27:27.200><c> up</c>

00:27:30.549 --> 00:27:30.559 align:start position:0%
 
 

00:27:30.559 --> 00:27:34.149 align:start position:0%
 
wake<00:27:30.880><c> up</c><00:27:32.840><c> um</c>

00:27:34.149 --> 00:27:34.159 align:start position:0%
wake up um
 

00:27:34.159 --> 00:27:35.590 align:start position:0%
wake up um
and<00:27:34.320><c> this</c><00:27:34.480><c> really</c><00:27:34.720><c> is</c><00:27:34.880><c> pretty</c><00:27:35.039><c> much</c><00:27:35.200><c> how</c><00:27:35.360><c> wake</c>

00:27:35.590 --> 00:27:35.600 align:start position:0%
and this really is pretty much how wake
 

00:27:35.600 --> 00:27:37.750 align:start position:0%
and this really is pretty much how wake
up<00:27:35.760><c> works</c><00:27:36.640><c> we</c><00:27:36.799><c> want</c><00:27:36.960><c> to</c><00:27:37.039><c> wake</c><00:27:37.279><c> up</c><00:27:37.360><c> all</c><00:27:37.600><c> the</c>

00:27:37.750 --> 00:27:37.760 align:start position:0%
up works we want to wake up all the
 

00:27:37.760 --> 00:27:39.430 align:start position:0%
up works we want to wake up all the
threads<00:27:38.159><c> that</c><00:27:38.320><c> are</c><00:27:38.399><c> waiting</c><00:27:38.799><c> on</c>

00:27:39.430 --> 00:27:39.440 align:start position:0%
threads that are waiting on
 

00:27:39.440 --> 00:27:40.630 align:start position:0%
threads that are waiting on
that<00:27:39.600><c> are</c><00:27:39.760><c> called</c><00:27:40.000><c> sleep</c><00:27:40.320><c> with</c><00:27:40.480><c> this</c>

00:27:40.630 --> 00:27:40.640 align:start position:0%
that are called sleep with this
 

00:27:40.640 --> 00:27:42.789 align:start position:0%
that are called sleep with this
particular<00:27:41.200><c> channel</c><00:27:41.520><c> value</c><00:27:42.320><c> so</c><00:27:42.480><c> we're</c><00:27:42.640><c> just</c>

00:27:42.789 --> 00:27:42.799 align:start position:0%
particular channel value so we're just
 

00:27:42.799 --> 00:27:43.430 align:start position:0%
particular channel value so we're just
going<00:27:42.880><c> to</c><00:27:43.039><c> say</c>

00:27:43.430 --> 00:27:43.440 align:start position:0%
going to say
 

00:27:43.440 --> 00:27:47.029 align:start position:0%
going to say
you<00:27:43.520><c> know</c><00:27:43.760><c> for</c><00:27:44.000><c> each</c><00:27:45.919><c> p</c><00:27:46.320><c> in</c>

00:27:47.029 --> 00:27:47.039 align:start position:0%
you know for each p in
 

00:27:47.039 --> 00:27:52.549 align:start position:0%
you know for each p in
the<00:27:47.200><c> process</c><00:27:47.679><c> table</c>

00:27:52.549 --> 00:27:52.559 align:start position:0%
 
 

00:27:52.559 --> 00:27:56.149 align:start position:0%
 
if<00:27:55.360><c> the</c><00:27:55.520><c> state</c>

00:27:56.149 --> 00:27:56.159 align:start position:0%
if the state
 

00:27:56.159 --> 00:28:01.350 align:start position:0%
if the state
if<00:27:56.320><c> it's</c><00:27:56.799><c> sleeping</c>

00:28:01.350 --> 00:28:01.360 align:start position:0%
 
 

00:28:01.360 --> 00:28:04.789 align:start position:0%
 
and<00:28:02.399><c> it's</c><00:28:02.720><c> sleeping</c><00:28:03.200><c> on</c><00:28:04.080><c> the</c><00:28:04.320><c> channel</c><00:28:04.640><c> that</c>

00:28:04.789 --> 00:28:04.799 align:start position:0%
and it's sleeping on the channel that
 

00:28:04.799 --> 00:28:14.070 align:start position:0%
and it's sleeping on the channel that
we're<00:28:04.960><c> waking</c><00:28:05.360><c> up</c>

00:28:14.070 --> 00:28:14.080 align:start position:0%
 
 

00:28:14.080 --> 00:28:17.350 align:start position:0%
 
then<00:28:14.960><c> set</c><00:28:15.120><c> the</c><00:28:15.279><c> state</c><00:28:15.679><c> to</c>

00:28:17.350 --> 00:28:17.360 align:start position:0%
then set the state to
 

00:28:17.360 --> 00:28:22.070 align:start position:0%
then set the state to
runnable

00:28:22.070 --> 00:28:22.080 align:start position:0%
 
 

00:28:22.080 --> 00:28:24.070 align:start position:0%
 
and<00:28:22.240><c> actually</c><00:28:22.480><c> modulo</c><00:28:23.039><c> locks</c><00:28:23.360><c> this</c><00:28:23.600><c> is</c><00:28:23.840><c> pretty</c>

00:28:24.070 --> 00:28:24.080 align:start position:0%
and actually modulo locks this is pretty
 

00:28:24.080 --> 00:28:29.430 align:start position:0%
and actually modulo locks this is pretty
much<00:28:24.320><c> what</c><00:28:24.960><c> wake</c><00:28:25.200><c> up</c><00:28:25.360><c> does</c>

00:28:29.430 --> 00:28:29.440 align:start position:0%
 
 

00:28:29.440 --> 00:28:32.549 align:start position:0%
 
okay<00:28:29.679><c> so</c><00:28:30.399><c> uh</c><00:28:31.360><c> some</c><00:28:31.600><c> alternate</c><00:28:32.000><c> universe</c><00:28:32.320><c> boy</c>

00:28:32.549 --> 00:28:32.559 align:start position:0%
okay so uh some alternate universe boy
 

00:28:32.559 --> 00:28:34.310 align:start position:0%
okay so uh some alternate universe boy
it<00:28:32.640><c> would</c><00:28:32.720><c> be</c><00:28:32.880><c> nice</c><00:28:33.200><c> if</c><00:28:33.440><c> uh</c><00:28:33.679><c> sleep</c><00:28:33.919><c> and</c><00:28:34.000><c> wake</c><00:28:34.240><c> up</c>

00:28:34.310 --> 00:28:34.320 align:start position:0%
it would be nice if uh sleep and wake up
 

00:28:34.320 --> 00:28:35.750 align:start position:0%
it would be nice if uh sleep and wake up
were<00:28:34.480><c> this</c><00:28:34.640><c> simple</c>

00:28:35.750 --> 00:28:35.760 align:start position:0%
were this simple
 

00:28:35.760 --> 00:28:38.870 align:start position:0%
were this simple
um<00:28:37.279><c> let</c><00:28:37.440><c> me</c><00:28:37.520><c> demonstrate</c><00:28:38.159><c> though</c>

00:28:38.870 --> 00:28:38.880 align:start position:0%
um let me demonstrate though
 

00:28:38.880 --> 00:28:42.830 align:start position:0%
um let me demonstrate though
um<00:28:40.559><c> well</c>

00:28:42.830 --> 00:28:42.840 align:start position:0%
 
 

00:28:42.840 --> 00:28:45.590 align:start position:0%
 
uh

00:28:45.590 --> 00:28:45.600 align:start position:0%
uh
 

00:28:45.600 --> 00:28:55.029 align:start position:0%
uh
let<00:28:45.760><c> me</c><00:28:45.840><c> demonstrate</c><00:28:47.840><c> um</c>

00:28:55.029 --> 00:28:55.039 align:start position:0%
 
 

00:28:55.039 --> 00:28:57.669 align:start position:0%
 
well<00:28:55.679><c> before</c><00:28:56.000><c> i</c><00:28:56.080><c> go</c><00:28:56.240><c> back</c><00:28:56.399><c> to</c><00:28:56.480><c> the</c><00:28:56.799><c> actual</c><00:28:57.120><c> xv6</c>

00:28:57.669 --> 00:28:57.679 align:start position:0%
well before i go back to the actual xv6
 

00:28:57.679 --> 00:28:58.870 align:start position:0%
well before i go back to the actual xv6
code

00:28:58.870 --> 00:28:58.880 align:start position:0%
code
 

00:28:58.880 --> 00:29:00.630 align:start position:0%
code
let<00:28:59.039><c> me</c><00:28:59.120><c> just</c><00:28:59.279><c> outline</c><00:28:59.679><c> how</c><00:28:59.919><c> you</c><00:29:00.000><c> would</c><00:29:00.240><c> use</c>

00:29:00.630 --> 00:29:00.640 align:start position:0%
let me just outline how you would use
 

00:29:00.640 --> 00:29:02.389 align:start position:0%
let me just outline how you would use
this<00:29:00.880><c> sleep</c><00:29:01.120><c> in</c><00:29:01.279><c> wake</c><00:29:01.520><c> up</c>

00:29:02.389 --> 00:29:02.399 align:start position:0%
this sleep in wake up
 

00:29:02.399 --> 00:29:03.830 align:start position:0%
this sleep in wake up
in<00:29:02.480><c> the</c><00:29:02.559><c> uar</c><00:29:02.880><c> driver</c><00:29:03.200><c> and</c><00:29:03.279><c> this</c><00:29:03.360><c> is</c><00:29:03.520><c> sort</c><00:29:03.600><c> of</c><00:29:03.760><c> a</c>

00:29:03.830 --> 00:29:03.840 align:start position:0%
in the uar driver and this is sort of a
 

00:29:03.840 --> 00:29:05.510 align:start position:0%
in the uar driver and this is sort of a
repeat<00:29:04.240><c> of</c><00:29:04.320><c> what</c><00:29:04.480><c> we've</c><00:29:04.640><c> already</c><00:29:04.960><c> seen</c><00:29:05.279><c> but</c>

00:29:05.510 --> 00:29:05.520 align:start position:0%
repeat of what we've already seen but
 

00:29:05.520 --> 00:29:06.630 align:start position:0%
repeat of what we've already seen but
using<00:29:05.840><c> this</c>

00:29:06.630 --> 00:29:06.640 align:start position:0%
using this
 

00:29:06.640 --> 00:29:09.830 align:start position:0%
using this
slightly<00:29:07.039><c> simpler</c><00:29:07.440><c> interface</c><00:29:09.440><c> you</c><00:29:09.679><c> would</c>

00:29:09.830 --> 00:29:09.840 align:start position:0%
slightly simpler interface you would
 

00:29:09.840 --> 00:29:11.029 align:start position:0%
slightly simpler interface you would
have

00:29:11.029 --> 00:29:11.039 align:start position:0%
have
 

00:29:11.039 --> 00:29:12.549 align:start position:0%
have
and<00:29:11.279><c> indeed</c><00:29:11.520><c> the</c><00:29:11.679><c> driver</c><00:29:12.000><c> does</c><00:29:12.240><c> this</c><00:29:12.399><c> you'd</c>

00:29:12.549 --> 00:29:12.559 align:start position:0%
and indeed the driver does this you'd
 

00:29:12.559 --> 00:29:16.470 align:start position:0%
and indeed the driver does this you'd
have<00:29:12.720><c> this</c><00:29:12.960><c> done</c><00:29:13.279><c> flag</c>

00:29:16.470 --> 00:29:16.480 align:start position:0%
 
 

00:29:16.480 --> 00:29:23.990 align:start position:0%
 
and<00:29:16.559><c> then</c><00:29:16.720><c> you</c><00:29:16.960><c> are</c><00:29:17.200><c> right</c>

00:29:23.990 --> 00:29:24.000 align:start position:0%
 
 

00:29:24.000 --> 00:29:27.750 align:start position:0%
 
you<00:29:24.159><c> know</c><00:29:24.320><c> would</c><00:29:24.559><c> say</c><00:29:24.799><c> for</c><00:29:25.039><c> each</c>

00:29:27.750 --> 00:29:27.760 align:start position:0%
you know would say for each
 

00:29:27.760 --> 00:29:33.190 align:start position:0%
you know would say for each
character<00:29:28.240><c> in</c><00:29:28.320><c> the</c><00:29:28.399><c> buffer</c>

00:29:33.190 --> 00:29:33.200 align:start position:0%
 
 

00:29:33.200 --> 00:29:35.430 align:start position:0%
 
and<00:29:33.279><c> then</c><00:29:33.440><c> it</c><00:29:33.520><c> would</c><00:29:34.000><c> check</c><00:29:34.240><c> this</c><00:29:34.480><c> done</c><00:29:34.720><c> flag</c>

00:29:35.430 --> 00:29:35.440 align:start position:0%
and then it would check this done flag
 

00:29:35.440 --> 00:29:41.110 align:start position:0%
and then it would check this done flag
just<00:29:35.679><c> say</c><00:29:35.919><c> while</c><00:29:36.159><c> not</c><00:29:38.840><c> done</c>

00:29:41.110 --> 00:29:41.120 align:start position:0%
just say while not done
 

00:29:41.120 --> 00:29:44.789 align:start position:0%
just say while not done
i'm<00:29:41.279><c> gonna</c><00:29:41.600><c> sleep</c>

00:29:44.789 --> 00:29:44.799 align:start position:0%
 
 

00:29:44.799 --> 00:29:47.830 align:start position:0%
 
and<00:29:44.960><c> then</c><00:29:45.200><c> pass</c><00:29:45.679><c> that</c><00:29:46.000><c> uh</c><00:29:47.120><c> channel</c><00:29:47.520><c> whatever</c>

00:29:47.830 --> 00:29:47.840 align:start position:0%
and then pass that uh channel whatever
 

00:29:47.840 --> 00:29:48.630 align:start position:0%
and then pass that uh channel whatever
it<00:29:47.919><c> was</c>

00:29:48.630 --> 00:29:48.640 align:start position:0%
it was
 

00:29:48.640 --> 00:29:51.830 align:start position:0%
it was
tx<00:29:49.360><c> chan</c><00:29:49.760><c> or</c><00:29:49.840><c> something</c><00:29:51.279><c> it</c><00:29:51.440><c> doesn't</c><00:29:51.600><c> really</c>

00:29:51.830 --> 00:29:51.840 align:start position:0%
tx chan or something it doesn't really
 

00:29:51.840 --> 00:29:52.470 align:start position:0%
tx chan or something it doesn't really
matter

00:29:52.470 --> 00:29:52.480 align:start position:0%
matter
 

00:29:52.480 --> 00:29:55.750 align:start position:0%
matter
okay<00:29:52.720><c> and</c><00:29:52.799><c> then</c><00:29:52.960><c> we're</c><00:29:53.120><c> going</c><00:29:53.279><c> to</c><00:29:53.360><c> send</c><00:29:53.679><c> c</c>

00:29:55.750 --> 00:29:55.760 align:start position:0%
okay and then we're going to send c
 

00:29:55.760 --> 00:30:00.630 align:start position:0%
okay and then we're going to send c
to<00:29:55.919><c> the</c><00:29:56.000><c> uart</c><00:29:57.840><c> and</c><00:29:58.080><c> set</c><00:29:58.320><c> done</c><00:29:58.640><c> equals</c>

00:30:00.630 --> 00:30:00.640 align:start position:0%
to the uart and set done equals
 

00:30:00.640 --> 00:30:04.149 align:start position:0%
to the uart and set done equals
zero<00:30:01.120><c> right</c><00:30:03.360><c> and</c><00:30:03.440><c> then</c><00:30:03.600><c> the</c><00:30:03.760><c> interrupt</c>

00:30:04.149 --> 00:30:04.159 align:start position:0%
zero right and then the interrupt
 

00:30:04.159 --> 00:30:08.070 align:start position:0%
zero right and then the interrupt
routine

00:30:08.070 --> 00:30:08.080 align:start position:0%
 
 

00:30:08.080 --> 00:30:10.710 align:start position:0%
 
just<00:30:08.320><c> sets</c><00:30:08.559><c> the</c><00:30:08.640><c> done</c><00:30:08.799><c> flag</c><00:30:09.120><c> is</c><00:30:09.279><c> equal</c><00:30:09.440><c> to</c><00:30:09.600><c> true</c>

00:30:10.710 --> 00:30:10.720 align:start position:0%
just sets the done flag is equal to true
 

00:30:10.720 --> 00:30:13.669 align:start position:0%
just sets the done flag is equal to true
and<00:30:10.960><c> calls</c><00:30:11.200><c> wake</c><00:30:11.440><c> up</c>

00:30:13.669 --> 00:30:13.679 align:start position:0%
 
 

00:30:13.679 --> 00:30:17.430 align:start position:0%
 
so<00:30:13.840><c> this</c><00:30:14.000><c> is</c><00:30:14.080><c> how</c><00:30:14.240><c> we</c><00:30:14.399><c> could</c><00:30:14.559><c> use</c>

00:30:17.430 --> 00:30:17.440 align:start position:0%
 
 

00:30:17.440 --> 00:30:19.750 align:start position:0%
 
this<00:30:17.679><c> simplified</c><00:30:18.399><c> broken</c><00:30:18.880><c> sleep</c><00:30:19.520><c> all</c><00:30:19.679><c> right</c>

00:30:19.750 --> 00:30:19.760 align:start position:0%
this simplified broken sleep all right
 

00:30:19.760 --> 00:30:23.430 align:start position:0%
this simplified broken sleep all right
so<00:30:19.919><c> this</c><00:30:20.080><c> is</c><00:30:20.159><c> really</c><00:30:20.399><c> broken</c><00:30:20.880><c> sleep</c>

00:30:23.430 --> 00:30:23.440 align:start position:0%
so this is really broken sleep
 

00:30:23.440 --> 00:30:28.870 align:start position:0%
so this is really broken sleep
what<00:30:23.600><c> this</c><00:30:23.840><c> is</c><00:30:24.000><c> missing</c><00:30:24.480><c> though</c><00:30:25.200><c> is</c><00:30:25.360><c> locking</c>

00:30:28.870 --> 00:30:28.880 align:start position:0%
 
 

00:30:28.880 --> 00:30:32.389 align:start position:0%
 
so<00:30:29.360><c> actually</c><00:30:29.760><c> both</c><00:30:30.080><c> the</c><00:30:31.279><c> both</c><00:30:31.679><c> of</c><00:30:31.840><c> these</c>

00:30:32.389 --> 00:30:32.399 align:start position:0%
so actually both the both of these
 

00:30:32.399 --> 00:30:34.230 align:start position:0%
so actually both the both of these
routines<00:30:32.880><c> here</c><00:30:33.039><c> both</c><00:30:33.279><c> the</c><00:30:33.440><c> right</c><00:30:33.679><c> routine</c><00:30:34.159><c> and</c>

00:30:34.230 --> 00:30:34.240 align:start position:0%
routines here both the right routine and
 

00:30:34.240 --> 00:30:35.990 align:start position:0%
routines here both the right routine and
the<00:30:34.399><c> interrupt</c><00:30:34.720><c> routine</c><00:30:35.279><c> absolutely</c><00:30:35.760><c> have</c>

00:30:35.990 --> 00:30:36.000 align:start position:0%
the interrupt routine absolutely have
 

00:30:36.000 --> 00:30:39.110 align:start position:0%
the interrupt routine absolutely have
to<00:30:36.159><c> lock</c><00:30:37.840><c> and</c><00:30:38.399><c> one</c><00:30:38.640><c> reason</c>

00:30:39.110 --> 00:30:39.120 align:start position:0%
to lock and one reason
 

00:30:39.120 --> 00:30:41.669 align:start position:0%
to lock and one reason
is<00:30:39.360><c> that</c><00:30:39.600><c> uh</c><00:30:40.399><c> this</c><00:30:40.640><c> done</c><00:30:40.880><c> flag</c><00:30:41.200><c> anytime</c><00:30:41.520><c> we</c>

00:30:41.669 --> 00:30:41.679 align:start position:0%
is that uh this done flag anytime we
 

00:30:41.679 --> 00:30:42.630 align:start position:0%
is that uh this done flag anytime we
have<00:30:41.840><c> shared</c><00:30:42.159><c> data</c>

00:30:42.630 --> 00:30:42.640 align:start position:0%
have shared data
 

00:30:42.640 --> 00:30:43.990 align:start position:0%
have shared data
we<00:30:42.880><c> really</c><00:30:43.039><c> need</c><00:30:43.200><c> to</c><00:30:43.279><c> put</c><00:30:43.440><c> a</c><00:30:43.520><c> lock</c><00:30:43.679><c> around</c><00:30:43.919><c> the</c>

00:30:43.990 --> 00:30:44.000 align:start position:0%
we really need to put a lock around the
 

00:30:44.000 --> 00:30:47.430 align:start position:0%
we really need to put a lock around the
shared<00:30:44.320><c> data</c><00:30:45.520><c> and</c><00:30:45.679><c> the</c><00:30:45.760><c> other</c><00:30:46.000><c> reason</c><00:30:46.399><c> is</c><00:30:46.480><c> that</c>

00:30:47.430 --> 00:30:47.440 align:start position:0%
shared data and the other reason is that
 

00:30:47.440 --> 00:30:48.789 align:start position:0%
shared data and the other reason is that
actually<00:30:47.679><c> i</c><00:30:47.760><c> didn't</c><00:30:47.919><c> put</c><00:30:48.080><c> it</c><00:30:48.240><c> in</c><00:30:48.399><c> here</c><00:30:48.640><c> but</c>

00:30:48.789 --> 00:30:48.799 align:start position:0%
actually i didn't put it in here but
 

00:30:48.799 --> 00:30:50.549 align:start position:0%
actually i didn't put it in here but
both<00:30:48.960><c> the</c><00:30:49.120><c> interrupt</c><00:30:49.440><c> routine</c><00:30:50.000><c> and</c>

00:30:50.549 --> 00:30:50.559 align:start position:0%
both the interrupt routine and
 

00:30:50.559 --> 00:30:53.029 align:start position:0%
both the interrupt routine and
the<00:30:51.120><c> right</c><00:30:51.360><c> routine</c><00:30:52.080><c> need</c><00:30:52.240><c> to</c><00:30:52.399><c> access</c><00:30:52.880><c> the</c>

00:30:53.029 --> 00:30:53.039 align:start position:0%
the right routine need to access the
 

00:30:53.039 --> 00:30:55.269 align:start position:0%
the right routine need to access the
hardware<00:30:53.520><c> the</c><00:30:53.679><c> uart</c><00:30:54.080><c> hardware</c><00:30:54.559><c> itself</c>

00:30:55.269 --> 00:30:55.279 align:start position:0%
hardware the uart hardware itself
 

00:30:55.279 --> 00:30:57.190 align:start position:0%
hardware the uart hardware itself
and<00:30:55.679><c> typically</c><00:30:56.080><c> it's</c><00:30:56.240><c> an</c><00:30:56.399><c> error</c><00:30:56.960><c> unless</c>

00:30:57.190 --> 00:30:57.200 align:start position:0%
and typically it's an error unless
 

00:30:57.200 --> 00:30:59.509 align:start position:0%
and typically it's an error unless
you're<00:30:57.600><c> very</c><00:30:57.840><c> very</c><00:30:58.000><c> clever</c>

00:30:59.509 --> 00:30:59.519 align:start position:0%
you're very very clever
 

00:30:59.519 --> 00:31:01.590 align:start position:0%
you're very very clever
it's<00:30:59.679><c> an</c><00:30:59.919><c> error</c><00:31:00.159><c> to</c><00:31:00.320><c> have</c><00:31:00.480><c> two</c><00:31:00.720><c> threads</c>

00:31:01.590 --> 00:31:01.600 align:start position:0%
it's an error to have two threads
 

00:31:01.600 --> 00:31:02.870 align:start position:0%
it's an error to have two threads
concurrently

00:31:02.870 --> 00:31:02.880 align:start position:0%
concurrently
 

00:31:02.880 --> 00:31:04.950 align:start position:0%
concurrently
try<00:31:03.120><c> to</c><00:31:03.279><c> read</c><00:31:03.519><c> and</c><00:31:03.679><c> write</c><00:31:04.000><c> the</c><00:31:04.320><c> memory</c><00:31:04.640><c> mapped</c>

00:31:04.950 --> 00:31:04.960 align:start position:0%
try to read and write the memory mapped
 

00:31:04.960 --> 00:31:06.630 align:start position:0%
try to read and write the memory mapped
hardware<00:31:05.360><c> registers</c>

00:31:06.630 --> 00:31:06.640 align:start position:0%
hardware registers
 

00:31:06.640 --> 00:31:09.350 align:start position:0%
hardware registers
so<00:31:06.799><c> we</c><00:31:06.880><c> need</c><00:31:07.039><c> to</c><00:31:07.120><c> lock</c><00:31:07.360><c> around</c><00:31:08.720><c> in</c><00:31:09.039><c> both</c><00:31:09.279><c> of</c>

00:31:09.350 --> 00:31:09.360 align:start position:0%
so we need to lock around in both of
 

00:31:09.360 --> 00:31:12.789 align:start position:0%
so we need to lock around in both of
these<00:31:09.519><c> subroutines</c><00:31:10.000><c> in</c><00:31:10.080><c> order</c><00:31:10.399><c> to</c>

00:31:12.789 --> 00:31:12.799 align:start position:0%
 
 

00:31:12.799 --> 00:31:17.029 align:start position:0%
 
avoid<00:31:15.760><c> both</c>

00:31:17.029 --> 00:31:17.039 align:start position:0%
avoid both
 

00:31:17.039 --> 00:31:18.950 align:start position:0%
avoid both
racing<00:31:17.440><c> access</c><00:31:17.760><c> is</c><00:31:18.080><c> done</c><00:31:18.320><c> and</c><00:31:18.559><c> racing</c>

00:31:18.950 --> 00:31:18.960 align:start position:0%
racing access is done and racing
 

00:31:18.960 --> 00:31:20.070 align:start position:0%
racing access is done and racing
accesses<00:31:19.440><c> to</c><00:31:19.600><c> the</c><00:31:19.679><c> hard</c>

00:31:20.070 --> 00:31:20.080 align:start position:0%
accesses to the hard
 

00:31:20.080 --> 00:31:22.470 align:start position:0%
accesses to the hard
hardware<00:31:21.600><c> and</c><00:31:21.679><c> so</c><00:31:21.840><c> the</c><00:31:21.919><c> question</c><00:31:22.240><c> is</c><00:31:22.320><c> where</c>

00:31:22.470 --> 00:31:22.480 align:start position:0%
hardware and so the question is where
 

00:31:22.480 --> 00:31:25.669 align:start position:0%
hardware and so the question is where
should<00:31:22.640><c> we</c><00:31:22.720><c> put</c><00:31:22.960><c> the</c><00:31:23.039><c> locks</c><00:31:23.440><c> in</c>

00:31:25.669 --> 00:31:25.679 align:start position:0%
 
 

00:31:25.679 --> 00:31:28.149 align:start position:0%
 
it's<00:31:26.320><c> it's</c><00:31:26.559><c> easy</c><00:31:26.960><c> in</c><00:31:27.039><c> the</c><00:31:27.200><c> interrupt</c><00:31:27.600><c> routine</c>

00:31:28.149 --> 00:31:28.159 align:start position:0%
it's it's easy in the interrupt routine
 

00:31:28.159 --> 00:31:29.430 align:start position:0%
it's it's easy in the interrupt routine
we're<00:31:28.320><c> going</c><00:31:28.399><c> to</c><00:31:28.480><c> lock</c><00:31:28.799><c> our</c><00:31:29.039><c> lock</c>

00:31:29.430 --> 00:31:29.440 align:start position:0%
we're going to lock our lock
 

00:31:29.440 --> 00:31:32.230 align:start position:0%
we're going to lock our lock
at<00:31:29.600><c> the</c><00:31:29.679><c> beginning</c><00:31:31.200><c> whatever</c><00:31:31.600><c> the</c><00:31:31.919><c> lock</c><00:31:32.159><c> i</c>

00:31:32.230 --> 00:31:32.240 align:start position:0%
at the beginning whatever the lock i
 

00:31:32.240 --> 00:31:34.470 align:start position:0%
at the beginning whatever the lock i
think<00:31:32.399><c> is</c><00:31:32.480><c> called</c><00:31:32.640><c> urtx</c><00:31:33.519><c> lock</c><00:31:33.760><c> or</c><00:31:33.840><c> something</c>

00:31:34.470 --> 00:31:34.480 align:start position:0%
think is called urtx lock or something
 

00:31:34.480 --> 00:31:36.549 align:start position:0%
think is called urtx lock or something
and<00:31:34.559><c> we're</c><00:31:34.720><c> going</c><00:31:34.799><c> to</c><00:31:34.960><c> unlock</c><00:31:35.279><c> at</c><00:31:35.360><c> the</c><00:31:35.519><c> end</c>

00:31:36.549 --> 00:31:36.559 align:start position:0%
and we're going to unlock at the end
 

00:31:36.559 --> 00:31:38.470 align:start position:0%
and we're going to unlock at the end
right<00:31:36.799><c> so</c><00:31:37.039><c> the</c><00:31:37.279><c> interrupt</c><00:31:37.600><c> routine</c><00:31:38.000><c> just</c>

00:31:38.470 --> 00:31:38.480 align:start position:0%
right so the interrupt routine just
 

00:31:38.480 --> 00:31:40.149 align:start position:0%
right so the interrupt routine just
takes<00:31:38.720><c> the</c><00:31:38.799><c> lock</c><00:31:39.039><c> and</c><00:31:39.200><c> releases</c><00:31:39.679><c> it</c><00:31:40.000><c> the</c>

00:31:40.149 --> 00:31:40.159 align:start position:0%
takes the lock and releases it the
 

00:31:40.159 --> 00:31:41.750 align:start position:0%
takes the lock and releases it the
puzzle<00:31:40.480><c> is</c><00:31:40.640><c> where</c><00:31:40.799><c> to</c><00:31:40.880><c> put</c><00:31:41.039><c> the</c><00:31:41.200><c> locks</c>

00:31:41.750 --> 00:31:41.760 align:start position:0%
puzzle is where to put the locks
 

00:31:41.760 --> 00:31:45.350 align:start position:0%
puzzle is where to put the locks
in<00:31:42.640><c> the</c><00:31:42.799><c> uart</c><00:31:43.200><c> routine</c>

00:31:45.350 --> 00:31:45.360 align:start position:0%
in the uart routine
 

00:31:45.360 --> 00:31:48.630 align:start position:0%
in the uart routine
one<00:31:45.600><c> possibility</c><00:31:47.600><c> is</c><00:31:47.760><c> that</c><00:31:47.919><c> you</c><00:31:48.159><c> are</c><00:31:48.320><c> right</c>

00:31:48.630 --> 00:31:48.640 align:start position:0%
one possibility is that you are right
 

00:31:48.640 --> 00:31:50.549 align:start position:0%
one possibility is that you are right
could<00:31:48.880><c> hold</c><00:31:49.200><c> the</c><00:31:49.360><c> lock</c><00:31:49.679><c> for</c><00:31:49.840><c> the</c><00:31:50.000><c> entire</c>

00:31:50.549 --> 00:31:50.559 align:start position:0%
could hold the lock for the entire
 

00:31:50.559 --> 00:31:51.669 align:start position:0%
could hold the lock for the entire
sequence<00:31:51.200><c> of</c>

00:31:51.669 --> 00:31:51.679 align:start position:0%
sequence of
 

00:31:51.679 --> 00:31:53.269 align:start position:0%
sequence of
trying<00:31:51.919><c> to</c><00:31:52.080><c> send</c><00:31:52.320><c> a</c><00:31:52.399><c> character</c><00:31:53.039><c> each</c>

00:31:53.269 --> 00:31:53.279 align:start position:0%
trying to send a character each
 

00:31:53.279 --> 00:31:54.710 align:start position:0%
trying to send a character each
character

00:31:54.710 --> 00:31:54.720 align:start position:0%
character
 

00:31:54.720 --> 00:32:01.669 align:start position:0%
character
so<00:31:54.880><c> we</c><00:31:54.960><c> could</c><00:31:55.200><c> acquire</c><00:31:55.600><c> the</c><00:31:55.760><c> lock</c><00:31:58.840><c> here</c>

00:32:01.669 --> 00:32:01.679 align:start position:0%
so we could acquire the lock here
 

00:32:01.679 --> 00:32:06.149 align:start position:0%
so we could acquire the lock here
and<00:32:02.080><c> unlock</c><00:32:02.720><c> here</c>

00:32:06.149 --> 00:32:06.159 align:start position:0%
 
 

00:32:06.159 --> 00:32:07.909 align:start position:0%
 
so<00:32:06.399><c> lock</c><00:32:06.640><c> and</c><00:32:06.799><c> unlock</c><00:32:07.360><c> sort</c><00:32:07.600><c> of</c><00:32:07.679><c> at</c><00:32:07.760><c> the</c>

00:32:07.909 --> 00:32:07.919 align:start position:0%
so lock and unlock sort of at the
 

00:32:07.919 --> 00:32:09.750 align:start position:0%
so lock and unlock sort of at the
beginning<00:32:08.240><c> and</c><00:32:08.399><c> very</c><00:32:08.720><c> end</c><00:32:09.039><c> processing</c><00:32:09.600><c> each</c>

00:32:09.750 --> 00:32:09.760 align:start position:0%
beginning and very end processing each
 

00:32:09.760 --> 00:32:11.110 align:start position:0%
beginning and very end processing each
character

00:32:11.110 --> 00:32:11.120 align:start position:0%
character
 

00:32:11.120 --> 00:32:22.549 align:start position:0%
character
so<00:32:11.279><c> why</c><00:32:11.600><c> why</c><00:32:11.840><c> does</c><00:32:12.080><c> this</c><00:32:12.480><c> definitely</c><00:32:12.880><c> not</c><00:32:13.039><c> work</c>

00:32:22.549 --> 00:32:22.559 align:start position:0%
 
 

00:32:22.559 --> 00:32:24.870 align:start position:0%
 
well<00:32:23.039><c> one</c><00:32:23.279><c> reason</c><00:32:23.600><c> is</c><00:32:23.760><c> that</c><00:32:24.159><c> the</c><00:32:24.320><c> only</c><00:32:24.559><c> way</c><00:32:24.720><c> we</c>

00:32:24.870 --> 00:32:24.880 align:start position:0%
well one reason is that the only way we
 

00:32:24.880 --> 00:32:26.870 align:start position:0%
well one reason is that the only way we
can<00:32:24.960><c> get</c><00:32:25.120><c> out</c><00:32:25.279><c> of</c><00:32:25.360><c> this</c><00:32:25.600><c> loop</c>

00:32:26.870 --> 00:32:26.880 align:start position:0%
can get out of this loop
 

00:32:26.880 --> 00:32:29.110 align:start position:0%
can get out of this loop
is<00:32:27.039><c> that</c><00:32:27.120><c> the</c><00:32:27.279><c> interrupt</c><00:32:27.760><c> routine</c><00:32:28.480><c> sets</c><00:32:28.880><c> done</c>

00:32:29.110 --> 00:32:29.120 align:start position:0%
is that the interrupt routine sets done
 

00:32:29.120 --> 00:32:30.149 align:start position:0%
is that the interrupt routine sets done
to<00:32:29.279><c> one</c>

00:32:30.149 --> 00:32:30.159 align:start position:0%
to one
 

00:32:30.159 --> 00:32:32.870 align:start position:0%
to one
but<00:32:30.399><c> if</c><00:32:30.480><c> we</c><00:32:30.640><c> hold</c><00:32:30.799><c> this</c><00:32:31.120><c> lock</c><00:32:32.080><c> for</c><00:32:32.240><c> this</c><00:32:32.480><c> entire</c>

00:32:32.870 --> 00:32:32.880 align:start position:0%
but if we hold this lock for this entire
 

00:32:32.880 --> 00:32:33.909 align:start position:0%
but if we hold this lock for this entire
sequence

00:32:33.909 --> 00:32:33.919 align:start position:0%
sequence
 

00:32:33.919 --> 00:32:35.750 align:start position:0%
sequence
the<00:32:34.080><c> init</c><00:32:34.640><c> the</c><00:32:34.799><c> interrupt</c><00:32:35.120><c> routine</c><00:32:35.440><c> also</c>

00:32:35.750 --> 00:32:35.760 align:start position:0%
the init the interrupt routine also
 

00:32:35.760 --> 00:32:37.990 align:start position:0%
the init the interrupt routine also
needs<00:32:35.919><c> to</c><00:32:36.080><c> lock</c><00:32:36.640><c> um</c><00:32:36.960><c> and</c><00:32:37.120><c> so</c><00:32:37.360><c> it</c><00:32:37.440><c> will</c><00:32:37.600><c> sit</c><00:32:37.760><c> here</c>

00:32:37.990 --> 00:32:38.000 align:start position:0%
needs to lock um and so it will sit here
 

00:32:38.000 --> 00:32:39.509 align:start position:0%
needs to lock um and so it will sit here
spinning<00:32:38.320><c> waiting</c><00:32:38.559><c> for</c><00:32:38.720><c> the</c><00:32:38.880><c> lock</c>

00:32:39.509 --> 00:32:39.519 align:start position:0%
spinning waiting for the lock
 

00:32:39.519 --> 00:32:42.630 align:start position:0%
spinning waiting for the lock
because<00:32:40.399><c> um</c><00:32:41.039><c> we</c><00:32:41.200><c> hold</c><00:32:41.440><c> the</c><00:32:41.600><c> lock</c><00:32:42.240><c> and</c><00:32:42.399><c> aren't</c>

00:32:42.630 --> 00:32:42.640 align:start position:0%
because um we hold the lock and aren't
 

00:32:42.640 --> 00:32:43.509 align:start position:0%
because um we hold the lock and aren't
going<00:32:42.720><c> to</c><00:32:42.799><c> release</c><00:32:43.200><c> it</c>

00:32:43.509 --> 00:32:43.519 align:start position:0%
going to release it
 

00:32:43.519 --> 00:32:45.590 align:start position:0%
going to release it
until<00:32:43.840><c> done</c><00:32:44.080><c> is</c><00:32:44.240><c> set</c><00:32:44.720><c> but</c><00:32:44.880><c> done</c><00:32:45.120><c> can</c><00:32:45.279><c> only</c><00:32:45.440><c> be</c>

00:32:45.590 --> 00:32:45.600 align:start position:0%
until done is set but done can only be
 

00:32:45.600 --> 00:32:47.350 align:start position:0%
until done is set but done can only be
set<00:32:45.760><c> when</c><00:32:45.919><c> the</c><00:32:46.000><c> interrupt</c><00:32:46.399><c> routine</c>

00:32:47.350 --> 00:32:47.360 align:start position:0%
set when the interrupt routine
 

00:32:47.360 --> 00:32:49.590 align:start position:0%
set when the interrupt routine
is<00:32:47.600><c> actually</c><00:32:47.840><c> able</c><00:32:48.000><c> to</c><00:32:48.080><c> get</c><00:32:48.240><c> the</c><00:32:48.399><c> lock</c><00:32:48.960><c> so</c><00:32:49.360><c> we</c>

00:32:49.590 --> 00:32:49.600 align:start position:0%
is actually able to get the lock so we
 

00:32:49.600 --> 00:32:53.590 align:start position:0%
is actually able to get the lock so we
cannot<00:32:50.000><c> just</c><00:32:50.240><c> simply</c><00:32:50.640><c> hold</c><00:32:50.880><c> the</c><00:32:51.039><c> lock</c>

00:32:53.590 --> 00:32:53.600 align:start position:0%
 
 

00:32:53.600 --> 00:32:56.070 align:start position:0%
 
across<00:32:54.000><c> the</c><00:32:54.480><c> entire</c><00:32:55.120><c> sequence</c><00:32:55.519><c> of</c><00:32:55.679><c> sending</c>

00:32:56.070 --> 00:32:56.080 align:start position:0%
across the entire sequence of sending
 

00:32:56.080 --> 00:33:00.070 align:start position:0%
across the entire sequence of sending
each<00:32:56.399><c> character</c>

00:33:00.070 --> 00:33:00.080 align:start position:0%
 
 

00:33:00.080 --> 00:33:02.070 align:start position:0%
 
all<00:33:00.240><c> right</c><00:33:00.480><c> so</c><00:33:01.120><c> another</c><00:33:01.440><c> possibility</c><00:33:02.000><c> you</c>

00:33:02.070 --> 00:33:02.080 align:start position:0%
all right so another possibility you
 

00:33:02.080 --> 00:33:03.190 align:start position:0%
all right so another possibility you
know<00:33:02.240><c> the</c><00:33:02.640><c> sort</c><00:33:02.799><c> of</c>

00:33:03.190 --> 00:33:03.200 align:start position:0%
know the sort of
 

00:33:03.200 --> 00:33:05.590 align:start position:0%
know the sort of
nasty<00:33:03.679><c> problem</c><00:33:04.000><c> here</c><00:33:04.240><c> is</c><00:33:04.399><c> that</c><00:33:04.640><c> we</c><00:33:05.039><c> the</c><00:33:05.360><c> you</c>

00:33:05.590 --> 00:33:05.600 align:start position:0%
nasty problem here is that we the you
 

00:33:05.600 --> 00:33:07.110 align:start position:0%
nasty problem here is that we the you
are<00:33:05.760><c> right</c><00:33:05.919><c> was</c><00:33:06.159><c> holding</c><00:33:06.480><c> a</c><00:33:06.559><c> lock</c>

00:33:07.110 --> 00:33:07.120 align:start position:0%
are right was holding a lock
 

00:33:07.120 --> 00:33:09.190 align:start position:0%
are right was holding a lock
at<00:33:07.279><c> the</c><00:33:07.440><c> time</c><00:33:07.679><c> when</c><00:33:07.919><c> it</c><00:33:08.159><c> expected</c><00:33:08.960><c> the</c>

00:33:09.190 --> 00:33:09.200 align:start position:0%
at the time when it expected the
 

00:33:09.200 --> 00:33:10.950 align:start position:0%
at the time when it expected the
interrupt<00:33:09.600><c> routine</c><00:33:10.000><c> to</c><00:33:10.159><c> execute</c>

00:33:10.950 --> 00:33:10.960 align:start position:0%
interrupt routine to execute
 

00:33:10.960 --> 00:33:13.110 align:start position:0%
interrupt routine to execute
which<00:33:11.200><c> is</c><00:33:11.519><c> right</c><00:33:11.760><c> here</c><00:33:12.000><c> the</c><00:33:12.159><c> only</c><00:33:12.399><c> time</c><00:33:12.640><c> when</c>

00:33:13.110 --> 00:33:13.120 align:start position:0%
which is right here the only time when
 

00:33:13.120 --> 00:33:14.549 align:start position:0%
which is right here the only time when
we<00:33:13.360><c> really</c><00:33:13.600><c> need</c><00:33:13.760><c> the</c><00:33:13.840><c> interrupt</c><00:33:14.159><c> routine</c><00:33:14.480><c> to</c>

00:33:14.549 --> 00:33:14.559 align:start position:0%
we really need the interrupt routine to
 

00:33:14.559 --> 00:33:15.669 align:start position:0%
we really need the interrupt routine to
execute<00:33:15.039><c> is</c>

00:33:15.669 --> 00:33:15.679 align:start position:0%
execute is
 

00:33:15.679 --> 00:33:17.509 align:start position:0%
execute is
is<00:33:15.919><c> at</c><00:33:16.000><c> this</c><00:33:16.240><c> point</c><00:33:16.480><c> here</c><00:33:17.039><c> otherwise</c><00:33:17.360><c> it's</c>

00:33:17.509 --> 00:33:17.519 align:start position:0%
is at this point here otherwise it's
 

00:33:17.519 --> 00:33:18.710 align:start position:0%
is at this point here otherwise it's
okay<00:33:17.760><c> to</c><00:33:17.840><c> hold</c><00:33:18.080><c> the</c><00:33:18.159><c> lock</c>

00:33:18.710 --> 00:33:18.720 align:start position:0%
okay to hold the lock
 

00:33:18.720 --> 00:33:20.710 align:start position:0%
okay to hold the lock
so<00:33:18.880><c> another</c><00:33:19.200><c> possibility</c><00:33:19.840><c> would</c><00:33:20.000><c> be</c><00:33:20.159><c> to</c><00:33:20.480><c> yeah</c>

00:33:20.710 --> 00:33:20.720 align:start position:0%
so another possibility would be to yeah
 

00:33:20.720 --> 00:33:22.230 align:start position:0%
so another possibility would be to yeah
acquire<00:33:21.120><c> the</c><00:33:21.200><c> lock</c><00:33:21.440><c> at</c><00:33:21.519><c> the</c><00:33:21.679><c> beginning</c>

00:33:22.230 --> 00:33:22.240 align:start position:0%
acquire the lock at the beginning
 

00:33:22.240 --> 00:33:25.110 align:start position:0%
acquire the lock at the beginning
because<00:33:22.399><c> we</c><00:33:22.559><c> need</c><00:33:22.799><c> to</c><00:33:23.200><c> protect</c><00:33:23.679><c> our</c><00:33:24.000><c> access</c><00:33:24.399><c> to</c>

00:33:25.110 --> 00:33:25.120 align:start position:0%
because we need to protect our access to
 

00:33:25.120 --> 00:33:25.430 align:start position:0%
because we need to protect our access to
just

00:33:25.430 --> 00:33:25.440 align:start position:0%
just
 

00:33:25.440 --> 00:33:32.549 align:start position:0%
just
this<00:33:25.679><c> shared</c><00:33:25.919><c> variable</c><00:33:26.399><c> done</c><00:33:27.600><c> but</c><00:33:27.760><c> release</c><00:33:28.240><c> it</c>

00:33:32.549 --> 00:33:32.559 align:start position:0%
 
 

00:33:32.559 --> 00:33:35.190 align:start position:0%
 
before<00:33:32.799><c> the</c><00:33:32.960><c> call</c><00:33:33.120><c> to</c><00:33:33.279><c> sleep</c><00:33:34.480><c> that</c><00:33:34.640><c> gives</c><00:33:35.039><c> the</c>

00:33:35.190 --> 00:33:35.200 align:start position:0%
before the call to sleep that gives the
 

00:33:35.200 --> 00:33:36.950 align:start position:0%
before the call to sleep that gives the
interrupt<00:33:35.440><c> routine</c><00:33:35.840><c> a</c><00:33:35.919><c> chance</c><00:33:36.159><c> to</c><00:33:36.480><c> execute</c>

00:33:36.950 --> 00:33:36.960 align:start position:0%
interrupt routine a chance to execute
 

00:33:36.960 --> 00:33:38.230 align:start position:0%
interrupt routine a chance to execute
and<00:33:37.200><c> set</c><00:33:37.440><c> done</c><00:33:37.600><c> to</c><00:33:37.679><c> one</c>

00:33:38.230 --> 00:33:38.240 align:start position:0%
and set done to one
 

00:33:38.240 --> 00:33:40.950 align:start position:0%
and set done to one
and<00:33:38.320><c> then</c><00:33:38.480><c> we'll</c><00:33:38.640><c> just</c><00:33:38.799><c> reacquire</c><00:33:39.440><c> it</c><00:33:40.640><c> after</c>

00:33:40.950 --> 00:33:40.960 align:start position:0%
and then we'll just reacquire it after
 

00:33:40.960 --> 00:33:43.430 align:start position:0%
and then we'll just reacquire it after
sleep<00:33:41.279><c> returns</c>

00:33:43.430 --> 00:33:43.440 align:start position:0%
sleep returns
 

00:33:43.440 --> 00:33:44.789 align:start position:0%
sleep returns
so<00:33:43.600><c> that</c><00:33:43.760><c> when</c><00:33:43.919><c> we</c><00:33:44.000><c> go</c><00:33:44.159><c> back</c><00:33:44.320><c> up</c><00:33:44.399><c> to</c><00:33:44.480><c> the</c><00:33:44.640><c> top</c>

00:33:44.789 --> 00:33:44.799 align:start position:0%
so that when we go back up to the top
 

00:33:44.799 --> 00:33:46.230 align:start position:0%
so that when we go back up to the top
and<00:33:44.960><c> check</c><00:33:45.200><c> done</c><00:33:45.360><c> again</c><00:33:45.600><c> we</c><00:33:45.760><c> have</c><00:33:45.840><c> the</c><00:33:46.000><c> lock</c>

00:33:46.230 --> 00:33:46.240 align:start position:0%
and check done again we have the lock
 

00:33:46.240 --> 00:33:50.070 align:start position:0%
and check done again we have the lock
again

00:33:50.070 --> 00:33:50.080 align:start position:0%
 
 

00:33:50.080 --> 00:33:52.149 align:start position:0%
 
all<00:33:50.159><c> right</c><00:33:50.399><c> so</c><00:33:51.039><c> let</c><00:33:51.200><c> me</c><00:33:51.360><c> actually</c><00:33:51.600><c> modify</c><00:33:52.000><c> my</c>

00:33:52.149 --> 00:33:52.159 align:start position:0%
all right so let me actually modify my
 

00:33:52.159 --> 00:33:59.029 align:start position:0%
all right so let me actually modify my
driver<00:33:52.559><c> to</c><00:33:52.640><c> do</c><00:33:52.799><c> this</c>

00:33:59.029 --> 00:33:59.039 align:start position:0%
 
 

00:33:59.039 --> 00:34:06.070 align:start position:0%
 
we'll<00:33:59.279><c> see</c><00:34:01.760><c> see</c><00:34:01.919><c> what</c><00:34:02.000><c> the</c><00:34:02.080><c> consequences</c><00:34:04.840><c> are</c>

00:34:06.070 --> 00:34:06.080 align:start position:0%
we'll see see what the consequences are
 

00:34:06.080 --> 00:34:09.109 align:start position:0%
we'll see see what the consequences are
all<00:34:06.159><c> right</c><00:34:06.720><c> um</c><00:34:08.079><c> so</c><00:34:08.240><c> the</c><00:34:08.399><c> sleep</c><00:34:08.720><c> we're</c><00:34:08.879><c> talking</c>

00:34:09.109 --> 00:34:09.119 align:start position:0%
all right um so the sleep we're talking
 

00:34:09.119 --> 00:34:09.750 align:start position:0%
all right um so the sleep we're talking
about

00:34:09.750 --> 00:34:09.760 align:start position:0%
about
 

00:34:09.760 --> 00:34:11.750 align:start position:0%
about
where<00:34:09.919><c> we</c><00:34:10.079><c> wanna</c><00:34:10.800><c> you</c><00:34:10.960><c> can</c><00:34:11.040><c> see</c><00:34:11.280><c> this</c><00:34:11.440><c> code</c>

00:34:11.750 --> 00:34:11.760 align:start position:0%
where we wanna you can see this code
 

00:34:11.760 --> 00:34:13.109 align:start position:0%
where we wanna you can see this code
actually<00:34:12.000><c> does</c>

00:34:13.109 --> 00:34:13.119 align:start position:0%
actually does
 

00:34:13.119 --> 00:34:14.470 align:start position:0%
actually does
acquire<00:34:13.440><c> the</c><00:34:13.599><c> lock</c><00:34:13.760><c> at</c><00:34:13.839><c> the</c><00:34:13.919><c> very</c><00:34:14.240><c> very</c>

00:34:14.470 --> 00:34:14.480 align:start position:0%
acquire the lock at the very very
 

00:34:14.480 --> 00:34:16.470 align:start position:0%
acquire the lock at the very very
beginning<00:34:14.800><c> and</c><00:34:14.960><c> release</c><00:34:15.200><c> it</c><00:34:15.359><c> at</c><00:34:15.440><c> the</c><00:34:15.599><c> end</c>

00:34:16.470 --> 00:34:16.480 align:start position:0%
beginning and release it at the end
 

00:34:16.480 --> 00:34:18.389 align:start position:0%
beginning and release it at the end
and<00:34:16.560><c> the</c><00:34:16.639><c> interrupt</c><00:34:17.040><c> routine</c><00:34:17.359><c> also</c><00:34:17.679><c> acquires</c>

00:34:18.389 --> 00:34:18.399 align:start position:0%
and the interrupt routine also acquires
 

00:34:18.399 --> 00:34:20.950 align:start position:0%
and the interrupt routine also acquires
and<00:34:18.560><c> releases</c><00:34:19.359><c> and</c><00:34:19.520><c> the</c><00:34:19.599><c> proposal</c><00:34:20.240><c> is</c>

00:34:20.950 --> 00:34:20.960 align:start position:0%
and releases and the proposal is
 

00:34:20.960 --> 00:34:24.230 align:start position:0%
and releases and the proposal is
that<00:34:21.760><c> we</c><00:34:21.919><c> do</c><00:34:22.079><c> two</c><00:34:22.240><c> things</c><00:34:22.560><c> one</c><00:34:22.800><c> is</c>

00:34:24.230 --> 00:34:24.240 align:start position:0%
that we do two things one is
 

00:34:24.240 --> 00:34:27.030 align:start position:0%
that we do two things one is
um<00:34:25.200><c> we're</c><00:34:25.359><c> gonna</c><00:34:25.919><c> what</c><00:34:26.079><c> we're</c><00:34:26.320><c> exploring</c><00:34:26.879><c> is</c>

00:34:27.030 --> 00:34:27.040 align:start position:0%
um we're gonna what we're exploring is
 

00:34:27.040 --> 00:34:29.430 align:start position:0%
um we're gonna what we're exploring is
why<00:34:27.359><c> my</c><00:34:27.679><c> broken</c><00:34:28.079><c> sleep</c><00:34:28.480><c> idea</c>

00:34:29.430 --> 00:34:29.440 align:start position:0%
why my broken sleep idea
 

00:34:29.440 --> 00:34:33.109 align:start position:0%
why my broken sleep idea
that<00:34:31.520><c> only</c><00:34:31.839><c> takes</c><00:34:32.079><c> a</c><00:34:32.159><c> single</c><00:34:32.480><c> argument</c>

00:34:33.109 --> 00:34:33.119 align:start position:0%
that only takes a single argument
 

00:34:33.119 --> 00:34:35.589 align:start position:0%
that only takes a single argument
why<00:34:33.359><c> that</c><00:34:33.520><c> doesn't</c><00:34:33.760><c> work</c><00:34:34.159><c> so</c><00:34:35.119><c> the</c><00:34:35.280><c> idea</c><00:34:35.520><c> is</c>

00:34:35.589 --> 00:34:35.599 align:start position:0%
why that doesn't work so the idea is
 

00:34:35.599 --> 00:34:36.950 align:start position:0%
why that doesn't work so the idea is
that<00:34:35.839><c> in</c><00:34:36.000><c> order</c><00:34:36.159><c> to</c><00:34:36.240><c> make</c><00:34:36.320><c> the</c><00:34:36.399><c> locking</c><00:34:36.720><c> work</c>

00:34:36.950 --> 00:34:36.960 align:start position:0%
that in order to make the locking work
 

00:34:36.960 --> 00:34:38.149 align:start position:0%
that in order to make the locking work
out<00:34:37.119><c> right</c><00:34:37.280><c> we're</c><00:34:37.440><c> going</c><00:34:37.520><c> to</c><00:34:37.599><c> call</c><00:34:37.760><c> broken</c>

00:34:38.149 --> 00:34:38.159 align:start position:0%
out right we're going to call broken
 

00:34:38.159 --> 00:34:39.109 align:start position:0%
out right we're going to call broken
sleep<00:34:38.399><c> all</c><00:34:38.560><c> right</c><00:34:38.720><c> but</c><00:34:38.879><c> we're</c><00:34:38.960><c> going</c><00:34:39.040><c> to</c>

00:34:39.109 --> 00:34:39.119 align:start position:0%
sleep all right but we're going to
 

00:34:39.119 --> 00:34:42.470 align:start position:0%
sleep all right but we're going to
release

00:34:42.470 --> 00:34:42.480 align:start position:0%
 
 

00:34:42.480 --> 00:34:45.990 align:start position:0%
 
the<00:34:42.639><c> lock</c><00:34:42.960><c> here</c><00:34:44.480><c> and</c><00:34:44.720><c> reacquire</c><00:34:45.440><c> it</c>

00:34:45.990 --> 00:34:46.000 align:start position:0%
the lock here and reacquire it
 

00:34:46.000 --> 00:34:53.669 align:start position:0%
the lock here and reacquire it
after<00:34:46.320><c> sleep</c><00:34:47.119><c> returns</c>

00:34:53.669 --> 00:34:53.679 align:start position:0%
 
 

00:34:53.679 --> 00:34:55.349 align:start position:0%
 
and<00:34:53.839><c> then</c><00:34:54.000><c> literally</c><00:34:54.399><c> all</c><00:34:54.480><c> this</c><00:34:54.720><c> broken</c><00:34:55.040><c> sleep</c>

00:34:55.349 --> 00:34:55.359 align:start position:0%
and then literally all this broken sleep
 

00:34:55.359 --> 00:34:57.829 align:start position:0%
and then literally all this broken sleep
does<00:34:56.560><c> is</c><00:34:56.720><c> exactly</c><00:34:57.119><c> what</c><00:34:57.280><c> i</c><00:34:57.359><c> wrote</c><00:34:57.599><c> on</c><00:34:57.760><c> my</c>

00:34:57.829 --> 00:34:57.839 align:start position:0%
does is exactly what i wrote on my
 

00:34:57.839 --> 00:35:00.790 align:start position:0%
does is exactly what i wrote on my
little<00:34:58.079><c> white</c><00:34:58.320><c> board</c><00:34:58.640><c> namely</c><00:34:58.960><c> it</c><00:34:59.119><c> sets</c><00:34:59.520><c> the</c>

00:35:00.790 --> 00:35:00.800 align:start position:0%
little white board namely it sets the
 

00:35:00.800 --> 00:35:04.230 align:start position:0%
little white board namely it sets the
state<00:35:01.200><c> to</c><00:35:01.359><c> sleeping</c><00:35:01.839><c> it</c><00:35:02.000><c> sets</c><00:35:02.320><c> the</c><00:35:02.480><c> channel</c><00:35:03.040><c> to</c>

00:35:04.230 --> 00:35:04.240 align:start position:0%
state to sleeping it sets the channel to
 

00:35:04.240 --> 00:35:09.829 align:start position:0%
state to sleeping it sets the channel to
this<00:35:04.480><c> tx</c><00:35:05.200><c> chan</c><00:35:05.520><c> argument</c><00:35:06.560><c> then</c><00:35:06.720><c> i</c><00:35:06.800><c> call</c><00:35:07.040><c> switch</c>

00:35:09.829 --> 00:35:09.839 align:start position:0%
 
 

00:35:09.839 --> 00:35:20.950 align:start position:0%
 
all<00:35:09.920><c> right</c><00:35:11.040><c> let's</c><00:35:11.280><c> see</c><00:35:11.440><c> what</c><00:35:14.839><c> happens</c>

00:35:20.950 --> 00:35:20.960 align:start position:0%
 
 

00:35:20.960 --> 00:35:23.670 align:start position:0%
 
oh<00:35:21.359><c> wow</c><00:35:21.599><c> look</c><00:35:21.760><c> at</c><00:35:21.839><c> that</c><00:35:22.800><c> um</c><00:35:23.200><c> it</c><00:35:23.359><c> actually</c>

00:35:23.670 --> 00:35:23.680 align:start position:0%
oh wow look at that um it actually
 

00:35:23.680 --> 00:35:24.390 align:start position:0%
oh wow look at that um it actually
managed<00:35:24.079><c> to</c>

00:35:24.390 --> 00:35:24.400 align:start position:0%
managed to
 

00:35:24.400 --> 00:35:27.030 align:start position:0%
managed to
init<00:35:24.960><c> is</c><00:35:25.200><c> printing</c><00:35:25.599><c> out</c><00:35:25.920><c> its</c><00:35:26.079><c> init</c><00:35:26.560><c> starting</c>

00:35:27.030 --> 00:35:27.040 align:start position:0%
init is printing out its init starting
 

00:35:27.040 --> 00:35:28.710 align:start position:0%
init is printing out its init starting
message<00:35:27.440><c> and</c><00:35:27.520><c> it</c><00:35:27.680><c> actually</c><00:35:28.000><c> managed</c><00:35:28.320><c> to</c><00:35:28.480><c> write</c>

00:35:28.710 --> 00:35:28.720 align:start position:0%
message and it actually managed to write
 

00:35:28.720 --> 00:35:30.550 align:start position:0%
message and it actually managed to write
a<00:35:28.800><c> few</c><00:35:29.040><c> characters</c><00:35:29.920><c> and</c><00:35:30.000><c> now</c><00:35:30.160><c> it</c><00:35:30.240><c> seems</c><00:35:30.480><c> to</c>

00:35:30.550 --> 00:35:30.560 align:start position:0%
a few characters and now it seems to
 

00:35:30.560 --> 00:35:33.109 align:start position:0%
a few characters and now it seems to
have<00:35:30.720><c> hung</c>

00:35:33.109 --> 00:35:33.119 align:start position:0%
 
 

00:35:33.119 --> 00:35:34.710 align:start position:0%
 
and<00:35:33.280><c> it</c><00:35:33.440><c> turns</c><00:35:33.760><c> out</c><00:35:33.839><c> that</c><00:35:34.000><c> if</c><00:35:34.160><c> i</c><00:35:34.320><c> type</c><00:35:34.640><c> a</c>

00:35:34.710 --> 00:35:34.720 align:start position:0%
and it turns out that if i type a
 

00:35:34.720 --> 00:35:38.470 align:start position:0%
and it turns out that if i type a
character<00:35:35.359><c> i'm</c><00:35:35.440><c> going</c><00:35:35.520><c> to</c><00:35:35.599><c> type</c><00:35:35.839><c> a</c><00:35:36.000><c> period</c>

00:35:38.470 --> 00:35:38.480 align:start position:0%
character i'm going to type a period
 

00:35:38.480 --> 00:35:42.230 align:start position:0%
character i'm going to type a period
by<00:35:38.640><c> typing</c><00:35:39.520><c> period</c>

00:35:42.230 --> 00:35:42.240 align:start position:0%
 
 

00:35:42.240 --> 00:35:45.510 align:start position:0%
 
output<00:35:42.960><c> restarts</c><00:35:44.640><c> uh</c>

00:35:45.510 --> 00:35:45.520 align:start position:0%
output restarts uh
 

00:35:45.520 --> 00:35:47.589 align:start position:0%
output restarts uh
maybe<00:35:45.839><c> make</c><00:35:46.000><c> some</c><00:35:46.160><c> more</c><00:35:46.400><c> output</c><00:35:46.640><c> i</c><00:35:46.720><c> run</c><00:35:46.960><c> ls</c>

00:35:47.589 --> 00:35:47.599 align:start position:0%
maybe make some more output i run ls
 

00:35:47.599 --> 00:35:48.950 align:start position:0%
maybe make some more output i run ls
oops

00:35:48.950 --> 00:35:48.960 align:start position:0%
oops
 

00:35:48.960 --> 00:35:52.390 align:start position:0%
oops
ls<00:35:49.440><c> also</c><00:35:51.280><c> emitted</c><00:35:51.680><c> a</c><00:35:51.760><c> few</c><00:35:51.920><c> characters</c><00:35:52.320><c> and</c>

00:35:52.390 --> 00:35:52.400 align:start position:0%
ls also emitted a few characters and
 

00:35:52.400 --> 00:35:54.630 align:start position:0%
ls also emitted a few characters and
then<00:35:52.640><c> stopped</c><00:35:53.119><c> but</c><00:35:53.280><c> if</c><00:35:53.440><c> i</c><00:35:53.599><c> type</c><00:35:53.920><c> something</c><00:35:54.320><c> and</c>

00:35:54.630 --> 00:35:54.640 align:start position:0%
then stopped but if i type something and
 

00:35:54.640 --> 00:35:54.950 align:start position:0%
then stopped but if i type something and
take

00:35:54.950 --> 00:35:54.960 align:start position:0%
take
 

00:35:54.960 --> 00:35:59.190 align:start position:0%
take
i'm<00:35:55.119><c> going</c><00:35:55.200><c> to</c><00:35:55.280><c> type</c><00:35:55.599><c> x</c><00:35:57.040><c> it'll</c><00:35:57.440><c> restart</c>

00:35:59.190 --> 00:35:59.200 align:start position:0%
i'm going to type x it'll restart
 

00:35:59.200 --> 00:36:03.589 align:start position:0%
i'm going to type x it'll restart
ls<00:35:59.680><c> and</c><00:35:59.760><c> it'll</c><00:36:00.000><c> keep</c><00:36:00.240><c> going</c><00:36:02.079><c> so</c>

00:36:03.589 --> 00:36:03.599 align:start position:0%
ls and it'll keep going so
 

00:36:03.599 --> 00:36:08.069 align:start position:0%
ls and it'll keep going so
um<00:36:05.040><c> what</c><00:36:05.200><c> do</c><00:36:05.280><c> we</c><00:36:05.359><c> think</c><00:36:05.520><c> is</c><00:36:05.680><c> going</c><00:36:05.839><c> on</c><00:36:06.079><c> here</c>

00:36:08.069 --> 00:36:08.079 align:start position:0%
um what do we think is going on here
 

00:36:08.079 --> 00:36:20.950 align:start position:0%
um what do we think is going on here
somebody<00:36:08.400><c> want</c><00:36:08.560><c> to</c><00:36:08.640><c> propose</c><00:36:08.960><c> a</c><00:36:10.839><c> theory</c>

00:36:20.950 --> 00:36:20.960 align:start position:0%
 
 

00:36:20.960 --> 00:36:22.310 align:start position:0%
 
the<00:36:21.200><c> problem</c><00:36:21.440><c> definitely</c><00:36:21.760><c> has</c><00:36:21.839><c> to</c><00:36:22.000><c> do</c><00:36:22.160><c> with</c>

00:36:22.310 --> 00:36:22.320 align:start position:0%
the problem definitely has to do with
 

00:36:22.320 --> 00:36:24.150 align:start position:0%
the problem definitely has to do with
the<00:36:22.400><c> code</c><00:36:22.640><c> that</c><00:36:22.800><c> i</c><00:36:22.960><c> just</c><00:36:23.200><c> changed</c>

00:36:24.150 --> 00:36:24.160 align:start position:0%
the code that i just changed
 

00:36:24.160 --> 00:36:33.750 align:start position:0%
the code that i just changed
so<00:36:24.480><c> what's</c><00:36:24.839><c> happening</c>

00:36:33.750 --> 00:36:33.760 align:start position:0%
 
 

00:36:33.760 --> 00:36:36.310 align:start position:0%
 
all<00:36:33.920><c> right</c><00:36:34.240><c> so</c><00:36:34.880><c> what's</c><00:36:35.119><c> going</c><00:36:35.359><c> on</c><00:36:35.599><c> here</c><00:36:36.079><c> is</c>

00:36:36.310 --> 00:36:36.320 align:start position:0%
all right so what's going on here is
 

00:36:36.320 --> 00:36:37.510 align:start position:0%
all right so what's going on here is
that

00:36:37.510 --> 00:36:37.520 align:start position:0%
that
 

00:36:37.520 --> 00:36:41.829 align:start position:0%
that
my<00:36:37.680><c> new</c><00:36:37.920><c> code</c><00:36:38.839><c> releases</c><00:36:40.480><c> the</c><00:36:40.640><c> lock</c>

00:36:41.829 --> 00:36:41.839 align:start position:0%
my new code releases the lock
 

00:36:41.839 --> 00:36:43.750 align:start position:0%
my new code releases the lock
releases<00:36:42.320><c> this</c><00:36:42.480><c> lock</c><00:36:42.800><c> at</c><00:36:42.880><c> this</c><00:36:43.119><c> point</c><00:36:43.680><c> and</c>

00:36:43.750 --> 00:36:43.760 align:start position:0%
releases this lock at this point and
 

00:36:43.760 --> 00:36:46.630 align:start position:0%
releases this lock at this point and
then<00:36:44.000><c> right</c><00:36:44.400><c> here</c>

00:36:46.630 --> 00:36:46.640 align:start position:0%
then right here
 

00:36:46.640 --> 00:36:49.510 align:start position:0%
then right here
um<00:36:47.839><c> the</c><00:36:48.079><c> interrupt</c><00:36:48.480><c> happens</c><00:36:48.960><c> because</c><00:36:49.200><c> as</c><00:36:49.280><c> soon</c>

00:36:49.510 --> 00:36:49.520 align:start position:0%
um the interrupt happens because as soon
 

00:36:49.520 --> 00:36:50.950 align:start position:0%
um the interrupt happens because as soon
as<00:36:49.599><c> you</c><00:36:49.680><c> release</c><00:36:50.079><c> a</c><00:36:50.160><c> lock</c>

00:36:50.950 --> 00:36:50.960 align:start position:0%
as you release a lock
 

00:36:50.960 --> 00:36:52.470 align:start position:0%
as you release a lock
first<00:36:51.200><c> of</c><00:36:51.359><c> all</c><00:36:51.680><c> the</c><00:36:52.000><c> interrupts</c><00:36:52.400><c> are</c>

00:36:52.470 --> 00:36:52.480 align:start position:0%
first of all the interrupts are
 

00:36:52.480 --> 00:36:54.230 align:start position:0%
first of all the interrupts are
re-enabled<00:36:52.880><c> so</c><00:36:53.119><c> on</c><00:36:53.200><c> this</c><00:36:53.359><c> cpu</c><00:36:53.839><c> interrupts</c>

00:36:54.230 --> 00:36:54.240 align:start position:0%
re-enabled so on this cpu interrupts
 

00:36:54.240 --> 00:36:55.430 align:start position:0%
re-enabled so on this cpu interrupts
could<00:36:54.400><c> happen</c><00:36:54.640><c> this</c><00:36:54.800><c> is</c><00:36:54.880><c> a</c><00:36:54.960><c> multi-core</c>

00:36:55.430 --> 00:36:55.440 align:start position:0%
could happen this is a multi-core
 

00:36:55.440 --> 00:36:56.630 align:start position:0%
could happen this is a multi-core
machine<00:36:55.680><c> so</c><00:36:55.839><c> actually</c><00:36:56.079><c> interrupts</c><00:36:56.480><c> can</c><00:36:56.560><c> be</c>

00:36:56.630 --> 00:36:56.640 align:start position:0%
machine so actually interrupts can be
 

00:36:56.640 --> 00:36:57.270 align:start position:0%
machine so actually interrupts can be
taken

00:36:57.270 --> 00:36:57.280 align:start position:0%
taken
 

00:36:57.280 --> 00:37:00.870 align:start position:0%
taken
on<00:36:58.880><c> any</c><00:36:59.280><c> core</c>

00:37:00.870 --> 00:37:00.880 align:start position:0%
on any core
 

00:37:00.880 --> 00:37:03.990 align:start position:0%
on any core
so<00:37:01.440><c> almost</c><00:37:01.920><c> certainly</c><00:37:03.040><c> what's</c><00:37:03.359><c> going</c><00:37:03.599><c> on</c><00:37:03.839><c> at</c>

00:37:03.990 --> 00:37:04.000 align:start position:0%
so almost certainly what's going on at
 

00:37:04.000 --> 00:37:05.589 align:start position:0%
so almost certainly what's going on at
this<00:37:04.240><c> point</c><00:37:04.560><c> that</c><00:37:04.640><c> i've</c><00:37:04.800><c> marked</c><00:37:05.040><c> in</c><00:37:05.119><c> the</c><00:37:05.280><c> code</c>

00:37:05.589 --> 00:37:05.599 align:start position:0%
this point that i've marked in the code
 

00:37:05.599 --> 00:37:05.990 align:start position:0%
this point that i've marked in the code
is<00:37:05.680><c> that</c>

00:37:05.990 --> 00:37:06.000 align:start position:0%
is that
 

00:37:06.000 --> 00:37:09.270 align:start position:0%
is that
on<00:37:06.320><c> some</c><00:37:06.560><c> other</c><00:37:06.880><c> core</c><00:37:08.160><c> the</c><00:37:08.640><c> the</c><00:37:08.800><c> uart</c>

00:37:09.270 --> 00:37:09.280 align:start position:0%
on some other core the the uart
 

00:37:09.280 --> 00:37:09.990 align:start position:0%
on some other core the the uart
interrupt

00:37:09.990 --> 00:37:10.000 align:start position:0%
interrupt
 

00:37:10.000 --> 00:37:14.150 align:start position:0%
interrupt
is<00:37:10.320><c> executing</c><00:37:11.520><c> and</c><00:37:11.680><c> it's</c><00:37:12.000><c> sitting</c><00:37:12.320><c> in</c><00:37:12.480><c> a</c><00:37:12.640><c> choir</c>

00:37:14.150 --> 00:37:14.160 align:start position:0%
is executing and it's sitting in a choir
 

00:37:14.160 --> 00:37:17.589 align:start position:0%
is executing and it's sitting in a choir
waiting<00:37:14.400><c> for</c><00:37:14.560><c> this</c><00:37:14.880><c> lock</c><00:37:15.760><c> on</c><00:37:15.920><c> some</c><00:37:16.079><c> other</c><00:37:16.400><c> core</c>

00:37:17.589 --> 00:37:17.599 align:start position:0%
waiting for this lock on some other core
 

00:37:17.599 --> 00:37:20.710 align:start position:0%
waiting for this lock on some other core
um<00:37:19.200><c> and</c><00:37:19.359><c> so</c><00:37:19.520><c> as</c><00:37:19.599><c> soon</c><00:37:19.839><c> as</c><00:37:19.920><c> i</c><00:37:20.079><c> release</c><00:37:20.400><c> it</c><00:37:20.480><c> that</c>

00:37:20.710 --> 00:37:20.720 align:start position:0%
um and so as soon as i release it that
 

00:37:20.720 --> 00:37:23.829 align:start position:0%
um and so as soon as i release it that
other<00:37:20.960><c> core</c><00:37:21.920><c> is</c><00:37:22.079><c> going</c><00:37:22.160><c> to</c><00:37:22.320><c> acquire</c><00:37:22.800><c> the</c><00:37:22.960><c> lock</c>

00:37:23.829 --> 00:37:23.839 align:start position:0%
other core is going to acquire the lock
 

00:37:23.839 --> 00:37:26.069 align:start position:0%
other core is going to acquire the lock
it's<00:37:24.079><c> going</c><00:37:24.160><c> to</c><00:37:24.400><c> see</c><00:37:24.800><c> that</c><00:37:25.040><c> the</c><00:37:25.359><c> uart</c><00:37:25.839><c> has</c>

00:37:26.069 --> 00:37:26.079 align:start position:0%
it's going to see that the uart has
 

00:37:26.079 --> 00:37:29.270 align:start position:0%
it's going to see that the uart has
completed<00:37:26.560><c> sending</c><00:37:26.880><c> the</c><00:37:27.040><c> character</c>

00:37:29.270 --> 00:37:29.280 align:start position:0%
completed sending the character
 

00:37:29.280 --> 00:37:31.910 align:start position:0%
completed sending the character
and<00:37:29.440><c> it's</c><00:37:29.680><c> going</c><00:37:29.760><c> to</c><00:37:30.000><c> set</c><00:37:30.640><c> this</c><00:37:31.119><c> transmit</c><00:37:31.680><c> done</c>

00:37:31.910 --> 00:37:31.920 align:start position:0%
and it's going to set this transmit done
 

00:37:31.920 --> 00:37:33.670 align:start position:0%
and it's going to set this transmit done
flag<00:37:32.320><c> to</c><00:37:32.480><c> 1</c>

00:37:33.670 --> 00:37:33.680 align:start position:0%
flag to 1
 

00:37:33.680 --> 00:37:35.430 align:start position:0%
flag to 1
which<00:37:33.920><c> is</c><00:37:34.079><c> great</c><00:37:34.800><c> and</c><00:37:34.880><c> then</c><00:37:35.040><c> it's</c><00:37:35.200><c> going</c><00:37:35.280><c> to</c>

00:37:35.430 --> 00:37:35.440 align:start position:0%
which is great and then it's going to
 

00:37:35.440 --> 00:37:36.870 align:start position:0%
which is great and then it's going to
call<00:37:35.680><c> wake</c><00:37:36.000><c> up</c>

00:37:36.870 --> 00:37:36.880 align:start position:0%
call wake up
 

00:37:36.880 --> 00:37:40.230 align:start position:0%
call wake up
on<00:37:37.119><c> tx</c><00:37:37.599><c> chan</c><00:37:38.960><c> which</c><00:37:39.200><c> is</c><00:37:39.359><c> also</c><00:37:39.599><c> fine</c>

00:37:40.230 --> 00:37:40.240 align:start position:0%
on tx chan which is also fine
 

00:37:40.240 --> 00:37:43.270 align:start position:0%
on tx chan which is also fine
except<00:37:42.079><c> because</c><00:37:42.320><c> the</c><00:37:42.560><c> writing</c><00:37:42.880><c> thread</c><00:37:43.200><c> is</c>

00:37:43.270 --> 00:37:43.280 align:start position:0%
except because the writing thread is
 

00:37:43.280 --> 00:37:44.790 align:start position:0%
except because the writing thread is
still<00:37:43.520><c> executing</c>

00:37:44.790 --> 00:37:44.800 align:start position:0%
still executing
 

00:37:44.800 --> 00:37:47.109 align:start position:0%
still executing
between<00:37:45.200><c> the</c><00:37:45.359><c> release</c><00:37:45.680><c> and</c><00:37:45.839><c> the</c><00:37:45.920><c> broken</c><00:37:46.320><c> sleep</c>

00:37:47.109 --> 00:37:47.119 align:start position:0%
between the release and the broken sleep
 

00:37:47.119 --> 00:37:47.990 align:start position:0%
between the release and the broken sleep
the<00:37:47.280><c> writing</c><00:37:47.599><c> thread</c>

00:37:47.990 --> 00:37:48.000 align:start position:0%
the writing thread
 

00:37:48.000 --> 00:37:51.270 align:start position:0%
the writing thread
hasn't<00:37:48.320><c> gone</c><00:37:48.480><c> to</c><00:37:48.640><c> sleep</c><00:37:48.880><c> yet</c><00:37:49.920><c> so</c><00:37:50.480><c> the</c><00:37:50.640><c> wake</c><00:37:50.960><c> up</c>

00:37:51.270 --> 00:37:51.280 align:start position:0%
hasn't gone to sleep yet so the wake up
 

00:37:51.280 --> 00:37:53.670 align:start position:0%
hasn't gone to sleep yet so the wake up
that<00:37:51.440><c> the</c><00:37:51.839><c> interrupt</c><00:37:52.320><c> routine</c><00:37:52.800><c> calls</c><00:37:53.359><c> doesn't</c>

00:37:53.670 --> 00:37:53.680 align:start position:0%
that the interrupt routine calls doesn't
 

00:37:53.680 --> 00:37:54.710 align:start position:0%
that the interrupt routine calls doesn't
actually<00:37:54.000><c> wake</c><00:37:54.240><c> up</c><00:37:54.320><c> any</c>

00:37:54.710 --> 00:37:54.720 align:start position:0%
actually wake up any
 

00:37:54.720 --> 00:37:56.310 align:start position:0%
actually wake up any
anything<00:37:55.119><c> up</c><00:37:55.440><c> because</c><00:37:55.599><c> nothing's</c><00:37:56.000><c> yet</c><00:37:56.160><c> gone</c>

00:37:56.310 --> 00:37:56.320 align:start position:0%
anything up because nothing's yet gone
 

00:37:56.320 --> 00:37:58.150 align:start position:0%
anything up because nothing's yet gone
to<00:37:56.480><c> sleep</c><00:37:56.720><c> on</c><00:37:56.800><c> that</c><00:37:57.040><c> channel</c>

00:37:58.150 --> 00:37:58.160 align:start position:0%
to sleep on that channel
 

00:37:58.160 --> 00:38:02.390 align:start position:0%
to sleep on that channel
and<00:37:58.640><c> and</c><00:37:59.040><c> then</c><00:38:00.240><c> um</c><00:38:00.960><c> the</c><00:38:01.119><c> writing</c><00:38:01.520><c> thread</c><00:38:01.920><c> will</c>

00:38:02.390 --> 00:38:02.400 align:start position:0%
and and then um the writing thread will
 

00:38:02.400 --> 00:38:05.109 align:start position:0%
and and then um the writing thread will
proceed<00:38:03.359><c> to</c><00:38:03.839><c> call</c><00:38:04.160><c> its</c><00:38:04.320><c> broken</c><00:38:04.640><c> sleep</c><00:38:04.960><c> which</c>

00:38:05.109 --> 00:38:05.119 align:start position:0%
proceed to call its broken sleep which
 

00:38:05.119 --> 00:38:06.310 align:start position:0%
proceed to call its broken sleep which
will

00:38:06.310 --> 00:38:06.320 align:start position:0%
will
 

00:38:06.320 --> 00:38:08.710 align:start position:0%
will
you<00:38:06.480><c> know</c><00:38:06.960><c> set</c><00:38:07.119><c> the</c><00:38:07.520><c> state</c><00:38:07.760><c> to</c><00:38:07.920><c> sleeping</c><00:38:08.400><c> and</c>

00:38:08.710 --> 00:38:08.720 align:start position:0%
you know set the state to sleeping and
 

00:38:08.720 --> 00:38:09.990 align:start position:0%
you know set the state to sleeping and
set<00:38:08.960><c> the</c><00:38:09.119><c> sleep</c><00:38:09.440><c> channel</c>

00:38:09.990 --> 00:38:10.000 align:start position:0%
set the sleep channel
 

00:38:10.000 --> 00:38:11.430 align:start position:0%
set the sleep channel
but<00:38:10.160><c> the</c><00:38:10.400><c> interrupt</c><00:38:10.800><c> has</c><00:38:10.960><c> already</c><00:38:11.200><c> happened</c>

00:38:11.430 --> 00:38:11.440 align:start position:0%
but the interrupt has already happened
 

00:38:11.440 --> 00:38:13.109 align:start position:0%
but the interrupt has already happened
and<00:38:11.520><c> the</c><00:38:11.599><c> wake</c><00:38:11.839><c> up</c><00:38:12.000><c> has</c><00:38:12.079><c> already</c><00:38:12.320><c> been</c><00:38:12.560><c> called</c>

00:38:13.109 --> 00:38:13.119 align:start position:0%
and the wake up has already been called
 

00:38:13.119 --> 00:38:16.630 align:start position:0%
and the wake up has already been called
so<00:38:13.359><c> this</c><00:38:13.680><c> sleep</c><00:38:15.680><c> nothing</c><00:38:15.920><c> will</c><00:38:16.079><c> ever</c><00:38:16.320><c> wake</c><00:38:16.560><c> it</c>

00:38:16.630 --> 00:38:16.640 align:start position:0%
so this sleep nothing will ever wake it
 

00:38:16.640 --> 00:38:17.270 align:start position:0%
so this sleep nothing will ever wake it
up

00:38:17.270 --> 00:38:17.280 align:start position:0%
up
 

00:38:17.280 --> 00:38:20.390 align:start position:0%
up
because<00:38:17.520><c> the</c><00:38:17.599><c> wake</c><00:38:17.839><c> up</c><00:38:17.920><c> already</c><00:38:18.240><c> happened</c>

00:38:20.390 --> 00:38:20.400 align:start position:0%
because the wake up already happened
 

00:38:20.400 --> 00:38:22.230 align:start position:0%
because the wake up already happened
this<00:38:20.640><c> is</c><00:38:20.720><c> called</c><00:38:20.960><c> the</c><00:38:21.280><c> the</c><00:38:21.520><c> lost</c><00:38:21.839><c> wake</c><00:38:22.079><c> up</c>

00:38:22.230 --> 00:38:22.240 align:start position:0%
this is called the the lost wake up
 

00:38:22.240 --> 00:38:25.030 align:start position:0%
this is called the the lost wake up
problem

00:38:25.030 --> 00:38:25.040 align:start position:0%
 
 

00:38:25.040 --> 00:38:30.829 align:start position:0%
 
any<00:38:26.560><c> questions</c><00:38:27.040><c> about</c><00:38:27.280><c> why</c><00:38:27.680><c> or</c><00:38:27.760><c> how</c><00:38:28.000><c> this</c>

00:38:30.829 --> 00:38:30.839 align:start position:0%
 
 

00:38:30.839 --> 00:38:39.270 align:start position:0%
 
arises

00:38:39.270 --> 00:38:39.280 align:start position:0%
 
 

00:38:39.280 --> 00:38:41.990 align:start position:0%
 
yeah<00:38:40.000><c> uh</c><00:38:40.240><c> is</c><00:38:40.480><c> it</c><00:38:40.640><c> always</c><00:38:41.359><c> going</c><00:38:41.599><c> to</c><00:38:41.760><c> be</c><00:38:41.839><c> the</c>

00:38:41.990 --> 00:38:42.000 align:start position:0%
yeah uh is it always going to be the
 

00:38:42.000 --> 00:38:42.630 align:start position:0%
yeah uh is it always going to be the
case

00:38:42.630 --> 00:38:42.640 align:start position:0%
case
 

00:38:42.640 --> 00:38:46.710 align:start position:0%
case
that<00:38:43.440><c> once</c><00:38:43.839><c> something</c><00:38:44.240><c> gets</c><00:38:44.880><c> a</c><00:38:45.200><c> lot</c><00:38:45.520><c> once</c><00:38:45.839><c> us</c>

00:38:46.710 --> 00:38:46.720 align:start position:0%
that once something gets a lot once us
 

00:38:46.720 --> 00:38:49.349 align:start position:0%
that once something gets a lot once us
a<00:38:46.880><c> wake</c><00:38:47.119><c> up</c><00:38:47.359><c> gets</c><00:38:47.680><c> lost</c><00:38:48.240><c> that</c><00:38:48.560><c> on</c><00:38:48.800><c> the</c><00:38:48.960><c> next</c>

00:38:49.349 --> 00:38:49.359 align:start position:0%
a wake up gets lost that on the next
 

00:38:49.359 --> 00:38:51.030 align:start position:0%
a wake up gets lost that on the next
time<00:38:49.680><c> everything</c><00:38:50.079><c> that's</c><00:38:50.400><c> been</c><00:38:50.560><c> buffered</c><00:38:50.960><c> is</c>

00:38:51.030 --> 00:38:51.040 align:start position:0%
time everything that's been buffered is
 

00:38:51.040 --> 00:38:52.870 align:start position:0%
time everything that's been buffered is
just<00:38:51.280><c> going</c><00:38:51.440><c> to</c><00:38:51.520><c> get</c><00:38:51.760><c> dumped</c>

00:38:52.870 --> 00:38:52.880 align:start position:0%
just going to get dumped
 

00:38:52.880 --> 00:38:54.630 align:start position:0%
just going to get dumped
well<00:38:53.200><c> it</c><00:38:53.359><c> completely</c><00:38:54.000><c> depends</c><00:38:54.400><c> on</c><00:38:54.560><c> the</c>

00:38:54.630 --> 00:38:54.640 align:start position:0%
well it completely depends on the
 

00:38:54.640 --> 00:38:56.150 align:start position:0%
well it completely depends on the
details<00:38:55.359><c> of</c>

00:38:56.150 --> 00:38:56.160 align:start position:0%
details of
 

00:38:56.160 --> 00:38:58.790 align:start position:0%
details of
of<00:38:56.320><c> what's</c><00:38:56.560><c> going</c><00:38:56.800><c> on</c><00:38:57.119><c> in</c><00:38:57.440><c> in</c><00:38:57.599><c> this</c><00:38:57.839><c> case</c><00:38:58.560><c> it's</c>

00:38:58.790 --> 00:38:58.800 align:start position:0%
of what's going on in in this case it's
 

00:38:58.800 --> 00:38:59.190 align:start position:0%
of what's going on in in this case it's
actually

00:38:59.190 --> 00:38:59.200 align:start position:0%
actually
 

00:38:59.200 --> 00:39:02.630 align:start position:0%
actually
just<00:38:59.520><c> a</c><00:39:00.720><c> it's</c><00:39:01.359><c> sort</c><00:39:01.520><c> of</c><00:39:01.760><c> accidental</c>

00:39:02.630 --> 00:39:02.640 align:start position:0%
just a it's sort of accidental
 

00:39:02.640 --> 00:39:05.829 align:start position:0%
just a it's sort of accidental
that<00:39:03.760><c> me</c><00:39:04.079><c> typing</c><00:39:04.560><c> something</c>

00:39:05.829 --> 00:39:05.839 align:start position:0%
that me typing something
 

00:39:05.839 --> 00:39:08.950 align:start position:0%
that me typing something
caused<00:39:06.800><c> the</c><00:39:06.960><c> output</c><00:39:07.280><c> to</c><00:39:07.440><c> resume</c><00:39:08.000><c> so</c><00:39:08.240><c> me</c><00:39:08.400><c> typing</c>

00:39:08.950 --> 00:39:08.960 align:start position:0%
caused the output to resume so me typing
 

00:39:08.960 --> 00:39:12.390 align:start position:0%
caused the output to resume so me typing
input<00:39:09.760><c> calls</c><00:39:10.079><c> the</c><00:39:10.400><c> output</c><00:39:11.920><c> to</c><00:39:12.079><c> get</c>

00:39:12.390 --> 00:39:12.400 align:start position:0%
input calls the output to get
 

00:39:12.400 --> 00:39:14.230 align:start position:0%
input calls the output to get
fixed<00:39:13.040><c> and</c><00:39:13.280><c> the</c><00:39:13.440><c> reason</c><00:39:13.680><c> for</c><00:39:13.760><c> that</c><00:39:14.000><c> is</c><00:39:14.160><c> that</c>

00:39:14.230 --> 00:39:14.240 align:start position:0%
fixed and the reason for that is that
 

00:39:14.240 --> 00:39:16.550 align:start position:0%
fixed and the reason for that is that
the<00:39:14.320><c> uart</c><00:39:14.720><c> has</c><00:39:15.040><c> only</c><00:39:15.359><c> one</c><00:39:15.760><c> kind</c><00:39:16.000><c> of</c><00:39:16.160><c> interrupt</c>

00:39:16.550 --> 00:39:16.560 align:start position:0%
the uart has only one kind of interrupt
 

00:39:16.560 --> 00:39:17.670 align:start position:0%
the uart has only one kind of interrupt
it<00:39:16.720><c> makes</c><00:39:17.040><c> it</c>

00:39:17.670 --> 00:39:17.680 align:start position:0%
it makes it
 

00:39:17.680 --> 00:39:19.750 align:start position:0%
it makes it
it<00:39:17.839><c> calls</c><00:39:18.079><c> the</c><00:39:18.240><c> same</c><00:39:18.560><c> interrupt</c><00:39:18.880><c> routine</c>

00:39:19.750 --> 00:39:19.760 align:start position:0%
it calls the same interrupt routine
 

00:39:19.760 --> 00:39:21.349 align:start position:0%
it calls the same interrupt routine
whether<00:39:20.160><c> for</c><00:39:20.480><c> both</c><00:39:20.800><c> input</c>

00:39:21.349 --> 00:39:21.359 align:start position:0%
whether for both input
 

00:39:21.359 --> 00:39:23.510 align:start position:0%
whether for both input
to<00:39:21.520><c> signal</c><00:39:21.920><c> input</c><00:39:22.400><c> and</c><00:39:22.480><c> the</c><00:39:22.640><c> signal</c><00:39:22.960><c> completed</c>

00:39:23.510 --> 00:39:23.520 align:start position:0%
to signal input and the signal completed
 

00:39:23.520 --> 00:39:25.430 align:start position:0%
to signal input and the signal completed
output<00:39:24.240><c> um</c><00:39:24.480><c> so</c><00:39:24.640><c> when</c><00:39:24.800><c> i</c><00:39:25.040><c> type</c>

00:39:25.430 --> 00:39:25.440 align:start position:0%
output um so when i type
 

00:39:25.440 --> 00:39:28.230 align:start position:0%
output um so when i type
something<00:39:25.839><c> which</c><00:39:26.000><c> is</c><00:39:26.160><c> input</c><00:39:27.040><c> the</c><00:39:27.440><c> this</c><00:39:27.760><c> uart</c>

00:39:28.230 --> 00:39:28.240 align:start position:0%
something which is input the this uart
 

00:39:28.240 --> 00:39:30.230 align:start position:0%
something which is input the this uart
interrupt<00:39:28.560><c> routine</c><00:39:29.119><c> gets</c><00:39:29.359><c> called</c>

00:39:30.230 --> 00:39:30.240 align:start position:0%
interrupt routine gets called
 

00:39:30.240 --> 00:39:31.750 align:start position:0%
interrupt routine gets called
and<00:39:30.560><c> the</c><00:39:30.720><c> uart</c><00:39:31.119><c> is</c><00:39:31.200><c> thinking</c><00:39:31.440><c> that</c><00:39:31.680><c> it's</c>

00:39:31.750 --> 00:39:31.760 align:start position:0%
and the uart is thinking that it's
 

00:39:31.760 --> 00:39:33.510 align:start position:0%
and the uart is thinking that it's
calling<00:39:32.079><c> it</c><00:39:32.160><c> just</c><00:39:32.400><c> a</c><00:39:32.480><c> signal</c><00:39:32.800><c> that</c><00:39:33.040><c> input</c><00:39:33.359><c> has</c>

00:39:33.510 --> 00:39:33.520 align:start position:0%
calling it just a signal that input has
 

00:39:33.520 --> 00:39:35.030 align:start position:0%
calling it just a signal that input has
arrived<00:39:34.079><c> but</c><00:39:34.240><c> in</c><00:39:34.320><c> fact</c><00:39:34.480><c> the</c><00:39:34.640><c> interrupt</c>

00:39:35.030 --> 00:39:35.040 align:start position:0%
arrived but in fact the interrupt
 

00:39:35.040 --> 00:39:35.750 align:start position:0%
arrived but in fact the interrupt
routine

00:39:35.750 --> 00:39:35.760 align:start position:0%
routine
 

00:39:35.760 --> 00:39:38.790 align:start position:0%
routine
in<00:39:35.920><c> xv6</c><00:39:37.040><c> you</c><00:39:37.119><c> know</c><00:39:37.359><c> looks</c><00:39:37.680><c> for</c>

00:39:38.790 --> 00:39:38.800 align:start position:0%
in xv6 you know looks for
 

00:39:38.800 --> 00:39:41.829 align:start position:0%
in xv6 you know looks for
you<00:39:38.880><c> know</c><00:39:39.040><c> notices</c><00:39:39.520><c> that</c><00:39:39.760><c> the</c><00:39:40.560><c> um</c><00:39:41.599><c> you</c><00:39:41.680><c> know</c>

00:39:41.829 --> 00:39:41.839 align:start position:0%
you know notices that the um you know
 

00:39:41.839 --> 00:39:44.230 align:start position:0%
you know notices that the um you know
the<00:39:41.920><c> way</c><00:39:42.160><c> this</c><00:39:42.400><c> code</c><00:39:42.720><c> happens</c><00:39:43.119><c> to</c><00:39:43.280><c> be</c><00:39:43.440><c> written</c>

00:39:44.230 --> 00:39:44.240 align:start position:0%
the way this code happens to be written
 

00:39:44.240 --> 00:39:46.870 align:start position:0%
the way this code happens to be written
is<00:39:44.400><c> that</c><00:39:44.800><c> it</c><00:39:45.599><c> if</c><00:39:45.760><c> the</c><00:39:46.000><c> uart</c><00:39:46.480><c> is</c><00:39:46.560><c> ready</c><00:39:46.720><c> to</c>

00:39:46.870 --> 00:39:46.880 align:start position:0%
is that it if the uart is ready to
 

00:39:46.880 --> 00:39:48.470 align:start position:0%
is that it if the uart is ready to
transmit<00:39:47.359><c> another</c><00:39:47.599><c> character</c><00:39:47.920><c> it</c><00:39:48.079><c> always</c>

00:39:48.470 --> 00:39:48.480 align:start position:0%
transmit another character it always
 

00:39:48.480 --> 00:39:49.829 align:start position:0%
transmit another character it always
calls<00:39:48.800><c> wake</c><00:39:49.119><c> up</c>

00:39:49.829 --> 00:39:49.839 align:start position:0%
calls wake up
 

00:39:49.839 --> 00:39:53.190 align:start position:0%
calls wake up
um<00:39:50.880><c> even</c><00:39:51.040><c> though</c><00:39:51.280><c> it's</c><00:39:52.079><c> a</c><00:39:52.240><c> while</c><00:39:52.480><c> ago</c><00:39:52.720><c> maybe</c><00:39:53.040><c> r</c>

00:39:53.190 --> 00:39:53.200 align:start position:0%
um even though it's a while ago maybe r
 

00:39:53.200 --> 00:39:54.550 align:start position:0%
um even though it's a while ago maybe r
had<00:39:53.440><c> already</c><00:39:53.680><c> called</c><00:39:53.920><c> wake</c><00:39:54.160><c> up</c>

00:39:54.550 --> 00:39:54.560 align:start position:0%
had already called wake up
 

00:39:54.560 --> 00:39:55.990 align:start position:0%
had already called wake up
so<00:39:54.800><c> it's</c><00:39:54.880><c> sort</c><00:39:55.040><c> of</c><00:39:55.119><c> accidental</c><00:39:55.680><c> that</c><00:39:55.760><c> me</c>

00:39:55.990 --> 00:39:56.000 align:start position:0%
so it's sort of accidental that me
 

00:39:56.000 --> 00:39:57.589 align:start position:0%
so it's sort of accidental that me
typing<00:39:56.400><c> characters</c><00:39:57.119><c> uh</c>

00:39:57.589 --> 00:39:57.599 align:start position:0%
typing characters uh
 

00:39:57.599 --> 00:39:59.349 align:start position:0%
typing characters uh
caused<00:39:57.839><c> this</c><00:39:58.000><c> to</c><00:39:58.079><c> get</c><00:39:58.240><c> restarted</c><00:39:59.040><c> and</c><00:39:59.119><c> so</c>

00:39:59.349 --> 00:39:59.359 align:start position:0%
caused this to get restarted and so
 

00:39:59.359 --> 00:40:00.870 align:start position:0%
caused this to get restarted and so
sometimes

00:40:00.870 --> 00:40:00.880 align:start position:0%
sometimes
 

00:40:00.880 --> 00:40:02.790 align:start position:0%
sometimes
you<00:40:01.040><c> know</c><00:40:01.119><c> if</c><00:40:01.280><c> there</c><00:40:01.520><c> are</c><00:40:01.680><c> lost</c><00:40:01.920><c> wake</c><00:40:02.240><c> ups</c>

00:40:02.790 --> 00:40:02.800 align:start position:0%
you know if there are lost wake ups
 

00:40:02.800 --> 00:40:04.150 align:start position:0%
you know if there are lost wake ups
sometimes

00:40:04.150 --> 00:40:04.160 align:start position:0%
sometimes
 

00:40:04.160 --> 00:40:05.910 align:start position:0%
sometimes
they<00:40:04.400><c> sort</c><00:40:04.560><c> of</c><00:40:04.720><c> fix</c><00:40:04.960><c> themselves</c><00:40:05.440><c> in</c><00:40:05.520><c> this</c><00:40:05.680><c> way</c>

00:40:05.910 --> 00:40:05.920 align:start position:0%
they sort of fix themselves in this way
 

00:40:05.920 --> 00:40:07.990 align:start position:0%
they sort of fix themselves in this way
if<00:40:06.000><c> you're</c><00:40:06.160><c> lucky</c><00:40:06.560><c> and</c><00:40:06.880><c> sometimes</c><00:40:07.440><c> they</c><00:40:07.599><c> don't</c>

00:40:07.990 --> 00:40:08.000 align:start position:0%
if you're lucky and sometimes they don't
 

00:40:08.000 --> 00:40:09.910 align:start position:0%
if you're lucky and sometimes they don't
like<00:40:08.240><c> if</c><00:40:08.319><c> the</c><00:40:08.400><c> uart</c><00:40:08.720><c> had</c><00:40:08.880><c> had</c><00:40:09.119><c> separate</c>

00:40:09.910 --> 00:40:09.920 align:start position:0%
like if the uart had had separate
 

00:40:09.920 --> 00:40:11.910 align:start position:0%
like if the uart had had separate
receive<00:40:10.400><c> and</c><00:40:10.560><c> transmit</c><00:40:11.040><c> interrupt</c><00:40:11.359><c> routines</c>

00:40:11.910 --> 00:40:11.920 align:start position:0%
receive and transmit interrupt routines
 

00:40:11.920 --> 00:40:12.710 align:start position:0%
receive and transmit interrupt routines
then

00:40:12.710 --> 00:40:12.720 align:start position:0%
then
 

00:40:12.720 --> 00:40:13.990 align:start position:0%
then
there<00:40:12.880><c> would</c><00:40:12.960><c> have</c><00:40:13.119><c> been</c><00:40:13.280><c> no</c><00:40:13.440><c> getting</c><00:40:13.760><c> out</c><00:40:13.920><c> of</c>

00:40:13.990 --> 00:40:14.000 align:start position:0%
there would have been no getting out of
 

00:40:14.000 --> 00:40:15.829 align:start position:0%
there would have been no getting out of
this

00:40:15.829 --> 00:40:15.839 align:start position:0%
this
 

00:40:15.839 --> 00:40:17.910 align:start position:0%
this
does<00:40:16.079><c> that</c><00:40:16.160><c> answer</c><00:40:16.400><c> your</c><00:40:16.480><c> question</c><00:40:17.280><c> yes</c><00:40:17.680><c> thank</c>

00:40:17.910 --> 00:40:17.920 align:start position:0%
does that answer your question yes thank
 

00:40:17.920 --> 00:40:22.950 align:start position:0%
does that answer your question yes thank
you

00:40:22.950 --> 00:40:22.960 align:start position:0%
 
 

00:40:22.960 --> 00:40:26.230 align:start position:0%
 
okay<00:40:24.319><c> so</c><00:40:25.200><c> yes</c><00:40:25.440><c> please</c><00:40:25.599><c> go</c><00:40:25.760><c> ahead</c>

00:40:26.230 --> 00:40:26.240 align:start position:0%
okay so yes please go ahead
 

00:40:26.240 --> 00:40:31.750 align:start position:0%
okay so yes please go ahead
what<00:40:26.480><c> purpose</c><00:40:27.119><c> does</c><00:40:27.359><c> the</c><00:40:28.079><c> tx</c><00:40:28.560><c> done</c><00:40:29.119><c> bit</c><00:40:29.440><c> serve</c>

00:40:31.750 --> 00:40:31.760 align:start position:0%
what purpose does the tx done bit serve
 

00:40:31.760 --> 00:40:34.309 align:start position:0%
what purpose does the tx done bit serve
or<00:40:31.920><c> the</c><00:40:32.079><c> tx</c><00:40:32.400><c> done</c><00:40:32.640><c> bit</c><00:40:33.119><c> um</c><00:40:33.680><c> or</c><00:40:33.839><c> you</c><00:40:34.000><c> mean</c><00:40:34.160><c> the</c>

00:40:34.309 --> 00:40:34.319 align:start position:0%
or the tx done bit um or you mean the
 

00:40:34.319 --> 00:40:35.270 align:start position:0%
or the tx done bit um or you mean the
cis<00:40:34.640><c> flag</c>

00:40:35.270 --> 00:40:35.280 align:start position:0%
cis flag
 

00:40:35.280 --> 00:40:38.550 align:start position:0%
cis flag
tx<00:40:35.680><c> done</c><00:40:36.800><c> it</c><00:40:36.960><c> is</c><00:40:37.520><c> simply</c><00:40:37.920><c> a</c><00:40:38.000><c> way</c><00:40:38.160><c> for</c><00:40:38.319><c> the</c>

00:40:38.550 --> 00:40:38.560 align:start position:0%
tx done it is simply a way for the
 

00:40:38.560 --> 00:40:39.910 align:start position:0%
tx done it is simply a way for the
interrupt<00:40:38.960><c> routine</c>

00:40:39.910 --> 00:40:39.920 align:start position:0%
interrupt routine
 

00:40:39.920 --> 00:40:44.069 align:start position:0%
interrupt routine
to<00:40:40.160><c> communicate</c><00:40:41.839><c> to</c><00:40:42.160><c> you</c><00:40:42.480><c> are</c><00:40:42.800><c> right</c>

00:40:44.069 --> 00:40:44.079 align:start position:0%
to communicate to you are right
 

00:40:44.079 --> 00:40:46.790 align:start position:0%
to communicate to you are right
that<00:40:45.119><c> um</c><00:40:45.440><c> the</c><00:40:45.760><c> previously</c><00:40:46.319><c> transmitted</c>

00:40:46.790 --> 00:40:46.800 align:start position:0%
that um the previously transmitted
 

00:40:46.800 --> 00:40:48.150 align:start position:0%
that um the previously transmitted
character<00:40:47.119><c> is</c><00:40:47.359><c> finished</c>

00:40:48.150 --> 00:40:48.160 align:start position:0%
character is finished
 

00:40:48.160 --> 00:40:49.589 align:start position:0%
character is finished
and<00:40:48.319><c> it's</c><00:40:48.480><c> okay</c><00:40:48.720><c> for</c><00:40:48.880><c> you</c><00:40:49.040><c> all</c><00:40:49.280><c> right</c><00:40:49.520><c> to</c>

00:40:49.589 --> 00:40:49.599 align:start position:0%
and it's okay for you all right to
 

00:40:49.599 --> 00:40:51.190 align:start position:0%
and it's okay for you all right to
proceed<00:40:50.160><c> to</c><00:40:50.319><c> transmitting</c><00:40:50.800><c> the</c><00:40:50.880><c> next</c>

00:40:51.190 --> 00:40:51.200 align:start position:0%
proceed to transmitting the next
 

00:40:51.200 --> 00:40:51.990 align:start position:0%
proceed to transmitting the next
character

00:40:51.990 --> 00:40:52.000 align:start position:0%
character
 

00:40:52.000 --> 00:40:54.790 align:start position:0%
character
so<00:40:52.240><c> it's</c><00:40:52.319><c> a</c><00:40:52.400><c> little</c><00:40:52.640><c> piece</c><00:40:52.960><c> of</c><00:40:54.160><c> it's</c><00:40:54.319><c> just</c><00:40:54.560><c> like</c>

00:40:54.790 --> 00:40:54.800 align:start position:0%
so it's a little piece of it's just like
 

00:40:54.800 --> 00:40:56.470 align:start position:0%
so it's a little piece of it's just like
a<00:40:54.880><c> little</c><00:40:55.119><c> communication</c><00:40:55.760><c> flag</c><00:40:56.160><c> from</c><00:40:56.319><c> the</c>

00:40:56.470 --> 00:40:56.480 align:start position:0%
a little communication flag from the
 

00:40:56.480 --> 00:40:57.910 align:start position:0%
a little communication flag from the
interrupt<00:40:56.800><c> routine</c>

00:40:57.910 --> 00:40:57.920 align:start position:0%
interrupt routine
 

00:40:57.920 --> 00:41:01.670 align:start position:0%
interrupt routine
uh<00:40:58.160><c> to</c><00:40:58.400><c> you</c><00:40:58.640><c> all</c><00:40:58.800><c> right</c>

00:41:01.670 --> 00:41:01.680 align:start position:0%
 
 

00:41:01.680 --> 00:41:05.270 align:start position:0%
 
so<00:41:02.400><c> does</c><00:41:02.560><c> that</c><00:41:02.640><c> make</c><00:41:02.800><c> sense</c><00:41:03.680><c> because</c><00:41:04.240><c> if</c><00:41:04.480><c> it</c>

00:41:05.270 --> 00:41:05.280 align:start position:0%
so does that make sense because if it
 

00:41:05.280 --> 00:41:07.430 align:start position:0%
so does that make sense because if it
it<00:41:05.440><c> could</c><00:41:05.920><c> like</c><00:41:06.240><c> it</c><00:41:06.319><c> would</c><00:41:06.560><c> sleep</c><00:41:07.040><c> and</c><00:41:07.119><c> then</c><00:41:07.359><c> it</c>

00:41:07.430 --> 00:41:07.440 align:start position:0%
it could like it would sleep and then it
 

00:41:07.440 --> 00:41:08.309 align:start position:0%
it could like it would sleep and then it
would<00:41:07.599><c> know</c><00:41:07.839><c> that</c>

00:41:08.309 --> 00:41:08.319 align:start position:0%
would know that
 

00:41:08.319 --> 00:41:11.430 align:start position:0%
would know that
when<00:41:08.560><c> it</c><00:41:08.800><c> wakes</c><00:41:09.200><c> up</c><00:41:10.079><c> it's</c><00:41:10.400><c> probably</c><00:41:10.720><c> the</c><00:41:10.880><c> uart</c>

00:41:11.430 --> 00:41:11.440 align:start position:0%
when it wakes up it's probably the uart
 

00:41:11.440 --> 00:41:14.950 align:start position:0%
when it wakes up it's probably the uart
interrupt<00:41:11.920><c> that</c><00:41:12.400><c> woke</c><00:41:12.720><c> it</c><00:41:12.880><c> up</c><00:41:13.440><c> so</c>

00:41:14.950 --> 00:41:14.960 align:start position:0%
interrupt that woke it up so
 

00:41:14.960 --> 00:41:17.990 align:start position:0%
interrupt that woke it up so
probably<00:41:15.359><c> the</c><00:41:15.920><c> tx</c><00:41:16.400><c> done</c><00:41:16.640><c> bit</c><00:41:17.599><c> like</c>

00:41:17.990 --> 00:41:18.000 align:start position:0%
probably the tx done bit like
 

00:41:18.000 --> 00:41:19.990 align:start position:0%
probably the tx done bit like
would<00:41:18.160><c> have</c><00:41:18.400><c> been</c><00:41:18.720><c> said</c><00:41:19.280><c> but</c><00:41:19.520><c> if</c><00:41:19.680><c> we</c><00:41:19.760><c> didn't</c>

00:41:19.990 --> 00:41:20.000 align:start position:0%
would have been said but if we didn't
 

00:41:20.000 --> 00:41:21.510 align:start position:0%
would have been said but if we didn't
have<00:41:20.160><c> it</c><00:41:20.960><c> so</c>

00:41:21.510 --> 00:41:21.520 align:start position:0%
have it so
 

00:41:21.520 --> 00:41:23.670 align:start position:0%
have it so
i<00:41:21.760><c> guess</c><00:41:22.000><c> i'm</c><00:41:22.160><c> saying</c><00:41:22.400><c> that</c><00:41:22.960><c> actually</c><00:41:23.359><c> wakes</c>

00:41:23.670 --> 00:41:23.680 align:start position:0%
i guess i'm saying that actually wakes
 

00:41:23.680 --> 00:41:24.710 align:start position:0%
i guess i'm saying that actually wakes
up<00:41:24.319><c> it</c>

00:41:24.710 --> 00:41:24.720 align:start position:0%
up it
 

00:41:24.720 --> 00:41:26.950 align:start position:0%
up it
should<00:41:25.040><c> know</c><00:41:25.200><c> that</c><00:41:25.359><c> it's</c><00:41:25.599><c> from</c><00:41:25.760><c> uart</c>

00:41:26.950 --> 00:41:26.960 align:start position:0%
should know that it's from uart
 

00:41:26.960 --> 00:41:27.910 align:start position:0%
should know that it's from uart
interrupt

00:41:27.910 --> 00:41:27.920 align:start position:0%
interrupt
 

00:41:27.920 --> 00:41:29.349 align:start position:0%
interrupt
okay<00:41:28.079><c> so</c><00:41:28.319><c> is</c><00:41:28.480><c> another</c><00:41:28.640><c> way</c><00:41:28.800><c> of</c><00:41:28.880><c> phrasing</c><00:41:29.200><c> your</c>

00:41:29.349 --> 00:41:29.359 align:start position:0%
okay so is another way of phrasing your
 

00:41:29.359 --> 00:41:31.030 align:start position:0%
okay so is another way of phrasing your
question<00:41:29.760><c> how</c><00:41:29.920><c> come</c><00:41:30.160><c> there's</c><00:41:30.319><c> this</c><00:41:30.720><c> while</c>

00:41:31.030 --> 00:41:31.040 align:start position:0%
question how come there's this while
 

00:41:31.040 --> 00:41:33.510 align:start position:0%
question how come there's this while
loop<00:41:31.359><c> here</c>

00:41:33.510 --> 00:41:33.520 align:start position:0%
loop here
 

00:41:33.520 --> 00:41:35.270 align:start position:0%
loop here
instead<00:41:33.760><c> of</c><00:41:33.839><c> just</c><00:41:34.400><c> okay</c><00:41:34.640><c> i</c><00:41:34.720><c> think</c><00:41:34.880><c> i</c><00:41:35.040><c> answered</c>

00:41:35.270 --> 00:41:35.280 align:start position:0%
instead of just okay i think i answered
 

00:41:35.280 --> 00:41:37.349 align:start position:0%
instead of just okay i think i answered
my<00:41:35.440><c> question</c><00:41:36.000><c> uh</c><00:41:36.319><c> i</c><00:41:36.400><c> think</c><00:41:36.560><c> the</c><00:41:36.720><c> answer</c><00:41:37.040><c> to</c><00:41:37.200><c> my</c>

00:41:37.349 --> 00:41:37.359 align:start position:0%
my question uh i think the answer to my
 

00:41:37.359 --> 00:41:38.630 align:start position:0%
my question uh i think the answer to my
question<00:41:37.599><c> is</c><00:41:37.760><c> because</c><00:41:38.079><c> you</c><00:41:38.240><c> are</c>

00:41:38.630 --> 00:41:38.640 align:start position:0%
question is because you are
 

00:41:38.640 --> 00:41:42.069 align:start position:0%
question is because you are
interested<00:41:39.520><c> two</c><00:41:39.680><c> purposes</c><00:41:40.400><c> okay</c><00:41:40.800><c> yeah</c>

00:41:42.069 --> 00:41:42.079 align:start position:0%
interested two purposes okay yeah
 

00:41:42.079 --> 00:41:45.030 align:start position:0%
interested two purposes okay yeah
so<00:41:42.800><c> yeah</c><00:41:43.040><c> yeah</c><00:41:43.280><c> in</c><00:41:43.440><c> general</c><00:41:44.000><c> did</c><00:41:44.400><c> your</c><00:41:44.880><c> the</c>

00:41:45.030 --> 00:41:45.040 align:start position:0%
so yeah yeah in general did your the
 

00:41:45.040 --> 00:41:46.630 align:start position:0%
so yeah yeah in general did your the
answer<00:41:45.280><c> your</c><00:41:45.440><c> question</c><00:41:45.680><c> sort</c><00:41:45.839><c> of</c><00:41:45.920><c> a</c><00:41:46.079><c> specific</c>

00:41:46.630 --> 00:41:46.640 align:start position:0%
answer your question sort of a specific
 

00:41:46.640 --> 00:41:48.230 align:start position:0%
answer your question sort of a specific
instance<00:41:46.960><c> of</c><00:41:47.040><c> the</c><00:41:47.200><c> more</c><00:41:47.359><c> general</c><00:41:47.760><c> answer</c>

00:41:48.230 --> 00:41:48.240 align:start position:0%
instance of the more general answer
 

00:41:48.240 --> 00:41:51.910 align:start position:0%
instance of the more general answer
that<00:41:48.960><c> um</c>

00:41:51.910 --> 00:41:51.920 align:start position:0%
 
 

00:41:51.920 --> 00:41:55.589 align:start position:0%
 
it's<00:41:53.119><c> it</c><00:41:53.280><c> just</c><00:41:53.599><c> turns</c><00:41:54.000><c> out</c><00:41:54.240><c> to</c><00:41:54.400><c> be</c>

00:41:55.589 --> 00:41:55.599 align:start position:0%
it's it just turns out to be
 

00:41:55.599 --> 00:41:58.230 align:start position:0%
it's it just turns out to be
not<00:41:55.920><c> practical</c><00:41:56.880><c> to</c><00:41:57.119><c> make</c><00:41:57.760><c> sleeps</c><00:41:58.160><c> and</c>

00:41:58.230 --> 00:41:58.240 align:start position:0%
not practical to make sleeps and
 

00:41:58.240 --> 00:41:58.870 align:start position:0%
not practical to make sleeps and
wake-ups

00:41:58.870 --> 00:41:58.880 align:start position:0%
wake-ups
 

00:41:58.880 --> 00:42:01.510 align:start position:0%
wake-ups
be<00:41:59.280><c> precise</c><00:42:00.079><c> guaranteed</c><00:42:00.720><c> precise</c><00:42:01.200><c> that</c><00:42:01.440><c> is</c>

00:42:01.510 --> 00:42:01.520 align:start position:0%
be precise guaranteed precise that is
 

00:42:01.520 --> 00:42:01.990 align:start position:0%
be precise guaranteed precise that is
that

00:42:01.990 --> 00:42:02.000 align:start position:0%
that
 

00:42:02.000 --> 00:42:04.870 align:start position:0%
that
if<00:42:02.160><c> sleep</c><00:42:02.400><c> returns</c><00:42:02.880><c> then</c><00:42:03.440><c> for</c><00:42:03.760><c> sure</c><00:42:04.560><c> whatever</c>

00:42:04.870 --> 00:42:04.880 align:start position:0%
if sleep returns then for sure whatever
 

00:42:04.880 --> 00:42:06.309 align:start position:0%
if sleep returns then for sure whatever
you're<00:42:05.040><c> waiting</c><00:42:05.359><c> for</c><00:42:05.520><c> has</c><00:42:05.680><c> happened</c>

00:42:06.309 --> 00:42:06.319 align:start position:0%
you're waiting for has happened
 

00:42:06.319 --> 00:42:09.670 align:start position:0%
you're waiting for has happened
so<00:42:07.520><c> one</c><00:42:07.760><c> example</c><00:42:08.160><c> of</c><00:42:08.319><c> this</c><00:42:08.960><c> is</c><00:42:09.119><c> that</c>

00:42:09.670 --> 00:42:09.680 align:start position:0%
so one example of this is that
 

00:42:09.680 --> 00:42:11.510 align:start position:0%
so one example of this is that
supposing<00:42:10.079><c> we</c><00:42:10.240><c> have</c><00:42:10.319><c> two</c><00:42:10.560><c> processes</c><00:42:11.119><c> that</c><00:42:11.280><c> are</c>

00:42:11.510 --> 00:42:11.520 align:start position:0%
supposing we have two processes that are
 

00:42:11.520 --> 00:42:13.510 align:start position:0%
supposing we have two processes that are
both<00:42:12.240><c> trying</c><00:42:12.480><c> to</c><00:42:12.560><c> write</c><00:42:12.800><c> the</c><00:42:12.880><c> uart</c>

00:42:13.510 --> 00:42:13.520 align:start position:0%
both trying to write the uart
 

00:42:13.520 --> 00:42:15.349 align:start position:0%
both trying to write the uart
at<00:42:13.680><c> the</c><00:42:13.760><c> same</c><00:42:14.079><c> time</c><00:42:14.480><c> they're</c><00:42:14.640><c> both</c><00:42:14.880><c> in</c><00:42:14.960><c> you</c><00:42:15.200><c> are</c>

00:42:15.349 --> 00:42:15.359 align:start position:0%
at the same time they're both in you are
 

00:42:15.359 --> 00:42:16.950 align:start position:0%
at the same time they're both in you are
right<00:42:15.680><c> and</c><00:42:15.760><c> they</c><00:42:15.920><c> can</c><00:42:16.160><c> because</c>

00:42:16.950 --> 00:42:16.960 align:start position:0%
right and they can because
 

00:42:16.960 --> 00:42:19.670 align:start position:0%
right and they can because
after<00:42:17.280><c> one</c><00:42:17.520><c> writes</c><00:42:17.760><c> a</c><00:42:17.920><c> character</c><00:42:18.400><c> it'll</c><00:42:18.640><c> sleep</c>

00:42:19.670 --> 00:42:19.680 align:start position:0%
after one writes a character it'll sleep
 

00:42:19.680 --> 00:42:20.309 align:start position:0%
after one writes a character it'll sleep
um

00:42:20.309 --> 00:42:20.319 align:start position:0%
um
 

00:42:20.319 --> 00:42:22.309 align:start position:0%
um
and<00:42:20.560><c> releasing</c><00:42:21.200><c> that's</c><00:42:21.520><c> turns</c><00:42:21.760><c> out</c><00:42:21.920><c> releasing</c>

00:42:22.309 --> 00:42:22.319 align:start position:0%
and releasing that's turns out releasing
 

00:42:22.319 --> 00:42:24.309 align:start position:0%
and releasing that's turns out releasing
the<00:42:22.400><c> lock</c><00:42:22.960><c> and</c><00:42:23.040><c> then</c><00:42:23.200><c> the</c><00:42:23.359><c> other</c><00:42:23.520><c> one</c><00:42:23.760><c> can</c>

00:42:24.309 --> 00:42:24.319 align:start position:0%
the lock and then the other one can
 

00:42:24.319 --> 00:42:26.390 align:start position:0%
the lock and then the other one can
enter<00:42:24.640><c> that</c><00:42:24.880><c> loop</c><00:42:25.280><c> and</c><00:42:25.599><c> try</c><00:42:25.760><c> to</c><00:42:25.920><c> wait</c><00:42:26.160><c> until</c>

00:42:26.390 --> 00:42:26.400 align:start position:0%
enter that loop and try to wait until
 

00:42:26.400 --> 00:42:29.109 align:start position:0%
enter that loop and try to wait until
the<00:42:26.480><c> uart's</c><00:42:26.960><c> not</c><00:42:27.119><c> busy</c>

00:42:29.109 --> 00:42:29.119 align:start position:0%
the uart's not busy
 

00:42:29.119 --> 00:42:31.430 align:start position:0%
the uart's not busy
and<00:42:29.200><c> they</c><00:42:29.359><c> both</c><00:42:29.680><c> may</c><00:42:29.920><c> both</c><00:42:30.160><c> end</c><00:42:30.400><c> up</c><00:42:30.560><c> sleeping</c>

00:42:31.430 --> 00:42:31.440 align:start position:0%
and they both may both end up sleeping
 

00:42:31.440 --> 00:42:33.349 align:start position:0%
and they both may both end up sleeping
and<00:42:31.920><c> when</c><00:42:32.079><c> an</c><00:42:32.240><c> interrupt</c><00:42:32.560><c> happens</c><00:42:32.880><c> and</c><00:42:33.040><c> the</c><00:42:33.119><c> ur</c>

00:42:33.349 --> 00:42:33.359 align:start position:0%
and when an interrupt happens and the ur
 

00:42:33.359 --> 00:42:34.790 align:start position:0%
and when an interrupt happens and the ur
can<00:42:33.520><c> accept</c><00:42:33.839><c> one</c><00:42:34.000><c> more</c><00:42:34.160><c> character</c><00:42:34.640><c> they'll</c>

00:42:34.790 --> 00:42:34.800 align:start position:0%
can accept one more character they'll
 

00:42:34.800 --> 00:42:36.150 align:start position:0%
can accept one more character they'll
both<00:42:35.040><c> be</c><00:42:35.200><c> woken</c><00:42:35.599><c> up</c>

00:42:36.150 --> 00:42:36.160 align:start position:0%
both be woken up
 

00:42:36.160 --> 00:42:38.870 align:start position:0%
both be woken up
um<00:42:36.480><c> but</c><00:42:36.720><c> only</c><00:42:37.040><c> one</c><00:42:38.160><c> should</c><00:42:38.319><c> actually</c><00:42:38.640><c> write</c>

00:42:38.870 --> 00:42:38.880 align:start position:0%
um but only one should actually write
 

00:42:38.880 --> 00:42:40.230 align:start position:0%
um but only one should actually write
the<00:42:38.960><c> character</c>

00:42:40.230 --> 00:42:40.240 align:start position:0%
the character
 

00:42:40.240 --> 00:42:42.790 align:start position:0%
the character
and<00:42:40.400><c> that</c><00:42:40.560><c> this</c><00:42:40.800><c> while</c><00:42:41.119><c> loop</c><00:42:42.079><c> and</c><00:42:42.400><c> in</c><00:42:42.560><c> fact</c>

00:42:42.790 --> 00:42:42.800 align:start position:0%
and that this while loop and in fact
 

00:42:42.800 --> 00:42:43.270 align:start position:0%
and that this while loop and in fact
you'll<00:42:42.960><c> see</c>

00:42:43.270 --> 00:42:43.280 align:start position:0%
you'll see
 

00:42:43.280 --> 00:42:45.589 align:start position:0%
you'll see
a<00:42:43.440><c> while</c><00:42:43.599><c> loop</c><00:42:43.839><c> around</c><00:42:44.079><c> every</c><00:42:44.400><c> sleep</c><00:42:44.800><c> in</c><00:42:44.960><c> xv6</c><00:42:45.520><c> i</c>

00:42:45.589 --> 00:42:45.599 align:start position:0%
a while loop around every sleep in xv6 i
 

00:42:45.599 --> 00:42:46.710 align:start position:0%
a while loop around every sleep in xv6 i
believe

00:42:46.710 --> 00:42:46.720 align:start position:0%
believe
 

00:42:46.720 --> 00:42:49.030 align:start position:0%
believe
and<00:42:46.960><c> it's</c><00:42:47.119><c> because</c><00:42:47.440><c> this</c><00:42:47.680><c> problem</c><00:42:48.079><c> of</c><00:42:48.720><c> you</c><00:42:48.880><c> may</c>

00:42:49.030 --> 00:42:49.040 align:start position:0%
and it's because this problem of you may
 

00:42:49.040 --> 00:42:50.870 align:start position:0%
and it's because this problem of you may
be<00:42:49.119><c> woken</c><00:42:49.520><c> up</c><00:42:49.680><c> but</c><00:42:49.839><c> really</c><00:42:50.160><c> somebody</c><00:42:50.560><c> else</c>

00:42:50.870 --> 00:42:50.880 align:start position:0%
be woken up but really somebody else
 

00:42:50.880 --> 00:42:51.349 align:start position:0%
be woken up but really somebody else
sort<00:42:51.119><c> of</c>

00:42:51.349 --> 00:42:51.359 align:start position:0%
sort of
 

00:42:51.359 --> 00:42:53.030 align:start position:0%
sort of
took<00:42:51.599><c> the</c><00:42:51.760><c> thing</c><00:42:52.000><c> you</c><00:42:52.079><c> were</c><00:42:52.240><c> waiting</c><00:42:52.560><c> for</c><00:42:52.880><c> so</c>

00:42:53.030 --> 00:42:53.040 align:start position:0%
took the thing you were waiting for so
 

00:42:53.040 --> 00:42:56.829 align:start position:0%
took the thing you were waiting for so
you<00:42:53.119><c> have</c><00:42:53.200><c> to</c><00:42:53.359><c> sleep</c><00:42:53.599><c> again</c><00:42:54.319><c> this</c><00:42:54.560><c> happens</c>

00:42:56.829 --> 00:42:56.839 align:start position:0%
you have to sleep again this happens
 

00:42:56.839 --> 00:42:59.670 align:start position:0%
you have to sleep again this happens
pervasively

00:42:59.670 --> 00:42:59.680 align:start position:0%
pervasively
 

00:42:59.680 --> 00:43:03.270 align:start position:0%
pervasively
okay<00:42:59.920><c> thank</c><00:43:00.079><c> you</c><00:43:00.880><c> yes</c>

00:43:03.270 --> 00:43:03.280 align:start position:0%
 
 

00:43:03.280 --> 00:43:06.550 align:start position:0%
 
i've<00:43:03.359><c> got</c><00:43:03.520><c> a</c><00:43:03.680><c> question</c><00:43:04.800><c> yes</c><00:43:05.200><c> um</c><00:43:05.920><c> so</c><00:43:06.160><c> it</c><00:43:06.319><c> looks</c>

00:43:06.550 --> 00:43:06.560 align:start position:0%
i've got a question yes um so it looks
 

00:43:06.560 --> 00:43:07.510 align:start position:0%
i've got a question yes um so it looks
like

00:43:07.510 --> 00:43:07.520 align:start position:0%
like
 

00:43:07.520 --> 00:43:10.790 align:start position:0%
like
uh<00:43:07.839><c> we</c><00:43:08.000><c> only</c><00:43:08.240><c> saw</c><00:43:08.560><c> one</c><00:43:08.800><c> last</c><00:43:09.119><c> wake</c><00:43:09.440><c> up</c><00:43:09.920><c> because</c>

00:43:10.790 --> 00:43:10.800 align:start position:0%
uh we only saw one last wake up because
 

00:43:10.800 --> 00:43:12.950 align:start position:0%
uh we only saw one last wake up because
as<00:43:10.960><c> soon</c><00:43:11.119><c> as</c><00:43:11.200><c> we</c><00:43:11.440><c> pressed</c><00:43:12.000><c> like</c><00:43:12.240><c> a</c><00:43:12.319><c> character</c>

00:43:12.950 --> 00:43:12.960 align:start position:0%
as soon as we pressed like a character
 

00:43:12.960 --> 00:43:14.710 align:start position:0%
as soon as we pressed like a character
the<00:43:13.040><c> rest</c><00:43:13.280><c> of</c><00:43:13.359><c> the</c><00:43:13.520><c> output</c>

00:43:14.710 --> 00:43:14.720 align:start position:0%
the rest of the output
 

00:43:14.720 --> 00:43:16.550 align:start position:0%
the rest of the output
the<00:43:14.800><c> entire</c><00:43:15.200><c> wrist</c><00:43:15.520><c> output</c><00:43:15.760><c> came</c><00:43:16.000><c> out</c>

00:43:16.550 --> 00:43:16.560 align:start position:0%
the entire wrist output came out
 

00:43:16.560 --> 00:43:17.990 align:start position:0%
the entire wrist output came out
shouldn't<00:43:16.880><c> we</c><00:43:16.960><c> have</c><00:43:17.119><c> seen</c><00:43:17.280><c> like</c><00:43:17.599><c> multiple</c>

00:43:17.990 --> 00:43:18.000 align:start position:0%
shouldn't we have seen like multiple
 

00:43:18.000 --> 00:43:19.349 align:start position:0%
shouldn't we have seen like multiple
loss<00:43:18.240><c> wake</c><00:43:18.480><c> ups</c><00:43:18.720><c> where</c>

00:43:19.349 --> 00:43:19.359 align:start position:0%
loss wake ups where
 

00:43:19.359 --> 00:43:21.510 align:start position:0%
loss wake ups where
like<00:43:19.520><c> why</c><00:43:19.680><c> didn't</c><00:43:19.839><c> it</c><00:43:19.920><c> happen</c><00:43:20.240><c> again</c><00:43:21.119><c> oh</c><00:43:21.440><c> it</c>

00:43:21.510 --> 00:43:21.520 align:start position:0%
like why didn't it happen again oh it
 

00:43:21.520 --> 00:43:23.430 align:start position:0%
like why didn't it happen again oh it
did<00:43:21.839><c> it</c><00:43:21.920><c> did</c><00:43:22.160><c> here</c><00:43:22.319><c> let</c><00:43:22.480><c> me</c><00:43:22.800><c> let</c><00:43:22.960><c> me</c><00:43:23.119><c> run</c><00:43:23.280><c> this</c>

00:43:23.430 --> 00:43:23.440 align:start position:0%
did it did here let me let me run this
 

00:43:23.440 --> 00:43:24.710 align:start position:0%
did it did here let me let me run this
i'm<00:43:23.520><c> going</c><00:43:23.680><c> to</c><00:43:23.760><c> run</c><00:43:24.000><c> read</c><00:43:24.240><c> me</c><00:43:24.400><c> i'm</c><00:43:24.480><c> going</c><00:43:24.640><c> to</c>

00:43:24.710 --> 00:43:24.720 align:start position:0%
i'm going to run read me i'm going to
 

00:43:24.720 --> 00:43:26.390 align:start position:0%
i'm going to run read me i'm going to
cat<00:43:24.960><c> read</c><00:43:25.200><c> me</c><00:43:25.359><c> right</c><00:43:25.520><c> which</c><00:43:25.760><c> is</c><00:43:25.920><c> a</c><00:43:26.160><c> couple</c>

00:43:26.390 --> 00:43:26.400 align:start position:0%
cat read me right which is a couple
 

00:43:26.400 --> 00:43:27.349 align:start position:0%
cat read me right which is a couple
thousand<00:43:26.640><c> bytes</c>

00:43:27.349 --> 00:43:27.359 align:start position:0%
thousand bytes
 

00:43:27.359 --> 00:43:30.390 align:start position:0%
thousand bytes
so<00:43:28.240><c> oops</c><00:43:28.720><c> uh</c><00:43:29.200><c> sorry</c><00:43:29.599><c> i</c><00:43:29.760><c> had</c><00:43:29.920><c> already</c><00:43:30.160><c> typed</c>

00:43:30.390 --> 00:43:30.400 align:start position:0%
so oops uh sorry i had already typed
 

00:43:30.400 --> 00:43:31.109 align:start position:0%
so oops uh sorry i had already typed
something

00:43:31.109 --> 00:43:31.119 align:start position:0%
something
 

00:43:31.119 --> 00:43:33.109 align:start position:0%
something
um<00:43:31.440><c> oh</c><00:43:31.599><c> gosh</c><00:43:31.839><c> we've</c><00:43:32.079><c> got</c><00:43:32.240><c> one</c><00:43:32.480><c> character</c><00:43:33.040><c> i'm</c>

00:43:33.109 --> 00:43:33.119 align:start position:0%
um oh gosh we've got one character i'm
 

00:43:33.119 --> 00:43:35.190 align:start position:0%
um oh gosh we've got one character i'm
going<00:43:33.280><c> to</c><00:43:33.359><c> type</c><00:43:33.680><c> a</c><00:43:33.760><c> period</c>

00:43:35.190 --> 00:43:35.200 align:start position:0%
going to type a period
 

00:43:35.200 --> 00:43:37.030 align:start position:0%
going to type a period
ah<00:43:35.520><c> we</c><00:43:35.599><c> got</c><00:43:35.680><c> a</c><00:43:35.760><c> few</c><00:43:35.920><c> more</c><00:43:36.160><c> characters</c><00:43:36.800><c> and</c><00:43:36.880><c> then</c>

00:43:37.030 --> 00:43:37.040 align:start position:0%
ah we got a few more characters and then
 

00:43:37.040 --> 00:43:38.470 align:start position:0%
ah we got a few more characters and then
it<00:43:37.119><c> hung</c><00:43:37.359><c> up</c><00:43:37.520><c> again</c>

00:43:38.470 --> 00:43:38.480 align:start position:0%
it hung up again
 

00:43:38.480 --> 00:43:40.230 align:start position:0%
it hung up again
i'm<00:43:38.640><c> going</c><00:43:38.720><c> to</c><00:43:38.800><c> take</c><00:43:39.119><c> another</c><00:43:39.359><c> period</c><00:43:39.920><c> another</c>

00:43:40.230 --> 00:43:40.240 align:start position:0%
i'm going to take another period another
 

00:43:40.240 --> 00:43:41.670 align:start position:0%
i'm going to take another period another
couple<00:43:40.480><c> characters</c>

00:43:41.670 --> 00:43:41.680 align:start position:0%
couple characters
 

00:43:41.680 --> 00:43:43.190 align:start position:0%
couple characters
right<00:43:41.920><c> each</c><00:43:42.160><c> time</c><00:43:42.319><c> i</c><00:43:42.400><c> type</c><00:43:42.640><c> a</c><00:43:42.720><c> period</c><00:43:43.040><c> that</c>

00:43:43.190 --> 00:43:43.200 align:start position:0%
right each time i type a period that
 

00:43:43.200 --> 00:43:44.870 align:start position:0%
right each time i type a period that
causes<00:43:43.680><c> a</c><00:43:44.000><c> interrupt</c><00:43:44.400><c> for</c><00:43:44.480><c> the</c><00:43:44.560><c> res</c>

00:43:44.870 --> 00:43:44.880 align:start position:0%
causes a interrupt for the res
 

00:43:44.880 --> 00:43:47.349 align:start position:0%
causes a interrupt for the res
for<00:43:45.040><c> the</c><00:43:45.200><c> input</c><00:43:46.400><c> which</c><00:43:46.640><c> then</c><00:43:46.880><c> wakes</c><00:43:47.119><c> up</c><00:43:47.280><c> the</c>

00:43:47.349 --> 00:43:47.359 align:start position:0%
for the input which then wakes up the
 

00:43:47.359 --> 00:43:48.550 align:start position:0%
for the input which then wakes up the
process<00:43:47.760><c> and</c><00:43:47.920><c> i</c><00:43:48.000><c> could</c><00:43:48.079><c> do</c><00:43:48.160><c> a</c><00:43:48.240><c> few</c><00:43:48.400><c> more</c>

00:43:48.550 --> 00:43:48.560 align:start position:0%
process and i could do a few more
 

00:43:48.560 --> 00:43:49.910 align:start position:0%
process and i could do a few more
characters<00:43:48.960><c> of</c><00:43:49.119><c> rights</c><00:43:49.359><c> and</c><00:43:49.440><c> then</c><00:43:49.599><c> hangs</c>

00:43:49.910 --> 00:43:49.920 align:start position:0%
characters of rights and then hangs
 

00:43:49.920 --> 00:43:50.870 align:start position:0%
characters of rights and then hangs
again

00:43:50.870 --> 00:43:50.880 align:start position:0%
again
 

00:43:50.880 --> 00:43:53.349 align:start position:0%
again
you<00:43:51.119><c> know</c><00:43:51.280><c> gets</c><00:43:51.440><c> another</c><00:43:51.760><c> lost</c><00:43:52.000><c> wake</c><00:43:52.240><c> up</c><00:43:53.200><c> is</c>

00:43:53.349 --> 00:43:53.359 align:start position:0%
you know gets another lost wake up is
 

00:43:53.359 --> 00:43:54.630 align:start position:0%
you know gets another lost wake up is
that<00:43:53.920><c> uh</c>

00:43:54.630 --> 00:43:54.640 align:start position:0%
that uh
 

00:43:54.640 --> 00:43:56.550 align:start position:0%
that uh
yeah<00:43:54.880><c> okay</c><00:43:55.440><c> i</c><00:43:55.520><c> just</c><00:43:55.760><c> missed</c><00:43:56.000><c> that</c><00:43:56.160><c> yep</c><00:43:56.400><c> that</c>

00:43:56.550 --> 00:43:56.560 align:start position:0%
yeah okay i just missed that yep that
 

00:43:56.560 --> 00:43:57.990 align:start position:0%
yeah okay i just missed that yep that
makes<00:43:56.720><c> sense</c><00:43:56.880><c> all</c><00:43:56.960><c> right</c><00:43:57.280><c> yeah</c><00:43:57.520><c> so</c><00:43:57.599><c> i'm</c><00:43:57.760><c> typing</c>

00:43:57.990 --> 00:43:58.000 align:start position:0%
makes sense all right yeah so i'm typing
 

00:43:58.000 --> 00:43:59.430 align:start position:0%
makes sense all right yeah so i'm typing
period<00:43:58.319><c> here</c><00:43:58.560><c> i</c><00:43:58.640><c> get</c><00:43:58.800><c> a</c>

00:43:59.430 --> 00:43:59.440 align:start position:0%
period here i get a
 

00:43:59.440 --> 00:44:01.190 align:start position:0%
period here i get a
couple<00:43:59.760><c> characters</c><00:44:00.240><c> per</c><00:44:00.640><c> lost</c><00:44:00.880><c> wake</c><00:44:01.119><c> up</c>

00:44:01.190 --> 00:44:01.200 align:start position:0%
couple characters per lost wake up
 

00:44:01.200 --> 00:44:02.630 align:start position:0%
couple characters per lost wake up
because<00:44:01.359><c> you</c><00:44:01.440><c> know</c><00:44:01.599><c> the</c><00:44:01.680><c> loss</c><00:44:01.920><c> wake</c><00:44:02.160><c> up</c>

00:44:02.630 --> 00:44:02.640 align:start position:0%
because you know the loss wake up
 

00:44:02.640 --> 00:44:04.950 align:start position:0%
because you know the loss wake up
requires<00:44:03.040><c> this</c><00:44:03.200><c> coincidence</c><00:44:04.000><c> that</c><00:44:04.720><c> the</c>

00:44:04.950 --> 00:44:04.960 align:start position:0%
requires this coincidence that the
 

00:44:04.960 --> 00:44:06.630 align:start position:0%
requires this coincidence that the
interrupt<00:44:05.520><c> had</c><00:44:05.760><c> already</c><00:44:06.000><c> happened</c><00:44:06.400><c> and</c><00:44:06.480><c> was</c>

00:44:06.630 --> 00:44:06.640 align:start position:0%
interrupt had already happened and was
 

00:44:06.640 --> 00:44:08.630 align:start position:0%
interrupt had already happened and was
waiting<00:44:06.960><c> to</c><00:44:07.119><c> acquire</c><00:44:07.440><c> the</c><00:44:07.599><c> lock</c><00:44:07.920><c> and</c>

00:44:08.630 --> 00:44:08.640 align:start position:0%
waiting to acquire the lock and
 

00:44:08.640 --> 00:44:11.510 align:start position:0%
waiting to acquire the lock and
just<00:44:10.319><c> we</c><00:44:10.480><c> get</c><00:44:10.560><c> that</c><00:44:10.720><c> coincidence</c><00:44:11.280><c> a</c><00:44:11.280><c> lot</c><00:44:11.440><c> of</c>

00:44:11.510 --> 00:44:11.520 align:start position:0%
just we get that coincidence a lot of
 

00:44:11.520 --> 00:44:15.589 align:start position:0%
just we get that coincidence a lot of
the<00:44:11.599><c> time</c><00:44:11.760><c> but</c><00:44:11.920><c> not</c><00:44:12.160><c> all</c><00:44:12.319><c> the</c><00:44:12.400><c> time</c>

00:44:15.589 --> 00:44:15.599 align:start position:0%
 
 

00:44:15.599 --> 00:44:19.910 align:start position:0%
 
all<00:44:15.760><c> right</c><00:44:17.280><c> okay</c><00:44:17.520><c> so</c><00:44:18.400><c> our</c><00:44:18.880><c> goal</c><00:44:19.359><c> then</c>

00:44:19.910 --> 00:44:19.920 align:start position:0%
all right okay so our goal then
 

00:44:19.920 --> 00:44:21.510 align:start position:0%
all right okay so our goal then
is<00:44:20.079><c> to</c><00:44:20.240><c> get</c><00:44:20.400><c> rid</c><00:44:20.560><c> of</c><00:44:20.640><c> this</c><00:44:20.880><c> loss</c><00:44:21.119><c> wake</c><00:44:21.359><c> up</c>

00:44:21.510 --> 00:44:21.520 align:start position:0%
is to get rid of this loss wake up
 

00:44:21.520 --> 00:44:23.750 align:start position:0%
is to get rid of this loss wake up
problem<00:44:21.920><c> by</c><00:44:22.319><c> somehow</c><00:44:22.800><c> eliminating</c><00:44:23.520><c> this</c>

00:44:23.750 --> 00:44:23.760 align:start position:0%
problem by somehow eliminating this
 

00:44:23.760 --> 00:44:25.910 align:start position:0%
problem by somehow eliminating this
window<00:44:24.240><c> here</c>

00:44:25.910 --> 00:44:25.920 align:start position:0%
window here
 

00:44:25.920 --> 00:44:28.230 align:start position:0%
window here
between<00:44:26.240><c> the</c><00:44:26.400><c> release</c><00:44:27.040><c> of</c><00:44:27.200><c> the</c><00:44:27.280><c> urtx</c><00:44:28.000><c> lock</c>

00:44:28.230 --> 00:44:28.240 align:start position:0%
between the release of the urtx lock
 

00:44:28.240 --> 00:44:29.670 align:start position:0%
between the release of the urtx lock
which<00:44:28.400><c> we</c><00:44:28.640><c> have</c><00:44:28.880><c> to</c><00:44:29.040><c> release</c>

00:44:29.670 --> 00:44:29.680 align:start position:0%
which we have to release
 

00:44:29.680 --> 00:44:32.230 align:start position:0%
which we have to release
right<00:44:29.920><c> because</c><00:44:30.640><c> the</c><00:44:30.880><c> interrupt</c><00:44:31.680><c> needs</c><00:44:32.000><c> that</c>

00:44:32.230 --> 00:44:32.240 align:start position:0%
right because the interrupt needs that
 

00:44:32.240 --> 00:44:33.670 align:start position:0%
right because the interrupt needs that
lock<00:44:32.480><c> so</c><00:44:32.640><c> we</c><00:44:32.800><c> know</c><00:44:32.960><c> we</c><00:44:33.040><c> have</c><00:44:33.119><c> to</c><00:44:33.200><c> release</c><00:44:33.520><c> the</c>

00:44:33.670 --> 00:44:33.680 align:start position:0%
lock so we know we have to release the
 

00:44:33.680 --> 00:44:34.710 align:start position:0%
lock so we know we have to release the
lock

00:44:34.710 --> 00:44:34.720 align:start position:0%
lock
 

00:44:34.720 --> 00:44:36.150 align:start position:0%
lock
but<00:44:34.880><c> somehow</c><00:44:35.200><c> we</c><00:44:35.280><c> want</c><00:44:35.440><c> to</c><00:44:35.520><c> eliminate</c><00:44:36.000><c> this</c>

00:44:36.150 --> 00:44:36.160 align:start position:0%
but somehow we want to eliminate this
 

00:44:36.160 --> 00:44:38.710 align:start position:0%
but somehow we want to eliminate this
window<00:44:36.560><c> between</c><00:44:36.880><c> when</c><00:44:37.040><c> we</c><00:44:37.200><c> release</c><00:44:37.599><c> the</c><00:44:37.760><c> lock</c>

00:44:38.710 --> 00:44:38.720 align:start position:0%
window between when we release the lock
 

00:44:38.720 --> 00:44:40.630 align:start position:0%
window between when we release the lock
and<00:44:39.200><c> when</c><00:44:39.359><c> the</c><00:44:39.520><c> process</c><00:44:40.000><c> actually</c><00:44:40.319><c> marks</c>

00:44:40.630 --> 00:44:40.640 align:start position:0%
and when the process actually marks
 

00:44:40.640 --> 00:44:42.230 align:start position:0%
and when the process actually marks
itself<00:44:40.960><c> as</c><00:44:41.119><c> sleeping</c>

00:44:42.230 --> 00:44:42.240 align:start position:0%
itself as sleeping
 

00:44:42.240 --> 00:44:44.230 align:start position:0%
itself as sleeping
so<00:44:42.480><c> that</c><00:44:42.800><c> the</c><00:44:43.040><c> interrupts</c><00:44:43.440><c> wake</c><00:44:43.680><c> up</c><00:44:43.839><c> we'll</c><00:44:44.079><c> see</c>

00:44:44.230 --> 00:44:44.240 align:start position:0%
so that the interrupts wake up we'll see
 

00:44:44.240 --> 00:44:45.589 align:start position:0%
so that the interrupts wake up we'll see
that<00:44:44.400><c> the</c><00:44:44.480><c> process</c><00:44:44.880><c> is</c><00:44:44.960><c> sleeping</c><00:44:45.359><c> and</c>

00:44:45.589 --> 00:44:45.599 align:start position:0%
that the process is sleeping and
 

00:44:45.599 --> 00:44:46.470 align:start position:0%
that the process is sleeping and
actually<00:44:45.839><c> wake</c><00:44:46.079><c> it</c><00:44:46.240><c> up</c>

00:44:46.470 --> 00:44:46.480 align:start position:0%
actually wake it up
 

00:44:46.480 --> 00:44:49.670 align:start position:0%
actually wake it up
and<00:44:46.560><c> therefore</c><00:44:47.040><c> not</c><00:44:47.200><c> lose</c><00:44:47.440><c> the</c><00:44:47.520><c> wake</c><00:44:47.839><c> up</c>

00:44:49.670 --> 00:44:49.680 align:start position:0%
and therefore not lose the wake up
 

00:44:49.680 --> 00:44:50.950 align:start position:0%
and therefore not lose the wake up
so<00:44:49.839><c> we've</c><00:44:49.920><c> got</c><00:44:50.000><c> to</c><00:44:50.079><c> somehow</c><00:44:50.480><c> close</c><00:44:50.720><c> that</c>

00:44:50.950 --> 00:44:50.960 align:start position:0%
so we've got to somehow close that
 

00:44:50.960 --> 00:44:54.069 align:start position:0%
so we've got to somehow close that
window

00:44:54.069 --> 00:44:54.079 align:start position:0%
 
 

00:44:54.079 --> 00:44:56.150 align:start position:0%
 
and<00:44:54.240><c> to</c><00:44:54.400><c> do</c><00:44:54.560><c> that</c><00:44:54.960><c> we've</c><00:44:55.119><c> got</c><00:44:55.280><c> to</c><00:44:55.440><c> make</c><00:44:55.760><c> sleeps</c>

00:44:56.150 --> 00:44:56.160 align:start position:0%
and to do that we've got to make sleeps
 

00:44:56.160 --> 00:44:58.150 align:start position:0%
and to do that we've got to make sleeps
interface<00:44:56.560><c> a</c><00:44:56.560><c> little</c><00:44:56.720><c> bit</c><00:44:56.800><c> more</c><00:44:56.960><c> complicated</c>

00:44:58.150 --> 00:44:58.160 align:start position:0%
interface a little bit more complicated
 

00:44:58.160 --> 00:45:04.069 align:start position:0%
interface a little bit more complicated
um<00:44:58.800><c> so</c><00:44:59.920><c> go</c><00:45:00.079><c> back</c><00:45:00.319><c> to</c><00:45:00.920><c> the</c><00:45:02.839><c> um</c>

00:45:04.069 --> 00:45:04.079 align:start position:0%
um so go back to the um
 

00:45:04.079 --> 00:45:06.230 align:start position:0%
um so go back to the um
original<00:45:04.640><c> working</c><00:45:05.040><c> sleep</c><00:45:05.440><c> and</c><00:45:05.599><c> a</c><00:45:05.760><c> call</c><00:45:06.000><c> to</c><00:45:06.160><c> the</c>

00:45:06.230 --> 00:45:06.240 align:start position:0%
original working sleep and a call to the
 

00:45:06.240 --> 00:45:07.109 align:start position:0%
original working sleep and a call to the
working<00:45:06.560><c> sleep</c>

00:45:07.109 --> 00:45:07.119 align:start position:0%
working sleep
 

00:45:07.119 --> 00:45:10.470 align:start position:0%
working sleep
and<00:45:07.680><c> the</c><00:45:08.000><c> the</c><00:45:08.240><c> way</c><00:45:08.560><c> that</c><00:45:09.359><c> um</c><00:45:09.920><c> people</c><00:45:10.240><c> solve</c>

00:45:10.470 --> 00:45:10.480 align:start position:0%
and the the way that um people solve
 

00:45:10.480 --> 00:45:11.750 align:start position:0%
and the the way that um people solve
this<00:45:10.720><c> problem</c>

00:45:11.750 --> 00:45:11.760 align:start position:0%
this problem
 

00:45:11.760 --> 00:45:14.470 align:start position:0%
this problem
is<00:45:11.920><c> that</c><00:45:12.079><c> sleep</c><00:45:12.640><c> requires</c><00:45:13.599><c> even</c><00:45:13.760><c> though</c><00:45:13.920><c> sleep</c>

00:45:14.470 --> 00:45:14.480 align:start position:0%
is that sleep requires even though sleep
 

00:45:14.480 --> 00:45:15.750 align:start position:0%
is that sleep requires even though sleep
doesn't<00:45:14.720><c> really</c><00:45:14.960><c> know</c><00:45:15.119><c> what</c><00:45:15.280><c> you're</c><00:45:15.440><c> waiting</c>

00:45:15.750 --> 00:45:15.760 align:start position:0%
doesn't really know what you're waiting
 

00:45:15.760 --> 00:45:16.630 align:start position:0%
doesn't really know what you're waiting
for

00:45:16.630 --> 00:45:16.640 align:start position:0%
for
 

00:45:16.640 --> 00:45:18.390 align:start position:0%
for
it<00:45:16.800><c> requires</c><00:45:17.280><c> that</c><00:45:17.359><c> you</c><00:45:17.440><c> be</c><00:45:17.599><c> waiting</c><00:45:18.000><c> for</c>

00:45:18.390 --> 00:45:18.400 align:start position:0%
it requires that you be waiting for
 

00:45:18.400 --> 00:45:20.470 align:start position:0%
it requires that you be waiting for
something<00:45:19.359><c> and</c><00:45:19.680><c> furthermore</c>

00:45:20.470 --> 00:45:20.480 align:start position:0%
something and furthermore
 

00:45:20.480 --> 00:45:22.790 align:start position:0%
something and furthermore
that<00:45:20.720><c> there</c><00:45:20.880><c> be</c><00:45:21.119><c> a</c><00:45:21.280><c> lock</c><00:45:21.920><c> that</c><00:45:22.160><c> protects</c>

00:45:22.790 --> 00:45:22.800 align:start position:0%
that there be a lock that protects
 

00:45:22.800 --> 00:45:25.750 align:start position:0%
that there be a lock that protects
whatever<00:45:23.200><c> it</c><00:45:23.359><c> is</c><00:45:23.599><c> you're</c><00:45:23.839><c> waiting</c><00:45:24.240><c> for</c>

00:45:25.750 --> 00:45:25.760 align:start position:0%
whatever it is you're waiting for
 

00:45:25.760 --> 00:45:27.270 align:start position:0%
whatever it is you're waiting for
so<00:45:25.920><c> it</c><00:45:26.079><c> requires</c><00:45:26.400><c> that</c><00:45:26.560><c> there</c><00:45:26.720><c> be</c><00:45:26.880><c> a</c><00:45:26.960><c> sleep</c>

00:45:27.270 --> 00:45:27.280 align:start position:0%
so it requires that there be a sleep
 

00:45:27.280 --> 00:45:28.790 align:start position:0%
so it requires that there be a sleep
condition

00:45:28.790 --> 00:45:28.800 align:start position:0%
condition
 

00:45:28.800 --> 00:45:31.589 align:start position:0%
condition
which<00:45:28.960><c> it</c><00:45:29.119><c> doesn't</c><00:45:29.280><c> really</c><00:45:29.520><c> know</c><00:45:29.680><c> about</c><00:45:31.440><c> the</c>

00:45:31.589 --> 00:45:31.599 align:start position:0%
which it doesn't really know about the
 

00:45:31.599 --> 00:45:33.990 align:start position:0%
which it doesn't really know about the
sleep<00:45:31.839><c> condition</c><00:45:32.240><c> is</c><00:45:32.400><c> that</c><00:45:32.560><c> tx</c><00:45:32.960><c> done</c><00:45:33.280><c> is</c><00:45:33.440><c> equal</c>

00:45:33.990 --> 00:45:34.000 align:start position:0%
sleep condition is that tx done is equal
 

00:45:34.000 --> 00:45:36.150 align:start position:0%
sleep condition is that tx done is equal
to<00:45:34.160><c> one</c><00:45:35.280><c> so</c><00:45:35.520><c> sleep</c><00:45:35.680><c> doesn't</c><00:45:35.839><c> know</c><00:45:36.000><c> what</c><00:45:36.079><c> the</c>

00:45:36.150 --> 00:45:36.160 align:start position:0%
to one so sleep doesn't know what the
 

00:45:36.160 --> 00:45:37.510 align:start position:0%
to one so sleep doesn't know what the
sleep<00:45:36.319><c> condition</c><00:45:36.720><c> is</c><00:45:36.880><c> but</c><00:45:37.040><c> it</c><00:45:37.119><c> does</c>

00:45:37.510 --> 00:45:37.520 align:start position:0%
sleep condition is but it does
 

00:45:37.520 --> 00:45:39.910 align:start position:0%
sleep condition is but it does
it<00:45:37.680><c> is</c><00:45:38.400><c> requires</c><00:45:39.040><c> that</c><00:45:39.119><c> there</c><00:45:39.280><c> be</c><00:45:39.440><c> a</c><00:45:39.520><c> lock</c><00:45:39.760><c> that</c>

00:45:39.910 --> 00:45:39.920 align:start position:0%
it is requires that there be a lock that
 

00:45:39.920 --> 00:45:41.750 align:start position:0%
it is requires that there be a lock that
protects<00:45:40.400><c> the</c><00:45:40.560><c> sleep</c><00:45:40.800><c> condition</c><00:45:41.200><c> namely</c>

00:45:41.750 --> 00:45:41.760 align:start position:0%
protects the sleep condition namely
 

00:45:41.760 --> 00:45:42.630 align:start position:0%
protects the sleep condition namely
namely<00:45:42.079><c> this</c><00:45:42.240><c> ur</c>

00:45:42.630 --> 00:45:42.640 align:start position:0%
namely this ur
 

00:45:42.640 --> 00:45:46.390 align:start position:0%
namely this ur
tx<00:45:43.119><c> lock</c><00:45:43.839><c> and</c><00:45:44.000><c> that</c><00:45:44.400><c> the</c><00:45:44.560><c> lock</c><00:45:44.880><c> be</c><00:45:45.119><c> locked</c>

00:45:46.390 --> 00:45:46.400 align:start position:0%
tx lock and that the lock be locked
 

00:45:46.400 --> 00:45:47.829 align:start position:0%
tx lock and that the lock be locked
when<00:45:46.640><c> you</c><00:45:46.720><c> check</c><00:45:46.960><c> the</c><00:45:47.040><c> condition</c><00:45:47.520><c> that</c><00:45:47.680><c> you</c>

00:45:47.829 --> 00:45:47.839 align:start position:0%
when you check the condition that you
 

00:45:47.839 --> 00:45:50.309 align:start position:0%
when you check the condition that you
hold<00:45:48.079><c> the</c><00:45:48.160><c> lock</c><00:45:48.480><c> until</c><00:45:48.720><c> you</c><00:45:48.880><c> call</c><00:45:49.119><c> sleep</c>

00:45:50.309 --> 00:45:50.319 align:start position:0%
hold the lock until you call sleep
 

00:45:50.319 --> 00:45:52.470 align:start position:0%
hold the lock until you call sleep
and<00:45:50.480><c> that</c><00:45:50.560><c> you</c><00:45:50.720><c> pass</c><00:45:51.040><c> the</c><00:45:51.200><c> lock</c><00:45:51.440><c> to</c><00:45:51.599><c> sleep</c><00:45:52.400><c> and</c>

00:45:52.470 --> 00:45:52.480 align:start position:0%
and that you pass the lock to sleep and
 

00:45:52.480 --> 00:45:54.630 align:start position:0%
and that you pass the lock to sleep and
what<00:45:52.720><c> sleep</c><00:45:53.200><c> promises</c><00:45:53.680><c> essentially</c><00:45:54.240><c> at</c><00:45:54.400><c> an</c>

00:45:54.630 --> 00:45:54.640 align:start position:0%
what sleep promises essentially at an
 

00:45:54.640 --> 00:45:56.550 align:start position:0%
what sleep promises essentially at an
interface<00:45:55.040><c> level</c><00:45:55.359><c> is</c><00:45:55.440><c> that</c><00:45:56.000><c> it's</c><00:45:56.240><c> going</c><00:45:56.319><c> to</c>

00:45:56.550 --> 00:45:56.560 align:start position:0%
interface level is that it's going to
 

00:45:56.560 --> 00:45:57.990 align:start position:0%
interface level is that it's going to
atomically

00:45:57.990 --> 00:45:58.000 align:start position:0%
atomically
 

00:45:58.000 --> 00:45:59.750 align:start position:0%
atomically
put<00:45:58.160><c> the</c><00:45:58.319><c> process</c><00:45:58.640><c> to</c><00:45:58.800><c> sleep</c><00:45:59.119><c> and</c><00:45:59.280><c> release</c><00:45:59.599><c> the</c>

00:45:59.750 --> 00:45:59.760 align:start position:0%
put the process to sleep and release the
 

00:45:59.760 --> 00:46:01.829 align:start position:0%
put the process to sleep and release the
lock<00:46:00.560><c> as</c><00:46:00.800><c> a</c><00:46:00.880><c> sort</c><00:46:01.040><c> of</c>

00:46:01.829 --> 00:46:01.839 align:start position:0%
lock as a sort of
 

00:46:01.839 --> 00:46:04.470 align:start position:0%
lock as a sort of
at<00:46:02.000><c> least</c><00:46:02.720><c> isn't</c><00:46:03.200><c> indivisible</c><00:46:04.079><c> pair</c><00:46:04.319><c> of</c>

00:46:04.470 --> 00:46:04.480 align:start position:0%
at least isn't indivisible pair of
 

00:46:04.480 --> 00:46:07.109 align:start position:0%
at least isn't indivisible pair of
actions<00:46:05.040><c> at</c><00:46:05.119><c> least</c><00:46:05.440><c> with</c><00:46:05.680><c> respect</c><00:46:06.000><c> to</c><00:46:06.160><c> wake</c><00:46:06.400><c> up</c>

00:46:07.109 --> 00:46:07.119 align:start position:0%
actions at least with respect to wake up
 

00:46:07.119 --> 00:46:10.150 align:start position:0%
actions at least with respect to wake up
um<00:46:09.040><c> so</c>

00:46:10.150 --> 00:46:10.160 align:start position:0%
um so
 

00:46:10.160 --> 00:46:12.150 align:start position:0%
um so
wake<00:46:10.400><c> up</c><00:46:10.480><c> will</c><00:46:10.640><c> never</c><00:46:11.200><c> see</c><00:46:11.440><c> this</c><00:46:11.599><c> situation</c><00:46:12.079><c> in</c>

00:46:12.150 --> 00:46:12.160 align:start position:0%
wake up will never see this situation in
 

00:46:12.160 --> 00:46:13.670 align:start position:0%
wake up will never see this situation in
which<00:46:12.319><c> yeah</c><00:46:12.560><c> you've</c><00:46:12.720><c> released</c><00:46:13.040><c> the</c><00:46:13.119><c> lock</c>

00:46:13.670 --> 00:46:13.680 align:start position:0%
which yeah you've released the lock
 

00:46:13.680 --> 00:46:15.990 align:start position:0%
which yeah you've released the lock
but<00:46:13.920><c> no</c><00:46:14.240><c> the</c><00:46:14.400><c> process</c><00:46:14.800><c> is</c><00:46:14.880><c> not</c><00:46:15.040><c> asleep</c><00:46:15.839><c> all</c>

00:46:15.990 --> 00:46:16.000 align:start position:0%
but no the process is not asleep all
 

00:46:16.000 --> 00:46:17.349 align:start position:0%
but no the process is not asleep all
right<00:46:16.079><c> so</c><00:46:16.240><c> sleep</c><00:46:16.480><c> makes</c><00:46:16.720><c> the</c><00:46:16.880><c> release</c><00:46:17.200><c> of</c><00:46:17.280><c> the</c>

00:46:17.349 --> 00:46:17.359 align:start position:0%
right so sleep makes the release of the
 

00:46:17.359 --> 00:46:18.790 align:start position:0%
right so sleep makes the release of the
lock<00:46:17.599><c> and</c><00:46:17.680><c> the</c><00:46:18.000><c> putting</c><00:46:18.240><c> the</c>

00:46:18.790 --> 00:46:18.800 align:start position:0%
lock and the putting the
 

00:46:18.800 --> 00:46:23.030 align:start position:0%
lock and the putting the
process<00:46:19.119><c> to</c><00:46:19.280><c> sleep</c><00:46:19.520><c> atomic</c>

00:46:23.030 --> 00:46:23.040 align:start position:0%
 
 

00:46:23.040 --> 00:46:24.710 align:start position:0%
 
and<00:46:23.280><c> the</c><00:46:23.359><c> rules</c><00:46:23.760><c> for</c><00:46:23.920><c> this</c><00:46:24.160><c> is</c><00:46:24.240><c> that</c><00:46:24.400><c> there</c><00:46:24.640><c> has</c>

00:46:24.710 --> 00:46:24.720 align:start position:0%
and the rules for this is that there has
 

00:46:24.720 --> 00:46:27.510 align:start position:0%
and the rules for this is that there has
to<00:46:24.880><c> be</c><00:46:24.960><c> this</c><00:46:25.280><c> it</c><00:46:25.359><c> has</c><00:46:25.520><c> to</c><00:46:25.599><c> be</c><00:46:25.760><c> a</c><00:46:25.839><c> condition</c>

00:46:27.510 --> 00:46:27.520 align:start position:0%
to be this it has to be a condition
 

00:46:27.520 --> 00:46:28.950 align:start position:0%
to be this it has to be a condition
there<00:46:27.680><c> has</c><00:46:27.760><c> to</c><00:46:27.839><c> be</c><00:46:28.000><c> a</c><00:46:28.160><c> lock</c><00:46:28.400><c> protecting</c><00:46:28.880><c> the</c>

00:46:28.950 --> 00:46:28.960 align:start position:0%
there has to be a lock protecting the
 

00:46:28.960 --> 00:46:30.950 align:start position:0%
there has to be a lock protecting the
condition<00:46:29.760><c> the</c><00:46:29.920><c> lock</c><00:46:30.160><c> has</c><00:46:30.319><c> to</c><00:46:30.480><c> be</c><00:46:30.560><c> held</c><00:46:30.800><c> when</c>

00:46:30.950 --> 00:46:30.960 align:start position:0%
condition the lock has to be held when
 

00:46:30.960 --> 00:46:32.390 align:start position:0%
condition the lock has to be held when
you<00:46:31.040><c> call</c><00:46:31.280><c> sleep</c><00:46:31.599><c> you</c><00:46:31.760><c> have</c><00:46:31.839><c> to</c><00:46:31.920><c> pass</c><00:46:32.160><c> the</c><00:46:32.240><c> lock</c>

00:46:32.390 --> 00:46:32.400 align:start position:0%
you call sleep you have to pass the lock
 

00:46:32.400 --> 00:46:33.109 align:start position:0%
you call sleep you have to pass the lock
to<00:46:32.560><c> sleep</c><00:46:32.800><c> and</c>

00:46:33.109 --> 00:46:33.119 align:start position:0%
to sleep and
 

00:46:33.119 --> 00:46:36.790 align:start position:0%
to sleep and
furthermore<00:46:34.480><c> the</c><00:46:34.640><c> lock</c><00:46:35.280><c> has</c><00:46:35.520><c> to</c><00:46:35.680><c> be</c><00:46:35.839><c> held</c>

00:46:36.790 --> 00:46:36.800 align:start position:0%
furthermore the lock has to be held
 

00:46:36.800 --> 00:46:40.150 align:start position:0%
furthermore the lock has to be held
when<00:46:37.920><c> you</c><00:46:38.079><c> call</c><00:46:38.400><c> wake</c><00:46:38.640><c> up</c><00:46:39.520><c> this</c><00:46:39.680><c> condition</c>

00:46:40.150 --> 00:46:40.160 align:start position:0%
when you call wake up this condition
 

00:46:40.160 --> 00:46:40.710 align:start position:0%
when you call wake up this condition
lock

00:46:40.710 --> 00:46:40.720 align:start position:0%
lock
 

00:46:40.720 --> 00:46:42.710 align:start position:0%
lock
needs<00:46:40.960><c> to</c><00:46:41.040><c> be</c><00:46:41.359><c> held</c><00:46:41.599><c> when</c><00:46:41.680><c> you</c><00:46:41.839><c> call</c><00:46:42.400><c> wake</c><00:46:42.640><c> up</c>

00:46:42.710 --> 00:46:42.720 align:start position:0%
needs to be held when you call wake up
 

00:46:42.720 --> 00:46:45.270 align:start position:0%
needs to be held when you call wake up
so<00:46:42.880><c> these</c><00:46:43.040><c> are</c><00:46:43.119><c> rules</c>

00:46:45.270 --> 00:46:45.280 align:start position:0%
so these are rules
 

00:46:45.280 --> 00:46:47.510 align:start position:0%
so these are rules
that<00:46:45.440><c> the</c><00:46:45.599><c> programmer</c><00:46:46.000><c> had</c><00:46:46.160><c> better</c><00:46:46.400><c> follow</c><00:46:47.040><c> if</c>

00:46:47.510 --> 00:46:47.520 align:start position:0%
that the programmer had better follow if
 

00:46:47.520 --> 00:46:48.870 align:start position:0%
that the programmer had better follow if
they<00:46:47.680><c> want</c><00:46:47.839><c> to</c><00:46:47.920><c> write</c><00:46:48.079><c> correct</c><00:46:48.400><c> code</c><00:46:48.640><c> using</c>

00:46:48.870 --> 00:46:48.880 align:start position:0%
they want to write correct code using
 

00:46:48.880 --> 00:46:52.790 align:start position:0%
they want to write correct code using
sleep<00:46:49.200><c> and</c><00:46:49.280><c> wake</c><00:46:49.520><c> up</c>

00:46:52.790 --> 00:46:52.800 align:start position:0%
 
 

00:46:52.800 --> 00:46:57.030 align:start position:0%
 
all<00:46:52.880><c> right</c><00:46:55.760><c> so</c><00:46:55.920><c> let's</c><00:46:56.240><c> look</c><00:46:56.480><c> at</c>

00:46:57.030 --> 00:46:57.040 align:start position:0%
all right so let's look at
 

00:46:57.040 --> 00:46:59.430 align:start position:0%
all right so let's look at
uh<00:46:57.200><c> the</c><00:46:57.359><c> sleep</c><00:46:57.680><c> and</c><00:46:57.760><c> wake</c><00:46:58.000><c> up</c><00:46:58.640><c> um</c><00:46:59.040><c> to</c><00:46:59.200><c> try</c><00:46:59.359><c> to</c>

00:46:59.430 --> 00:46:59.440 align:start position:0%
uh the sleep and wake up um to try to
 

00:46:59.440 --> 00:47:01.109 align:start position:0%
uh the sleep and wake up um to try to
spot<00:46:59.760><c> how</c><00:47:00.000><c> they</c><00:47:00.240><c> actually</c>

00:47:01.109 --> 00:47:01.119 align:start position:0%
spot how they actually
 

00:47:01.119 --> 00:47:02.309 align:start position:0%
spot how they actually
use<00:47:01.280><c> this</c><00:47:01.520><c> extra</c><00:47:01.760><c> little</c><00:47:02.000><c> piece</c><00:47:02.160><c> of</c>

00:47:02.309 --> 00:47:02.319 align:start position:0%
use this extra little piece of
 

00:47:02.319 --> 00:47:04.470 align:start position:0%
use this extra little piece of
information<00:47:03.040><c> and</c><00:47:03.119><c> these</c><00:47:03.359><c> rules</c>

00:47:04.470 --> 00:47:04.480 align:start position:0%
information and these rules
 

00:47:04.480 --> 00:47:06.870 align:start position:0%
information and these rules
to<00:47:05.040><c> avoid</c><00:47:05.359><c> lost</c><00:47:05.599><c> wake-ups</c><00:47:06.319><c> so</c><00:47:06.480><c> first</c><00:47:06.720><c> i</c><00:47:06.800><c> want</c>

00:47:06.870 --> 00:47:06.880 align:start position:0%
to avoid lost wake-ups so first i want
 

00:47:06.880 --> 00:47:10.630 align:start position:0%
to avoid lost wake-ups so first i want
to<00:47:06.960><c> look</c><00:47:07.040><c> at</c><00:47:07.200><c> wake</c><00:47:07.440><c> up</c>

00:47:10.630 --> 00:47:10.640 align:start position:0%
 
 

00:47:10.640 --> 00:47:12.870 align:start position:0%
 
wake<00:47:10.880><c> up's</c><00:47:11.040><c> not</c><00:47:11.119><c> very</c><00:47:11.280><c> surprising</c><00:47:12.640><c> it</c><00:47:12.720><c> just</c>

00:47:12.870 --> 00:47:12.880 align:start position:0%
wake up's not very surprising it just
 

00:47:12.880 --> 00:47:15.030 align:start position:0%
wake up's not very surprising it just
runs<00:47:13.200><c> through</c><00:47:13.280><c> the</c><00:47:13.440><c> entire</c><00:47:13.839><c> process</c><00:47:14.160><c> table</c>

00:47:15.030 --> 00:47:15.040 align:start position:0%
runs through the entire process table
 

00:47:15.040 --> 00:47:19.109 align:start position:0%
runs through the entire process table
it<00:47:15.599><c> locks</c><00:47:16.400><c> every</c><00:47:16.800><c> process</c><00:47:17.839><c> and</c><00:47:18.000><c> remember</c><00:47:18.400><c> that</c>

00:47:19.109 --> 00:47:19.119 align:start position:0%
it locks every process and remember that
 

00:47:19.119 --> 00:47:20.790 align:start position:0%
it locks every process and remember that
after<00:47:19.359><c> it's</c><00:47:19.599><c> locked</c><00:47:19.839><c> the</c><00:47:19.920><c> process</c><00:47:20.400><c> and</c><00:47:20.559><c> you</c>

00:47:20.790 --> 00:47:20.800 align:start position:0%
after it's locked the process and you
 

00:47:20.800 --> 00:47:22.309 align:start position:0%
after it's locked the process and you
can't<00:47:21.040><c> really</c><00:47:21.280><c> look</c><00:47:21.440><c> at</c><00:47:21.520><c> a</c><00:47:21.599><c> process</c><00:47:22.000><c> of</c><00:47:22.079><c> state</c>

00:47:22.309 --> 00:47:22.319 align:start position:0%
can't really look at a process of state
 

00:47:22.319 --> 00:47:23.270 align:start position:0%
can't really look at a process of state
without<00:47:22.559><c> locking</c><00:47:22.880><c> it</c>

00:47:23.270 --> 00:47:23.280 align:start position:0%
without locking it
 

00:47:23.280 --> 00:47:25.990 align:start position:0%
without locking it
it<00:47:23.440><c> locks</c><00:47:23.760><c> each</c><00:47:24.000><c> process</c><00:47:25.040><c> if</c><00:47:25.200><c> the</c><00:47:25.440><c> process</c><00:47:25.839><c> is</c>

00:47:25.990 --> 00:47:26.000 align:start position:0%
it locks each process if the process is
 

00:47:26.000 --> 00:47:27.750 align:start position:0%
it locks each process if the process is
sleeping

00:47:27.750 --> 00:47:27.760 align:start position:0%
sleeping
 

00:47:27.760 --> 00:47:29.990 align:start position:0%
sleeping
and<00:47:28.079><c> the</c><00:47:28.800><c> channel</c><00:47:29.119><c> that</c><00:47:29.280><c> it's</c><00:47:29.440><c> sleeping</c><00:47:29.760><c> for</c>

00:47:29.990 --> 00:47:30.000 align:start position:0%
and the channel that it's sleeping for
 

00:47:30.000 --> 00:47:31.670 align:start position:0%
and the channel that it's sleeping for
is<00:47:30.160><c> the</c><00:47:30.319><c> same</c><00:47:30.640><c> channel</c><00:47:30.960><c> that</c><00:47:31.119><c> was</c><00:47:31.280><c> passed</c><00:47:31.520><c> to</c>

00:47:31.670 --> 00:47:31.680 align:start position:0%
is the same channel that was passed to
 

00:47:31.680 --> 00:47:32.790 align:start position:0%
is the same channel that was passed to
wake<00:47:31.920><c> up</c>

00:47:32.790 --> 00:47:32.800 align:start position:0%
wake up
 

00:47:32.800 --> 00:47:34.950 align:start position:0%
wake up
then<00:47:33.359><c> wake</c><00:47:33.599><c> up</c><00:47:33.839><c> marks</c><00:47:34.160><c> the</c><00:47:34.400><c> changes</c><00:47:34.800><c> the</c>

00:47:34.950 --> 00:47:34.960 align:start position:0%
then wake up marks the changes the
 

00:47:34.960 --> 00:47:36.549 align:start position:0%
then wake up marks the changes the
processes<00:47:35.440><c> state</c><00:47:35.680><c> to</c><00:47:35.839><c> runnable</c>

00:47:36.549 --> 00:47:36.559 align:start position:0%
processes state to runnable
 

00:47:36.559 --> 00:47:40.309 align:start position:0%
processes state to runnable
and<00:47:36.720><c> then</c><00:47:36.880><c> releases</c><00:47:37.359><c> the</c><00:47:37.440><c> processes</c><00:47:38.000><c> lock</c>

00:47:40.309 --> 00:47:40.319 align:start position:0%
and then releases the processes lock
 

00:47:40.319 --> 00:47:45.270 align:start position:0%
and then releases the processes lock
so<00:47:40.640><c> no</c><00:47:40.800><c> surprises</c><00:47:41.280><c> here</c><00:47:43.200><c> we'll</c><00:47:43.440><c> ignore</c><00:47:43.920><c> my</c>

00:47:45.270 --> 00:47:45.280 align:start position:0%
so no surprises here we'll ignore my
 

00:47:45.280 --> 00:47:47.030 align:start position:0%
so no surprises here we'll ignore my
broken<00:47:45.599><c> sleep</c><00:47:46.000><c> and</c><00:47:46.160><c> instead</c><00:47:46.480><c> look</c><00:47:46.640><c> at</c><00:47:46.720><c> sleep</c>

00:47:47.030 --> 00:47:47.040 align:start position:0%
broken sleep and instead look at sleep
 

00:47:47.040 --> 00:47:50.829 align:start position:0%
broken sleep and instead look at sleep
itself<00:47:47.920><c> so</c><00:47:48.160><c> here's</c><00:47:48.400><c> the</c><00:47:48.480><c> implementation</c><00:47:49.119><c> of</c>

00:47:50.829 --> 00:47:50.839 align:start position:0%
itself so here's the implementation of
 

00:47:50.839 --> 00:47:52.790 align:start position:0%
itself so here's the implementation of
sleep

00:47:52.790 --> 00:47:52.800 align:start position:0%
sleep
 

00:47:52.800 --> 00:47:56.710 align:start position:0%
sleep
with<00:47:53.040><c> now</c><00:47:53.280><c> this</c><00:47:53.680><c> new</c><00:47:54.000><c> lock</c><00:47:54.319><c> argument</c>

00:47:56.710 --> 00:47:56.720 align:start position:0%
with now this new lock argument
 

00:47:56.720 --> 00:47:59.750 align:start position:0%
with now this new lock argument
um<00:47:57.680><c> so</c><00:47:57.920><c> we</c><00:47:58.000><c> know</c><00:47:58.160><c> sleep</c><00:47:58.559><c> has</c><00:47:58.800><c> to</c><00:47:58.960><c> reduce</c><00:47:59.440><c> has</c><00:47:59.599><c> to</c>

00:47:59.750 --> 00:47:59.760 align:start position:0%
um so we know sleep has to reduce has to
 

00:47:59.760 --> 00:48:00.630 align:start position:0%
um so we know sleep has to reduce has to
release

00:48:00.630 --> 00:48:00.640 align:start position:0%
release
 

00:48:00.640 --> 00:48:02.710 align:start position:0%
release
that<00:48:00.800><c> condition</c><00:48:01.359><c> lock</c><00:48:01.839><c> that</c><00:48:02.160><c> its</c><00:48:02.400><c> second</c>

00:48:02.710 --> 00:48:02.720 align:start position:0%
that condition lock that its second
 

00:48:02.720 --> 00:48:04.150 align:start position:0%
that condition lock that its second
argument<00:48:03.119><c> we</c><00:48:03.280><c> know</c><00:48:03.440><c> it</c><00:48:03.520><c> has</c><00:48:03.599><c> to</c><00:48:03.760><c> release</c><00:48:04.079><c> it</c>

00:48:04.150 --> 00:48:04.160 align:start position:0%
argument we know it has to release it
 

00:48:04.160 --> 00:48:05.270 align:start position:0%
argument we know it has to release it
because<00:48:04.400><c> the</c>

00:48:05.270 --> 00:48:05.280 align:start position:0%
because the
 

00:48:05.280 --> 00:48:06.549 align:start position:0%
because the
you<00:48:05.359><c> know</c><00:48:05.520><c> the</c><00:48:05.599><c> interrupt</c><00:48:05.920><c> routine</c><00:48:06.240><c> has</c><00:48:06.400><c> to</c><00:48:06.480><c> be</c>

00:48:06.549 --> 00:48:06.559 align:start position:0%
you know the interrupt routine has to be
 

00:48:06.559 --> 00:48:07.990 align:start position:0%
you know the interrupt routine has to be
able<00:48:06.640><c> to</c><00:48:06.800><c> acquire</c><00:48:07.280><c> it</c><00:48:07.440><c> so</c><00:48:07.599><c> we</c><00:48:07.680><c> know</c><00:48:07.839><c> there's</c>

00:48:07.990 --> 00:48:08.000 align:start position:0%
able to acquire it so we know there's
 

00:48:08.000 --> 00:48:09.349 align:start position:0%
able to acquire it so we know there's
going<00:48:08.079><c> to</c><00:48:08.160><c> be</c><00:48:08.319><c> release</c><00:48:08.720><c> of</c><00:48:08.880><c> that</c><00:48:09.119><c> lock</c>

00:48:09.349 --> 00:48:09.359 align:start position:0%
going to be release of that lock
 

00:48:09.359 --> 00:48:11.349 align:start position:0%
going to be release of that lock
somewhere<00:48:09.760><c> inside</c><00:48:10.160><c> sleep</c><00:48:10.480><c> and</c><00:48:10.559><c> indeed</c>

00:48:11.349 --> 00:48:11.359 align:start position:0%
somewhere inside sleep and indeed
 

00:48:11.359 --> 00:48:13.349 align:start position:0%
somewhere inside sleep and indeed
here's<00:48:11.680><c> the</c><00:48:11.760><c> release</c><00:48:12.079><c> of</c><00:48:12.160><c> that</c><00:48:12.400><c> lock</c><00:48:13.200><c> of</c>

00:48:13.349 --> 00:48:13.359 align:start position:0%
here's the release of that lock of
 

00:48:13.359 --> 00:48:14.549 align:start position:0%
here's the release of that lock of
course<00:48:13.520><c> we're</c><00:48:13.760><c> worried</c>

00:48:14.549 --> 00:48:14.559 align:start position:0%
course we're worried
 

00:48:14.559 --> 00:48:17.109 align:start position:0%
course we're worried
after<00:48:14.800><c> we</c><00:48:15.200><c> release</c><00:48:15.520><c> the</c><00:48:15.680><c> lock</c><00:48:16.079><c> that</c><00:48:16.640><c> at</c><00:48:16.880><c> this</c>

00:48:17.109 --> 00:48:17.119 align:start position:0%
after we release the lock that at this
 

00:48:17.119 --> 00:48:19.030 align:start position:0%
after we release the lock that at this
very<00:48:17.520><c> point</c>

00:48:19.030 --> 00:48:19.040 align:start position:0%
very point
 

00:48:19.040 --> 00:48:22.230 align:start position:0%
very point
wake<00:48:19.280><c> up</c><00:48:19.440><c> might</c><00:48:19.599><c> be</c><00:48:19.839><c> called</c><00:48:20.880><c> and</c><00:48:21.839><c> might</c><00:48:22.000><c> wake</c>

00:48:22.230 --> 00:48:22.240 align:start position:0%
wake up might be called and might wake
 

00:48:22.240 --> 00:48:23.270 align:start position:0%
wake up might be called and might wake
up<00:48:22.400><c> this</c><00:48:22.640><c> process</c>

00:48:23.270 --> 00:48:23.280 align:start position:0%
up this process
 

00:48:23.280 --> 00:48:25.349 align:start position:0%
up this process
so<00:48:23.520><c> in</c><00:48:23.599><c> order</c><00:48:23.839><c> to</c><00:48:24.480><c> might</c><00:48:24.720><c> try</c><00:48:24.880><c> to</c><00:48:24.960><c> wake</c><00:48:25.119><c> up</c><00:48:25.200><c> this</c>

00:48:25.349 --> 00:48:25.359 align:start position:0%
so in order to might try to wake up this
 

00:48:25.359 --> 00:48:26.549 align:start position:0%
so in order to might try to wake up this
process<00:48:25.680><c> but</c><00:48:25.839><c> of</c><00:48:25.920><c> course</c><00:48:26.079><c> we</c><00:48:26.160><c> haven't</c><00:48:26.319><c> marked</c>

00:48:26.549 --> 00:48:26.559 align:start position:0%
process but of course we haven't marked
 

00:48:26.559 --> 00:48:27.430 align:start position:0%
process but of course we haven't marked
it<00:48:26.720><c> sleeping</c><00:48:27.040><c> yet</c>

00:48:27.430 --> 00:48:27.440 align:start position:0%
it sleeping yet
 

00:48:27.440 --> 00:48:30.390 align:start position:0%
it sleeping yet
right<00:48:27.680><c> so</c><00:48:28.240><c> we</c><00:48:28.480><c> cannot</c><00:48:28.880><c> afford</c><00:48:29.680><c> to</c><00:48:29.839><c> have</c><00:48:30.079><c> wake</c>

00:48:30.390 --> 00:48:30.400 align:start position:0%
right so we cannot afford to have wake
 

00:48:30.400 --> 00:48:30.790 align:start position:0%
right so we cannot afford to have wake
up

00:48:30.790 --> 00:48:30.800 align:start position:0%
up
 

00:48:30.800 --> 00:48:34.150 align:start position:0%
up
execute<00:48:31.839><c> um</c><00:48:33.520><c> oops</c>

00:48:34.150 --> 00:48:34.160 align:start position:0%
execute um oops
 

00:48:34.160 --> 00:48:36.069 align:start position:0%
execute um oops
to<00:48:34.319><c> have</c><00:48:34.559><c> wake</c><00:48:34.800><c> up</c><00:48:34.960><c> execute</c><00:48:35.440><c> right</c><00:48:35.680><c> after</c><00:48:35.920><c> this</c>

00:48:36.069 --> 00:48:36.079 align:start position:0%
to have wake up execute right after this
 

00:48:36.079 --> 00:48:37.349 align:start position:0%
to have wake up execute right after this
release

00:48:37.349 --> 00:48:37.359 align:start position:0%
release
 

00:48:37.359 --> 00:48:38.710 align:start position:0%
release
even<00:48:37.520><c> though</c><00:48:37.680><c> we're</c><00:48:37.839><c> releasing</c><00:48:38.240><c> so</c><00:48:38.400><c> in</c><00:48:38.480><c> order</c>

00:48:38.710 --> 00:48:38.720 align:start position:0%
even though we're releasing so in order
 

00:48:38.720 --> 00:48:40.870 align:start position:0%
even though we're releasing so in order
to<00:48:39.119><c> cause</c><00:48:39.359><c> that</c><00:48:39.520><c> not</c><00:48:39.680><c> to</c><00:48:39.839><c> happen</c><00:48:40.319><c> before</c>

00:48:40.870 --> 00:48:40.880 align:start position:0%
to cause that not to happen before
 

00:48:40.880 --> 00:48:42.309 align:start position:0%
to cause that not to happen before
releasing<00:48:41.280><c> the</c><00:48:41.440><c> condition</c><00:48:41.920><c> lock</c>

00:48:42.309 --> 00:48:42.319 align:start position:0%
releasing the condition lock
 

00:48:42.319 --> 00:48:45.829 align:start position:0%
releasing the condition lock
sleep<00:48:42.640><c> acquires</c><00:48:44.559><c> the</c><00:48:44.720><c> lock</c><00:48:45.119><c> of</c><00:48:45.200><c> the</c><00:48:45.440><c> process</c>

00:48:45.829 --> 00:48:45.839 align:start position:0%
sleep acquires the lock of the process
 

00:48:45.839 --> 00:48:47.430 align:start position:0%
sleep acquires the lock of the process
that's<00:48:46.000><c> going</c><00:48:46.160><c> to</c><00:48:46.319><c> sleep</c>

00:48:47.430 --> 00:48:47.440 align:start position:0%
that's going to sleep
 

00:48:47.440 --> 00:48:51.270 align:start position:0%
that's going to sleep
if<00:48:47.599><c> you</c><00:48:47.680><c> recall</c>

00:48:51.270 --> 00:48:51.280 align:start position:0%
 
 

00:48:51.280 --> 00:48:54.230 align:start position:0%
 
wake<00:48:51.599><c> up</c><00:48:53.200><c> must</c><00:48:53.440><c> be</c><00:48:53.599><c> called</c><00:48:54.000><c> with</c><00:48:54.160><c> the</c>

00:48:54.230 --> 00:48:54.240 align:start position:0%
wake up must be called with the
 

00:48:54.240 --> 00:48:55.349 align:start position:0%
wake up must be called with the
condition<00:48:54.640><c> lock</c><00:48:54.880><c> held</c>

00:48:55.349 --> 00:48:55.359 align:start position:0%
condition lock held
 

00:48:55.359 --> 00:48:58.309 align:start position:0%
condition lock held
and<00:48:55.920><c> it</c><00:48:56.160><c> acquires</c><00:48:56.880><c> the</c><00:48:57.440><c> if</c><00:48:57.599><c> it's</c><00:48:57.920><c> about</c><00:48:58.160><c> to</c>

00:48:58.309 --> 00:48:58.319 align:start position:0%
and it acquires the if it's about to
 

00:48:58.319 --> 00:48:59.829 align:start position:0%
and it acquires the if it's about to
wake<00:48:58.640><c> up</c><00:48:58.720><c> a</c><00:48:58.800><c> process</c><00:48:59.200><c> it</c><00:48:59.359><c> first</c>

00:48:59.829 --> 00:48:59.839 align:start position:0%
wake up a process it first
 

00:48:59.839 --> 00:49:01.510 align:start position:0%
wake up a process it first
must<00:49:00.079><c> wait</c><00:49:00.319><c> to</c><00:49:00.480><c> acquire</c><00:49:00.800><c> that</c><00:49:00.960><c> process</c><00:49:01.359><c> is</c>

00:49:01.510 --> 00:49:01.520 align:start position:0%
must wait to acquire that process is
 

00:49:01.520 --> 00:49:04.390 align:start position:0%
must wait to acquire that process is
lock

00:49:04.390 --> 00:49:04.400 align:start position:0%
 
 

00:49:04.400 --> 00:49:07.589 align:start position:0%
 
so<00:49:05.119><c> for</c><00:49:05.280><c> the</c><00:49:05.440><c> entire</c><00:49:06.400><c> amount</c><00:49:06.720><c> of</c><00:49:06.880><c> time</c><00:49:07.200><c> between</c>

00:49:07.589 --> 00:49:07.599 align:start position:0%
so for the entire amount of time between
 

00:49:07.599 --> 00:49:08.390 align:start position:0%
so for the entire amount of time between
when<00:49:07.839><c> you</c><00:49:08.079><c> are</c>

00:49:08.390 --> 00:49:08.400 align:start position:0%
when you are
 

00:49:08.400 --> 00:49:11.349 align:start position:0%
when you are
right<00:49:09.280><c> between</c><00:49:09.760><c> before</c><00:49:10.480><c> you</c><00:49:10.800><c> are</c><00:49:10.960><c> right</c>

00:49:11.349 --> 00:49:11.359 align:start position:0%
right between before you are right
 

00:49:11.359 --> 00:49:11.910 align:start position:0%
right between before you are right
checked

00:49:11.910 --> 00:49:11.920 align:start position:0%
checked
 

00:49:11.920 --> 00:49:15.349 align:start position:0%
checked
the<00:49:12.079><c> condition</c><00:49:13.359><c> um</c><00:49:14.319><c> and</c><00:49:14.480><c> we</c><00:49:14.800><c> when</c><00:49:14.960><c> we</c><00:49:15.119><c> call</c>

00:49:15.349 --> 00:49:15.359 align:start position:0%
the condition um and we when we call
 

00:49:15.359 --> 00:49:16.790 align:start position:0%
the condition um and we when we call
sched<00:49:15.680><c> here</c>

00:49:16.790 --> 00:49:16.800 align:start position:0%
sched here
 

00:49:16.800 --> 00:49:19.670 align:start position:0%
sched here
this<00:49:17.040><c> thread</c><00:49:17.359><c> holds</c><00:49:17.920><c> one</c><00:49:18.319><c> or</c><00:49:18.559><c> another</c><00:49:19.440><c> of</c><00:49:19.520><c> the</c>

00:49:19.670 --> 00:49:19.680 align:start position:0%
this thread holds one or another of the
 

00:49:19.680 --> 00:49:21.829 align:start position:0%
this thread holds one or another of the
condition<00:49:20.160><c> lock</c><00:49:20.480><c> and</c><00:49:20.640><c> p</c><00:49:20.800><c> arrow</c><00:49:21.119><c> lock</c><00:49:21.440><c> at</c><00:49:21.680><c> all</c>

00:49:21.829 --> 00:49:21.839 align:start position:0%
condition lock and p arrow lock at all
 

00:49:21.839 --> 00:49:23.990 align:start position:0%
condition lock and p arrow lock at all
times

00:49:23.990 --> 00:49:24.000 align:start position:0%
times
 

00:49:24.000 --> 00:49:26.150 align:start position:0%
times
just<00:49:24.240><c> to</c><00:49:24.319><c> go</c><00:49:24.480><c> back</c><00:49:24.640><c> to</c><00:49:24.880><c> you</c><00:49:25.119><c> are</c><00:49:25.280><c> that's</c><00:49:26.000><c> i</c><00:49:26.000><c> want</c>

00:49:26.150 --> 00:49:26.160 align:start position:0%
just to go back to you are that's i want
 

00:49:26.160 --> 00:49:27.349 align:start position:0%
just to go back to you are that's i want
to<00:49:26.319><c> emphasize</c><00:49:26.880><c> this</c>

00:49:27.349 --> 00:49:27.359 align:start position:0%
to emphasize this
 

00:49:27.359 --> 00:49:30.470 align:start position:0%
to emphasize this
um<00:49:28.240><c> uart</c><00:49:28.640><c> right</c><00:49:28.960><c> acquires</c>

00:49:30.470 --> 00:49:30.480 align:start position:0%
um uart right acquires
 

00:49:30.480 --> 00:49:33.349 align:start position:0%
um uart right acquires
the<00:49:30.720><c> condition</c><00:49:31.200><c> lock</c><00:49:31.599><c> here</c><00:49:32.559><c> and</c><00:49:32.880><c> holds</c><00:49:33.280><c> the</c>

00:49:33.349 --> 00:49:33.359 align:start position:0%
the condition lock here and holds the
 

00:49:33.359 --> 00:49:34.870 align:start position:0%
the condition lock here and holds the
condition<00:49:33.760><c> lock</c><00:49:34.079><c> all</c><00:49:34.160><c> the</c><00:49:34.319><c> way</c><00:49:34.480><c> through</c><00:49:34.720><c> to</c>

00:49:34.870 --> 00:49:34.880 align:start position:0%
condition lock all the way through to
 

00:49:34.880 --> 00:49:36.309 align:start position:0%
condition lock all the way through to
where<00:49:35.040><c> it</c><00:49:35.200><c> calls</c><00:49:35.520><c> sleep</c>

00:49:36.309 --> 00:49:36.319 align:start position:0%
where it calls sleep
 

00:49:36.319 --> 00:49:38.549 align:start position:0%
where it calls sleep
and<00:49:36.480><c> so</c><00:49:36.720><c> it</c><00:49:36.960><c> requires</c><00:49:37.359><c> the</c><00:49:37.440><c> condition</c><00:49:37.839><c> lock</c>

00:49:38.549 --> 00:49:38.559 align:start position:0%
and so it requires the condition lock
 

00:49:38.559 --> 00:49:40.390 align:start position:0%
and so it requires the condition lock
checks<00:49:38.800><c> the</c><00:49:38.880><c> condition</c><00:49:39.200><c> with</c><00:49:39.359><c> the</c><00:49:39.440><c> lock</c><00:49:39.680><c> held</c>

00:49:40.390 --> 00:49:40.400 align:start position:0%
checks the condition with the lock held
 

00:49:40.400 --> 00:49:42.870 align:start position:0%
checks the condition with the lock held
calls<00:49:40.640><c> sleep</c><00:49:41.280><c> with</c><00:49:41.440><c> the</c><00:49:41.520><c> condition</c><00:49:41.920><c> lock</c><00:49:42.160><c> held</c>

00:49:42.870 --> 00:49:42.880 align:start position:0%
calls sleep with the condition lock held
 

00:49:42.880 --> 00:49:44.390 align:start position:0%
calls sleep with the condition lock held
so<00:49:43.280><c> wake</c><00:49:43.520><c> up</c>

00:49:44.390 --> 00:49:44.400 align:start position:0%
so wake up
 

00:49:44.400 --> 00:49:46.710 align:start position:0%
so wake up
can't<00:49:44.640><c> do</c><00:49:44.800><c> anything</c><00:49:45.200><c> now</c><00:49:45.520><c> because</c><00:49:46.319><c> can</c><00:49:46.559><c> not</c>

00:49:46.710 --> 00:49:46.720 align:start position:0%
can't do anything now because can not
 

00:49:46.720 --> 00:49:48.069 align:start position:0%
can't do anything now because can not
even<00:49:46.960><c> allow</c><00:49:47.119><c> to</c><00:49:47.280><c> call</c><00:49:47.520><c> wake</c><00:49:47.760><c> up</c>

00:49:48.069 --> 00:49:48.079 align:start position:0%
even allow to call wake up
 

00:49:48.079 --> 00:49:49.990 align:start position:0%
even allow to call wake up
until<00:49:48.319><c> we</c><00:49:48.880><c> until</c><00:49:49.119><c> the</c><00:49:49.280><c> caller</c><00:49:49.680><c> owns</c><00:49:49.920><c> the</c>

00:49:49.990 --> 00:49:50.000 align:start position:0%
until we until the caller owns the
 

00:49:50.000 --> 00:49:51.349 align:start position:0%
until we until the caller owns the
condition<00:49:50.319><c> lock</c><00:49:50.480><c> so</c><00:49:50.720><c> wake</c><00:49:50.880><c> up</c><00:49:50.960><c> is</c><00:49:51.040><c> definitely</c>

00:49:51.349 --> 00:49:51.359 align:start position:0%
condition lock so wake up is definitely
 

00:49:51.359 --> 00:49:52.870 align:start position:0%
condition lock so wake up is definitely
not<00:49:51.599><c> executing</c><00:49:52.079><c> now</c>

00:49:52.870 --> 00:49:52.880 align:start position:0%
not executing now
 

00:49:52.880 --> 00:49:54.950 align:start position:0%
not executing now
um<00:49:53.680><c> we</c><00:49:53.839><c> still</c><00:49:54.000><c> hold</c><00:49:54.240><c> the</c><00:49:54.319><c> lock</c><00:49:54.559><c> when</c><00:49:54.640><c> we</c><00:49:54.720><c> call</c>

00:49:54.950 --> 00:49:54.960 align:start position:0%
um we still hold the lock when we call
 

00:49:54.960 --> 00:49:57.190 align:start position:0%
um we still hold the lock when we call
sleep

00:49:57.190 --> 00:49:57.200 align:start position:0%
sleep
 

00:49:57.200 --> 00:50:00.710 align:start position:0%
sleep
uh<00:49:57.760><c> sleep</c><00:49:58.960><c> releases</c><00:49:59.359><c> the</c><00:49:59.440><c> condition</c><00:49:59.839><c> lock</c><00:50:00.160><c> but</c>

00:50:00.710 --> 00:50:00.720 align:start position:0%
uh sleep releases the condition lock but
 

00:50:00.720 --> 00:50:05.990 align:start position:0%
uh sleep releases the condition lock but
first<00:50:01.839><c> acquires</c><00:50:02.559><c> the</c><00:50:02.720><c> processes</c><00:50:03.280><c> lock</c>

00:50:05.990 --> 00:50:06.000 align:start position:0%
 
 

00:50:06.000 --> 00:50:10.309 align:start position:0%
 
and<00:50:06.319><c> if</c><00:50:06.480><c> you</c><00:50:06.559><c> remember</c><00:50:07.520><c> oops</c>

00:50:10.309 --> 00:50:10.319 align:start position:0%
 
 

00:50:10.319 --> 00:50:12.309 align:start position:0%
 
wake<00:50:10.640><c> up</c><00:50:11.280><c> wake</c><00:50:11.520><c> up</c><00:50:11.599><c> is</c><00:50:11.839><c> called</c><00:50:12.079><c> with</c><00:50:12.240><c> the</c>

00:50:12.309 --> 00:50:12.319 align:start position:0%
wake up wake up is called with the
 

00:50:12.319 --> 00:50:13.510 align:start position:0%
wake up wake up is called with the
condition<00:50:12.800><c> lock</c>

00:50:13.510 --> 00:50:13.520 align:start position:0%
condition lock
 

00:50:13.520 --> 00:50:17.510 align:start position:0%
condition lock
um<00:50:14.559><c> after</c><00:50:14.880><c> we</c><00:50:15.040><c> release</c><00:50:15.440><c> it</c><00:50:16.400><c> i'm</c><00:50:16.559><c> sorry</c>

00:50:17.510 --> 00:50:17.520 align:start position:0%
um after we release it i'm sorry
 

00:50:17.520 --> 00:50:18.950 align:start position:0%
um after we release it i'm sorry
after<00:50:17.760><c> we</c><00:50:17.839><c> release</c><00:50:18.160><c> the</c><00:50:18.240><c> condition</c><00:50:18.559><c> lock</c><00:50:18.800><c> wake</c>

00:50:18.950 --> 00:50:18.960 align:start position:0%
after we release the condition lock wake
 

00:50:18.960 --> 00:50:21.030 align:start position:0%
after we release the condition lock wake
up<00:50:19.040><c> can</c><00:50:19.200><c> be</c><00:50:19.359><c> called</c><00:50:20.000><c> but</c><00:50:20.319><c> wake</c><00:50:20.559><c> up</c>

00:50:21.030 --> 00:50:21.040 align:start position:0%
up can be called but wake up
 

00:50:21.040 --> 00:50:23.030 align:start position:0%
up can be called but wake up
won't<00:50:21.599><c> look</c><00:50:21.839><c> at</c><00:50:21.920><c> the</c><00:50:22.000><c> process</c><00:50:22.400><c> until</c><00:50:22.720><c> it</c><00:50:22.800><c> has</c>

00:50:23.030 --> 00:50:23.040 align:start position:0%
won't look at the process until it has
 

00:50:23.040 --> 00:50:24.790 align:start position:0%
won't look at the process until it has
the<00:50:23.119><c> process</c><00:50:23.520><c> lock</c><00:50:23.920><c> which</c><00:50:24.160><c> we</c><00:50:24.240><c> hold</c><00:50:24.480><c> so</c><00:50:24.640><c> okay</c>

00:50:24.790 --> 00:50:24.800 align:start position:0%
the process lock which we hold so okay
 

00:50:24.800 --> 00:50:27.030 align:start position:0%
the process lock which we hold so okay
so<00:50:24.960><c> wake</c><00:50:25.200><c> up</c><00:50:25.359><c> is</c><00:50:25.440><c> still</c><00:50:25.599><c> not</c><00:50:25.839><c> executing</c>

00:50:27.030 --> 00:50:27.040 align:start position:0%
so wake up is still not executing
 

00:50:27.040 --> 00:50:31.750 align:start position:0%
so wake up is still not executing
um

00:50:31.750 --> 00:50:31.760 align:start position:0%
 
 

00:50:31.760 --> 00:50:33.190 align:start position:0%
 
acquire<00:50:32.160><c> the</c><00:50:32.240><c> process</c><00:50:32.640><c> lock</c><00:50:32.800><c> release</c><00:50:33.119><c> the</c>

00:50:33.190 --> 00:50:33.200 align:start position:0%
acquire the process lock release the
 

00:50:33.200 --> 00:50:35.510 align:start position:0%
acquire the process lock release the
condition<00:50:33.599><c> lock</c><00:50:34.319><c> while</c><00:50:34.640><c> holding</c><00:50:34.960><c> the</c><00:50:35.119><c> process</c>

00:50:35.510 --> 00:50:35.520 align:start position:0%
condition lock while holding the process
 

00:50:35.520 --> 00:50:36.630 align:start position:0%
condition lock while holding the process
lock<00:50:35.760><c> mark</c><00:50:36.079><c> the</c>

00:50:36.630 --> 00:50:36.640 align:start position:0%
lock mark the
 

00:50:36.640 --> 00:50:39.589 align:start position:0%
lock mark the
process<00:50:37.520><c> as</c><00:50:37.839><c> sleeping</c><00:50:38.800><c> on</c><00:50:38.960><c> this</c><00:50:39.200><c> particular</c>

00:50:39.589 --> 00:50:39.599 align:start position:0%
process as sleeping on this particular
 

00:50:39.599 --> 00:50:40.630 align:start position:0%
process as sleeping on this particular
channel

00:50:40.630 --> 00:50:40.640 align:start position:0%
channel
 

00:50:40.640 --> 00:50:43.109 align:start position:0%
channel
and<00:50:40.800><c> then</c><00:50:41.040><c> call</c><00:50:41.280><c> sched</c><00:50:41.760><c> which</c><00:50:41.920><c> calls</c><00:50:42.240><c> switch</c>

00:50:43.109 --> 00:50:43.119 align:start position:0%
and then call sched which calls switch
 

00:50:43.119 --> 00:50:44.870 align:start position:0%
and then call sched which calls switch
right<00:50:43.359><c> we</c><00:50:43.520><c> still</c><00:50:43.760><c> the</c><00:50:43.920><c> process</c><00:50:44.240><c> lock</c><00:50:44.480><c> so</c><00:50:44.640><c> wake</c>

00:50:44.870 --> 00:50:44.880 align:start position:0%
right we still the process lock so wake
 

00:50:44.880 --> 00:50:46.790 align:start position:0%
right we still the process lock so wake
up<00:50:45.040><c> still</c><00:50:45.280><c> isn't</c><00:50:45.520><c> doing</c><00:50:45.760><c> anything</c>

00:50:46.790 --> 00:50:46.800 align:start position:0%
up still isn't doing anything
 

00:50:46.800 --> 00:50:48.630 align:start position:0%
up still isn't doing anything
and<00:50:46.960><c> if</c><00:50:47.119><c> you</c><00:50:47.280><c> remember</c><00:50:47.680><c> the</c><00:50:48.240><c> we're</c><00:50:48.400><c> now</c>

00:50:48.630 --> 00:50:48.640 align:start position:0%
and if you remember the we're now
 

00:50:48.640 --> 00:50:50.710 align:start position:0%
and if you remember the we're now
switching<00:50:49.440><c> away</c><00:50:49.680><c> from</c><00:50:49.839><c> this</c>

00:50:50.710 --> 00:50:50.720 align:start position:0%
switching away from this
 

00:50:50.720 --> 00:50:52.790 align:start position:0%
switching away from this
thread<00:50:51.040><c> to</c><00:50:51.200><c> the</c><00:50:51.359><c> scheduler</c><00:50:51.760><c> thread</c><00:50:52.559><c> and</c><00:50:52.640><c> the</c>

00:50:52.790 --> 00:50:52.800 align:start position:0%
thread to the scheduler thread and the
 

00:50:52.800 --> 00:50:54.309 align:start position:0%
thread to the scheduler thread and the
scheduler<00:50:53.200><c> routine</c><00:50:53.680><c> after</c><00:50:53.920><c> it's</c><00:50:54.079><c> called</c><00:50:54.240><c> the</c>

00:50:54.309 --> 00:50:54.319 align:start position:0%
scheduler routine after it's called the
 

00:50:54.319 --> 00:50:55.589 align:start position:0%
scheduler routine after it's called the
switch<00:50:54.640><c> returns</c>

00:50:55.589 --> 00:50:55.599 align:start position:0%
switch returns
 

00:50:55.599 --> 00:50:58.470 align:start position:0%
switch returns
releases<00:50:56.720><c> um</c><00:50:57.119><c> the</c><00:50:57.280><c> recently</c><00:50:57.760><c> running</c>

00:50:58.470 --> 00:50:58.480 align:start position:0%
releases um the recently running
 

00:50:58.480 --> 00:50:59.910 align:start position:0%
releases um the recently running
processes<00:50:59.119><c> lock</c>

00:50:59.910 --> 00:50:59.920 align:start position:0%
processes lock
 

00:50:59.920 --> 00:51:02.549 align:start position:0%
processes lock
so<00:51:00.319><c> at</c><00:51:00.559><c> this</c><00:51:00.960><c> point</c><00:51:01.680><c> after</c><00:51:02.000><c> we're</c><00:51:02.319><c> in</c><00:51:02.400><c> the</c>

00:51:02.549 --> 00:51:02.559 align:start position:0%
so at this point after we're in the
 

00:51:02.559 --> 00:51:03.270 align:start position:0%
so at this point after we're in the
scheduler

00:51:03.270 --> 00:51:03.280 align:start position:0%
scheduler
 

00:51:03.280 --> 00:51:06.309 align:start position:0%
scheduler
wakeup<00:51:03.680><c> can</c><00:51:03.920><c> finally</c><00:51:04.319><c> acquire</c><00:51:05.440><c> prlock</c><00:51:06.160><c> for</c>

00:51:06.309 --> 00:51:06.319 align:start position:0%
wakeup can finally acquire prlock for
 

00:51:06.319 --> 00:51:08.069 align:start position:0%
wakeup can finally acquire prlock for
this<00:51:06.559><c> process</c>

00:51:08.069 --> 00:51:08.079 align:start position:0%
this process
 

00:51:08.079 --> 00:51:11.190 align:start position:0%
this process
notice<00:51:08.480><c> that</c><00:51:08.640><c> it's</c><00:51:08.800><c> sleeping</c><00:51:10.000><c> and</c>

00:51:11.190 --> 00:51:11.200 align:start position:0%
notice that it's sleeping and
 

00:51:11.200 --> 00:51:13.030 align:start position:0%
notice that it's sleeping and
on<00:51:11.440><c> this</c><00:51:11.680><c> channel</c><00:51:12.079><c> and</c><00:51:12.319><c> set</c><00:51:12.480><c> its</c><00:51:12.720><c> state</c><00:51:12.880><c> to</c>

00:51:13.030 --> 00:51:13.040 align:start position:0%
on this channel and set its state to
 

00:51:13.040 --> 00:51:15.430 align:start position:0%
on this channel and set its state to
wake<00:51:13.280><c> up</c><00:51:14.079><c> so</c><00:51:14.240><c> we're</c><00:51:14.400><c> guaranteed</c><00:51:14.880><c> the</c>

00:51:15.430 --> 00:51:15.440 align:start position:0%
wake up so we're guaranteed the
 

00:51:15.440 --> 00:51:18.230 align:start position:0%
wake up so we're guaranteed the
effect<00:51:16.079><c> of</c><00:51:16.960><c> the</c><00:51:17.359><c> rule</c><00:51:17.599><c> that</c><00:51:17.760><c> you</c><00:51:17.920><c> have</c><00:51:18.000><c> to</c><00:51:18.079><c> hold</c>

00:51:18.230 --> 00:51:18.240 align:start position:0%
effect of the rule that you have to hold
 

00:51:18.240 --> 00:51:20.470 align:start position:0%
effect of the rule that you have to hold
the<00:51:18.319><c> condition</c><00:51:18.720><c> lock</c><00:51:18.880><c> when</c><00:51:19.040><c> calling</c><00:51:19.440><c> sleep</c>

00:51:20.470 --> 00:51:20.480 align:start position:0%
the condition lock when calling sleep
 

00:51:20.480 --> 00:51:21.750 align:start position:0%
the condition lock when calling sleep
the<00:51:20.559><c> fact</c><00:51:20.800><c> that</c><00:51:20.880><c> sleep</c><00:51:21.119><c> knows</c><00:51:21.359><c> about</c><00:51:21.599><c> that</c>

00:51:21.750 --> 00:51:21.760 align:start position:0%
the fact that sleep knows about that
 

00:51:21.760 --> 00:51:23.430 align:start position:0%
the fact that sleep knows about that
lock<00:51:22.000><c> and</c><00:51:22.160><c> releases</c><00:51:22.559><c> it</c><00:51:22.800><c> only</c><00:51:23.119><c> after</c>

00:51:23.430 --> 00:51:23.440 align:start position:0%
lock and releases it only after
 

00:51:23.440 --> 00:51:24.549 align:start position:0%
lock and releases it only after
requiring<00:51:24.000><c> process</c>

00:51:24.549 --> 00:51:24.559 align:start position:0%
requiring process
 

00:51:24.559 --> 00:51:27.910 align:start position:0%
requiring process
pr<00:51:25.040><c> lock</c><00:51:25.839><c> and</c><00:51:26.079><c> wake</c><00:51:26.319><c> up</c><00:51:27.040><c> needing</c><00:51:27.280><c> to</c><00:51:27.359><c> hold</c><00:51:27.599><c> both</c>

00:51:27.910 --> 00:51:27.920 align:start position:0%
pr lock and wake up needing to hold both
 

00:51:27.920 --> 00:51:28.950 align:start position:0%
pr lock and wake up needing to hold both
locks

00:51:28.950 --> 00:51:28.960 align:start position:0%
locks
 

00:51:28.960 --> 00:51:30.710 align:start position:0%
locks
in<00:51:29.040><c> order</c><00:51:29.280><c> to</c><00:51:29.440><c> think</c><00:51:29.599><c> about</c><00:51:29.760><c> this</c><00:51:29.920><c> process</c>

00:51:30.710 --> 00:51:30.720 align:start position:0%
in order to think about this process
 

00:51:30.720 --> 00:51:32.630 align:start position:0%
in order to think about this process
means<00:51:30.960><c> that</c><00:51:31.280><c> we</c><00:51:31.440><c> can</c><00:51:31.599><c> no</c><00:51:31.920><c> longer</c>

00:51:32.630 --> 00:51:32.640 align:start position:0%
means that we can no longer
 

00:51:32.640 --> 00:51:35.910 align:start position:0%
means that we can no longer
lose<00:51:33.040><c> a</c><00:51:33.200><c> wake</c><00:51:33.520><c> up</c><00:51:34.640><c> and</c><00:51:34.800><c> so</c><00:51:34.960><c> we</c><00:51:35.119><c> fix</c><00:51:35.440><c> this</c><00:51:35.599><c> loss</c>

00:51:35.910 --> 00:51:35.920 align:start position:0%
lose a wake up and so we fix this loss
 

00:51:35.920 --> 00:51:38.950 align:start position:0%
lose a wake up and so we fix this loss
wake-up<00:51:36.319><c> problem</c>

00:51:38.950 --> 00:51:38.960 align:start position:0%
 
 

00:51:38.960 --> 00:51:41.589 align:start position:0%
 
i<00:51:39.119><c> realize</c><00:51:39.359><c> that</c><00:51:39.520><c> a</c><00:51:39.599><c> little</c><00:51:39.760><c> bit</c><00:51:39.920><c> involved</c><00:51:41.280><c> any</c>

00:51:41.589 --> 00:51:41.599 align:start position:0%
i realize that a little bit involved any
 

00:51:41.599 --> 00:52:02.870 align:start position:0%
i realize that a little bit involved any
questions<00:51:42.000><c> about</c><00:51:42.160><c> what's</c><00:51:42.400><c> going</c><00:51:42.559><c> on</c><00:51:48.839><c> here</c>

00:52:02.870 --> 00:52:02.880 align:start position:0%
 
 

00:52:02.880 --> 00:52:05.990 align:start position:0%
 
all<00:52:02.960><c> right</c><00:52:03.200><c> well</c><00:52:04.000><c> feel</c><00:52:04.240><c> free</c><00:52:04.480><c> to</c><00:52:04.720><c> uh</c><00:52:05.760><c> ask</c>

00:52:05.990 --> 00:52:06.000 align:start position:0%
all right well feel free to uh ask
 

00:52:06.000 --> 00:52:07.349 align:start position:0%
all right well feel free to uh ask
questions<00:52:06.319><c> at</c><00:52:06.480><c> any</c><00:52:06.640><c> time</c>

00:52:07.349 --> 00:52:07.359 align:start position:0%
questions at any time
 

00:52:07.359 --> 00:52:11.190 align:start position:0%
questions at any time
um<00:52:09.440><c> all</c><00:52:09.520><c> right</c><00:52:09.680><c> so</c><00:52:09.839><c> we</c><00:52:10.160><c> saw</c><00:52:10.480><c> one</c>

00:52:11.190 --> 00:52:11.200 align:start position:0%
um all right so we saw one
 

00:52:11.200 --> 00:52:13.990 align:start position:0%
um all right so we saw one
we<00:52:11.359><c> saw</c><00:52:11.520><c> this</c><00:52:11.839><c> one</c><00:52:12.960><c> looked</c><00:52:13.200><c> at</c><00:52:13.280><c> this</c><00:52:13.440><c> one</c><00:52:13.680><c> case</c>

00:52:13.990 --> 00:52:14.000 align:start position:0%
we saw this one looked at this one case
 

00:52:14.000 --> 00:52:15.990 align:start position:0%
we saw this one looked at this one case
in<00:52:14.079><c> which</c><00:52:14.319><c> we're</c>

00:52:15.990 --> 00:52:16.000 align:start position:0%
in which we're
 

00:52:16.000 --> 00:52:18.390 align:start position:0%
in which we're
using<00:52:16.400><c> sleep</c><00:52:16.720><c> and</c><00:52:16.880><c> wake</c><00:52:17.119><c> up</c><00:52:18.000><c> in</c><00:52:18.079><c> a</c><00:52:18.160><c> way</c><00:52:18.319><c> that</c>

00:52:18.390 --> 00:52:18.400 align:start position:0%
using sleep and wake up in a way that
 

00:52:18.400 --> 00:52:20.309 align:start position:0%
using sleep and wake up in a way that
avoids<00:52:18.960><c> loss</c><00:52:19.200><c> wake</c><00:52:19.440><c> ups</c>

00:52:20.309 --> 00:52:20.319 align:start position:0%
avoids loss wake ups
 

00:52:20.319 --> 00:52:23.349 align:start position:0%
avoids loss wake ups
um<00:52:20.559><c> there's</c><00:52:21.280><c> a</c><00:52:21.359><c> bunch</c><00:52:21.520><c> of</c><00:52:21.680><c> others</c><00:52:22.000><c> in</c><00:52:22.160><c> xv6</c>

00:52:23.349 --> 00:52:23.359 align:start position:0%
um there's a bunch of others in xv6
 

00:52:23.359 --> 00:52:25.349 align:start position:0%
um there's a bunch of others in xv6
this<00:52:23.520><c> particular</c><00:52:24.000><c> one</c><00:52:24.480><c> the</c><00:52:24.720><c> thing</c><00:52:25.040><c> that</c><00:52:25.119><c> we're</c>

00:52:25.349 --> 00:52:25.359 align:start position:0%
this particular one the thing that we're
 

00:52:25.359 --> 00:52:26.710 align:start position:0%
this particular one the thing that we're
waiting<00:52:25.680><c> for</c><00:52:25.839><c> the</c><00:52:26.000><c> condition</c><00:52:26.400><c> that</c><00:52:26.559><c> we're</c>

00:52:26.710 --> 00:52:26.720 align:start position:0%
waiting for the condition that we're
 

00:52:26.720 --> 00:52:28.230 align:start position:0%
waiting for the condition that we're
waiting<00:52:27.119><c> for</c>

00:52:28.230 --> 00:52:28.240 align:start position:0%
waiting for
 

00:52:28.240 --> 00:52:30.309 align:start position:0%
waiting for
is<00:52:28.400><c> that</c><00:52:28.880><c> an</c><00:52:29.200><c> interrupt</c><00:52:29.599><c> has</c><00:52:29.760><c> occurred</c><00:52:30.160><c> that</c>

00:52:30.309 --> 00:52:30.319 align:start position:0%
is that an interrupt has occurred that
 

00:52:30.319 --> 00:52:31.990 align:start position:0%
is that an interrupt has occurred that
is<00:52:30.480><c> signaled</c><00:52:30.880><c> that</c><00:52:31.119><c> hardware's</c><00:52:31.680><c> ready</c>

00:52:31.990 --> 00:52:32.000 align:start position:0%
is signaled that hardware's ready
 

00:52:32.000 --> 00:52:35.829 align:start position:0%
is signaled that hardware's ready
to<00:52:32.720><c> sort</c><00:52:32.960><c> of</c><00:52:33.359><c> do</c><00:52:33.520><c> the</c><00:52:33.599><c> next</c><00:52:33.920><c> thing</c>

00:52:35.829 --> 00:52:35.839 align:start position:0%
to sort of do the next thing
 

00:52:35.839 --> 00:52:38.950 align:start position:0%
to sort of do the next thing
there's<00:52:36.079><c> also</c><00:52:36.640><c> times</c><00:52:37.040><c> when</c><00:52:37.359><c> uh</c>

00:52:38.950 --> 00:52:38.960 align:start position:0%
there's also times when uh
 

00:52:38.960 --> 00:52:40.870 align:start position:0%
there's also times when uh
kernel<00:52:39.200><c> code</c><00:52:39.520><c> calls</c><00:52:39.839><c> sleep</c><00:52:40.240><c> in</c><00:52:40.400><c> order</c><00:52:40.640><c> to</c><00:52:40.720><c> wait</c>

00:52:40.870 --> 00:52:40.880 align:start position:0%
kernel code calls sleep in order to wait
 

00:52:40.880 --> 00:52:42.390 align:start position:0%
kernel code calls sleep in order to wait
for<00:52:40.960><c> a</c><00:52:41.040><c> diff</c><00:52:41.280><c> some</c><00:52:41.520><c> other</c><00:52:41.760><c> thread</c><00:52:42.079><c> to</c><00:52:42.160><c> do</c>

00:52:42.390 --> 00:52:42.400 align:start position:0%
for a diff some other thread to do
 

00:52:42.400 --> 00:52:43.109 align:start position:0%
for a diff some other thread to do
something

00:52:43.109 --> 00:52:43.119 align:start position:0%
something
 

00:52:43.119 --> 00:52:44.309 align:start position:0%
something
which<00:52:43.359><c> is</c><00:52:43.440><c> not</c><00:52:43.599><c> actually</c><00:52:43.920><c> in</c><00:52:44.079><c> the</c><00:52:44.160><c> end</c>

00:52:44.309 --> 00:52:44.319 align:start position:0%
which is not actually in the end
 

00:52:44.319 --> 00:52:46.150 align:start position:0%
which is not actually in the end
conceptually<00:52:44.880><c> different</c><00:52:45.280><c> but</c>

00:52:46.150 --> 00:52:46.160 align:start position:0%
conceptually different but
 

00:52:46.160 --> 00:52:48.390 align:start position:0%
conceptually different but
may<00:52:46.319><c> feel</c><00:52:46.480><c> a</c><00:52:46.559><c> little</c><00:52:46.720><c> bit</c><00:52:46.880><c> different</c><00:52:47.200><c> so</c><00:52:48.319><c> in</c>

00:52:48.390 --> 00:52:48.400 align:start position:0%
may feel a little bit different so in
 

00:52:48.400 --> 00:52:50.790 align:start position:0%
may feel a little bit different so in
the<00:52:48.559><c> pipe</c><00:52:48.800><c> code</c><00:52:49.040><c> for</c><00:52:49.200><c> example</c>

00:52:50.790 --> 00:52:50.800 align:start position:0%
the pipe code for example
 

00:52:50.800 --> 00:52:57.829 align:start position:0%
the pipe code for example
if<00:52:50.880><c> you</c><00:52:50.960><c> look</c><00:52:51.119><c> at</c><00:52:51.200><c> pipe</c><00:52:51.520><c> read</c>

00:52:57.829 --> 00:52:57.839 align:start position:0%
 
 

00:52:57.839 --> 00:52:59.109 align:start position:0%
 
you<00:52:57.920><c> know</c><00:52:58.000><c> there's</c><00:52:58.160><c> a</c><00:52:58.240><c> bunch</c><00:52:58.480><c> of</c><00:52:58.559><c> junk</c><00:52:58.880><c> here</c>

00:52:59.109 --> 00:52:59.119 align:start position:0%
you know there's a bunch of junk here
 

00:52:59.119 --> 00:53:00.870 align:start position:0%
you know there's a bunch of junk here
which<00:52:59.440><c> you</c><00:52:59.680><c> have</c><00:52:59.760><c> to</c><00:53:00.000><c> ignore</c><00:53:00.480><c> but</c>

00:53:00.870 --> 00:53:00.880 align:start position:0%
which you have to ignore but
 

00:53:00.880 --> 00:53:04.309 align:start position:0%
which you have to ignore but
um<00:53:02.480><c> the</c><00:53:02.960><c> reed</c><00:53:03.200><c> system</c><00:53:03.520><c> call</c><00:53:03.680><c> on</c><00:53:03.760><c> a</c><00:53:03.839><c> pipe</c><00:53:04.160><c> ends</c>

00:53:04.309 --> 00:53:04.319 align:start position:0%
um the reed system call on a pipe ends
 

00:53:04.319 --> 00:53:05.589 align:start position:0%
um the reed system call on a pipe ends
up<00:53:04.480><c> calling</c><00:53:04.720><c> pipe</c><00:53:05.040><c> read</c>

00:53:05.589 --> 00:53:05.599 align:start position:0%
up calling pipe read
 

00:53:05.599 --> 00:53:08.390 align:start position:0%
up calling pipe read
there's<00:53:05.839><c> a</c><00:53:06.079><c> lock</c><00:53:07.040><c> that</c><00:53:07.280><c> protects</c><00:53:07.680><c> the</c><00:53:07.839><c> pipe</c>

00:53:08.390 --> 00:53:08.400 align:start position:0%
there's a lock that protects the pipe
 

00:53:08.400 --> 00:53:09.109 align:start position:0%
there's a lock that protects the pipe
and<00:53:08.559><c> this</c><00:53:08.720><c> is</c>

00:53:09.109 --> 00:53:09.119 align:start position:0%
and this is
 

00:53:09.119 --> 00:53:12.309 align:start position:0%
and this is
going<00:53:09.280><c> to</c><00:53:09.440><c> end</c><00:53:09.599><c> up</c><00:53:09.839><c> being</c>

00:53:12.309 --> 00:53:12.319 align:start position:0%
 
 

00:53:12.319 --> 00:53:15.190 align:start position:0%
 
the<00:53:12.480><c> condition</c><00:53:12.960><c> lock</c><00:53:14.240><c> pipe</c><00:53:14.480><c> read</c><00:53:14.720><c> needs</c><00:53:15.040><c> to</c>

00:53:15.190 --> 00:53:15.200 align:start position:0%
the condition lock pipe read needs to
 

00:53:15.200 --> 00:53:16.710 align:start position:0%
the condition lock pipe read needs to
wait<00:53:15.520><c> until</c><00:53:15.760><c> there's</c><00:53:16.000><c> actually</c>

00:53:16.710 --> 00:53:16.720 align:start position:0%
wait until there's actually
 

00:53:16.720 --> 00:53:19.910 align:start position:0%
wait until there's actually
data<00:53:17.200><c> buffered</c><00:53:17.599><c> in</c><00:53:17.680><c> the</c><00:53:17.839><c> pipe</c><00:53:18.559><c> um</c><00:53:19.040><c> and</c><00:53:19.599><c> that</c>

00:53:19.910 --> 00:53:19.920 align:start position:0%
data buffered in the pipe um and that
 

00:53:19.920 --> 00:53:20.549 align:start position:0%
data buffered in the pipe um and that
condition

00:53:20.549 --> 00:53:20.559 align:start position:0%
condition
 

00:53:20.559 --> 00:53:23.589 align:start position:0%
condition
is<00:53:21.599><c> you</c><00:53:21.680><c> know</c><00:53:21.839><c> that</c><00:53:21.920><c> there's</c><00:53:22.160><c> data</c><00:53:22.480><c> ready</c><00:53:22.880><c> is</c><00:53:23.359><c> n</c>

00:53:23.589 --> 00:53:23.599 align:start position:0%
is you know that there's data ready is n
 

00:53:23.599 --> 00:53:24.309 align:start position:0%
is you know that there's data ready is n
read

00:53:24.309 --> 00:53:24.319 align:start position:0%
read
 

00:53:24.319 --> 00:53:26.630 align:start position:0%
read
or<00:53:24.559><c> n</c><00:53:24.720><c> write</c><00:53:25.040><c> is</c><00:53:25.280><c> greater</c><00:53:25.599><c> than</c><00:53:25.839><c> n</c><00:53:26.079><c> re</c><00:53:26.319><c> that</c><00:53:26.480><c> is</c>

00:53:26.630 --> 00:53:26.640 align:start position:0%
or n write is greater than n re that is
 

00:53:26.640 --> 00:53:28.870 align:start position:0%
or n write is greater than n re that is
more<00:53:26.880><c> bytes</c><00:53:27.119><c> have</c><00:53:27.200><c> been</c><00:53:27.359><c> written</c><00:53:27.599><c> than</c><00:53:27.839><c> red</c>

00:53:28.870 --> 00:53:28.880 align:start position:0%
more bytes have been written than red
 

00:53:28.880 --> 00:53:31.910 align:start position:0%
more bytes have been written than red
while<00:53:29.119><c> that's</c><00:53:29.599><c> not</c><00:53:30.000><c> true</c>

00:53:31.910 --> 00:53:31.920 align:start position:0%
while that's not true
 

00:53:31.920 --> 00:53:35.349 align:start position:0%
while that's not true
pipe<00:53:32.160><c> reed</c><00:53:32.480><c> sits</c><00:53:32.720><c> in</c><00:53:32.960><c> sleep</c><00:53:34.800><c> waiting</c><00:53:35.119><c> for</c><00:53:35.200><c> that</c>

00:53:35.349 --> 00:53:35.359 align:start position:0%
pipe reed sits in sleep waiting for that
 

00:53:35.359 --> 00:53:36.230 align:start position:0%
pipe reed sits in sleep waiting for that
condition

00:53:36.230 --> 00:53:36.240 align:start position:0%
condition
 

00:53:36.240 --> 00:53:39.829 align:start position:0%
condition
and<00:53:37.440><c> passes</c><00:53:37.920><c> in</c><00:53:38.240><c> this</c><00:53:39.040><c> pipe</c><00:53:39.359><c> lock</c>

00:53:39.829 --> 00:53:39.839 align:start position:0%
and passes in this pipe lock
 

00:53:39.839 --> 00:53:41.190 align:start position:0%
and passes in this pipe lock
the<00:53:40.000><c> condition</c><00:53:40.400><c> lock</c><00:53:40.640><c> that</c><00:53:40.800><c> protects</c><00:53:41.119><c> the</c>

00:53:41.190 --> 00:53:41.200 align:start position:0%
the condition lock that protects the
 

00:53:41.200 --> 00:53:44.069 align:start position:0%
the condition lock that protects the
condition<00:53:41.599><c> into</c><00:53:41.839><c> sleep</c>

00:53:44.069 --> 00:53:44.079 align:start position:0%
condition into sleep
 

00:53:44.079 --> 00:53:45.510 align:start position:0%
condition into sleep
in<00:53:44.240><c> order</c><00:53:44.559><c> to</c><00:53:44.640><c> protect</c><00:53:44.960><c> against</c><00:53:45.280><c> loss</c>

00:53:45.510 --> 00:53:45.520 align:start position:0%
in order to protect against loss
 

00:53:45.520 --> 00:53:46.710 align:start position:0%
in order to protect against loss
wake-ups<00:53:45.920><c> and</c><00:53:46.000><c> the</c><00:53:46.079><c> reason</c><00:53:46.319><c> why</c><00:53:46.480><c> you</c><00:53:46.559><c> might</c>

00:53:46.710 --> 00:53:46.720 align:start position:0%
wake-ups and the reason why you might
 

00:53:46.720 --> 00:53:48.069 align:start position:0%
wake-ups and the reason why you might
get<00:53:46.800><c> a</c><00:53:46.880><c> loss</c><00:53:47.119><c> wake</c><00:53:47.359><c> up</c><00:53:47.599><c> is</c><00:53:47.680><c> that</c>

00:53:48.069 --> 00:53:48.079 align:start position:0%
get a loss wake up is that
 

00:53:48.079 --> 00:53:51.190 align:start position:0%
get a loss wake up is that
on<00:53:48.319><c> a</c><00:53:48.400><c> different</c><00:53:48.800><c> core</c><00:53:50.559><c> um</c>

00:53:51.190 --> 00:53:51.200 align:start position:0%
on a different core um
 

00:53:51.200 --> 00:53:52.790 align:start position:0%
on a different core um
we<00:53:51.359><c> go</c><00:53:51.520><c> a</c><00:53:51.520><c> little</c><00:53:51.760><c> farther</c><00:53:52.079><c> up</c><00:53:52.160><c> in</c><00:53:52.240><c> the</c><00:53:52.400><c> file</c><00:53:52.640><c> on</c>

00:53:52.790 --> 00:53:52.800 align:start position:0%
we go a little farther up in the file on
 

00:53:52.800 --> 00:53:54.549 align:start position:0%
we go a little farther up in the file on
a<00:53:52.880><c> different</c><00:53:53.119><c> core</c><00:53:53.680><c> there's</c><00:53:53.920><c> probably</c><00:53:54.319><c> some</c>

00:53:54.549 --> 00:53:54.559 align:start position:0%
a different core there's probably some
 

00:53:54.559 --> 00:53:56.230 align:start position:0%
a different core there's probably some
other<00:53:54.839><c> thread</c>

00:53:56.230 --> 00:53:56.240 align:start position:0%
other thread
 

00:53:56.240 --> 00:53:58.790 align:start position:0%
other thread
just<00:53:56.559><c> now</c><00:53:56.880><c> calling</c><00:53:57.280><c> pipe</c><00:53:57.599><c> right</c><00:53:58.400><c> and</c><00:53:58.640><c> it's</c>

00:53:58.790 --> 00:53:58.800 align:start position:0%
just now calling pipe right and it's
 

00:53:58.800 --> 00:54:01.430 align:start position:0%
just now calling pipe right and it's
going<00:53:58.880><c> to</c><00:53:59.040><c> add</c>

00:54:01.430 --> 00:54:01.440 align:start position:0%
going to add
 

00:54:01.440 --> 00:54:03.190 align:start position:0%
going to add
bytes<00:54:01.760><c> to</c><00:54:01.920><c> the</c><00:54:02.160><c> pipe</c><00:54:02.400><c> buffer</c><00:54:02.800><c> and</c><00:54:02.880><c> finally</c>

00:54:03.190 --> 00:54:03.200 align:start position:0%
bytes to the pipe buffer and finally
 

00:54:03.200 --> 00:54:04.630 align:start position:0%
bytes to the pipe buffer and finally
called<00:54:03.520><c> wake</c><00:54:03.760><c> up</c>

00:54:04.630 --> 00:54:04.640 align:start position:0%
called wake up
 

00:54:04.640 --> 00:54:08.390 align:start position:0%
called wake up
on<00:54:05.040><c> the</c><00:54:06.559><c> channel</c><00:54:06.960><c> that</c><00:54:07.280><c> pipe</c><00:54:07.599><c> read</c><00:54:07.839><c> is</c>

00:54:08.390 --> 00:54:08.400 align:start position:0%
on the channel that pipe read is
 

00:54:08.400 --> 00:54:11.349 align:start position:0%
on the channel that pipe read is
waiting<00:54:08.720><c> for</c><00:54:09.359><c> and</c><00:54:10.000><c> you</c><00:54:10.160><c> know</c><00:54:10.319><c> the</c><00:54:10.960><c> we</c><00:54:11.119><c> want</c><00:54:11.280><c> to</c>

00:54:11.349 --> 00:54:11.359 align:start position:0%
waiting for and you know the we want to
 

00:54:11.359 --> 00:54:13.270 align:start position:0%
waiting for and you know the we want to
avoid<00:54:11.680><c> the</c><00:54:11.839><c> risk</c><00:54:12.319><c> that</c><00:54:12.559><c> between</c>

00:54:13.270 --> 00:54:13.280 align:start position:0%
avoid the risk that between
 

00:54:13.280 --> 00:54:16.390 align:start position:0%
avoid the risk that between
the<00:54:13.440><c> reader</c><00:54:13.920><c> checking</c><00:54:15.040><c> uh</c><00:54:15.280><c> that</c><00:54:15.440><c> there's</c>

00:54:16.390 --> 00:54:16.400 align:start position:0%
the reader checking uh that there's
 

00:54:16.400 --> 00:54:18.470 align:start position:0%
the reader checking uh that there's
and<00:54:16.559><c> noticing</c><00:54:16.960><c> there's</c><00:54:17.119><c> no</c><00:54:17.280><c> bytes</c><00:54:17.599><c> to</c><00:54:17.760><c> read</c>

00:54:18.470 --> 00:54:18.480 align:start position:0%
and noticing there's no bytes to read
 

00:54:18.480 --> 00:54:19.829 align:start position:0%
and noticing there's no bytes to read
and<00:54:18.720><c> calling</c><00:54:19.119><c> sleep</c>

00:54:19.829 --> 00:54:19.839 align:start position:0%
and calling sleep
 

00:54:19.839 --> 00:54:22.390 align:start position:0%
and calling sleep
we<00:54:20.079><c> do</c><00:54:20.240><c> not</c><00:54:20.480><c> want</c><00:54:20.800><c> a</c><00:54:21.359><c> a</c><00:54:21.520><c> pipe</c><00:54:21.760><c> right</c><00:54:22.000><c> on</c><00:54:22.160><c> another</c>

00:54:22.390 --> 00:54:22.400 align:start position:0%
we do not want a a pipe right on another
 

00:54:22.400 --> 00:54:25.190 align:start position:0%
we do not want a a pipe right on another
core<00:54:22.640><c> to</c><00:54:22.800><c> slip</c><00:54:23.119><c> in</c><00:54:23.280><c> there</c>

00:54:25.190 --> 00:54:25.200 align:start position:0%
core to slip in there
 

00:54:25.200 --> 00:54:27.750 align:start position:0%
core to slip in there
and<00:54:25.359><c> add</c><00:54:25.680><c> bites</c><00:54:26.079><c> and</c><00:54:26.960><c> wake</c><00:54:27.200><c> us</c><00:54:27.359><c> up</c><00:54:27.520><c> before</c>

00:54:27.750 --> 00:54:27.760 align:start position:0%
and add bites and wake us up before
 

00:54:27.760 --> 00:54:28.870 align:start position:0%
and add bites and wake us up before
we've<00:54:27.920><c> even</c><00:54:28.079><c> gone</c><00:54:28.240><c> to</c><00:54:28.400><c> sleep</c>

00:54:28.870 --> 00:54:28.880 align:start position:0%
we've even gone to sleep
 

00:54:28.880 --> 00:54:31.990 align:start position:0%
we've even gone to sleep
right<00:54:29.119><c> that</c><00:54:29.200><c> would</c><00:54:29.359><c> be</c><00:54:29.440><c> a</c><00:54:29.520><c> lost</c><00:54:29.760><c> wake</c><00:54:30.000><c> up</c><00:54:31.680><c> and</c>

00:54:31.990 --> 00:54:32.000 align:start position:0%
right that would be a lost wake up and
 

00:54:32.000 --> 00:54:34.150 align:start position:0%
right that would be a lost wake up and
this<00:54:32.319><c> lock</c><00:54:32.800><c> basically</c><00:54:33.440><c> this</c><00:54:33.680><c> lock</c><00:54:34.000><c> and</c><00:54:34.079><c> the</c>

00:54:34.150 --> 00:54:34.160 align:start position:0%
this lock basically this lock and the
 

00:54:34.160 --> 00:54:35.349 align:start position:0%
this lock basically this lock and the
fact<00:54:34.400><c> that</c>

00:54:35.349 --> 00:54:35.359 align:start position:0%
fact that
 

00:54:35.359 --> 00:54:38.470 align:start position:0%
fact that
sleep<00:54:35.680><c> is</c><00:54:35.839><c> careful</c><00:54:36.160><c> about</c><00:54:36.319><c> releasing</c><00:54:36.799><c> it</c>

00:54:38.470 --> 00:54:38.480 align:start position:0%
sleep is careful about releasing it
 

00:54:38.480 --> 00:54:41.270 align:start position:0%
sleep is careful about releasing it
prevent<00:54:39.280><c> a</c><00:54:39.520><c> writer</c><00:54:40.000><c> from</c><00:54:40.559><c> slipping</c><00:54:40.960><c> in</c>

00:54:41.270 --> 00:54:41.280 align:start position:0%
prevent a writer from slipping in
 

00:54:41.280 --> 00:54:42.630 align:start position:0%
prevent a writer from slipping in
between<00:54:41.599><c> the</c><00:54:41.680><c> check</c><00:54:41.920><c> of</c><00:54:42.000><c> the</c><00:54:42.160><c> condition</c><00:54:42.480><c> and</c>

00:54:42.630 --> 00:54:42.640 align:start position:0%
between the check of the condition and
 

00:54:42.640 --> 00:54:43.190 align:start position:0%
between the check of the condition and
the<00:54:42.720><c> sleep</c>

00:54:43.190 --> 00:54:43.200 align:start position:0%
the sleep
 

00:54:43.200 --> 00:54:44.390 align:start position:0%
the sleep
because<00:54:43.359><c> the</c><00:54:43.440><c> writer</c><00:54:43.760><c> has</c><00:54:43.920><c> to</c><00:54:44.000><c> acquire</c><00:54:44.319><c> the</c>

00:54:44.390 --> 00:54:44.400 align:start position:0%
because the writer has to acquire the
 

00:54:44.400 --> 00:54:48.630 align:start position:0%
because the writer has to acquire the
slot<00:54:44.720><c> too</c>

00:54:48.630 --> 00:54:48.640 align:start position:0%
 
 

00:54:48.640 --> 00:54:53.510 align:start position:0%
 
and<00:54:48.960><c> um</c><00:54:49.520><c> for</c><00:54:49.680><c> those</c><00:54:49.920><c> of</c><00:54:50.000><c> you</c><00:54:50.160><c> who</c><00:54:50.839><c> are</c>

00:54:53.510 --> 00:54:53.520 align:start position:0%
and um for those of you who are
 

00:54:53.520 --> 00:54:56.069 align:start position:0%
and um for those of you who are
the<00:54:53.680><c> people</c><00:54:54.000><c> asked</c><00:54:54.319><c> about</c><00:54:55.200><c> wrapping</c><00:54:55.680><c> sleep</c>

00:54:56.069 --> 00:54:56.079 align:start position:0%
the people asked about wrapping sleep
 

00:54:56.079 --> 00:54:57.829 align:start position:0%
the people asked about wrapping sleep
and<00:54:56.240><c> while</c><00:54:56.559><c> loops</c>

00:54:57.829 --> 00:54:57.839 align:start position:0%
and while loops
 

00:54:57.839 --> 00:54:59.750 align:start position:0%
and while loops
both<00:54:58.160><c> pipe</c><00:54:58.400><c> read</c><00:54:58.799><c> and</c><00:54:58.960><c> pipe</c><00:54:59.359><c> right</c><00:54:59.599><c> are</c>

00:54:59.750 --> 00:54:59.760 align:start position:0%
both pipe read and pipe right are
 

00:54:59.760 --> 00:55:01.109 align:start position:0%
both pipe read and pipe right are
examples<00:55:00.400><c> of</c><00:55:00.640><c> a</c>

00:55:01.109 --> 00:55:01.119 align:start position:0%
examples of a
 

00:55:01.119 --> 00:55:03.910 align:start position:0%
examples of a
sleep<00:55:01.520><c> wrapped</c><00:55:01.839><c> in</c><00:55:02.000><c> a</c><00:55:02.079><c> while</c><00:55:03.280><c> so</c><00:55:03.440><c> for</c><00:55:03.599><c> example</c>

00:55:03.910 --> 00:55:03.920 align:start position:0%
sleep wrapped in a while so for example
 

00:55:03.920 --> 00:55:05.349 align:start position:0%
sleep wrapped in a while so for example
the

00:55:05.349 --> 00:55:05.359 align:start position:0%
the
 

00:55:05.359 --> 00:55:07.990 align:start position:0%
the
this<00:55:05.599><c> is</c><00:55:05.680><c> the</c><00:55:05.920><c> loop</c><00:55:06.240><c> that</c><00:55:06.880><c> pipe</c><00:55:07.200><c> read</c><00:55:07.680><c> waits</c>

00:55:07.990 --> 00:55:08.000 align:start position:0%
this is the loop that pipe read waits
 

00:55:08.000 --> 00:55:09.829 align:start position:0%
this is the loop that pipe read waits
for<00:55:08.240><c> data</c><00:55:08.480><c> to</c><00:55:08.720><c> appear</c><00:55:09.119><c> waits</c><00:55:09.359><c> for</c><00:55:09.520><c> the</c>

00:55:09.829 --> 00:55:09.839 align:start position:0%
for data to appear waits for the
 

00:55:09.839 --> 00:55:12.230 align:start position:0%
for data to appear waits for the
pipe<00:55:10.079><c> buffer</c><00:55:10.400><c> to</c><00:55:10.480><c> be</c><00:55:10.559><c> non-empty</c><00:55:12.000><c> and</c><00:55:12.160><c> the</c>

00:55:12.230 --> 00:55:12.240 align:start position:0%
pipe buffer to be non-empty and the
 

00:55:12.240 --> 00:55:13.670 align:start position:0%
pipe buffer to be non-empty and the
sleep<00:55:12.559><c> is</c><00:55:12.640><c> wrapped</c><00:55:12.960><c> in</c><00:55:13.119><c> a</c><00:55:13.200><c> loop</c>

00:55:13.670 --> 00:55:13.680 align:start position:0%
sleep is wrapped in a loop
 

00:55:13.680 --> 00:55:16.470 align:start position:0%
sleep is wrapped in a loop
and<00:55:13.839><c> again</c><00:55:15.119><c> the</c><00:55:15.280><c> reason</c><00:55:15.599><c> is</c><00:55:15.760><c> that</c><00:55:16.160><c> there</c><00:55:16.319><c> could</c>

00:55:16.470 --> 00:55:16.480 align:start position:0%
and again the reason is that there could
 

00:55:16.480 --> 00:55:18.230 align:start position:0%
and again the reason is that there could
be<00:55:16.640><c> perfectly</c><00:55:17.040><c> well</c><00:55:17.359><c> be</c><00:55:17.599><c> multiple</c>

00:55:18.230 --> 00:55:18.240 align:start position:0%
be perfectly well be multiple
 

00:55:18.240 --> 00:55:21.190 align:start position:0%
be perfectly well be multiple
processes<00:55:19.040><c> reading</c><00:55:19.359><c> the</c><00:55:19.520><c> very</c><00:55:19.839><c> same</c><00:55:20.240><c> pipe</c><00:55:21.119><c> and</c>

00:55:21.190 --> 00:55:21.200 align:start position:0%
processes reading the very same pipe and
 

00:55:21.200 --> 00:55:22.390 align:start position:0%
processes reading the very same pipe and
so<00:55:21.359><c> if</c><00:55:21.520><c> a</c><00:55:21.599><c> writer</c><00:55:21.920><c> writes</c>

00:55:22.390 --> 00:55:22.400 align:start position:0%
so if a writer writes
 

00:55:22.400 --> 00:55:25.430 align:start position:0%
so if a writer writes
one<00:55:22.720><c> byte</c><00:55:22.960><c> to</c><00:55:23.119><c> the</c><00:55:23.280><c> pipe</c><00:55:24.640><c> so</c><00:55:24.799><c> there's</c><00:55:25.040><c> only</c><00:55:25.200><c> one</c>

00:55:25.430 --> 00:55:25.440 align:start position:0%
one byte to the pipe so there's only one
 

00:55:25.440 --> 00:55:26.150 align:start position:0%
one byte to the pipe so there's only one
byte<00:55:25.680><c> there</c>

00:55:26.150 --> 00:55:26.160 align:start position:0%
byte there
 

00:55:26.160 --> 00:55:28.789 align:start position:0%
byte there
the<00:55:26.319><c> writer</c><00:55:26.640><c> is</c><00:55:26.720><c> going</c><00:55:26.799><c> to</c><00:55:26.880><c> call</c><00:55:27.119><c> wake</c><00:55:27.359><c> up</c>

00:55:28.789 --> 00:55:28.799 align:start position:0%
the writer is going to call wake up
 

00:55:28.799 --> 00:55:29.910 align:start position:0%
the writer is going to call wake up
that's<00:55:29.040><c> going</c><00:55:29.119><c> to</c><00:55:29.200><c> wake</c><00:55:29.440><c> up</c>

00:55:29.910 --> 00:55:29.920 align:start position:0%
that's going to wake up
 

00:55:29.920 --> 00:55:31.750 align:start position:0%
that's going to wake up
all<00:55:30.240><c> the</c><00:55:30.559><c> multiple</c><00:55:30.960><c> processes</c><00:55:31.520><c> that</c><00:55:31.599><c> were</c>

00:55:31.750 --> 00:55:31.760 align:start position:0%
all the multiple processes that were
 

00:55:31.760 --> 00:55:33.430 align:start position:0%
all the multiple processes that were
reading<00:55:32.160><c> that</c><00:55:32.559><c> pipe</c>

00:55:33.430 --> 00:55:33.440 align:start position:0%
reading that pipe
 

00:55:33.440 --> 00:55:36.549 align:start position:0%
reading that pipe
but<00:55:33.599><c> there's</c><00:55:33.760><c> only</c><00:55:33.920><c> one</c><00:55:34.160><c> bite</c><00:55:34.400><c> in</c><00:55:34.480><c> the</c><00:55:34.640><c> pipe</c>

00:55:36.549 --> 00:55:36.559 align:start position:0%
but there's only one bite in the pipe
 

00:55:36.559 --> 00:55:38.309 align:start position:0%
but there's only one bite in the pipe
and<00:55:36.720><c> so</c><00:55:37.119><c> one</c><00:55:37.280><c> of</c><00:55:37.359><c> those</c><00:55:37.599><c> processes</c><00:55:38.079><c> is</c><00:55:38.240><c> going</c>

00:55:38.309 --> 00:55:38.319 align:start position:0%
and so one of those processes is going
 

00:55:38.319 --> 00:55:39.910 align:start position:0%
and so one of those processes is going
to<00:55:38.400><c> wake</c><00:55:38.640><c> up</c><00:55:38.880><c> first</c>

00:55:39.910 --> 00:55:39.920 align:start position:0%
to wake up first
 

00:55:39.920 --> 00:55:41.829 align:start position:0%
to wake up first
right<00:55:40.400><c> it's</c><00:55:41.040><c> going</c><00:55:41.119><c> to</c><00:55:41.200><c> come</c><00:55:41.359><c> out</c><00:55:41.520><c> of</c><00:55:41.680><c> its</c>

00:55:41.829 --> 00:55:41.839 align:start position:0%
right it's going to come out of its
 

00:55:41.839 --> 00:55:43.270 align:start position:0%
right it's going to come out of its
sleep<00:55:42.240><c> first</c>

00:55:43.270 --> 00:55:43.280 align:start position:0%
sleep first
 

00:55:43.280 --> 00:55:44.950 align:start position:0%
sleep first
actually<00:55:43.599><c> this</c><00:55:43.760><c> reminds</c><00:55:44.079><c> me</c><00:55:44.240><c> there's</c><00:55:44.480><c> another</c>

00:55:44.950 --> 00:55:44.960 align:start position:0%
actually this reminds me there's another
 

00:55:44.960 --> 00:55:46.829 align:start position:0%
actually this reminds me there's another
crucial<00:55:45.359><c> thing</c><00:55:45.520><c> i</c><00:55:45.599><c> forgot</c><00:55:46.000><c> to</c><00:55:46.079><c> mention</c><00:55:46.400><c> about</c>

00:55:46.829 --> 00:55:46.839 align:start position:0%
crucial thing i forgot to mention about
 

00:55:46.839 --> 00:55:49.109 align:start position:0%
crucial thing i forgot to mention about
sleep<00:55:47.920><c> um</c>

00:55:49.109 --> 00:55:49.119 align:start position:0%
sleep um
 

00:55:49.119 --> 00:55:51.349 align:start position:0%
sleep um
and<00:55:49.280><c> that's</c><00:55:49.599><c> that</c><00:55:50.240><c> the</c><00:55:50.400><c> last</c><00:55:50.720><c> thing</c><00:55:50.960><c> sleep</c>

00:55:51.349 --> 00:55:51.359 align:start position:0%
and that's that the last thing sleep
 

00:55:51.359 --> 00:55:55.990 align:start position:0%
and that's that the last thing sleep
does<00:55:51.760><c> let's</c><00:55:51.920><c> look</c><00:55:52.160><c> at</c><00:55:52.319><c> uh</c>

00:55:55.990 --> 00:55:56.000 align:start position:0%
 
 

00:55:56.000 --> 00:55:59.030 align:start position:0%
 
here's<00:55:56.400><c> here's</c><00:55:56.640><c> the</c><00:55:56.880><c> uh</c><00:55:57.920><c> sorry</c><00:55:58.720><c> here's</c><00:55:58.960><c> the</c>

00:55:59.030 --> 00:55:59.040 align:start position:0%
here's here's the uh sorry here's the
 

00:55:59.040 --> 00:55:59.910 align:start position:0%
here's here's the uh sorry here's the
end<00:55:59.200><c> of</c><00:55:59.280><c> sleep</c>

00:55:59.910 --> 00:55:59.920 align:start position:0%
end of sleep
 

00:55:59.920 --> 00:56:02.470 align:start position:0%
end of sleep
the<00:56:00.079><c> last</c><00:56:00.319><c> thing</c><00:56:00.559><c> sleep</c><00:56:00.960><c> does</c><00:56:01.440><c> is</c><00:56:01.839><c> acquires</c>

00:56:02.470 --> 00:56:02.480 align:start position:0%
the last thing sleep does is acquires
 

00:56:02.480 --> 00:56:03.829 align:start position:0%
the last thing sleep does is acquires
the<00:56:02.640><c> condition</c><00:56:03.119><c> lock</c>

00:56:03.829 --> 00:56:03.839 align:start position:0%
the condition lock
 

00:56:03.839 --> 00:56:05.589 align:start position:0%
the condition lock
so<00:56:04.079><c> you</c><00:56:04.559><c> you</c><00:56:04.720><c> must</c><00:56:04.960><c> call</c><00:56:05.200><c> sleep</c><00:56:05.359><c> with</c><00:56:05.520><c> the</c>

00:56:05.589 --> 00:56:05.599 align:start position:0%
so you you must call sleep with the
 

00:56:05.599 --> 00:56:07.990 align:start position:0%
so you you must call sleep with the
condition<00:56:05.920><c> lock</c><00:56:06.160><c> held</c><00:56:06.799><c> and</c><00:56:06.960><c> sleep</c><00:56:07.359><c> reacquires</c>

00:56:07.990 --> 00:56:08.000 align:start position:0%
condition lock held and sleep reacquires
 

00:56:08.000 --> 00:56:10.870 align:start position:0%
condition lock held and sleep reacquires
it<00:56:08.079><c> before</c><00:56:08.400><c> it</c><00:56:08.480><c> returns</c>

00:56:10.870 --> 00:56:10.880 align:start position:0%
it before it returns
 

00:56:10.880 --> 00:56:14.549 align:start position:0%
it before it returns
um<00:56:12.079><c> okay</c><00:56:12.400><c> so</c><00:56:13.520><c> what</c><00:56:13.680><c> that</c><00:56:13.839><c> means</c><00:56:14.160><c> is</c><00:56:14.240><c> that</c>

00:56:14.549 --> 00:56:14.559 align:start position:0%
um okay so what that means is that
 

00:56:14.559 --> 00:56:15.910 align:start position:0%
um okay so what that means is that
if<00:56:14.640><c> there</c><00:56:14.799><c> are</c><00:56:14.880><c> a</c><00:56:14.960><c> bunch</c><00:56:15.200><c> of</c><00:56:15.280><c> readers</c><00:56:15.760><c> there's</c>

00:56:15.910 --> 00:56:15.920 align:start position:0%
if there are a bunch of readers there's
 

00:56:15.920 --> 00:56:17.670 align:start position:0%
if there are a bunch of readers there's
one<00:56:16.160><c> byte</c><00:56:16.400><c> written</c><00:56:16.799><c> just</c><00:56:16.960><c> written</c><00:56:17.200><c> to</c><00:56:17.359><c> a</c><00:56:17.440><c> pipe</c>

00:56:17.670 --> 00:56:17.680 align:start position:0%
one byte written just written to a pipe
 

00:56:17.680 --> 00:56:19.270 align:start position:0%
one byte written just written to a pipe
and<00:56:17.760><c> a</c><00:56:17.839><c> bunch</c><00:56:18.079><c> of</c><00:56:18.160><c> readers</c><00:56:18.559><c> they're</c><00:56:18.720><c> all</c><00:56:18.880><c> woken</c>

00:56:19.270 --> 00:56:19.280 align:start position:0%
and a bunch of readers they're all woken
 

00:56:19.280 --> 00:56:19.910 align:start position:0%
and a bunch of readers they're all woken
up

00:56:19.910 --> 00:56:19.920 align:start position:0%
up
 

00:56:19.920 --> 00:56:23.270 align:start position:0%
up
one<00:56:20.160><c> of</c><00:56:20.240><c> them</c><00:56:21.040><c> will</c><00:56:21.280><c> succeed</c><00:56:22.160><c> one</c><00:56:22.400><c> of</c><00:56:22.480><c> the</c>

00:56:23.270 --> 00:56:23.280 align:start position:0%
one of them will succeed one of the
 

00:56:23.280 --> 00:56:24.789 align:start position:0%
one of them will succeed one of the
sleeps<00:56:23.839><c> of</c><00:56:23.920><c> one</c><00:56:24.079><c> of</c><00:56:24.160><c> the</c><00:56:24.319><c> threads</c><00:56:24.640><c> will</c>

00:56:24.789 --> 00:56:24.799 align:start position:0%
sleeps of one of the threads will
 

00:56:24.799 --> 00:56:27.030 align:start position:0%
sleeps of one of the threads will
succeed<00:56:25.200><c> in</c><00:56:25.359><c> acquiring</c><00:56:25.760><c> this</c><00:56:26.000><c> lock</c>

00:56:27.030 --> 00:56:27.040 align:start position:0%
succeed in acquiring this lock
 

00:56:27.040 --> 00:56:28.789 align:start position:0%
succeed in acquiring this lock
the<00:56:27.200><c> others</c><00:56:27.440><c> will</c><00:56:27.599><c> be</c><00:56:27.760><c> waiting</c><00:56:28.079><c> and</c><00:56:28.240><c> sleep</c>

00:56:28.789 --> 00:56:28.799 align:start position:0%
the others will be waiting and sleep
 

00:56:28.799 --> 00:56:30.309 align:start position:0%
the others will be waiting and sleep
spinning<00:56:29.119><c> waiting</c><00:56:29.359><c> for</c><00:56:29.520><c> the</c><00:56:29.599><c> lock</c>

00:56:30.309 --> 00:56:30.319 align:start position:0%
spinning waiting for the lock
 

00:56:30.319 --> 00:56:32.950 align:start position:0%
spinning waiting for the lock
that<00:56:30.640><c> one</c><00:56:30.799><c> lucky</c><00:56:31.200><c> process</c><00:56:32.240><c> uh</c><00:56:32.559><c> sleep</c><00:56:32.799><c> will</c>

00:56:32.950 --> 00:56:32.960 align:start position:0%
that one lucky process uh sleep will
 

00:56:32.960 --> 00:56:33.510 align:start position:0%
that one lucky process uh sleep will
return

00:56:33.510 --> 00:56:33.520 align:start position:0%
return
 

00:56:33.520 --> 00:56:35.349 align:start position:0%
return
it'll<00:56:33.680><c> come</c><00:56:33.839><c> back</c><00:56:34.000><c> to</c><00:56:34.079><c> this</c><00:56:34.240><c> check</c><00:56:34.480><c> and</c><00:56:34.559><c> now</c>

00:56:35.349 --> 00:56:35.359 align:start position:0%
it'll come back to this check and now
 

00:56:35.359 --> 00:56:38.069 align:start position:0%
it'll come back to this check and now
pro<00:56:35.839><c> and</c><00:56:36.000><c> write</c><00:56:36.240><c> is</c><00:56:36.480><c> one</c><00:56:36.720><c> larger</c><00:56:37.040><c> than</c><00:56:37.280><c> n</c><00:56:37.440><c> read</c>

00:56:38.069 --> 00:56:38.079 align:start position:0%
pro and write is one larger than n read
 

00:56:38.079 --> 00:56:39.670 align:start position:0%
pro and write is one larger than n read
so<00:56:38.240><c> there's</c><00:56:38.400><c> data</c><00:56:38.720><c> to</c><00:56:38.799><c> read</c><00:56:39.119><c> it'll</c><00:56:39.280><c> fall</c><00:56:39.520><c> out</c>

00:56:39.670 --> 00:56:39.680 align:start position:0%
so there's data to read it'll fall out
 

00:56:39.680 --> 00:56:41.430 align:start position:0%
so there's data to read it'll fall out
of<00:56:39.760><c> the</c><00:56:39.839><c> loop</c><00:56:40.079><c> it'll</c><00:56:40.240><c> read</c><00:56:40.480><c> the</c><00:56:40.559><c> one</c><00:56:40.799><c> byte</c>

00:56:41.430 --> 00:56:41.440 align:start position:0%
of the loop it'll read the one byte
 

00:56:41.440 --> 00:56:43.190 align:start position:0%
of the loop it'll read the one byte
and<00:56:41.520><c> now</c><00:56:41.760><c> there's</c><00:56:41.920><c> nothing</c><00:56:42.079><c> in</c><00:56:42.240><c> the</c><00:56:42.319><c> buffer</c>

00:56:43.190 --> 00:56:43.200 align:start position:0%
and now there's nothing in the buffer
 

00:56:43.200 --> 00:56:44.710 align:start position:0%
and now there's nothing in the buffer
release<00:56:43.599><c> the</c><00:56:43.760><c> lock</c>

00:56:44.710 --> 00:56:44.720 align:start position:0%
release the lock
 

00:56:44.720 --> 00:56:47.190 align:start position:0%
release the lock
and<00:56:44.880><c> return</c><00:56:45.680><c> and</c><00:56:45.760><c> now</c><00:56:46.000><c> the</c><00:56:46.160><c> next</c><00:56:46.640><c> thread</c><00:56:47.040><c> that</c>

00:56:47.190 --> 00:56:47.200 align:start position:0%
and return and now the next thread that
 

00:56:47.200 --> 00:56:49.589 align:start position:0%
and return and now the next thread that
was<00:56:47.440><c> woken</c><00:56:47.839><c> up</c>

00:56:49.589 --> 00:56:49.599 align:start position:0%
was woken up
 

00:56:49.599 --> 00:56:51.349 align:start position:0%
was woken up
its<00:56:49.920><c> sleep</c><00:56:50.240><c> will</c><00:56:50.400><c> be</c><00:56:50.480><c> able</c><00:56:50.640><c> to</c><00:56:50.720><c> reacquire</c><00:56:51.200><c> the</c>

00:56:51.349 --> 00:56:51.359 align:start position:0%
its sleep will be able to reacquire the
 

00:56:51.359 --> 00:56:53.829 align:start position:0%
its sleep will be able to reacquire the
condition<00:56:51.839><c> lock</c><00:56:52.480><c> its</c><00:56:52.720><c> sleeve</c><00:56:52.880><c> will</c><00:56:53.040><c> return</c>

00:56:53.829 --> 00:56:53.839 align:start position:0%
condition lock its sleeve will return
 

00:56:53.839 --> 00:56:56.950 align:start position:0%
condition lock its sleeve will return
it<00:56:54.000><c> will</c><00:56:54.079><c> return</c><00:56:55.760><c> recheck</c><00:56:56.559><c> the</c><00:56:56.720><c> loop</c>

00:56:56.950 --> 00:56:56.960 align:start position:0%
it will return recheck the loop
 

00:56:56.960 --> 00:56:59.190 align:start position:0%
it will return recheck the loop
condition<00:56:57.280><c> but</c><00:56:57.520><c> now</c>

00:56:59.190 --> 00:56:59.200 align:start position:0%
condition but now
 

00:56:59.200 --> 00:57:01.750 align:start position:0%
condition but now
n<00:56:59.440><c> read</c><00:56:59.680><c> is</c><00:56:59.839><c> equal</c><00:57:00.079><c> to</c><00:57:00.160><c> n</c><00:57:00.400><c> right</c><00:57:01.040><c> and</c><00:57:01.200><c> so</c><00:57:01.440><c> that</c>

00:57:01.750 --> 00:57:01.760 align:start position:0%
n read is equal to n right and so that
 

00:57:01.760 --> 00:57:03.670 align:start position:0%
n read is equal to n right and so that
thread<00:57:02.079><c> and</c><00:57:02.319><c> any</c><00:57:02.559><c> other</c><00:57:02.720><c> thread</c><00:57:03.040><c> waiting</c><00:57:03.520><c> will</c>

00:57:03.670 --> 00:57:03.680 align:start position:0%
thread and any other thread waiting will
 

00:57:03.680 --> 00:57:05.109 align:start position:0%
thread and any other thread waiting will
go<00:57:03.839><c> back</c><00:57:04.000><c> to</c><00:57:04.160><c> sleep</c>

00:57:05.109 --> 00:57:05.119 align:start position:0%
go back to sleep
 

00:57:05.119 --> 00:57:08.549 align:start position:0%
go back to sleep
this<00:57:05.280><c> is</c><00:57:05.839><c> again</c><00:57:06.079><c> just</c><00:57:06.240><c> to</c><00:57:06.319><c> reinforce</c><00:57:07.040><c> why</c>

00:57:08.549 --> 00:57:08.559 align:start position:0%
this is again just to reinforce why
 

00:57:08.559 --> 00:57:10.549 align:start position:0%
this is again just to reinforce why
almost<00:57:08.880><c> every</c><00:57:09.119><c> maybe</c><00:57:09.440><c> every</c><00:57:09.680><c> call</c><00:57:09.839><c> to</c><00:57:10.000><c> sleep</c>

00:57:10.549 --> 00:57:10.559 align:start position:0%
almost every maybe every call to sleep
 

00:57:10.559 --> 00:57:11.990 align:start position:0%
almost every maybe every call to sleep
has<00:57:10.799><c> to</c><00:57:10.880><c> be</c><00:57:11.040><c> wrapped</c><00:57:11.359><c> in</c><00:57:11.440><c> a</c><00:57:11.520><c> loop</c><00:57:11.760><c> that</c>

00:57:11.990 --> 00:57:12.000 align:start position:0%
has to be wrapped in a loop that
 

00:57:12.000 --> 00:57:18.470 align:start position:0%
has to be wrapped in a loop that
rechecks<00:57:12.559><c> the</c><00:57:12.640><c> condition</c>

00:57:18.470 --> 00:57:18.480 align:start position:0%
 
 

00:57:18.480 --> 00:57:24.829 align:start position:0%
 
questions<00:57:18.880><c> about</c><00:57:19.520><c> the</c><00:57:19.680><c> way</c><00:57:19.920><c> sleep</c><00:57:20.880><c> pipes</c><00:57:21.440><c> use</c>

00:57:24.829 --> 00:57:24.839 align:start position:0%
 
 

00:57:24.839 --> 00:57:33.670 align:start position:0%
 
sleep

00:57:33.670 --> 00:57:33.680 align:start position:0%
 
 

00:57:33.680 --> 00:57:36.789 align:start position:0%
 
all<00:57:33.839><c> right</c><00:57:34.319><c> um</c><00:57:35.839><c> the</c><00:57:36.000><c> sleep</c><00:57:36.319><c> in</c><00:57:36.400><c> wake</c><00:57:36.640><c> up</c>

00:57:36.789 --> 00:57:36.799 align:start position:0%
all right um the sleep in wake up
 

00:57:36.799 --> 00:57:38.390 align:start position:0%
all right um the sleep in wake up
interfacing<00:57:37.280><c> rules</c><00:57:37.599><c> are</c>

00:57:38.390 --> 00:57:38.400 align:start position:0%
interfacing rules are
 

00:57:38.400 --> 00:57:41.910 align:start position:0%
interfacing rules are
a<00:57:38.480><c> little</c><00:57:38.640><c> bit</c><00:57:38.839><c> complex</c><00:57:41.359><c> because</c><00:57:41.680><c> you</c><00:57:41.760><c> have</c><00:57:41.839><c> to</c>

00:57:41.910 --> 00:57:41.920 align:start position:0%
a little bit complex because you have to
 

00:57:41.920 --> 00:57:44.069 align:start position:0%
a little bit complex because you have to
sort<00:57:42.079><c> of</c><00:57:42.160><c> reveal</c><00:57:42.640><c> a</c><00:57:42.720><c> bit</c><00:57:42.960><c> to</c><00:57:43.040><c> sleep</c><00:57:43.440><c> about</c>

00:57:44.069 --> 00:57:44.079 align:start position:0%
sort of reveal a bit to sleep about
 

00:57:44.079 --> 00:57:45.349 align:start position:0%
sort of reveal a bit to sleep about
what<00:57:44.240><c> you're</c><00:57:44.319><c> waiting</c><00:57:44.640><c> for</c><00:57:44.799><c> you</c><00:57:44.880><c> have</c><00:57:44.960><c> to</c><00:57:45.119><c> tell</c>

00:57:45.349 --> 00:57:45.359 align:start position:0%
what you're waiting for you have to tell
 

00:57:45.359 --> 00:57:48.309 align:start position:0%
what you're waiting for you have to tell
the<00:57:45.520><c> lock</c><00:57:45.839><c> and</c><00:57:45.920><c> follow</c><00:57:46.160><c> some</c><00:57:46.319><c> rules</c>

00:57:48.309 --> 00:57:48.319 align:start position:0%
the lock and follow some rules
 

00:57:48.319 --> 00:57:51.109 align:start position:0%
the lock and follow some rules
which<00:57:48.640><c> is</c><00:57:49.280><c> sometimes</c><00:57:49.760><c> annoying</c><00:57:50.799><c> on</c><00:57:50.880><c> the</c><00:57:50.960><c> other</c>

00:57:51.109 --> 00:57:51.119 align:start position:0%
which is sometimes annoying on the other
 

00:57:51.119 --> 00:57:52.150 align:start position:0%
which is sometimes annoying on the other
hand<00:57:51.280><c> sleep</c><00:57:51.520><c> and</c><00:57:51.599><c> wake</c><00:57:51.839><c> up</c>

00:57:52.150 --> 00:57:52.160 align:start position:0%
hand sleep and wake up
 

00:57:52.160 --> 00:57:53.750 align:start position:0%
hand sleep and wake up
pretty<00:57:52.480><c> flexible</c><00:57:53.040><c> partially</c><00:57:53.440><c> because</c><00:57:53.599><c> they</c>

00:57:53.750 --> 00:57:53.760 align:start position:0%
pretty flexible partially because they
 

00:57:53.760 --> 00:57:55.349 align:start position:0%
pretty flexible partially because they
don't<00:57:54.079><c> actually</c><00:57:54.400><c> have</c><00:57:54.559><c> to</c><00:57:54.720><c> understand</c><00:57:55.200><c> the</c>

00:57:55.349 --> 00:57:55.359 align:start position:0%
don't actually have to understand the
 

00:57:55.359 --> 00:57:56.549 align:start position:0%
don't actually have to understand the
condition<00:57:55.839><c> itself</c>

00:57:56.549 --> 00:57:56.559 align:start position:0%
condition itself
 

00:57:56.559 --> 00:57:58.309 align:start position:0%
condition itself
there<00:57:56.720><c> just</c><00:57:56.880><c> has</c><00:57:57.040><c> to</c><00:57:57.200><c> be</c><00:57:57.359><c> a</c><00:57:57.440><c> condition</c><00:57:57.920><c> and</c><00:57:58.160><c> be</c>

00:57:58.309 --> 00:57:58.319 align:start position:0%
there just has to be a condition and be
 

00:57:58.319 --> 00:57:59.990 align:start position:0%
there just has to be a condition and be
a<00:57:58.480><c> lock</c>

00:57:59.990 --> 00:58:00.000 align:start position:0%
a lock
 

00:58:00.000 --> 00:58:01.910 align:start position:0%
a lock
there<00:58:00.160><c> are</c><00:58:00.240><c> other</c><00:58:00.480><c> schemes</c><00:58:01.040><c> that</c><00:58:01.200><c> are</c>

00:58:01.910 --> 00:58:01.920 align:start position:0%
there are other schemes that are
 

00:58:01.920 --> 00:58:03.190 align:start position:0%
there are other schemes that are
somewhat<00:58:02.240><c> higher</c><00:58:02.559><c> level</c>

00:58:03.190 --> 00:58:03.200 align:start position:0%
somewhat higher level
 

00:58:03.200 --> 00:58:04.710 align:start position:0%
somewhat higher level
there's<00:58:03.440><c> other</c><00:58:03.680><c> coordination</c><00:58:04.319><c> schemes</c><00:58:04.559><c> like</c>

00:58:04.710 --> 00:58:04.720 align:start position:0%
there's other coordination schemes like
 

00:58:04.720 --> 00:58:06.710 align:start position:0%
there's other coordination schemes like
the<00:58:04.880><c> semaphores</c><00:58:05.440><c> you</c><00:58:05.520><c> read</c><00:58:05.760><c> about</c><00:58:06.079><c> in</c>

00:58:06.710 --> 00:58:06.720 align:start position:0%
the semaphores you read about in
 

00:58:06.720 --> 00:58:08.710 align:start position:0%
the semaphores you read about in
the<00:58:06.799><c> reading</c><00:58:07.119><c> for</c><00:58:07.280><c> today</c><00:58:08.079><c> in</c><00:58:08.240><c> which</c><00:58:08.480><c> the</c>

00:58:08.710 --> 00:58:08.720 align:start position:0%
the reading for today in which the
 

00:58:08.720 --> 00:58:11.030 align:start position:0%
the reading for today in which the
interface<00:58:09.200><c> is</c><00:58:09.680><c> slightly</c><00:58:10.079><c> less</c><00:58:10.319><c> complex</c><00:58:10.880><c> like</c>

00:58:11.030 --> 00:58:11.040 align:start position:0%
interface is slightly less complex like
 

00:58:11.040 --> 00:58:12.150 align:start position:0%
interface is slightly less complex like
the<00:58:11.119><c> semaphores</c><00:58:11.599><c> you</c><00:58:11.760><c> don't</c><00:58:11.839><c> have</c><00:58:11.920><c> to</c><00:58:12.000><c> tell</c>

00:58:12.150 --> 00:58:12.160 align:start position:0%
the semaphores you don't have to tell
 

00:58:12.160 --> 00:58:15.030 align:start position:0%
the semaphores you don't have to tell
the<00:58:12.319><c> semaphore</c><00:58:12.799><c> about</c><00:58:12.960><c> a</c><00:58:13.119><c> lock</c>

00:58:15.030 --> 00:58:15.040 align:start position:0%
the semaphore about a lock
 

00:58:15.040 --> 00:58:17.030 align:start position:0%
the semaphore about a lock
and<00:58:15.280><c> the</c><00:58:15.599><c> color</c><00:58:16.000><c> the</c><00:58:16.160><c> semaphore</c><00:58:16.640><c> doesn't</c><00:58:16.880><c> have</c>

00:58:17.030 --> 00:58:17.040 align:start position:0%
and the color the semaphore doesn't have
 

00:58:17.040 --> 00:58:19.030 align:start position:0%
and the color the semaphore doesn't have
to<00:58:17.119><c> worry</c><00:58:17.520><c> about</c><00:58:18.000><c> lost</c><00:58:18.319><c> wake</c><00:58:18.640><c> ups</c>

00:58:19.030 --> 00:58:19.040 align:start position:0%
to worry about lost wake ups
 

00:58:19.040 --> 00:58:20.390 align:start position:0%
to worry about lost wake ups
internally<00:58:19.520><c> the</c><00:58:19.599><c> implementation</c><00:58:20.240><c> of</c><00:58:20.319><c> the</c>

00:58:20.390 --> 00:58:20.400 align:start position:0%
internally the implementation of the
 

00:58:20.400 --> 00:58:22.069 align:start position:0%
internally the implementation of the
semaphore<00:58:21.200><c> again</c><00:58:21.520><c> as</c><00:58:21.599><c> you</c><00:58:21.760><c> saw</c>

00:58:22.069 --> 00:58:22.079 align:start position:0%
semaphore again as you saw
 

00:58:22.079 --> 00:58:24.470 align:start position:0%
semaphore again as you saw
in<00:58:22.160><c> the</c><00:58:22.319><c> uh</c><00:58:23.119><c> reading</c><00:58:23.359><c> for</c><00:58:23.520><c> today</c><00:58:23.839><c> the</c><00:58:24.079><c> internal</c>

00:58:24.470 --> 00:58:24.480 align:start position:0%
in the uh reading for today the internal
 

00:58:24.480 --> 00:58:26.230 align:start position:0%
in the uh reading for today the internal
implementation<00:58:25.040><c> of</c><00:58:25.200><c> semaphores</c><00:58:25.839><c> worries</c>

00:58:26.230 --> 00:58:26.240 align:start position:0%
implementation of semaphores worries
 

00:58:26.240 --> 00:58:27.190 align:start position:0%
implementation of semaphores worries
about

00:58:27.190 --> 00:58:27.200 align:start position:0%
about
 

00:58:27.200 --> 00:58:29.349 align:start position:0%
about
uh<00:58:27.440><c> lost</c><00:58:27.680><c> wake</c><00:58:27.920><c> up</c><00:58:28.000><c> so</c><00:58:28.400><c> because</c><00:58:28.640><c> the</c><00:58:28.799><c> interface</c>

00:58:29.349 --> 00:58:29.359 align:start position:0%
uh lost wake up so because the interface
 

00:58:29.359 --> 00:58:31.349 align:start position:0%
uh lost wake up so because the interface
is<00:58:30.000><c> specialized</c>

00:58:31.349 --> 00:58:31.359 align:start position:0%
is specialized
 

00:58:31.359 --> 00:58:34.630 align:start position:0%
is specialized
to<00:58:31.520><c> these</c><00:58:31.760><c> up</c><00:58:31.920><c> down</c><00:58:32.240><c> counters</c>

00:58:34.630 --> 00:58:34.640 align:start position:0%
to these up down counters
 

00:58:34.640 --> 00:58:36.069 align:start position:0%
to these up down counters
the<00:58:34.960><c> need</c><00:58:35.119><c> to</c><00:58:35.200><c> deal</c><00:58:35.359><c> with</c><00:58:35.520><c> loss</c><00:58:35.760><c> wake-ups</c>

00:58:36.069 --> 00:58:36.079 align:start position:0%
the need to deal with loss wake-ups
 

00:58:36.079 --> 00:58:38.630 align:start position:0%
the need to deal with loss wake-ups
doesn't<00:58:36.319><c> leak</c><00:58:36.559><c> through</c><00:58:36.799><c> into</c><00:58:37.040><c> the</c><00:58:37.200><c> interface</c>

00:58:38.630 --> 00:58:38.640 align:start position:0%
doesn't leak through into the interface
 

00:58:38.640 --> 00:58:40.710 align:start position:0%
doesn't leak through into the interface
so<00:58:38.799><c> the</c><00:58:39.359><c> semaphores</c><00:58:39.839><c> are</c><00:58:39.920><c> somewhat</c><00:58:40.240><c> simpler</c>

00:58:40.710 --> 00:58:40.720 align:start position:0%
so the semaphores are somewhat simpler
 

00:58:40.720 --> 00:58:42.309 align:start position:0%
so the semaphores are somewhat simpler
although<00:58:40.960><c> they're</c><00:58:41.119><c> less</c><00:58:41.359><c> general</c>

00:58:42.309 --> 00:58:42.319 align:start position:0%
although they're less general
 

00:58:42.319 --> 00:58:44.630 align:start position:0%
although they're less general
if<00:58:42.400><c> you</c><00:58:42.559><c> don't</c><00:58:42.960><c> if</c><00:58:43.119><c> you're</c><00:58:43.280><c> not</c><00:58:44.319><c> if</c><00:58:44.400><c> you</c><00:58:44.480><c> don't</c>

00:58:44.630 --> 00:58:44.640 align:start position:0%
if you don't if you're not if you don't
 

00:58:44.640 --> 00:58:46.069 align:start position:0%
if you don't if you're not if you don't
have<00:58:44.720><c> a</c><00:58:44.880><c> count</c><00:58:45.280><c> and</c><00:58:45.359><c> you're</c><00:58:45.520><c> not</c><00:58:45.680><c> waiting</c><00:58:45.920><c> for</c>

00:58:46.069 --> 00:58:46.079 align:start position:0%
have a count and you're not waiting for
 

00:58:46.079 --> 00:58:46.630 align:start position:0%
have a count and you're not waiting for
a<00:58:46.240><c> count</c>

00:58:46.630 --> 00:58:46.640 align:start position:0%
a count
 

00:58:46.640 --> 00:58:49.829 align:start position:0%
a count
then<00:58:47.839><c> semaphores</c><00:58:48.400><c> are</c><00:58:48.559><c> not</c>

00:58:49.829 --> 00:58:49.839 align:start position:0%
then semaphores are not
 

00:58:49.839 --> 00:58:51.349 align:start position:0%
then semaphores are not
necessarily<00:58:50.400><c> going</c><00:58:50.559><c> to</c><00:58:50.640><c> be</c><00:58:50.720><c> super</c><00:58:51.040><c> helpful</c>

00:58:51.349 --> 00:58:51.359 align:start position:0%
necessarily going to be super helpful
 

00:58:51.359 --> 00:58:52.870 align:start position:0%
necessarily going to be super helpful
for<00:58:51.520><c> you</c><00:58:52.160><c> so</c><00:58:52.319><c> it's</c><00:58:52.480><c> that</c>

00:58:52.870 --> 00:58:52.880 align:start position:0%
for you so it's that
 

00:58:52.880 --> 00:58:55.190 align:start position:0%
for you so it's that
that<00:58:53.200><c> causes</c><00:58:53.599><c> me</c><00:58:53.760><c> to</c><00:58:53.920><c> claim</c><00:58:54.319><c> that</c><00:58:54.880><c> sleep</c><00:58:55.119><c> and</c>

00:58:55.190 --> 00:58:55.200 align:start position:0%
that causes me to claim that sleep and
 

00:58:55.200 --> 00:59:00.309 align:start position:0%
that causes me to claim that sleep and
wake<00:58:55.440><c> up</c><00:58:55.599><c> are</c><00:58:55.680><c> a</c><00:58:55.760><c> little</c><00:58:55.839><c> more</c><00:58:56.079><c> general</c>

00:59:00.309 --> 00:59:00.319 align:start position:0%
 
 

00:59:00.319 --> 00:59:04.230 align:start position:0%
 
all<00:59:00.480><c> right</c><00:59:02.880><c> so</c><00:59:03.119><c> with</c><00:59:03.280><c> sleep</c><00:59:03.599><c> and</c><00:59:03.680><c> wake</c><00:59:03.920><c> up</c>

00:59:04.230 --> 00:59:04.240 align:start position:0%
all right so with sleep and wake up
 

00:59:04.240 --> 00:59:07.030 align:start position:0%
all right so with sleep and wake up
under<00:59:04.480><c> our</c><00:59:04.640><c> belts</c><00:59:05.200><c> um</c><00:59:06.079><c> i</c><00:59:06.240><c> want</c><00:59:06.400><c> to</c><00:59:06.480><c> talk</c><00:59:06.640><c> about</c>

00:59:07.030 --> 00:59:07.040 align:start position:0%
under our belts um i want to talk about
 

00:59:07.040 --> 00:59:07.990 align:start position:0%
under our belts um i want to talk about
one<00:59:07.280><c> more</c>

00:59:07.990 --> 00:59:08.000 align:start position:0%
one more
 

00:59:08.000 --> 00:59:10.230 align:start position:0%
one more
kind<00:59:08.240><c> of</c><00:59:08.480><c> challenge</c><00:59:08.880><c> that</c><00:59:09.040><c> xv6</c><00:59:09.680><c> faces</c><00:59:10.079><c> that's</c>

00:59:10.230 --> 00:59:10.240 align:start position:0%
kind of challenge that xv6 faces that's
 

00:59:10.240 --> 00:59:12.870 align:start position:0%
kind of challenge that xv6 faces that's
actually<00:59:10.480><c> related</c><00:59:10.799><c> to</c><00:59:10.960><c> sleep</c><00:59:11.200><c> and</c><00:59:11.280><c> wake</c><00:59:11.520><c> up</c>

00:59:12.870 --> 00:59:12.880 align:start position:0%
actually related to sleep and wake up
 

00:59:12.880 --> 00:59:15.910 align:start position:0%
actually related to sleep and wake up
and<00:59:13.040><c> that's</c><00:59:13.280><c> how</c><00:59:13.440><c> to</c><00:59:13.680><c> shut</c><00:59:13.920><c> down</c><00:59:14.240><c> threads</c>

00:59:15.910 --> 00:59:15.920 align:start position:0%
and that's how to shut down threads
 

00:59:15.920 --> 00:59:17.510 align:start position:0%
and that's how to shut down threads
every<00:59:16.160><c> threading</c><00:59:16.559><c> system</c><00:59:17.119><c> you</c><00:59:17.280><c> know</c><00:59:17.440><c> the</c>

00:59:17.510 --> 00:59:17.520 align:start position:0%
every threading system you know the
 

00:59:17.520 --> 00:59:19.030 align:start position:0%
every threading system you know the
threads<00:59:17.839><c> eventually</c><00:59:18.160><c> need</c><00:59:18.319><c> to</c><00:59:18.480><c> exit</c><00:59:18.880><c> and</c><00:59:18.960><c> we</c>

00:59:19.030 --> 00:59:19.040 align:start position:0%
threads eventually need to exit and we
 

00:59:19.040 --> 00:59:19.670 align:start position:0%
threads eventually need to exit and we
need<00:59:19.200><c> to</c>

00:59:19.670 --> 00:59:19.680 align:start position:0%
need to
 

00:59:19.680 --> 00:59:22.710 align:start position:0%
need to
clean<00:59:20.000><c> up</c><00:59:20.079><c> their</c><00:59:20.240><c> state</c><00:59:20.720><c> free</c><00:59:20.960><c> their</c><00:59:21.200><c> stack</c><00:59:22.480><c> on</c>

00:59:22.710 --> 00:59:22.720 align:start position:0%
clean up their state free their stack on
 

00:59:22.720 --> 00:59:23.990 align:start position:0%
clean up their state free their stack on
xv6

00:59:23.990 --> 00:59:24.000 align:start position:0%
xv6
 

00:59:24.000 --> 00:59:27.510 align:start position:0%
xv6
when<00:59:24.240><c> a</c><00:59:24.400><c> process</c><00:59:24.799><c> exits</c><00:59:26.559><c> we</c><00:59:26.720><c> need</c><00:59:26.880><c> to</c><00:59:27.119><c> free</c><00:59:27.359><c> its</c>

00:59:27.510 --> 00:59:27.520 align:start position:0%
when a process exits we need to free its
 

00:59:27.520 --> 00:59:29.589 align:start position:0%
when a process exits we need to free its
user<00:59:27.760><c> memory</c><00:59:28.240><c> and</c><00:59:28.400><c> free</c><00:59:28.720><c> its</c><00:59:28.880><c> page</c><00:59:29.200><c> table</c><00:59:29.520><c> and</c>

00:59:29.589 --> 00:59:29.599 align:start position:0%
user memory and free its page table and
 

00:59:29.599 --> 00:59:30.870 align:start position:0%
user memory and free its page table and
free<00:59:29.839><c> its</c><00:59:30.079><c> trap</c><00:59:30.400><c> frame</c>

00:59:30.870 --> 00:59:30.880 align:start position:0%
free its trap frame
 

00:59:30.880 --> 00:59:33.750 align:start position:0%
free its trap frame
and<00:59:32.079><c> mark</c><00:59:32.400><c> the</c><00:59:32.559><c> process</c><00:59:33.040><c> the</c><00:59:33.200><c> slot</c><00:59:33.599><c> in</c><00:59:33.680><c> the</c>

00:59:33.750 --> 00:59:33.760 align:start position:0%
and mark the process the slot in the
 

00:59:33.760 --> 00:59:36.069 align:start position:0%
and mark the process the slot in the
process<00:59:34.160><c> table</c><00:59:34.559><c> as</c>

00:59:36.069 --> 00:59:36.079 align:start position:0%
process table as
 

00:59:36.079 --> 00:59:38.470 align:start position:0%
process table as
reusable<00:59:37.040><c> so</c><00:59:37.200><c> these</c><00:59:37.359><c> are</c><00:59:37.520><c> sort</c><00:59:37.599><c> of</c><00:59:37.760><c> typical</c>

00:59:38.470 --> 00:59:38.480 align:start position:0%
reusable so these are sort of typical
 

00:59:38.480 --> 00:59:39.670 align:start position:0%
reusable so these are sort of typical
cleanup<00:59:38.799><c> requirements</c><00:59:39.280><c> there's</c><00:59:39.440><c> a</c><00:59:39.440><c> bunch</c><00:59:39.599><c> of</c>

00:59:39.670 --> 00:59:39.680 align:start position:0%
cleanup requirements there's a bunch of
 

00:59:39.680 --> 00:59:41.510 align:start position:0%
cleanup requirements there's a bunch of
stuff<00:59:39.839><c> that</c><00:59:40.000><c> has</c><00:59:40.079><c> to</c><00:59:40.160><c> be</c><00:59:40.319><c> freed</c>

00:59:41.510 --> 00:59:41.520 align:start position:0%
stuff that has to be freed
 

00:59:41.520 --> 00:59:45.670 align:start position:0%
stuff that has to be freed
when<00:59:41.760><c> threads</c><00:59:42.160><c> exit</c>

00:59:45.670 --> 00:59:45.680 align:start position:0%
 
 

00:59:45.680 --> 00:59:49.030 align:start position:0%
 
or<00:59:46.000><c> are</c><00:59:46.319><c> um</c><00:59:47.119><c> or</c><00:59:47.280><c> are</c><00:59:47.440><c> killed</c><00:59:48.319><c> so</c><00:59:48.559><c> but</c><00:59:48.799><c> there's</c>

00:59:49.030 --> 00:59:49.040 align:start position:0%
or are um or are killed so but there's
 

00:59:49.040 --> 00:59:51.190 align:start position:0%
or are um or are killed so but there's
two<00:59:49.280><c> big</c><00:59:49.599><c> problems</c><00:59:50.079><c> that</c><00:59:50.240><c> arise</c><00:59:50.720><c> here</c>

00:59:51.190 --> 00:59:51.200 align:start position:0%
two big problems that arise here
 

00:59:51.200 --> 00:59:53.750 align:start position:0%
two big problems that arise here
with<00:59:51.680><c> uh</c><00:59:52.000><c> thread</c><00:59:52.319><c> exit</c><00:59:52.960><c> or</c><00:59:53.119><c> killing</c><00:59:53.440><c> threads</c>

00:59:53.750 --> 00:59:53.760 align:start position:0%
with uh thread exit or killing threads
 

00:59:53.760 --> 00:59:54.630 align:start position:0%
with uh thread exit or killing threads
one<00:59:54.000><c> is</c><00:59:54.160><c> that</c>

00:59:54.630 --> 00:59:54.640 align:start position:0%
one is that
 

00:59:54.640 --> 00:59:56.710 align:start position:0%
one is that
we<00:59:54.799><c> can't</c><00:59:55.040><c> just</c><00:59:55.280><c> reach</c><00:59:55.599><c> out</c><00:59:55.839><c> we</c><00:59:55.920><c> can't</c><00:59:56.240><c> usually</c>

00:59:56.710 --> 00:59:56.720 align:start position:0%
we can't just reach out we can't usually
 

00:59:56.720 --> 00:59:57.910 align:start position:0%
we can't just reach out we can't usually
just<00:59:56.960><c> reach</c><00:59:57.280><c> out</c><00:59:57.520><c> and</c>

00:59:57.910 --> 00:59:57.920 align:start position:0%
just reach out and
 

00:59:57.920 --> 01:00:01.829 align:start position:0%
just reach out and
unilaterally<00:59:58.880><c> destroy</c><00:59:59.359><c> another</c><00:59:59.760><c> thread</c>

01:00:01.829 --> 01:00:01.839 align:start position:0%
unilaterally destroy another thread
 

01:00:01.839 --> 01:00:03.349 align:start position:0%
unilaterally destroy another thread
the<01:00:02.079><c> problem</c><01:00:02.400><c> is</c><01:00:02.559><c> that</c><01:00:02.640><c> that</c><01:00:02.799><c> other</c><01:00:03.040><c> thread</c>

01:00:03.349 --> 01:00:03.359 align:start position:0%
the problem is that that other thread
 

01:00:03.359 --> 01:00:05.270 align:start position:0%
the problem is that that other thread
may<01:00:03.599><c> actually</c><01:00:03.839><c> be</c><01:00:04.000><c> currently</c><01:00:04.480><c> executing</c><01:00:05.119><c> on</c>

01:00:05.270 --> 01:00:05.280 align:start position:0%
may actually be currently executing on
 

01:00:05.280 --> 01:00:07.190 align:start position:0%
may actually be currently executing on
another<01:00:05.680><c> core</c><01:00:06.000><c> and</c><01:00:06.160><c> using</c><01:00:06.480><c> its</c><01:00:06.720><c> stack</c>

01:00:07.190 --> 01:00:07.200 align:start position:0%
another core and using its stack
 

01:00:07.200 --> 01:00:09.510 align:start position:0%
another core and using its stack
and<01:00:07.680><c> maybe</c><01:00:08.000><c> about</c><01:00:08.240><c> to</c><01:00:08.319><c> save</c><01:00:08.559><c> its</c><01:00:08.720><c> registers</c><01:00:09.359><c> in</c>

01:00:09.510 --> 01:00:09.520 align:start position:0%
and maybe about to save its registers in
 

01:00:09.520 --> 01:00:11.670 align:start position:0%
and maybe about to save its registers in
its<01:00:09.599><c> struct</c><01:00:10.000><c> context</c><01:00:10.559><c> or</c><01:00:10.720><c> whatever</c>

01:00:11.670 --> 01:00:11.680 align:start position:0%
its struct context or whatever
 

01:00:11.680 --> 01:00:13.910 align:start position:0%
its struct context or whatever
the<01:00:11.839><c> other</c><01:00:12.000><c> thread</c><01:00:12.240><c> if</c><01:00:12.400><c> it's</c><01:00:12.480><c> in</c><01:00:12.640><c> the</c><01:00:12.720><c> kernel</c>

01:00:13.910 --> 01:00:13.920 align:start position:0%
the other thread if it's in the kernel
 

01:00:13.920 --> 01:00:15.510 align:start position:0%
the other thread if it's in the kernel
maybe<01:00:14.240><c> holding</c><01:00:14.640><c> locks</c><01:00:15.040><c> it</c><01:00:15.119><c> may</c><01:00:15.280><c> be</c><01:00:15.359><c> in</c><01:00:15.440><c> the</c>

01:00:15.510 --> 01:00:15.520 align:start position:0%
maybe holding locks it may be in the
 

01:00:15.520 --> 01:00:16.549 align:start position:0%
maybe holding locks it may be in the
middle<01:00:15.839><c> of</c><01:00:15.920><c> some</c>

01:00:16.549 --> 01:00:16.559 align:start position:0%
middle of some
 

01:00:16.559 --> 01:00:18.630 align:start position:0%
middle of some
complicated<01:00:17.280><c> update</c><01:00:17.680><c> to</c><01:00:17.920><c> a</c><01:00:18.079><c> kernel</c><01:00:18.400><c> data</c>

01:00:18.630 --> 01:00:18.640 align:start position:0%
complicated update to a kernel data
 

01:00:18.640 --> 01:00:19.670 align:start position:0%
complicated update to a kernel data
structure

01:00:19.670 --> 01:00:19.680 align:start position:0%
structure
 

01:00:19.680 --> 01:00:21.589 align:start position:0%
structure
and<01:00:19.839><c> if</c><01:00:19.920><c> we</c><01:00:20.000><c> simply</c><01:00:20.559><c> somehow</c><01:00:20.960><c> shoot</c><01:00:21.280><c> down</c><01:00:21.520><c> the</c>

01:00:21.589 --> 01:00:21.599 align:start position:0%
and if we simply somehow shoot down the
 

01:00:21.599 --> 01:00:23.829 align:start position:0%
and if we simply somehow shoot down the
thread<01:00:21.920><c> and</c><01:00:22.079><c> stop</c><01:00:22.400><c> it</c><01:00:22.480><c> dead</c><01:00:22.720><c> in</c><01:00:22.799><c> its</c><01:00:23.040><c> tracks</c>

01:00:23.829 --> 01:00:23.839 align:start position:0%
thread and stop it dead in its tracks
 

01:00:23.839 --> 01:00:26.150 align:start position:0%
thread and stop it dead in its tracks
then<01:00:24.240><c> it</c><01:00:24.400><c> may</c><01:00:24.640><c> have</c><01:00:24.720><c> gotten</c><01:00:24.960><c> halfway</c><01:00:25.440><c> through</c>

01:00:26.150 --> 01:00:26.160 align:start position:0%
then it may have gotten halfway through
 

01:00:26.160 --> 01:00:27.510 align:start position:0%
then it may have gotten halfway through
a<01:00:26.319><c> delicate</c><01:00:26.799><c> update</c>

01:00:27.510 --> 01:00:27.520 align:start position:0%
a delicate update
 

01:00:27.520 --> 01:00:30.069 align:start position:0%
a delicate update
to<01:00:27.680><c> some</c><01:00:28.000><c> kernel</c><01:00:28.319><c> data</c><01:00:29.119><c> but</c><01:00:29.280><c> we</c><01:00:29.440><c> shot</c><01:00:29.680><c> it</c><01:00:29.760><c> down</c>

01:00:30.069 --> 01:00:30.079 align:start position:0%
to some kernel data but we shot it down
 

01:00:30.079 --> 01:00:31.990 align:start position:0%
to some kernel data but we shot it down
before<01:00:30.319><c> it</c><01:00:30.480><c> completed</c>

01:00:31.990 --> 01:00:32.000 align:start position:0%
before it completed
 

01:00:32.000 --> 01:00:35.589 align:start position:0%
before it completed
um<01:00:33.119><c> and</c><01:00:33.520><c> so</c><01:00:34.799><c> uh</c>

01:00:35.589 --> 01:00:35.599 align:start position:0%
um and so uh
 

01:00:35.599 --> 01:00:36.870 align:start position:0%
um and so uh
you<01:00:35.760><c> know</c><01:00:35.839><c> we</c><01:00:35.920><c> can't</c><01:00:36.160><c> afford</c><01:00:36.480><c> any</c><01:00:36.640><c> of</c><01:00:36.720><c> those</c>

01:00:36.870 --> 01:00:36.880 align:start position:0%
you know we can't afford any of those
 

01:00:36.880 --> 01:00:39.910 align:start position:0%
you know we can't afford any of those
things<01:00:37.040><c> to</c><01:00:37.200><c> happen</c><01:00:37.680><c> um</c>

01:00:39.910 --> 01:00:39.920 align:start position:0%
things to happen um
 

01:00:39.920 --> 01:00:43.030 align:start position:0%
things to happen um
another<01:00:40.240><c> problem</c><01:00:40.880><c> is</c><01:00:41.040><c> that</c><01:00:42.240><c> even</c><01:00:42.559><c> if</c><01:00:42.640><c> a</c><01:00:42.720><c> thread</c>

01:00:43.030 --> 01:00:43.040 align:start position:0%
another problem is that even if a thread
 

01:00:43.040 --> 01:00:44.470 align:start position:0%
another problem is that even if a thread
calls<01:00:43.440><c> exit</c><01:00:43.760><c> and</c><01:00:43.920><c> is</c><01:00:44.000><c> sort</c><01:00:44.160><c> of</c>

01:00:44.470 --> 01:00:44.480 align:start position:0%
calls exit and is sort of
 

01:00:44.480 --> 01:00:46.630 align:start position:0%
calls exit and is sort of
decided<01:00:45.040><c> for</c><01:00:45.200><c> it's</c><01:00:45.599><c> not</c><01:00:45.760><c> killed</c><01:00:46.000><c> but</c><01:00:46.160><c> decided</c>

01:00:46.630 --> 01:00:46.640 align:start position:0%
decided for it's not killed but decided
 

01:00:46.640 --> 01:00:47.829 align:start position:0%
decided for it's not killed but decided
for<01:00:46.720><c> itself</c><01:00:47.040><c> that</c><01:00:47.119><c> it</c><01:00:47.200><c> wants</c><01:00:47.520><c> to</c>

01:00:47.829 --> 01:00:47.839 align:start position:0%
for itself that it wants to
 

01:00:47.839 --> 01:00:51.109 align:start position:0%
for itself that it wants to
quit<01:00:49.119><c> it</c><01:00:49.280><c> has</c><01:00:49.599><c> resources</c><01:00:50.240><c> that</c><01:00:50.400><c> it</c><01:00:50.480><c> uses</c><01:00:50.880><c> while</c>

01:00:51.109 --> 01:00:51.119 align:start position:0%
quit it has resources that it uses while
 

01:00:51.119 --> 01:00:51.990 align:start position:0%
quit it has resources that it uses while
it<01:00:51.280><c> executes</c>

01:00:51.990 --> 01:00:52.000 align:start position:0%
it executes
 

01:00:52.000 --> 01:00:54.069 align:start position:0%
it executes
like<01:00:52.400><c> it's</c><01:00:52.640><c> stack</c><01:00:53.040><c> for</c><01:00:53.200><c> example</c><01:00:53.599><c> and</c><01:00:53.760><c> it's</c>

01:00:54.069 --> 01:00:54.079 align:start position:0%
like it's stack for example and it's
 

01:00:54.079 --> 01:00:56.630 align:start position:0%
like it's stack for example and it's
slot<01:00:54.400><c> in</c><01:00:54.480><c> the</c><01:00:54.640><c> process</c><01:00:55.119><c> table</c>

01:00:56.630 --> 01:00:56.640 align:start position:0%
slot in the process table
 

01:00:56.640 --> 01:00:59.750 align:start position:0%
slot in the process table
and<01:00:56.799><c> while</c><01:00:57.040><c> it's</c><01:00:57.119><c> still</c><01:00:57.359><c> executing</c><01:00:58.960><c> it</c><01:00:59.359><c> it</c><01:00:59.599><c> may</c>

01:00:59.750 --> 01:00:59.760 align:start position:0%
and while it's still executing it it may
 

01:00:59.760 --> 01:01:01.109 align:start position:0%
and while it's still executing it it may
not<01:00:59.920><c> be</c><01:01:00.000><c> able</c><01:01:00.160><c> to</c><01:01:00.319><c> free</c><01:01:00.640><c> up</c>

01:01:01.109 --> 01:01:01.119 align:start position:0%
not be able to free up
 

01:01:01.119 --> 01:01:04.150 align:start position:0%
not be able to free up
the<01:01:01.280><c> resources</c><01:01:01.760><c> that</c><01:01:01.920><c> it's</c><01:01:02.000><c> still</c><01:01:02.240><c> using</c><01:01:04.000><c> so</c>

01:01:04.150 --> 01:01:04.160 align:start position:0%
the resources that it's still using so
 

01:01:04.160 --> 01:01:07.270 align:start position:0%
the resources that it's still using so
we<01:01:04.240><c> need</c><01:01:04.480><c> a</c><01:01:04.559><c> way</c><01:01:04.799><c> for</c><01:01:05.040><c> threads</c><01:01:05.440><c> to</c>

01:01:07.270 --> 01:01:07.280 align:start position:0%
we need a way for threads to
 

01:01:07.280 --> 01:01:08.870 align:start position:0%
we need a way for threads to
for<01:01:07.440><c> those</c><01:01:07.680><c> last</c><01:01:07.920><c> few</c><01:01:08.160><c> resources</c><01:01:08.640><c> that</c><01:01:08.720><c> are</c>

01:01:08.870 --> 01:01:08.880 align:start position:0%
for those last few resources that are
 

01:01:08.880 --> 01:01:10.390 align:start position:0%
for those last few resources that are
critical<01:01:09.119><c> to</c><01:01:09.280><c> execution</c><01:01:09.760><c> to</c><01:01:09.839><c> somehow</c><01:01:10.240><c> be</c>

01:01:10.390 --> 01:01:10.400 align:start position:0%
critical to execution to somehow be
 

01:01:10.400 --> 01:01:12.549 align:start position:0%
critical to execution to somehow be
freed<01:01:10.720><c> even</c><01:01:10.880><c> though</c><01:01:11.040><c> the</c><01:01:11.119><c> thread</c><01:01:11.440><c> needs</c><01:01:11.680><c> them</c>

01:01:12.549 --> 01:01:12.559 align:start position:0%
freed even though the thread needs them
 

01:01:12.559 --> 01:01:16.470 align:start position:0%
freed even though the thread needs them
even<01:01:12.880><c> just</c><01:01:13.040><c> to</c><01:01:13.119><c> execute</c><01:01:13.520><c> any</c><01:01:13.680><c> code</c><01:01:13.920><c> at</c><01:01:14.079><c> all</c>

01:01:16.470 --> 01:01:16.480 align:start position:0%
 
 

01:01:16.480 --> 01:01:19.430 align:start position:0%
 
okay<01:01:16.720><c> so</c><01:01:16.960><c> keep</c><01:01:17.119><c> these</c><01:01:17.280><c> two</c><01:01:17.680><c> problems</c><01:01:18.079><c> in</c><01:01:18.160><c> mind</c>

01:01:19.430 --> 01:01:19.440 align:start position:0%
okay so keep these two problems in mind
 

01:01:19.440 --> 01:01:22.470 align:start position:0%
okay so keep these two problems in mind
xv6<01:01:19.920><c> actually</c><01:01:20.160><c> has</c><01:01:20.400><c> two</c>

01:01:22.470 --> 01:01:22.480 align:start position:0%
xv6 actually has two
 

01:01:22.480 --> 01:01:24.069 align:start position:0%
xv6 actually has two
two<01:01:22.640><c> things</c><01:01:22.880><c> that</c><01:01:23.040><c> are</c><01:01:23.119><c> related</c><01:01:23.440><c> to</c><01:01:23.760><c> shutting</c>

01:01:24.069 --> 01:01:24.079 align:start position:0%
two things that are related to shutting
 

01:01:24.079 --> 01:01:27.030 align:start position:0%
two things that are related to shutting
down<01:01:25.280><c> threads</c><01:01:25.839><c> or</c><01:01:26.000><c> processes</c>

01:01:27.030 --> 01:01:27.040 align:start position:0%
down threads or processes
 

01:01:27.040 --> 01:01:28.870 align:start position:0%
down threads or processes
one<01:01:27.280><c> is</c><01:01:27.520><c> exit</c><01:01:27.839><c> and</c><01:01:27.920><c> the</c><01:01:28.000><c> other</c><01:01:28.160><c> is</c><01:01:28.319><c> kill</c><01:01:28.640><c> so</c>

01:01:28.870 --> 01:01:28.880 align:start position:0%
one is exit and the other is kill so
 

01:01:28.880 --> 01:01:31.030 align:start position:0%
one is exit and the other is kill so
let's<01:01:29.119><c> look</c><01:01:29.280><c> at</c><01:01:29.359><c> exit</c><01:01:29.760><c> first</c>

01:01:31.030 --> 01:01:31.040 align:start position:0%
let's look at exit first
 

01:01:31.040 --> 01:01:32.470 align:start position:0%
let's look at exit first
i'm<01:01:31.280><c> going</c><01:01:31.359><c> to</c><01:01:31.440><c> look</c><01:01:31.520><c> at</c><01:01:31.680><c> the</c><01:01:31.760><c> code</c><01:01:32.000><c> for</c><01:01:32.160><c> exit</c>

01:01:32.470 --> 01:01:32.480 align:start position:0%
i'm going to look at the code for exit
 

01:01:32.480 --> 01:01:35.030 align:start position:0%
i'm going to look at the code for exit
and<01:01:32.640><c> proc.c</c>

01:01:35.030 --> 01:01:35.040 align:start position:0%
and proc.c
 

01:01:35.040 --> 01:01:38.069 align:start position:0%
and proc.c
this<01:01:35.200><c> is</c><01:01:35.359><c> what</c><01:01:35.520><c> the</c><01:01:36.720><c> exit</c><01:01:37.040><c> system</c><01:01:37.440><c> call</c>

01:01:38.069 --> 01:01:38.079 align:start position:0%
this is what the exit system call
 

01:01:38.079 --> 01:01:41.430 align:start position:0%
this is what the exit system call
calls<01:01:39.040><c> um</c>

01:01:41.430 --> 01:01:41.440 align:start position:0%
 
 

01:01:41.440 --> 01:01:43.430 align:start position:0%
 
uh<01:01:42.160><c> and</c><01:01:42.400><c> you</c><01:01:42.480><c> know</c><01:01:42.559><c> what</c><01:01:42.799><c> exit</c><01:01:43.040><c> has</c><01:01:43.200><c> to</c><01:01:43.280><c> do</c><01:01:43.359><c> in</c>

01:01:43.430 --> 01:01:43.440 align:start position:0%
uh and you know what exit has to do in
 

01:01:43.440 --> 01:01:44.630 align:start position:0%
uh and you know what exit has to do in
the<01:01:43.599><c> end</c><01:01:44.079><c> we</c><01:01:44.240><c> know</c>

01:01:44.630 --> 01:01:44.640 align:start position:0%
the end we know
 

01:01:44.640 --> 01:01:45.990 align:start position:0%
the end we know
sort<01:01:44.799><c> of</c><01:01:44.960><c> from</c><01:01:45.119><c> the</c><01:01:45.200><c> outside</c><01:01:45.680><c> from</c><01:01:45.920><c> the</c>

01:01:45.990 --> 01:01:46.000 align:start position:0%
sort of from the outside from the
 

01:01:46.000 --> 01:01:47.829 align:start position:0%
sort of from the outside from the
interface<01:01:46.400><c> that</c><01:01:46.799><c> it's</c><01:01:46.960><c> got</c><01:01:47.119><c> to</c><01:01:47.200><c> free</c><01:01:47.520><c> up</c><01:01:47.680><c> the</c>

01:01:47.829 --> 01:01:47.839 align:start position:0%
interface that it's got to free up the
 

01:01:47.839 --> 01:01:49.589 align:start position:0%
interface that it's got to free up the
process<01:01:48.240><c> memory</c><01:01:48.720><c> and</c><01:01:48.799><c> page</c><01:01:49.119><c> table</c><01:01:49.440><c> it's</c><01:01:49.520><c> got</c>

01:01:49.589 --> 01:01:49.599 align:start position:0%
process memory and page table it's got
 

01:01:49.599 --> 01:01:51.670 align:start position:0%
process memory and page table it's got
to<01:01:49.680><c> close</c><01:01:49.920><c> its</c><01:01:50.079><c> open</c><01:01:50.400><c> files</c>

01:01:51.670 --> 01:01:51.680 align:start position:0%
to close its open files
 

01:01:51.680 --> 01:01:53.670 align:start position:0%
to close its open files
and<01:01:52.160><c> we</c><01:01:52.319><c> also</c><01:01:52.559><c> know</c><01:01:52.720><c> that</c><01:01:52.880><c> there's</c><01:01:53.119><c> this</c><01:01:53.359><c> wait</c>

01:01:53.670 --> 01:01:53.680 align:start position:0%
and we also know that there's this wait
 

01:01:53.680 --> 01:01:55.510 align:start position:0%
and we also know that there's this wait
call<01:01:53.920><c> that</c><01:01:54.079><c> the</c><01:01:54.240><c> parent</c><01:01:54.640><c> may</c><01:01:54.799><c> be</c><01:01:54.960><c> waking</c>

01:01:55.510 --> 01:01:55.520 align:start position:0%
call that the parent may be waking
 

01:01:55.520 --> 01:01:58.630 align:start position:0%
call that the parent may be waking
making<01:01:56.000><c> and</c><01:01:56.160><c> that</c><01:01:56.720><c> exit</c><01:01:57.200><c> has</c><01:01:57.440><c> to</c><01:01:58.240><c> eventually</c>

01:01:58.630 --> 01:01:58.640 align:start position:0%
making and that exit has to eventually
 

01:01:58.640 --> 01:02:00.150 align:start position:0%
making and that exit has to eventually
cause<01:01:58.880><c> the</c><01:01:59.039><c> parent</c><01:01:59.359><c> to</c><01:01:59.440><c> be</c><01:01:59.520><c> woken</c><01:01:59.920><c> up</c>

01:02:00.150 --> 01:02:00.160 align:start position:0%
cause the parent to be woken up
 

01:02:00.160 --> 01:02:02.230 align:start position:0%
cause the parent to be woken up
as<01:02:00.319><c> well</c><01:02:01.440><c> and</c><01:02:01.599><c> so</c><01:02:01.760><c> we're</c><01:02:01.839><c> going</c><01:02:01.920><c> to</c><01:02:02.000><c> look</c><01:02:02.160><c> for</c>

01:02:02.230 --> 01:02:02.240 align:start position:0%
as well and so we're going to look for
 

01:02:02.240 --> 01:02:05.270 align:start position:0%
as well and so we're going to look for
all<01:02:02.400><c> these</c><01:02:02.559><c> things</c><01:02:02.960><c> in</c><01:02:03.039><c> the</c>

01:02:05.270 --> 01:02:05.280 align:start position:0%
all these things in the
 

01:02:05.280 --> 01:02:08.549 align:start position:0%
all these things in the
an<01:02:05.520><c> exit</c><01:02:05.839><c> code</c><01:02:06.799><c> so</c><01:02:07.039><c> you</c><01:02:07.119><c> can</c><01:02:07.359><c> see</c><01:02:07.920><c> um</c><01:02:08.240><c> some</c><01:02:08.400><c> of</c>

01:02:08.549 --> 01:02:08.559 align:start position:0%
an exit code so you can see um some of
 

01:02:08.559 --> 01:02:09.510 align:start position:0%
an exit code so you can see um some of
this<01:02:08.720><c> stuff</c><01:02:09.039><c> like</c>

01:02:09.510 --> 01:02:09.520 align:start position:0%
this stuff like
 

01:02:09.520 --> 01:02:12.230 align:start position:0%
this stuff like
exit<01:02:10.240><c> specifically</c><01:02:10.880><c> closes</c><01:02:11.200><c> the</c><01:02:11.359><c> open</c><01:02:11.680><c> files</c>

01:02:12.230 --> 01:02:12.240 align:start position:0%
exit specifically closes the open files
 

01:02:12.240 --> 01:02:13.750 align:start position:0%
exit specifically closes the open files
and<01:02:12.400><c> this</c><01:02:12.559><c> might</c><01:02:12.799><c> actually</c><01:02:12.960><c> be</c><01:02:13.119><c> quite</c><01:02:13.280><c> complex</c>

01:02:13.750 --> 01:02:13.760 align:start position:0%
and this might actually be quite complex
 

01:02:13.760 --> 01:02:15.029 align:start position:0%
and this might actually be quite complex
because<01:02:13.920><c> the</c><01:02:14.079><c> files</c><01:02:14.480><c> are</c>

01:02:15.029 --> 01:02:15.039 align:start position:0%
because the files are
 

01:02:15.039 --> 01:02:17.109 align:start position:0%
because the files are
you<01:02:15.200><c> know</c><01:02:15.359><c> file</c><01:02:15.599><c> system</c><01:02:15.920><c> files</c><01:02:16.480><c> closing</c><01:02:16.799><c> them</c>

01:02:17.109 --> 01:02:17.119 align:start position:0%
you know file system files closing them
 

01:02:17.119 --> 01:02:18.829 align:start position:0%
you know file system files closing them
actually<01:02:17.440><c> involves</c><01:02:17.920><c> things</c><01:02:18.160><c> like</c><01:02:18.319><c> reference</c>

01:02:18.829 --> 01:02:18.839 align:start position:0%
actually involves things like reference
 

01:02:18.839 --> 01:02:21.029 align:start position:0%
actually involves things like reference
counting

01:02:21.029 --> 01:02:21.039 align:start position:0%
counting
 

01:02:21.039 --> 01:02:22.150 align:start position:0%
counting
and<01:02:21.200><c> we</c><01:02:21.359><c> haven't</c><01:02:21.520><c> gotten</c><01:02:21.760><c> there</c><01:02:21.839><c> yet</c><01:02:22.000><c> but</c>

01:02:22.150 --> 01:02:22.160 align:start position:0%
and we haven't gotten there yet but
 

01:02:22.160 --> 01:02:24.069 align:start position:0%
and we haven't gotten there yet but
we'll<01:02:22.319><c> see</c><01:02:22.480><c> that</c>

01:02:24.069 --> 01:02:24.079 align:start position:0%
we'll see that
 

01:02:24.079 --> 01:02:25.510 align:start position:0%
we'll see that
this<01:02:24.240><c> takes</c><01:02:24.400><c> a</c><01:02:24.480><c> fair</c><01:02:24.640><c> amount</c><01:02:24.799><c> of</c><01:02:24.880><c> work</c><01:02:25.039><c> but</c><01:02:25.200><c> a</c>

01:02:25.510 --> 01:02:25.520 align:start position:0%
this takes a fair amount of work but a
 

01:02:25.520 --> 01:02:27.029 align:start position:0%
this takes a fair amount of work but a
process<01:02:25.920><c> goes</c><01:02:26.079><c> ahead</c><01:02:26.319><c> and</c><01:02:26.400><c> closes</c><01:02:26.799><c> when</c><01:02:26.960><c> you</c>

01:02:27.029 --> 01:02:27.039 align:start position:0%
process goes ahead and closes when you
 

01:02:27.039 --> 01:02:27.829 align:start position:0%
process goes ahead and closes when you
call<01:02:27.280><c> exit</c>

01:02:27.829 --> 01:02:27.839 align:start position:0%
call exit
 

01:02:27.839 --> 01:02:31.029 align:start position:0%
call exit
closes<01:02:28.319><c> its</c><01:02:28.559><c> own</c><01:02:28.799><c> files</c>

01:02:31.029 --> 01:02:31.039 align:start position:0%
closes its own files
 

01:02:31.039 --> 01:02:33.430 align:start position:0%
closes its own files
and<01:02:31.440><c> it</c><01:02:31.599><c> also</c><01:02:31.839><c> does</c><01:02:32.000><c> something</c><01:02:32.319><c> similar</c><01:02:32.799><c> it</c><01:02:33.039><c> uh</c>

01:02:33.430 --> 01:02:33.440 align:start position:0%
and it also does something similar it uh
 

01:02:33.440 --> 01:02:34.230 align:start position:0%
and it also does something similar it uh
has<01:02:33.680><c> a</c>

01:02:34.230 --> 01:02:34.240 align:start position:0%
has a
 

01:02:34.240 --> 01:02:36.630 align:start position:0%
has a
record<01:02:34.720><c> of</c><01:02:34.880><c> the</c><01:02:35.520><c> current</c><01:02:35.839><c> working</c><01:02:36.160><c> directory</c>

01:02:36.630 --> 01:02:36.640 align:start position:0%
record of the current working directory
 

01:02:36.640 --> 01:02:38.069 align:start position:0%
record of the current working directory
which<01:02:36.799><c> is</c><01:02:36.960><c> what's</c><01:02:37.280><c> changed</c><01:02:37.520><c> when</c><01:02:37.760><c> you</c><01:02:37.839><c> call</c><01:02:38.000><c> it</c>

01:02:38.069 --> 01:02:38.079 align:start position:0%
which is what's changed when you call it
 

01:02:38.079 --> 01:02:39.829 align:start position:0%
which is what's changed when you call it
cd<01:02:38.480><c> and</c><01:02:38.559><c> it</c><01:02:38.640><c> needs</c><01:02:38.880><c> to</c>

01:02:39.829 --> 01:02:39.839 align:start position:0%
cd and it needs to
 

01:02:39.839 --> 01:02:42.230 align:start position:0%
cd and it needs to
sort<01:02:40.000><c> of</c><01:02:40.400><c> release</c><01:02:40.960><c> that</c><01:02:41.200><c> reference</c><01:02:41.920><c> into</c><01:02:42.160><c> the</c>

01:02:42.230 --> 01:02:42.240 align:start position:0%
sort of release that reference into the
 

01:02:42.240 --> 01:02:44.069 align:start position:0%
sort of release that reference into the
file<01:02:42.640><c> system</c>

01:02:44.069 --> 01:02:44.079 align:start position:0%
file system
 

01:02:44.079 --> 01:02:45.829 align:start position:0%
file system
then<01:02:44.720><c> there's</c><01:02:44.880><c> some</c><01:02:45.039><c> other</c><01:02:45.200><c> horrible</c><01:02:45.599><c> stuff</c>

01:02:45.829 --> 01:02:45.839 align:start position:0%
then there's some other horrible stuff
 

01:02:45.839 --> 01:02:47.430 align:start position:0%
then there's some other horrible stuff
that<01:02:46.000><c> happens</c><01:02:46.880><c> that's</c>

01:02:47.430 --> 01:02:47.440 align:start position:0%
that happens that's
 

01:02:47.440 --> 01:02:50.789 align:start position:0%
that happens that's
related<01:02:48.000><c> to</c><01:02:48.160><c> the</c><01:02:48.319><c> fact</c><01:02:48.640><c> that</c><01:02:49.280><c> if</c><01:02:49.440><c> a</c><01:02:49.599><c> process</c>

01:02:50.789 --> 01:02:50.799 align:start position:0%
related to the fact that if a process
 

01:02:50.799 --> 01:02:55.270 align:start position:0%
related to the fact that if a process
exits<01:02:51.280><c> but</c><01:02:51.440><c> it</c><01:02:51.599><c> has</c><01:02:52.160><c> children</c><01:02:52.559><c> of</c><01:02:52.640><c> its</c><01:02:52.880><c> own</c>

01:02:55.270 --> 01:02:55.280 align:start position:0%
exits but it has children of its own
 

01:02:55.280 --> 01:02:58.309 align:start position:0%
exits but it has children of its own
those<01:02:55.680><c> children</c><01:02:56.160><c> are</c><01:02:56.640><c> inherited</c><01:02:57.440><c> by</c><01:02:57.760><c> the</c><01:02:57.920><c> init</c>

01:02:58.309 --> 01:02:58.319 align:start position:0%
those children are inherited by the init
 

01:02:58.319 --> 01:02:59.109 align:start position:0%
those children are inherited by the init
process

01:02:59.109 --> 01:02:59.119 align:start position:0%
process
 

01:02:59.119 --> 01:03:00.710 align:start position:0%
process
because<01:02:59.440><c> as</c><01:02:59.599><c> it</c><01:02:59.680><c> turns</c><01:03:00.000><c> out</c><01:03:00.160><c> we'll</c><01:03:00.400><c> see</c><01:03:00.559><c> in</c><01:03:00.640><c> a</c>

01:03:00.710 --> 01:03:00.720 align:start position:0%
because as it turns out we'll see in a
 

01:03:00.720 --> 01:03:02.470 align:start position:0%
because as it turns out we'll see in a
few<01:03:00.880><c> minutes</c><01:03:01.359><c> that</c>

01:03:02.470 --> 01:03:02.480 align:start position:0%
few minutes that
 

01:03:02.480 --> 01:03:04.789 align:start position:0%
few minutes that
every<01:03:02.720><c> process</c><01:03:03.039><c> that</c><01:03:03.280><c> exits</c><01:03:04.240><c> there</c><01:03:04.480><c> has</c><01:03:04.640><c> to</c><01:03:04.720><c> be</c>

01:03:04.789 --> 01:03:04.799 align:start position:0%
every process that exits there has to be
 

01:03:04.799 --> 01:03:06.069 align:start position:0%
every process that exits there has to be
a<01:03:04.880><c> corresponding</c><01:03:05.520><c> weight</c>

01:03:06.069 --> 01:03:06.079 align:start position:0%
a corresponding weight
 

01:03:06.079 --> 01:03:09.910 align:start position:0%
a corresponding weight
from<01:03:06.319><c> a</c><01:03:06.400><c> parent</c><01:03:07.039><c> that</c><01:03:07.839><c> actually</c><01:03:08.160><c> finishes</c><01:03:08.720><c> up</c>

01:03:09.910 --> 01:03:09.920 align:start position:0%
from a parent that actually finishes up
 

01:03:09.920 --> 01:03:12.870 align:start position:0%
from a parent that actually finishes up
some<01:03:10.079><c> of</c><01:03:10.160><c> the</c><01:03:10.319><c> steps</c><01:03:10.559><c> in</c><01:03:10.720><c> exiting</c><01:03:12.160><c> and</c><01:03:12.240><c> so</c><01:03:12.559><c> if</c><01:03:12.720><c> i</c>

01:03:12.870 --> 01:03:12.880 align:start position:0%
some of the steps in exiting and so if i
 

01:03:12.880 --> 01:03:13.670 align:start position:0%
some of the steps in exiting and so if i
exit

01:03:13.670 --> 01:03:13.680 align:start position:0%
exit
 

01:03:13.680 --> 01:03:15.589 align:start position:0%
exit
my<01:03:13.920><c> children</c><01:03:14.400><c> they</c><01:03:14.559><c> need</c><01:03:14.720><c> to</c><01:03:14.799><c> be</c><01:03:14.960><c> waited</c><01:03:15.280><c> for</c><01:03:15.520><c> i</c>

01:03:15.589 --> 01:03:15.599 align:start position:0%
my children they need to be waited for i
 

01:03:15.599 --> 01:03:16.789 align:start position:0%
my children they need to be waited for i
was<01:03:15.760><c> their</c><01:03:15.920><c> parent</c><01:03:16.240><c> i'm</c><01:03:16.319><c> not</c><01:03:16.480><c> going</c><01:03:16.559><c> to</c><01:03:16.640><c> wait</c>

01:03:16.789 --> 01:03:16.799 align:start position:0%
was their parent i'm not going to wait
 

01:03:16.799 --> 01:03:18.390 align:start position:0%
was their parent i'm not going to wait
for<01:03:16.880><c> them</c><01:03:17.039><c> because</c><01:03:17.200><c> i've</c><01:03:17.440><c> exited</c>

01:03:18.390 --> 01:03:18.400 align:start position:0%
for them because i've exited
 

01:03:18.400 --> 01:03:20.390 align:start position:0%
for them because i've exited
and<01:03:18.799><c> so</c><01:03:19.280><c> there's</c><01:03:19.520><c> a</c><01:03:19.599><c> stretch</c><01:03:19.920><c> of</c><01:03:20.000><c> code</c><01:03:20.240><c> here</c>

01:03:20.390 --> 01:03:20.400 align:start position:0%
and so there's a stretch of code here
 

01:03:20.400 --> 01:03:21.670 align:start position:0%
and so there's a stretch of code here
and<01:03:20.559><c> exit</c><01:03:21.039><c> that</c><01:03:21.359><c> is</c>

01:03:21.670 --> 01:03:21.680 align:start position:0%
and exit that is
 

01:03:21.680 --> 01:03:24.309 align:start position:0%
and exit that is
re-parenting<01:03:23.119><c> the</c><01:03:23.280><c> exiting</c><01:03:23.760><c> processes</c>

01:03:24.309 --> 01:03:24.319 align:start position:0%
re-parenting the exiting processes
 

01:03:24.319 --> 01:03:26.150 align:start position:0%
re-parenting the exiting processes
children<01:03:24.640><c> so</c><01:03:24.799><c> that</c><01:03:24.960><c> they're</c><01:03:25.200><c> parents</c><01:03:25.599><c> of</c><01:03:25.760><c> init</c>

01:03:26.150 --> 01:03:26.160 align:start position:0%
children so that they're parents of init
 

01:03:26.160 --> 01:03:26.789 align:start position:0%
children so that they're parents of init
which<01:03:26.400><c> is</c>

01:03:26.789 --> 01:03:26.799 align:start position:0%
which is
 

01:03:26.799 --> 01:03:29.829 align:start position:0%
which is
process<01:03:27.200><c> id</c><01:03:27.559><c> one</c>

01:03:29.829 --> 01:03:29.839 align:start position:0%
process id one
 

01:03:29.839 --> 01:03:33.190 align:start position:0%
process id one
and<01:03:29.920><c> then</c><01:03:30.160><c> finally</c><01:03:32.000><c> a</c><01:03:32.240><c> process</c><01:03:32.640><c> wakes</c><01:03:32.880><c> up</c><01:03:33.039><c> its</c>

01:03:33.190 --> 01:03:33.200 align:start position:0%
and then finally a process wakes up its
 

01:03:33.200 --> 01:03:34.069 align:start position:0%
and then finally a process wakes up its
own<01:03:33.359><c> parent</c>

01:03:34.069 --> 01:03:34.079 align:start position:0%
own parent
 

01:03:34.079 --> 01:03:36.309 align:start position:0%
own parent
which<01:03:34.240><c> might</c><01:03:34.480><c> be</c><01:03:34.640><c> waiting</c><01:03:34.960><c> and</c><01:03:35.760><c> sleeping</c><01:03:36.160><c> and</c>

01:03:36.309 --> 01:03:36.319 align:start position:0%
which might be waiting and sleeping and
 

01:03:36.319 --> 01:03:37.270 align:start position:0%
which might be waiting and sleeping and
wait

01:03:37.270 --> 01:03:37.280 align:start position:0%
wait
 

01:03:37.280 --> 01:03:40.470 align:start position:0%
wait
um<01:03:39.599><c> and</c>

01:03:40.470 --> 01:03:40.480 align:start position:0%
um and
 

01:03:40.480 --> 01:03:44.150 align:start position:0%
um and
uh<01:03:41.680><c> sets</c><01:03:42.000><c> its</c><01:03:42.240><c> state</c><01:03:42.400><c> to</c><01:03:42.559><c> the</c><01:03:42.799><c> zombie</c><01:03:43.280><c> state</c>

01:03:44.150 --> 01:03:44.160 align:start position:0%
uh sets its state to the zombie state
 

01:03:44.160 --> 01:03:47.029 align:start position:0%
uh sets its state to the zombie state
um<01:03:44.880><c> it</c><01:03:45.039><c> turns</c><01:03:45.280><c> out</c><01:03:45.440><c> we</c><01:03:45.520><c> haven't</c><01:03:46.640><c> we'll</c><01:03:46.799><c> see</c><01:03:46.960><c> in</c>

01:03:47.029 --> 01:03:47.039 align:start position:0%
um it turns out we haven't we'll see in
 

01:03:47.039 --> 01:03:48.390 align:start position:0%
um it turns out we haven't we'll see in
a<01:03:47.119><c> moment</c><01:03:47.440><c> but</c><01:03:47.520><c> the</c><01:03:47.680><c> process</c><01:03:48.079><c> hasn't</c>

01:03:48.390 --> 01:03:48.400 align:start position:0%
a moment but the process hasn't
 

01:03:48.400 --> 01:03:50.230 align:start position:0%
a moment but the process hasn't
completely<01:03:49.039><c> finished</c><01:03:49.520><c> releasing</c>

01:03:50.230 --> 01:03:50.240 align:start position:0%
completely finished releasing
 

01:03:50.240 --> 01:03:52.870 align:start position:0%
completely finished releasing
all<01:03:50.400><c> of</c><01:03:50.559><c> its</c><01:03:50.720><c> resources</c><01:03:52.000><c> um</c><01:03:52.240><c> so</c><01:03:52.400><c> it's</c><01:03:52.559><c> not</c>

01:03:52.870 --> 01:03:52.880 align:start position:0%
all of its resources um so it's not
 

01:03:52.880 --> 01:03:54.789 align:start position:0%
all of its resources um so it's not
quite<01:03:53.200><c> ready</c><01:03:53.520><c> to</c><01:03:53.599><c> be</c><01:03:53.839><c> reused</c>

01:03:54.789 --> 01:03:54.799 align:start position:0%
quite ready to be reused
 

01:03:54.799 --> 01:03:57.029 align:start position:0%
quite ready to be reused
like<01:03:55.680><c> we</c><01:03:55.839><c> want</c><01:03:56.000><c> to</c><01:03:56.160><c> end</c><01:03:56.319><c> up</c><01:03:56.400><c> in</c><01:03:56.559><c> a</c><01:03:56.640><c> position</c>

01:03:57.029 --> 01:03:57.039 align:start position:0%
like we want to end up in a position
 

01:03:57.039 --> 01:03:58.630 align:start position:0%
like we want to end up in a position
where<01:03:57.520><c> the</c><01:03:57.760><c> process</c><01:03:58.160><c> can</c><01:03:58.319><c> be</c>

01:03:58.630 --> 01:03:58.640 align:start position:0%
where the process can be
 

01:03:58.640 --> 01:04:01.109 align:start position:0%
where the process can be
and<01:03:58.880><c> all</c><01:03:59.039><c> its</c><01:03:59.680><c> state</c><01:04:00.000><c> can</c><01:04:00.160><c> be</c><01:04:00.319><c> reused</c><01:04:00.799><c> by</c><01:04:00.960><c> a</c>

01:04:01.109 --> 01:04:01.119 align:start position:0%
and all its state can be reused by a
 

01:04:01.119 --> 01:04:02.230 align:start position:0%
and all its state can be reused by a
fork

01:04:02.230 --> 01:04:02.240 align:start position:0%
fork
 

01:04:02.240 --> 01:04:04.309 align:start position:0%
fork
by<01:04:02.559><c> some</c><01:04:02.799><c> other</c><01:04:03.119><c> fork</c><01:04:03.440><c> that's</c><01:04:03.680><c> unrelated</c>

01:04:04.309 --> 01:04:04.319 align:start position:0%
by some other fork that's unrelated
 

01:04:04.319 --> 01:04:07.349 align:start position:0%
by some other fork that's unrelated
right<01:04:05.200><c> but</c><01:04:05.280><c> we're</c><01:04:05.440><c> not</c><01:04:05.680><c> quite</c><01:04:05.920><c> there</c><01:04:06.160><c> yet</c>

01:04:07.349 --> 01:04:07.359 align:start position:0%
right but we're not quite there yet
 

01:04:07.359 --> 01:04:09.430 align:start position:0%
right but we're not quite there yet
and<01:04:07.680><c> we'll</c><01:04:07.839><c> see</c><01:04:08.000><c> why</c><01:04:08.240><c> in</c><01:04:08.319><c> a</c><01:04:08.400><c> moment</c><01:04:08.960><c> we</c><01:04:09.119><c> set</c><01:04:09.359><c> the</c>

01:04:09.430 --> 01:04:09.440 align:start position:0%
and we'll see why in a moment we set the
 

01:04:09.440 --> 01:04:12.630 align:start position:0%
and we'll see why in a moment we set the
state<01:04:09.920><c> to</c><01:04:10.839><c> zombie</c><01:04:11.839><c> um</c>

01:04:12.630 --> 01:04:12.640 align:start position:0%
state to zombie um
 

01:04:12.640 --> 01:04:15.109 align:start position:0%
state to zombie um
and<01:04:12.799><c> then</c><01:04:13.680><c> and</c><01:04:13.839><c> we're</c><01:04:14.079><c> not</c><01:04:14.319><c> done</c><01:04:14.559><c> yet</c><01:04:14.799><c> right</c><01:04:14.960><c> we</c>

01:04:15.109 --> 01:04:15.119 align:start position:0%
and then and we're not done yet right we
 

01:04:15.119 --> 01:04:16.470 align:start position:0%
and then and we're not done yet right we
haven't<01:04:15.280><c> freed</c><01:04:15.520><c> the</c><01:04:15.680><c> process</c>

01:04:16.470 --> 01:04:16.480 align:start position:0%
haven't freed the process
 

01:04:16.480 --> 01:04:20.390 align:start position:0%
haven't freed the process
um<01:04:17.200><c> we</c><01:04:17.520><c> just</c><01:04:17.839><c> jump</c><01:04:18.160><c> into</c><01:04:18.319><c> the</c><01:04:18.480><c> scheduler</c>

01:04:20.390 --> 01:04:20.400 align:start position:0%
um we just jump into the scheduler
 

01:04:20.400 --> 01:04:24.309 align:start position:0%
um we just jump into the scheduler
without<01:04:20.799><c> having</c><01:04:21.119><c> completely</c><01:04:21.920><c> finished</c><01:04:23.280><c> um</c>

01:04:24.309 --> 01:04:24.319 align:start position:0%
without having completely finished um
 

01:04:24.319 --> 01:04:27.750 align:start position:0%
without having completely finished um
freeing<01:04:24.720><c> all</c><01:04:24.880><c> resources</c>

01:04:27.750 --> 01:04:27.760 align:start position:0%
freeing all resources
 

01:04:27.760 --> 01:04:31.109 align:start position:0%
freeing all resources
okay<01:04:29.440><c> so</c><01:04:29.599><c> the</c><01:04:29.760><c> story</c><01:04:30.079><c> here</c><01:04:30.319><c> continues</c>

01:04:31.109 --> 01:04:31.119 align:start position:0%
okay so the story here continues
 

01:04:31.119 --> 01:04:32.789 align:start position:0%
okay so the story here continues
you<01:04:31.280><c> know</c><01:04:31.359><c> at</c><01:04:31.440><c> this</c><01:04:31.599><c> point</c><01:04:31.839><c> a</c><01:04:32.079><c> zombie</c><01:04:32.400><c> process</c>

01:04:32.789 --> 01:04:32.799 align:start position:0%
you know at this point a zombie process
 

01:04:32.799 --> 01:04:34.150 align:start position:0%
you know at this point a zombie process
won't<01:04:32.960><c> be</c><01:04:33.200><c> run</c>

01:04:34.150 --> 01:04:34.160 align:start position:0%
won't be run
 

01:04:34.160 --> 01:04:36.069 align:start position:0%
won't be run
the<01:04:34.319><c> scheduler</c><01:04:34.799><c> only</c><01:04:35.280><c> runs</c><01:04:35.680><c> runnable</c>

01:04:36.069 --> 01:04:36.079 align:start position:0%
the scheduler only runs runnable
 

01:04:36.079 --> 01:04:37.430 align:start position:0%
the scheduler only runs runnable
processes<01:04:36.640><c> so</c><01:04:36.799><c> this</c>

01:04:37.430 --> 01:04:37.440 align:start position:0%
processes so this
 

01:04:37.440 --> 01:04:39.109 align:start position:0%
processes so this
process<01:04:37.760><c> isn't</c><01:04:38.000><c> quite</c><01:04:38.240><c> free</c><01:04:38.799><c> because</c><01:04:38.960><c> that</c>

01:04:39.109 --> 01:04:39.119 align:start position:0%
process isn't quite free because that
 

01:04:39.119 --> 01:04:41.190 align:start position:0%
process isn't quite free because that
would<01:04:39.200><c> be</c><01:04:39.359><c> state</c><01:04:39.680><c> equals</c><01:04:40.000><c> unused</c>

01:04:41.190 --> 01:04:41.200 align:start position:0%
would be state equals unused
 

01:04:41.200 --> 01:04:42.309 align:start position:0%
would be state equals unused
but<01:04:41.440><c> it's</c><01:04:41.520><c> definitely</c><01:04:41.760><c> not</c><01:04:41.920><c> going</c><01:04:42.000><c> to</c><01:04:42.079><c> run</c>

01:04:42.309 --> 01:04:42.319 align:start position:0%
but it's definitely not going to run
 

01:04:42.319 --> 01:04:43.910 align:start position:0%
but it's definitely not going to run
again<01:04:42.640><c> because</c><01:04:42.880><c> it's</c><01:04:43.039><c> in</c><01:04:43.119><c> state</c><01:04:43.440><c> zombie</c><01:04:43.839><c> so</c>

01:04:43.910 --> 01:04:43.920 align:start position:0%
again because it's in state zombie so
 

01:04:43.920 --> 01:04:45.349 align:start position:0%
again because it's in state zombie so
resistance<01:04:44.480><c> to</c><01:04:44.640><c> scheduler</c>

01:04:45.349 --> 01:04:45.359 align:start position:0%
resistance to scheduler
 

01:04:45.359 --> 01:04:49.750 align:start position:0%
resistance to scheduler
scheduler<01:04:45.839><c> now</c><01:04:46.720><c> runs</c><01:04:46.960><c> something</c><01:04:47.359><c> else</c>

01:04:49.750 --> 01:04:49.760 align:start position:0%
 
 

01:04:49.760 --> 01:04:52.470 align:start position:0%
 
we<01:04:50.000><c> know</c><01:04:50.400><c> from</c><01:04:50.559><c> the</c><01:04:51.200><c> sort</c><01:04:51.359><c> of</c><01:04:51.520><c> description</c><01:04:52.079><c> of</c>

01:04:52.470 --> 01:04:52.480 align:start position:0%
we know from the sort of description of
 

01:04:52.480 --> 01:04:53.430 align:start position:0%
we know from the sort of description of
exit<01:04:52.799><c> and</c><01:04:52.960><c> weight</c>

01:04:53.430 --> 01:04:53.440 align:start position:0%
exit and weight
 

01:04:53.440 --> 01:04:56.950 align:start position:0%
exit and weight
in<01:04:53.680><c> unix</c><01:04:54.319><c> that</c><01:04:55.599><c> if</c><01:04:55.760><c> a</c><01:04:55.839><c> process</c><01:04:56.319><c> exits</c>

01:04:56.950 --> 01:04:56.960 align:start position:0%
in unix that if a process exits
 

01:04:56.960 --> 01:05:00.230 align:start position:0%
in unix that if a process exits
then<01:04:57.920><c> if</c><01:04:58.079><c> its</c><01:04:58.240><c> parent</c><01:04:58.640><c> calls</c><01:04:59.119><c> weight</c>

01:05:00.230 --> 01:05:00.240 align:start position:0%
then if its parent calls weight
 

01:05:00.240 --> 01:05:01.510 align:start position:0%
then if its parent calls weight
the<01:05:00.480><c> weight</c><01:05:00.720><c> that</c><01:05:00.960><c> weight</c><01:05:01.200><c> is</c><01:05:01.280><c> going</c><01:05:01.440><c> to</c>

01:05:01.510 --> 01:05:01.520 align:start position:0%
the weight that weight is going to
 

01:05:01.520 --> 01:05:04.309 align:start position:0%
the weight that weight is going to
return<01:05:01.920><c> to</c><01:05:02.079><c> signal</c><01:05:02.720><c> to</c><01:05:02.880><c> the</c><01:05:02.960><c> parent</c><01:05:03.440><c> that</c>

01:05:04.309 --> 01:05:04.319 align:start position:0%
return to signal to the parent that
 

01:05:04.319 --> 01:05:06.309 align:start position:0%
return to signal to the parent that
one<01:05:04.559><c> of</c><01:05:04.640><c> its</c><01:05:04.799><c> children</c><01:05:05.119><c> is</c><01:05:05.280><c> exited</c><01:05:05.920><c> so</c><01:05:06.079><c> we</c><01:05:06.160><c> can</c>

01:05:06.309 --> 01:05:06.319 align:start position:0%
one of its children is exited so we can
 

01:05:06.319 --> 01:05:12.789 align:start position:0%
one of its children is exited so we can
look<01:05:06.480><c> for</c><01:05:06.559><c> the</c><01:05:06.720><c> implementation</c><01:05:07.280><c> of</c><01:05:07.440><c> weight</c>

01:05:12.789 --> 01:05:12.799 align:start position:0%
 
 

01:05:12.799 --> 01:05:15.910 align:start position:0%
 
also<01:05:13.119><c> here</c><01:05:14.160><c> this</c><01:05:14.319><c> is</c><01:05:14.400><c> a</c><01:05:14.480><c> big</c><01:05:14.799><c> loop</c><01:05:15.680><c> this</c>

01:05:15.910 --> 01:05:15.920 align:start position:0%
also here this is a big loop this
 

01:05:15.920 --> 01:05:17.190 align:start position:0%
also here this is a big loop this
implementation<01:05:16.559><c> of</c><01:05:16.640><c> weight</c><01:05:16.880><c> but</c>

01:05:17.190 --> 01:05:17.200 align:start position:0%
implementation of weight but
 

01:05:17.200 --> 01:05:20.069 align:start position:0%
implementation of weight but
really<01:05:17.520><c> what's</c><01:05:17.760><c> going</c><01:05:18.079><c> on</c><01:05:19.359><c> is</c><01:05:19.520><c> that</c><01:05:19.680><c> when</c><01:05:19.920><c> a</c>

01:05:20.069 --> 01:05:20.079 align:start position:0%
really what's going on is that when a
 

01:05:20.079 --> 01:05:21.589 align:start position:0%
really what's going on is that when a
process<01:05:20.400><c> calls</c><01:05:20.720><c> weight</c>

01:05:21.589 --> 01:05:21.599 align:start position:0%
process calls weight
 

01:05:21.599 --> 01:05:26.230 align:start position:0%
process calls weight
it<01:05:21.920><c> uh</c><01:05:22.240><c> scans</c><01:05:22.720><c> the</c><01:05:22.880><c> process</c><01:05:23.440><c> table</c>

01:05:26.230 --> 01:05:26.240 align:start position:0%
 
 

01:05:26.240 --> 01:05:29.589 align:start position:0%
 
looking<01:05:26.559><c> for</c><01:05:26.799><c> processes</c><01:05:28.079><c> whose</c><01:05:28.559><c> parent</c>

01:05:29.589 --> 01:05:29.599 align:start position:0%
looking for processes whose parent
 

01:05:29.599 --> 01:05:34.309 align:start position:0%
looking for processes whose parent
is<01:05:29.760><c> the</c><01:05:29.920><c> current</c><01:05:30.319><c> process</c>

01:05:34.309 --> 01:05:34.319 align:start position:0%
 
 

01:05:34.319 --> 01:05:36.150 align:start position:0%
 
and<01:05:34.480><c> in</c><01:05:34.559><c> particular</c><01:05:35.039><c> looking</c><01:05:35.200><c> for</c><01:05:35.680><c> processes</c>

01:05:36.150 --> 01:05:36.160 align:start position:0%
and in particular looking for processes
 

01:05:36.160 --> 01:05:37.750 align:start position:0%
and in particular looking for processes
whose<01:05:36.400><c> parent</c><01:05:36.720><c> is</c><01:05:36.799><c> the</c><01:05:36.880><c> current</c><01:05:37.200><c> process</c>

01:05:37.750 --> 01:05:37.760 align:start position:0%
whose parent is the current process
 

01:05:37.760 --> 01:05:40.630 align:start position:0%
whose parent is the current process
and<01:05:37.920><c> are</c><01:05:38.079><c> in</c><01:05:38.240><c> state</c><01:05:38.640><c> zombie</c><01:05:39.280><c> that</c><01:05:39.520><c> is</c><01:05:40.160><c> they</c>

01:05:40.630 --> 01:05:40.640 align:start position:0%
and are in state zombie that is they
 

01:05:40.640 --> 01:05:41.990 align:start position:0%
and are in state zombie that is they
they've<01:05:40.880><c> gotten</c><01:05:41.200><c> that</c><01:05:41.520><c> far</c>

01:05:41.990 --> 01:05:42.000 align:start position:0%
they've gotten that far
 

01:05:42.000 --> 01:05:46.069 align:start position:0%
they've gotten that far
in<01:05:42.319><c> uh</c><01:05:42.960><c> in</c><01:05:43.200><c> exit</c><01:05:43.839><c> or</c><01:05:44.000><c> almost</c><01:05:44.319><c> finished</c><01:05:44.720><c> exiting</c>

01:05:46.069 --> 01:05:46.079 align:start position:0%
in uh in exit or almost finished exiting
 

01:05:46.079 --> 01:05:48.870 align:start position:0%
in uh in exit or almost finished exiting
um<01:05:47.119><c> so</c><01:05:47.280><c> now</c><01:05:47.440><c> we</c><01:05:47.599><c> found</c><01:05:48.079><c> this</c><01:05:48.240><c> called</c><01:05:48.480><c> a</c><01:05:48.640><c> weight</c>

01:05:48.870 --> 01:05:48.880 align:start position:0%
um so now we found this called a weight
 

01:05:48.880 --> 01:05:50.630 align:start position:0%
um so now we found this called a weight
to<01:05:49.039><c> the</c><01:05:49.119><c> wait</c><01:05:49.359><c> system</c><01:05:49.599><c> calls</c><01:05:49.920><c> found</c><01:05:50.160><c> a</c><01:05:50.319><c> child</c>

01:05:50.630 --> 01:05:50.640 align:start position:0%
to the wait system calls found a child
 

01:05:50.640 --> 01:05:51.190 align:start position:0%
to the wait system calls found a child
process

01:05:51.190 --> 01:05:51.200 align:start position:0%
process
 

01:05:51.200 --> 01:05:54.950 align:start position:0%
process
that<01:05:51.440><c> has</c><01:05:51.760><c> exited</c>

01:05:54.950 --> 01:05:54.960 align:start position:0%
 
 

01:05:54.960 --> 01:05:58.150 align:start position:0%
 
and<01:05:56.960><c> i</c><01:05:57.200><c> don't</c><01:05:57.280><c> know</c><01:05:57.359><c> if</c><01:05:57.440><c> you</c><01:05:57.520><c> remember</c>

01:05:58.150 --> 01:05:58.160 align:start position:0%
and i don't know if you remember
 

01:05:58.160 --> 01:06:01.349 align:start position:0%
and i don't know if you remember
exit<01:05:58.559><c> can</c><01:05:58.799><c> return</c><01:05:59.599><c> this</c><01:06:00.160><c> 32-bit</c>

01:06:01.349 --> 01:06:01.359 align:start position:0%
exit can return this 32-bit
 

01:06:01.359 --> 01:06:03.349 align:start position:0%
exit can return this 32-bit
exit<01:06:01.680><c> status</c><01:06:02.160><c> to</c><01:06:02.240><c> the</c><01:06:02.319><c> parents</c><01:06:02.799><c> so</c><01:06:02.960><c> the</c><01:06:03.119><c> next</c>

01:06:03.349 --> 01:06:03.359 align:start position:0%
exit status to the parents so the next
 

01:06:03.359 --> 01:06:05.270 align:start position:0%
exit status to the parents so the next
bunch<01:06:03.599><c> of</c><01:06:03.680><c> code</c><01:06:03.920><c> collects</c><01:06:04.400><c> that</c>

01:06:05.270 --> 01:06:05.280 align:start position:0%
bunch of code collects that
 

01:06:05.280 --> 01:06:08.390 align:start position:0%
bunch of code collects that
and<01:06:05.359><c> then</c><01:06:05.599><c> it's</c><01:06:05.760><c> the</c><01:06:06.160><c> parent</c><01:06:07.440><c> that</c><01:06:07.680><c> calls</c><01:06:08.079><c> free</c>

01:06:08.390 --> 01:06:08.400 align:start position:0%
and then it's the parent that calls free
 

01:06:08.400 --> 01:06:09.430 align:start position:0%
and then it's the parent that calls free
proc

01:06:09.430 --> 01:06:09.440 align:start position:0%
proc
 

01:06:09.440 --> 01:06:11.910 align:start position:0%
proc
which<01:06:09.680><c> does</c><01:06:09.920><c> the</c><01:06:10.160><c> final</c><01:06:10.640><c> steps</c><01:06:11.280><c> in</c><01:06:11.440><c> freeing</c><01:06:11.839><c> a</c>

01:06:11.910 --> 01:06:11.920 align:start position:0%
which does the final steps in freeing a
 

01:06:11.920 --> 01:06:13.349 align:start position:0%
which does the final steps in freeing a
processes<01:06:12.480><c> resources</c>

01:06:13.349 --> 01:06:13.359 align:start position:0%
processes resources
 

01:06:13.359 --> 01:06:15.990 align:start position:0%
processes resources
so<01:06:13.520><c> we'll</c><01:06:13.680><c> look</c><01:06:13.839><c> at</c><01:06:13.920><c> free</c><01:06:14.160><c> proc</c><01:06:15.599><c> and</c><01:06:15.760><c> this</c><01:06:15.920><c> is</c>

01:06:15.990 --> 01:06:16.000 align:start position:0%
so we'll look at free proc and this is
 

01:06:16.000 --> 01:06:17.510 align:start position:0%
so we'll look at free proc and this is
the<01:06:16.160><c> final</c><01:06:16.559><c> shutdown</c><01:06:17.039><c> of</c><01:06:17.119><c> stuff</c>

01:06:17.510 --> 01:06:17.520 align:start position:0%
the final shutdown of stuff
 

01:06:17.520 --> 01:06:19.910 align:start position:0%
the final shutdown of stuff
that<01:06:17.680><c> would</c><01:06:17.920><c> be</c><01:06:18.079><c> quite</c><01:06:18.400><c> awkward</c><01:06:18.960><c> if</c><01:06:19.119><c> the</c><01:06:19.760><c> if</c>

01:06:19.910 --> 01:06:19.920 align:start position:0%
that would be quite awkward if the if
 

01:06:19.920 --> 01:06:21.029 align:start position:0%
that would be quite awkward if the if
the<01:06:20.079><c> exiting</c><01:06:20.480><c> process</c>

01:06:21.029 --> 01:06:21.039 align:start position:0%
the exiting process
 

01:06:21.039 --> 01:06:24.390 align:start position:0%
the exiting process
itself<01:06:21.680><c> freed</c><01:06:22.160><c> while</c><01:06:22.480><c> it</c><01:06:22.559><c> was</c><01:06:22.799><c> executing</c>

01:06:24.390 --> 01:06:24.400 align:start position:0%
itself freed while it was executing
 

01:06:24.400 --> 01:06:26.470 align:start position:0%
itself freed while it was executing
so<01:06:24.559><c> it</c><01:06:24.640><c> frees</c><01:06:24.880><c> its</c><01:06:25.039><c> trap</c><01:06:25.280><c> frame</c><01:06:25.599><c> it</c><01:06:25.920><c> frees</c><01:06:26.160><c> the</c>

01:06:26.470 --> 01:06:26.480 align:start position:0%
so it frees its trap frame it frees the
 

01:06:26.480 --> 01:06:29.349 align:start position:0%
so it frees its trap frame it frees the
user<01:06:26.880><c> page</c><01:06:27.200><c> table</c>

01:06:29.349 --> 01:06:29.359 align:start position:0%
user page table
 

01:06:29.359 --> 01:06:33.270 align:start position:0%
user page table
and<01:06:30.240><c> if</c><01:06:30.480><c> we</c><01:06:30.720><c> freed</c><01:06:31.520><c> kernel</c><01:06:31.920><c> stacks</c>

01:06:33.270 --> 01:06:33.280 align:start position:0%
and if we freed kernel stacks
 

01:06:33.280 --> 01:06:35.670 align:start position:0%
and if we freed kernel stacks
the<01:06:33.440><c> processes</c><01:06:34.480><c> exiting</c><01:06:34.880><c> processes</c><01:06:35.359><c> kernel</c>

01:06:35.670 --> 01:06:35.680 align:start position:0%
the processes exiting processes kernel
 

01:06:35.680 --> 01:06:37.109 align:start position:0%
the processes exiting processes kernel
stack<01:06:35.920><c> would</c><01:06:36.079><c> be</c><01:06:36.160><c> freed</c><01:06:36.480><c> here</c>

01:06:37.109 --> 01:06:37.119 align:start position:0%
stack would be freed here
 

01:06:37.119 --> 01:06:41.990 align:start position:0%
stack would be freed here
also<01:06:38.160><c> but</c><01:06:38.319><c> because</c><01:06:38.720><c> of</c><01:06:38.799><c> the</c>

01:06:41.990 --> 01:06:42.000 align:start position:0%
 
 

01:06:42.000 --> 01:06:43.910 align:start position:0%
 
stat<01:06:42.400><c> guard</c><01:06:42.799><c> kernel</c><01:06:43.119><c> stack</c><01:06:43.359><c> stack</c><01:06:43.680><c> guard</c>

01:06:43.910 --> 01:06:43.920 align:start position:0%
stat guard kernel stack stack guard
 

01:06:43.920 --> 01:06:45.510 align:start position:0%
stat guard kernel stack stack guard
pages<01:06:44.240><c> we</c><01:06:44.400><c> don't</c><01:06:44.559><c> actually</c><01:06:44.880><c> ever</c>

01:06:45.510 --> 01:06:45.520 align:start position:0%
pages we don't actually ever
 

01:06:45.520 --> 01:06:47.829 align:start position:0%
pages we don't actually ever
turns<01:06:45.760><c> out</c><01:06:46.000><c> we</c><01:06:46.160><c> don't</c><01:06:46.559><c> free</c><01:06:46.960><c> do</c><01:06:47.119><c> another</c><01:06:47.520><c> free</c>

01:06:47.829 --> 01:06:47.839 align:start position:0%
turns out we don't free do another free
 

01:06:47.839 --> 01:06:48.630 align:start position:0%
turns out we don't free do another free
the

01:06:48.630 --> 01:06:48.640 align:start position:0%
the
 

01:06:48.640 --> 01:06:50.950 align:start position:0%
the
kernel<01:06:48.960><c> stacks</c><01:06:49.760><c> um</c><01:06:50.240><c> but</c><01:06:50.480><c> all</c><01:06:50.559><c> the</c><01:06:50.720><c> stuff</c><01:06:50.880><c> that</c>

01:06:50.950 --> 01:06:50.960 align:start position:0%
kernel stacks um but all the stuff that
 

01:06:50.960 --> 01:06:52.630 align:start position:0%
kernel stacks um but all the stuff that
would<01:06:51.119><c> be</c><01:06:51.359><c> sort</c><01:06:51.520><c> of</c><01:06:51.680><c> potentially</c><01:06:52.079><c> a</c><01:06:52.240><c> pain</c><01:06:52.480><c> to</c>

01:06:52.630 --> 01:06:52.640 align:start position:0%
would be sort of potentially a pain to
 

01:06:52.640 --> 01:06:53.510 align:start position:0%
would be sort of potentially a pain to
free<01:06:52.880><c> in</c><01:06:52.960><c> the</c>

01:06:53.510 --> 01:06:53.520 align:start position:0%
free in the
 

01:06:53.520 --> 01:06:55.670 align:start position:0%
free in the
exit<01:06:54.480><c> while</c><01:06:54.720><c> the</c><01:06:54.799><c> exiting</c><01:06:55.200><c> process</c><01:06:55.599><c> is</c>

01:06:55.670 --> 01:06:55.680 align:start position:0%
exit while the exiting process is
 

01:06:55.680 --> 01:06:59.349 align:start position:0%
exit while the exiting process is
running<01:06:56.400><c> is</c><01:06:56.559><c> freed</c><01:06:56.960><c> by</c><01:06:57.119><c> the</c><01:06:57.359><c> parent</c>

01:06:59.349 --> 01:06:59.359 align:start position:0%
running is freed by the parent
 

01:06:59.359 --> 01:07:01.829 align:start position:0%
running is freed by the parent
um<01:07:00.559><c> one</c><01:07:00.720><c> thing</c><01:07:00.880><c> to</c><01:07:01.039><c> notice</c><01:07:01.280><c> here</c><01:07:01.520><c> is</c><01:07:01.599><c> that</c>

01:07:01.829 --> 01:07:01.839 align:start position:0%
um one thing to notice here is that
 

01:07:01.839 --> 01:07:02.870 align:start position:0%
um one thing to notice here is that
weight

01:07:02.870 --> 01:07:02.880 align:start position:0%
weight
 

01:07:02.880 --> 01:07:05.430 align:start position:0%
weight
um<01:07:04.160><c> weight</c><01:07:04.480><c> is</c><01:07:04.559><c> not</c><01:07:04.880><c> just</c><01:07:05.119><c> for</c><01:07:05.280><c> the</c>

01:07:05.430 --> 01:07:05.440 align:start position:0%
um weight is not just for the
 

01:07:05.440 --> 01:07:07.190 align:start position:0%
um weight is not just for the
convenience<01:07:06.160><c> of</c><01:07:06.319><c> parents</c><01:07:06.640><c> that</c><01:07:06.799><c> want</c><01:07:06.960><c> to</c><01:07:07.039><c> know</c>

01:07:07.190 --> 01:07:07.200 align:start position:0%
convenience of parents that want to know
 

01:07:07.200 --> 01:07:07.750 align:start position:0%
convenience of parents that want to know
when<01:07:07.359><c> their</c><01:07:07.520><c> pro</c>

01:07:07.750 --> 01:07:07.760 align:start position:0%
when their pro
 

01:07:07.760 --> 01:07:10.309 align:start position:0%
when their pro
when<01:07:07.839><c> their</c><01:07:08.000><c> children</c><01:07:08.400><c> have</c><01:07:08.559><c> exited</c><01:07:10.079><c> weight</c>

01:07:10.309 --> 01:07:10.319 align:start position:0%
when their children have exited weight
 

01:07:10.319 --> 01:07:12.069 align:start position:0%
when their children have exited weight
is<01:07:10.480><c> actually</c><01:07:10.640><c> a</c><01:07:10.720><c> critical</c><01:07:11.200><c> piece</c><01:07:11.440><c> of</c><01:07:11.520><c> the</c><01:07:11.680><c> exit</c>

01:07:12.069 --> 01:07:12.079 align:start position:0%
is actually a critical piece of the exit
 

01:07:12.079 --> 01:07:12.710 align:start position:0%
is actually a critical piece of the exit
process

01:07:12.710 --> 01:07:12.720 align:start position:0%
process
 

01:07:12.720 --> 01:07:15.670 align:start position:0%
process
and<01:07:13.039><c> you</c><01:07:13.280><c> really</c><01:07:14.160><c> in</c><01:07:14.400><c> unix</c><01:07:15.200><c> it's</c><01:07:15.359><c> just</c><01:07:15.599><c> a</c>

01:07:15.670 --> 01:07:15.680 align:start position:0%
and you really in unix it's just a
 

01:07:15.680 --> 01:07:17.029 align:start position:0%
and you really in unix it's just a
requirement

01:07:17.029 --> 01:07:17.039 align:start position:0%
requirement
 

01:07:17.039 --> 01:07:19.190 align:start position:0%
requirement
that<01:07:17.200><c> there</c><01:07:17.440><c> be</c><01:07:17.599><c> a</c><01:07:17.760><c> weight</c><01:07:18.240><c> that</c><01:07:18.559><c> corresponds</c>

01:07:19.190 --> 01:07:19.200 align:start position:0%
that there be a weight that corresponds
 

01:07:19.200 --> 01:07:20.069 align:start position:0%
that there be a weight that corresponds
to<01:07:19.440><c> every</c>

01:07:20.069 --> 01:07:20.079 align:start position:0%
to every
 

01:07:20.079 --> 01:07:21.829 align:start position:0%
to every
exiting<01:07:20.640><c> process</c><01:07:21.119><c> and</c><01:07:21.280><c> that's</c><01:07:21.520><c> really</c><01:07:21.680><c> the</c>

01:07:21.829 --> 01:07:21.839 align:start position:0%
exiting process and that's really the
 

01:07:21.839 --> 01:07:23.510 align:start position:0%
exiting process and that's really the
reason<01:07:22.240><c> why</c><01:07:22.960><c> um</c>

01:07:23.510 --> 01:07:23.520 align:start position:0%
reason why um
 

01:07:23.520 --> 01:07:26.309 align:start position:0%
reason why um
when<01:07:23.680><c> a</c><01:07:23.920><c> process</c><01:07:24.319><c> exits</c><01:07:24.720><c> its</c><01:07:25.119><c> children</c><01:07:26.160><c> are</c>

01:07:26.309 --> 01:07:26.319 align:start position:0%
when a process exits its children are
 

01:07:26.319 --> 01:07:28.630 align:start position:0%
when a process exits its children are
sort<01:07:26.480><c> of</c><01:07:26.559><c> given</c><01:07:26.799><c> away</c><01:07:27.200><c> to</c><01:07:27.440><c> init</c>

01:07:28.630 --> 01:07:28.640 align:start position:0%
sort of given away to init
 

01:07:28.640 --> 01:07:31.190 align:start position:0%
sort of given away to init
um<01:07:29.440><c> they're</c><01:07:29.680><c> turned</c><01:07:29.920><c> into</c><01:07:30.160><c> in</c><01:07:30.319><c> its</c><01:07:30.559><c> children</c>

01:07:31.190 --> 01:07:31.200 align:start position:0%
um they're turned into in its children
 

01:07:31.200 --> 01:07:32.710 align:start position:0%
um they're turned into in its children
um<01:07:31.440><c> what</c><01:07:31.680><c> init</c><01:07:31.920><c> does</c><01:07:32.240><c> is</c><01:07:32.400><c> just</c>

01:07:32.710 --> 01:07:32.720 align:start position:0%
um what init does is just
 

01:07:32.720 --> 01:07:36.230 align:start position:0%
um what init does is just
calls<01:07:33.039><c> weight</c><01:07:33.839><c> in</c><01:07:34.000><c> a</c><01:07:34.079><c> loop</c><01:07:34.880><c> um</c><01:07:35.680><c> because</c><01:07:36.000><c> every</c>

01:07:36.230 --> 01:07:36.240 align:start position:0%
calls weight in a loop um because every
 

01:07:36.240 --> 01:07:37.750 align:start position:0%
calls weight in a loop um because every
process<01:07:36.640><c> has</c><01:07:36.799><c> to</c><01:07:36.880><c> be</c><01:07:36.960><c> waited</c><01:07:37.359><c> for</c>

01:07:37.750 --> 01:07:37.760 align:start position:0%
process has to be waited for
 

01:07:37.760 --> 01:07:39.990 align:start position:0%
process has to be waited for
so<01:07:37.920><c> that</c><01:07:38.079><c> the</c><01:07:38.799><c> its</c><01:07:39.039><c> parent</c><01:07:39.359><c> can</c><01:07:39.520><c> call</c><01:07:39.760><c> free</c>

01:07:39.990 --> 01:07:40.000 align:start position:0%
so that the its parent can call free
 

01:07:40.000 --> 01:07:41.589 align:start position:0%
so that the its parent can call free
proc<01:07:40.400><c> and</c><01:07:40.640><c> finish</c>

01:07:41.589 --> 01:07:41.599 align:start position:0%
proc and finish
 

01:07:41.599 --> 01:07:43.109 align:start position:0%
proc and finish
freeing<01:07:42.000><c> up</c><01:07:42.079><c> its</c><01:07:42.240><c> resources</c><01:07:42.799><c> and</c><01:07:42.880><c> then</c><01:07:42.960><c> when</c>

01:07:43.109 --> 01:07:43.119 align:start position:0%
freeing up its resources and then when
 

01:07:43.119 --> 01:07:45.589 align:start position:0%
freeing up its resources and then when
it's<01:07:43.280><c> completely</c><01:07:43.760><c> done</c>

01:07:45.589 --> 01:07:45.599 align:start position:0%
it's completely done
 

01:07:45.599 --> 01:07:47.190 align:start position:0%
it's completely done
it<01:07:45.760><c> sets</c><01:07:46.160><c> if</c><01:07:46.319><c> when</c><01:07:46.480><c> the</c><01:07:46.640><c> parent's</c><01:07:46.960><c> done</c>

01:07:47.190 --> 01:07:47.200 align:start position:0%
it sets if when the parent's done
 

01:07:47.200 --> 01:07:49.670 align:start position:0%
it sets if when the parent's done
freeing<01:07:47.599><c> all</c><01:07:47.760><c> the</c><01:07:48.559><c> exited</c><01:07:49.119><c> processes</c>

01:07:49.670 --> 01:07:49.680 align:start position:0%
freeing all the exited processes
 

01:07:49.680 --> 01:07:51.349 align:start position:0%
freeing all the exited processes
resources<01:07:50.240><c> it</c>

01:07:51.349 --> 01:07:51.359 align:start position:0%
resources it
 

01:07:51.359 --> 01:07:54.829 align:start position:0%
resources it
sets<01:07:51.680><c> that</c><01:07:51.920><c> child</c><01:07:52.240><c> state</c><01:07:52.640><c> unused</c><01:07:53.520><c> now</c>

01:07:54.829 --> 01:07:54.839 align:start position:0%
sets that child state unused now
 

01:07:54.839 --> 01:07:58.069 align:start position:0%
sets that child state unused now
fork<01:07:56.559><c> and</c><01:07:56.799><c> you</c><01:07:56.880><c> know</c><01:07:57.039><c> some</c><01:07:57.520><c> future</c><01:07:57.760><c> called</c><01:07:58.000><c> a</c>

01:07:58.069 --> 01:07:58.079 align:start position:0%
fork and you know some future called a
 

01:07:58.079 --> 01:07:58.470 align:start position:0%
fork and you know some future called a
fork

01:07:58.470 --> 01:07:58.480 align:start position:0%
fork
 

01:07:58.480 --> 01:08:03.670 align:start position:0%
fork
can<01:07:58.640><c> reuse</c><01:07:59.039><c> that</c><01:07:59.200><c> process</c><01:07:59.599><c> slot</c>

01:08:03.670 --> 01:08:03.680 align:start position:0%
 
 

01:08:03.680 --> 01:08:07.910 align:start position:0%
 
any<01:08:03.920><c> questions</c>

01:08:07.910 --> 01:08:07.920 align:start position:0%
 
 

01:08:07.920 --> 01:08:11.270 align:start position:0%
 
oh<01:08:08.160><c> i</c><01:08:08.319><c> have</c><01:08:08.559><c> a</c><01:08:08.720><c> question</c><01:08:09.119><c> about</c><01:08:09.680><c> sleep</c><01:08:10.880><c> um</c>

01:08:11.270 --> 01:08:11.280 align:start position:0%
oh i have a question about sleep um
 

01:08:11.280 --> 01:08:14.710 align:start position:0%
oh i have a question about sleep um
so<01:08:12.000><c> in</c><01:08:12.319><c> sleep</c><01:08:13.520><c> where</c><01:08:14.160><c> we</c>

01:08:14.710 --> 01:08:14.720 align:start position:0%
so in sleep where we
 

01:08:14.720 --> 01:08:18.709 align:start position:0%
so in sleep where we
are<01:08:15.760><c> um</c><01:08:17.600><c> yeah</c><01:08:17.839><c> so</c>

01:08:18.709 --> 01:08:18.719 align:start position:0%
are um yeah so
 

01:08:18.719 --> 01:08:22.870 align:start position:0%
are um yeah so
when<01:08:18.960><c> we</c><01:08:19.120><c> are</c><01:08:20.719><c> oh</c><01:08:20.880><c> sorry</c><01:08:21.120><c> not</c><01:08:21.359><c> sleep</c><01:08:21.759><c> um</c>

01:08:22.870 --> 01:08:22.880 align:start position:0%
when we are oh sorry not sleep um
 

01:08:22.880 --> 01:08:28.309 align:start position:0%
when we are oh sorry not sleep um
exit<01:08:23.279><c> i</c><01:08:23.359><c> won't</c><01:08:23.520><c> say</c><01:08:23.759><c> exit</c><01:08:24.080><c> yeah</c>

01:08:28.309 --> 01:08:28.319 align:start position:0%
 
 

01:08:28.319 --> 01:08:31.510 align:start position:0%
 
yeah<01:08:28.799><c> so</c><01:08:29.520><c> why</c><01:08:29.759><c> are</c><01:08:29.920><c> we</c>

01:08:31.510 --> 01:08:31.520 align:start position:0%
yeah so why are we
 

01:08:31.520 --> 01:08:34.149 align:start position:0%
yeah so why are we
why<01:08:31.679><c> are</c><01:08:31.839><c> we</c><01:08:32.640><c> grabbing</c><01:08:33.120><c> original</c><01:08:33.759><c> parent</c>

01:08:34.149 --> 01:08:34.159 align:start position:0%
why are we grabbing original parent
 

01:08:34.159 --> 01:08:35.749 align:start position:0%
why are we grabbing original parent
before

01:08:35.749 --> 01:08:35.759 align:start position:0%
before
 

01:08:35.759 --> 01:08:41.990 align:start position:0%
before
we<01:08:36.640><c> repaired</c><01:08:37.440><c> is</c><01:08:37.600><c> that</c><01:08:37.839><c> necessary</c>

01:08:41.990 --> 01:08:42.000 align:start position:0%
 
 

01:08:42.000 --> 01:08:45.269 align:start position:0%
 
this<01:08:42.480><c> is</c><01:08:43.839><c> grim</c><01:08:44.480><c> code</c>

01:08:45.269 --> 01:08:45.279 align:start position:0%
this is grim code
 

01:08:45.279 --> 01:08:48.149 align:start position:0%
this is grim code
that's<01:08:45.759><c> wrestling</c><01:08:46.400><c> with</c><01:08:46.560><c> the</c><01:08:46.799><c> possibility</c>

01:08:48.149 --> 01:08:48.159 align:start position:0%
that's wrestling with the possibility
 

01:08:48.159 --> 01:08:48.870 align:start position:0%
that's wrestling with the possibility
that

01:08:48.870 --> 01:08:48.880 align:start position:0%
that
 

01:08:48.880 --> 01:08:52.070 align:start position:0%
that
a<01:08:49.120><c> process</c><01:08:50.400><c> and</c><01:08:50.640><c> its</c><01:08:50.880><c> parent</c><01:08:51.759><c> may</c>

01:08:52.070 --> 01:08:52.080 align:start position:0%
a process and its parent may
 

01:08:52.080 --> 01:08:55.669 align:start position:0%
a process and its parent may
exit<01:08:53.120><c> at</c><01:08:53.279><c> the</c><01:08:53.440><c> same</c><01:08:53.839><c> time</c>

01:08:55.669 --> 01:08:55.679 align:start position:0%
exit at the same time
 

01:08:55.679 --> 01:08:58.709 align:start position:0%
exit at the same time
um<01:08:56.719><c> and</c><01:08:56.799><c> there's</c><01:08:57.120><c> some</c>

01:08:58.709 --> 01:08:58.719 align:start position:0%
um and there's some
 

01:08:58.719 --> 01:09:00.709 align:start position:0%
um and there's some
um<01:08:59.359><c> you</c><01:08:59.520><c> know</c><01:08:59.679><c> even</c><01:08:59.839><c> though</c><01:09:00.159><c> ordinarily</c>

01:09:00.709 --> 01:09:00.719 align:start position:0%
um you know even though ordinarily
 

01:09:00.719 --> 01:09:01.910 align:start position:0%
um you know even though ordinarily
there's<01:09:00.960><c> like</c><01:09:01.120><c> nothing</c><01:09:01.440><c> interesting</c><01:09:01.759><c> going</c>

01:09:01.910 --> 01:09:01.920 align:start position:0%
there's like nothing interesting going
 

01:09:01.920 --> 01:09:03.669 align:start position:0%
there's like nothing interesting going
on<01:09:02.080><c> process</c><01:09:02.480><c> exits</c>

01:09:03.669 --> 01:09:03.679 align:start position:0%
on process exits
 

01:09:03.679 --> 01:09:05.430 align:start position:0%
on process exits
it's<01:09:03.920><c> apparent</c><01:09:04.239><c> waits</c><01:09:04.480><c> for</c><01:09:04.719><c> it</c><01:09:05.040><c> everything's</c>

01:09:05.430 --> 01:09:05.440 align:start position:0%
it's apparent waits for it everything's
 

01:09:05.440 --> 01:09:06.709 align:start position:0%
it's apparent waits for it everything's
fine

01:09:06.709 --> 01:09:06.719 align:start position:0%
fine
 

01:09:06.719 --> 01:09:08.309 align:start position:0%
fine
but<01:09:06.960><c> it</c><01:09:07.040><c> could</c><01:09:07.279><c> be</c><01:09:07.440><c> that</c><01:09:07.600><c> a</c><01:09:07.679><c> parent</c><01:09:08.000><c> that</c><01:09:08.239><c> a</c>

01:09:08.309 --> 01:09:08.319 align:start position:0%
but it could be that a parent that a
 

01:09:08.319 --> 01:09:10.390 align:start position:0%
but it could be that a parent that a
process<01:09:08.719><c> exits</c><01:09:09.440><c> and</c><01:09:09.600><c> its</c><01:09:09.759><c> parent</c><01:09:10.000><c> process</c>

01:09:10.390 --> 01:09:10.400 align:start position:0%
process exits and its parent process
 

01:09:10.400 --> 01:09:12.229 align:start position:0%
process exits and its parent process
excess<01:09:10.719><c> at</c><01:09:10.799><c> the</c><01:09:10.880><c> same</c><01:09:11.120><c> time</c><01:09:11.359><c> and</c><01:09:11.520><c> so</c>

01:09:12.229 --> 01:09:12.239 align:start position:0%
excess at the same time and so
 

01:09:12.239 --> 01:09:14.709 align:start position:0%
excess at the same time and so
while<01:09:12.560><c> we're</c><01:09:12.880><c> trying</c><01:09:13.279><c> to</c><01:09:13.759><c> like</c><01:09:14.080><c> wake</c><01:09:14.400><c> up</c><01:09:14.560><c> our</c>

01:09:14.709 --> 01:09:14.719 align:start position:0%
while we're trying to like wake up our
 

01:09:14.719 --> 01:09:16.229 align:start position:0%
while we're trying to like wake up our
parent<01:09:14.960><c> to</c><01:09:15.120><c> tell</c><01:09:15.359><c> we've</c><01:09:15.600><c> exited</c>

01:09:16.229 --> 01:09:16.239 align:start position:0%
parent to tell we've exited
 

01:09:16.239 --> 01:09:19.269 align:start position:0%
parent to tell we've exited
that<01:09:16.480><c> parent</c><01:09:16.799><c> is</c><01:09:16.880><c> itself</c><01:09:17.359><c> exiting</c>

01:09:19.269 --> 01:09:19.279 align:start position:0%
that parent is itself exiting
 

01:09:19.279 --> 01:09:22.630 align:start position:0%
that parent is itself exiting
and<01:09:20.000><c> a</c><01:09:20.159><c> lot</c><01:09:20.319><c> of</c><01:09:20.400><c> this</c><01:09:20.560><c> code</c><01:09:20.880><c> here</c><01:09:21.679><c> um</c>

01:09:22.630 --> 01:09:22.640 align:start position:0%
and a lot of this code here um
 

01:09:22.640 --> 01:09:25.430 align:start position:0%
and a lot of this code here um
which<01:09:23.759><c> i</c><01:09:23.920><c> feel</c><01:09:24.159><c> i</c><01:09:24.480><c> kind</c><01:09:24.719><c> of</c><01:09:24.799><c> understood</c><01:09:25.199><c> a</c><01:09:25.279><c> year</c>

01:09:25.430 --> 01:09:25.440 align:start position:0%
which i feel i kind of understood a year
 

01:09:25.440 --> 01:09:28.070 align:start position:0%
which i feel i kind of understood a year
ago<01:09:25.759><c> but</c><01:09:26.000><c> don't</c><01:09:26.319><c> any</c><01:09:26.480><c> longer</c><01:09:26.799><c> understand</c>

01:09:28.070 --> 01:09:28.080 align:start position:0%
ago but don't any longer understand
 

01:09:28.080 --> 01:09:31.030 align:start position:0%
ago but don't any longer understand
is<01:09:28.159><c> about</c><01:09:28.480><c> taking</c><01:09:28.799><c> care</c><01:09:29.359><c> of</c><01:09:29.440><c> this</c><01:09:29.839><c> rare</c><01:09:30.799><c> case</c>

01:09:31.030 --> 01:09:31.040 align:start position:0%
is about taking care of this rare case
 

01:09:31.040 --> 01:09:32.829 align:start position:0%
is about taking care of this rare case
of<01:09:31.199><c> concurrent</c><01:09:31.759><c> exits</c><01:09:32.080><c> of</c><01:09:32.239><c> a</c><01:09:32.319><c> parent</c><01:09:32.640><c> and</c>

01:09:32.829 --> 01:09:32.839 align:start position:0%
of concurrent exits of a parent and
 

01:09:32.839 --> 01:09:34.709 align:start position:0%
of concurrent exits of a parent and
child

01:09:34.709 --> 01:09:34.719 align:start position:0%
child
 

01:09:34.719 --> 01:09:36.630 align:start position:0%
child
and<01:09:35.199><c> if</c><01:09:35.359><c> it</c><01:09:35.440><c> weren't</c><01:09:35.679><c> for</c><01:09:35.839><c> that</c><01:09:36.239><c> it</c><01:09:36.319><c> would</c><01:09:36.560><c> all</c>

01:09:36.630 --> 01:09:36.640 align:start position:0%
and if it weren't for that it would all
 

01:09:36.640 --> 01:09:38.309 align:start position:0%
and if it weren't for that it would all
be<01:09:36.799><c> extremely</c><01:09:37.199><c> straightforward</c><01:09:37.920><c> apparent</c>

01:09:38.309 --> 01:09:38.319 align:start position:0%
be extremely straightforward apparent
 

01:09:38.319 --> 01:09:39.990 align:start position:0%
be extremely straightforward apparent
the<01:09:38.480><c> process</c><01:09:38.799><c> would</c><01:09:38.960><c> have</c><01:09:39.120><c> a</c><01:09:39.199><c> parent</c>

01:09:39.990 --> 01:09:40.000 align:start position:0%
the process would have a parent
 

01:09:40.000 --> 01:09:42.390 align:start position:0%
the process would have a parent
and<01:09:40.400><c> it</c><01:09:40.560><c> would</c><01:09:40.719><c> just</c><01:09:41.279><c> wake</c><01:09:41.600><c> up</c><01:09:41.679><c> its</c><01:09:41.920><c> parent</c><01:09:42.239><c> at</c>

01:09:42.390 --> 01:09:42.400 align:start position:0%
and it would just wake up its parent at
 

01:09:42.400 --> 01:09:46.829 align:start position:0%
and it would just wake up its parent at
this<01:09:42.560><c> point</c>

01:09:46.829 --> 01:09:46.839 align:start position:0%
 
 

01:09:46.839 --> 01:09:48.789 align:start position:0%
 
and<01:09:47.839><c> we</c><01:09:48.000><c> wouldn't</c><01:09:48.400><c> if</c>

01:09:48.789 --> 01:09:48.799 align:start position:0%
and we wouldn't if
 

01:09:48.799 --> 01:09:50.070 align:start position:0%
and we wouldn't if
it<01:09:48.880><c> weren't</c><01:09:49.120><c> for</c><01:09:49.279><c> concurrent</c><01:09:49.679><c> exits</c><01:09:50.000><c> of</c>

01:09:50.070 --> 01:09:50.080 align:start position:0%
it weren't for concurrent exits of
 

01:09:50.080 --> 01:09:52.470 align:start position:0%
it weren't for concurrent exits of
parent<01:09:50.400><c> and</c><01:09:50.560><c> child</c><01:09:51.679><c> the</c><01:09:51.839><c> child</c><01:09:52.159><c> could</c><01:09:52.319><c> just</c>

01:09:52.470 --> 01:09:52.480 align:start position:0%
parent and child the child could just
 

01:09:52.480 --> 01:09:53.910 align:start position:0%
parent and child the child could just
wake<01:09:52.719><c> up</c><01:09:52.799><c> its</c><01:09:53.040><c> parent</c>

01:09:53.910 --> 01:09:53.920 align:start position:0%
wake up its parent
 

01:09:53.920 --> 01:09:56.630 align:start position:0%
wake up its parent
period<01:09:54.480><c> okay</c><01:09:54.800><c> i</c><01:09:54.960><c> see</c><01:09:55.199><c> thank</c><01:09:55.440><c> you</c><01:09:56.080><c> sorry</c><01:09:56.400><c> sorry</c>

01:09:56.630 --> 01:09:56.640 align:start position:0%
period okay i see thank you sorry sorry
 

01:09:56.640 --> 01:09:59.430 align:start position:0%
period okay i see thank you sorry sorry
to<01:09:56.880><c> not</c><01:09:57.040><c> really</c><01:09:57.280><c> be</c><01:09:57.440><c> explaining</c><01:09:57.840><c> here</c>

01:09:59.430 --> 01:09:59.440 align:start position:0%
to not really be explaining here
 

01:09:59.440 --> 01:10:02.390 align:start position:0%
to not really be explaining here
um<01:09:59.760><c> i</c><01:09:59.840><c> have</c><01:10:00.000><c> a</c><01:10:00.080><c> quick</c><01:10:00.320><c> question</c><01:10:01.280><c> um</c><01:10:01.679><c> so</c><01:10:02.000><c> why</c><01:10:02.239><c> are</c>

01:10:02.390 --> 01:10:02.400 align:start position:0%
um i have a quick question um so why are
 

01:10:02.400 --> 01:10:03.669 align:start position:0%
um i have a quick question um so why are
we<01:10:02.560><c> setting</c><01:10:02.960><c> the</c>

01:10:03.669 --> 01:10:03.679 align:start position:0%
we setting the
 

01:10:03.679 --> 01:10:06.310 align:start position:0%
we setting the
process<01:10:04.159><c> state</c><01:10:04.480><c> to</c><01:10:04.640><c> zombie</c><01:10:05.199><c> after</c><01:10:05.679><c> we</c><01:10:05.840><c> wake</c><01:10:06.080><c> up</c>

01:10:06.310 --> 01:10:06.320 align:start position:0%
process state to zombie after we wake up
 

01:10:06.320 --> 01:10:06.870 align:start position:0%
process state to zombie after we wake up
the

01:10:06.870 --> 01:10:06.880 align:start position:0%
the
 

01:10:06.880 --> 01:10:08.950 align:start position:0%
the
parent<01:10:07.600><c> wouldn't</c><01:10:07.840><c> we</c><01:10:08.000><c> want</c><01:10:08.159><c> to</c><01:10:08.239><c> do</c><01:10:08.400><c> that</c>

01:10:08.950 --> 01:10:08.960 align:start position:0%
parent wouldn't we want to do that
 

01:10:08.960 --> 01:10:10.229 align:start position:0%
parent wouldn't we want to do that
before<01:10:09.840><c> oh</c>

01:10:10.229 --> 01:10:10.239 align:start position:0%
before oh
 

01:10:10.239 --> 01:10:14.310 align:start position:0%
before oh
yeah<01:10:10.560><c> um</c><01:10:12.239><c> it</c><01:10:12.320><c> turns</c><01:10:12.640><c> out</c><01:10:12.800><c> because</c>

01:10:14.310 --> 01:10:14.320 align:start position:0%
yeah um it turns out because
 

01:10:14.320 --> 01:10:16.950 align:start position:0%
yeah um it turns out because
we've<01:10:14.560><c> acquired</c><01:10:15.120><c> the</c><01:10:16.080><c> the</c><01:10:16.400><c> the</c><01:10:16.560><c> exiting</c>

01:10:16.950 --> 01:10:16.960 align:start position:0%
we've acquired the the the exiting
 

01:10:16.960 --> 01:10:17.669 align:start position:0%
we've acquired the the the exiting
process<01:10:17.280><c> has</c>

01:10:17.669 --> 01:10:17.679 align:start position:0%
process has
 

01:10:17.679 --> 01:10:20.550 align:start position:0%
process has
acquired<01:10:18.239><c> its</c><01:10:18.480><c> own</c><01:10:18.640><c> process</c><01:10:19.199><c> lock</c><01:10:20.000><c> the</c><01:10:20.159><c> parent</c>

01:10:20.550 --> 01:10:20.560 align:start position:0%
acquired its own process lock the parent
 

01:10:20.560 --> 01:10:22.709 align:start position:0%
acquired its own process lock the parent
can't<01:10:20.800><c> look</c><01:10:21.040><c> at</c><01:10:21.120><c> this</c><01:10:21.360><c> process</c>

01:10:22.709 --> 01:10:22.719 align:start position:0%
can't look at this process
 

01:10:22.719 --> 01:10:25.510 align:start position:0%
can't look at this process
um<01:10:23.760><c> and</c><01:10:23.840><c> we've</c><01:10:24.080><c> acquired</c><01:10:24.400><c> the</c><01:10:24.960><c> our</c><01:10:25.120><c> own</c><01:10:25.280><c> lock</c>

01:10:25.510 --> 01:10:25.520 align:start position:0%
um and we've acquired the our own lock
 

01:10:25.520 --> 01:10:27.189 align:start position:0%
um and we've acquired the our own lock
here<01:10:25.760><c> and</c><01:10:25.840><c> then</c><01:10:25.920><c> we're</c><01:10:26.080><c> going</c><01:10:26.159><c> to</c><01:10:26.239><c> call</c><01:10:26.480><c> sched</c>

01:10:27.189 --> 01:10:27.199 align:start position:0%
here and then we're going to call sched
 

01:10:27.199 --> 01:10:30.550 align:start position:0%
here and then we're going to call sched
the<01:10:27.360><c> parent</c><01:10:28.400><c> is</c><01:10:28.960><c> parent's</c><01:10:29.440><c> weight</c><01:10:29.840><c> acquires</c>

01:10:30.550 --> 01:10:30.560 align:start position:0%
the parent is parent's weight acquires
 

01:10:30.560 --> 01:10:31.189 align:start position:0%
the parent is parent's weight acquires
pr

01:10:31.189 --> 01:10:31.199 align:start position:0%
pr
 

01:10:31.199 --> 01:10:33.669 align:start position:0%
pr
acquires<01:10:31.600><c> the</c><01:10:31.760><c> child's</c><01:10:32.239><c> lock</c><01:10:32.640><c> which</c><01:10:32.880><c> is</c><01:10:33.280><c> pr</c>

01:10:33.669 --> 01:10:33.679 align:start position:0%
acquires the child's lock which is pr
 

01:10:33.679 --> 01:10:34.790 align:start position:0%
acquires the child's lock which is pr
lock

01:10:34.790 --> 01:10:34.800 align:start position:0%
lock
 

01:10:34.800 --> 01:10:36.310 align:start position:0%
lock
and<01:10:34.960><c> so</c><01:10:35.120><c> that</c><01:10:35.199><c> means</c><01:10:35.440><c> that</c><01:10:35.600><c> between</c><01:10:36.080><c> this</c>

01:10:36.310 --> 01:10:36.320 align:start position:0%
and so that means that between this
 

01:10:36.320 --> 01:10:38.149 align:start position:0%
and so that means that between this
acquire<01:10:37.280><c> and</c>

01:10:38.149 --> 01:10:38.159 align:start position:0%
acquire and
 

01:10:38.159 --> 01:10:40.149 align:start position:0%
acquire and
when<01:10:38.719><c> after</c><01:10:39.040><c> we</c><01:10:39.199><c> call</c><01:10:39.440><c> sched</c><01:10:39.840><c> and</c><01:10:39.920><c> the</c>

01:10:40.149 --> 01:10:40.159 align:start position:0%
when after we call sched and the
 

01:10:40.159 --> 01:10:42.149 align:start position:0%
when after we call sched and the
scheduler<01:10:40.719><c> thread</c><01:10:41.040><c> releases</c>

01:10:42.149 --> 01:10:42.159 align:start position:0%
scheduler thread releases
 

01:10:42.159 --> 01:10:44.790 align:start position:0%
scheduler thread releases
this<01:10:42.400><c> pr</c><01:10:42.880><c> lock</c><01:10:43.280><c> the</c><01:10:43.520><c> parent</c><01:10:43.920><c> can't</c><01:10:44.239><c> look</c><01:10:44.640><c> at</c>

01:10:44.790 --> 01:10:44.800 align:start position:0%
this pr lock the parent can't look at
 

01:10:44.800 --> 01:10:45.590 align:start position:0%
this pr lock the parent can't look at
this<01:10:45.040><c> process</c>

01:10:45.590 --> 01:10:45.600 align:start position:0%
this process
 

01:10:45.600 --> 01:10:48.870 align:start position:0%
this process
in<01:10:45.760><c> this</c><01:10:47.040><c> block</c><01:10:47.440><c> of</c><01:10:47.600><c> code</c><01:10:48.320><c> okay</c>

01:10:48.870 --> 01:10:48.880 align:start position:0%
in this block of code okay
 

01:10:48.880 --> 01:10:51.110 align:start position:0%
in this block of code okay
and<01:10:48.960><c> so</c><01:10:49.120><c> the</c><01:10:49.280><c> order</c><01:10:49.600><c> of</c><01:10:49.679><c> this</c><01:10:49.840><c> stuff</c><01:10:50.880><c> doesn't</c>

01:10:51.110 --> 01:10:51.120 align:start position:0%
and so the order of this stuff doesn't
 

01:10:51.120 --> 01:10:52.870 align:start position:0%
and so the order of this stuff doesn't
matter<01:10:51.440><c> and</c><01:10:51.600><c> indeed</c>

01:10:52.870 --> 01:10:52.880 align:start position:0%
matter and indeed
 

01:10:52.880 --> 01:10:55.590 align:start position:0%
matter and indeed
um<01:10:53.520><c> if</c><01:10:53.679><c> we</c><01:10:53.760><c> didn't</c><01:10:54.000><c> have</c><01:10:54.080><c> the</c><01:10:54.159><c> log</c><01:10:54.480><c> up</c><01:10:55.120><c> it's</c>

01:10:55.590 --> 01:10:55.600 align:start position:0%
um if we didn't have the log up it's
 

01:10:55.600 --> 01:10:57.189 align:start position:0%
um if we didn't have the log up it's
possible<01:10:56.159><c> some</c><01:10:56.400><c> other</c><01:10:56.560><c> or</c>

01:10:57.189 --> 01:10:57.199 align:start position:0%
possible some other or
 

01:10:57.199 --> 01:11:00.790 align:start position:0%
possible some other or
well<01:10:59.120><c> in</c><01:10:59.440><c> in</c><01:10:59.600><c> most</c><01:10:59.840><c> situations</c>

01:11:00.790 --> 01:11:00.800 align:start position:0%
well in in most situations
 

01:11:00.800 --> 01:11:03.030 align:start position:0%
well in in most situations
no<01:11:01.040><c> order</c><01:11:01.360><c> would</c><01:11:01.520><c> work</c><01:11:02.320><c> if</c><01:11:02.480><c> we</c><01:11:02.640><c> didn't</c><01:11:02.800><c> hold</c>

01:11:03.030 --> 01:11:03.040 align:start position:0%
no order would work if we didn't hold
 

01:11:03.040 --> 01:11:04.550 align:start position:0%
no order would work if we didn't hold
the<01:11:03.199><c> lock</c>

01:11:04.550 --> 01:11:04.560 align:start position:0%
the lock
 

01:11:04.560 --> 01:11:07.910 align:start position:0%
the lock
um<01:11:06.480><c> anyway</c><01:11:06.800><c> yeah</c><01:11:07.040><c> because</c><01:11:07.280><c> we</c><01:11:07.360><c> hold</c><01:11:07.520><c> a</c><01:11:07.600><c> lock</c>

01:11:07.910 --> 01:11:07.920 align:start position:0%
um anyway yeah because we hold a lock
 

01:11:07.920 --> 01:11:08.630 align:start position:0%
um anyway yeah because we hold a lock
the

01:11:08.630 --> 01:11:08.640 align:start position:0%
the
 

01:11:08.640 --> 01:11:09.830 align:start position:0%
the
order<01:11:08.880><c> sort</c><01:11:09.040><c> of</c><01:11:09.120><c> doesn't</c><01:11:09.360><c> matter</c><01:11:09.600><c> because</c><01:11:09.760><c> the</c>

01:11:09.830 --> 01:11:09.840 align:start position:0%
order sort of doesn't matter because the
 

01:11:09.840 --> 01:11:18.950 align:start position:0%
order sort of doesn't matter because the
parent<01:11:10.080><c> can't</c><01:11:10.320><c> look</c><01:11:11.040><c> that</c><01:11:11.199><c> makes</c><01:11:11.440><c> sense</c>

01:11:18.950 --> 01:11:18.960 align:start position:0%
 
 

01:11:18.960 --> 01:11:22.310 align:start position:0%
 
okay<01:11:19.600><c> um</c>

01:11:22.310 --> 01:11:22.320 align:start position:0%
 
 

01:11:22.320 --> 01:11:25.430 align:start position:0%
 
okay<01:11:22.560><c> so</c><01:11:22.880><c> the</c><01:11:23.040><c> trick</c><01:11:23.360><c> here</c><01:11:23.920><c> is</c><01:11:24.719><c> or</c><01:11:24.880><c> the</c><01:11:25.120><c> trick</c><01:11:25.360><c> i</c>

01:11:25.430 --> 01:11:25.440 align:start position:0%
okay so the trick here is or the trick i
 

01:11:25.440 --> 01:11:27.189 align:start position:0%
okay so the trick here is or the trick i
wanted<01:11:25.679><c> to</c><01:11:25.760><c> emphasize</c><01:11:26.320><c> was</c><01:11:26.480><c> that</c>

01:11:27.189 --> 01:11:27.199 align:start position:0%
wanted to emphasize was that
 

01:11:27.199 --> 01:11:30.550 align:start position:0%
wanted to emphasize was that
um<01:11:29.040><c> to</c><01:11:29.280><c> a</c><01:11:29.600><c> great</c><01:11:29.920><c> extent</c>

01:11:30.550 --> 01:11:30.560 align:start position:0%
um to a great extent
 

01:11:30.560 --> 01:11:33.910 align:start position:0%
um to a great extent
actually<01:11:31.440><c> the</c><01:11:31.840><c> child</c><01:11:32.560><c> doesn't</c><01:11:33.520><c> in</c><01:11:33.600><c> the</c><01:11:33.760><c> end</c>

01:11:33.910 --> 01:11:33.920 align:start position:0%
actually the child doesn't in the end
 

01:11:33.920 --> 01:11:35.590 align:start position:0%
actually the child doesn't in the end
the<01:11:34.000><c> child</c><01:11:34.239><c> doesn't</c><01:11:34.400><c> free</c><01:11:34.640><c> all</c><01:11:34.800><c> its</c><01:11:34.960><c> resources</c>

01:11:35.590 --> 01:11:35.600 align:start position:0%
the child doesn't free all its resources
 

01:11:35.600 --> 01:11:36.630 align:start position:0%
the child doesn't free all its resources
because<01:11:35.760><c> it</c><01:11:35.920><c> can't</c><01:11:36.159><c> because</c><01:11:36.400><c> it's</c><01:11:36.480><c> still</c>

01:11:36.630 --> 01:11:36.640 align:start position:0%
because it can't because it's still
 

01:11:36.640 --> 01:11:39.189 align:start position:0%
because it can't because it's still
using<01:11:36.880><c> it</c><01:11:36.960><c> while</c><01:11:37.199><c> it</c><01:11:37.280><c> executes</c><01:11:37.760><c> and</c><01:11:37.920><c> instead</c>

01:11:39.189 --> 01:11:39.199 align:start position:0%
using it while it executes and instead
 

01:11:39.199 --> 01:11:42.229 align:start position:0%
using it while it executes and instead
some<01:11:39.520><c> other</c><01:11:39.920><c> thread</c><01:11:40.400><c> namely</c><01:11:40.719><c> the</c><01:11:40.880><c> parent</c><01:11:41.920><c> does</c>

01:11:42.229 --> 01:11:42.239 align:start position:0%
some other thread namely the parent does
 

01:11:42.239 --> 01:11:44.070 align:start position:0%
some other thread namely the parent does
the<01:11:42.400><c> freeing</c><01:11:42.800><c> of</c><01:11:42.960><c> the</c><01:11:43.040><c> delicate</c><01:11:43.520><c> resources</c>

01:11:44.070 --> 01:11:44.080 align:start position:0%
the freeing of the delicate resources
 

01:11:44.080 --> 01:11:44.630 align:start position:0%
the freeing of the delicate resources
that<01:11:44.239><c> are</c>

01:11:44.630 --> 01:11:44.640 align:start position:0%
that are
 

01:11:44.640 --> 01:11:47.669 align:start position:0%
that are
required<01:11:46.400><c> for</c><01:11:46.640><c> execution</c>

01:11:47.669 --> 01:11:47.679 align:start position:0%
required for execution
 

01:11:47.679 --> 01:11:52.070 align:start position:0%
required for execution
so<01:11:47.840><c> that's</c><01:11:48.000><c> sort</c><01:11:48.159><c> of</c><01:11:48.320><c> a</c><01:11:48.960><c> trick</c><01:11:49.280><c> to</c><01:11:49.440><c> allow</c><01:11:49.760><c> us</c><01:11:50.000><c> to</c>

01:11:52.070 --> 01:11:52.080 align:start position:0%
so that's sort of a trick to allow us to
 

01:11:52.080 --> 01:11:56.149 align:start position:0%
so that's sort of a trick to allow us to
greatly<01:11:52.480><c> simplify</c><01:11:53.440><c> exit</c>

01:11:56.149 --> 01:11:56.159 align:start position:0%
 
 

01:11:56.159 --> 01:11:59.750 align:start position:0%
 
okay<01:11:58.000><c> a</c><01:11:58.159><c> last</c><01:11:58.800><c> thing</c><01:11:59.040><c> i</c><01:11:59.120><c> want</c><01:11:59.199><c> to</c><01:11:59.280><c> look</c><01:11:59.440><c> at</c><01:11:59.520><c> is</c>

01:11:59.750 --> 01:11:59.760 align:start position:0%
okay a last thing i want to look at is
 

01:11:59.760 --> 01:12:01.270 align:start position:0%
okay a last thing i want to look at is
kill

01:12:01.270 --> 01:12:01.280 align:start position:0%
kill
 

01:12:01.280 --> 01:12:04.310 align:start position:0%
kill
so<01:12:01.520><c> the</c><01:12:01.920><c> you</c><01:12:02.080><c> know</c><01:12:02.480><c> the</c><01:12:02.640><c> kill</c><01:12:02.960><c> system</c><01:12:03.360><c> call</c>

01:12:04.310 --> 01:12:04.320 align:start position:0%
so the you know the kill system call
 

01:12:04.320 --> 01:12:06.870 align:start position:0%
so the you know the kill system call
one<01:12:04.560><c> process</c><01:12:05.199><c> in</c><01:12:05.360><c> unix</c><01:12:05.840><c> can</c><01:12:06.400><c> call</c><01:12:06.560><c> that</c><01:12:06.719><c> make</c>

01:12:06.870 --> 01:12:06.880 align:start position:0%
one process in unix can call that make
 

01:12:06.880 --> 01:12:08.470 align:start position:0%
one process in unix can call that make
the<01:12:07.120><c> kill</c><01:12:07.360><c> system</c><01:12:07.679><c> call</c><01:12:07.840><c> and</c>

01:12:08.470 --> 01:12:08.480 align:start position:0%
the kill system call and
 

01:12:08.480 --> 01:12:10.310 align:start position:0%
the kill system call and
pass<01:12:08.719><c> it</c><01:12:08.800><c> the</c><01:12:08.960><c> process</c><01:12:09.360><c> id</c><01:12:09.679><c> of</c><01:12:09.760><c> a</c><01:12:09.920><c> different</c>

01:12:10.310 --> 01:12:10.320 align:start position:0%
pass it the process id of a different
 

01:12:10.320 --> 01:12:12.709 align:start position:0%
pass it the process id of a different
process<01:12:11.280><c> and</c><01:12:11.520><c> the</c><01:12:11.679><c> goal</c><01:12:12.000><c> is</c><01:12:12.239><c> that</c>

01:12:12.709 --> 01:12:12.719 align:start position:0%
process and the goal is that
 

01:12:12.719 --> 01:12:14.550 align:start position:0%
process and the goal is that
that<01:12:12.880><c> should</c><01:12:13.040><c> cause</c><01:12:13.280><c> that</c><01:12:13.600><c> other</c><01:12:14.000><c> process</c><01:12:14.480><c> the</c>

01:12:14.550 --> 01:12:14.560 align:start position:0%
that should cause that other process the
 

01:12:14.560 --> 01:12:16.229 align:start position:0%
that should cause that other process the
target<01:12:14.960><c> process</c><01:12:15.600><c> to</c><01:12:15.840><c> stop</c>

01:12:16.229 --> 01:12:16.239 align:start position:0%
target process to stop
 

01:12:16.239 --> 01:12:19.990 align:start position:0%
target process to stop
executing<01:12:18.159><c> and</c><01:12:18.960><c> if</c><01:12:19.120><c> we're</c><01:12:19.280><c> not</c><01:12:19.440><c> careful</c><01:12:19.920><c> you</c>

01:12:19.990 --> 01:12:20.000 align:start position:0%
executing and if we're not careful you
 

01:12:20.000 --> 01:12:20.630 align:start position:0%
executing and if we're not careful you
know<01:12:20.159><c> this</c>

01:12:20.630 --> 01:12:20.640 align:start position:0%
know this
 

01:12:20.640 --> 01:12:22.390 align:start position:0%
know this
risks<01:12:21.280><c> especially</c><01:12:21.600><c> if</c><01:12:21.679><c> that</c><01:12:21.840><c> other</c><01:12:22.080><c> process</c>

01:12:22.390 --> 01:12:22.400 align:start position:0%
risks especially if that other process
 

01:12:22.400 --> 01:12:24.550 align:start position:0%
risks especially if that other process
is<01:12:22.560><c> executing</c><01:12:23.040><c> in</c><01:12:23.120><c> the</c><01:12:23.199><c> kernel</c>

01:12:24.550 --> 01:12:24.560 align:start position:0%
is executing in the kernel
 

01:12:24.560 --> 01:12:27.590 align:start position:0%
is executing in the kernel
um<01:12:26.320><c> this</c><01:12:26.560><c> risk</c><01:12:26.800><c> this</c><01:12:26.960><c> problem</c><01:12:27.199><c> i</c><01:12:27.280><c> mentioned</c><01:12:27.520><c> a</c>

01:12:27.590 --> 01:12:27.600 align:start position:0%
um this risk this problem i mentioned a
 

01:12:27.600 --> 01:12:28.950 align:start position:0%
um this risk this problem i mentioned a
few<01:12:27.760><c> minutes</c><01:12:28.080><c> ago</c><01:12:28.320><c> where</c>

01:12:28.950 --> 01:12:28.960 align:start position:0%
few minutes ago where
 

01:12:28.960 --> 01:12:31.110 align:start position:0%
few minutes ago where
gosh<01:12:29.360><c> that</c><01:12:30.000><c> you</c><01:12:30.159><c> know</c><01:12:30.239><c> the</c><01:12:30.400><c> kernel</c><01:12:30.719><c> thread</c><01:12:31.040><c> of</c>

01:12:31.110 --> 01:12:31.120 align:start position:0%
gosh that you know the kernel thread of
 

01:12:31.120 --> 01:12:32.630 align:start position:0%
gosh that you know the kernel thread of
the<01:12:31.199><c> process</c><01:12:31.520><c> we're</c><01:12:31.679><c> trying</c><01:12:31.840><c> to</c><01:12:31.920><c> kill</c><01:12:32.159><c> might</c>

01:12:32.630 --> 01:12:32.640 align:start position:0%
the process we're trying to kill might
 

01:12:32.640 --> 01:12:33.830 align:start position:0%
the process we're trying to kill might
might<01:12:32.800><c> be</c><01:12:32.960><c> in</c><01:12:33.040><c> the</c><01:12:33.120><c> middle</c><01:12:33.280><c> of</c><01:12:33.360><c> updating</c>

01:12:33.830 --> 01:12:33.840 align:start position:0%
might be in the middle of updating
 

01:12:33.840 --> 01:12:35.270 align:start position:0%
might be in the middle of updating
something<01:12:34.239><c> you</c><01:12:34.320><c> know</c><01:12:34.560><c> updating</c><01:12:34.880><c> the</c><01:12:34.960><c> file</c>

01:12:35.270 --> 01:12:35.280 align:start position:0%
something you know updating the file
 

01:12:35.280 --> 01:12:37.270 align:start position:0%
something you know updating the file
system<01:12:35.600><c> creating</c><01:12:36.000><c> a</c><01:12:36.080><c> file</c><01:12:36.480><c> for</c><01:12:36.640><c> example</c>

01:12:37.270 --> 01:12:37.280 align:start position:0%
system creating a file for example
 

01:12:37.280 --> 01:12:39.430 align:start position:0%
system creating a file for example
and<01:12:37.360><c> we</c><01:12:37.520><c> can't</c><01:12:37.760><c> just</c><01:12:37.920><c> like</c><01:12:38.159><c> kill</c><01:12:38.400><c> it</c><01:12:38.560><c> dead</c><01:12:39.280><c> on</c>

01:12:39.430 --> 01:12:39.440 align:start position:0%
and we can't just like kill it dead on
 

01:12:39.440 --> 01:12:40.709 align:start position:0%
and we can't just like kill it dead on
the<01:12:39.600><c> spot</c><01:12:40.159><c> because</c>

01:12:40.709 --> 01:12:40.719 align:start position:0%
the spot because
 

01:12:40.719 --> 01:12:43.030 align:start position:0%
the spot because
that<01:12:40.960><c> would</c><01:12:41.120><c> leave</c><01:12:41.520><c> some</c><01:12:41.920><c> delicate</c>

01:12:43.030 --> 01:12:43.040 align:start position:0%
that would leave some delicate
 

01:12:43.040 --> 01:12:44.550 align:start position:0%
that would leave some delicate
multi-step<01:12:43.600><c> operation</c><01:12:44.159><c> only</c>

01:12:44.550 --> 01:12:44.560 align:start position:0%
multi-step operation only
 

01:12:44.560 --> 01:12:48.709 align:start position:0%
multi-step operation only
halfway<01:12:44.960><c> completed</c><01:12:46.400><c> so</c><01:12:46.640><c> we</c><01:12:46.800><c> know</c><01:12:47.040><c> that</c><01:12:47.280><c> kill</c>

01:12:48.709 --> 01:12:48.719 align:start position:0%
halfway completed so we know that kill
 

01:12:48.719 --> 01:12:50.950 align:start position:0%
halfway completed so we know that kill
can't<01:12:49.120><c> really</c><01:12:49.520><c> just</c><01:12:49.840><c> stop</c><01:12:50.320><c> the</c><01:12:50.480><c> target</c>

01:12:50.950 --> 01:12:50.960 align:start position:0%
can't really just stop the target
 

01:12:50.960 --> 01:12:53.110 align:start position:0%
can't really just stop the target
process

01:12:53.110 --> 01:12:53.120 align:start position:0%
process
 

01:12:53.120 --> 01:12:56.310 align:start position:0%
process
and<01:12:53.360><c> indeed</c><01:12:54.159><c> on</c><01:12:54.400><c> xv6</c><01:12:55.120><c> and</c><01:12:55.520><c> of</c><01:12:55.600><c> the</c><01:12:55.760><c> unix's</c><01:12:56.239><c> as</c>

01:12:56.310 --> 01:12:56.320 align:start position:0%
and indeed on xv6 and of the unix's as
 

01:12:56.320 --> 01:12:57.270 align:start position:0%
and indeed on xv6 and of the unix's as
well

01:12:57.270 --> 01:12:57.280 align:start position:0%
well
 

01:12:57.280 --> 01:13:01.110 align:start position:0%
well
kill<01:12:57.520><c> does</c><01:12:58.560><c> almost</c><01:12:59.040><c> absolutely</c><01:12:59.520><c> nothing</c>

01:13:01.110 --> 01:13:01.120 align:start position:0%
kill does almost absolutely nothing
 

01:13:01.120 --> 01:13:03.030 align:start position:0%
kill does almost absolutely nothing
it<01:13:01.280><c> scans</c><01:13:01.679><c> the</c><01:13:01.840><c> process</c><01:13:02.159><c> table</c><01:13:02.560><c> looking</c><01:13:02.800><c> for</c>

01:13:03.030 --> 01:13:03.040 align:start position:0%
it scans the process table looking for
 

01:13:03.040 --> 01:13:04.870 align:start position:0%
it scans the process table looking for
the<01:13:03.520><c> target</c><01:13:03.920><c> process</c><01:13:04.320><c> id</c>

01:13:04.870 --> 01:13:04.880 align:start position:0%
the target process id
 

01:13:04.880 --> 01:13:08.630 align:start position:0%
the target process id
and<01:13:05.040><c> just</c><01:13:05.360><c> sets</c><01:13:05.760><c> this</c><01:13:06.080><c> flag</c>

01:13:08.630 --> 01:13:08.640 align:start position:0%
and just sets this flag
 

01:13:08.640 --> 01:13:12.149 align:start position:0%
and just sets this flag
in<01:13:08.800><c> that</c><01:13:09.040><c> processes</c><01:13:10.000><c> process</c><01:13:10.400><c> structure</c>

01:13:12.149 --> 01:13:12.159 align:start position:0%
in that processes process structure
 

01:13:12.159 --> 01:13:15.510 align:start position:0%
in that processes process structure
and<01:13:12.320><c> also</c><01:13:12.560><c> if</c><01:13:12.719><c> it</c><01:13:12.800><c> was</c><01:13:12.960><c> sleeping</c><01:13:14.960><c> causes</c><01:13:15.280><c> it</c><01:13:15.440><c> to</c>

01:13:15.510 --> 01:13:15.520 align:start position:0%
and also if it was sleeping causes it to
 

01:13:15.520 --> 01:13:16.950 align:start position:0%
and also if it was sleeping causes it to
be<01:13:15.679><c> runnable</c><01:13:16.080><c> so</c><01:13:16.239><c> it'll</c><01:13:16.400><c> wake</c><01:13:16.640><c> up</c><01:13:16.719><c> from</c><01:13:16.880><c> the</c>

01:13:16.950 --> 01:13:16.960 align:start position:0%
be runnable so it'll wake up from the
 

01:13:16.960 --> 01:13:19.350 align:start position:0%
be runnable so it'll wake up from the
sleep<01:13:17.360><c> but</c><01:13:17.600><c> all</c><01:13:17.840><c> it</c><01:13:17.920><c> does</c><01:13:18.080><c> is</c><01:13:18.239><c> set</c><01:13:18.400><c> this</c><01:13:18.640><c> flag</c>

01:13:19.350 --> 01:13:19.360 align:start position:0%
sleep but all it does is set this flag
 

01:13:19.360 --> 01:13:21.669 align:start position:0%
sleep but all it does is set this flag
doesn't<01:13:19.679><c> stop</c><01:13:20.000><c> the</c><01:13:20.080><c> other</c><01:13:20.239><c> process</c><01:13:20.560><c> from</c>

01:13:21.669 --> 01:13:21.679 align:start position:0%
doesn't stop the other process from
 

01:13:21.679 --> 01:13:22.630 align:start position:0%
doesn't stop the other process from
executing

01:13:22.630 --> 01:13:22.640 align:start position:0%
executing
 

01:13:22.640 --> 01:13:25.990 align:start position:0%
executing
or<01:13:22.800><c> anything</c><01:13:23.199><c> like</c><01:13:23.440><c> it</c>

01:13:25.990 --> 01:13:26.000 align:start position:0%
 
 

01:13:26.000 --> 01:13:32.550 align:start position:0%
 
so<01:13:26.480><c> kill</c><01:13:26.800><c> itself</c><01:13:27.280><c> is</c><01:13:28.960><c> very</c><01:13:29.719><c> gentle</c><01:13:30.840><c> um</c>

01:13:32.550 --> 01:13:32.560 align:start position:0%
so kill itself is very gentle um
 

01:13:32.560 --> 01:13:35.030 align:start position:0%
so kill itself is very gentle um
and<01:13:32.719><c> the</c><01:13:32.880><c> game</c><01:13:33.120><c> is</c><01:13:33.280><c> that</c><01:13:33.600><c> the</c><01:13:33.840><c> target</c><01:13:34.239><c> process</c>

01:13:35.030 --> 01:13:35.040 align:start position:0%
and the game is that the target process
 

01:13:35.040 --> 01:13:35.990 align:start position:0%
and the game is that the target process
at

01:13:35.990 --> 01:13:36.000 align:start position:0%
at
 

01:13:36.000 --> 01:13:38.229 align:start position:0%
at
points<01:13:36.480><c> in</c><01:13:36.560><c> the</c><01:13:36.719><c> kernel</c><01:13:37.199><c> code</c><01:13:37.679><c> where</c><01:13:38.000><c> it</c><01:13:38.080><c> would</c>

01:13:38.229 --> 01:13:38.239 align:start position:0%
points in the kernel code where it would
 

01:13:38.239 --> 01:13:41.110 align:start position:0%
points in the kernel code where it would
be<01:13:38.640><c> safe</c><01:13:38.960><c> to</c><01:13:39.199><c> stop</c><01:13:39.520><c> executing</c>

01:13:41.110 --> 01:13:41.120 align:start position:0%
be safe to stop executing
 

01:13:41.120 --> 01:13:44.390 align:start position:0%
be safe to stop executing
the<01:13:41.600><c> other</c><01:13:41.840><c> process</c><01:13:42.880><c> checks</c><01:13:43.199><c> its</c><01:13:43.600><c> own</c><01:13:44.000><c> killed</c>

01:13:44.390 --> 01:13:44.400 align:start position:0%
the other process checks its own killed
 

01:13:44.400 --> 01:13:45.030 align:start position:0%
the other process checks its own killed
flag

01:13:45.030 --> 01:13:45.040 align:start position:0%
flag
 

01:13:45.040 --> 01:13:47.510 align:start position:0%
flag
and<01:13:45.199><c> if</c><01:13:45.360><c> it's</c><01:13:45.600><c> set</c><01:13:46.239><c> the</c><01:13:46.400><c> other</c><01:13:46.640><c> process</c><01:13:47.360><c> sort</c>

01:13:47.510 --> 01:13:47.520 align:start position:0%
and if it's set the other process sort
 

01:13:47.520 --> 01:13:49.110 align:start position:0%
and if it's set the other process sort
of<01:13:47.760><c> voluntarily</c>

01:13:49.110 --> 01:13:49.120 align:start position:0%
of voluntarily
 

01:13:49.120 --> 01:13:52.470 align:start position:0%
of voluntarily
exits<01:13:49.920><c> you</c><01:13:50.000><c> know</c><01:13:50.239><c> calls</c><01:13:50.560><c> this</c><01:13:50.800><c> exit</c><01:13:51.199><c> function</c>

01:13:52.470 --> 01:13:52.480 align:start position:0%
exits you know calls this exit function
 

01:13:52.480 --> 01:13:55.030 align:start position:0%
exits you know calls this exit function
and<01:13:52.640><c> you</c><01:13:52.719><c> can</c><01:13:52.880><c> see</c><01:13:53.040><c> some</c><01:13:53.199><c> of</c><01:13:53.360><c> those</c><01:13:53.600><c> points</c><01:13:54.800><c> in</c>

01:13:55.030 --> 01:13:55.040 align:start position:0%
and you can see some of those points in
 

01:13:55.040 --> 01:13:56.550 align:start position:0%
and you can see some of those points in
trap.c

01:13:56.550 --> 01:13:56.560 align:start position:0%
trap.c
 

01:13:56.560 --> 01:13:58.830 align:start position:0%
trap.c
in<01:13:56.719><c> fact</c><01:13:56.960><c> you</c><01:13:57.040><c> can</c><01:13:57.120><c> see</c><01:13:57.280><c> all</c><01:13:57.440><c> the</c><01:13:57.520><c> points</c>

01:13:58.830 --> 01:13:58.840 align:start position:0%
in fact you can see all the points
 

01:13:58.840 --> 01:14:01.430 align:start position:0%
in fact you can see all the points
trap.c

01:14:01.430 --> 01:14:01.440 align:start position:0%
trap.c
 

01:14:01.440 --> 01:14:03.510 align:start position:0%
trap.c
so<01:14:01.600><c> if</c><01:14:01.679><c> we're</c><01:14:01.920><c> in</c><01:14:02.000><c> user</c><01:14:02.400><c> trap</c><01:14:02.880><c> in</c><01:14:03.040><c> a</c><01:14:03.120><c> system</c>

01:14:03.510 --> 01:14:03.520 align:start position:0%
so if we're in user trap in a system
 

01:14:03.520 --> 01:14:04.630 align:start position:0%
so if we're in user trap in a system
call

01:14:04.630 --> 01:14:04.640 align:start position:0%
call
 

01:14:04.640 --> 01:14:06.229 align:start position:0%
call
before<01:14:05.040><c> actually</c><01:14:05.360><c> executing</c><01:14:05.840><c> the</c><01:14:06.000><c> system</c>

01:14:06.229 --> 01:14:06.239 align:start position:0%
before actually executing the system
 

01:14:06.239 --> 01:14:07.910 align:start position:0%
before actually executing the system
call<01:14:06.560><c> if</c><01:14:06.719><c> the</c><01:14:06.880><c> process</c><01:14:07.280><c> has</c><01:14:07.440><c> already</c><01:14:07.679><c> been</c>

01:14:07.910 --> 01:14:07.920 align:start position:0%
call if the process has already been
 

01:14:07.920 --> 01:14:08.790 align:start position:0%
call if the process has already been
killed

01:14:08.790 --> 01:14:08.800 align:start position:0%
killed
 

01:14:08.800 --> 01:14:11.189 align:start position:0%
killed
or<01:14:09.199><c> if</c><01:14:09.440><c> kill</c><01:14:09.760><c> has</c><01:14:10.000><c> been</c><01:14:10.560><c> called</c><01:14:10.880><c> for</c><01:14:11.040><c> this</c>

01:14:11.189 --> 01:14:11.199 align:start position:0%
or if kill has been called for this
 

01:14:11.199 --> 01:14:12.070 align:start position:0%
or if kill has been called for this
process

01:14:12.070 --> 01:14:12.080 align:start position:0%
process
 

01:14:12.080 --> 01:14:13.910 align:start position:0%
process
then<01:14:12.239><c> the</c><01:14:12.320><c> process</c><01:14:12.800><c> calls</c><01:14:13.120><c> exit</c><01:14:13.600><c> and</c><01:14:13.679><c> goes</c>

01:14:13.910 --> 01:14:13.920 align:start position:0%
then the process calls exit and goes
 

01:14:13.920 --> 01:14:15.110 align:start position:0%
then the process calls exit and goes
away

01:14:15.110 --> 01:14:15.120 align:start position:0%
away
 

01:14:15.120 --> 01:14:16.790 align:start position:0%
away
and<01:14:15.360><c> this</c><01:14:15.520><c> is</c><01:14:15.600><c> a</c><01:14:15.760><c> point</c><01:14:16.000><c> in</c><01:14:16.159><c> the</c><01:14:16.400><c> kernel</c><01:14:16.719><c> where</c>

01:14:16.790 --> 01:14:16.800 align:start position:0%
and this is a point in the kernel where
 

01:14:16.800 --> 01:14:18.390 align:start position:0%
and this is a point in the kernel where
it's<01:14:16.960><c> not</c><01:14:17.120><c> holding</c><01:14:17.440><c> any</c><01:14:17.600><c> locks</c><01:14:17.920><c> it's</c><01:14:18.080><c> not</c><01:14:18.239><c> in</c>

01:14:18.390 --> 01:14:18.400 align:start position:0%
it's not holding any locks it's not in
 

01:14:18.400 --> 01:14:20.390 align:start position:0%
it's not holding any locks it's not in
the<01:14:18.480><c> middle</c><01:14:18.719><c> of</c><01:14:18.800><c> doing</c><01:14:19.040><c> anything</c>

01:14:20.390 --> 01:14:20.400 align:start position:0%
the middle of doing anything
 

01:14:20.400 --> 01:14:21.830 align:start position:0%
the middle of doing anything
and<01:14:20.560><c> so</c><01:14:20.719><c> it's</c><01:14:20.880><c> completely</c><01:14:21.280><c> safe</c><01:14:21.600><c> for</c><01:14:21.760><c> the</c>

01:14:21.830 --> 01:14:21.840 align:start position:0%
and so it's completely safe for the
 

01:14:21.840 --> 01:14:23.590 align:start position:0%
and so it's completely safe for the
process<01:14:22.239><c> to</c><01:14:22.400><c> just</c>

01:14:23.590 --> 01:14:23.600 align:start position:0%
process to just
 

01:14:23.600 --> 01:14:27.189 align:start position:0%
process to just
quit<01:14:24.239><c> and</c><01:14:24.400><c> call</c><01:14:24.719><c> exit</c>

01:14:27.189 --> 01:14:27.199 align:start position:0%
 
 

01:14:27.199 --> 01:14:30.149 align:start position:0%
 
and<01:14:27.360><c> there's</c><01:14:27.600><c> a</c><01:14:27.760><c> similar</c><01:14:28.239><c> check</c><01:14:29.440><c> at</c><01:14:29.600><c> the</c><01:14:29.760><c> end</c>

01:14:30.149 --> 01:14:30.159 align:start position:0%
and there's a similar check at the end
 

01:14:30.159 --> 01:14:33.830 align:start position:0%
and there's a similar check at the end
of<01:14:30.480><c> user</c><01:14:30.880><c> trap</c>

01:14:33.830 --> 01:14:33.840 align:start position:0%
 
 

01:14:33.840 --> 01:14:37.350 align:start position:0%
 
so<01:14:34.159><c> after</c><01:14:34.400><c> a</c><01:14:34.560><c> system</c><01:14:34.960><c> call</c>

01:14:37.350 --> 01:14:37.360 align:start position:0%
 
 

01:14:37.360 --> 01:14:38.870 align:start position:0%
 
the<01:14:37.520><c> process</c><01:14:37.920><c> also</c><01:14:38.159><c> checks</c><01:14:38.400><c> if</c><01:14:38.480><c> it's</c><01:14:38.640><c> being</c>

01:14:38.870 --> 01:14:38.880 align:start position:0%
the process also checks if it's being
 

01:14:38.880 --> 01:14:43.189 align:start position:0%
the process also checks if it's being
killed<01:14:39.360><c> and</c><01:14:39.600><c> indeed</c><01:14:40.159><c> this</c><01:14:40.480><c> code</c><01:14:40.840><c> here</c><01:14:41.760><c> um</c>

01:14:43.189 --> 01:14:43.199 align:start position:0%
killed and indeed this code here um
 

01:14:43.199 --> 01:14:45.430 align:start position:0%
killed and indeed this code here um
executes<01:14:44.320><c> even</c><01:14:44.560><c> if</c><01:14:44.640><c> there's</c><01:14:44.800><c> an</c><01:14:45.120><c> if</c><01:14:45.360><c> the</c>

01:14:45.430 --> 01:14:45.440 align:start position:0%
executes even if there's an if the
 

01:14:45.440 --> 01:14:46.229 align:start position:0%
executes even if there's an if the
process<01:14:45.840><c> is</c>

01:14:46.229 --> 01:14:46.239 align:start position:0%
process is
 

01:14:46.239 --> 01:14:47.830 align:start position:0%
process is
interrupted<01:14:46.719><c> by</c><01:14:46.880><c> an</c><01:14:47.040><c> interrupt</c><01:14:47.520><c> so</c><01:14:47.760><c> for</c>

01:14:47.830 --> 01:14:47.840 align:start position:0%
interrupted by an interrupt so for
 

01:14:47.840 --> 01:14:50.310 align:start position:0%
interrupted by an interrupt so for
example<01:14:48.159><c> if</c><01:14:48.320><c> a</c><01:14:48.400><c> timer</c><01:14:48.800><c> interrupt</c><01:14:49.199><c> goes</c><01:14:49.440><c> off</c>

01:14:50.310 --> 01:14:50.320 align:start position:0%
example if a timer interrupt goes off
 

01:14:50.320 --> 01:14:53.110 align:start position:0%
example if a timer interrupt goes off
then<01:14:51.199><c> um</c><01:14:51.520><c> this</c><01:14:51.760><c> code</c><01:14:52.000><c> will</c><01:14:52.159><c> execute</c><01:14:52.719><c> and</c><01:14:52.880><c> we'll</c>

01:14:53.110 --> 01:14:53.120 align:start position:0%
then um this code will execute and we'll
 

01:14:53.120 --> 01:14:54.310 align:start position:0%
then um this code will execute and we'll
see<01:14:53.360><c> that</c><01:14:53.520><c> the</c><01:14:53.679><c> process</c>

01:14:54.310 --> 01:14:54.320 align:start position:0%
see that the process
 

01:14:54.320 --> 01:14:55.830 align:start position:0%
see that the process
has<01:14:54.480><c> been</c><01:14:54.640><c> killed</c><01:14:55.040><c> and</c><01:14:55.120><c> then</c><01:14:55.360><c> the</c><01:14:55.440><c> process</c>

01:14:55.830 --> 01:14:55.840 align:start position:0%
has been killed and then the process
 

01:14:55.840 --> 01:14:59.270 align:start position:0%
has been killed and then the process
will<01:14:56.080><c> exit</c>

01:14:59.270 --> 01:14:59.280 align:start position:0%
 
 

01:14:59.280 --> 01:15:01.669 align:start position:0%
 
and<01:14:59.440><c> so</c><01:15:00.159><c> what</c><01:15:00.320><c> that</c><01:15:00.480><c> means</c><01:15:00.800><c> is</c><01:15:00.960><c> that</c><01:15:01.120><c> the</c><01:15:01.520><c> sort</c>

01:15:01.669 --> 01:15:01.679 align:start position:0%
and so what that means is that the sort
 

01:15:01.679 --> 01:15:03.510 align:start position:0%
and so what that means is that the sort
of<01:15:01.840><c> what</c><01:15:02.080><c> kill</c><01:15:02.400><c> means</c>

01:15:03.510 --> 01:15:03.520 align:start position:0%
of what kill means
 

01:15:03.520 --> 01:15:05.669 align:start position:0%
of what kill means
kill<01:15:04.080><c> the</c><01:15:04.320><c> meaning</c><01:15:04.719><c> of</c><01:15:04.880><c> kill</c><01:15:05.120><c> or</c><01:15:05.280><c> the</c><01:15:05.360><c> effect</c>

01:15:05.669 --> 01:15:05.679 align:start position:0%
kill the meaning of kill or the effect
 

01:15:05.679 --> 01:15:07.350 align:start position:0%
kill the meaning of kill or the effect
of<01:15:05.760><c> kill</c><01:15:06.080><c> is</c><01:15:06.239><c> not</c><01:15:06.480><c> exactly</c>

01:15:07.350 --> 01:15:07.360 align:start position:0%
of kill is not exactly
 

01:15:07.360 --> 01:15:09.830 align:start position:0%
of kill is not exactly
stop<01:15:07.679><c> the</c><01:15:07.840><c> other</c><01:15:08.000><c> process</c><01:15:08.400><c> right</c><01:15:08.640><c> now</c><01:15:09.600><c> it's</c>

01:15:09.830 --> 01:15:09.840 align:start position:0%
stop the other process right now it's
 

01:15:09.840 --> 01:15:11.110 align:start position:0%
stop the other process right now it's
much<01:15:10.080><c> more</c><01:15:10.320><c> like</c>

01:15:11.110 --> 01:15:11.120 align:start position:0%
much more like
 

01:15:11.120 --> 01:15:13.750 align:start position:0%
much more like
well<01:15:12.080><c> you</c><01:15:12.239><c> know</c><01:15:12.560><c> if</c><01:15:12.719><c> the</c><01:15:12.880><c> proc</c><01:15:13.199><c> other</c><01:15:13.360><c> process</c>

01:15:13.750 --> 01:15:13.760 align:start position:0%
well you know if the proc other process
 

01:15:13.760 --> 01:15:14.870 align:start position:0%
well you know if the proc other process
is<01:15:13.920><c> in</c><01:15:14.000><c> user</c><01:15:14.320><c> space</c>

01:15:14.870 --> 01:15:14.880 align:start position:0%
is in user space
 

01:15:14.880 --> 01:15:16.709 align:start position:0%
is in user space
then<01:15:15.360><c> the</c><01:15:15.520><c> next</c><01:15:15.679><c> time</c><01:15:15.840><c> it</c><01:15:16.000><c> makes</c><01:15:16.159><c> a</c><01:15:16.320><c> system</c>

01:15:16.709 --> 01:15:16.719 align:start position:0%
then the next time it makes a system
 

01:15:16.719 --> 01:15:18.390 align:start position:0%
then the next time it makes a system
call

01:15:18.390 --> 01:15:18.400 align:start position:0%
call
 

01:15:18.400 --> 01:15:21.510 align:start position:0%
call
it<01:15:18.560><c> will</c><01:15:18.719><c> exit</c><01:15:20.239><c> or</c><01:15:20.480><c> the</c><01:15:20.640><c> next</c><01:15:20.800><c> time</c><01:15:21.040><c> a</c><01:15:21.120><c> timer</c>

01:15:21.510 --> 01:15:21.520 align:start position:0%
it will exit or the next time a timer
 

01:15:21.520 --> 01:15:22.550 align:start position:0%
it will exit or the next time a timer
interrupt<01:15:21.920><c> goes</c><01:15:22.239><c> off</c>

01:15:22.550 --> 01:15:22.560 align:start position:0%
interrupt goes off
 

01:15:22.560 --> 01:15:25.510 align:start position:0%
interrupt goes off
while<01:15:22.960><c> executing</c><01:15:23.440><c> user</c><01:15:23.840><c> code</c><01:15:24.239><c> in</c><01:15:24.400><c> the</c><01:15:25.120><c> target</c>

01:15:25.510 --> 01:15:25.520 align:start position:0%
while executing user code in the target
 

01:15:25.520 --> 01:15:26.229 align:start position:0%
while executing user code in the target
process

01:15:26.229 --> 01:15:26.239 align:start position:0%
process
 

01:15:26.239 --> 01:15:27.990 align:start position:0%
process
if<01:15:26.400><c> it's</c><01:15:26.560><c> interrupted</c><01:15:27.040><c> by</c><01:15:27.199><c> a</c><01:15:27.280><c> timer</c><01:15:27.679><c> interrupt</c>

01:15:27.990 --> 01:15:28.000 align:start position:0%
if it's interrupted by a timer interrupt
 

01:15:28.000 --> 01:15:29.270 align:start position:0%
if it's interrupted by a timer interrupt
or<01:15:28.080><c> some</c><01:15:28.239><c> other</c><01:15:28.480><c> interrupt</c>

01:15:29.270 --> 01:15:29.280 align:start position:0%
or some other interrupt
 

01:15:29.280 --> 01:15:31.510 align:start position:0%
or some other interrupt
then<01:15:29.440><c> it</c><01:15:29.520><c> will</c><01:15:29.760><c> also</c><01:15:30.480><c> exit</c><01:15:30.800><c> so</c><01:15:30.960><c> there</c><01:15:31.199><c> might</c><01:15:31.360><c> be</c>

01:15:31.510 --> 01:15:31.520 align:start position:0%
then it will also exit so there might be
 

01:15:31.520 --> 01:15:33.430 align:start position:0%
then it will also exit so there might be
a<01:15:31.760><c> significant</c><01:15:32.239><c> delay</c><01:15:32.640><c> between</c>

01:15:33.430 --> 01:15:33.440 align:start position:0%
a significant delay between
 

01:15:33.440 --> 01:15:36.390 align:start position:0%
a significant delay between
when<01:15:33.679><c> one</c><01:15:33.920><c> process</c><01:15:34.320><c> calls</c><01:15:34.640><c> kill</c><01:15:36.000><c> and</c><01:15:36.080><c> when</c><01:15:36.239><c> the</c>

01:15:36.390 --> 01:15:36.400 align:start position:0%
when one process calls kill and when the
 

01:15:36.400 --> 01:15:37.110 align:start position:0%
when one process calls kill and when the
other<01:15:36.640><c> process</c>

01:15:37.110 --> 01:15:37.120 align:start position:0%
other process
 

01:15:37.120 --> 01:15:40.310 align:start position:0%
other process
actually<01:15:37.679><c> exits</c><01:15:39.440><c> and</c><01:15:39.679><c> that's</c><01:15:39.920><c> just</c><01:15:40.080><c> the</c><01:15:40.159><c> way</c>

01:15:40.310 --> 01:15:40.320 align:start position:0%
actually exits and that's just the way
 

01:15:40.320 --> 01:15:41.910 align:start position:0%
actually exits and that's just the way
it<01:15:40.480><c> is</c>

01:15:41.910 --> 01:15:41.920 align:start position:0%
it is
 

01:15:41.920 --> 01:15:45.510 align:start position:0%
it is
um<01:15:44.320><c> there</c><01:15:44.480><c> is</c><01:15:44.560><c> a</c><01:15:44.719><c> sort</c><01:15:44.880><c> of</c><01:15:44.960><c> intermediate</c>

01:15:45.510 --> 01:15:45.520 align:start position:0%
um there is a sort of intermediate
 

01:15:45.520 --> 01:15:46.630 align:start position:0%
um there is a sort of intermediate
question<01:15:45.920><c> though</c><01:15:46.239><c> of</c>

01:15:46.630 --> 01:15:46.640 align:start position:0%
question though of
 

01:15:46.640 --> 01:15:48.950 align:start position:0%
question though of
if<01:15:46.719><c> the</c><01:15:46.880><c> process</c><01:15:47.360><c> is</c><01:15:47.520><c> not</c><01:15:47.840><c> in</c><01:15:48.000><c> user</c><01:15:48.400><c> zone</c><01:15:48.719><c> user</c>

01:15:48.950 --> 01:15:48.960 align:start position:0%
if the process is not in user zone user
 

01:15:48.960 --> 01:15:50.830 align:start position:0%
if the process is not in user zone user
space<01:15:49.360><c> but</c><01:15:49.600><c> is</c><01:15:49.679><c> in</c><01:15:49.760><c> the</c><01:15:49.840><c> middle</c><01:15:50.080><c> of</c><01:15:50.239><c> a</c><01:15:50.320><c> system</c>

01:15:50.830 --> 01:15:50.840 align:start position:0%
space but is in the middle of a system
 

01:15:50.840 --> 01:15:53.110 align:start position:0%
space but is in the middle of a system
call

01:15:53.110 --> 01:15:53.120 align:start position:0%
call
 

01:15:53.120 --> 01:15:55.189 align:start position:0%
call
and<01:15:53.280><c> it's</c><01:15:53.600><c> killed</c><01:15:54.560><c> do</c><01:15:54.719><c> we</c><01:15:54.800><c> need</c><01:15:54.960><c> to</c><01:15:55.040><c> do</c>

01:15:55.189 --> 01:15:55.199 align:start position:0%
and it's killed do we need to do
 

01:15:55.199 --> 01:15:56.950 align:start position:0%
and it's killed do we need to do
anything<01:15:55.520><c> special</c>

01:15:56.950 --> 01:15:56.960 align:start position:0%
anything special
 

01:15:56.960 --> 01:15:59.910 align:start position:0%
anything special
the<01:15:57.120><c> reason</c><01:15:57.360><c> why</c><01:15:57.520><c> this</c><01:15:57.760><c> may</c><01:15:58.320><c> come</c><01:15:58.560><c> up</c><01:15:59.600><c> is</c>

01:15:59.910 --> 01:15:59.920 align:start position:0%
the reason why this may come up is
 

01:15:59.920 --> 01:16:01.189 align:start position:0%
the reason why this may come up is
suppose<01:16:00.320><c> the</c><01:16:00.480><c> process</c><01:16:00.960><c> is</c>

01:16:01.189 --> 01:16:01.199 align:start position:0%
suppose the process is
 

01:16:01.199 --> 01:16:03.990 align:start position:0%
suppose the process is
reading<01:16:01.520><c> from</c><01:16:01.679><c> the</c><01:16:01.840><c> console</c><01:16:03.199><c> right</c><01:16:03.679><c> you</c><01:16:03.840><c> know</c>

01:16:03.990 --> 01:16:04.000 align:start position:0%
reading from the console right you know
 

01:16:04.000 --> 01:16:05.430 align:start position:0%
reading from the console right you know
reading<01:16:04.239><c> for</c><01:16:04.400><c> the</c><01:16:04.480><c> next</c><01:16:04.719><c> character</c><01:16:05.040><c> you</c><01:16:05.199><c> type</c>

01:16:05.430 --> 01:16:05.440 align:start position:0%
reading for the next character you type
 

01:16:05.440 --> 01:16:06.550 align:start position:0%
reading for the next character you type
well<01:16:05.600><c> you</c><01:16:05.679><c> might</c><01:16:05.840><c> not</c><01:16:06.000><c> type</c><01:16:06.239><c> another</c>

01:16:06.550 --> 01:16:06.560 align:start position:0%
well you might not type another
 

01:16:06.560 --> 01:16:08.709 align:start position:0%
well you might not type another
character<01:16:06.960><c> until</c><01:16:07.199><c> tomorrow</c>

01:16:08.709 --> 01:16:08.719 align:start position:0%
character until tomorrow
 

01:16:08.719 --> 01:16:10.790 align:start position:0%
character until tomorrow
and<01:16:08.800><c> it</c><01:16:08.960><c> would</c><01:16:09.040><c> be</c><01:16:09.199><c> nice</c><01:16:09.760><c> if</c><01:16:10.239><c> when</c><01:16:10.400><c> you</c><01:16:10.560><c> killed</c>

01:16:10.790 --> 01:16:10.800 align:start position:0%
and it would be nice if when you killed
 

01:16:10.800 --> 01:16:11.830 align:start position:0%
and it would be nice if when you killed
the<01:16:10.880><c> process</c><01:16:11.360><c> it</c>

01:16:11.830 --> 01:16:11.840 align:start position:0%
the process it
 

01:16:11.840 --> 01:16:15.910 align:start position:0%
the process it
actually<01:16:12.159><c> went</c><01:16:12.400><c> away</c><01:16:12.960><c> before</c><01:16:13.360><c> tomorrow</c>

01:16:15.910 --> 01:16:15.920 align:start position:0%
 
 

01:16:15.920 --> 01:16:18.870 align:start position:0%
 
and<01:16:16.320><c> for</c><01:16:16.640><c> that</c><01:16:16.960><c> reason</c><01:16:18.159><c> in</c><01:16:18.320><c> a</c><01:16:18.400><c> number</c><01:16:18.719><c> of</c>

01:16:18.870 --> 01:16:18.880 align:start position:0%
and for that reason in a number of
 

01:16:18.880 --> 01:16:20.229 align:start position:0%
and for that reason in a number of
points<01:16:19.199><c> in</c><01:16:19.360><c> xv6</c>

01:16:20.229 --> 01:16:20.239 align:start position:0%
points in xv6
 

01:16:20.239 --> 01:16:24.310 align:start position:0%
points in xv6
in<01:16:20.320><c> which</c><01:16:20.560><c> a</c><01:16:20.719><c> process</c><01:16:21.199><c> is</c><01:16:21.600><c> uh</c><01:16:22.560><c> is</c><01:16:22.800><c> sleeping</c>

01:16:24.310 --> 01:16:24.320 align:start position:0%
in which a process is uh is sleeping
 

01:16:24.320 --> 01:16:26.310 align:start position:0%
in which a process is uh is sleeping
xv6<01:16:25.040><c> actually</c><01:16:25.280><c> arranges</c><01:16:25.760><c> that</c><01:16:25.920><c> if</c><01:16:26.080><c> it's</c>

01:16:26.310 --> 01:16:26.320 align:start position:0%
xv6 actually arranges that if it's
 

01:16:26.320 --> 01:16:29.910 align:start position:0%
xv6 actually arranges that if it's
killed<01:16:26.960><c> while</c><01:16:27.280><c> sleeping</c><01:16:27.679><c> in</c><01:16:27.840><c> the</c><01:16:27.920><c> kernel</c>

01:16:29.910 --> 01:16:29.920 align:start position:0%
killed while sleeping in the kernel
 

01:16:29.920 --> 01:16:32.709 align:start position:0%
killed while sleeping in the kernel
it<01:16:30.159><c> will</c><01:16:30.560><c> actually</c><01:16:31.040><c> exit</c><01:16:31.760><c> so</c><01:16:32.159><c> let</c><01:16:32.320><c> me</c><01:16:32.400><c> show</c><01:16:32.560><c> you</c>

01:16:32.709 --> 01:16:32.719 align:start position:0%
it will actually exit so let me show you
 

01:16:32.719 --> 01:16:34.950 align:start position:0%
it will actually exit so let me show you
the<01:16:32.800><c> machinery</c><01:16:33.360><c> for</c><01:16:33.520><c> that</c>

01:16:34.950 --> 01:16:34.960 align:start position:0%
the machinery for that
 

01:16:34.960 --> 01:16:36.550 align:start position:0%
the machinery for that
the<01:16:35.040><c> first</c><01:16:35.280><c> thing</c><01:16:35.440><c> to</c><01:16:35.520><c> look</c><01:16:35.679><c> at</c><01:16:35.840><c> is</c><01:16:36.000><c> in</c><01:16:36.239><c> kill</c>

01:16:36.550 --> 01:16:36.560 align:start position:0%
the first thing to look at is in kill
 

01:16:36.560 --> 01:16:39.510 align:start position:0%
the first thing to look at is in kill
itself

01:16:39.510 --> 01:16:39.520 align:start position:0%
 
 

01:16:39.520 --> 01:16:42.229 align:start position:0%
 
you<01:16:39.600><c> can</c><01:16:39.840><c> see</c><01:16:40.159><c> that</c><01:16:41.120><c> if</c><01:16:41.280><c> the</c><01:16:41.440><c> target</c><01:16:41.840><c> process</c>

01:16:42.229 --> 01:16:42.239 align:start position:0%
you can see that if the target process
 

01:16:42.239 --> 01:16:43.590 align:start position:0%
you can see that if the target process
is<01:16:42.400><c> sleeping</c>

01:16:43.590 --> 01:16:43.600 align:start position:0%
is sleeping
 

01:16:43.600 --> 01:16:45.910 align:start position:0%
is sleeping
then<01:16:43.920><c> kill</c><01:16:44.159><c> will</c><01:16:44.320><c> set</c><01:16:44.560><c> its</c><01:16:44.640><c> state</c><01:16:44.880><c> to</c><01:16:45.040><c> runnable</c>

01:16:45.910 --> 01:16:45.920 align:start position:0%
then kill will set its state to runnable
 

01:16:45.920 --> 01:16:47.270 align:start position:0%
then kill will set its state to runnable
and<01:16:46.000><c> that</c><01:16:46.239><c> will</c><01:16:46.320><c> mean</c><01:16:46.480><c> that</c><01:16:46.719><c> even</c><01:16:46.960><c> if</c><01:16:47.040><c> it</c><01:16:47.199><c> had</c>

01:16:47.270 --> 01:16:47.280 align:start position:0%
and that will mean that even if it had
 

01:16:47.280 --> 01:16:47.669 align:start position:0%
and that will mean that even if it had
called

01:16:47.669 --> 01:16:47.679 align:start position:0%
called
 

01:16:47.679 --> 01:16:50.229 align:start position:0%
called
sleep<01:16:48.640><c> the</c><01:16:48.800><c> scheduler</c><01:16:49.199><c> will</c><01:16:49.360><c> now</c><01:16:49.600><c> run</c><01:16:49.840><c> it</c><01:16:50.080><c> and</c>

01:16:50.229 --> 01:16:50.239 align:start position:0%
sleep the scheduler will now run it and
 

01:16:50.239 --> 01:16:52.709 align:start position:0%
sleep the scheduler will now run it and
it<01:16:50.480><c> will</c><01:16:50.640><c> simply</c><01:16:50.960><c> return</c><01:16:51.440><c> from</c><01:16:51.679><c> sleep</c>

01:16:52.709 --> 01:16:52.719 align:start position:0%
it will simply return from sleep
 

01:16:52.719 --> 01:16:55.750 align:start position:0%
it will simply return from sleep
um<01:16:53.520><c> and</c><01:16:53.679><c> so</c><01:16:53.840><c> let's</c><01:16:54.080><c> look</c><01:16:54.159><c> at</c><01:16:54.320><c> a</c><01:16:54.400><c> place</c><01:16:54.719><c> where</c>

01:16:55.750 --> 01:16:55.760 align:start position:0%
um and so let's look at a place where
 

01:16:55.760 --> 01:16:58.870 align:start position:0%
um and so let's look at a place where
that<01:16:55.920><c> actually</c><01:16:56.239><c> matters</c><01:16:56.800><c> in</c><01:16:56.880><c> the</c><01:16:57.120><c> pipe</c><01:16:57.440><c> code</c>

01:16:58.870 --> 01:16:58.880 align:start position:0%
that actually matters in the pipe code
 

01:16:58.880 --> 01:17:01.350 align:start position:0%
that actually matters in the pipe code
if<01:16:59.040><c> a</c><01:16:59.120><c> process</c><01:16:59.600><c> is</c><01:16:59.760><c> in</c><01:17:00.320><c> sleep</c><01:17:00.640><c> waiting</c><01:17:00.960><c> to</c><01:17:01.120><c> read</c>

01:17:01.350 --> 01:17:01.360 align:start position:0%
if a process is in sleep waiting to read
 

01:17:01.360 --> 01:17:03.510 align:start position:0%
if a process is in sleep waiting to read
a<01:17:01.440><c> pipe</c>

01:17:03.510 --> 01:17:03.520 align:start position:0%
a pipe
 

01:17:03.520 --> 01:17:07.270 align:start position:0%
a pipe
um<01:17:05.199><c> and</c><01:17:05.360><c> it's</c><01:17:05.600><c> killed</c><01:17:06.480><c> kill</c><01:17:06.719><c> we'll</c><01:17:06.880><c> set</c><01:17:07.040><c> it</c><01:17:07.120><c> to</c>

01:17:07.270 --> 01:17:07.280 align:start position:0%
um and it's killed kill we'll set it to
 

01:17:07.280 --> 01:17:08.950 align:start position:0%
um and it's killed kill we'll set it to
runnable<01:17:07.679><c> it'll</c><01:17:07.840><c> return</c><01:17:08.239><c> from</c><01:17:08.480><c> sleep</c>

01:17:08.950 --> 01:17:08.960 align:start position:0%
runnable it'll return from sleep
 

01:17:08.960 --> 01:17:11.189 align:start position:0%
runnable it'll return from sleep
we'll<01:17:09.120><c> go</c><01:17:09.280><c> back</c><01:17:09.440><c> to</c><01:17:09.600><c> the</c><01:17:09.679><c> top</c><01:17:09.920><c> of</c><01:17:10.000><c> this</c><01:17:10.159><c> loop</c>

01:17:11.189 --> 01:17:11.199 align:start position:0%
we'll go back to the top of this loop
 

01:17:11.199 --> 01:17:12.229 align:start position:0%
we'll go back to the top of this loop
it'll<01:17:11.520><c> probably</c>

01:17:12.229 --> 01:17:12.239 align:start position:0%
it'll probably
 

01:17:12.239 --> 01:17:13.669 align:start position:0%
it'll probably
if<01:17:12.400><c> there</c><01:17:12.480><c> was</c><01:17:12.640><c> no</c><01:17:12.800><c> data</c><01:17:13.040><c> in</c><01:17:13.120><c> the</c><01:17:13.199><c> pipe</c><01:17:13.440><c> before</c>

01:17:13.669 --> 01:17:13.679 align:start position:0%
if there was no data in the pipe before
 

01:17:13.679 --> 01:17:14.950 align:start position:0%
if there was no data in the pipe before
there'll<01:17:13.840><c> probably</c><01:17:14.159><c> still</c><01:17:14.320><c> be</c><01:17:14.480><c> no</c><01:17:14.640><c> data</c><01:17:14.880><c> in</c>

01:17:14.950 --> 01:17:14.960 align:start position:0%
there'll probably still be no data in
 

01:17:14.960 --> 01:17:16.149 align:start position:0%
there'll probably still be no data in
the<01:17:15.120><c> pipe</c>

01:17:16.149 --> 01:17:16.159 align:start position:0%
the pipe
 

01:17:16.159 --> 01:17:19.590 align:start position:0%
the pipe
and<01:17:16.320><c> now</c><01:17:17.600><c> this</c><01:17:17.920><c> pipe</c><01:17:18.239><c> read</c><01:17:18.480><c> at</c><01:17:18.560><c> least</c><01:17:19.120><c> checks</c>

01:17:19.590 --> 01:17:19.600 align:start position:0%
and now this pipe read at least checks
 

01:17:19.600 --> 01:17:20.709 align:start position:0%
and now this pipe read at least checks
whether<01:17:19.920><c> the</c><01:17:20.080><c> process</c>

01:17:20.709 --> 01:17:20.719 align:start position:0%
whether the process
 

01:17:20.719 --> 01:17:22.550 align:start position:0%
whether the process
has<01:17:20.880><c> been</c><01:17:21.120><c> killed</c><01:17:21.760><c> and</c><01:17:22.000><c> if</c><01:17:22.080><c> it</c><01:17:22.239><c> has</c><01:17:22.400><c> been</c>

01:17:22.550 --> 01:17:22.560 align:start position:0%
has been killed and if it has been
 

01:17:22.560 --> 01:17:24.229 align:start position:0%
has been killed and if it has been
killed<01:17:22.800><c> instead</c><01:17:23.040><c> of</c><01:17:23.120><c> sleeping</c><01:17:23.600><c> again</c>

01:17:24.229 --> 01:17:24.239 align:start position:0%
killed instead of sleeping again
 

01:17:24.239 --> 01:17:27.189 align:start position:0%
killed instead of sleeping again
the<01:17:24.400><c> pipe</c><01:17:24.640><c> read</c><01:17:24.880><c> will</c><01:17:24.960><c> return</c><01:17:26.640><c> return</c><01:17:27.040><c> and</c>

01:17:27.189 --> 01:17:27.199 align:start position:0%
the pipe read will return return and
 

01:17:27.199 --> 01:17:28.470 align:start position:0%
the pipe read will return return and
error<01:17:27.440><c> it</c><01:17:27.520><c> doesn't</c><01:17:27.679><c> really</c><01:17:27.920><c> matter</c>

01:17:28.470 --> 01:17:28.480 align:start position:0%
error it doesn't really matter
 

01:17:28.480 --> 01:17:32.070 align:start position:0%
error it doesn't really matter
but<01:17:28.640><c> what</c><01:17:28.800><c> we're</c><01:17:29.040><c> returning</c><01:17:29.760><c> to</c><01:17:30.960><c> is</c>

01:17:32.070 --> 01:17:32.080 align:start position:0%
but what we're returning to is
 

01:17:32.080 --> 01:17:34.310 align:start position:0%
but what we're returning to is
this<01:17:32.719><c> syscall</c><01:17:33.360><c> since</c><01:17:33.600><c> we're</c><01:17:33.760><c> in</c><01:17:33.840><c> a</c><01:17:33.920><c> system</c>

01:17:34.310 --> 01:17:34.320 align:start position:0%
this syscall since we're in a system
 

01:17:34.320 --> 01:17:35.189 align:start position:0%
this syscall since we're in a system
call

01:17:35.189 --> 01:17:35.199 align:start position:0%
call
 

01:17:35.199 --> 01:17:38.390 align:start position:0%
call
um<01:17:36.400><c> where</c><01:17:36.640><c> pipe</c><01:17:37.120><c> really</c><01:17:37.360><c> returns</c><01:17:37.760><c> to</c><01:17:38.159><c> in</c><01:17:38.239><c> the</c>

01:17:38.390 --> 01:17:38.400 align:start position:0%
um where pipe really returns to in the
 

01:17:38.400 --> 01:17:41.510 align:start position:0%
um where pipe really returns to in the
end<01:17:38.640><c> is</c><01:17:38.880><c> returns</c><01:17:39.280><c> from</c><01:17:39.440><c> the</c><01:17:39.520><c> system</c><01:17:39.920><c> call</c>

01:17:41.510 --> 01:17:41.520 align:start position:0%
end is returns from the system call
 

01:17:41.520 --> 01:17:44.709 align:start position:0%
end is returns from the system call
and<01:17:41.679><c> then</c><01:17:42.640><c> user</c><01:17:42.960><c> trap</c><01:17:43.600><c> checks</c><01:17:43.920><c> piero</c><01:17:44.320><c> kill</c>

01:17:44.709 --> 01:17:44.719 align:start position:0%
and then user trap checks piero kill
 

01:17:44.719 --> 01:17:48.630 align:start position:0%
and then user trap checks piero kill
again<01:17:45.360><c> and</c><01:17:45.520><c> will</c><01:17:45.679><c> now</c><01:17:45.920><c> exit</c><01:17:46.880><c> so</c><01:17:47.199><c> for</c>

01:17:48.630 --> 01:17:48.640 align:start position:0%
again and will now exit so for
 

01:17:48.640 --> 01:17:52.630 align:start position:0%
again and will now exit so for
sleeps<01:17:49.840><c> that</c><01:17:50.480><c> we</c><01:17:50.800><c> know</c><01:17:51.199><c> it's</c><01:17:51.440><c> okay</c>

01:17:52.630 --> 01:17:52.640 align:start position:0%
sleeps that we know it's okay
 

01:17:52.640 --> 01:17:54.630 align:start position:0%
sleeps that we know it's okay
to<01:17:52.800><c> just</c><01:17:53.040><c> bail</c><01:17:53.360><c> out</c><01:17:53.600><c> of</c><01:17:53.760><c> when</c><01:17:53.920><c> a</c><01:17:54.000><c> process</c><01:17:54.400><c> is</c>

01:17:54.630 --> 01:17:54.640 align:start position:0%
to just bail out of when a process is
 

01:17:54.640 --> 01:17:56.070 align:start position:0%
to just bail out of when a process is
killed

01:17:56.070 --> 01:17:56.080 align:start position:0%
killed
 

01:17:56.080 --> 01:17:58.550 align:start position:0%
killed
those<01:17:56.400><c> loops</c><01:17:57.120><c> check</c><01:17:57.360><c> the</c><01:17:57.520><c> killed</c><01:17:57.840><c> flag</c><01:17:58.400><c> but</c>

01:17:58.550 --> 01:17:58.560 align:start position:0%
those loops check the killed flag but
 

01:17:58.560 --> 01:17:59.910 align:start position:0%
those loops check the killed flag but
there<01:17:58.640><c> are</c><01:17:58.800><c> also</c><01:17:59.120><c> sleeps</c>

01:17:59.910 --> 01:17:59.920 align:start position:0%
there are also sleeps
 

01:17:59.920 --> 01:18:03.189 align:start position:0%
there are also sleeps
where<01:18:00.080><c> it</c><01:18:00.159><c> would</c><01:18:00.400><c> not</c><01:18:00.640><c> be</c><01:18:00.880><c> okay</c><01:18:02.560><c> for</c><01:18:02.800><c> a</c><01:18:02.880><c> process</c>

01:18:03.189 --> 01:18:03.199 align:start position:0%
where it would not be okay for a process
 

01:18:03.199 --> 01:18:06.229 align:start position:0%
where it would not be okay for a process
to<01:18:03.360><c> quit</c><01:18:03.600><c> if</c><01:18:03.760><c> it's</c><01:18:03.920><c> killed</c><01:18:04.239><c> in</c><01:18:04.320><c> that</c><01:18:04.560><c> sleep</c>

01:18:06.229 --> 01:18:06.239 align:start position:0%
to quit if it's killed in that sleep
 

01:18:06.239 --> 01:18:08.070 align:start position:0%
to quit if it's killed in that sleep
so<01:18:06.400><c> for</c><01:18:06.560><c> example</c><01:18:07.120><c> if</c><01:18:07.360><c> a</c><01:18:07.440><c> process</c><01:18:07.760><c> is</c><01:18:07.920><c> in</c><01:18:08.000><c> the</c>

01:18:08.070 --> 01:18:08.080 align:start position:0%
so for example if a process is in the
 

01:18:08.080 --> 01:18:10.149 align:start position:0%
so for example if a process is in the
middle<01:18:08.320><c> of</c><01:18:08.560><c> updating</c><01:18:09.040><c> the</c><01:18:09.280><c> file</c><01:18:09.679><c> system</c><01:18:10.000><c> on</c>

01:18:10.149 --> 01:18:10.159 align:start position:0%
middle of updating the file system on
 

01:18:10.159 --> 01:18:12.149 align:start position:0%
middle of updating the file system on
disk<01:18:10.480><c> to</c><01:18:10.640><c> create</c><01:18:10.880><c> a</c><01:18:10.960><c> new</c><01:18:11.199><c> file</c>

01:18:12.149 --> 01:18:12.159 align:start position:0%
disk to create a new file
 

01:18:12.159 --> 01:18:15.510 align:start position:0%
disk to create a new file
that<01:18:12.400><c> is</c><01:18:12.560><c> a</c><01:18:13.280><c> bad</c><01:18:13.760><c> time</c><01:18:14.560><c> even</c><01:18:14.880><c> if</c><01:18:15.040><c> it's</c><01:18:15.199><c> sleeping</c>

01:18:15.510 --> 01:18:15.520 align:start position:0%
that is a bad time even if it's sleeping
 

01:18:15.520 --> 01:18:17.510 align:start position:0%
that is a bad time even if it's sleeping
waiting<01:18:15.840><c> for</c><01:18:16.000><c> the</c><01:18:16.080><c> disk</c><01:18:16.400><c> that's</c><01:18:16.640><c> a</c><01:18:16.719><c> bad</c><01:18:17.040><c> time</c>

01:18:17.510 --> 01:18:17.520 align:start position:0%
waiting for the disk that's a bad time
 

01:18:17.520 --> 01:18:19.910 align:start position:0%
waiting for the disk that's a bad time
for<01:18:17.679><c> a</c><01:18:17.760><c> process</c><01:18:18.320><c> to</c><01:18:19.040><c> just</c><01:18:19.199><c> decide</c><01:18:19.520><c> to</c><01:18:19.679><c> quit</c>

01:18:19.910 --> 01:18:19.920 align:start position:0%
for a process to just decide to quit
 

01:18:19.920 --> 01:18:21.030 align:start position:0%
for a process to just decide to quit
because<01:18:20.159><c> it's</c><01:18:20.239><c> been</c><01:18:20.400><c> killed</c><01:18:20.640><c> we</c><01:18:20.719><c> want</c><01:18:20.880><c> to</c>

01:18:21.030 --> 01:18:21.040 align:start position:0%
because it's been killed we want to
 

01:18:21.040 --> 01:18:22.470 align:start position:0%
because it's been killed we want to
finish<01:18:21.360><c> the</c><01:18:21.440><c> complete</c><01:18:21.840><c> file</c><01:18:22.080><c> system</c>

01:18:22.470 --> 01:18:22.480 align:start position:0%
finish the complete file system
 

01:18:22.480 --> 01:18:23.350 align:start position:0%
finish the complete file system
operation

01:18:23.350 --> 01:18:23.360 align:start position:0%
operation
 

01:18:23.360 --> 01:18:26.149 align:start position:0%
operation
and<01:18:23.520><c> only</c><01:18:23.920><c> then</c><01:18:24.159><c> have</c><01:18:24.320><c> the</c><01:18:24.480><c> process</c><01:18:24.960><c> exit</c><01:18:26.080><c> and</c>

01:18:26.149 --> 01:18:26.159 align:start position:0%
and only then have the process exit and
 

01:18:26.159 --> 01:18:27.350 align:start position:0%
and only then have the process exit and
so<01:18:26.320><c> you</c><01:18:26.480><c> can</c><01:18:26.640><c> see</c><01:18:26.800><c> this</c>

01:18:27.350 --> 01:18:27.360 align:start position:0%
so you can see this
 

01:18:27.360 --> 01:18:30.390 align:start position:0%
so you can see this
we<01:18:27.440><c> haven't</c><01:18:27.679><c> looked</c><01:18:27.920><c> at</c><01:18:28.000><c> this</c><01:18:28.320><c> but</c><01:18:28.560><c> um</c><01:18:30.000><c> i'll</c>

01:18:30.390 --> 01:18:30.400 align:start position:0%
we haven't looked at this but um i'll
 

01:18:30.400 --> 01:18:33.910 align:start position:0%
we haven't looked at this but um i'll
show<01:18:30.560><c> you</c><01:18:30.880><c> in</c><01:18:31.040><c> the</c><01:18:31.280><c> disk</c><01:18:31.520><c> driver</c>

01:18:33.910 --> 01:18:33.920 align:start position:0%
show you in the disk driver
 

01:18:33.920 --> 01:18:36.390 align:start position:0%
show you in the disk driver
an<01:18:34.159><c> example</c><01:18:34.640><c> of</c><01:18:34.719><c> a</c><01:18:34.880><c> sleep</c><01:18:35.280><c> loop</c><01:18:35.840><c> that</c><01:18:36.080><c> doesn't</c>

01:18:36.390 --> 01:18:36.400 align:start position:0%
an example of a sleep loop that doesn't
 

01:18:36.400 --> 01:18:37.830 align:start position:0%
an example of a sleep loop that doesn't
check<01:18:36.719><c> killed</c>

01:18:37.830 --> 01:18:37.840 align:start position:0%
check killed
 

01:18:37.840 --> 01:18:41.510 align:start position:0%
check killed
well<01:18:38.000><c> look</c><01:18:38.159><c> at</c><01:18:38.840><c> that</c><01:18:40.560><c> so</c><01:18:40.800><c> here</c><01:18:40.960><c> we</c><01:18:41.120><c> are</c><01:18:41.280><c> this</c><01:18:41.440><c> is</c>

01:18:41.510 --> 01:18:41.520 align:start position:0%
well look at that so here we are this is
 

01:18:41.520 --> 01:18:42.709 align:start position:0%
well look at that so here we are this is
the<01:18:41.679><c> sleep</c>

01:18:42.709 --> 01:18:42.719 align:start position:0%
the sleep
 

01:18:42.719 --> 01:18:46.470 align:start position:0%
the sleep
in<01:18:42.880><c> which</c><01:18:43.280><c> a</c><01:18:43.920><c> process</c><01:18:45.520><c> waits</c><01:18:45.760><c> for</c><01:18:45.920><c> the</c><01:18:46.080><c> disc</c><01:18:46.320><c> to</c>

01:18:46.470 --> 01:18:46.480 align:start position:0%
in which a process waits for the disc to
 

01:18:46.480 --> 01:18:48.229 align:start position:0%
in which a process waits for the disc to
finish<01:18:46.800><c> reading</c><01:18:47.120><c> a</c><01:18:47.520><c> disc</c><01:18:47.760><c> block</c>

01:18:48.229 --> 01:18:48.239 align:start position:0%
finish reading a disc block
 

01:18:48.239 --> 01:18:51.350 align:start position:0%
finish reading a disc block
and<01:18:48.400><c> it</c><01:18:48.640><c> absolutely</c><01:18:48.960><c> doesn't</c><01:18:49.280><c> check</c><01:18:49.520><c> killed</c>

01:18:51.350 --> 01:18:51.360 align:start position:0%
and it absolutely doesn't check killed
 

01:18:51.360 --> 01:18:53.590 align:start position:0%
and it absolutely doesn't check killed
because<01:18:51.600><c> it</c><01:18:51.679><c> wants</c><01:18:51.920><c> to</c><01:18:52.480><c> finish</c><01:18:53.199><c> maybe</c><01:18:53.440><c> in</c><01:18:53.520><c> the</c>

01:18:53.590 --> 01:18:53.600 align:start position:0%
because it wants to finish maybe in the
 

01:18:53.600 --> 01:18:54.950 align:start position:0%
because it wants to finish maybe in the
middle<01:18:53.840><c> of</c><01:18:53.920><c> like</c><01:18:54.080><c> creating</c><01:18:54.400><c> a</c><01:18:54.480><c> file</c><01:18:54.719><c> which</c>

01:18:54.950 --> 01:18:54.960 align:start position:0%
middle of like creating a file which
 

01:18:54.960 --> 01:18:56.870 align:start position:0%
middle of like creating a file which
involves<01:18:55.360><c> multiple</c><01:18:55.760><c> disk</c><01:18:56.000><c> reads</c><01:18:56.239><c> and</c><01:18:56.400><c> writes</c>

01:18:56.870 --> 01:18:56.880 align:start position:0%
involves multiple disk reads and writes
 

01:18:56.880 --> 01:18:58.630 align:start position:0%
involves multiple disk reads and writes
i<01:18:57.040><c> want</c><01:18:57.199><c> to</c><01:18:57.280><c> finish</c><01:18:57.600><c> the</c><01:18:57.679><c> entire</c><01:18:58.080><c> file</c><01:18:58.320><c> system</c>

01:18:58.630 --> 01:18:58.640 align:start position:0%
i want to finish the entire file system
 

01:18:58.640 --> 01:19:01.590 align:start position:0%
i want to finish the entire file system
operation<01:18:59.600><c> the</c><01:18:59.679><c> entire</c><01:19:00.080><c> system</c><01:19:00.400><c> call</c>

01:19:01.590 --> 01:19:01.600 align:start position:0%
operation the entire system call
 

01:19:01.600 --> 01:19:06.950 align:start position:0%
operation the entire system call
and<01:19:01.760><c> only</c><01:19:02.080><c> then</c><01:19:02.400><c> check</c><01:19:02.719><c> pro</c><01:19:03.120><c> killed</c><01:19:03.360><c> and</c><01:19:03.520><c> exit</c>

01:19:06.950 --> 01:19:06.960 align:start position:0%
 
 

01:19:06.960 --> 01:19:10.709 align:start position:0%
 
questions<01:19:07.440><c> about</c><01:19:07.760><c> anything</c>

01:19:10.709 --> 01:19:10.719 align:start position:0%
 
 

01:19:10.719 --> 01:19:13.750 align:start position:0%
 
um<01:19:11.040><c> i</c><01:19:11.120><c> have</c><01:19:11.360><c> a</c><01:19:11.440><c> question</c><01:19:11.840><c> about</c><01:19:12.400><c> why</c><01:19:12.640><c> is</c><01:19:12.880><c> skill</c>

01:19:13.750 --> 01:19:13.760 align:start position:0%
um i have a question about why is skill
 

01:19:13.760 --> 01:19:15.990 align:start position:0%
um i have a question about why is skill
allowed<01:19:14.320><c> in</c><01:19:14.400><c> the</c><01:19:14.480><c> way</c><01:19:14.719><c> it</c><01:19:14.880><c> is</c><01:19:15.520><c> why</c><01:19:15.679><c> wouldn't</c>

01:19:15.990 --> 01:19:16.000 align:start position:0%
allowed in the way it is why wouldn't
 

01:19:16.000 --> 01:19:16.790 align:start position:0%
allowed in the way it is why wouldn't
the<01:19:16.159><c> process</c>

01:19:16.790 --> 01:19:16.800 align:start position:0%
the process
 

01:19:16.800 --> 01:19:18.790 align:start position:0%
the process
kill<01:19:17.040><c> all</c><01:19:17.120><c> the</c><01:19:17.280><c> other</c><01:19:17.600><c> processes</c><01:19:18.080><c> so</c><01:19:18.239><c> that</c><01:19:18.640><c> it</c>

01:19:18.790 --> 01:19:18.800 align:start position:0%
kill all the other processes so that it
 

01:19:18.800 --> 01:19:21.030 align:start position:0%
kill all the other processes so that it
can<01:19:19.040><c> run</c>

01:19:21.030 --> 01:19:21.040 align:start position:0%
can run
 

01:19:21.040 --> 01:19:25.110 align:start position:0%
can run
by<01:19:21.199><c> itself</c><01:19:23.520><c> well</c>

01:19:25.110 --> 01:19:25.120 align:start position:0%
by itself well
 

01:19:25.120 --> 01:19:27.350 align:start position:0%
by itself well
uh<01:19:25.440><c> you</c><01:19:25.600><c> know</c><01:19:25.760><c> you</c><01:19:25.840><c> do</c><01:19:26.000><c> that</c><01:19:26.159><c> at</c><01:19:26.239><c> mit</c><01:19:26.800><c> on</c><01:19:26.880><c> athena</c>

01:19:27.350 --> 01:19:27.360 align:start position:0%
uh you know you do that at mit on athena
 

01:19:27.360 --> 01:19:28.390 align:start position:0%
uh you know you do that at mit on athena
time<01:19:27.520><c> sharing</c><01:19:27.840><c> machine</c><01:19:28.080><c> they'll</c><01:19:28.239><c> probably</c>

01:19:28.390 --> 01:19:28.400 align:start position:0%
time sharing machine they'll probably
 

01:19:28.400 --> 01:19:31.590 align:start position:0%
time sharing machine they'll probably
kick<01:19:28.560><c> you</c><01:19:28.719><c> out</c><01:19:28.800><c> of</c><01:19:28.960><c> school</c>

01:19:31.590 --> 01:19:31.600 align:start position:0%
 
 

01:19:31.600 --> 01:19:34.870 align:start position:0%
 
um<01:19:32.480><c> right</c><01:19:32.800><c> but</c><01:19:33.520><c> why</c><01:19:33.679><c> is</c><01:19:33.840><c> it</c><01:19:34.000><c> out</c><01:19:34.159><c> loud</c>

01:19:34.870 --> 01:19:34.880 align:start position:0%
um right but why is it out loud
 

01:19:34.880 --> 01:19:38.390 align:start position:0%
um right but why is it out loud
i<01:19:35.040><c> guess</c><01:19:35.440><c> it's</c><01:19:35.520><c> allowed</c><01:19:35.840><c> in</c><01:19:36.000><c> xv6</c><01:19:36.640><c> because</c><01:19:37.840><c> xv6</c>

01:19:38.390 --> 01:19:38.400 align:start position:0%
i guess it's allowed in xv6 because xv6
 

01:19:38.400 --> 01:19:39.910 align:start position:0%
i guess it's allowed in xv6 because xv6
is<01:19:38.480><c> a</c><01:19:38.640><c> toy</c><01:19:38.960><c> operating</c><01:19:39.360><c> system</c>

01:19:39.910 --> 01:19:39.920 align:start position:0%
is a toy operating system
 

01:19:39.920 --> 01:19:43.270 align:start position:0%
is a toy operating system
that<01:19:42.000><c> um</c>

01:19:43.270 --> 01:19:43.280 align:start position:0%
that um
 

01:19:43.280 --> 01:19:45.990 align:start position:0%
that um
it<01:19:43.679><c> just</c><01:19:44.000><c> like</c><01:19:44.880><c> anything</c><01:19:45.280><c> that</c><01:19:45.440><c> has</c><01:19:45.600><c> to</c><01:19:45.760><c> do</c>

01:19:45.990 --> 01:19:46.000 align:start position:0%
it just like anything that has to do
 

01:19:46.000 --> 01:19:48.149 align:start position:0%
it just like anything that has to do
with

01:19:48.149 --> 01:19:48.159 align:start position:0%
with
 

01:19:48.159 --> 01:19:50.709 align:start position:0%
with
like<01:19:48.840><c> permissions</c><01:19:49.920><c> it</c><01:19:50.000><c> just</c><01:19:50.159><c> doesn't</c><01:19:50.480><c> exist</c>

01:19:50.709 --> 01:19:50.719 align:start position:0%
like permissions it just doesn't exist
 

01:19:50.719 --> 01:19:52.310 align:start position:0%
like permissions it just doesn't exist
in<01:19:50.880><c> xv6</c>

01:19:52.310 --> 01:19:52.320 align:start position:0%
in xv6
 

01:19:52.320 --> 01:19:55.110 align:start position:0%
in xv6
in<01:19:52.560><c> linux</c><01:19:53.040><c> or</c><01:19:53.199><c> a</c><01:19:53.280><c> real</c><01:19:53.520><c> operating</c><01:19:54.000><c> system</c>

01:19:55.110 --> 01:19:55.120 align:start position:0%
in linux or a real operating system
 

01:19:55.120 --> 01:19:56.229 align:start position:0%
in linux or a real operating system
every<01:19:55.440><c> process</c><01:19:55.840><c> has</c>

01:19:56.229 --> 01:19:56.239 align:start position:0%
every process has
 

01:19:56.239 --> 01:19:59.030 align:start position:0%
every process has
a<01:19:56.400><c> user</c><01:19:56.800><c> id</c><01:19:57.760><c> that</c><01:19:58.000><c> corresponds</c><01:19:58.560><c> to</c><01:19:58.640><c> the</c><01:19:58.880><c> more</c>

01:19:59.030 --> 01:19:59.040 align:start position:0%
a user id that corresponds to the more
 

01:19:59.040 --> 01:20:01.270 align:start position:0%
a user id that corresponds to the more
or<01:19:59.199><c> less</c><01:19:59.520><c> to</c><01:19:59.679><c> the</c><01:19:59.760><c> human</c><01:20:00.159><c> root</c><01:20:00.560><c> user</c><01:20:00.880><c> who's</c>

01:20:01.270 --> 01:20:01.280 align:start position:0%
or less to the human root user who's
 

01:20:01.280 --> 01:20:02.790 align:start position:0%
or less to the human root user who's
executing<01:20:01.760><c> the</c><01:20:01.920><c> process</c>

01:20:02.790 --> 01:20:02.800 align:start position:0%
executing the process
 

01:20:02.800 --> 01:20:06.550 align:start position:0%
executing the process
and<01:20:03.360><c> some</c><01:20:03.760><c> system</c><01:20:04.159><c> calls</c><01:20:05.199><c> use</c><01:20:05.440><c> the</c><01:20:05.600><c> user</c><01:20:06.000><c> id</c>

01:20:06.550 --> 01:20:06.560 align:start position:0%
and some system calls use the user id
 

01:20:06.560 --> 01:20:08.390 align:start position:0%
and some system calls use the user id
of<01:20:06.719><c> the</c><01:20:06.800><c> process</c><01:20:07.280><c> to</c><01:20:07.360><c> kind</c><01:20:07.520><c> of</c><01:20:07.679><c> check</c><01:20:07.920><c> what</c><01:20:08.239><c> is</c>

01:20:08.390 --> 01:20:08.400 align:start position:0%
of the process to kind of check what is
 

01:20:08.400 --> 01:20:10.629 align:start position:0%
of the process to kind of check what is
the<01:20:08.480><c> process</c><01:20:08.880><c> allowed</c><01:20:09.199><c> to</c><01:20:09.280><c> do</c><01:20:09.440><c> this</c>

01:20:10.629 --> 01:20:10.639 align:start position:0%
the process allowed to do this
 

01:20:10.639 --> 01:20:14.229 align:start position:0%
the process allowed to do this
and<01:20:10.800><c> so</c><01:20:11.120><c> in</c><01:20:11.280><c> linux</c><01:20:11.679><c> you</c><01:20:11.760><c> would</c><01:20:12.000><c> see</c><01:20:12.400><c> a</c>

01:20:14.229 --> 01:20:14.239 align:start position:0%
and so in linux you would see a
 

01:20:14.239 --> 01:20:18.070 align:start position:0%
and so in linux you would see a
an<01:20:14.400><c> extra</c><01:20:14.800><c> check</c><01:20:15.120><c> here</c><01:20:15.840><c> that</c><01:20:16.080><c> said</c><01:20:17.040><c> that</c>

01:20:18.070 --> 01:20:18.080 align:start position:0%
an extra check here that said that
 

01:20:18.080 --> 01:20:20.149 align:start position:0%
an extra check here that said that
the<01:20:18.320><c> calling</c><01:20:18.719><c> process</c><01:20:19.199><c> has</c><01:20:19.360><c> to</c><01:20:19.440><c> have</c><01:20:19.600><c> the</c><01:20:19.760><c> same</c>

01:20:20.149 --> 01:20:20.159 align:start position:0%
the calling process has to have the same
 

01:20:20.159 --> 01:20:21.350 align:start position:0%
the calling process has to have the same
user<01:20:20.560><c> id</c>

01:20:21.350 --> 01:20:21.360 align:start position:0%
user id
 

01:20:21.360 --> 01:20:23.189 align:start position:0%
user id
as<01:20:21.520><c> the</c><01:20:21.679><c> process</c><01:20:22.080><c> is</c><01:20:22.239><c> trying</c><01:20:22.400><c> to</c><01:20:22.560><c> kill</c>

01:20:23.189 --> 01:20:23.199 align:start position:0%
as the process is trying to kill
 

01:20:23.199 --> 01:20:25.669 align:start position:0%
as the process is trying to kill
otherwise<01:20:23.679><c> it's</c><01:20:23.840><c> not</c><01:20:24.000><c> allowed</c>

01:20:25.669 --> 01:20:25.679 align:start position:0%
otherwise it's not allowed
 

01:20:25.679 --> 01:20:27.750 align:start position:0%
otherwise it's not allowed
and<01:20:25.840><c> that</c><01:20:26.800><c> at</c><01:20:26.880><c> least</c><01:20:27.120><c> in</c><01:20:27.199><c> a</c><01:20:27.280><c> time</c><01:20:27.440><c> sharing</c>

01:20:27.750 --> 01:20:27.760 align:start position:0%
and that at least in a time sharing
 

01:20:27.760 --> 01:20:29.270 align:start position:0%
and that at least in a time sharing
context

01:20:29.270 --> 01:20:29.280 align:start position:0%
context
 

01:20:29.280 --> 01:20:30.550 align:start position:0%
context
where<01:20:29.440><c> we</c><01:20:29.600><c> have</c><01:20:29.679><c> multiple</c><01:20:30.000><c> users</c><01:20:30.400><c> and</c><01:20:30.480><c> we</c>

01:20:30.550 --> 01:20:30.560 align:start position:0%
where we have multiple users and we
 

01:20:30.560 --> 01:20:31.669 align:start position:0%
where we have multiple users and we
don't<01:20:30.719><c> want</c><01:20:30.800><c> them</c><01:20:30.960><c> to</c><01:20:31.040><c> kill</c><01:20:31.199><c> each</c><01:20:31.360><c> other's</c>

01:20:31.669 --> 01:20:31.679 align:start position:0%
don't want them to kill each other's
 

01:20:31.679 --> 01:20:32.470 align:start position:0%
don't want them to kill each other's
processes

01:20:32.470 --> 01:20:32.480 align:start position:0%
processes
 

01:20:32.480 --> 01:20:34.709 align:start position:0%
processes
that's<01:20:33.520><c> more</c><01:20:33.679><c> or</c><01:20:33.760><c> less</c><01:20:33.920><c> sufficient</c><01:20:34.400><c> to</c><01:20:34.480><c> keep</c>

01:20:34.709 --> 01:20:34.719 align:start position:0%
that's more or less sufficient to keep
 

01:20:34.719 --> 01:20:36.310 align:start position:0%
that's more or less sufficient to keep
people<01:20:35.040><c> from</c><01:20:35.280><c> to</c><01:20:35.440><c> make</c><01:20:35.600><c> it</c><01:20:35.679><c> hard</c><01:20:35.920><c> for</c><01:20:36.080><c> people</c>

01:20:36.310 --> 01:20:36.320 align:start position:0%
people from to make it hard for people
 

01:20:36.320 --> 01:20:37.510 align:start position:0%
people from to make it hard for people
to

01:20:37.510 --> 01:20:37.520 align:start position:0%
to
 

01:20:37.520 --> 01:20:41.030 align:start position:0%
to
kill<01:20:37.760><c> other</c><01:20:37.920><c> people's</c><01:20:38.239><c> processes</c>

01:20:41.030 --> 01:20:41.040 align:start position:0%
 
 

01:20:41.040 --> 01:20:45.350 align:start position:0%
 
okay<01:20:41.360><c> see</c><01:20:41.600><c> thank</c><01:20:41.840><c> you</c><01:20:42.560><c> yeah</c>

01:20:45.350 --> 01:20:45.360 align:start position:0%
 
 

01:20:45.360 --> 01:20:48.709 align:start position:0%
 
um<01:20:45.760><c> does</c><01:20:46.000><c> the</c><01:20:46.080><c> init</c><01:20:46.480><c> process</c><01:20:46.960><c> ever</c><01:20:47.280><c> exit</c>

01:20:48.709 --> 01:20:48.719 align:start position:0%
um does the init process ever exit
 

01:20:48.719 --> 01:20:54.390 align:start position:0%
um does the init process ever exit
uh<01:20:48.960><c> let</c><01:20:49.120><c> me</c><01:20:49.199><c> check</c>

01:20:54.390 --> 01:20:54.400 align:start position:0%
 
 

01:20:54.400 --> 01:20:57.830 align:start position:0%
 
yes<01:20:56.320><c> if</c><01:20:56.480><c> fork</c><01:20:56.800><c> fails</c><01:20:57.040><c> it'll</c><01:20:57.280><c> exit</c>

01:20:57.830 --> 01:20:57.840 align:start position:0%
yes if fork fails it'll exit
 

01:20:57.840 --> 01:20:59.430 align:start position:0%
yes if fork fails it'll exit
however<01:20:58.320><c> the</c><01:20:58.480><c> real</c><01:20:58.719><c> answer</c><01:20:58.960><c> to</c><01:20:59.040><c> the</c><01:20:59.120><c> question</c>

01:20:59.430 --> 01:20:59.440 align:start position:0%
however the real answer to the question
 

01:20:59.440 --> 01:21:01.910 align:start position:0%
however the real answer to the question
is<01:20:59.600><c> no</c><01:21:00.560><c> the</c><01:21:00.719><c> intent</c>

01:21:01.910 --> 01:21:01.920 align:start position:0%
is no the intent
 

01:21:01.920 --> 01:21:04.390 align:start position:0%
is no the intent
is<01:21:02.080><c> that</c><01:21:02.320><c> init</c><01:21:02.719><c> never</c><01:21:03.040><c> exit</c><01:21:03.679><c> it</c><01:21:04.000><c> just</c><01:21:04.159><c> sit</c><01:21:04.320><c> in</c>

01:21:04.390 --> 01:21:04.400 align:start position:0%
is that init never exit it just sit in
 

01:21:04.400 --> 01:21:06.070 align:start position:0%
is that init never exit it just sit in
this<01:21:04.639><c> loop</c>

01:21:06.070 --> 01:21:06.080 align:start position:0%
this loop
 

01:21:06.080 --> 01:21:09.030 align:start position:0%
this loop
and<01:21:06.239><c> what</c><01:21:06.400><c> it's</c><01:21:06.560><c> doing</c><01:21:06.960><c> is</c><01:21:08.400><c> calling</c><01:21:08.719><c> weight</c>

01:21:09.030 --> 01:21:09.040 align:start position:0%
and what it's doing is calling weight
 

01:21:09.040 --> 01:21:10.629 align:start position:0%
and what it's doing is calling weight
over<01:21:09.280><c> and</c><01:21:09.360><c> over</c><01:21:09.600><c> again</c>

01:21:10.629 --> 01:21:10.639 align:start position:0%
over and over again
 

01:21:10.639 --> 01:21:13.189 align:start position:0%
over and over again
if<01:21:10.800><c> an</c><01:21:10.960><c> it</c><01:21:11.120><c> exits</c><01:21:12.080><c> i</c><01:21:12.159><c> think</c><01:21:12.320><c> that's</c><01:21:12.560><c> a</c><01:21:12.719><c> fatal</c>

01:21:13.189 --> 01:21:13.199 align:start position:0%
if an it exits i think that's a fatal
 

01:21:13.199 --> 01:21:16.310 align:start position:0%
if an it exits i think that's a fatal
error<01:21:13.520><c> and</c><01:21:13.600><c> the</c><01:21:13.679><c> system</c><01:21:14.000><c> will</c><01:21:14.159><c> crash</c>

01:21:16.310 --> 01:21:16.320 align:start position:0%
error and the system will crash
 

01:21:16.320 --> 01:21:17.669 align:start position:0%
error and the system will crash
and<01:21:16.400><c> there's</c><01:21:16.639><c> code</c><01:21:16.880><c> somewhere</c><01:21:17.199><c> in</c><01:21:17.280><c> the</c><01:21:17.360><c> kernel</c>

01:21:17.669 --> 01:21:17.679 align:start position:0%
and there's code somewhere in the kernel
 

01:21:17.679 --> 01:21:19.830 align:start position:0%
and there's code somewhere in the kernel
that<01:21:17.840><c> says</c><01:21:18.560><c> maybe</c><01:21:18.800><c> an</c><01:21:18.960><c> exit</c>

01:21:19.830 --> 01:21:19.840 align:start position:0%
that says maybe an exit
 

01:21:19.840 --> 01:21:30.229 align:start position:0%
that says maybe an exit
let's<01:21:20.000><c> just</c><01:21:20.239><c> check</c><01:21:20.480><c> exit</c><01:21:26.840><c> uh</c>

01:21:30.229 --> 01:21:30.239 align:start position:0%
 
 

01:21:30.239 --> 01:21:32.390 align:start position:0%
 
um<01:21:31.120><c> yeah</c><01:21:31.360><c> yeah</c><01:21:31.520><c> here</c><01:21:31.679><c> we</c><01:21:31.840><c> are</c><01:21:32.000><c> next</c><01:21:32.239><c> at</c><01:21:32.320><c> the</c>

01:21:32.390 --> 01:21:32.400 align:start position:0%
um yeah yeah here we are next at the
 

01:21:32.400 --> 01:21:33.350 align:start position:0%
um yeah yeah here we are next at the
beginning<01:21:32.639><c> of</c><01:21:32.800><c> exit</c>

01:21:33.350 --> 01:21:33.360 align:start position:0%
beginning of exit
 

01:21:33.360 --> 01:21:35.110 align:start position:0%
beginning of exit
if<01:21:33.520><c> it</c><01:21:33.679><c> looks</c><01:21:33.920><c> like</c><01:21:34.239><c> the</c><01:21:34.320><c> current</c><01:21:34.639><c> process</c><01:21:34.960><c> is</c>

01:21:35.110 --> 01:21:35.120 align:start position:0%
if it looks like the current process is
 

01:21:35.120 --> 01:21:36.390 align:start position:0%
if it looks like the current process is
the<01:21:35.280><c> inet</c><01:21:35.600><c> process</c>

01:21:36.390 --> 01:21:36.400 align:start position:0%
the inet process
 

01:21:36.400 --> 01:21:39.910 align:start position:0%
the inet process
it's<01:21:36.560><c> a</c><01:21:36.639><c> panic</c><01:21:38.239><c> because</c>

01:21:39.910 --> 01:21:39.920 align:start position:0%
it's a panic because
 

01:21:39.920 --> 01:21:41.350 align:start position:0%
it's a panic because
the<01:21:40.080><c> system</c><01:21:40.400><c> would</c><01:21:40.480><c> eventually</c><01:21:40.880><c> grind</c><01:21:41.120><c> to</c><01:21:41.280><c> a</c>

01:21:41.350 --> 01:21:41.360 align:start position:0%
the system would eventually grind to a
 

01:21:41.360 --> 01:21:42.950 align:start position:0%
the system would eventually grind to a
halt<01:21:41.600><c> if</c><01:21:41.760><c> there</c><01:21:41.840><c> were</c><01:21:42.000><c> a</c><01:21:42.080><c> no</c><01:21:42.239><c> init</c><01:21:42.719><c> because</c>

01:21:42.950 --> 01:21:42.960 align:start position:0%
halt if there were a no init because
 

01:21:42.960 --> 01:21:43.350 align:start position:0%
halt if there were a no init because
then

01:21:43.350 --> 01:21:43.360 align:start position:0%
then
 

01:21:43.360 --> 01:21:45.669 align:start position:0%
then
then<01:21:43.600><c> there'd</c><01:21:43.920><c> be</c><01:21:44.159><c> nothing</c><01:21:44.800><c> collect</c><01:21:45.360><c> nothing</c>

01:21:45.669 --> 01:21:45.679 align:start position:0%
then there'd be nothing collect nothing
 

01:21:45.679 --> 01:21:47.030 align:start position:0%
then there'd be nothing collect nothing
to<01:21:45.760><c> call</c><01:21:46.159><c> weight</c>

01:21:47.030 --> 01:21:47.040 align:start position:0%
to call weight
 

01:21:47.040 --> 01:21:48.709 align:start position:0%
to call weight
on<01:21:47.120><c> these</c><01:21:47.360><c> exiting</c><01:21:47.760><c> processes</c><01:21:48.320><c> and</c><01:21:48.480><c> nothing</c>

01:21:48.709 --> 01:21:48.719 align:start position:0%
on these exiting processes and nothing
 

01:21:48.719 --> 01:21:50.629 align:start position:0%
on these exiting processes and nothing
to<01:21:48.880><c> complete</c><01:21:49.280><c> the</c><01:21:49.440><c> freeing</c><01:21:49.840><c> of</c><01:21:49.920><c> the</c><01:21:50.080><c> processes</c>

01:21:50.629 --> 01:21:50.639 align:start position:0%
to complete the freeing of the processes
 

01:21:50.639 --> 01:21:52.310 align:start position:0%
to complete the freeing of the processes
and<01:21:50.719><c> gradually</c><01:21:51.120><c> we'd</c><01:21:51.360><c> run</c><01:21:51.520><c> out</c><01:21:51.679><c> of</c><01:21:51.760><c> processes</c>

01:21:52.310 --> 01:21:52.320 align:start position:0%
and gradually we'd run out of processes
 

01:21:52.320 --> 01:21:54.310 align:start position:0%
and gradually we'd run out of processes
and<01:21:52.480><c> then</c>

01:21:54.310 --> 01:21:54.320 align:start position:0%
and then
 

01:21:54.320 --> 01:21:57.110 align:start position:0%
and then
that<01:21:54.480><c> would</c><01:21:54.560><c> be</c><01:21:54.800><c> some</c><01:21:55.120><c> other</c><01:21:55.360><c> error</c><01:21:55.679><c> but</c><01:21:56.800><c> yeah</c>

01:21:57.110 --> 01:21:57.120 align:start position:0%
that would be some other error but yeah
 

01:21:57.120 --> 01:21:58.550 align:start position:0%
that would be some other error but yeah
we<01:21:57.280><c> have</c><01:21:57.440><c> to</c><01:21:57.520><c> have</c><01:21:57.600><c> an</c><01:21:57.760><c> init</c>

01:21:58.550 --> 01:21:58.560 align:start position:0%
we have to have an init
 

01:21:58.560 --> 01:21:59.990 align:start position:0%
we have to have an init
so<01:21:58.719><c> the</c><01:21:58.880><c> real</c><01:21:59.120><c> answer</c><01:21:59.360><c> is</c><01:21:59.440><c> that</c><01:21:59.600><c> no</c><01:21:59.760><c> and</c><01:21:59.920><c> it</c>

01:21:59.990 --> 01:22:00.000 align:start position:0%
so the real answer is that no and it
 

01:22:00.000 --> 01:22:02.149 align:start position:0%
so the real answer is that no and it
really<01:22:00.400><c> can't</c><01:22:00.560><c> be</c><01:22:00.719><c> allowed</c><01:22:00.960><c> to</c><01:22:01.120><c> exit</c>

01:22:02.149 --> 01:22:02.159 align:start position:0%
really can't be allowed to exit
 

01:22:02.159 --> 01:22:08.830 align:start position:0%
really can't be allowed to exit
better<01:22:02.400><c> not</c><01:22:02.639><c> exit</c>

01:22:08.830 --> 01:22:08.840 align:start position:0%
 
 

01:22:08.840 --> 01:22:12.470 align:start position:0%
 
okay<01:22:10.400><c> um</c>

01:22:12.470 --> 01:22:12.480 align:start position:0%
okay um
 

01:22:12.480 --> 01:22:16.229 align:start position:0%
okay um
any<01:22:12.719><c> other</c><01:22:12.880><c> questions</c>

01:22:16.229 --> 01:22:16.239 align:start position:0%
 
 

01:22:16.239 --> 01:22:20.070 align:start position:0%
 
um<01:22:16.639><c> i</c><01:22:16.719><c> guess</c><01:22:16.960><c> another</c><01:22:17.280><c> question</c><01:22:17.760><c> uh</c><01:22:18.800><c> so</c>

01:22:20.070 --> 01:22:20.080 align:start position:0%
um i guess another question uh so
 

01:22:20.080 --> 01:22:21.189 align:start position:0%
um i guess another question uh so
i<01:22:20.239><c> guess</c><01:22:20.400><c> we</c><01:22:20.480><c> haven't</c><01:22:20.639><c> really</c><01:22:20.880><c> talked</c><01:22:21.040><c> about</c>

01:22:21.189 --> 01:22:21.199 align:start position:0%
i guess we haven't really talked about
 

01:22:21.199 --> 01:22:22.830 align:start position:0%
i guess we haven't really talked about
it<01:22:21.280><c> much</c><01:22:21.440><c> in</c><01:22:21.520><c> this</c><01:22:21.679><c> class</c><01:22:21.920><c> yet</c><01:22:22.080><c> but</c><01:22:22.320><c> like</c><01:22:22.480><c> what</c>

01:22:22.830 --> 01:22:22.840 align:start position:0%
it much in this class yet but like what
 

01:22:22.840 --> 01:22:24.550 align:start position:0%
it much in this class yet but like what
happens

01:22:24.550 --> 01:22:24.560 align:start position:0%
happens
 

01:22:24.560 --> 01:22:26.310 align:start position:0%
happens
or<01:22:24.719><c> what</c><01:22:24.880><c> needs</c><01:22:25.120><c> to</c><01:22:25.199><c> happen</c><01:22:25.440><c> to</c><01:22:25.600><c> like</c><01:22:25.920><c> shut</c>

01:22:26.310 --> 01:22:26.320 align:start position:0%
or what needs to happen to like shut
 

01:22:26.320 --> 01:22:28.390 align:start position:0%
or what needs to happen to like shut
down<01:22:26.560><c> the</c><01:22:26.719><c> os</c>

01:22:28.390 --> 01:22:28.400 align:start position:0%
down the os
 

01:22:28.400 --> 01:22:31.750 align:start position:0%
down the os
you<01:22:28.480><c> gotta</c><01:22:28.719><c> unplug</c><01:22:29.120><c> it</c><01:22:30.800><c> okay</c>

01:22:31.750 --> 01:22:31.760 align:start position:0%
you gotta unplug it okay
 

01:22:31.760 --> 01:22:35.669 align:start position:0%
you gotta unplug it okay
okay<01:22:32.320><c> um</c><01:22:32.800><c> yeah</c><01:22:34.639><c> this</c><01:22:34.880><c> is</c><01:22:34.960><c> like</c><01:22:35.199><c> very</c>

01:22:35.669 --> 01:22:35.679 align:start position:0%
okay um yeah this is like very
 

01:22:35.679 --> 01:22:37.350 align:start position:0%
okay um yeah this is like very
complex<01:22:36.159><c> and</c><01:22:36.320><c> it</c><01:22:36.400><c> depends</c><01:22:36.800><c> on</c><01:22:36.960><c> what</c><01:22:37.120><c> you're</c>

01:22:37.350 --> 01:22:37.360 align:start position:0%
complex and it depends on what you're
 

01:22:37.360 --> 01:22:39.189 align:start position:0%
complex and it depends on what you're
running<01:22:37.679><c> if</c><01:22:38.159><c> if</c><01:22:38.320><c> you're</c>

01:22:39.189 --> 01:22:39.199 align:start position:0%
running if if you're
 

01:22:39.199 --> 01:22:40.790 align:start position:0%
running if if you're
if<01:22:39.360><c> the</c><01:22:39.600><c> operating</c><01:22:40.080><c> if</c><01:22:40.239><c> the</c><01:22:40.400><c> machine</c><01:22:40.719><c> is</c>

01:22:40.790 --> 01:22:40.800 align:start position:0%
if the operating if the machine is
 

01:22:40.800 --> 01:22:42.629 align:start position:0%
if the operating if the machine is
currently<01:22:41.120><c> doing</c><01:22:41.360><c> nothing</c>

01:22:42.629 --> 01:22:42.639 align:start position:0%
currently doing nothing
 

01:22:42.639 --> 01:22:46.390 align:start position:0%
currently doing nothing
um<01:22:43.440><c> well</c>

01:22:46.390 --> 01:22:46.400 align:start position:0%
 
 

01:22:46.400 --> 01:22:47.510 align:start position:0%
 
part<01:22:46.560><c> of</c><01:22:46.639><c> the</c><01:22:46.719><c> answer</c><01:22:46.880><c> to</c><01:22:47.040><c> the</c><01:22:47.120><c> question</c><01:22:47.360><c> is</c>

01:22:47.510 --> 01:22:47.520 align:start position:0%
part of the answer to the question is
 

01:22:47.520 --> 01:22:51.110 align:start position:0%
part of the answer to the question is
that<01:22:47.600><c> the</c><01:22:47.760><c> file</c><01:22:48.080><c> system</c><01:22:48.480><c> ends</c><01:22:48.800><c> up</c><01:22:49.040><c> being</c>

01:22:51.110 --> 01:22:51.120 align:start position:0%
that the file system ends up being
 

01:22:51.120 --> 01:22:53.430 align:start position:0%
that the file system ends up being
because<01:22:51.360><c> the</c><01:22:51.440><c> file</c><01:22:51.679><c> system</c><01:22:52.080><c> is</c><01:22:52.320><c> permanent</c><01:22:53.280><c> you</c>

01:22:53.430 --> 01:22:53.440 align:start position:0%
because the file system is permanent you
 

01:22:53.440 --> 01:22:55.350 align:start position:0%
because the file system is permanent you
know<01:22:53.679><c> the</c><01:22:53.840><c> file</c><01:22:54.159><c> system</c><01:22:54.400><c> is</c><01:22:54.560><c> carried</c><01:22:54.960><c> over</c>

01:22:55.350 --> 01:22:55.360 align:start position:0%
know the file system is carried over
 

01:22:55.360 --> 01:22:58.550 align:start position:0%
know the file system is carried over
from<01:22:55.679><c> reboot</c><01:22:56.080><c> to</c><01:22:56.239><c> reboot</c><01:22:57.760><c> um</c>

01:22:58.550 --> 01:22:58.560 align:start position:0%
from reboot to reboot um
 

01:22:58.560 --> 01:23:00.149 align:start position:0%
from reboot to reboot um
we<01:22:58.800><c> we</c><01:22:58.960><c> need</c><01:22:59.120><c> to</c><01:22:59.199><c> leave</c><01:22:59.360><c> the</c><01:22:59.520><c> file</c><01:22:59.760><c> system</c><01:23:00.080><c> in</c>

01:23:00.149 --> 01:23:00.159 align:start position:0%
we we need to leave the file system in
 

01:23:00.159 --> 01:23:01.590 align:start position:0%
we we need to leave the file system in
good<01:23:00.400><c> shape</c><01:23:01.040><c> so</c>

01:23:01.590 --> 01:23:01.600 align:start position:0%
good shape so
 

01:23:01.600 --> 01:23:04.070 align:start position:0%
good shape so
if<01:23:01.760><c> we</c><01:23:01.920><c> were</c><01:23:02.159><c> in</c><01:23:02.239><c> the</c><01:23:02.400><c> middle</c><01:23:03.360><c> of</c><01:23:03.520><c> some</c><01:23:03.760><c> update</c>

01:23:04.070 --> 01:23:04.080 align:start position:0%
if we were in the middle of some update
 

01:23:04.080 --> 01:23:06.149 align:start position:0%
if we were in the middle of some update
to<01:23:04.239><c> the</c><01:23:04.320><c> file</c><01:23:04.560><c> system</c><01:23:04.880><c> like</c><01:23:05.040><c> creating</c><01:23:05.440><c> a</c><01:23:05.520><c> file</c>

01:23:06.149 --> 01:23:06.159 align:start position:0%
to the file system like creating a file
 

01:23:06.159 --> 01:23:08.390 align:start position:0%
to the file system like creating a file
then<01:23:06.800><c> we</c><01:23:07.280><c> and</c><01:23:07.440><c> we</c><01:23:07.520><c> want</c><01:23:07.679><c> to</c><01:23:07.760><c> shut</c><01:23:08.000><c> the</c><01:23:08.080><c> system</c>

01:23:08.390 --> 01:23:08.400 align:start position:0%
then we and we want to shut the system
 

01:23:08.400 --> 01:23:10.070 align:start position:0%
then we and we want to shut the system
down<01:23:08.639><c> or</c><01:23:08.800><c> the</c><01:23:08.880><c> power</c><01:23:09.199><c> fails</c><01:23:09.520><c> or</c><01:23:09.600><c> something</c><01:23:09.840><c> we</c>

01:23:10.070 --> 01:23:10.080 align:start position:0%
down or the power fails or something we
 

01:23:10.080 --> 01:23:11.910 align:start position:0%
down or the power fails or something we
absolutely<01:23:10.719><c> need</c><01:23:10.880><c> a</c><01:23:11.040><c> strategy</c>

01:23:11.910 --> 01:23:11.920 align:start position:0%
absolutely need a strategy
 

01:23:11.920 --> 01:23:14.709 align:start position:0%
absolutely need a strategy
to<01:23:12.080><c> make</c><01:23:12.320><c> sure</c><01:23:12.719><c> that</c><01:23:13.920><c> that</c><01:23:14.239><c> even</c><01:23:14.480><c> though</c><01:23:14.639><c> we</c>

01:23:14.709 --> 01:23:14.719 align:start position:0%
to make sure that that even though we
 

01:23:14.719 --> 01:23:15.830 align:start position:0%
to make sure that that even though we
were<01:23:14.880><c> in</c><01:23:14.960><c> the</c><01:23:15.040><c> middle</c><01:23:15.199><c> of</c><01:23:15.280><c> some</c><01:23:15.440><c> complex</c>

01:23:15.830 --> 01:23:15.840 align:start position:0%
were in the middle of some complex
 

01:23:15.840 --> 01:23:17.510 align:start position:0%
were in the middle of some complex
update<01:23:16.159><c> to</c><01:23:16.239><c> the</c><01:23:16.320><c> file</c><01:23:16.639><c> system</c><01:23:16.960><c> that</c><01:23:17.120><c> we</c><01:23:17.280><c> don't</c>

01:23:17.510 --> 01:23:17.520 align:start position:0%
update to the file system that we don't
 

01:23:17.520 --> 01:23:18.310 align:start position:0%
update to the file system that we don't
leave<01:23:17.679><c> it</c><01:23:17.840><c> in</c>

01:23:18.310 --> 01:23:18.320 align:start position:0%
leave it in
 

01:23:18.320 --> 01:23:20.470 align:start position:0%
leave it in
the<01:23:18.400><c> file</c><01:23:18.639><c> system</c><01:23:18.960><c> in</c><01:23:19.120><c> a</c><01:23:19.199><c> state</c><01:23:20.080><c> we</c><01:23:20.239><c> you</c><01:23:20.320><c> know</c>

01:23:20.470 --> 01:23:20.480 align:start position:0%
the file system in a state we you know
 

01:23:20.480 --> 01:23:22.790 align:start position:0%
the file system in a state we you know
don't<01:23:20.719><c> expose</c><01:23:21.199><c> any</c><01:23:21.440><c> broken</c><01:23:21.760><c> invariants</c>

01:23:22.790 --> 01:23:22.800 align:start position:0%
don't expose any broken invariants
 

01:23:22.800 --> 01:23:25.990 align:start position:0%
don't expose any broken invariants
in<01:23:22.960><c> the</c><01:23:23.120><c> on</c><01:23:23.520><c> disk</c><01:23:24.400><c> file</c><01:23:24.719><c> system</c><01:23:25.120><c> structures</c>

01:23:25.990 --> 01:23:26.000 align:start position:0%
in the on disk file system structures
 

01:23:26.000 --> 01:23:27.270 align:start position:0%
in the on disk file system structures
because<01:23:26.159><c> the</c><01:23:26.239><c> file</c><01:23:26.480><c> system's</c><01:23:26.800><c> really</c><01:23:27.040><c> just</c><01:23:27.199><c> a</c>

01:23:27.270 --> 01:23:27.280 align:start position:0%
because the file system's really just a
 

01:23:27.280 --> 01:23:29.750 align:start position:0%
because the file system's really just a
data<01:23:27.520><c> structure</c><01:23:27.840><c> that</c><01:23:28.000><c> lives</c><01:23:28.320><c> on</c><01:23:28.480><c> disk</c>

01:23:29.750 --> 01:23:29.760 align:start position:0%
data structure that lives on disk
 

01:23:29.760 --> 01:23:33.750 align:start position:0%
data structure that lives on disk
so<01:23:30.480><c> there's</c><01:23:30.719><c> only</c><01:23:30.880><c> like</c><01:23:31.120><c> a</c><01:23:31.600><c> a</c><01:23:31.760><c> lot</c><01:23:32.080><c> of</c>

01:23:33.750 --> 01:23:33.760 align:start position:0%
so there's only like a a lot of
 

01:23:33.760 --> 01:23:35.350 align:start position:0%
so there's only like a a lot of
sort<01:23:33.920><c> of</c><01:23:34.080><c> machinery</c><01:23:34.719><c> involved</c><01:23:35.120><c> in</c><01:23:35.199><c> like</c>

01:23:35.350 --> 01:23:35.360 align:start position:0%
sort of machinery involved in like
 

01:23:35.360 --> 01:23:37.110 align:start position:0%
sort of machinery involved in like
making<01:23:35.600><c> sure</c><01:23:35.760><c> that</c><01:23:35.920><c> if</c><01:23:36.080><c> you</c><01:23:36.159><c> shut</c><01:23:36.400><c> down</c><01:23:36.800><c> or</c><01:23:36.960><c> the</c>

01:23:37.110 --> 01:23:37.120 align:start position:0%
making sure that if you shut down or the
 

01:23:37.120 --> 01:23:39.430 align:start position:0%
making sure that if you shut down or the
power<01:23:37.440><c> fails</c><01:23:37.840><c> or</c><01:23:37.920><c> who</c><01:23:38.080><c> knows</c><01:23:38.320><c> what</c><01:23:38.639><c> that</c>

01:23:39.430 --> 01:23:39.440 align:start position:0%
power fails or who knows what that
 

01:23:39.440 --> 01:23:42.229 align:start position:0%
power fails or who knows what that
the<01:23:39.679><c> disk</c><01:23:40.560><c> can</c><01:23:40.880><c> that</c><01:23:41.040><c> we</c><01:23:41.199><c> can</c><01:23:41.280><c> recover</c><01:23:41.840><c> the</c>

01:23:42.229 --> 01:23:42.239 align:start position:0%
the disk can that we can recover the
 

01:23:42.239 --> 01:23:43.910 align:start position:0%
the disk can that we can recover the
file<01:23:42.560><c> system</c><01:23:42.880><c> on</c><01:23:43.040><c> disk</c>

01:23:43.910 --> 01:23:43.920 align:start position:0%
file system on disk
 

01:23:43.920 --> 01:23:46.149 align:start position:0%
file system on disk
um<01:23:44.960><c> for</c><01:23:45.120><c> the</c><01:23:45.199><c> rest</c><01:23:45.440><c> though</c><01:23:45.600><c> if</c><01:23:45.760><c> it's</c><01:23:45.840><c> not</c><01:23:46.000><c> for</c>

01:23:46.149 --> 01:23:46.159 align:start position:0%
um for the rest though if it's not for
 

01:23:46.159 --> 01:23:49.189 align:start position:0%
um for the rest though if it's not for
that

01:23:49.189 --> 01:23:49.199 align:start position:0%
 
 

01:23:49.199 --> 01:23:51.189 align:start position:0%
 
then<01:23:50.080><c> whether</c><01:23:50.320><c> you</c><01:23:50.400><c> have</c><01:23:50.480><c> to</c><01:23:50.639><c> do</c><01:23:50.800><c> anything</c>

01:23:51.189 --> 01:23:51.199 align:start position:0%
then whether you have to do anything
 

01:23:51.199 --> 01:23:52.629 align:start position:0%
then whether you have to do anything
special<01:23:51.520><c> to</c><01:23:51.679><c> shut</c><01:23:52.000><c> down</c>

01:23:52.629 --> 01:23:52.639 align:start position:0%
special to shut down
 

01:23:52.639 --> 01:23:55.189 align:start position:0%
special to shut down
depends<01:23:52.960><c> on</c><01:23:53.199><c> what</c><01:23:54.000><c> processes</c><01:23:54.480><c> you're</c><01:23:54.639><c> running</c>

01:23:55.189 --> 01:23:55.199 align:start position:0%
depends on what processes you're running
 

01:23:55.199 --> 01:23:56.950 align:start position:0%
depends on what processes you're running
if<01:23:55.360><c> you're</c><01:23:55.440><c> running</c><01:23:55.760><c> some</c><01:23:56.000><c> important</c><01:23:56.480><c> server</c>

01:23:56.950 --> 01:23:56.960 align:start position:0%
if you're running some important server
 

01:23:56.960 --> 01:23:58.629 align:start position:0%
if you're running some important server
you<01:23:57.040><c> know</c><01:23:57.199><c> a</c><01:23:57.280><c> database</c><01:23:57.760><c> server</c><01:23:58.239><c> that</c>

01:23:58.629 --> 01:23:58.639 align:start position:0%
you know a database server that
 

01:23:58.639 --> 01:24:00.629 align:start position:0%
you know a database server that
a<01:23:58.719><c> lot</c><01:23:58.880><c> of</c><01:23:59.199><c> other</c><01:23:59.440><c> computers</c><01:23:59.920><c> depend</c><01:24:00.320><c> on</c><01:24:00.560><c> and</c>

01:24:00.629 --> 01:24:00.639 align:start position:0%
a lot of other computers depend on and
 

01:24:00.639 --> 01:24:02.709 align:start position:0%
a lot of other computers depend on and
use<01:24:00.880><c> over</c><01:24:01.040><c> the</c><01:24:01.120><c> network</c>

01:24:02.709 --> 01:24:02.719 align:start position:0%
use over the network
 

01:24:02.719 --> 01:24:04.629 align:start position:0%
use over the network
who<01:24:02.960><c> knows</c><01:24:03.679><c> you</c><01:24:03.760><c> know</c><01:24:03.920><c> the</c><01:24:04.000><c> answer</c><01:24:04.239><c> may</c><01:24:04.400><c> be</c>

01:24:04.629 --> 01:24:04.639 align:start position:0%
who knows you know the answer may be
 

01:24:04.639 --> 01:24:06.149 align:start position:0%
who knows you know the answer may be
that<01:24:04.800><c> you</c><01:24:05.040><c> just</c><01:24:05.199><c> cannot</c><01:24:05.440><c> be</c><01:24:05.600><c> allowed</c><01:24:05.840><c> to</c><01:24:05.920><c> shut</c>

01:24:06.149 --> 01:24:06.159 align:start position:0%
that you just cannot be allowed to shut
 

01:24:06.159 --> 01:24:07.030 align:start position:0%
that you just cannot be allowed to shut
down<01:24:06.480><c> because</c>

01:24:07.030 --> 01:24:07.040 align:start position:0%
down because
 

01:24:07.040 --> 01:24:08.790 align:start position:0%
down because
you're<01:24:07.199><c> providing</c><01:24:07.600><c> a</c><01:24:07.679><c> service</c><01:24:08.239><c> that's</c>

01:24:08.790 --> 01:24:08.800 align:start position:0%
you're providing a service that's
 

01:24:08.800 --> 01:24:11.030 align:start position:0%
you're providing a service that's
critical<01:24:09.120><c> to</c><01:24:09.199><c> a</c><01:24:09.280><c> bunch</c><01:24:09.440><c> of</c><01:24:09.600><c> other</c><01:24:09.760><c> computers</c>

01:24:11.030 --> 01:24:11.040 align:start position:0%
critical to a bunch of other computers
 

01:24:11.040 --> 01:24:12.229 align:start position:0%
critical to a bunch of other computers
if<01:24:11.120><c> your</c><01:24:11.280><c> computer's</c><01:24:11.600><c> not</c><01:24:11.760><c> doing</c><01:24:11.920><c> much</c><01:24:12.080><c> of</c>

01:24:12.229 --> 01:24:12.239 align:start position:0%
if your computer's not doing much of
 

01:24:12.239 --> 01:24:15.189 align:start position:0%
if your computer's not doing much of
anything

01:24:15.189 --> 01:24:15.199 align:start position:0%
 
 

01:24:15.199 --> 01:24:18.229 align:start position:0%
 
then<01:24:15.440><c> you</c><01:24:15.520><c> can</c><01:24:15.600><c> just</c><01:24:15.760><c> turn</c><01:24:16.000><c> it</c><01:24:16.159><c> off</c><01:24:16.960><c> and</c><01:24:18.159><c> it</c>

01:24:18.229 --> 01:24:18.239 align:start position:0%
then you can just turn it off and it
 

01:24:18.239 --> 01:24:19.910 align:start position:0%
then you can just turn it off and it
will<01:24:18.400><c> stop</c><01:24:18.639><c> executing</c>

01:24:19.910 --> 01:24:19.920 align:start position:0%
will stop executing
 

01:24:19.920 --> 01:24:21.830 align:start position:0%
will stop executing
and<01:24:20.080><c> there's</c><01:24:20.320><c> not</c><01:24:20.480><c> much</c><01:24:20.719><c> to</c><01:24:20.880><c> do</c><01:24:21.120><c> i</c><01:24:21.199><c> mean</c><01:24:21.360><c> really</c>

01:24:21.830 --> 01:24:21.840 align:start position:0%
and there's not much to do i mean really
 

01:24:21.840 --> 01:24:24.229 align:start position:0%
and there's not much to do i mean really
maybe<01:24:22.080><c> the</c><01:24:22.159><c> answer</c><01:24:22.400><c> to</c><01:24:22.480><c> your</c><01:24:22.560><c> question</c><01:24:22.880><c> is</c>

01:24:24.229 --> 01:24:24.239 align:start position:0%
maybe the answer to your question is
 

01:24:24.239 --> 01:24:25.350 align:start position:0%
maybe the answer to your question is
if<01:24:24.400><c> you</c><01:24:24.480><c> want</c><01:24:24.560><c> to</c><01:24:24.639><c> shut</c><01:24:24.800><c> down</c><01:24:24.960><c> the</c><01:24:25.040><c> computer</c>

01:24:25.350 --> 01:24:25.360 align:start position:0%
if you want to shut down the computer
 

01:24:25.360 --> 01:24:26.629 align:start position:0%
if you want to shut down the computer
make<01:24:25.440><c> sure</c><01:24:25.600><c> the</c><01:24:25.679><c> file</c><01:24:25.920><c> system</c><01:24:26.159><c> is</c><01:24:26.320><c> good</c><01:24:26.560><c> in</c>

01:24:26.629 --> 01:24:26.639 align:start position:0%
make sure the file system is good in
 

01:24:26.639 --> 01:24:27.270 align:start position:0%
make sure the file system is good in
good<01:24:26.880><c> shape</c>

01:24:27.270 --> 01:24:27.280 align:start position:0%
good shape
 

01:24:27.280 --> 01:24:29.510 align:start position:0%
good shape
and<01:24:27.360><c> then</c><01:24:27.600><c> stop</c><01:24:27.840><c> executing</c><01:24:28.400><c> instructions</c><01:24:29.440><c> and</c>

01:24:29.510 --> 01:24:29.520 align:start position:0%
and then stop executing instructions and
 

01:24:29.520 --> 01:24:32.070 align:start position:0%
and then stop executing instructions and
that's<01:24:29.760><c> fine</c>

01:24:32.070 --> 01:24:32.080 align:start position:0%
 
 

01:24:32.080 --> 01:24:37.030 align:start position:0%
 
that<01:24:32.239><c> makes</c><01:24:32.400><c> sense</c><01:24:33.040><c> yeah</c><01:24:33.440><c> thank</c><01:24:33.600><c> you</c>

01:24:37.030 --> 01:24:37.040 align:start position:0%
 
 

01:24:37.040 --> 01:24:41.910 align:start position:0%
 
anything<01:24:37.360><c> else</c>

01:24:41.910 --> 01:24:41.920 align:start position:0%
 
 

01:24:41.920 --> 01:24:44.310 align:start position:0%
 
oh<01:24:42.159><c> sorry</c><01:24:42.800><c> i</c><01:24:43.120><c> have</c><01:24:43.280><c> another</c><01:24:43.600><c> question</c><01:24:43.920><c> so</c><01:24:44.080><c> what</c>

01:24:44.310 --> 01:24:44.320 align:start position:0%
oh sorry i have another question so what
 

01:24:44.320 --> 01:24:45.910 align:start position:0%
oh sorry i have another question so what
is<01:24:44.560><c> the</c><01:24:44.719><c> semaphore</c>

01:24:45.910 --> 01:24:45.920 align:start position:0%
is the semaphore
 

01:24:45.920 --> 01:24:53.430 align:start position:0%
is the semaphore
interface<01:24:48.480><c> we're</c><01:24:48.639><c> talking</c><01:24:48.800><c> about</c><01:24:49.040><c> p</c><01:24:49.199><c> and</c><01:24:49.360><c> v</c>

01:24:53.430 --> 01:24:53.440 align:start position:0%
 
 

01:24:53.440 --> 01:24:58.709 align:start position:0%
 
so<01:24:54.320><c> just</c><01:24:54.639><c> to</c><01:24:55.600><c> just</c><01:24:55.840><c> those</c><01:24:56.080><c> two</c><01:24:56.840><c> functions</c><01:24:57.679><c> um</c>

01:24:58.709 --> 01:24:58.719 align:start position:0%
so just to just those two functions um
 

01:24:58.719 --> 01:25:02.149 align:start position:0%
so just to just those two functions um
yeah<01:25:00.080><c> oh</c><01:25:00.320><c> yeah</c><01:25:00.800><c> xb6</c><01:25:01.280><c> doesn't</c><01:25:01.440><c> have</c><01:25:01.600><c> semaphores</c>

01:25:02.149 --> 01:25:02.159 align:start position:0%
yeah oh yeah xb6 doesn't have semaphores
 

01:25:02.159 --> 01:25:02.870 align:start position:0%
yeah oh yeah xb6 doesn't have semaphores
really<01:25:02.400><c> but</c>

01:25:02.870 --> 01:25:02.880 align:start position:0%
really but
 

01:25:02.880 --> 01:25:04.070 align:start position:0%
really but
you<01:25:03.040><c> know</c><01:25:03.120><c> the</c><01:25:03.199><c> book's</c><01:25:03.440><c> sum</c><01:25:03.600><c> before</c><01:25:03.840><c> so</c><01:25:04.000><c> i</c>

01:25:04.070 --> 01:25:04.080 align:start position:0%
you know the book's sum before so i
 

01:25:04.080 --> 01:25:05.669 align:start position:0%
you know the book's sum before so i
think<01:25:04.159><c> it's</c><01:25:04.239><c> just</c><01:25:04.400><c> p</c><01:25:04.560><c> and</c><01:25:04.639><c> v</c><01:25:05.040><c> there's</c><01:25:05.199><c> just</c><01:25:05.360><c> two</c>

01:25:05.669 --> 01:25:05.679 align:start position:0%
think it's just p and v there's just two
 

01:25:05.679 --> 01:25:06.950 align:start position:0%
think it's just p and v there's just two
those<01:25:05.840><c> are</c><01:25:05.920><c> two</c><01:25:06.080><c> methods</c><01:25:06.560><c> you</c><01:25:06.639><c> know</c><01:25:06.800><c> you</c><01:25:06.880><c> have</c>

01:25:06.950 --> 01:25:06.960 align:start position:0%
those are two methods you know you have
 

01:25:06.960 --> 01:25:08.629 align:start position:0%
those are two methods you know you have
a<01:25:07.040><c> semaphore</c><01:25:07.440><c> object</c><01:25:07.760><c> there's</c><01:25:07.920><c> two</c><01:25:08.080><c> methods</c>

01:25:08.629 --> 01:25:08.639 align:start position:0%
a semaphore object there's two methods
 

01:25:08.639 --> 01:25:13.110 align:start position:0%
a semaphore object there's two methods
p<01:25:08.880><c> and</c><01:25:08.960><c> v</c><01:25:11.199><c> okay</c><01:25:11.840><c> i</c><01:25:12.000><c> see</c><01:25:12.159><c> you</c><01:25:12.239><c> thank</c><01:25:12.480><c> you</c>

01:25:13.110 --> 01:25:13.120 align:start position:0%
p and v okay i see you thank you
 

01:25:13.120 --> 01:25:20.550 align:start position:0%
p and v okay i see you thank you
sure

01:25:20.550 --> 01:25:20.560 align:start position:0%
 
 

01:25:20.560 --> 01:25:25.110 align:start position:0%
 
anything<01:25:20.880><c> else</c>

01:25:25.110 --> 01:25:25.120 align:start position:0%
 
 

01:25:25.120 --> 01:25:27.840 align:start position:0%
 
all<01:25:25.280><c> right</c>

