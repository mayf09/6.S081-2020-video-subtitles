WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:02.070 align:start position:0%
 
valid<00:00:00.480><c> address</c><00:00:00.960><c> yeah</c><00:00:01.120><c> he</c><00:00:01.280><c> had</c><00:00:01.520><c> to</c><00:00:01.599><c> be</c><00:00:01.760><c> not</c><00:00:01.920><c> so</c>

00:00:02.070 --> 00:00:02.080 align:start position:0%
valid address yeah he had to be not so
 

00:00:02.080 --> 00:00:06.869 align:start position:0%
valid address yeah he had to be not so
good

00:00:06.869 --> 00:00:06.879 align:start position:0%
 
 

00:00:06.879 --> 00:00:10.629 align:start position:0%
 
good<00:00:07.120><c> how</c><00:00:07.279><c> about</c><00:00:07.520><c> erica</c><00:00:08.800><c> how's</c><00:00:09.120><c> the</c>

00:00:10.629 --> 00:00:10.639 align:start position:0%
good how about erica how's the
 

00:00:10.639 --> 00:00:13.110 align:start position:0%
good how about erica how's the
lazy<00:00:10.960><c> life</c><00:00:11.200><c> for</c><00:00:11.280><c> you</c><00:00:12.080><c> um</c><00:00:12.480><c> i</c><00:00:12.639><c> also</c><00:00:12.880><c> thought</c><00:00:13.040><c> it</c>

00:00:13.110 --> 00:00:13.120 align:start position:0%
lazy life for you um i also thought it
 

00:00:13.120 --> 00:00:13.669 align:start position:0%
lazy life for you um i also thought it
was<00:00:13.280><c> okay</c>

00:00:13.669 --> 00:00:13.679 align:start position:0%
was okay
 

00:00:13.679 --> 00:00:15.990 align:start position:0%
was okay
and<00:00:14.080><c> um</c><00:00:14.400><c> i</c><00:00:14.559><c> also</c><00:00:14.799><c> had</c><00:00:14.960><c> a</c><00:00:15.120><c> bug</c><00:00:15.440><c> with</c><00:00:15.599><c> the</c><00:00:15.679><c> coffee</c>

00:00:15.990 --> 00:00:16.000 align:start position:0%
and um i also had a bug with the coffee
 

00:00:16.000 --> 00:00:17.590 align:start position:0%
and um i also had a bug with the coffee
and<00:00:16.160><c> coffee</c><00:00:16.480><c> app</c><00:00:16.800><c> but</c><00:00:17.039><c> uh</c>

00:00:17.590 --> 00:00:17.600 align:start position:0%
and coffee app but uh
 

00:00:17.600 --> 00:00:20.870 align:start position:0%
and coffee app but uh
got<00:00:17.760><c> that</c><00:00:17.920><c> result</c><00:00:18.480><c> so</c><00:00:19.119><c> yeah</c><00:00:20.480><c> yeah</c><00:00:20.640><c> i</c><00:00:20.720><c> think</c>

00:00:20.870 --> 00:00:20.880 align:start position:0%
got that result so yeah yeah i think
 

00:00:20.880 --> 00:00:21.670 align:start position:0%
got that result so yeah yeah i think
it's<00:00:21.039><c> one</c><00:00:21.119><c> of</c><00:00:21.199><c> those</c>

00:00:21.670 --> 00:00:21.680 align:start position:0%
it's one of those
 

00:00:21.680 --> 00:00:22.950 align:start position:0%
it's one of those
tricky<00:00:21.920><c> cases</c><00:00:22.240><c> that</c><00:00:22.320><c> you</c><00:00:22.400><c> might</c><00:00:22.560><c> not</c><00:00:22.720><c> think</c>

00:00:22.950 --> 00:00:22.960 align:start position:0%
tricky cases that you might not think
 

00:00:22.960 --> 00:00:26.310 align:start position:0%
tricky cases that you might not think
about<00:00:23.199><c> when</c><00:00:23.359><c> you</c><00:00:23.439><c> start</c><00:00:23.840><c> programming</c>

00:00:26.310 --> 00:00:26.320 align:start position:0%
about when you start programming
 

00:00:26.320 --> 00:00:28.830 align:start position:0%
about when you start programming
but<00:00:26.560><c> luckily</c><00:00:27.039><c> user</c><00:00:27.359><c> tests</c><00:00:27.599><c> will</c><00:00:27.760><c> find</c><00:00:28.000><c> it</c><00:00:28.080><c> for</c>

00:00:28.830 --> 00:00:28.840 align:start position:0%
but luckily user tests will find it for
 

00:00:28.840 --> 00:00:34.150 align:start position:0%
but luckily user tests will find it for
you

00:00:34.150 --> 00:00:34.160 align:start position:0%
 
 

00:00:34.160 --> 00:00:37.510 align:start position:0%
 
caroline<00:00:35.840><c> ortega</c>

00:00:37.510 --> 00:00:37.520 align:start position:0%
caroline ortega
 

00:00:37.520 --> 00:00:39.590 align:start position:0%
caroline ortega
the<00:00:37.680><c> lab</c><00:00:37.920><c> is</c><00:00:38.079><c> going</c><00:00:38.320><c> good</c><00:00:38.640><c> um</c><00:00:39.200><c> i</c><00:00:39.280><c> haven't</c>

00:00:39.590 --> 00:00:39.600 align:start position:0%
the lab is going good um i haven't
 

00:00:39.600 --> 00:00:42.950 align:start position:0%
the lab is going good um i haven't
finished<00:00:40.000><c> yet</c><00:00:40.399><c> actually</c>

00:00:42.950 --> 00:00:42.960 align:start position:0%
 
 

00:00:42.960 --> 00:00:52.470 align:start position:0%
 
all<00:00:43.040><c> right</c><00:00:43.200><c> so</c><00:00:43.360><c> worry</c><00:00:43.600><c> about</c><00:00:43.840><c> copying</c><00:00:44.480><c> i</c><00:00:44.559><c> guess</c>

00:00:52.470 --> 00:00:52.480 align:start position:0%
 
 

00:00:52.480 --> 00:00:56.229 align:start position:0%
 
how<00:00:52.640><c> about</c><00:00:53.120><c> kendall</c><00:00:53.520><c> garner</c>

00:00:56.229 --> 00:00:56.239 align:start position:0%
 
 

00:00:56.239 --> 00:00:59.430 align:start position:0%
 
i<00:00:56.320><c> think</c><00:00:56.480><c> for</c><00:00:56.640><c> the</c><00:00:56.719><c> most</c><00:00:56.960><c> part</c><00:00:58.719><c> it</c><00:00:58.800><c> was</c>

00:00:59.430 --> 00:00:59.440 align:start position:0%
i think for the most part it was
 

00:00:59.440 --> 00:01:02.229 align:start position:0%
i think for the most part it was
not<00:00:59.760><c> too</c><00:01:00.000><c> bad</c><00:01:00.960><c> for</c><00:01:01.120><c> me</c><00:01:01.440><c> probably</c><00:01:01.760><c> the</c><00:01:01.840><c> weirdest</c>

00:01:02.229 --> 00:01:02.239 align:start position:0%
not too bad for me probably the weirdest
 

00:01:02.239 --> 00:01:04.149 align:start position:0%
not too bad for me probably the weirdest
part<00:01:02.399><c> was</c><00:01:02.559><c> just</c><00:01:02.800><c> trying</c><00:01:03.199><c> to</c><00:01:03.520><c> figure</c><00:01:03.920><c> out</c><00:01:04.000><c> when</c>

00:01:04.149 --> 00:01:04.159 align:start position:0%
part was just trying to figure out when
 

00:01:04.159 --> 00:01:04.789 align:start position:0%
part was just trying to figure out when
it<00:01:04.320><c> went</c>

00:01:04.789 --> 00:01:04.799 align:start position:0%
it went
 

00:01:04.799 --> 00:01:08.789 align:start position:0%
it went
below<00:01:05.680><c> bounds</c><00:01:06.240><c> of</c><00:01:06.320><c> the</c><00:01:06.479><c> stack</c>

00:01:08.789 --> 00:01:08.799 align:start position:0%
below bounds of the stack
 

00:01:08.799 --> 00:01:16.870 align:start position:0%
below bounds of the stack
ah<00:01:09.119><c> yeah</c><00:01:10.640><c> into</c><00:01:10.880><c> the</c><00:01:10.960><c> guard</c><00:01:11.200><c> page</c><00:01:11.520><c> basically</c>

00:01:16.870 --> 00:01:16.880 align:start position:0%
 
 

00:01:16.880 --> 00:01:20.070 align:start position:0%
 
good<00:01:18.880><c> okay</c><00:01:19.439><c> well</c>

00:01:20.070 --> 00:01:20.080 align:start position:0%
good okay well
 

00:01:20.080 --> 00:01:23.429 align:start position:0%
good okay well
uh<00:01:20.320><c> so</c><00:01:20.560><c> it's</c><00:01:20.640><c> about</c><00:01:21.040><c> time</c><00:01:21.200><c> to</c><00:01:21.280><c> get</c><00:01:21.520><c> started</c><00:01:22.880><c> uh</c>

00:01:23.429 --> 00:01:23.439 align:start position:0%
uh so it's about time to get started uh
 

00:01:23.439 --> 00:01:26.710 align:start position:0%
uh so it's about time to get started uh
so<00:01:23.840><c> welcome</c><00:01:24.479><c> to</c><00:01:25.040><c> the</c><00:01:25.200><c> next</c><00:01:25.439><c> lecture</c><00:01:26.080><c> in</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
so welcome to the next lecture in
 

00:01:26.720 --> 00:01:29.270 align:start position:0%
so welcome to the next lecture in
s081<00:01:27.840><c> wherever</c><00:01:28.159><c> you</c><00:01:28.400><c> are</c><00:01:28.640><c> in</c><00:01:28.720><c> whatever</c><00:01:29.040><c> time</c>

00:01:29.270 --> 00:01:29.280 align:start position:0%
s081 wherever you are in whatever time
 

00:01:29.280 --> 00:01:31.429 align:start position:0%
s081 wherever you are in whatever time
zone

00:01:31.429 --> 00:01:31.439 align:start position:0%
zone
 

00:01:31.439 --> 00:01:34.710 align:start position:0%
zone
so<00:01:31.600><c> today's</c><00:01:31.920><c> lecture</c><00:01:32.240><c> is</c><00:01:32.400><c> about</c><00:01:32.880><c> locks</c>

00:01:34.710 --> 00:01:34.720 align:start position:0%
so today's lecture is about locks
 

00:01:34.720 --> 00:01:36.789 align:start position:0%
so today's lecture is about locks
and<00:01:35.040><c> you</c><00:01:35.200><c> probably</c><00:01:35.520><c> have</c><00:01:35.600><c> seen</c><00:01:35.840><c> locks</c><00:01:36.320><c> in</c>

00:01:36.789 --> 00:01:36.799 align:start position:0%
and you probably have seen locks in
 

00:01:36.799 --> 00:01:38.630 align:start position:0%
and you probably have seen locks in
previous<00:01:37.200><c> classes</c>

00:01:38.630 --> 00:01:38.640 align:start position:0%
previous classes
 

00:01:38.640 --> 00:01:40.550 align:start position:0%
previous classes
or<00:01:38.960><c> at</c><00:01:39.040><c> least</c><00:01:39.520><c> i've</c><00:01:39.600><c> been</c><00:01:39.840><c> in</c><00:01:40.000><c> touch</c><00:01:40.240><c> with</c><00:01:40.400><c> them</c>

00:01:40.550 --> 00:01:40.560 align:start position:0%
or at least i've been in touch with them
 

00:01:40.560 --> 00:01:42.069 align:start position:0%
or at least i've been in touch with them
in<00:01:40.640><c> some</c><00:01:40.799><c> way</c><00:01:41.040><c> or</c><00:01:41.119><c> another</c><00:01:41.600><c> uh</c>

00:01:42.069 --> 00:01:42.079 align:start position:0%
in some way or another uh
 

00:01:42.079 --> 00:01:43.510 align:start position:0%
in some way or another uh
and<00:01:42.240><c> so</c><00:01:42.640><c> this</c><00:01:42.799><c> lecture's</c><00:01:43.119><c> a</c><00:01:43.200><c> little</c><00:01:43.280><c> bit</c><00:01:43.360><c> of</c><00:01:43.439><c> a</c>

00:01:43.510 --> 00:01:43.520 align:start position:0%
and so this lecture's a little bit of a
 

00:01:43.520 --> 00:01:45.429 align:start position:0%
and so this lecture's a little bit of a
conceptual<00:01:44.000><c> lecture</c><00:01:44.479><c> uh</c><00:01:44.799><c> may</c><00:01:44.960><c> overlap</c><00:01:45.360><c> a</c>

00:01:45.429 --> 00:01:45.439 align:start position:0%
conceptual lecture uh may overlap a
 

00:01:45.439 --> 00:01:47.030 align:start position:0%
conceptual lecture uh may overlap a
little<00:01:45.600><c> bit</c><00:01:45.759><c> with</c><00:01:45.920><c> some</c><00:01:46.159><c> uh</c>

00:01:47.030 --> 00:01:47.040 align:start position:0%
little bit with some uh
 

00:01:47.040 --> 00:01:48.630 align:start position:0%
little bit with some uh
things<00:01:47.200><c> you've</c><00:01:47.360><c> seen</c><00:01:47.520><c> before</c><00:01:47.840><c> for</c><00:01:48.240><c> locks</c><00:01:48.479><c> but</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
things you've seen before for locks but
 

00:01:48.640 --> 00:01:50.630 align:start position:0%
things you've seen before for locks but
we'll<00:01:48.960><c> uh</c><00:01:49.680><c> have</c><00:01:49.840><c> a</c><00:01:49.920><c> little</c><00:01:50.079><c> bit</c><00:01:50.159><c> more</c><00:01:50.320><c> of</c><00:01:50.479><c> a</c>

00:01:50.630 --> 00:01:50.640 align:start position:0%
we'll uh have a little bit more of a
 

00:01:50.640 --> 00:01:52.469 align:start position:0%
we'll uh have a little bit more of a
kernel<00:01:51.040><c> and</c><00:01:51.200><c> os</c><00:01:51.520><c> focus</c>

00:01:52.469 --> 00:01:52.479 align:start position:0%
kernel and os focus
 

00:01:52.479 --> 00:01:55.590 align:start position:0%
kernel and os focus
and<00:01:52.799><c> that</c><00:01:52.960><c> changes</c><00:01:53.360><c> a</c><00:01:53.439><c> couple</c><00:01:53.680><c> things</c><00:01:54.720><c> um</c><00:01:55.439><c> so</c>

00:01:55.590 --> 00:01:55.600 align:start position:0%
and that changes a couple things um so
 

00:01:55.600 --> 00:01:57.429 align:start position:0%
and that changes a couple things um so
just<00:01:55.840><c> to</c><00:01:56.159><c> get</c><00:01:56.399><c> started</c><00:01:56.880><c> you</c><00:01:56.960><c> know</c><00:01:57.040><c> let's</c><00:01:57.280><c> just</c>

00:01:57.429 --> 00:01:57.439 align:start position:0%
just to get started you know let's just
 

00:01:57.439 --> 00:01:58.310 align:start position:0%
just to get started you know let's just
remind<00:01:57.759><c> ourselves</c>

00:01:58.310 --> 00:01:58.320 align:start position:0%
remind ourselves
 

00:01:58.320 --> 00:02:01.749 align:start position:0%
remind ourselves
uh<00:01:58.719><c> why</c><00:01:58.960><c> we</c><00:01:59.119><c> need</c><00:01:59.360><c> locks</c><00:02:00.000><c> um</c><00:02:01.280><c> you</c><00:02:01.439><c> know</c><00:02:01.600><c> and</c><00:02:01.680><c> i</c>

00:02:01.749 --> 00:02:01.759 align:start position:0%
uh why we need locks um you know and i
 

00:02:01.759 --> 00:02:03.030 align:start position:0%
uh why we need locks um you know and i
guess<00:02:01.920><c> the</c><00:02:02.079><c> starting</c><00:02:02.320><c> point</c><00:02:02.560><c> is</c><00:02:02.640><c> really</c><00:02:02.880><c> that</c>

00:02:03.030 --> 00:02:03.040 align:start position:0%
guess the starting point is really that
 

00:02:03.040 --> 00:02:05.109 align:start position:0%
guess the starting point is really that
applications

00:02:05.109 --> 00:02:05.119 align:start position:0%
applications
 

00:02:05.119 --> 00:02:12.229 align:start position:0%
applications
uh<00:02:05.759><c> want</c><00:02:05.920><c> to</c><00:02:06.079><c> use</c><00:02:06.240><c> multiple</c><00:02:06.840><c> cores</c>

00:02:12.229 --> 00:02:12.239 align:start position:0%
 
 

00:02:12.239 --> 00:02:13.510 align:start position:0%
 
they<00:02:12.319><c> want</c><00:02:12.480><c> to</c><00:02:12.560><c> use</c><00:02:12.720><c> multiple</c><00:02:13.040><c> cores</c><00:02:13.280><c> to</c><00:02:13.360><c> get</c>

00:02:13.510 --> 00:02:13.520 align:start position:0%
they want to use multiple cores to get
 

00:02:13.520 --> 00:02:16.869 align:start position:0%
they want to use multiple cores to get
performance

00:02:16.869 --> 00:02:16.879 align:start position:0%
 
 

00:02:16.879 --> 00:02:20.070 align:start position:0%
 
and<00:02:17.040><c> so</c><00:02:17.280><c> if</c><00:02:17.360><c> an</c><00:02:17.440><c> application</c><00:02:18.000><c> actually</c>

00:02:20.070 --> 00:02:20.080 align:start position:0%
and so if an application actually
 

00:02:20.080 --> 00:02:22.070 align:start position:0%
and so if an application actually
wants<00:02:20.319><c> to</c><00:02:20.400><c> do</c><00:02:20.879><c> runs</c><00:02:21.120><c> on</c><00:02:21.280><c> multiple</c><00:02:21.599><c> cores</c><00:02:21.920><c> and</c>

00:02:22.070 --> 00:02:22.080 align:start position:0%
wants to do runs on multiple cores and
 

00:02:22.080 --> 00:02:23.589 align:start position:0%
wants to do runs on multiple cores and
presumably<00:02:22.480><c> once</c><00:02:22.720><c> the</c><00:02:23.040><c> in</c>

00:02:23.589 --> 00:02:23.599 align:start position:0%
presumably once the in
 

00:02:23.599 --> 00:02:24.710 align:start position:0%
presumably once the in
this<00:02:23.840><c> course</c><00:02:24.080><c> or</c><00:02:24.239><c> the</c><00:02:24.319><c> parts</c><00:02:24.560><c> of</c><00:02:24.640><c> the</c>

00:02:24.710 --> 00:02:24.720 align:start position:0%
this course or the parts of the
 

00:02:24.720 --> 00:02:26.630 align:start position:0%
this course or the parts of the
application<00:02:25.120><c> may</c><00:02:25.280><c> invoke</c><00:02:25.599><c> system</c><00:02:25.840><c> calls</c>

00:02:26.630 --> 00:02:26.640 align:start position:0%
application may invoke system calls
 

00:02:26.640 --> 00:02:30.150 align:start position:0%
application may invoke system calls
and<00:02:26.720><c> so</c><00:02:26.959><c> the</c><00:02:27.040><c> kernel</c><00:02:27.360><c> must</c><00:02:27.599><c> be</c><00:02:27.680><c> able</c><00:02:27.920><c> to</c><00:02:28.080><c> handle</c>

00:02:30.150 --> 00:02:30.160 align:start position:0%
and so the kernel must be able to handle
 

00:02:30.160 --> 00:02:45.430 align:start position:0%
and so the kernel must be able to handle
uh<00:02:31.200><c> you</c><00:02:31.280><c> must</c><00:02:31.519><c> handle</c><00:02:31.840><c> parallel</c><00:02:32.160><c> system</c><00:02:34.840><c> calls</c>

00:02:45.430 --> 00:02:45.440 align:start position:0%
 
 

00:02:45.440 --> 00:02:47.830 align:start position:0%
 
uh<00:02:45.840><c> and</c><00:02:45.920><c> that</c><00:02:46.160><c> means</c><00:02:46.560><c> that</c><00:02:46.800><c> you</c><00:02:46.959><c> know</c><00:02:47.200><c> if</c><00:02:47.680><c> these</c>

00:02:47.830 --> 00:02:47.840 align:start position:0%
uh and that means that you know if these
 

00:02:47.840 --> 00:02:49.750 align:start position:0%
uh and that means that you know if these
system<00:02:48.160><c> calls</c><00:02:48.560><c> run</c><00:02:48.800><c> in</c><00:02:48.959><c> parallel</c><00:02:49.519><c> on</c>

00:02:49.750 --> 00:02:49.760 align:start position:0%
system calls run in parallel on
 

00:02:49.760 --> 00:02:51.270 align:start position:0%
system calls run in parallel on
different<00:02:50.080><c> course</c>

00:02:51.270 --> 00:02:51.280 align:start position:0%
different course
 

00:02:51.280 --> 00:02:54.229 align:start position:0%
different course
they<00:02:51.440><c> may</c><00:02:51.680><c> actually</c><00:02:52.400><c> access</c><00:02:53.680><c> shared</c><00:02:53.920><c> data</c>

00:02:54.229 --> 00:02:54.239 align:start position:0%
they may actually access shared data
 

00:02:54.239 --> 00:02:58.229 align:start position:0%
they may actually access shared data
structures

00:02:58.229 --> 00:02:58.239 align:start position:0%
 
 

00:02:58.239 --> 00:03:04.309 align:start position:0%
 
the<00:02:58.400><c> instructions</c><00:02:58.879><c> in</c><00:03:02.840><c> parallel</c>

00:03:04.309 --> 00:03:04.319 align:start position:0%
the instructions in parallel
 

00:03:04.319 --> 00:03:06.790 align:start position:0%
the instructions in parallel
and<00:03:04.560><c> as</c><00:03:04.720><c> you've</c><00:03:05.120><c> seen</c><00:03:05.280><c> by</c><00:03:05.440><c> now</c><00:03:05.760><c> actually</c><00:03:06.080><c> x6</c>

00:03:06.790 --> 00:03:06.800 align:start position:0%
and as you've seen by now actually x6
 

00:03:06.800 --> 00:03:08.149 align:start position:0%
and as you've seen by now actually x6
has<00:03:07.120><c> quite</c><00:03:07.440><c> a</c><00:03:07.519><c> number</c><00:03:07.840><c> of</c>

00:03:08.149 --> 00:03:08.159 align:start position:0%
has quite a number of
 

00:03:08.159 --> 00:03:09.589 align:start position:0%
has quite a number of
you<00:03:08.239><c> know</c><00:03:08.400><c> shared</c><00:03:08.640><c> data</c><00:03:08.959><c> structures</c><00:03:09.360><c> you</c><00:03:09.440><c> know</c>

00:03:09.589 --> 00:03:09.599 align:start position:0%
you know shared data structures you know
 

00:03:09.599 --> 00:03:11.990 align:start position:0%
you know shared data structures you know
whether<00:03:09.840><c> it's</c><00:03:09.920><c> the</c><00:03:10.080><c> proc</c><00:03:10.319><c> structures</c><00:03:10.959><c> or</c>

00:03:11.990 --> 00:03:12.000 align:start position:0%
whether it's the proc structures or
 

00:03:12.000 --> 00:03:16.070 align:start position:0%
whether it's the proc structures or
uh<00:03:12.959><c> you</c><00:03:13.040><c> know</c><00:03:13.280><c> ticks</c><00:03:13.760><c> or</c><00:03:14.400><c> you</c><00:03:14.560><c> know</c>

00:03:16.070 --> 00:03:16.080 align:start position:0%
uh you know ticks or you know
 

00:03:16.080 --> 00:03:17.830 align:start position:0%
uh you know ticks or you know
later<00:03:16.400><c> we'll</c><00:03:16.560><c> see</c><00:03:16.879><c> the</c><00:03:17.040><c> buffer</c><00:03:17.360><c> cache</c><00:03:17.760><c> you</c>

00:03:17.830 --> 00:03:17.840 align:start position:0%
later we'll see the buffer cache you
 

00:03:17.840 --> 00:03:19.350 align:start position:0%
later we'll see the buffer cache you
know<00:03:18.000><c> there's</c><00:03:18.239><c> actually</c><00:03:18.560><c> a</c><00:03:18.800><c> ton</c><00:03:19.040><c> of</c><00:03:19.120><c> shared</c>

00:03:19.350 --> 00:03:19.360 align:start position:0%
know there's actually a ton of shared
 

00:03:19.360 --> 00:03:20.949 align:start position:0%
know there's actually a ton of shared
data<00:03:19.599><c> structures</c>

00:03:20.949 --> 00:03:20.959 align:start position:0%
data structures
 

00:03:20.959 --> 00:03:24.390 align:start position:0%
data structures
um<00:03:21.599><c> and</c><00:03:22.080><c> so</c><00:03:22.640><c> if</c><00:03:22.879><c> you</c><00:03:23.040><c> have</c><00:03:23.360><c> parallaxis</c><00:03:24.239><c> you</c>

00:03:24.390 --> 00:03:24.400 align:start position:0%
um and so if you have parallaxis you
 

00:03:24.400 --> 00:03:25.190 align:start position:0%
um and so if you have parallaxis you
know<00:03:24.560><c> through</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
know through
 

00:03:25.200 --> 00:03:27.990 align:start position:0%
know through
a<00:03:25.280><c> data</c><00:03:25.599><c> structure</c><00:03:26.080><c> and</c><00:03:26.319><c> one</c><00:03:26.480><c> of</c><00:03:26.560><c> the</c><00:03:27.680><c> you</c><00:03:27.840><c> know</c>

00:03:27.990 --> 00:03:28.000 align:start position:0%
a data structure and one of the you know
 

00:03:28.000 --> 00:03:29.350 align:start position:0%
a data structure and one of the you know
course<00:03:28.319><c> is</c><00:03:28.480><c> a</c><00:03:28.560><c> writer</c><00:03:28.799><c> and</c><00:03:28.879><c> the</c><00:03:28.959><c> other</c><00:03:29.120><c> course</c>

00:03:29.350 --> 00:03:29.360 align:start position:0%
course is a writer and the other course
 

00:03:29.360 --> 00:03:30.390 align:start position:0%
course is a writer and the other course
is<00:03:29.519><c> a</c><00:03:29.599><c> reader</c>

00:03:30.390 --> 00:03:30.400 align:start position:0%
is a reader
 

00:03:30.400 --> 00:03:32.390 align:start position:0%
is a reader
uh<00:03:30.799><c> you</c><00:03:30.959><c> know</c><00:03:31.040><c> we</c><00:03:31.200><c> need</c><00:03:31.360><c> basically</c><00:03:31.760><c> blocks</c><00:03:32.319><c> you</c>

00:03:32.390 --> 00:03:32.400 align:start position:0%
uh you know we need basically blocks you
 

00:03:32.400 --> 00:03:34.149 align:start position:0%
uh you know we need basically blocks you
know<00:03:32.560><c> to</c><00:03:32.720><c> coordinate</c><00:03:33.360><c> these</c><00:03:33.599><c> updates</c><00:03:33.920><c> to</c><00:03:34.080><c> the</c>

00:03:34.149 --> 00:03:34.159 align:start position:0%
know to coordinate these updates to the
 

00:03:34.159 --> 00:03:36.070 align:start position:0%
know to coordinate these updates to the
shared<00:03:34.400><c> data</c><00:03:34.640><c> structure</c><00:03:35.040><c> so</c><00:03:35.200><c> that</c>

00:03:36.070 --> 00:03:36.080 align:start position:0%
shared data structure so that
 

00:03:36.080 --> 00:03:38.789 align:start position:0%
shared data structure so that
readers<00:03:36.400><c> see</c><00:03:36.560><c> a</c><00:03:36.640><c> consistent</c><00:03:37.120><c> view</c><00:03:38.480><c> so</c><00:03:38.640><c> we'll</c>

00:03:38.789 --> 00:03:38.799 align:start position:0%
readers see a consistent view so we'll
 

00:03:38.799 --> 00:03:41.030 align:start position:0%
readers see a consistent view so we'll
need<00:03:39.040><c> logs</c>

00:03:41.030 --> 00:03:41.040 align:start position:0%
need logs
 

00:03:41.040 --> 00:03:43.990 align:start position:0%
need logs
you<00:03:41.120><c> know</c><00:03:41.360><c> to</c><00:03:43.200><c> you</c><00:03:43.280><c> know</c><00:03:43.440><c> for</c><00:03:43.599><c> controlled</c>

00:03:43.990 --> 00:03:44.000 align:start position:0%
you know to you know for controlled
 

00:03:44.000 --> 00:03:45.430 align:start position:0%
you know to you know for controlled
sharing

00:03:45.430 --> 00:03:45.440 align:start position:0%
sharing
 

00:03:45.440 --> 00:03:52.949 align:start position:0%
sharing
or<00:03:45.680><c> for</c><00:03:45.840><c> correct</c><00:03:46.239><c> sharing</c>

00:03:52.949 --> 00:03:52.959 align:start position:0%
 
 

00:03:52.959 --> 00:03:54.550 align:start position:0%
 
now<00:03:53.200><c> this</c><00:03:53.439><c> is</c><00:03:53.599><c> in</c><00:03:53.680><c> some</c><00:03:53.840><c> sense</c><00:03:54.080><c> a</c><00:03:54.319><c> little</c><00:03:54.480><c> bit</c>

00:03:54.550 --> 00:03:54.560 align:start position:0%
now this is in some sense a little bit
 

00:03:54.560 --> 00:03:56.149 align:start position:0%
now this is in some sense a little bit
of<00:03:54.720><c> a</c><00:03:54.799><c> bummer</c>

00:03:56.149 --> 00:03:56.159 align:start position:0%
of a bummer
 

00:03:56.159 --> 00:03:59.750 align:start position:0%
of a bummer
because<00:03:56.480><c> you</c><00:03:56.640><c> know</c><00:03:56.799><c> we</c><00:03:57.599><c> want</c><00:03:57.840><c> this</c><00:03:58.000><c> parallexis</c>

00:03:59.750 --> 00:03:59.760 align:start position:0%
because you know we want this parallexis
 

00:03:59.760 --> 00:04:02.070 align:start position:0%
because you know we want this parallexis
we<00:04:00.000><c> want</c><00:04:00.080><c> to</c><00:04:00.239><c> run</c><00:04:00.720><c> multiple</c><00:04:01.200><c> uh</c><00:04:01.519><c> consistent</c>

00:04:02.070 --> 00:04:02.080 align:start position:0%
we want to run multiple uh consistent
 

00:04:02.080 --> 00:04:02.789 align:start position:0%
we want to run multiple uh consistent
calls<00:04:02.480><c> in</c>

00:04:02.789 --> 00:04:02.799 align:start position:0%
calls in
 

00:04:02.799 --> 00:04:06.149 align:start position:0%
calls in
uh<00:04:03.200><c> in</c><00:04:03.360><c> parallel</c><00:04:04.000><c> on</c><00:04:04.319><c> a</c><00:04:04.480><c> different</c><00:04:04.799><c> course</c>

00:04:06.149 --> 00:04:06.159 align:start position:0%
uh in parallel on a different course
 

00:04:06.159 --> 00:04:08.390 align:start position:0%
uh in parallel on a different course
but<00:04:06.400><c> unfortunately</c><00:04:06.959><c> you</c><00:04:07.040><c> know</c><00:04:07.760><c> if</c><00:04:07.920><c> they</c><00:04:08.080><c> share</c>

00:04:08.390 --> 00:04:08.400 align:start position:0%
but unfortunately you know if they share
 

00:04:08.400 --> 00:04:09.990 align:start position:0%
but unfortunately you know if they share
the<00:04:08.560><c> data</c><00:04:08.879><c> structures</c><00:04:09.280><c> you</c><00:04:09.360><c> know</c><00:04:09.519><c> they</c><00:04:09.760><c> need</c>

00:04:09.990 --> 00:04:10.000 align:start position:0%
the data structures you know they need
 

00:04:10.000 --> 00:04:12.390 align:start position:0%
the data structures you know they need
locks<00:04:10.400><c> and</c><00:04:10.640><c> locks</c><00:04:10.959><c> no</c><00:04:11.200><c> serialize</c>

00:04:12.390 --> 00:04:12.400 align:start position:0%
locks and locks no serialize
 

00:04:12.400 --> 00:04:14.949 align:start position:0%
locks and locks no serialize
basically<00:04:12.879><c> operations</c><00:04:13.840><c> and</c><00:04:14.000><c> so</c><00:04:14.319><c> in</c><00:04:14.400><c> fact</c><00:04:14.799><c> you</c>

00:04:14.949 --> 00:04:14.959 align:start position:0%
basically operations and so in fact you
 

00:04:14.959 --> 00:04:16.390 align:start position:0%
basically operations and so in fact you
know<00:04:15.120><c> locks</c><00:04:15.360><c> in</c><00:04:15.439><c> the</c><00:04:15.599><c> end</c><00:04:15.760><c> can</c><00:04:16.079><c> limit</c>

00:04:16.390 --> 00:04:16.400 align:start position:0%
know locks in the end can limit
 

00:04:16.400 --> 00:04:27.189 align:start position:0%
know locks in the end can limit
performance

00:04:27.189 --> 00:04:27.199 align:start position:0%
 
 

00:04:27.199 --> 00:04:28.310 align:start position:0%
 
and<00:04:27.280><c> so</c><00:04:27.440><c> we're</c><00:04:27.600><c> sort</c><00:04:27.680><c> of</c><00:04:27.840><c> in</c><00:04:27.919><c> a</c><00:04:28.080><c> tricky</c>

00:04:28.310 --> 00:04:28.320 align:start position:0%
and so we're sort of in a tricky
 

00:04:28.320 --> 00:04:30.150 align:start position:0%
and so we're sort of in a tricky
situation<00:04:28.880><c> where</c><00:04:29.280><c> you</c><00:04:29.360><c> know</c><00:04:29.520><c> for</c><00:04:29.680><c> correctness</c>

00:04:30.150 --> 00:04:30.160 align:start position:0%
situation where you know for correctness
 

00:04:30.160 --> 00:04:31.030 align:start position:0%
situation where you know for correctness
we<00:04:30.320><c> need</c><00:04:30.560><c> locks</c>

00:04:31.030 --> 00:04:31.040 align:start position:0%
we need locks
 

00:04:31.040 --> 00:04:33.030 align:start position:0%
we need locks
you<00:04:31.120><c> know</c><00:04:31.360><c> but</c><00:04:31.520><c> for</c><00:04:31.680><c> performance</c><00:04:32.479><c> uh</c><00:04:32.800><c> they're</c>

00:04:33.030 --> 00:04:33.040 align:start position:0%
you know but for performance uh they're
 

00:04:33.040 --> 00:04:34.310 align:start position:0%
you know but for performance uh they're
not<00:04:33.199><c> good</c>

00:04:34.310 --> 00:04:34.320 align:start position:0%
not good
 

00:04:34.320 --> 00:04:36.310 align:start position:0%
not good
uh<00:04:35.040><c> but</c><00:04:35.280><c> you</c><00:04:35.360><c> know</c><00:04:35.600><c> sort</c><00:04:35.759><c> of</c><00:04:35.840><c> it's</c><00:04:36.000><c> going</c><00:04:36.080><c> to</c><00:04:36.160><c> be</c>

00:04:36.310 --> 00:04:36.320 align:start position:0%
uh but you know sort of it's going to be
 

00:04:36.320 --> 00:04:37.749 align:start position:0%
uh but you know sort of it's going to be
sort<00:04:36.479><c> of</c><00:04:36.560><c> a</c><00:04:36.639><c> fact</c><00:04:36.880><c> of</c><00:04:36.960><c> life</c><00:04:37.360><c> and</c>

00:04:37.749 --> 00:04:37.759 align:start position:0%
sort of a fact of life and
 

00:04:37.759 --> 00:04:40.310 align:start position:0%
sort of a fact of life and
uh<00:04:38.240><c> you</c><00:04:38.320><c> know</c><00:04:38.479><c> we'll</c><00:04:38.639><c> see</c><00:04:39.600><c> what</c><00:04:39.759><c> we</c><00:04:39.919><c> can</c><00:04:40.080><c> do</c>

00:04:40.310 --> 00:04:40.320 align:start position:0%
uh you know we'll see what we can do
 

00:04:40.320 --> 00:04:41.510 align:start position:0%
uh you know we'll see what we can do
about<00:04:40.560><c> it</c>

00:04:41.510 --> 00:04:41.520 align:start position:0%
about it
 

00:04:41.520 --> 00:04:43.510 align:start position:0%
about it
but<00:04:41.680><c> that's</c><00:04:41.840><c> sort</c><00:04:42.000><c> of</c><00:04:42.080><c> the</c><00:04:42.400><c> top-level</c><00:04:43.040><c> uh</c>

00:04:43.510 --> 00:04:43.520 align:start position:0%
but that's sort of the top-level uh
 

00:04:43.520 --> 00:04:44.710 align:start position:0%
but that's sort of the top-level uh
scenario<00:04:44.080><c> here</c>

00:04:44.710 --> 00:04:44.720 align:start position:0%
scenario here
 

00:04:44.720 --> 00:04:47.110 align:start position:0%
scenario here
and<00:04:45.040><c> you</c><00:04:45.120><c> know</c><00:04:45.440><c> maybe</c><00:04:45.759><c> just</c><00:04:46.000><c> to</c><00:04:46.639><c> really</c><00:04:46.960><c> you</c>

00:04:47.110 --> 00:04:47.120 align:start position:0%
and you know maybe just to really you
 

00:04:47.120 --> 00:04:47.830 align:start position:0%
and you know maybe just to really you
know<00:04:47.360><c> uh</c>

00:04:47.830 --> 00:04:47.840 align:start position:0%
know uh
 

00:04:47.840 --> 00:04:49.590 align:start position:0%
know uh
bring<00:04:48.000><c> this</c><00:04:48.080><c> point</c><00:04:48.639><c> why</c><00:04:48.800><c> do</c><00:04:49.040><c> applications</c>

00:04:49.590 --> 00:04:49.600 align:start position:0%
bring this point why do applications
 

00:04:49.600 --> 00:04:50.870 align:start position:0%
bring this point why do applications
actually<00:04:49.840><c> want</c><00:04:50.000><c> to</c><00:04:50.560><c> uh</c>

00:04:50.870 --> 00:04:50.880 align:start position:0%
actually want to uh
 

00:04:50.880 --> 00:04:52.629 align:start position:0%
actually want to uh
multiple<00:04:51.280><c> course</c><00:04:51.840><c> and</c><00:04:51.919><c> now</c><00:04:52.080><c> that</c><00:04:52.320><c> really</c><00:04:52.479><c> has</c>

00:04:52.629 --> 00:04:52.639 align:start position:0%
multiple course and now that really has
 

00:04:52.639 --> 00:04:54.629 align:start position:0%
multiple course and now that really has
to<00:04:52.720><c> do</c><00:04:52.880><c> with</c><00:04:53.199><c> your</c><00:04:53.600><c> technology</c><00:04:54.160><c> trends</c><00:04:54.560><c> you</c>

00:04:54.629 --> 00:04:54.639 align:start position:0%
to do with your technology trends you
 

00:04:54.639 --> 00:04:55.830 align:start position:0%
to do with your technology trends you
know<00:04:54.800><c> over</c><00:04:55.040><c> the</c><00:04:55.120><c> last</c><00:04:55.360><c> you</c><00:04:55.440><c> know</c><00:04:55.600><c> a</c><00:04:55.600><c> couple</c>

00:04:55.830 --> 00:04:55.840 align:start position:0%
know over the last you know a couple
 

00:04:55.840 --> 00:04:56.790 align:start position:0%
know over the last you know a couple
decades

00:04:56.790 --> 00:04:56.800 align:start position:0%
decades
 

00:04:56.800 --> 00:04:58.150 align:start position:0%
decades
uh<00:04:57.120><c> and</c><00:04:57.360><c> you</c><00:04:57.440><c> know</c><00:04:57.520><c> there's</c><00:04:57.680><c> sort</c><00:04:57.840><c> of</c><00:04:57.919><c> this</c>

00:04:58.150 --> 00:04:58.160 align:start position:0%
uh and you know there's sort of this
 

00:04:58.160 --> 00:05:00.070 align:start position:0%
uh and you know there's sort of this
classic<00:04:58.800><c> graph</c><00:04:59.199><c> that</c><00:04:59.360><c> sort</c><00:04:59.520><c> of</c><00:04:59.680><c> make</c><00:04:59.840><c> these</c>

00:05:00.070 --> 00:05:00.080 align:start position:0%
classic graph that sort of make these
 

00:05:00.080 --> 00:05:00.710 align:start position:0%
classic graph that sort of make these
points

00:05:00.710 --> 00:05:00.720 align:start position:0%
points
 

00:05:00.720 --> 00:05:02.629 align:start position:0%
points
uh<00:05:00.960><c> so</c><00:05:01.120><c> let</c><00:05:01.280><c> me</c><00:05:01.520><c> you</c><00:05:01.600><c> know</c><00:05:02.000><c> pull</c><00:05:02.240><c> up</c><00:05:02.400><c> one</c><00:05:02.560><c> of</c>

00:05:02.629 --> 00:05:02.639 align:start position:0%
uh so let me you know pull up one of
 

00:05:02.639 --> 00:05:03.590 align:start position:0%
uh so let me you know pull up one of
them<00:05:02.880><c> there's</c><00:05:03.120><c> a</c><00:05:03.199><c> little</c><00:05:03.360><c> bit</c><00:05:03.440><c> of</c><00:05:03.520><c> a</c>

00:05:03.590 --> 00:05:03.600 align:start position:0%
them there's a little bit of a
 

00:05:03.600 --> 00:05:04.629 align:start position:0%
them there's a little bit of a
complicated<00:05:04.160><c> graph</c>

00:05:04.629 --> 00:05:04.639 align:start position:0%
complicated graph
 

00:05:04.639 --> 00:05:08.629 align:start position:0%
complicated graph
uh<00:05:05.039><c> but</c><00:05:05.199><c> you</c><00:05:05.360><c> know</c><00:05:05.440><c> there's</c><00:05:05.759><c> years</c><00:05:06.960><c> on</c><00:05:07.199><c> the</c>

00:05:08.629 --> 00:05:08.639 align:start position:0%
uh but you know there's years on the
 

00:05:08.639 --> 00:05:12.150 align:start position:0%
uh but you know there's years on the
x-axis<00:05:09.440><c> and</c><00:05:09.919><c> y-axis</c><00:05:10.639><c> there's</c><00:05:11.039><c> you</c><00:05:11.199><c> know</c><00:05:11.520><c> units</c>

00:05:12.150 --> 00:05:12.160 align:start position:0%
x-axis and y-axis there's you know units
 

00:05:12.160 --> 00:05:13.430 align:start position:0%
x-axis and y-axis there's you know units
uh<00:05:12.479><c> they're</c><00:05:12.639><c> different</c><00:05:12.880><c> types</c><00:05:13.120><c> of</c><00:05:13.199><c> units</c>

00:05:13.430 --> 00:05:13.440 align:start position:0%
uh they're different types of units
 

00:05:13.440 --> 00:05:14.950 align:start position:0%
uh they're different types of units
depending<00:05:13.840><c> on</c><00:05:14.080><c> you</c><00:05:14.160><c> know</c><00:05:14.320><c> which</c><00:05:14.560><c> line</c><00:05:14.800><c> we're</c>

00:05:14.950 --> 00:05:14.960 align:start position:0%
depending on you know which line we're
 

00:05:14.960 --> 00:05:16.070 align:start position:0%
depending on you know which line we're
looking<00:05:15.199><c> at</c>

00:05:16.070 --> 00:05:16.080 align:start position:0%
looking at
 

00:05:16.080 --> 00:05:17.670 align:start position:0%
looking at
uh<00:05:16.240><c> but</c><00:05:16.400><c> the</c><00:05:16.479><c> thing</c><00:05:16.639><c> that</c><00:05:16.960><c> really</c><00:05:17.199><c> to</c><00:05:17.280><c> look</c><00:05:17.440><c> at</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
uh but the thing that really to look at
 

00:05:17.680 --> 00:05:19.749 align:start position:0%
uh but the thing that really to look at
is<00:05:17.840><c> that</c><00:05:18.639><c> uh</c>

00:05:19.749 --> 00:05:19.759 align:start position:0%
is that uh
 

00:05:19.759 --> 00:05:21.990 align:start position:0%
is that uh
what<00:05:20.000><c> has</c><00:05:20.160><c> happened</c><00:05:20.800><c> in</c><00:05:21.360><c> the</c><00:05:21.520><c> last</c><00:05:21.759><c> couple</c>

00:05:21.990 --> 00:05:22.000 align:start position:0%
what has happened in the last couple
 

00:05:22.000 --> 00:05:23.990 align:start position:0%
what has happened in the last couple
years<00:05:22.240><c> is</c><00:05:22.400><c> that</c><00:05:22.639><c> over</c><00:05:22.800><c> the</c><00:05:22.960><c> last</c><00:05:23.199><c> decades</c><00:05:23.840><c> is</c>

00:05:23.990 --> 00:05:24.000 align:start position:0%
years is that over the last decades is
 

00:05:24.000 --> 00:05:24.200 align:start position:0%
years is that over the last decades is
that

00:05:24.200 --> 00:05:24.210 align:start position:0%
that
 

00:05:24.210 --> 00:05:25.430 align:start position:0%
that
[Music]

00:05:25.430 --> 00:05:25.440 align:start position:0%
[Music]
 

00:05:25.440 --> 00:05:28.070 align:start position:0%
[Music]
starting<00:05:25.759><c> in</c><00:05:25.919><c> the</c><00:05:26.080><c> 2000s</c><00:05:27.280><c> that</c><00:05:27.520><c> the</c><00:05:27.759><c> clock</c>

00:05:28.070 --> 00:05:28.080 align:start position:0%
starting in the 2000s that the clock
 

00:05:28.080 --> 00:05:29.189 align:start position:0%
starting in the 2000s that the clock
frequency

00:05:29.189 --> 00:05:29.199 align:start position:0%
frequency
 

00:05:29.199 --> 00:05:32.150 align:start position:0%
frequency
hasn't<00:05:29.440><c> really</c><00:05:29.759><c> increased</c><00:05:30.160><c> anymore</c><00:05:31.360><c> uh</c><00:05:31.840><c> so</c>

00:05:32.150 --> 00:05:32.160 align:start position:0%
hasn't really increased anymore uh so
 

00:05:32.160 --> 00:05:33.510 align:start position:0%
hasn't really increased anymore uh so
basically<00:05:32.479><c> this</c><00:05:32.720><c> has</c><00:05:33.120><c> you</c><00:05:33.199><c> know</c>

00:05:33.510 --> 00:05:33.520 align:start position:0%
basically this has you know
 

00:05:33.520 --> 00:05:36.950 align:start position:0%
basically this has you know
plateaued<00:05:34.880><c> or</c><00:05:35.120><c> constant</c>

00:05:36.950 --> 00:05:36.960 align:start position:0%
plateaued or constant
 

00:05:36.960 --> 00:05:40.469 align:start position:0%
plateaued or constant
um<00:05:38.080><c> and</c><00:05:38.960><c> as</c><00:05:39.120><c> a</c><00:05:39.199><c> result</c><00:05:39.759><c> you</c><00:05:39.840><c> know</c><00:05:40.000><c> basically</c>

00:05:40.469 --> 00:05:40.479 align:start position:0%
um and as a result you know basically
 

00:05:40.479 --> 00:05:41.029 align:start position:0%
um and as a result you know basically
single

00:05:41.029 --> 00:05:41.039 align:start position:0%
single
 

00:05:41.039 --> 00:05:43.670 align:start position:0%
single
threat<00:05:41.360><c> performance</c><00:05:42.080><c> of</c><00:05:42.240><c> the</c><00:05:42.320><c> core</c><00:05:42.720><c> also</c><00:05:43.520><c> you</c>

00:05:43.670 --> 00:05:43.680 align:start position:0%
threat performance of the core also you
 

00:05:43.680 --> 00:05:44.870 align:start position:0%
threat performance of the core also you
know<00:05:43.840><c> basically</c>

00:05:44.870 --> 00:05:44.880 align:start position:0%
know basically
 

00:05:44.880 --> 00:05:46.870 align:start position:0%
know basically
uh<00:05:45.199><c> has</c><00:05:45.520><c> reached</c><00:05:45.919><c> you</c><00:05:46.000><c> know</c><00:05:46.160><c> sort</c><00:05:46.320><c> of</c><00:05:46.400><c> a</c><00:05:46.479><c> limit</c>

00:05:46.870 --> 00:05:46.880 align:start position:0%
uh has reached you know sort of a limit
 

00:05:46.880 --> 00:05:51.990 align:start position:0%
uh has reached you know sort of a limit
you<00:05:47.039><c> know</c><00:05:47.199><c> or</c><00:05:50.840><c> plotted</c>

00:05:51.990 --> 00:05:52.000 align:start position:0%
you know or plotted
 

00:05:52.000 --> 00:05:54.070 align:start position:0%
you know or plotted
uh<00:05:52.560><c> and</c><00:05:52.960><c> yet</c><00:05:53.199><c> on</c><00:05:53.360><c> the</c><00:05:53.440><c> other</c><00:05:53.600><c> hand</c><00:05:53.840><c> given</c><00:05:54.000><c> the</c>

00:05:54.070 --> 00:05:54.080 align:start position:0%
uh and yet on the other hand given the
 

00:05:54.080 --> 00:05:56.150 align:start position:0%
uh and yet on the other hand given the
minimum<00:05:54.479><c> course</c><00:05:54.960><c> of</c><00:05:55.199><c> the</c><00:05:55.280><c> number</c><00:05:55.520><c> transistors</c>

00:05:56.150 --> 00:05:56.160 align:start position:0%
minimum course of the number transistors
 

00:05:56.160 --> 00:05:57.990 align:start position:0%
minimum course of the number transistors
still<00:05:56.560><c> has</c><00:05:56.800><c> been</c><00:05:57.039><c> increasing</c><00:05:57.440><c> over</c><00:05:57.680><c> the</c><00:05:57.759><c> same</c>

00:05:57.990 --> 00:05:58.000 align:start position:0%
still has been increasing over the same
 

00:05:58.000 --> 00:05:59.990 align:start position:0%
still has been increasing over the same
time<00:05:58.240><c> period</c><00:05:58.960><c> so</c><00:05:59.120><c> if</c><00:05:59.280><c> you</c><00:05:59.440><c> can't</c><00:05:59.680><c> like</c><00:05:59.919><c> you</c>

00:05:59.990 --> 00:06:00.000 align:start position:0%
time period so if you can't like you
 

00:06:00.000 --> 00:06:01.670 align:start position:0%
time period so if you can't like you
know<00:06:00.160><c> use</c><00:06:00.400><c> transistors</c><00:06:00.960><c> to</c><00:06:01.039><c> make</c><00:06:01.199><c> a</c><00:06:01.280><c> single</c>

00:06:01.670 --> 00:06:01.680 align:start position:0%
know use transistors to make a single
 

00:06:01.680 --> 00:06:03.270 align:start position:0%
know use transistors to make a single
core<00:06:01.840><c> sort</c><00:06:02.080><c> of</c><00:06:02.160><c> run</c><00:06:02.400><c> faster</c>

00:06:03.270 --> 00:06:03.280 align:start position:0%
core sort of run faster
 

00:06:03.280 --> 00:06:04.629 align:start position:0%
core sort of run faster
uh<00:06:03.600><c> you</c><00:06:03.759><c> know</c><00:06:03.919><c> the</c><00:06:04.080><c> only</c><00:06:04.240><c> other</c><00:06:04.479><c> option</c>

00:06:04.629 --> 00:06:04.639 align:start position:0%
uh you know the only other option
 

00:06:04.639 --> 00:06:05.670 align:start position:0%
uh you know the only other option
basically<00:06:04.960><c> have</c><00:06:05.199><c> is</c><00:06:05.280><c> you</c><00:06:05.360><c> know</c><00:06:05.440><c> i</c><00:06:05.520><c> have</c>

00:06:05.670 --> 00:06:05.680 align:start position:0%
basically have is you know i have
 

00:06:05.680 --> 00:06:07.510 align:start position:0%
basically have is you know i have
multiple<00:06:06.000><c> cores</c><00:06:06.319><c> and</c><00:06:06.479><c> you</c><00:06:06.560><c> see</c><00:06:06.720><c> indeed</c><00:06:07.039><c> that's</c>

00:06:07.510 --> 00:06:07.520 align:start position:0%
multiple cores and you see indeed that's
 

00:06:07.520 --> 00:06:09.590 align:start position:0%
multiple cores and you see indeed that's
starting<00:06:07.759><c> from</c><00:06:07.919><c> 2001</c><00:06:08.960><c> or</c><00:06:09.120><c> from</c><00:06:09.280><c> the</c><00:06:09.360><c> early</c>

00:06:09.590 --> 00:06:09.600 align:start position:0%
starting from 2001 or from the early
 

00:06:09.600 --> 00:06:11.270 align:start position:0%
starting from 2001 or from the early
2000s<00:06:10.160><c> you</c><00:06:10.319><c> know</c><00:06:10.479><c> the</c><00:06:10.560><c> number</c><00:06:10.800><c> of</c><00:06:10.880><c> course</c><00:06:11.199><c> has</c>

00:06:11.270 --> 00:06:11.280 align:start position:0%
2000s you know the number of course has
 

00:06:11.280 --> 00:06:13.350 align:start position:0%
2000s you know the number of course has
gone<00:06:11.520><c> up</c>

00:06:13.350 --> 00:06:13.360 align:start position:0%
gone up
 

00:06:13.360 --> 00:06:14.710 align:start position:0%
gone up
and<00:06:13.520><c> so</c><00:06:13.680><c> there's</c><00:06:13.840><c> an</c><00:06:14.000><c> application</c><00:06:14.400><c> once</c><00:06:14.560><c> more</c>

00:06:14.710 --> 00:06:14.720 align:start position:0%
and so there's an application once more
 

00:06:14.720 --> 00:06:16.469 align:start position:0%
and so there's an application once more
performance<00:06:15.840><c> you</c><00:06:16.000><c> know</c>

00:06:16.469 --> 00:06:16.479 align:start position:0%
performance you know
 

00:06:16.479 --> 00:06:18.469 align:start position:0%
performance you know
uh<00:06:16.960><c> you</c><00:06:17.120><c> know</c><00:06:17.280><c> can</c><00:06:17.520><c> rely</c><00:06:17.759><c> on</c><00:06:17.919><c> the</c><00:06:18.000><c> single</c><00:06:18.240><c> core</c>

00:06:18.469 --> 00:06:18.479 align:start position:0%
uh you know can rely on the single core
 

00:06:18.479 --> 00:06:20.150 align:start position:0%
uh you know can rely on the single core
it<00:06:18.560><c> basically</c><00:06:18.960><c> has</c><00:06:19.199><c> to</c><00:06:19.360><c> explode</c><00:06:19.759><c> multiple</c>

00:06:20.150 --> 00:06:20.160 align:start position:0%
it basically has to explode multiple
 

00:06:20.160 --> 00:06:21.029 align:start position:0%
it basically has to explode multiple
cores

00:06:21.029 --> 00:06:21.039 align:start position:0%
cores
 

00:06:21.039 --> 00:06:22.950 align:start position:0%
cores
and<00:06:21.199><c> also</c><00:06:21.440><c> this</c><00:06:21.600><c> means</c><00:06:21.919><c> if</c><00:06:22.000><c> an</c><00:06:22.160><c> application</c><00:06:22.720><c> is</c>

00:06:22.950 --> 00:06:22.960 align:start position:0%
and also this means if an application is
 

00:06:22.960 --> 00:06:24.790 align:start position:0%
and also this means if an application is
you<00:06:23.120><c> know</c><00:06:23.360><c> kernel</c><00:06:23.759><c> intensive</c><00:06:24.240><c> os</c>

00:06:24.790 --> 00:06:24.800 align:start position:0%
you know kernel intensive os
 

00:06:24.800 --> 00:06:28.550 align:start position:0%
you know kernel intensive os
intensive<00:06:25.360><c> you</c><00:06:25.520><c> know</c><00:06:26.160><c> whereas</c><00:06:26.560><c> like</c><00:06:26.720><c> a</c><00:06:26.800><c> server</c>

00:06:28.550 --> 00:06:28.560 align:start position:0%
intensive you know whereas like a server
 

00:06:28.560 --> 00:06:29.670 align:start position:0%
intensive you know whereas like a server
then<00:06:28.720><c> that</c><00:06:28.960><c> means</c><00:06:29.120><c> that</c><00:06:29.280><c> the</c><00:06:29.360><c> operating</c>

00:06:29.670 --> 00:06:29.680 align:start position:0%
then that means that the operating
 

00:06:29.680 --> 00:06:31.990 align:start position:0%
then that means that the operating
system<00:06:29.919><c> also</c><00:06:30.160><c> has</c><00:06:30.319><c> to</c><00:06:30.479><c> be</c>

00:06:31.990 --> 00:06:32.000 align:start position:0%
system also has to be
 

00:06:32.000 --> 00:06:34.790 align:start position:0%
system also has to be
run<00:06:32.400><c> efficiently</c><00:06:32.960><c> on</c><00:06:33.120><c> multiple</c><00:06:33.440><c> cores</c><00:06:34.560><c> and</c><00:06:34.639><c> so</c>

00:06:34.790 --> 00:06:34.800 align:start position:0%
run efficiently on multiple cores and so
 

00:06:34.800 --> 00:06:36.390 align:start position:0%
run efficiently on multiple cores and so
that's<00:06:35.039><c> the</c><00:06:35.120><c> main</c><00:06:35.440><c> reason</c>

00:06:36.390 --> 00:06:36.400 align:start position:0%
that's the main reason
 

00:06:36.400 --> 00:06:37.909 align:start position:0%
that's the main reason
uh<00:06:36.800><c> you</c><00:06:36.960><c> know</c><00:06:37.039><c> that</c><00:06:37.199><c> we're</c><00:06:37.360><c> sort</c><00:06:37.520><c> of</c><00:06:37.600><c> very</c>

00:06:37.909 --> 00:06:37.919 align:start position:0%
uh you know that we're sort of very
 

00:06:37.919 --> 00:06:39.830 align:start position:0%
uh you know that we're sort of very
interested<00:06:38.479><c> in</c>

00:06:39.830 --> 00:06:39.840 align:start position:0%
interested in
 

00:06:39.840 --> 00:06:41.909 align:start position:0%
interested in
you<00:06:39.919><c> know</c><00:06:40.080><c> parallelism</c><00:06:40.800><c> you</c><00:06:40.960><c> know</c><00:06:41.120><c> within</c><00:06:41.440><c> the</c>

00:06:41.909 --> 00:06:41.919 align:start position:0%
you know parallelism you know within the
 

00:06:41.919 --> 00:06:45.029 align:start position:0%
you know parallelism you know within the
in<00:06:42.000><c> the</c><00:06:42.160><c> kernel</c>

00:06:45.029 --> 00:06:45.039 align:start position:0%
 
 

00:06:45.039 --> 00:06:51.909 align:start position:0%
 
any<00:06:45.280><c> questions</c><00:06:45.680><c> about</c><00:06:46.840><c> this</c>

00:06:51.909 --> 00:06:51.919 align:start position:0%
 
 

00:06:51.919 --> 00:06:53.430 align:start position:0%
 
okay<00:06:52.160><c> i've</c><00:06:52.240><c> seen</c><00:06:52.479><c> i</c><00:06:52.720><c> i</c><00:06:52.960><c> assume</c><00:06:53.199><c> that</c><00:06:53.360><c> you've</c>

00:06:53.430 --> 00:06:53.440 align:start position:0%
okay i've seen i i assume that you've
 

00:06:53.440 --> 00:06:55.110 align:start position:0%
okay i've seen i i assume that you've
seen<00:06:53.599><c> some</c><00:06:53.759><c> of</c><00:06:53.840><c> these</c><00:06:54.000><c> graphs</c><00:06:54.400><c> uh</c><00:06:54.560><c> before</c><00:06:54.960><c> but</c>

00:06:55.110 --> 00:06:55.120 align:start position:0%
seen some of these graphs uh before but
 

00:06:55.120 --> 00:06:55.670 align:start position:0%
seen some of these graphs uh before but
it's

00:06:55.670 --> 00:06:55.680 align:start position:0%
it's
 

00:06:55.680 --> 00:06:56.950 align:start position:0%
it's
good<00:06:55.840><c> to</c><00:06:56.000><c> remind</c><00:06:56.319><c> us</c><00:06:56.479><c> you</c><00:06:56.560><c> know</c><00:06:56.639><c> what</c><00:06:56.800><c> the</c>

00:06:56.950 --> 00:06:56.960 align:start position:0%
good to remind us you know what the
 

00:06:56.960 --> 00:06:59.510 align:start position:0%
good to remind us you know what the
starting<00:06:57.280><c> point</c><00:06:57.440><c> of</c><00:06:57.599><c> all</c><00:06:57.680><c> the</c><00:06:57.759><c> discussion</c><00:06:58.319><c> is</c>

00:06:59.510 --> 00:06:59.520 align:start position:0%
starting point of all the discussion is
 

00:06:59.520 --> 00:07:02.870 align:start position:0%
starting point of all the discussion is
um<00:07:00.560><c> so</c><00:07:00.720><c> why</c><00:07:00.960><c> logs</c>

00:07:02.870 --> 00:07:02.880 align:start position:0%
um so why logs
 

00:07:02.880 --> 00:07:04.390 align:start position:0%
um so why logs
you<00:07:02.960><c> know</c><00:07:03.120><c> already</c><00:07:03.520><c> hinted</c><00:07:03.840><c> at</c><00:07:03.919><c> this</c><00:07:04.160><c> you</c><00:07:04.319><c> know</c>

00:07:04.390 --> 00:07:04.400 align:start position:0%
you know already hinted at this you know
 

00:07:04.400 --> 00:07:06.710 align:start position:0%
you know already hinted at this you know
they're<00:07:04.639><c> there</c><00:07:04.880><c> for</c><00:07:05.280><c> uh</c><00:07:05.520><c> correctness</c>

00:07:06.710 --> 00:07:06.720 align:start position:0%
they're there for uh correctness
 

00:07:06.720 --> 00:07:09.670 align:start position:0%
they're there for uh correctness
uh<00:07:07.280><c> you</c><00:07:07.440><c> know</c><00:07:07.599><c> if</c><00:07:07.919><c> we</c><00:07:08.080><c> have</c><00:07:08.560><c> you</c><00:07:08.639><c> know</c><00:07:09.039><c> readers</c>

00:07:09.670 --> 00:07:09.680 align:start position:0%
uh you know if we have you know readers
 

00:07:09.680 --> 00:07:10.710 align:start position:0%
uh you know if we have you know readers
and<00:07:09.919><c> writers</c><00:07:10.319><c> you</c><00:07:10.400><c> know</c>

00:07:10.710 --> 00:07:10.720 align:start position:0%
and writers you know
 

00:07:10.720 --> 00:07:12.870 align:start position:0%
and writers you know
exiting<00:07:10.960><c> a</c><00:07:11.039><c> shared</c><00:07:11.280><c> data</c><00:07:11.520><c> structure</c><00:07:12.400><c> and</c><00:07:12.800><c> you</c>

00:07:12.870 --> 00:07:12.880 align:start position:0%
exiting a shared data structure and you
 

00:07:12.880 --> 00:07:14.230 align:start position:0%
exiting a shared data structure and you
know<00:07:13.039><c> the</c><00:07:13.120><c> thing</c><00:07:13.280><c> that</c><00:07:13.440><c> goes</c><00:07:13.680><c> wrong</c>

00:07:14.230 --> 00:07:14.240 align:start position:0%
know the thing that goes wrong
 

00:07:14.240 --> 00:07:23.350 align:start position:0%
know the thing that goes wrong
is<00:07:14.639><c> that</c><00:07:14.960><c> we</c><00:07:15.360><c> want</c><00:07:15.520><c> to</c><00:07:15.599><c> avoid</c><00:07:15.919><c> race</c><00:07:16.160><c> conditions</c>

00:07:23.350 --> 00:07:23.360 align:start position:0%
 
 

00:07:23.360 --> 00:07:25.430 align:start position:0%
 
so<00:07:23.759><c> if</c><00:07:23.919><c> you</c><00:07:24.000><c> don't</c><00:07:24.240><c> have</c><00:07:24.479><c> locks</c><00:07:25.039><c> you</c><00:07:25.120><c> know</c><00:07:25.280><c> we</c>

00:07:25.430 --> 00:07:25.440 align:start position:0%
so if you don't have locks you know we
 

00:07:25.440 --> 00:07:26.550 align:start position:0%
so if you don't have locks you know we
run<00:07:25.599><c> the</c><00:07:25.759><c> risk</c><00:07:26.160><c> you</c><00:07:26.240><c> know</c>

00:07:26.550 --> 00:07:26.560 align:start position:0%
run the risk you know
 

00:07:26.560 --> 00:07:27.830 align:start position:0%
run the risk you know
we<00:07:26.720><c> have</c><00:07:26.800><c> shear</c><00:07:26.960><c> data</c><00:07:27.280><c> structures</c><00:07:27.599><c> that</c><00:07:27.680><c> we're</c>

00:07:27.830 --> 00:07:27.840 align:start position:0%
we have shear data structures that we're
 

00:07:27.840 --> 00:07:30.870 align:start position:0%
we have shear data structures that we're
going<00:07:27.919><c> to</c><00:07:28.000><c> have</c><00:07:28.960><c> uh</c>

00:07:30.870 --> 00:07:30.880 align:start position:0%
going to have uh
 

00:07:30.880 --> 00:07:32.629 align:start position:0%
going to have uh
we're<00:07:31.039><c> going</c><00:07:31.120><c> to</c><00:07:31.199><c> have</c><00:07:31.360><c> raised</c><00:07:32.160><c> detect</c>

00:07:32.629 --> 00:07:32.639 align:start position:0%
we're going to have raised detect
 

00:07:32.639 --> 00:07:34.629 align:start position:0%
we're going to have raised detect
conditions<00:07:33.199><c> and</c><00:07:33.840><c> it</c><00:07:33.919><c> turns</c><00:07:34.160><c> out</c><00:07:34.319><c> that</c><00:07:34.479><c> the</c>

00:07:34.629 --> 00:07:34.639 align:start position:0%
conditions and it turns out that the
 

00:07:34.639 --> 00:07:35.749 align:start position:0%
conditions and it turns out that the
race<00:07:34.880><c> conditions</c><00:07:35.360><c> are</c>

00:07:35.749 --> 00:07:35.759 align:start position:0%
race conditions are
 

00:07:35.759 --> 00:07:39.029 align:start position:0%
race conditions are
uh<00:07:36.479><c> pretty</c><00:07:36.720><c> annoying</c><00:07:37.360><c> um</c><00:07:38.160><c> and</c><00:07:38.240><c> so</c><00:07:38.479><c> just</c>

00:07:39.029 --> 00:07:39.039 align:start position:0%
uh pretty annoying um and so just
 

00:07:39.039 --> 00:07:40.469 align:start position:0%
uh pretty annoying um and so just
first<00:07:39.360><c> can</c><00:07:39.520><c> we</c><00:07:39.599><c> get</c><00:07:39.759><c> a</c><00:07:39.840><c> little</c><00:07:40.000><c> bit</c><00:07:40.160><c> of</c><00:07:40.240><c> sense</c>

00:07:40.469 --> 00:07:40.479 align:start position:0%
first can we get a little bit of sense
 

00:07:40.479 --> 00:07:43.110 align:start position:0%
first can we get a little bit of sense
of<00:07:40.560><c> what</c><00:07:40.720><c> it</c><00:07:40.880><c> actually</c><00:07:41.199><c> is</c><00:07:42.000><c> let's</c><00:07:42.240><c> look</c><00:07:42.479><c> at</c><00:07:42.560><c> the</c>

00:07:43.110 --> 00:07:43.120 align:start position:0%
of what it actually is let's look at the
 

00:07:43.120 --> 00:07:45.189 align:start position:0%
of what it actually is let's look at the
let's<00:07:43.520><c> just</c><00:07:43.840><c> let's</c><00:07:44.080><c> create</c><00:07:44.479><c> a</c><00:07:44.560><c> race</c><00:07:44.800><c> condition</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
let's just let's create a race condition
 

00:07:45.199 --> 00:07:46.309 align:start position:0%
let's just let's create a race condition
in<00:07:45.360><c> xv6</c><00:07:46.080><c> and</c>

00:07:46.309 --> 00:07:46.319 align:start position:0%
in xv6 and
 

00:07:46.319 --> 00:07:47.990 align:start position:0%
in xv6 and
sort<00:07:46.479><c> of</c><00:07:46.560><c> see</c><00:07:46.720><c> how</c><00:07:46.879><c> it</c><00:07:47.039><c> actually</c><00:07:47.360><c> shows</c><00:07:47.680><c> up</c><00:07:47.919><c> and</c>

00:07:47.990 --> 00:07:48.000 align:start position:0%
sort of see how it actually shows up and
 

00:07:48.000 --> 00:07:49.589 align:start position:0%
sort of see how it actually shows up and
then<00:07:48.240><c> understand</c><00:07:48.720><c> like</c><00:07:48.960><c> look</c><00:07:49.199><c> what</c><00:07:49.360><c> actually</c>

00:07:49.589 --> 00:07:49.599 align:start position:0%
then understand like look what actually
 

00:07:49.599 --> 00:07:51.189 align:start position:0%
then understand like look what actually
happened

00:07:51.189 --> 00:07:51.199 align:start position:0%
happened
 

00:07:51.199 --> 00:07:54.390 align:start position:0%
happened
uh<00:07:51.840><c> so</c><00:07:52.080><c> here's</c><00:07:53.199><c> uh</c>

00:07:54.390 --> 00:07:54.400 align:start position:0%
uh so here's uh
 

00:07:54.400 --> 00:07:58.629 align:start position:0%
uh so here's uh
our<00:07:55.039><c> function</c><00:07:55.680><c> k3</c><00:07:56.560><c> uh</c><00:07:57.039><c> in</c><00:07:57.440><c> calc.c</c><00:07:58.240><c> you</c><00:07:58.400><c> know</c><00:07:58.479><c> so</c>

00:07:58.629 --> 00:07:58.639 align:start position:0%
our function k3 uh in calc.c you know so
 

00:07:58.639 --> 00:08:00.469 align:start position:0%
our function k3 uh in calc.c you know so
this<00:07:58.800><c> is</c><00:07:58.960><c> the</c><00:07:59.039><c> function</c><00:07:59.360><c> that</c><00:07:59.520><c> frees</c>

00:08:00.469 --> 00:08:00.479 align:start position:0%
this is the function that frees
 

00:08:00.479 --> 00:08:02.070 align:start position:0%
this is the function that frees
after<00:08:00.800><c> you</c><00:08:00.960><c> free</c><00:08:01.199><c> page</c><00:08:01.440><c> it</c><00:08:01.520><c> puts</c><00:08:01.759><c> it</c><00:08:01.919><c> on</c><00:08:02.000><c> the</c>

00:08:02.070 --> 00:08:02.080 align:start position:0%
after you free page it puts it on the
 

00:08:02.080 --> 00:08:03.589 align:start position:0%
after you free page it puts it on the
free<00:08:02.319><c> list</c><00:08:02.639><c> you</c><00:08:02.800><c> know</c><00:08:03.039><c> the</c>

00:08:03.589 --> 00:08:03.599 align:start position:0%
free list you know the
 

00:08:03.599 --> 00:08:05.350 align:start position:0%
free list you know the
kernel<00:08:04.000><c> has</c><00:08:04.160><c> a</c><00:08:04.240><c> very</c><00:08:04.479><c> simple</c><00:08:04.720><c> data</c><00:08:04.960><c> structure</c>

00:08:05.350 --> 00:08:05.360 align:start position:0%
kernel has a very simple data structure
 

00:08:05.360 --> 00:08:07.589 align:start position:0%
kernel has a very simple data structure
to<00:08:05.440><c> keep</c><00:08:05.599><c> the</c><00:08:05.759><c> free</c><00:08:05.919><c> list</c><00:08:06.160><c> of</c><00:08:06.319><c> all</c><00:08:06.400><c> three</c><00:08:06.639><c> pages</c>

00:08:07.589 --> 00:08:07.599 align:start position:0%
to keep the free list of all three pages
 

00:08:07.599 --> 00:08:09.510 align:start position:0%
to keep the free list of all three pages
uh<00:08:08.080><c> so</c><00:08:08.240><c> that</c><00:08:08.400><c> one</c><00:08:08.639><c> calendar</c><00:08:09.039><c> needs</c><00:08:09.120><c> a</c><00:08:09.199><c> page</c>

00:08:09.510 --> 00:08:09.520 align:start position:0%
uh so that one calendar needs a page
 

00:08:09.520 --> 00:08:10.629 align:start position:0%
uh so that one calendar needs a page
that<00:08:09.680><c> actually</c><00:08:09.840><c> can</c><00:08:10.000><c> grab</c><00:08:10.160><c> it</c><00:08:10.240><c> from</c><00:08:10.400><c> the</c><00:08:10.479><c> free</c>

00:08:10.629 --> 00:08:10.639 align:start position:0%
that actually can grab it from the free
 

00:08:10.639 --> 00:08:11.589 align:start position:0%
that actually can grab it from the free
glitch

00:08:11.589 --> 00:08:11.599 align:start position:0%
glitch
 

00:08:11.599 --> 00:08:14.710 align:start position:0%
glitch
you<00:08:11.759><c> see</c><00:08:12.080><c> here</c><00:08:12.639><c> the</c><00:08:13.440><c> uh</c>

00:08:14.710 --> 00:08:14.720 align:start position:0%
you see here the uh
 

00:08:14.720 --> 00:08:18.430 align:start position:0%
you see here the uh
allocation<00:08:15.280><c> has</c><00:08:15.599><c> one</c><00:08:16.560><c> uh</c><00:08:17.680><c> the</c><00:08:17.919><c> the</c>

00:08:18.430 --> 00:08:18.440 align:start position:0%
allocation has one uh the the
 

00:08:18.440 --> 00:08:21.029 align:start position:0%
allocation has one uh the the
the<00:08:19.440><c> memory</c><00:08:19.680><c> allocator</c><00:08:20.080><c> has</c><00:08:20.240><c> one</c><00:08:20.400><c> lock</c><00:08:20.720><c> came</c>

00:08:21.029 --> 00:08:21.039 align:start position:0%
the memory allocator has one lock came
 

00:08:21.039 --> 00:08:21.990 align:start position:0%
the memory allocator has one lock came
in<00:08:21.199><c> lock</c>

00:08:21.990 --> 00:08:22.000 align:start position:0%
in lock
 

00:08:22.000 --> 00:08:24.309 align:start position:0%
in lock
and<00:08:22.560><c> uh</c><00:08:22.800><c> here</c><00:08:23.120><c> it</c><00:08:23.280><c> actually</c><00:08:23.599><c> updates</c><00:08:23.919><c> the</c><00:08:24.080><c> free</c>

00:08:24.309 --> 00:08:24.319 align:start position:0%
and uh here it actually updates the free
 

00:08:24.319 --> 00:08:25.110 align:start position:0%
and uh here it actually updates the free
list

00:08:25.110 --> 00:08:25.120 align:start position:0%
list
 

00:08:25.120 --> 00:08:27.270 align:start position:0%
list
uh<00:08:25.759><c> within</c><00:08:26.240><c> page</c><00:08:26.560><c> that</c><00:08:26.720><c> just</c><00:08:26.879><c> has</c><00:08:27.120><c> been</c>

00:08:27.270 --> 00:08:27.280 align:start position:0%
uh within page that just has been
 

00:08:27.280 --> 00:08:29.830 align:start position:0%
uh within page that just has been
treated<00:08:27.759><c> or</c><00:08:28.000><c> the</c><00:08:28.479><c> argument</c><00:08:28.800><c> to</c><00:08:28.960><c> three</c>

00:08:29.830 --> 00:08:29.840 align:start position:0%
treated or the argument to three
 

00:08:29.840 --> 00:08:31.510 align:start position:0%
treated or the argument to three
so<00:08:30.000><c> we're</c><00:08:30.160><c> gonna</c><00:08:30.319><c> do</c><00:08:30.479><c> is</c><00:08:30.639><c> like</c><00:08:30.960><c> just</c><00:08:31.199><c> comment</c>

00:08:31.510 --> 00:08:31.520 align:start position:0%
so we're gonna do is like just comment
 

00:08:31.520 --> 00:08:32.949 align:start position:0%
so we're gonna do is like just comment
out<00:08:31.680><c> these</c><00:08:31.919><c> two</c>

00:08:32.949 --> 00:08:32.959 align:start position:0%
out these two
 

00:08:32.959 --> 00:08:35.509 align:start position:0%
out these two
acquire<00:08:33.440><c> releases</c><00:08:33.919><c> that</c><00:08:34.080><c> basically</c><00:08:34.719><c> uh</c><00:08:35.039><c> mark</c>

00:08:35.509 --> 00:08:35.519 align:start position:0%
acquire releases that basically uh mark
 

00:08:35.519 --> 00:08:36.630 align:start position:0%
acquire releases that basically uh mark
you<00:08:35.599><c> know</c><00:08:35.839><c> the</c>

00:08:36.630 --> 00:08:36.640 align:start position:0%
you know the
 

00:08:36.640 --> 00:08:38.230 align:start position:0%
you know the
acquiring<00:08:37.120><c> of</c><00:08:37.200><c> the</c><00:08:37.279><c> lock</c><00:08:37.599><c> and</c><00:08:37.680><c> then</c><00:08:37.919><c> releasing</c>

00:08:38.230 --> 00:08:38.240 align:start position:0%
acquiring of the lock and then releasing
 

00:08:38.240 --> 00:08:40.070 align:start position:0%
acquiring of the lock and then releasing
the<00:08:38.399><c> lock</c><00:08:38.719><c> you</c><00:08:38.800><c> know</c><00:08:39.120><c> and</c><00:08:39.279><c> so</c><00:08:39.519><c> this</c><00:08:39.519><c> this</c>

00:08:40.070 --> 00:08:40.080 align:start position:0%
the lock you know and so this this
 

00:08:40.080 --> 00:08:42.149 align:start position:0%
the lock you know and so this this
this<00:08:40.800><c> this</c><00:08:40.959><c> piece</c><00:08:41.200><c> of</c><00:08:41.360><c> code</c><00:08:41.599><c> that</c><00:08:41.760><c> sits</c><00:08:42.000><c> in</c><00:08:42.080><c> the</c>

00:08:42.149 --> 00:08:42.159 align:start position:0%
this this piece of code that sits in the
 

00:08:42.159 --> 00:08:44.310 align:start position:0%
this this piece of code that sits in the
middle<00:08:42.800><c> uh</c><00:08:43.039><c> that</c><00:08:43.200><c> used</c><00:08:43.440><c> to</c><00:08:43.519><c> be</c>

00:08:44.310 --> 00:08:44.320 align:start position:0%
middle uh that used to be
 

00:08:44.320 --> 00:08:46.070 align:start position:0%
middle uh that used to be
uh<00:08:44.720><c> there's</c><00:08:44.880><c> now</c><00:08:45.120><c> not</c><00:08:45.360><c> more</c><00:08:45.600><c> it's</c><00:08:45.680><c> not</c><00:08:45.839><c> being</c>

00:08:46.070 --> 00:08:46.080 align:start position:0%
uh there's now not more it's not being
 

00:08:46.080 --> 00:08:47.509 align:start position:0%
uh there's now not more it's not being
executed<00:08:46.640><c> anymore</c>

00:08:47.509 --> 00:08:47.519 align:start position:0%
executed anymore
 

00:08:47.519 --> 00:08:54.150 align:start position:0%
executed anymore
atomically<00:08:52.839><c> uh</c>

00:08:54.150 --> 00:08:54.160 align:start position:0%
atomically uh
 

00:08:54.160 --> 00:08:57.430 align:start position:0%
atomically uh
so<00:08:54.800><c> let's</c><00:08:55.120><c> do</c><00:08:55.279><c> that</c><00:08:57.040><c> uh</c>

00:08:57.430 --> 00:08:57.440 align:start position:0%
so let's do that uh
 

00:08:57.440 --> 00:09:01.509 align:start position:0%
so let's do that uh
and<00:08:58.000><c> then</c><00:08:58.320><c> run</c><00:08:59.680><c> uh</c>

00:09:01.509 --> 00:09:01.519 align:start position:0%
and then run uh
 

00:09:01.519 --> 00:09:05.269 align:start position:0%
and then run uh
qmu<00:09:02.160><c> so</c><00:09:02.399><c> we'll</c><00:09:02.560><c> compile</c><00:09:02.959><c> it</c>

00:09:05.269 --> 00:09:05.279 align:start position:0%
 
 

00:09:05.279 --> 00:09:08.150 align:start position:0%
 
and<00:09:05.839><c> you</c><00:09:06.000><c> know</c><00:09:06.080><c> before</c><00:09:06.399><c> i</c><00:09:06.560><c> run</c><00:09:06.800><c> it</c><00:09:07.120><c> in</c><00:09:07.360><c> a</c><00:09:07.760><c> notice</c>

00:09:08.150 --> 00:09:08.160 align:start position:0%
and you know before i run it in a notice
 

00:09:08.160 --> 00:09:09.350 align:start position:0%
and you know before i run it in a notice
actually<00:09:08.320><c> we</c><00:09:08.480><c> already</c><00:09:08.800><c> booted</c>

00:09:09.350 --> 00:09:09.360 align:start position:0%
actually we already booted
 

00:09:09.360 --> 00:09:12.150 align:start position:0%
actually we already booted
and<00:09:09.839><c> actually</c><00:09:10.320><c> uh</c><00:09:11.519><c> presumably</c><00:09:11.920><c> have</c><00:09:12.000><c> made</c>

00:09:12.150 --> 00:09:12.160 align:start position:0%
and actually uh presumably have made
 

00:09:12.160 --> 00:09:13.430 align:start position:0%
and actually uh presumably have made
some<00:09:12.399><c> calls</c><00:09:12.720><c> probably</c><00:09:13.040><c> to</c>

00:09:13.430 --> 00:09:13.440 align:start position:0%
some calls probably to
 

00:09:13.440 --> 00:09:15.829 align:start position:0%
some calls probably to
k3<00:09:14.320><c> as</c><00:09:14.480><c> you</c><00:09:14.560><c> probably</c><00:09:15.040><c> as</c><00:09:15.200><c> you</c><00:09:15.279><c> know</c><00:09:15.519><c> and</c><00:09:15.680><c> so</c>

00:09:15.829 --> 00:09:15.839 align:start position:0%
k3 as you probably as you know and so
 

00:09:15.839 --> 00:09:17.990 align:start position:0%
k3 as you probably as you know and so
effective<00:09:16.240><c> things</c><00:09:16.399><c> seem</c><00:09:16.560><c> to</c><00:09:16.720><c> be</c><00:09:16.800><c> working</c><00:09:17.120><c> fine</c>

00:09:17.990 --> 00:09:18.000 align:start position:0%
effective things seem to be working fine
 

00:09:18.000 --> 00:09:20.710 align:start position:0%
effective things seem to be working fine
so<00:09:18.160><c> let's</c><00:09:18.560><c> run</c><00:09:18.800><c> user</c><00:09:19.120><c> tests</c><00:09:20.160><c> and</c><00:09:20.320><c> maybe</c><00:09:20.560><c> you</c>

00:09:20.710 --> 00:09:20.720 align:start position:0%
so let's run user tests and maybe you
 

00:09:20.720 --> 00:09:22.230 align:start position:0%
so let's run user tests and maybe you
know<00:09:20.880><c> it's</c><00:09:21.040><c> interesting</c><00:09:21.279><c> to</c><00:09:21.839><c> think</c><00:09:22.000><c> a</c><00:09:22.080><c> little</c>

00:09:22.230 --> 00:09:22.240 align:start position:0%
know it's interesting to think a little
 

00:09:22.240 --> 00:09:23.590 align:start position:0%
know it's interesting to think a little
bit<00:09:22.399><c> about</c><00:09:22.560><c> this</c><00:09:22.800><c> now</c><00:09:22.959><c> what</c><00:09:23.120><c> do</c><00:09:23.120><c> you</c><00:09:23.200><c> expect</c>

00:09:23.590 --> 00:09:23.600 align:start position:0%
bit about this now what do you expect
 

00:09:23.600 --> 00:09:24.310 align:start position:0%
bit about this now what do you expect
will<00:09:23.839><c> this</c>

00:09:24.310 --> 00:09:24.320 align:start position:0%
will this
 

00:09:24.320 --> 00:09:28.870 align:start position:0%
will this
work<00:09:24.720><c> will</c><00:09:24.880><c> this</c><00:09:25.120><c> not</c><00:09:25.279><c> work</c>

00:09:28.870 --> 00:09:28.880 align:start position:0%
 
 

00:09:28.880 --> 00:09:33.350 align:start position:0%
 
anybody<00:09:29.200><c> who</c><00:09:29.360><c> tried</c><00:09:29.600><c> it</c><00:09:29.760><c> out</c>

00:09:33.350 --> 00:09:33.360 align:start position:0%
 
 

00:09:33.360 --> 00:09:35.990 align:start position:0%
 
i<00:09:33.519><c> think</c><00:09:34.000><c> it</c><00:09:34.160><c> could</c><00:09:34.399><c> potentially</c><00:09:35.279><c> lose</c><00:09:35.680><c> some</c>

00:09:35.990 --> 00:09:36.000 align:start position:0%
i think it could potentially lose some
 

00:09:36.000 --> 00:09:36.630 align:start position:0%
i think it could potentially lose some
pages

00:09:36.630 --> 00:09:36.640 align:start position:0%
pages
 

00:09:36.640 --> 00:09:39.670 align:start position:0%
pages
but<00:09:37.279><c> maybe</c><00:09:37.600><c> it</c><00:09:37.760><c> will</c><00:09:38.000><c> not</c><00:09:38.560><c> because</c>

00:09:39.670 --> 00:09:39.680 align:start position:0%
but maybe it will not because
 

00:09:39.680 --> 00:09:42.790 align:start position:0%
but maybe it will not because
uh<00:09:39.920><c> maybe</c><00:09:40.399><c> a</c><00:09:40.560><c> race</c><00:09:40.800><c> condition</c><00:09:41.200><c> wouldn't</c><00:09:41.440><c> occur</c>

00:09:42.790 --> 00:09:42.800 align:start position:0%
uh maybe a race condition wouldn't occur
 

00:09:42.800 --> 00:09:44.310 align:start position:0%
uh maybe a race condition wouldn't occur
yeah<00:09:42.959><c> so</c><00:09:43.200><c> one</c><00:09:43.360><c> of</c><00:09:43.440><c> the</c><00:09:43.519><c> things</c><00:09:43.760><c> is</c><00:09:43.839><c> that</c><00:09:44.000><c> these</c>

00:09:44.310 --> 00:09:44.320 align:start position:0%
yeah so one of the things is that these
 

00:09:44.320 --> 00:09:45.829 align:start position:0%
yeah so one of the things is that these
uh<00:09:44.560><c> with</c><00:09:44.800><c> race</c><00:09:44.959><c> conditions</c><00:09:45.440><c> they</c><00:09:45.600><c> might</c><00:09:45.760><c> not</c>

00:09:45.829 --> 00:09:45.839 align:start position:0%
uh with race conditions they might not
 

00:09:45.839 --> 00:09:46.550 align:start position:0%
uh with race conditions they might not
happen<00:09:46.080><c> so</c><00:09:46.240><c> let's</c>

00:09:46.550 --> 00:09:46.560 align:start position:0%
happen so let's
 

00:09:46.560 --> 00:09:48.829 align:start position:0%
happen so let's
run<00:09:46.720><c> the</c><00:09:46.800><c> user</c><00:09:47.040><c> test</c><00:09:47.279><c> and</c><00:09:47.360><c> see</c><00:09:47.519><c> actually</c><00:09:47.680><c> what</c>

00:09:48.829 --> 00:09:48.839 align:start position:0%
run the user test and see actually what
 

00:09:48.839 --> 00:09:50.790 align:start position:0%
run the user test and see actually what
happens

00:09:50.790 --> 00:09:50.800 align:start position:0%
happens
 

00:09:50.800 --> 00:09:54.310 align:start position:0%
happens
um<00:09:51.839><c> so</c><00:09:52.080><c> here</c><00:09:52.240><c> we</c><00:09:52.399><c> start</c><00:09:52.560><c> it</c><00:09:52.720><c> up</c>

00:09:54.310 --> 00:09:54.320 align:start position:0%
um so here we start it up
 

00:09:54.320 --> 00:09:55.910 align:start position:0%
um so here we start it up
uh<00:09:54.720><c> take</c><00:09:54.880><c> a</c><00:09:54.959><c> little</c><00:09:55.200><c> while</c><00:09:55.519><c> zoom</c><00:09:55.760><c> might</c>

00:09:55.910 --> 00:09:55.920 align:start position:0%
uh take a little while zoom might
 

00:09:55.920 --> 00:09:58.389 align:start position:0%
uh take a little while zoom might
complain<00:09:56.320><c> a</c><00:09:56.399><c> little</c><00:09:56.560><c> bit</c><00:09:56.720><c> because</c><00:09:57.120><c> you</c><00:09:57.279><c> know</c>

00:09:58.389 --> 00:09:58.399 align:start position:0%
complain a little bit because you know
 

00:09:58.399 --> 00:10:01.750 align:start position:0%
complain a little bit because you know
running<00:09:58.640><c> a</c><00:09:58.720><c> lot</c><00:09:58.959><c> of</c><00:10:00.800><c> put</c><00:10:00.959><c> a</c><00:10:01.040><c> lot</c><00:10:01.200><c> of</c><00:10:01.279><c> load</c><00:10:01.519><c> in</c><00:10:01.600><c> my</c>

00:10:01.750 --> 00:10:01.760 align:start position:0%
running a lot of put a lot of load in my
 

00:10:01.760 --> 00:10:03.030 align:start position:0%
running a lot of put a lot of load in my
machine<00:10:02.000><c> here</c><00:10:02.240><c> correctly</c><00:10:02.560><c> if</c><00:10:02.640><c> you</c><00:10:02.800><c> probably</c>

00:10:03.030 --> 00:10:03.040 align:start position:0%
machine here correctly if you probably
 

00:10:03.040 --> 00:10:03.430 align:start position:0%
machine here correctly if you probably
know

00:10:03.430 --> 00:10:03.440 align:start position:0%
know
 

00:10:03.440 --> 00:10:07.030 align:start position:0%
know
the<00:10:04.160><c> q</c><00:10:04.399><c> mu</c><00:10:04.640><c> simulating</c><00:10:05.200><c> free</c><00:10:06.320><c> cores</c><00:10:06.640><c> here</c><00:10:06.959><c> and</c>

00:10:07.030 --> 00:10:07.040 align:start position:0%
the q mu simulating free cores here and
 

00:10:07.040 --> 00:10:08.470 align:start position:0%
the q mu simulating free cores here and
the<00:10:07.279><c> discrete</c><00:10:07.680><c> course</c><00:10:07.920><c> might</c><00:10:08.160><c> run</c><00:10:08.320><c> in</c>

00:10:08.470 --> 00:10:08.480 align:start position:0%
the discrete course might run in
 

00:10:08.480 --> 00:10:11.910 align:start position:0%
the discrete course might run in
parallel

00:10:11.910 --> 00:10:11.920 align:start position:0%
 
 

00:10:11.920 --> 00:10:14.150 align:start position:0%
 
and<00:10:12.160><c> you</c><00:10:12.320><c> know</c><00:10:12.720><c> so</c><00:10:12.959><c> far</c><00:10:13.200><c> so</c><00:10:13.360><c> good</c><00:10:13.920><c> you</c><00:10:14.000><c> know</c>

00:10:14.150 --> 00:10:14.160 align:start position:0%
and you know so far so good you know
 

00:10:14.160 --> 00:10:16.829 align:start position:0%
and you know so far so good you know
we're<00:10:14.320><c> starting</c><00:10:14.640><c> to</c><00:10:14.720><c> pass</c>

00:10:16.829 --> 00:10:16.839 align:start position:0%
we're starting to pass
 

00:10:16.839 --> 00:10:21.430 align:start position:0%
we're starting to pass
tests

00:10:21.430 --> 00:10:21.440 align:start position:0%
 
 

00:10:21.440 --> 00:10:22.710 align:start position:0%
 
that's<00:10:21.680><c> a</c><00:10:21.760><c> little</c><00:10:21.920><c> bit</c><00:10:22.000><c> slower</c><00:10:22.399><c> because</c><00:10:22.560><c> i'm</c>

00:10:22.710 --> 00:10:22.720 align:start position:0%
that's a little bit slower because i'm
 

00:10:22.720 --> 00:10:27.030 align:start position:0%
that's a little bit slower because i'm
running<00:10:22.959><c> zoom</c><00:10:23.279><c> at</c><00:10:23.360><c> the</c><00:10:23.440><c> same</c><00:10:23.680><c> time</c>

00:10:27.030 --> 00:10:27.040 align:start position:0%
 
 

00:10:27.040 --> 00:10:29.350 align:start position:0%
 
let's<00:10:27.440><c> wait</c><00:10:27.680><c> a</c><00:10:27.760><c> couple</c><00:10:28.000><c> more</c><00:10:28.320><c> and</c><00:10:28.480><c> just</c><00:10:28.720><c> uh</c><00:10:29.200><c> see</c>

00:10:29.350 --> 00:10:29.360 align:start position:0%
let's wait a couple more and just uh see
 

00:10:29.360 --> 00:10:43.110 align:start position:0%
let's wait a couple more and just uh see
what's<00:10:29.600><c> going</c><00:10:30.839><c> on</c>

00:10:43.110 --> 00:10:43.120 align:start position:0%
 
 

00:10:43.120 --> 00:10:46.150 align:start position:0%
 
okay<00:10:43.760><c> well</c><00:10:44.839><c> uh</c>

00:10:46.150 --> 00:10:46.160 align:start position:0%
okay well uh
 

00:10:46.160 --> 00:10:48.470 align:start position:0%
okay well uh
let's<00:10:46.480><c> uh</c><00:10:46.720><c> just</c><00:10:46.959><c> go</c><00:10:47.120><c> back</c><00:10:47.440><c> to</c><00:10:47.600><c> the</c><00:10:47.920><c> slides</c><00:10:48.399><c> and</c>

00:10:48.470 --> 00:10:48.480 align:start position:0%
let's uh just go back to the slides and
 

00:10:48.480 --> 00:10:50.230 align:start position:0%
let's uh just go back to the slides and
then<00:10:48.880><c> we'll</c><00:10:49.200><c> check</c><00:10:49.440><c> back</c><00:10:49.680><c> in</c><00:10:49.839><c> in</c><00:10:49.920><c> a</c><00:10:50.000><c> little</c>

00:10:50.230 --> 00:10:50.240 align:start position:0%
then we'll check back in in a little
 

00:10:50.240 --> 00:10:52.870 align:start position:0%
then we'll check back in in a little
while<00:10:50.560><c> so</c><00:10:50.720><c> to</c><00:10:50.800><c> see</c><00:10:50.959><c> what</c><00:10:51.120><c> actually</c><00:10:51.440><c> happens</c>

00:10:52.870 --> 00:10:52.880 align:start position:0%
while so to see what actually happens
 

00:10:52.880 --> 00:10:55.030 align:start position:0%
while so to see what actually happens
uh<00:10:53.680><c> but</c><00:10:53.839><c> you</c><00:10:54.000><c> know</c><00:10:54.079><c> as</c><00:10:54.240><c> pointed</c><00:10:54.560><c> out</c><00:10:54.800><c> you</c><00:10:54.959><c> know</c>

00:10:55.030 --> 00:10:55.040 align:start position:0%
uh but you know as pointed out you know
 

00:10:55.040 --> 00:10:56.630 align:start position:0%
uh but you know as pointed out you know
these<00:10:55.200><c> race</c><00:10:55.440><c> conditions</c><00:10:55.839><c> may</c><00:10:56.000><c> appear</c><00:10:56.320><c> may</c><00:10:56.480><c> not</c>

00:10:56.630 --> 00:10:56.640 align:start position:0%
these race conditions may appear may not
 

00:10:56.640 --> 00:10:57.590 align:start position:0%
these race conditions may appear may not
appear<00:10:57.040><c> right</c><00:10:57.279><c> because</c>

00:10:57.590 --> 00:10:57.600 align:start position:0%
appear right because
 

00:10:57.600 --> 00:10:59.269 align:start position:0%
appear right because
it<00:10:57.839><c> is</c><00:10:58.000><c> always</c><00:10:58.240><c> the</c><00:10:58.399><c> case</c><00:10:58.720><c> that</c><00:10:58.959><c> you</c><00:10:59.040><c> know</c>

00:10:59.269 --> 00:10:59.279 align:start position:0%
it is always the case that you know
 

00:10:59.279 --> 00:11:02.310 align:start position:0%
it is always the case that you know
every<00:10:59.600><c> core</c><00:10:59.920><c> or</c><00:11:00.079><c> every</c><00:11:00.240><c> time</c><00:11:00.480><c> we</c><00:11:00.560><c> call</c><00:11:00.800><c> k3</c>

00:11:02.310 --> 00:11:02.320 align:start position:0%
every core or every time we call k3
 

00:11:02.320 --> 00:11:04.470 align:start position:0%
every core or every time we call k3
these<00:11:02.560><c> two</c><00:11:02.720><c> u</c><00:11:02.959><c> lines</c><00:11:03.200><c> are</c><00:11:03.360><c> executed</c>

00:11:04.470 --> 00:11:04.480 align:start position:0%
these two u lines are executed
 

00:11:04.480 --> 00:11:05.350 align:start position:0%
these two u lines are executed
atomically

00:11:05.350 --> 00:11:05.360 align:start position:0%
atomically
 

00:11:05.360 --> 00:11:08.310 align:start position:0%
atomically
uh<00:11:06.160><c> as</c><00:11:06.880><c> as</c><00:11:07.040><c> they</c><00:11:07.200><c> would</c><00:11:07.440><c> have</c><00:11:07.519><c> done</c><00:11:07.920><c> with</c><00:11:08.160><c> the</c>

00:11:08.310 --> 00:11:08.320 align:start position:0%
uh as as they would have done with the
 

00:11:08.320 --> 00:11:09.030 align:start position:0%
uh as as they would have done with the
lock

00:11:09.030 --> 00:11:09.040 align:start position:0%
lock
 

00:11:09.040 --> 00:11:10.870 align:start position:0%
lock
then<00:11:09.360><c> there's</c><00:11:09.600><c> no</c><00:11:09.760><c> problem</c><00:11:10.160><c> and</c><00:11:10.480><c> the</c><00:11:10.640><c> only</c>

00:11:10.870 --> 00:11:10.880 align:start position:0%
then there's no problem and the only
 

00:11:10.880 --> 00:11:12.949 align:start position:0%
then there's no problem and the only
problem<00:11:11.200><c> is</c><00:11:11.360><c> like</c><00:11:11.519><c> between</c><00:11:11.920><c> two</c><00:11:12.160><c> frets</c><00:11:12.560><c> or</c><00:11:12.720><c> two</c>

00:11:12.949 --> 00:11:12.959 align:start position:0%
problem is like between two frets or two
 

00:11:12.959 --> 00:11:13.990 align:start position:0%
problem is like between two frets or two
processors<00:11:13.440><c> executed</c>

00:11:13.990 --> 00:11:14.000 align:start position:0%
processors executed
 

00:11:14.000 --> 00:11:15.670 align:start position:0%
processors executed
at<00:11:14.079><c> the</c><00:11:14.160><c> same</c><00:11:14.480><c> time</c><00:11:14.880><c> and</c><00:11:15.040><c> so</c><00:11:15.200><c> becomes</c><00:11:15.600><c> in</c>

00:11:15.670 --> 00:11:15.680 align:start position:0%
at the same time and so becomes in
 

00:11:15.680 --> 00:11:17.110 align:start position:0%
at the same time and so becomes in
between

00:11:17.110 --> 00:11:17.120 align:start position:0%
between
 

00:11:17.120 --> 00:11:18.870 align:start position:0%
between
look<00:11:17.279><c> at</c><00:11:17.360><c> this</c><00:11:17.680><c> actually</c><00:11:18.320><c> you</c><00:11:18.399><c> know</c><00:11:18.560><c> while</c><00:11:18.800><c> i'm</c>

00:11:18.870 --> 00:11:18.880 align:start position:0%
look at this actually you know while i'm
 

00:11:18.880 --> 00:11:20.310 align:start position:0%
look at this actually you know while i'm
talking<00:11:19.279><c> you</c><00:11:19.360><c> know</c><00:11:19.519><c> we</c><00:11:19.600><c> see</c><00:11:19.839><c> actually</c><00:11:20.160><c> there</c>

00:11:20.310 --> 00:11:20.320 align:start position:0%
talking you know we see actually there
 

00:11:20.320 --> 00:11:22.150 align:start position:0%
talking you know we see actually there
is<00:11:20.480><c> a</c><00:11:20.560><c> panic</c><00:11:20.959><c> and</c><00:11:21.200><c> so</c><00:11:21.440><c> there</c><00:11:21.600><c> is</c><00:11:21.680><c> some</c><00:11:21.920><c> race</c>

00:11:22.150 --> 00:11:22.160 align:start position:0%
is a panic and so there is some race
 

00:11:22.160 --> 00:11:23.430 align:start position:0%
is a panic and so there is some race
condition<00:11:22.480><c> that</c><00:11:22.640><c> can</c><00:11:22.800><c> actually</c><00:11:23.040><c> cause</c><00:11:23.360><c> a</c>

00:11:23.430 --> 00:11:23.440 align:start position:0%
condition that can actually cause a
 

00:11:23.440 --> 00:11:25.670 align:start position:0%
condition that can actually cause a
panic

00:11:25.670 --> 00:11:25.680 align:start position:0%
panic
 

00:11:25.680 --> 00:11:27.269 align:start position:0%
panic
there<00:11:25.839><c> are</c><00:11:25.920><c> other</c><00:11:26.079><c> race</c><00:11:26.320><c> conditions</c><00:11:26.800><c> that</c>

00:11:27.269 --> 00:11:27.279 align:start position:0%
there are other race conditions that
 

00:11:27.279 --> 00:11:29.110 align:start position:0%
there are other race conditions that
will<00:11:27.440><c> show</c><00:11:27.760><c> up</c><00:11:27.839><c> as</c><00:11:28.079><c> indeed</c><00:11:28.480><c> as</c><00:11:28.720><c> uh</c>

00:11:29.110 --> 00:11:29.120 align:start position:0%
will show up as indeed as uh
 

00:11:29.120 --> 00:11:32.069 align:start position:0%
will show up as indeed as uh
as<00:11:29.360><c> mentioned</c><00:11:30.079><c> or</c><00:11:30.320><c> as</c><00:11:30.959><c> well</c><00:11:31.120><c> answered</c><00:11:31.600><c> that</c>

00:11:32.069 --> 00:11:32.079 align:start position:0%
as mentioned or as well answered that
 

00:11:32.079 --> 00:11:33.110 align:start position:0%
as mentioned or as well answered that
will<00:11:32.240><c> show</c><00:11:32.480><c> up</c><00:11:32.560><c> as</c><00:11:32.720><c> like</c>

00:11:33.110 --> 00:11:33.120 align:start position:0%
will show up as like
 

00:11:33.120 --> 00:11:34.710 align:start position:0%
will show up as like
not<00:11:33.360><c> enough</c><00:11:33.760><c> you</c><00:11:33.839><c> know</c><00:11:34.000><c> some</c><00:11:34.160><c> free</c><00:11:34.320><c> pages</c>

00:11:34.710 --> 00:11:34.720 align:start position:0%
not enough you know some free pages
 

00:11:34.720 --> 00:11:36.550 align:start position:0%
not enough you know some free pages
where<00:11:34.880><c> some</c><00:11:35.040><c> pages</c><00:11:35.360><c> get</c><00:11:35.600><c> lost</c><00:11:36.000><c> so</c><00:11:36.240><c> basically</c>

00:11:36.550 --> 00:11:36.560 align:start position:0%
where some pages get lost so basically
 

00:11:36.560 --> 00:11:38.949 align:start position:0%
where some pages get lost so basically
user<00:11:36.800><c> test</c><00:11:37.040><c> runs</c><00:11:37.360><c> fine</c><00:11:37.600><c> until</c><00:11:37.839><c> the</c><00:11:38.000><c> very</c><00:11:38.320><c> end</c>

00:11:38.949 --> 00:11:38.959 align:start position:0%
user test runs fine until the very end
 

00:11:38.959 --> 00:11:41.269 align:start position:0%
user test runs fine until the very end
where<00:11:39.120><c> it</c><00:11:39.200><c> complains</c><00:11:39.680><c> saying</c><00:11:40.240><c> well</c><00:11:40.640><c> you</c><00:11:40.959><c> lost</c>

00:11:41.269 --> 00:11:41.279 align:start position:0%
where it complains saying well you lost
 

00:11:41.279 --> 00:11:43.430 align:start position:0%
where it complains saying well you lost
some<00:11:41.680><c> pages</c><00:11:42.079><c> during</c><00:11:42.560><c> uh</c><00:11:42.800><c> all</c><00:11:43.040><c> usual</c>

00:11:43.430 --> 00:11:43.440 align:start position:0%
some pages during uh all usual
 

00:11:43.440 --> 00:11:46.550 align:start position:0%
some pages during uh all usual
all<00:11:43.600><c> of</c><00:11:43.760><c> the</c><00:11:43.839><c> rounds</c><00:11:44.079><c> of</c><00:11:44.160><c> user</c><00:11:44.480><c> test</c><00:11:45.600><c> okay</c><00:11:46.399><c> so</c>

00:11:46.550 --> 00:11:46.560 align:start position:0%
all of the rounds of user test okay so
 

00:11:46.560 --> 00:11:47.990 align:start position:0%
all of the rounds of user test okay so
these<00:11:46.880><c> race</c><00:11:47.120><c> conditions</c><00:11:47.519><c> can</c><00:11:47.600><c> show</c><00:11:47.839><c> up</c><00:11:47.920><c> in</c>

00:11:47.990 --> 00:11:48.000 align:start position:0%
these race conditions can show up in
 

00:11:48.000 --> 00:11:48.790 align:start position:0%
these race conditions can show up in
different<00:11:48.240><c> ways</c>

00:11:48.790 --> 00:11:48.800 align:start position:0%
different ways
 

00:11:48.800 --> 00:11:50.949 align:start position:0%
different ways
uh<00:11:49.040><c> they</c><00:11:49.200><c> may</c><00:11:49.360><c> happen</c><00:11:49.600><c> they</c><00:11:49.760><c> may</c><00:11:49.920><c> not</c><00:11:50.079><c> happen</c>

00:11:50.949 --> 00:11:50.959 align:start position:0%
uh they may happen they may not happen
 

00:11:50.959 --> 00:11:52.870 align:start position:0%
uh they may happen they may not happen
uh<00:11:51.279><c> clearly</c><00:11:51.600><c> something</c><00:11:51.839><c> happened</c><00:11:52.160><c> here</c>

00:11:52.870 --> 00:11:52.880 align:start position:0%
uh clearly something happened here
 

00:11:52.880 --> 00:11:55.110 align:start position:0%
uh clearly something happened here
uh<00:11:53.680><c> so</c><00:11:53.839><c> let's</c><00:11:54.000><c> try</c><00:11:54.160><c> to</c><00:11:54.320><c> understand</c><00:11:54.880><c> you</c><00:11:54.959><c> know</c>

00:11:55.110 --> 00:11:55.120 align:start position:0%
uh so let's try to understand you know
 

00:11:55.120 --> 00:11:56.310 align:start position:0%
uh so let's try to understand you know
what what<00:11:55.519><c> what</c><00:11:55.839><c> actually</c>

00:11:56.310 --> 00:11:56.320 align:start position:0%
what what what actually
 

00:11:56.320 --> 00:12:01.190 align:start position:0%
what what what actually
uh<00:11:56.959><c> what</c><00:11:57.120><c> goes</c><00:11:57.360><c> wrong</c>

00:12:01.190 --> 00:12:01.200 align:start position:0%
 
 

00:12:01.200 --> 00:12:07.030 align:start position:0%
 
back<00:12:01.360><c> to</c><00:12:01.519><c> the</c><00:12:01.680><c> slides</c>

00:12:07.030 --> 00:12:07.040 align:start position:0%
 
 

00:12:07.040 --> 00:12:08.629 align:start position:0%
 
so<00:12:07.519><c> the</c><00:12:07.600><c> picture</c><00:12:07.920><c> you</c><00:12:08.000><c> should</c><00:12:08.240><c> have</c><00:12:08.320><c> in</c><00:12:08.480><c> your</c>

00:12:08.629 --> 00:12:08.639 align:start position:0%
so the picture you should have in your
 

00:12:08.639 --> 00:12:10.230 align:start position:0%
so the picture you should have in your
head<00:12:08.880><c> like</c><00:12:09.200><c> so</c><00:12:09.360><c> there's</c><00:12:09.600><c> this</c>

00:12:10.230 --> 00:12:10.240 align:start position:0%
head like so there's this
 

00:12:10.240 --> 00:12:13.110 align:start position:0%
head like so there's this
multiple<00:12:10.720><c> cores</c><00:12:11.279><c> that</c><00:12:11.440><c> we're</c><00:12:11.680><c> running</c><00:12:12.959><c> so</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
multiple cores that we're running so
 

00:12:13.120 --> 00:12:14.629 align:start position:0%
multiple cores that we're running so
here's<00:12:13.360><c> cpu0</c>

00:12:14.629 --> 00:12:14.639 align:start position:0%
here's cpu0
 

00:12:14.639 --> 00:12:17.509 align:start position:0%
here's cpu0
so<00:12:14.800><c> cpu0</c><00:12:15.519><c> is</c><00:12:15.680><c> executing</c><00:12:16.079><c> instructions</c><00:12:17.360><c> and</c>

00:12:17.509 --> 00:12:17.519 align:start position:0%
so cpu0 is executing instructions and
 

00:12:17.519 --> 00:12:18.230 align:start position:0%
so cpu0 is executing instructions and
cpu<00:12:17.920><c> one</c>

00:12:18.230 --> 00:12:18.240 align:start position:0%
cpu one
 

00:12:18.240 --> 00:12:21.670 align:start position:0%
cpu one
is<00:12:18.399><c> executing</c><00:12:18.880><c> instructions</c><00:12:21.200><c> and</c>

00:12:21.670 --> 00:12:21.680 align:start position:0%
is executing instructions and
 

00:12:21.680 --> 00:12:24.150 align:start position:0%
is executing instructions and
they're<00:12:21.839><c> both</c><00:12:22.079><c> connected</c><00:12:22.800><c> you</c><00:12:22.959><c> know</c><00:12:23.120><c> to</c><00:12:24.079><c> a</c>

00:12:24.150 --> 00:12:24.160 align:start position:0%
they're both connected you know to a
 

00:12:24.160 --> 00:12:25.430 align:start position:0%
they're both connected you know to a
memory<00:12:24.639><c> right</c><00:12:24.959><c> if</c><00:12:25.120><c> you're</c>

00:12:25.430 --> 00:12:25.440 align:start position:0%
memory right if you're
 

00:12:25.440 --> 00:12:27.030 align:start position:0%
memory right if you're
looking<00:12:25.680><c> back</c><00:12:26.000><c> think</c><00:12:26.160><c> back</c><00:12:26.320><c> up</c><00:12:26.480><c> at</c><00:12:26.560><c> the</c><00:12:26.720><c> scheme</c>

00:12:27.030 --> 00:12:27.040 align:start position:0%
looking back think back up at the scheme
 

00:12:27.040 --> 00:12:28.310 align:start position:0%
looking back think back up at the scheme
schematics<00:12:27.600><c> you</c><00:12:27.680><c> know</c><00:12:27.760><c> that</c><00:12:27.920><c> we've</c><00:12:28.000><c> shown</c><00:12:28.240><c> a</c>

00:12:28.310 --> 00:12:28.320 align:start position:0%
schematics you know that we've shown a
 

00:12:28.320 --> 00:12:29.430 align:start position:0%
schematics you know that we've shown a
couple<00:12:28.480><c> times</c><00:12:28.720><c> before</c>

00:12:29.430 --> 00:12:29.440 align:start position:0%
couple times before
 

00:12:29.440 --> 00:12:31.750 align:start position:0%
couple times before
in<00:12:29.600><c> fact</c><00:12:29.760><c> there's</c><00:12:30.000><c> a</c><00:12:30.560><c> dram</c><00:12:31.040><c> controller</c><00:12:31.680><c> you</c>

00:12:31.750 --> 00:12:31.760 align:start position:0%
in fact there's a dram controller you
 

00:12:31.760 --> 00:12:33.670 align:start position:0%
in fact there's a dram controller you
know<00:12:31.920><c> that</c><00:12:32.399><c> actually</c>

00:12:33.670 --> 00:12:33.680 align:start position:0%
know that actually
 

00:12:33.680 --> 00:12:36.550 align:start position:0%
know that actually
uh<00:12:34.079><c> connects</c><00:12:34.480><c> you</c><00:12:34.639><c> know</c><00:12:34.800><c> to</c><00:12:34.959><c> the</c><00:12:35.120><c> drm</c><00:12:35.600><c> chips</c>

00:12:36.550 --> 00:12:36.560 align:start position:0%
uh connects you know to the drm chips
 

00:12:36.560 --> 00:12:38.629 align:start position:0%
uh connects you know to the drm chips
where<00:12:36.880><c> all</c><00:12:36.959><c> the</c><00:12:37.120><c> stage</c><00:12:37.440><c> is</c><00:12:37.519><c> living</c>

00:12:38.629 --> 00:12:38.639 align:start position:0%
where all the stage is living
 

00:12:38.639 --> 00:12:41.430 align:start position:0%
where all the stage is living
uh<00:12:39.200><c> or</c><00:12:39.440><c> all</c><00:12:39.600><c> the</c><00:12:39.680><c> memory</c><00:12:40.000><c> is</c><00:12:40.079><c> living</c><00:12:41.200><c> so</c><00:12:41.360><c> i'm</c>

00:12:41.430 --> 00:12:41.440 align:start position:0%
uh or all the memory is living so i'm
 

00:12:41.440 --> 00:12:42.470 align:start position:0%
uh or all the memory is living so i'm
going<00:12:41.519><c> to</c><00:12:41.600><c> make</c><00:12:41.760><c> that</c><00:12:41.920><c> memory</c><00:12:42.160><c> a</c><00:12:42.240><c> little</c><00:12:42.399><c> bit</c>

00:12:42.470 --> 00:12:42.480 align:start position:0%
going to make that memory a little bit
 

00:12:42.480 --> 00:12:45.910 align:start position:0%
going to make that memory a little bit
bigger<00:12:42.800><c> because</c><00:12:42.959><c> i</c><00:12:43.040><c> want</c><00:12:43.200><c> to</c>

00:12:45.910 --> 00:12:45.920 align:start position:0%
 
 

00:12:45.920 --> 00:12:47.990 align:start position:0%
 
have<00:12:46.079><c> some</c><00:12:46.240><c> place</c><00:12:46.480><c> to</c><00:12:46.639><c> draw</c><00:12:47.200><c> and</c><00:12:47.360><c> so</c><00:12:47.600><c> basically</c>

00:12:47.990 --> 00:12:48.000 align:start position:0%
have some place to draw and so basically
 

00:12:48.000 --> 00:12:49.190 align:start position:0%
have some place to draw and so basically
our<00:12:48.160><c> tree</c><00:12:48.399><c> list</c>

00:12:49.190 --> 00:12:49.200 align:start position:0%
our tree list
 

00:12:49.200 --> 00:12:52.949 align:start position:0%
our tree list
you<00:12:49.360><c> know</c><00:12:50.000><c> lives</c><00:12:50.839><c> in</c>

00:12:52.949 --> 00:12:52.959 align:start position:0%
you know lives in
 

00:12:52.959 --> 00:12:55.190 align:start position:0%
you know lives in
in<00:12:53.120><c> memory</c><00:12:54.079><c> and</c><00:12:54.320><c> let's</c><00:12:54.480><c> say</c><00:12:54.639><c> there's</c><00:12:54.880><c> a</c><00:12:54.959><c> free</c>

00:12:55.190 --> 00:12:55.200 align:start position:0%
in memory and let's say there's a free
 

00:12:55.200 --> 00:12:59.670 align:start position:0%
in memory and let's say there's a free
list<00:12:55.440><c> with</c><00:12:55.600><c> two</c><00:12:55.760><c> pages</c><00:12:56.160><c> on</c><00:12:56.320><c> it</c>

00:12:59.670 --> 00:12:59.680 align:start position:0%
 
 

00:12:59.680 --> 00:13:03.910 align:start position:0%
 
and<00:13:01.279><c> you</c><00:13:01.440><c> know</c><00:13:01.680><c> both</c>

00:13:03.910 --> 00:13:03.920 align:start position:0%
and you know both
 

00:13:03.920 --> 00:13:06.949 align:start position:0%
and you know both
both<00:13:04.160><c> cpus</c><00:13:04.720><c> you</c><00:13:04.800><c> know</c><00:13:05.040><c> call</c><00:13:05.519><c> k3</c><00:13:06.399><c> roughly</c><00:13:06.800><c> at</c>

00:13:06.949 --> 00:13:06.959 align:start position:0%
both cpus you know call k3 roughly at
 

00:13:06.959 --> 00:13:13.430 align:start position:0%
both cpus you know call k3 roughly at
the<00:13:07.040><c> same</c><00:13:07.279><c> time</c>

00:13:13.430 --> 00:13:13.440 align:start position:0%
 
 

00:13:13.440 --> 00:13:15.030 align:start position:0%
 
and<00:13:13.600><c> so</c><00:13:14.000><c> look</c><00:13:14.160><c> at</c><00:13:14.240><c> a</c><00:13:14.240><c> little</c><00:13:14.399><c> bit</c><00:13:14.560><c> of</c><00:13:14.639><c> the</c><00:13:14.800><c> code</c>

00:13:15.030 --> 00:13:15.040 align:start position:0%
and so look at a little bit of the code
 

00:13:15.040 --> 00:13:16.710 align:start position:0%
and so look at a little bit of the code
again<00:13:15.360><c> just</c><00:13:15.600><c> to</c><00:13:15.680><c> make</c><00:13:15.839><c> sure</c><00:13:16.000><c> that</c><00:13:16.240><c> we</c>

00:13:16.710 --> 00:13:16.720 align:start position:0%
again just to make sure that we
 

00:13:16.720 --> 00:13:18.310 align:start position:0%
again just to make sure that we
have<00:13:16.880><c> this</c><00:13:17.279><c> variable</c><00:13:17.600><c> in</c><00:13:17.680><c> our</c><00:13:17.839><c> head</c><00:13:18.000><c> so</c><00:13:18.240><c> we</c>

00:13:18.310 --> 00:13:18.320 align:start position:0%
have this variable in our head so we
 

00:13:18.320 --> 00:13:20.230 align:start position:0%
have this variable in our head so we
look<00:13:18.480><c> at</c><00:13:18.839><c> k3</c><00:13:19.839><c> uh</c>

00:13:20.230 --> 00:13:20.240 align:start position:0%
look at k3 uh
 

00:13:20.240 --> 00:13:23.030 align:start position:0%
look at k3 uh
you<00:13:20.399><c> know</c><00:13:20.480><c> they're</c><00:13:20.720><c> get</c><00:13:20.959><c> passed</c><00:13:21.279><c> in</c><00:13:21.440><c> some</c><00:13:21.920><c> pa</c><00:13:22.880><c> a</c>

00:13:23.030 --> 00:13:23.040 align:start position:0%
you know they're get passed in some pa a
 

00:13:23.040 --> 00:13:24.470 align:start position:0%
you know they're get passed in some pa a
physical<00:13:23.360><c> address</c>

00:13:24.470 --> 00:13:24.480 align:start position:0%
physical address
 

00:13:24.480 --> 00:13:26.150 align:start position:0%
physical address
that<00:13:24.639><c> we're</c><00:13:24.800><c> going</c><00:13:24.880><c> to</c><00:13:24.959><c> use</c><00:13:25.200><c> to</c><00:13:25.360><c> actually</c><00:13:25.920><c> hook</c>

00:13:26.150 --> 00:13:26.160 align:start position:0%
that we're going to use to actually hook
 

00:13:26.160 --> 00:13:29.910 align:start position:0%
that we're going to use to actually hook
up<00:13:26.480><c> you</c><00:13:26.560><c> know</c><00:13:27.120><c> into</c><00:13:27.279><c> the</c><00:13:27.440><c> free</c><00:13:27.680><c> list</c>

00:13:29.910 --> 00:13:29.920 align:start position:0%
up you know into the free list
 

00:13:29.920 --> 00:13:34.629 align:start position:0%
up you know into the free list
so<00:13:30.639><c> you</c><00:13:30.720><c> know</c><00:13:30.959><c> cpu</c><00:13:32.320><c> 0</c><00:13:32.839><c> has</c><00:13:33.680><c> uh</c>

00:13:34.629 --> 00:13:34.639 align:start position:0%
so you know cpu 0 has uh
 

00:13:34.639 --> 00:13:38.310 align:start position:0%
so you know cpu 0 has uh
you<00:13:34.800><c> know</c><00:13:34.959><c> an</c><00:13:35.200><c> r</c><00:13:36.959><c> uh</c><00:13:37.440><c> and</c>

00:13:38.310 --> 00:13:38.320 align:start position:0%
you know an r uh and
 

00:13:38.320 --> 00:13:40.389 align:start position:0%
you know an r uh and
that's<00:13:38.560><c> pointing</c><00:13:39.040><c> to</c><00:13:39.279><c> to</c><00:13:39.440><c> some</c><00:13:39.839><c> you</c><00:13:39.920><c> know</c><00:13:40.160><c> free</c>

00:13:40.389 --> 00:13:40.399 align:start position:0%
that's pointing to to some you know free
 

00:13:40.399 --> 00:13:41.590 align:start position:0%
that's pointing to to some you know free
page

00:13:41.590 --> 00:13:41.600 align:start position:0%
page
 

00:13:41.600 --> 00:13:44.949 align:start position:0%
page
and<00:13:42.240><c> uh</c><00:13:43.600><c> maybe</c><00:13:44.480><c> yeah</c><00:13:44.720><c> and</c>

00:13:44.949 --> 00:13:44.959 align:start position:0%
and uh maybe yeah and
 

00:13:44.959 --> 00:13:47.509 align:start position:0%
and uh maybe yeah and
cpu<00:13:45.440><c> one</c><00:13:45.760><c> has</c><00:13:46.000><c> one</c><00:13:46.800><c> let</c><00:13:46.959><c> me</c><00:13:47.120><c> actually</c><00:13:47.440><c> use</c>

00:13:47.509 --> 00:13:47.519 align:start position:0%
cpu one has one let me actually use
 

00:13:47.519 --> 00:13:49.430 align:start position:0%
cpu one has one let me actually use
another<00:13:47.839><c> column</c><00:13:48.079><c> for</c><00:13:48.240><c> cpu</c><00:13:48.639><c> 1.</c>

00:13:49.430 --> 00:13:49.440 align:start position:0%
another column for cpu 1.
 

00:13:49.440 --> 00:13:52.310 align:start position:0%
another column for cpu 1.
so<00:13:49.680><c> cpu</c><00:13:50.079><c> knows</c><00:13:50.320><c> it</c><00:13:50.399><c> has</c><00:13:50.560><c> an</c><00:13:50.720><c> r</c><00:13:51.440><c> it</c><00:13:51.680><c> also</c><00:13:51.920><c> is</c><00:13:52.079><c> pin</c>

00:13:52.310 --> 00:13:52.320 align:start position:0%
so cpu knows it has an r it also is pin
 

00:13:52.320 --> 00:13:53.509 align:start position:0%
so cpu knows it has an r it also is pin
pointing<00:13:52.639><c> to</c><00:13:52.800><c> some</c><00:13:53.040><c> page</c>

00:13:53.509 --> 00:13:53.519 align:start position:0%
pointing to some page
 

00:13:53.519 --> 00:13:54.870 align:start position:0%
pointing to some page
you<00:13:53.600><c> know</c><00:13:53.760><c> that</c><00:13:54.000><c> we</c><00:13:54.160><c> want</c><00:13:54.320><c> to</c><00:13:54.399><c> hook</c><00:13:54.560><c> into</c><00:13:54.800><c> the</c>

00:13:54.870 --> 00:13:54.880 align:start position:0%
you know that we want to hook into the
 

00:13:54.880 --> 00:13:58.949 align:start position:0%
you know that we want to hook into the
free<00:13:55.120><c> list</c><00:13:56.399><c> make</c><00:13:56.639><c> sense</c>

00:13:58.949 --> 00:13:58.959 align:start position:0%
 
 

00:13:58.959 --> 00:14:01.189 align:start position:0%
 
and<00:13:59.199><c> so</c><00:13:59.519><c> you</c><00:13:59.600><c> know</c><00:13:59.760><c> we</c><00:13:59.920><c> look</c><00:14:00.160><c> back</c><00:14:00.399><c> at</c><00:14:00.480><c> the</c><00:14:00.839><c> code</c>

00:14:01.189 --> 00:14:01.199 align:start position:0%
and so you know we look back at the code
 

00:14:01.199 --> 00:14:02.230 align:start position:0%
and so you know we look back at the code
uh

00:14:02.230 --> 00:14:02.240 align:start position:0%
uh
 

00:14:02.240 --> 00:14:04.150 align:start position:0%
uh
you<00:14:02.399><c> know</c><00:14:02.560><c> the</c><00:14:02.639><c> first</c><00:14:02.880><c> thing</c><00:14:03.040><c> they</c><00:14:03.199><c> do</c><00:14:03.680><c> is</c><00:14:04.079><c> you</c>

00:14:04.150 --> 00:14:04.160 align:start position:0%
you know the first thing they do is you
 

00:14:04.160 --> 00:14:05.829 align:start position:0%
you know the first thing they do is you
know<00:14:04.399><c> update</c><00:14:04.800><c> our</c><00:14:04.959><c> next</c><00:14:05.199><c> to</c><00:14:05.360><c> point</c><00:14:05.600><c> to</c>

00:14:05.829 --> 00:14:05.839 align:start position:0%
know update our next to point to
 

00:14:05.839 --> 00:14:09.189 align:start position:0%
know update our next to point to
uh<00:14:06.480><c> to</c><00:14:06.880><c> point</c><00:14:07.040><c> to</c><00:14:07.199><c> the</c><00:14:07.600><c> to</c><00:14:07.760><c> the</c><00:14:07.839><c> free</c><00:14:08.079><c> list</c>

00:14:09.189 --> 00:14:09.199 align:start position:0%
uh to point to the to the free list
 

00:14:09.199 --> 00:14:12.230 align:start position:0%
uh to point to the to the free list
so<00:14:09.760><c> let's</c><00:14:10.000><c> assume</c><00:14:10.639><c> you</c><00:14:10.800><c> know</c><00:14:10.959><c> that</c><00:14:11.519><c> cpu</c><00:14:11.920><c> one</c>

00:14:12.230 --> 00:14:12.240 align:start position:0%
so let's assume you know that cpu one
 

00:14:12.240 --> 00:14:12.949 align:start position:0%
so let's assume you know that cpu one
runs

00:14:12.949 --> 00:14:12.959 align:start position:0%
runs
 

00:14:12.959 --> 00:14:16.150 align:start position:0%
runs
uh<00:14:13.279><c> first</c><00:14:14.240><c> and</c><00:14:15.040><c> you</c><00:14:15.120><c> know</c><00:14:15.279><c> what</c><00:14:15.440><c> it</c><00:14:15.680><c> will</c><00:14:15.760><c> do</c>

00:14:16.150 --> 00:14:16.160 align:start position:0%
uh first and you know what it will do
 

00:14:16.160 --> 00:14:19.590 align:start position:0%
uh first and you know what it will do
is<00:14:16.399><c> we'll</c><00:14:16.639><c> put</c><00:14:16.880><c> its</c><00:14:17.040><c> pointer</c><00:14:18.480><c> you</c><00:14:18.560><c> know</c><00:14:18.800><c> to</c>

00:14:19.590 --> 00:14:19.600 align:start position:0%
is we'll put its pointer you know to
 

00:14:19.600 --> 00:14:22.870 align:start position:0%
is we'll put its pointer you know to
the<00:14:19.760><c> beginning</c><00:14:20.160><c> of</c><00:14:20.320><c> the</c><00:14:21.680><c> uh</c><00:14:22.480><c> you</c><00:14:22.639><c> know</c><00:14:22.720><c> to</c>

00:14:22.870 --> 00:14:22.880 align:start position:0%
the beginning of the uh you know to
 

00:14:22.880 --> 00:14:25.030 align:start position:0%
the beginning of the uh you know to
wherever<00:14:23.360><c> freelance</c><00:14:23.760><c> is</c><00:14:23.839><c> pointing</c><00:14:24.160><c> to</c>

00:14:25.030 --> 00:14:25.040 align:start position:0%
wherever freelance is pointing to
 

00:14:25.040 --> 00:14:27.670 align:start position:0%
wherever freelance is pointing to
and<00:14:25.680><c> if</c><00:14:26.000><c> you</c><00:14:26.160><c> know</c><00:14:26.320><c> cpr</c><00:14:26.720><c> and</c><00:14:26.880><c> runs</c><00:14:27.199><c> exactly</c><00:14:27.600><c> at</c>

00:14:27.670 --> 00:14:27.680 align:start position:0%
and if you know cpr and runs exactly at
 

00:14:27.680 --> 00:14:29.350 align:start position:0%
and if you know cpr and runs exactly at
the<00:14:27.760><c> same</c><00:14:28.079><c> time</c>

00:14:29.350 --> 00:14:29.360 align:start position:0%
the same time
 

00:14:29.360 --> 00:14:32.629 align:start position:0%
the same time
then<00:14:30.240><c> uh</c><00:14:30.720><c> you</c><00:14:30.880><c> know</c>

00:14:32.629 --> 00:14:32.639 align:start position:0%
then uh you know
 

00:14:32.639 --> 00:14:35.030 align:start position:0%
then uh you know
it<00:14:33.120><c> could</c><00:14:33.440><c> run</c><00:14:33.839><c> you</c><00:14:33.920><c> know</c><00:14:34.160><c> before</c><00:14:34.800><c> you</c><00:14:34.880><c> know</c>

00:14:35.030 --> 00:14:35.040 align:start position:0%
it could run you know before you know
 

00:14:35.040 --> 00:14:37.430 align:start position:0%
it could run you know before you know
cpu0<00:14:35.760><c> executes</c><00:14:36.160><c> a</c><00:14:36.240><c> second</c><00:14:36.560><c> instruction</c>

00:14:37.430 --> 00:14:37.440 align:start position:0%
cpu0 executes a second instruction
 

00:14:37.440 --> 00:14:38.710 align:start position:0%
cpu0 executes a second instruction
and<00:14:37.519><c> so</c><00:14:37.680><c> it</c><00:14:37.839><c> actually</c><00:14:38.079><c> might</c><00:14:38.240><c> do</c><00:14:38.399><c> the</c><00:14:38.480><c> same</c>

00:14:38.710 --> 00:14:38.720 align:start position:0%
and so it actually might do the same
 

00:14:38.720 --> 00:14:39.990 align:start position:0%
and so it actually might do the same
thing<00:14:38.959><c> you</c><00:14:39.040><c> know</c><00:14:39.120><c> it</c><00:14:39.199><c> might</c><00:14:39.440><c> actually</c><00:14:39.760><c> also</c>

00:14:39.990 --> 00:14:40.000 align:start position:0%
thing you know it might actually also
 

00:14:40.000 --> 00:14:41.509 align:start position:0%
thing you know it might actually also
run<00:14:40.160><c> that</c><00:14:40.399><c> first</c><00:14:40.639><c> instruction</c>

00:14:41.509 --> 00:14:41.519 align:start position:0%
run that first instruction
 

00:14:41.519 --> 00:14:51.269 align:start position:0%
run that first instruction
and<00:14:42.040><c> update</c><00:14:43.120><c> um</c>

00:14:51.269 --> 00:14:51.279 align:start position:0%
 
 

00:14:51.279 --> 00:14:55.350 align:start position:0%
 
and<00:14:51.519><c> update</c><00:14:52.000><c> the</c><00:14:52.079><c> pointer</c><00:14:52.399><c> 2.</c><00:14:53.920><c> so</c><00:14:54.079><c> now</c><00:14:54.399><c> both</c>

00:14:55.350 --> 00:14:55.360 align:start position:0%
and update the pointer 2. so now both
 

00:14:55.360 --> 00:14:57.829 align:start position:0%
and update the pointer 2. so now both
are<00:14:55.760><c> you</c><00:14:55.920><c> know</c><00:14:56.079><c> one</c><00:14:56.320><c> from</c><00:14:56.480><c> cpu</c><00:14:56.880><c> 1</c><00:14:57.120><c> and</c><00:14:57.360><c> from</c><00:14:57.519><c> cpu</c>

00:14:57.829 --> 00:14:57.839 align:start position:0%
are you know one from cpu 1 and from cpu
 

00:14:57.839 --> 00:14:59.509 align:start position:0%
are you know one from cpu 1 and from cpu
zero<00:14:58.079><c> one</c><00:14:58.240><c> for</c><00:14:58.399><c> cpo</c><00:14:58.720><c> one</c><00:14:58.959><c> are</c><00:14:59.040><c> pointing</c><00:14:59.279><c> to</c><00:14:59.440><c> the</c>

00:14:59.509 --> 00:14:59.519 align:start position:0%
zero one for cpo one are pointing to the
 

00:14:59.519 --> 00:15:00.629 align:start position:0%
zero one for cpo one are pointing to the
beginning<00:14:59.760><c> of</c><00:14:59.839><c> the</c><00:14:59.920><c> free</c><00:15:00.079><c> list</c><00:15:00.320><c> and</c><00:15:00.399><c> the</c><00:15:00.480><c> free</c>

00:15:00.629 --> 00:15:00.639 align:start position:0%
beginning of the free list and the free
 

00:15:00.639 --> 00:15:02.150 align:start position:0%
beginning of the free list and the free
list<00:15:00.880><c> is</c><00:15:00.959><c> also</c><00:15:01.199><c> pointing</c><00:15:01.440><c> to</c><00:15:01.600><c> the</c>

00:15:02.150 --> 00:15:02.160 align:start position:0%
list is also pointing to the
 

00:15:02.160 --> 00:15:04.230 align:start position:0%
list is also pointing to the
beginning<00:15:02.560><c> of</c><00:15:02.639><c> the</c><00:15:02.720><c> field</c><00:15:02.959><c> list</c><00:15:03.760><c> and</c><00:15:03.839><c> so</c><00:15:04.000><c> now</c>

00:15:04.230 --> 00:15:04.240 align:start position:0%
beginning of the field list and so now
 

00:15:04.240 --> 00:15:05.430 align:start position:0%
beginning of the field list and so now
there<00:15:04.320><c> are</c><00:15:04.399><c> two</c><00:15:04.639><c> remaining</c><00:15:04.959><c> instructions</c>

00:15:05.430 --> 00:15:05.440 align:start position:0%
there are two remaining instructions
 

00:15:05.440 --> 00:15:07.590 align:start position:0%
there are two remaining instructions
that<00:15:05.519><c> are</c><00:15:05.680><c> being</c><00:15:05.839><c> executed</c><00:15:06.320><c> in</c><00:15:06.480><c> parallel</c>

00:15:07.590 --> 00:15:07.600 align:start position:0%
that are being executed in parallel
 

00:15:07.600 --> 00:15:10.150 align:start position:0%
that are being executed in parallel
so<00:15:07.839><c> we'll</c><00:15:08.000><c> go</c><00:15:08.160><c> back</c><00:15:08.399><c> again</c><00:15:08.880><c> you</c><00:15:09.040><c> know</c><00:15:09.279><c> the</c><00:15:09.440><c> code</c>

00:15:10.150 --> 00:15:10.160 align:start position:0%
so we'll go back again you know the code
 

00:15:10.160 --> 00:15:11.670 align:start position:0%
so we'll go back again you know the code
you<00:15:10.240><c> know</c><00:15:10.399><c> the</c><00:15:10.639><c> remaining</c><00:15:11.040><c> instruction</c><00:15:11.519><c> is</c>

00:15:11.670 --> 00:15:11.680 align:start position:0%
you know the remaining instruction is
 

00:15:11.680 --> 00:15:12.470 align:start position:0%
you know the remaining instruction is
being<00:15:11.920><c> executed</c>

00:15:12.470 --> 00:15:12.480 align:start position:0%
being executed
 

00:15:12.480 --> 00:15:13.910 align:start position:0%
being executed
is<00:15:12.639><c> actually</c><00:15:12.880><c> updating</c><00:15:13.199><c> the</c><00:15:13.360><c> free</c><00:15:13.519><c> list</c><00:15:13.760><c> to</c>

00:15:13.910 --> 00:15:13.920 align:start position:0%
is actually updating the free list to
 

00:15:13.920 --> 00:15:17.030 align:start position:0%
is actually updating the free list to
point<00:15:14.079><c> to</c><00:15:14.240><c> r</c><00:15:14.880><c> you</c><00:15:14.959><c> know</c><00:15:15.360><c> uh</c>

00:15:17.030 --> 00:15:17.040 align:start position:0%
point to r you know uh
 

00:15:17.040 --> 00:15:20.069 align:start position:0%
point to r you know uh
and<00:15:17.199><c> so</c><00:15:17.920><c> uh</c><00:15:18.240><c> you</c><00:15:18.399><c> know</c><00:15:18.959><c> cpu</c><00:15:19.519><c> you</c><00:15:19.600><c> know</c><00:15:19.760><c> zero</c><00:15:20.000><c> and</c>

00:15:20.069 --> 00:15:20.079 align:start position:0%
and so uh you know cpu you know zero and
 

00:15:20.079 --> 00:15:21.350 align:start position:0%
and so uh you know cpu you know zero and
one<00:15:20.320><c> going</c><00:15:20.399><c> to</c><00:15:20.480><c> execute</c><00:15:20.800><c> these</c><00:15:21.040><c> instructions</c>

00:15:21.350 --> 00:15:21.360 align:start position:0%
one going to execute these instructions
 

00:15:21.360 --> 00:15:21.750 align:start position:0%
one going to execute these instructions
maybe

00:15:21.750 --> 00:15:21.760 align:start position:0%
maybe
 

00:15:21.760 --> 00:15:24.150 align:start position:0%
maybe
exactly<00:15:22.079><c> in</c><00:15:22.160><c> the</c><00:15:22.320><c> same</c><00:15:22.720><c> uh</c><00:15:23.600><c> rapidly</c><00:15:24.000><c> at</c><00:15:24.079><c> the</c>

00:15:24.150 --> 00:15:24.160 align:start position:0%
exactly in the same uh rapidly at the
 

00:15:24.160 --> 00:15:25.670 align:start position:0%
exactly in the same uh rapidly at the
same<00:15:24.399><c> time</c><00:15:24.720><c> but</c><00:15:24.880><c> one</c><00:15:25.120><c> is</c><00:15:25.199><c> going</c><00:15:25.199><c> to</c><00:15:25.360><c> go</c><00:15:25.440><c> first</c>

00:15:25.670 --> 00:15:25.680 align:start position:0%
same time but one is going to go first
 

00:15:25.680 --> 00:15:27.269 align:start position:0%
same time but one is going to go first
correct<00:15:25.920><c> there's</c><00:15:26.160><c> only</c><00:15:26.399><c> one</c><00:15:26.720><c> single</c><00:15:27.040><c> shared</c>

00:15:27.269 --> 00:15:27.279 align:start position:0%
correct there's only one single shared
 

00:15:27.279 --> 00:15:28.230 align:start position:0%
correct there's only one single shared
memory

00:15:28.230 --> 00:15:28.240 align:start position:0%
memory
 

00:15:28.240 --> 00:15:30.150 align:start position:0%
memory
and<00:15:28.560><c> so</c><00:15:28.720><c> one</c><00:15:28.959><c> update</c><00:15:29.279><c> is</c><00:15:29.360><c> going</c><00:15:29.440><c> to</c><00:15:29.519><c> go</c><00:15:29.759><c> first</c>

00:15:30.150 --> 00:15:30.160 align:start position:0%
and so one update is going to go first
 

00:15:30.160 --> 00:15:32.150 align:start position:0%
and so one update is going to go first
and<00:15:30.399><c> the</c><00:15:30.480><c> other</c><00:15:30.639><c> one</c><00:15:30.800><c> is</c><00:15:30.880><c> going</c><00:15:30.959><c> to</c><00:15:31.040><c> go</c><00:15:31.199><c> second</c>

00:15:32.150 --> 00:15:32.160 align:start position:0%
and the other one is going to go second
 

00:15:32.160 --> 00:15:35.110 align:start position:0%
and the other one is going to go second
so<00:15:32.320><c> let's</c><00:15:32.480><c> say</c><00:15:32.720><c> cpu</c><00:15:33.199><c> one</c><00:15:33.519><c> you</c><00:15:33.680><c> know</c><00:15:33.839><c> goes</c><00:15:34.079><c> first</c>

00:15:35.110 --> 00:15:35.120 align:start position:0%
so let's say cpu one you know goes first
 

00:15:35.120 --> 00:15:35.670 align:start position:0%
so let's say cpu one you know goes first
and<00:15:35.279><c> now</c>

00:15:35.670 --> 00:15:35.680 align:start position:0%
and now
 

00:15:35.680 --> 00:15:37.509 align:start position:0%
and now
what<00:15:35.839><c> will</c><00:15:36.000><c> then</c><00:15:36.240><c> happen</c><00:15:36.560><c> well</c><00:15:36.880><c> the</c><00:15:37.040><c> cpu</c><00:15:37.360><c> one</c>

00:15:37.509 --> 00:15:37.519 align:start position:0%
what will then happen well the cpu one
 

00:15:37.519 --> 00:15:38.790 align:start position:0%
what will then happen well the cpu one
goes<00:15:37.680><c> first</c><00:15:37.920><c> the</c><00:15:38.000><c> three</c><00:15:38.240><c> list</c><00:15:38.399><c> is</c><00:15:38.480><c> gonna</c><00:15:38.639><c> be</c>

00:15:38.790 --> 00:15:38.800 align:start position:0%
goes first the three list is gonna be
 

00:15:38.800 --> 00:15:40.310 align:start position:0%
goes first the three list is gonna be
pointing<00:15:39.040><c> to</c><00:15:39.279><c> sr</c>

00:15:40.310 --> 00:15:40.320 align:start position:0%
pointing to sr
 

00:15:40.320 --> 00:15:43.670 align:start position:0%
pointing to sr
right<00:15:42.560><c> and</c><00:15:42.720><c> then</c><00:15:43.040><c> cpu</c><00:15:43.360><c> 2</c>

00:15:43.670 --> 00:15:43.680 align:start position:0%
right and then cpu 2
 

00:15:43.680 --> 00:15:46.230 align:start position:0%
right and then cpu 2
runs<00:15:44.160><c> so</c><00:15:44.320><c> now</c><00:15:44.959><c> cp2</c><00:15:45.440><c> runs</c><00:15:45.680><c> actually</c><00:15:45.920><c> this</c><00:15:46.079><c> x</c>

00:15:46.230 --> 00:15:46.240 align:start position:0%
runs so now cp2 runs actually this x
 

00:15:46.240 --> 00:15:47.189 align:start position:0%
runs so now cp2 runs actually this x
instruction

00:15:47.189 --> 00:15:47.199 align:start position:0%
instruction
 

00:15:47.199 --> 00:15:49.350 align:start position:0%
instruction
and<00:15:47.519><c> so</c><00:15:47.680><c> what</c><00:15:47.839><c> it's</c><00:15:48.079><c> going</c><00:15:48.160><c> to</c><00:15:48.320><c> do</c><00:15:48.639><c> it</c><00:15:48.959><c> is</c><00:15:49.279><c> going</c>

00:15:49.350 --> 00:15:49.360 align:start position:0%
and so what it's going to do it is going
 

00:15:49.360 --> 00:15:50.550 align:start position:0%
and so what it's going to do it is going
to<00:15:49.519><c> actually</c><00:15:49.920><c> update</c>

00:15:50.550 --> 00:15:50.560 align:start position:0%
to actually update
 

00:15:50.560 --> 00:15:55.189 align:start position:0%
to actually update
you<00:15:50.639><c> know</c><00:15:50.800><c> pre-list</c><00:15:52.839><c> two-point</c>

00:15:55.189 --> 00:15:55.199 align:start position:0%
you know pre-list two-point
 

00:15:55.199 --> 00:15:58.230 align:start position:0%
you know pre-list two-point
so<00:15:55.680><c> here's</c><00:15:55.920><c> a</c><00:15:56.000><c> free</c><00:15:56.240><c> list</c><00:15:57.920><c> and</c>

00:15:58.230 --> 00:15:58.240 align:start position:0%
so here's a free list and
 

00:15:58.240 --> 00:16:01.269 align:start position:0%
so here's a free list and
it's<00:15:58.480><c> actually</c><00:15:58.720><c> going</c><00:15:58.880><c> to</c><00:15:59.040><c> point</c><00:15:59.360><c> to</c><00:16:00.800><c> the</c><00:16:00.959><c> r</c>

00:16:01.269 --> 00:16:01.279 align:start position:0%
it's actually going to point to the r
 

00:16:01.279 --> 00:16:03.670 align:start position:0%
it's actually going to point to the r
that<00:16:01.519><c> actually</c><00:16:01.839><c> get</c><00:16:02.000><c> passed</c><00:16:02.320><c> in</c><00:16:03.120><c> and</c><00:16:03.279><c> so</c><00:16:03.600><c> you</c>

00:16:03.670 --> 00:16:03.680 align:start position:0%
that actually get passed in and so you
 

00:16:03.680 --> 00:16:05.910 align:start position:0%
that actually get passed in and so you
know<00:16:03.839><c> we</c><00:16:04.079><c> have</c><00:16:04.160><c> a</c><00:16:04.240><c> setting</c><00:16:04.560><c> now</c><00:16:04.880><c> correct</c><00:16:05.199><c> we're</c>

00:16:05.910 --> 00:16:05.920 align:start position:0%
know we have a setting now correct we're
 

00:16:05.920 --> 00:16:08.790 align:start position:0%
know we have a setting now correct we're
we've<00:16:06.320><c> lost</c><00:16:06.880><c> you</c><00:16:07.040><c> know</c><00:16:07.199><c> basically</c><00:16:07.600><c> one</c><00:16:07.839><c> page</c>

00:16:08.790 --> 00:16:08.800 align:start position:0%
we've lost you know basically one page
 

00:16:08.800 --> 00:16:10.790 align:start position:0%
we've lost you know basically one page
the

00:16:10.790 --> 00:16:10.800 align:start position:0%
the
 

00:16:10.800 --> 00:16:13.189 align:start position:0%
the
r<00:16:11.360><c> you</c><00:16:11.519><c> know</c><00:16:11.680><c> that</c><00:16:11.920><c> actually</c><00:16:12.240><c> cpu</c><00:16:12.720><c> zero</c>

00:16:13.189 --> 00:16:13.199 align:start position:0%
r you know that actually cpu zero
 

00:16:13.199 --> 00:16:14.150 align:start position:0%
r you know that actually cpu zero
actually<00:16:13.519><c> three</c>

00:16:14.150 --> 00:16:14.160 align:start position:0%
actually three
 

00:16:14.160 --> 00:16:15.910 align:start position:0%
actually three
actually<00:16:14.480><c> ended</c><00:16:14.720><c> up</c><00:16:14.880><c> not</c><00:16:15.120><c> being</c><00:16:15.440><c> on</c><00:16:15.600><c> the</c><00:16:15.680><c> free</c>

00:16:15.910 --> 00:16:15.920 align:start position:0%
actually ended up not being on the free
 

00:16:15.920 --> 00:16:17.189 align:start position:0%
actually ended up not being on the free
list<00:16:16.160><c> at</c><00:16:16.320><c> all</c><00:16:16.880><c> so</c>

00:16:17.189 --> 00:16:17.199 align:start position:0%
list at all so
 

00:16:17.199 --> 00:16:22.710 align:start position:0%
list at all so
we<00:16:17.360><c> lost</c><00:16:17.680><c> the</c><00:16:20.839><c> page</c>

00:16:22.710 --> 00:16:22.720 align:start position:0%
we lost the page
 

00:16:22.720 --> 00:16:24.949 align:start position:0%
we lost the page
um<00:16:23.199><c> and</c><00:16:23.279><c> that's</c><00:16:23.600><c> one</c><00:16:23.920><c> you</c><00:16:24.079><c> know</c><00:16:24.639><c> bad</c>

00:16:24.949 --> 00:16:24.959 align:start position:0%
um and that's one you know bad
 

00:16:24.959 --> 00:16:26.389 align:start position:0%
um and that's one you know bad
particular<00:16:25.360><c> outcome</c><00:16:25.759><c> of</c><00:16:25.839><c> course</c><00:16:26.000><c> it</c><00:16:26.079><c> could</c><00:16:26.240><c> be</c>

00:16:26.389 --> 00:16:26.399 align:start position:0%
particular outcome of course it could be
 

00:16:26.399 --> 00:16:28.150 align:start position:0%
particular outcome of course it could be
more<00:16:26.720><c> bad</c><00:16:27.040><c> outcomes</c><00:16:27.519><c> because</c><00:16:27.759><c> there</c><00:16:27.920><c> could</c><00:16:28.079><c> be</c>

00:16:28.150 --> 00:16:28.160 align:start position:0%
more bad outcomes because there could be
 

00:16:28.160 --> 00:16:30.150 align:start position:0%
more bad outcomes because there could be
more<00:16:28.399><c> cpus</c><00:16:28.959><c> after</c><00:16:29.279><c> trying</c><00:16:29.519><c> to</c><00:16:29.600><c> do</c><00:16:29.759><c> this</c><00:16:29.920><c> three</c>

00:16:30.150 --> 00:16:30.160 align:start position:0%
more cpus after trying to do this three
 

00:16:30.160 --> 00:16:30.949 align:start position:0%
more cpus after trying to do this three
list

00:16:30.949 --> 00:16:30.959 align:start position:0%
list
 

00:16:30.959 --> 00:16:33.030 align:start position:0%
list
uh<00:16:31.199><c> they</c><00:16:31.440><c> may</c><00:16:31.680><c> observe</c><00:16:32.240><c> the</c><00:16:32.399><c> new</c><00:16:32.639><c> one</c><00:16:32.800><c> of</c><00:16:32.880><c> the</c>

00:16:33.030 --> 00:16:33.040 align:start position:0%
uh they may observe the new one of the
 

00:16:33.040 --> 00:16:34.629 align:start position:0%
uh they may observe the new one of the
my<00:16:33.279><c> observed</c><00:16:33.839><c> three</c><00:16:34.079><c> lists</c><00:16:34.320><c> pointing</c>

00:16:34.629 --> 00:16:34.639 align:start position:0%
my observed three lists pointing
 

00:16:34.639 --> 00:16:35.990 align:start position:0%
my observed three lists pointing
temporarily<00:16:35.360><c> to</c><00:16:35.519><c> the</c><00:16:35.600><c> cpu</c>

00:16:35.990 --> 00:16:36.000 align:start position:0%
temporarily to the cpu
 

00:16:36.000 --> 00:16:40.069 align:start position:0%
temporarily to the cpu
to<00:16:36.320><c> zeros</c><00:16:37.199><c> r</c><00:16:38.000><c> uh</c><00:16:38.320><c> and</c><00:16:38.480><c> so</c><00:16:38.639><c> we</c><00:16:38.800><c> start</c><00:16:39.040><c> using</c><00:16:39.360><c> that</c>

00:16:40.069 --> 00:16:40.079 align:start position:0%
to zeros r uh and so we start using that
 

00:16:40.079 --> 00:16:41.910 align:start position:0%
to zeros r uh and so we start using that
uh<00:16:40.320><c> well</c><00:16:40.639><c> then</c><00:16:40.959><c> immediately</c><00:16:41.360><c> the</c><00:16:41.519><c> freelancer</c>

00:16:41.910 --> 00:16:41.920 align:start position:0%
uh well then immediately the freelancer
 

00:16:41.920 --> 00:16:43.509 align:start position:0%
uh well then immediately the freelancer
is<00:16:42.000><c> updated</c><00:16:42.560><c> you</c><00:16:42.639><c> know</c><00:16:42.880><c> by</c>

00:16:43.509 --> 00:16:43.519 align:start position:0%
is updated you know by
 

00:16:43.519 --> 00:16:45.829 align:start position:0%
is updated you know by
uh<00:16:43.759><c> the</c><00:16:43.920><c> second</c><00:16:44.240><c> cpu</c><00:16:44.720><c> so</c><00:16:45.120><c> the</c><00:16:45.279><c> more</c><00:16:45.440><c> cpu's</c>

00:16:45.829 --> 00:16:45.839 align:start position:0%
uh the second cpu so the more cpu's
 

00:16:45.839 --> 00:16:47.110 align:start position:0%
uh the second cpu so the more cpu's
involved<00:16:46.240><c> you</c><00:16:46.320><c> know</c><00:16:46.399><c> presumably</c><00:16:46.880><c> we</c><00:16:46.959><c> could</c>

00:16:47.110 --> 00:16:47.120 align:start position:0%
involved you know presumably we could
 

00:16:47.120 --> 00:16:49.189 align:start position:0%
involved you know presumably we could
actually<00:16:47.360><c> get</c><00:16:47.600><c> more</c><00:16:47.839><c> bizarre</c><00:16:48.320><c> outcomes</c><00:16:48.720><c> than</c>

00:16:49.189 --> 00:16:49.199 align:start position:0%
actually get more bizarre outcomes than
 

00:16:49.199 --> 00:16:55.749 align:start position:0%
actually get more bizarre outcomes than
just<00:16:49.440><c> the</c><00:16:49.519><c> loss</c><00:16:49.839><c> page</c><00:16:52.160><c> does</c><00:16:52.320><c> this</c><00:16:52.480><c> make</c><00:16:52.720><c> sense</c>

00:16:55.749 --> 00:16:55.759 align:start position:0%
 
 

00:16:55.759 --> 00:17:04.789 align:start position:0%
 
any<00:17:02.839><c> questions</c>

00:17:04.789 --> 00:17:04.799 align:start position:0%
any questions
 

00:17:04.799 --> 00:17:07.990 align:start position:0%
any questions
okay<00:17:05.600><c> um</c><00:17:07.120><c> so</c><00:17:07.280><c> the</c><00:17:07.439><c> way</c>

00:17:07.990 --> 00:17:08.000 align:start position:0%
okay um so the way
 

00:17:08.000 --> 00:17:10.069 align:start position:0%
okay um so the way
you<00:17:08.160><c> know</c><00:17:08.400><c> ask</c><00:17:08.720><c> you</c><00:17:08.799><c> know</c><00:17:09.199><c> the</c><00:17:09.360><c> code</c><00:17:09.600><c> does</c><00:17:10.000><c> you</c>

00:17:10.069 --> 00:17:10.079 align:start position:0%
you know ask you know the code does you
 

00:17:10.079 --> 00:17:13.189 align:start position:0%
you know ask you know the code does you
know<00:17:10.240><c> the</c><00:17:10.319><c> way</c><00:17:10.799><c> to</c><00:17:10.880><c> address</c><00:17:11.199><c> this</c><00:17:11.520><c> uh</c>

00:17:13.189 --> 00:17:13.199 align:start position:0%
know the way to address this uh
 

00:17:13.199 --> 00:17:16.230 align:start position:0%
know the way to address this uh
one<00:17:13.439><c> way</c><00:17:13.760><c> and</c><00:17:13.919><c> a</c><00:17:14.000><c> very</c><00:17:14.319><c> common</c><00:17:14.720><c> way</c><00:17:15.439><c> uh</c><00:17:16.000><c> is</c><00:17:16.079><c> to</c>

00:17:16.230 --> 00:17:16.240 align:start position:0%
one way and a very common way uh is to
 

00:17:16.240 --> 00:17:17.590 align:start position:0%
one way and a very common way uh is to
address<00:17:16.480><c> this</c><00:17:16.720><c> problem</c>

00:17:17.590 --> 00:17:17.600 align:start position:0%
address this problem
 

00:17:17.600 --> 00:17:20.710 align:start position:0%
address this problem
is<00:17:17.839><c> to</c><00:17:18.000><c> use</c><00:17:18.559><c> a</c><00:17:18.720><c> lock</c><00:17:19.919><c> so</c><00:17:20.079><c> let</c><00:17:20.240><c> me</c><00:17:20.319><c> talk</c><00:17:20.480><c> a</c><00:17:20.559><c> little</c>

00:17:20.710 --> 00:17:20.720 align:start position:0%
is to use a lock so let me talk a little
 

00:17:20.720 --> 00:17:22.390 align:start position:0%
is to use a lock so let me talk a little
bit<00:17:20.799><c> about</c><00:17:21.120><c> locks</c>

00:17:22.390 --> 00:17:22.400 align:start position:0%
bit about locks
 

00:17:22.400 --> 00:17:26.789 align:start position:0%
bit about locks
in<00:17:22.559><c> more</c><00:17:22.720><c> detail</c>

00:17:26.789 --> 00:17:26.799 align:start position:0%
 
 

00:17:26.799 --> 00:17:30.830 align:start position:0%
 
so<00:17:26.959><c> what</c><00:17:27.120><c> is</c><00:17:27.360><c> a</c><00:17:27.839><c> you</c><00:17:27.919><c> know</c><00:17:28.559><c> what's</c><00:17:28.799><c> the</c><00:17:28.960><c> lock</c>

00:17:30.830 --> 00:17:30.840 align:start position:0%
so what is a you know what's the lock
 

00:17:30.840 --> 00:17:32.470 align:start position:0%
so what is a you know what's the lock
abstraction

00:17:32.470 --> 00:17:32.480 align:start position:0%
abstraction
 

00:17:32.480 --> 00:17:34.950 align:start position:0%
abstraction
well<00:17:33.120><c> uh</c><00:17:33.360><c> it</c><00:17:33.440><c> is</c><00:17:33.679><c> just</c><00:17:33.840><c> an</c><00:17:34.000><c> object</c><00:17:34.480><c> like</c><00:17:34.720><c> any</c>

00:17:34.950 --> 00:17:34.960 align:start position:0%
well uh it is just an object like any
 

00:17:34.960 --> 00:17:35.830 align:start position:0%
well uh it is just an object like any
other<00:17:35.200><c> sort</c><00:17:35.360><c> of</c>

00:17:35.830 --> 00:17:35.840 align:start position:0%
other sort of
 

00:17:35.840 --> 00:17:38.710 align:start position:0%
other sort of
uh<00:17:36.320><c> object</c><00:17:36.720><c> in</c><00:17:36.799><c> the</c><00:17:36.880><c> kernel</c><00:17:37.679><c> and</c><00:17:38.000><c> then</c><00:17:38.400><c> it</c><00:17:38.480><c> has</c>

00:17:38.710 --> 00:17:38.720 align:start position:0%
uh object in the kernel and then it has
 

00:17:38.720 --> 00:17:39.350 align:start position:0%
uh object in the kernel and then it has
a

00:17:39.350 --> 00:17:39.360 align:start position:0%
a
 

00:17:39.360 --> 00:17:40.549 align:start position:0%
a
there's<00:17:39.679><c> in</c><00:17:39.760><c> fact</c><00:17:40.000><c> there's</c><00:17:40.160><c> something</c><00:17:40.400><c> called</c>

00:17:40.549 --> 00:17:40.559 align:start position:0%
there's in fact there's something called
 

00:17:40.559 --> 00:17:43.510 align:start position:0%
there's in fact there's something called
strut<00:17:40.880><c> lock</c><00:17:41.760><c> you</c><00:17:41.840><c> know</c><00:17:42.000><c> that</c><00:17:42.160><c> has</c><00:17:42.400><c> some</c><00:17:42.640><c> fields</c>

00:17:43.510 --> 00:17:43.520 align:start position:0%
strut lock you know that has some fields
 

00:17:43.520 --> 00:17:46.549 align:start position:0%
strut lock you know that has some fields
you<00:17:43.679><c> know</c><00:17:43.840><c> to</c><00:17:44.160><c> maintain</c><00:17:44.559><c> state</c><00:17:44.880><c> about</c><00:17:45.120><c> locks</c>

00:17:46.549 --> 00:17:46.559 align:start position:0%
you know to maintain state about locks
 

00:17:46.559 --> 00:17:49.430 align:start position:0%
you know to maintain state about locks
and<00:17:47.200><c> it</c><00:17:47.360><c> has</c><00:17:47.600><c> a</c><00:17:47.760><c> pretty</c><00:17:48.000><c> straightforward</c><00:17:48.799><c> api</c>

00:17:49.430 --> 00:17:49.440 align:start position:0%
and it has a pretty straightforward api
 

00:17:49.440 --> 00:17:51.110 align:start position:0%
and it has a pretty straightforward api
you<00:17:49.600><c> know</c><00:17:49.760><c> there's</c><00:17:50.080><c> a</c>

00:17:51.110 --> 00:17:51.120 align:start position:0%
you know there's a
 

00:17:51.120 --> 00:17:52.549 align:start position:0%
you know there's a
acquired<00:17:51.679><c> in</c><00:17:51.760><c> fact</c><00:17:51.919><c> there</c><00:17:52.000><c> are</c><00:17:52.080><c> only</c><00:17:52.320><c> two</c>

00:17:52.549 --> 00:17:52.559 align:start position:0%
acquired in fact there are only two
 

00:17:52.559 --> 00:17:54.230 align:start position:0%
acquired in fact there are only two
calls<00:17:53.200><c> into</c><00:17:53.520><c> this</c>

00:17:54.230 --> 00:17:54.240 align:start position:0%
calls into this
 

00:17:54.240 --> 00:17:58.470 align:start position:0%
calls into this
abstraction<00:17:55.440><c> uh</c><00:17:56.000><c> which</c>

00:17:58.470 --> 00:17:58.480 align:start position:0%
 
 

00:17:58.480 --> 00:18:01.590 align:start position:0%
 
require<00:17:59.039><c> which</c><00:17:59.200><c> takes</c><00:17:59.520><c> the</c><00:17:59.679><c> uh</c><00:18:00.559><c> a</c><00:18:00.720><c> pointer</c><00:18:01.120><c> to</c>

00:18:01.590 --> 00:18:01.600 align:start position:0%
require which takes the uh a pointer to
 

00:18:01.600 --> 00:18:06.630 align:start position:0%
require which takes the uh a pointer to
uh<00:18:02.080><c> a</c><00:18:02.640><c> lock</c><00:18:02.880><c> struck</c><00:18:03.840><c> and</c><00:18:04.160><c> and</c><00:18:04.320><c> a</c><00:18:04.480><c> release</c>

00:18:06.630 --> 00:18:06.640 align:start position:0%
uh a lock struck and and a release
 

00:18:06.640 --> 00:18:09.830 align:start position:0%
uh a lock struck and and a release
uh<00:18:07.200><c> you</c><00:18:07.360><c> know</c><00:18:07.520><c> that</c><00:18:07.760><c> actually</c><00:18:09.039><c> uh</c>

00:18:09.830 --> 00:18:09.840 align:start position:0%
uh you know that actually uh
 

00:18:09.840 --> 00:18:10.950 align:start position:0%
uh you know that actually uh
also<00:18:10.080><c> takes</c><00:18:10.240><c> a</c><00:18:10.320><c> point</c><00:18:10.559><c> through</c><00:18:10.720><c> the</c><00:18:10.799><c> log</c>

00:18:10.950 --> 00:18:10.960 align:start position:0%
also takes a point through the log
 

00:18:10.960 --> 00:18:13.029 align:start position:0%
also takes a point through the log
struct<00:18:11.440><c> uh</c><00:18:11.679><c> to</c><00:18:12.000><c> basically</c><00:18:12.400><c> update</c><00:18:12.799><c> you</c><00:18:12.880><c> know</c>

00:18:13.029 --> 00:18:13.039 align:start position:0%
struct uh to basically update you know
 

00:18:13.039 --> 00:18:14.789 align:start position:0%
struct uh to basically update you know
the<00:18:13.200><c> lock</c><00:18:13.440><c> object</c>

00:18:14.789 --> 00:18:14.799 align:start position:0%
the lock object
 

00:18:14.799 --> 00:18:15.990 align:start position:0%
the lock object
and<00:18:14.960><c> then</c><00:18:15.120><c> basically</c><00:18:15.520><c> the</c><00:18:15.600><c> rule</c><00:18:15.760><c> of</c><00:18:15.840><c> the</c>

00:18:15.990 --> 00:18:16.000 align:start position:0%
and then basically the rule of the
 

00:18:16.000 --> 00:18:18.230 align:start position:0%
and then basically the rule of the
lighting<00:18:16.400><c> you</c><00:18:16.480><c> know</c><00:18:16.640><c> the</c><00:18:16.720><c> rule</c><00:18:16.960><c> here</c><00:18:17.200><c> is</c><00:18:17.440><c> that</c>

00:18:18.230 --> 00:18:18.240 align:start position:0%
lighting you know the rule here is that
 

00:18:18.240 --> 00:18:23.590 align:start position:0%
lighting you know the rule here is that
uh<00:18:20.080><c> the</c><00:18:20.720><c> choir</c>

00:18:23.590 --> 00:18:23.600 align:start position:0%
 
 

00:18:23.600 --> 00:18:25.590 align:start position:0%
 
enforces<00:18:24.080><c> this</c><00:18:24.320><c> uh</c><00:18:24.799><c> following</c><00:18:25.120><c> rule</c><00:18:25.360><c> that</c>

00:18:25.590 --> 00:18:25.600 align:start position:0%
enforces this uh following rule that
 

00:18:25.600 --> 00:18:26.830 align:start position:0%
enforces this uh following rule that
only<00:18:25.919><c> one</c>

00:18:26.830 --> 00:18:26.840 align:start position:0%
only one
 

00:18:26.840 --> 00:18:30.789 align:start position:0%
only one
process

00:18:30.789 --> 00:18:30.799 align:start position:0%
 
 

00:18:30.799 --> 00:18:32.710 align:start position:0%
 
you<00:18:30.960><c> know</c><00:18:31.039><c> can</c><00:18:31.280><c> enter</c><00:18:31.760><c> or</c><00:18:32.000><c> can</c><00:18:32.160><c> acquire</c><00:18:32.559><c> the</c>

00:18:32.710 --> 00:18:32.720 align:start position:0%
you know can enter or can acquire the
 

00:18:32.720 --> 00:18:37.750 align:start position:0%
you know can enter or can acquire the
lock

00:18:37.750 --> 00:18:37.760 align:start position:0%
 
 

00:18:37.760 --> 00:18:39.990 align:start position:0%
 
so<00:18:37.919><c> at</c><00:18:38.080><c> any</c><00:18:38.320><c> particular</c><00:18:38.720><c> point</c><00:18:38.880><c> in</c><00:18:39.039><c> time</c>

00:18:39.990 --> 00:18:40.000 align:start position:0%
so at any particular point in time
 

00:18:40.000 --> 00:18:41.590 align:start position:0%
so at any particular point in time
there's<00:18:40.320><c> only</c><00:18:40.559><c> going</c><00:18:40.640><c> to</c><00:18:40.720><c> be</c><00:18:40.960><c> one</c><00:18:41.280><c> process</c>

00:18:41.590 --> 00:18:41.600 align:start position:0%
there's only going to be one process
 

00:18:41.600 --> 00:18:42.789 align:start position:0%
there's only going to be one process
that<00:18:41.760><c> is</c><00:18:41.919><c> able</c><00:18:42.160><c> to</c><00:18:42.320><c> actually</c>

00:18:42.789 --> 00:18:42.799 align:start position:0%
that is able to actually
 

00:18:42.799 --> 00:18:44.950 align:start position:0%
that is able to actually
successfully<00:18:43.360><c> acquire</c><00:18:43.840><c> the</c><00:18:44.000><c> lock</c><00:18:44.720><c> and</c><00:18:44.799><c> the</c>

00:18:44.950 --> 00:18:44.960 align:start position:0%
successfully acquire the lock and the
 

00:18:44.960 --> 00:18:46.310 align:start position:0%
successfully acquire the lock and the
other<00:18:45.120><c> process</c><00:18:45.520><c> the</c><00:18:45.600><c> business</c><00:18:45.919><c> is</c><00:18:46.000><c> trying</c><00:18:46.240><c> to</c>

00:18:46.310 --> 00:18:46.320 align:start position:0%
other process the business is trying to
 

00:18:46.320 --> 00:18:48.070 align:start position:0%
other process the business is trying to
acquire<00:18:46.720><c> the</c><00:18:46.880><c> lock</c><00:18:47.120><c> at</c><00:18:47.200><c> the</c><00:18:47.360><c> same</c><00:18:47.600><c> time</c>

00:18:48.070 --> 00:18:48.080 align:start position:0%
acquire the lock at the same time
 

00:18:48.080 --> 00:18:49.990 align:start position:0%
acquire the lock at the same time
has<00:18:48.320><c> to</c><00:18:48.559><c> wait</c><00:18:48.960><c> until</c><00:18:49.200><c> the</c><00:18:49.280><c> first</c><00:18:49.600><c> process</c>

00:18:49.990 --> 00:18:50.000 align:start position:0%
has to wait until the first process
 

00:18:50.000 --> 00:18:52.470 align:start position:0%
has to wait until the first process
actually<00:18:50.240><c> calls</c><00:18:50.400><c> a</c><00:18:50.480><c> release</c>

00:18:52.470 --> 00:18:52.480 align:start position:0%
actually calls a release
 

00:18:52.480 --> 00:18:55.510 align:start position:0%
actually calls a release
and<00:18:52.640><c> so</c><00:18:53.039><c> this</c><00:18:53.600><c> sequence</c><00:18:54.400><c> you</c><00:18:54.480><c> know</c><00:18:54.960><c> the</c><00:18:55.200><c> the</c>

00:18:55.510 --> 00:18:55.520 align:start position:0%
and so this sequence you know the the
 

00:18:55.520 --> 00:18:57.510 align:start position:0%
and so this sequence you know the the
instructions<00:18:56.240><c> you</c><00:18:56.400><c> know</c><00:18:56.559><c> between</c>

00:18:57.510 --> 00:18:57.520 align:start position:0%
instructions you know between
 

00:18:57.520 --> 00:18:59.909 align:start position:0%
instructions you know between
you<00:18:57.600><c> know</c><00:18:57.760><c> the</c><00:18:57.919><c> choir</c><00:18:58.160><c> and</c><00:18:58.320><c> release</c><00:18:59.520><c> are</c><00:18:59.600><c> often</c>

00:18:59.909 --> 00:18:59.919 align:start position:0%
you know the choir and release are often
 

00:18:59.919 --> 00:19:07.590 align:start position:0%
you know the choir and release are often
called<00:19:00.080><c> the</c><00:19:00.160><c> critical</c><00:19:00.559><c> section</c>

00:19:07.590 --> 00:19:07.600 align:start position:0%
 
 

00:19:07.600 --> 00:19:08.950 align:start position:0%
 
and<00:19:07.919><c> one</c><00:19:08.080><c> reason</c><00:19:08.320><c> it's</c><00:19:08.400><c> called</c><00:19:08.559><c> the</c><00:19:08.640><c> critical</c>

00:19:08.950 --> 00:19:08.960 align:start position:0%
and one reason it's called the critical
 

00:19:08.960 --> 00:19:11.270 align:start position:0%
and one reason it's called the critical
section<00:19:09.280><c> is</c><00:19:09.679><c> because</c><00:19:10.080><c> this</c><00:19:10.320><c> is</c><00:19:10.400><c> sort</c><00:19:10.559><c> of</c><00:19:10.720><c> the</c>

00:19:11.270 --> 00:19:11.280 align:start position:0%
section is because this is sort of the
 

00:19:11.280 --> 00:19:13.110 align:start position:0%
section is because this is sort of the
uh<00:19:11.520><c> diffused</c><00:19:12.000><c> instruction</c><00:19:12.400><c> together</c><00:19:12.720><c> that</c><00:19:12.880><c> do</c>

00:19:13.110 --> 00:19:13.120 align:start position:0%
uh diffused instruction together that do
 

00:19:13.120 --> 00:19:14.470 align:start position:0%
uh diffused instruction together that do
the<00:19:13.520><c> uh</c><00:19:13.840><c> you</c><00:19:13.919><c> know</c>

00:19:14.470 --> 00:19:14.480 align:start position:0%
the uh you know
 

00:19:14.480 --> 00:19:16.390 align:start position:0%
the uh you know
need<00:19:14.640><c> to</c><00:19:14.720><c> do</c><00:19:14.880><c> the</c><00:19:15.120><c> update</c><00:19:15.520><c> you</c><00:19:15.679><c> know</c><00:19:15.840><c> to</c><00:19:16.080><c> our</c>

00:19:16.390 --> 00:19:16.400 align:start position:0%
need to do the update you know to our
 

00:19:16.400 --> 00:19:18.150 align:start position:0%
need to do the update you know to our
whatever<00:19:16.960><c> data</c><00:19:17.200><c> structure</c><00:19:17.440><c> that's</c><00:19:17.760><c> protected</c>

00:19:18.150 --> 00:19:18.160 align:start position:0%
whatever data structure that's protected
 

00:19:18.160 --> 00:19:19.029 align:start position:0%
whatever data structure that's protected
by<00:19:18.320><c> the</c><00:19:18.480><c> lock</c>

00:19:19.029 --> 00:19:19.039 align:start position:0%
by the lock
 

00:19:19.039 --> 00:19:21.990 align:start position:0%
by the lock
in<00:19:19.120><c> an</c><00:19:19.360><c> atomic</c><00:19:19.760><c> fashion</c><00:19:21.039><c> uh</c><00:19:21.280><c> and</c><00:19:21.360><c> then</c><00:19:21.600><c> ensures</c>

00:19:21.990 --> 00:19:22.000 align:start position:0%
in an atomic fashion uh and then ensures
 

00:19:22.000 --> 00:19:23.590 align:start position:0%
in an atomic fashion uh and then ensures
that<00:19:22.160><c> basically</c>

00:19:23.590 --> 00:19:23.600 align:start position:0%
that basically
 

00:19:23.600 --> 00:19:25.190 align:start position:0%
that basically
if<00:19:23.760><c> you</c><00:19:23.840><c> have</c><00:19:24.000><c> multiple</c><00:19:24.480><c> instructions</c><00:19:25.120><c> in</c>

00:19:25.190 --> 00:19:25.200 align:start position:0%
if you have multiple instructions in
 

00:19:25.200 --> 00:19:27.350 align:start position:0%
if you have multiple instructions in
this<00:19:25.520><c> you</c><00:19:25.679><c> know</c><00:19:26.559><c> between</c><00:19:26.880><c> the</c><00:19:27.039><c> car</c><00:19:27.280><c> and</c>

00:19:27.350 --> 00:19:27.360 align:start position:0%
this you know between the car and
 

00:19:27.360 --> 00:19:27.909 align:start position:0%
this you know between the car and
release

00:19:27.909 --> 00:19:27.919 align:start position:0%
release
 

00:19:27.919 --> 00:19:31.750 align:start position:0%
release
that<00:19:28.080><c> they</c><00:19:28.400><c> all</c><00:19:28.720><c> are</c><00:19:28.960><c> executed</c><00:19:30.000><c> all</c><00:19:30.720><c> together</c>

00:19:31.750 --> 00:19:31.760 align:start position:0%
that they all are executed all together
 

00:19:31.760 --> 00:19:34.789 align:start position:0%
that they all are executed all together
or<00:19:32.080><c> none</c><00:19:33.600><c> and</c><00:19:33.760><c> so</c><00:19:33.919><c> there's</c><00:19:34.080><c> never</c><00:19:34.480><c> the</c><00:19:34.559><c> case</c>

00:19:34.789 --> 00:19:34.799 align:start position:0%
or none and so there's never the case
 

00:19:34.799 --> 00:19:36.230 align:start position:0%
or none and so there's never the case
that<00:19:34.960><c> basically</c><00:19:35.360><c> these</c><00:19:35.600><c> instructions</c><00:19:36.080><c> in</c><00:19:36.160><c> the</c>

00:19:36.230 --> 00:19:36.240 align:start position:0%
that basically these instructions in the
 

00:19:36.240 --> 00:19:37.190 align:start position:0%
that basically these instructions in the
critical<00:19:36.559><c> section</c>

00:19:37.190 --> 00:19:37.200 align:start position:0%
critical section
 

00:19:37.200 --> 00:19:39.350 align:start position:0%
critical section
are<00:19:37.360><c> interleaved</c><00:19:38.400><c> as</c><00:19:38.720><c> in</c><00:19:38.799><c> the</c><00:19:38.880><c> way</c><00:19:39.039><c> that</c><00:19:39.200><c> we</c>

00:19:39.350 --> 00:19:39.360 align:start position:0%
are interleaved as in the way that we
 

00:19:39.360 --> 00:19:40.789 align:start position:0%
are interleaved as in the way that we
saw<00:19:39.600><c> in</c><00:19:39.679><c> the</c><00:19:39.760><c> race</c><00:19:39.919><c> condition</c>

00:19:40.789 --> 00:19:40.799 align:start position:0%
saw in the race condition
 

00:19:40.799 --> 00:19:42.710 align:start position:0%
saw in the race condition
and<00:19:40.960><c> actually</c><00:19:41.280><c> exactly</c><00:19:41.679><c> that</c><00:19:41.840><c> is</c><00:19:42.080><c> what</c><00:19:42.320><c> avoids</c>

00:19:42.710 --> 00:19:42.720 align:start position:0%
and actually exactly that is what avoids
 

00:19:42.720 --> 00:19:48.070 align:start position:0%
and actually exactly that is what avoids
these<00:19:42.880><c> race</c><00:19:43.120><c> conditions</c>

00:19:48.070 --> 00:19:48.080 align:start position:0%
 
 

00:19:48.080 --> 00:19:55.190 align:start position:0%
 
any<00:19:48.320><c> questions</c><00:19:48.720><c> about</c><00:19:48.880><c> the</c><00:19:49.120><c> lock</c><00:19:50.840><c> abstraction</c>

00:19:55.190 --> 00:19:55.200 align:start position:0%
 
 

00:19:55.200 --> 00:20:00.310 align:start position:0%
 
now<00:19:55.440><c> programs</c><00:19:57.200><c> typically</c><00:19:57.600><c> have</c>

00:20:00.310 --> 00:20:00.320 align:start position:0%
 
 

00:20:00.320 --> 00:20:08.070 align:start position:0%
 
many<00:20:00.640><c> locks</c><00:20:01.200><c> in</c><00:20:01.360><c> fact</c><00:20:02.320><c> xv6</c><00:20:02.880><c> has</c><00:20:03.039><c> many</c><00:20:04.840><c> locks</c>

00:20:08.070 --> 00:20:08.080 align:start position:0%
 
 

00:20:08.080 --> 00:20:09.909 align:start position:0%
 
and<00:20:08.320><c> the</c><00:20:08.480><c> reason</c><00:20:08.720><c> to</c><00:20:08.880><c> have</c><00:20:09.120><c> many</c><00:20:09.520><c> locks</c><00:20:09.840><c> is</c>

00:20:09.909 --> 00:20:09.919 align:start position:0%
and the reason to have many locks is
 

00:20:09.919 --> 00:20:11.430 align:start position:0%
and the reason to have many locks is
because<00:20:10.159><c> you</c><00:20:10.320><c> know</c><00:20:10.559><c> even</c><00:20:10.720><c> the</c><00:20:10.960><c> you</c><00:20:11.120><c> know</c><00:20:11.280><c> the</c>

00:20:11.430 --> 00:20:11.440 align:start position:0%
because you know even the you know the
 

00:20:11.440 --> 00:20:12.710 align:start position:0%
because you know even the you know the
the<00:20:11.679><c> the</c>

00:20:12.710 --> 00:20:12.720 align:start position:0%
the the
 

00:20:12.720 --> 00:20:14.789 align:start position:0%
the the
walk<00:20:13.039><c> serializes</c><00:20:13.919><c> you</c><00:20:14.000><c> know</c><00:20:14.159><c> the</c><00:20:14.240><c> execution</c>

00:20:14.789 --> 00:20:14.799 align:start position:0%
walk serializes you know the execution
 

00:20:14.799 --> 00:20:17.350 align:start position:0%
walk serializes you know the execution
right<00:20:14.960><c> the</c><00:20:15.120><c> two</c><00:20:15.280><c> processes</c><00:20:16.000><c> you</c><00:20:16.080><c> know</c><00:20:16.320><c> want</c><00:20:16.480><c> to</c>

00:20:17.350 --> 00:20:17.360 align:start position:0%
right the two processes you know want to
 

00:20:17.360 --> 00:20:18.789 align:start position:0%
right the two processes you know want to
enter<00:20:17.600><c> this</c><00:20:17.760><c> critical</c><00:20:18.080><c> section</c><00:20:18.400><c> only</c><00:20:18.559><c> one</c>

00:20:18.789 --> 00:20:18.799 align:start position:0%
enter this critical section only one
 

00:20:18.799 --> 00:20:21.190 align:start position:0%
enter this critical section only one
succeeds<00:20:19.280><c> then</c><00:20:19.520><c> the</c><00:20:19.600><c> other</c><00:20:19.760><c> one</c>

00:20:21.190 --> 00:20:21.200 align:start position:0%
succeeds then the other one
 

00:20:21.200 --> 00:20:22.549 align:start position:0%
succeeds then the other one
runs<00:20:21.440><c> that</c><00:20:21.520><c> critical</c><00:20:21.840><c> section</c><00:20:22.240><c> after</c><00:20:22.400><c> the</c>

00:20:22.549 --> 00:20:22.559 align:start position:0%
runs that critical section after the
 

00:20:22.559 --> 00:20:24.789 align:start position:0%
runs that critical section after the
first<00:20:22.799><c> one</c>

00:20:24.789 --> 00:20:24.799 align:start position:0%
first one
 

00:20:24.799 --> 00:20:26.630 align:start position:0%
first one
finishes<00:20:25.440><c> so</c><00:20:25.600><c> there's</c><00:20:25.919><c> no</c><00:20:26.320><c> sort</c><00:20:26.480><c> of</c>

00:20:26.630 --> 00:20:26.640 align:start position:0%
finishes so there's no sort of
 

00:20:26.640 --> 00:20:28.710 align:start position:0%
finishes so there's no sort of
parallelism<00:20:27.120><c> at</c><00:20:27.280><c> all</c>

00:20:28.710 --> 00:20:28.720 align:start position:0%
parallelism at all
 

00:20:28.720 --> 00:20:31.110 align:start position:0%
parallelism at all
so<00:20:29.120><c> if</c><00:20:29.280><c> the</c><00:20:29.440><c> kernel</c><00:20:29.760><c> had</c><00:20:29.919><c> only</c><00:20:30.240><c> one</c><00:20:30.559><c> lock</c><00:20:30.960><c> you</c>

00:20:31.110 --> 00:20:31.120 align:start position:0%
so if the kernel had only one lock you
 

00:20:31.120 --> 00:20:32.549 align:start position:0%
so if the kernel had only one lock you
know<00:20:31.280><c> which</c><00:20:31.440><c> is</c><00:20:31.679><c> typically</c><00:20:32.000><c> called</c><00:20:32.240><c> the</c>

00:20:32.549 --> 00:20:32.559 align:start position:0%
know which is typically called the
 

00:20:32.559 --> 00:20:34.710 align:start position:0%
know which is typically called the
big<00:20:32.720><c> kernel</c><00:20:33.039><c> lock</c><00:20:33.520><c> then</c><00:20:33.679><c> basically</c><00:20:34.320><c> every</c>

00:20:34.710 --> 00:20:34.720 align:start position:0%
big kernel lock then basically every
 

00:20:34.720 --> 00:20:35.909 align:start position:0%
big kernel lock then basically every
system<00:20:35.120><c> call</c>

00:20:35.909 --> 00:20:35.919 align:start position:0%
system call
 

00:20:35.919 --> 00:20:37.669 align:start position:0%
system call
uh<00:20:36.240><c> in</c><00:20:36.320><c> this</c><00:20:36.640><c> uh</c><00:20:36.960><c> in</c><00:20:37.039><c> the</c><00:20:37.120><c> kernel</c><00:20:37.440><c> would</c><00:20:37.600><c> be</c>

00:20:37.669 --> 00:20:37.679 align:start position:0%
uh in this uh in the kernel would be
 

00:20:37.679 --> 00:20:39.110 align:start position:0%
uh in this uh in the kernel would be
serialized<00:20:38.240><c> you</c><00:20:38.400><c> know</c><00:20:38.480><c> you</c><00:20:38.640><c> would</c>

00:20:39.110 --> 00:20:39.120 align:start position:0%
serialized you know you would
 

00:20:39.120 --> 00:20:41.590 align:start position:0%
serialized you know you would
assist<00:20:39.360><c> the</c><00:20:39.440><c> call</c><00:20:39.679><c> which</c><00:20:40.000><c> one</c><00:20:40.480><c> start</c><00:20:41.200><c> gets</c><00:20:41.440><c> the</c>

00:20:41.590 --> 00:20:41.600 align:start position:0%
assist the call which one start gets the
 

00:20:41.600 --> 00:20:43.270 align:start position:0%
assist the call which one start gets the
one<00:20:41.840><c> the</c><00:20:42.000><c> big</c><00:20:42.159><c> kernel</c><00:20:42.480><c> lock</c><00:20:42.720><c> you</c><00:20:42.799><c> know</c><00:20:43.039><c> does</c>

00:20:43.270 --> 00:20:43.280 align:start position:0%
one the big kernel lock you know does
 

00:20:43.280 --> 00:20:44.230 align:start position:0%
one the big kernel lock you know does
whatever<00:20:43.520><c> it</c><00:20:43.600><c> needs</c><00:20:43.840><c> to</c><00:20:43.919><c> do</c>

00:20:44.230 --> 00:20:44.240 align:start position:0%
whatever it needs to do
 

00:20:44.240 --> 00:20:45.750 align:start position:0%
whatever it needs to do
and<00:20:44.320><c> then</c><00:20:44.640><c> releases</c><00:20:45.039><c> the</c><00:20:45.120><c> big</c><00:20:45.280><c> kernel</c><00:20:45.520><c> lock</c>

00:20:45.750 --> 00:20:45.760 align:start position:0%
and then releases the big kernel lock
 

00:20:45.760 --> 00:20:48.470 align:start position:0%
and then releases the big kernel lock
and<00:20:45.840><c> then</c><00:20:46.000><c> basically</c><00:20:46.400><c> research</c><00:20:46.720><c> use</c><00:20:46.960><c> space</c>

00:20:48.470 --> 00:20:48.480 align:start position:0%
and then basically research use space
 

00:20:48.480 --> 00:20:49.669 align:start position:0%
and then basically research use space
and<00:20:48.559><c> then</c><00:20:48.720><c> the</c><00:20:48.880><c> second</c><00:20:49.120><c> system</c><00:20:49.360><c> called</c><00:20:49.600><c> the</c>

00:20:49.669 --> 00:20:49.679 align:start position:0%
and then the second system called the
 

00:20:49.679 --> 00:20:51.830 align:start position:0%
and then the second system called the
drum<00:20:50.320><c> so</c><00:20:50.480><c> we</c><00:20:50.640><c> have</c><00:20:50.799><c> an</c><00:20:50.960><c> apparel</c><00:20:51.360><c> application</c>

00:20:51.830 --> 00:20:51.840 align:start position:0%
drum so we have an apparel application
 

00:20:51.840 --> 00:20:53.270 align:start position:0%
drum so we have an apparel application
that<00:20:52.080><c> runs</c><00:20:52.320><c> you</c><00:20:52.400><c> know</c><00:20:52.480><c> once</c><00:20:52.720><c> we</c><00:20:52.799><c> run</c><00:20:53.039><c> system</c>

00:20:53.270 --> 00:20:53.280 align:start position:0%
that runs you know once we run system
 

00:20:53.280 --> 00:20:54.310 align:start position:0%
that runs you know once we run system
calls<00:20:53.520><c> in</c><00:20:53.600><c> parallel</c>

00:20:54.310 --> 00:20:54.320 align:start position:0%
calls in parallel
 

00:20:54.320 --> 00:20:56.549 align:start position:0%
calls in parallel
suddenly<00:20:54.720><c> you</c><00:20:54.880><c> know</c><00:20:55.120><c> all</c><00:20:55.360><c> the</c><00:20:55.919><c> system</c><00:20:56.240><c> calls</c>

00:20:56.549 --> 00:20:56.559 align:start position:0%
suddenly you know all the system calls
 

00:20:56.559 --> 00:20:58.549 align:start position:0%
suddenly you know all the system calls
actually<00:20:56.880><c> run</c><00:20:57.120><c> serially</c><00:20:57.679><c> if</c><00:20:57.840><c> we</c><00:20:57.919><c> had</c><00:20:58.080><c> only</c><00:20:58.320><c> one</c>

00:20:58.549 --> 00:20:58.559 align:start position:0%
actually run serially if we had only one
 

00:20:58.559 --> 00:20:59.830 align:start position:0%
actually run serially if we had only one
lock

00:20:59.830 --> 00:20:59.840 align:start position:0%
lock
 

00:20:59.840 --> 00:21:02.070 align:start position:0%
lock
and<00:21:00.000><c> so</c><00:21:00.640><c> typically</c><00:21:01.120><c> a</c><00:21:01.200><c> program</c><00:21:01.600><c> like</c><00:21:01.840><c> you</c><00:21:01.919><c> know</c>

00:21:02.070 --> 00:21:02.080 align:start position:0%
and so typically a program like you know
 

00:21:02.080 --> 00:21:03.110 align:start position:0%
and so typically a program like you know
xp6<00:21:02.720><c> has</c>

00:21:03.110 --> 00:21:03.120 align:start position:0%
xp6 has
 

00:21:03.120 --> 00:21:04.950 align:start position:0%
xp6 has
you<00:21:03.280><c> know</c><00:21:03.440><c> many</c><00:21:03.760><c> locks</c><00:21:04.080><c> because</c><00:21:04.400><c> at</c><00:21:04.480><c> least</c><00:21:04.880><c> you</c>

00:21:04.950 --> 00:21:04.960 align:start position:0%
you know many locks because at least you
 

00:21:04.960 --> 00:21:09.590 align:start position:0%
you know many locks because at least you
know<00:21:05.200><c> when</c><00:21:05.360><c> you</c><00:21:05.440><c> get</c><00:21:05.600><c> some</c><00:21:05.760><c> parallelism</c>

00:21:09.590 --> 00:21:09.600 align:start position:0%
 
 

00:21:09.600 --> 00:21:13.270 align:start position:0%
 
because

00:21:13.270 --> 00:21:13.280 align:start position:0%
 
 

00:21:13.280 --> 00:21:15.029 align:start position:0%
 
you<00:21:13.360><c> know</c><00:21:13.600><c> if</c><00:21:13.919><c> you</c><00:21:14.080><c> have</c><00:21:14.240><c> two</c><00:21:14.559><c> system</c><00:21:14.799><c> calls</c>

00:21:15.029 --> 00:21:15.039 align:start position:0%
you know if you have two system calls
 

00:21:15.039 --> 00:21:17.350 align:start position:0%
you know if you have two system calls
for<00:21:15.200><c> example</c><00:21:15.760><c> use</c><00:21:16.000><c> two</c><00:21:16.159><c> different</c><00:21:16.480><c> locks</c>

00:21:17.350 --> 00:21:17.360 align:start position:0%
for example use two different locks
 

00:21:17.360 --> 00:21:19.750 align:start position:0%
for example use two different locks
uh<00:21:17.919><c> then</c><00:21:18.320><c> you</c><00:21:18.480><c> know</c><00:21:18.559><c> they</c><00:21:18.720><c> can</c><00:21:18.880><c> actually</c><00:21:19.120><c> run</c>

00:21:19.750 --> 00:21:19.760 align:start position:0%
uh then you know they can actually run
 

00:21:19.760 --> 00:21:21.270 align:start position:0%
uh then you know they can actually run
uh<00:21:19.919><c> completely</c><00:21:20.320><c> in</c><00:21:20.480><c> parallel</c>

00:21:21.270 --> 00:21:21.280 align:start position:0%
uh completely in parallel
 

00:21:21.280 --> 00:21:24.549 align:start position:0%
uh completely in parallel
uh<00:21:21.600><c> without</c><00:21:22.000><c> any</c><00:21:22.400><c> uh</c><00:21:23.120><c> you</c><00:21:23.280><c> know</c><00:21:23.360><c> serialization</c>

00:21:24.549 --> 00:21:24.559 align:start position:0%
uh without any uh you know serialization
 

00:21:24.559 --> 00:21:26.310 align:start position:0%
uh without any uh you know serialization
uh<00:21:24.799><c> because</c><00:21:25.039><c> they're</c><00:21:25.200><c> basically</c><00:21:25.600><c> you</c><00:21:25.760><c> know</c><00:21:26.000><c> uh</c>

00:21:26.310 --> 00:21:26.320 align:start position:0%
uh because they're basically you know uh
 

00:21:26.320 --> 00:21:31.110 align:start position:0%
uh because they're basically you know uh
using<00:21:26.640><c> diff</c><00:21:26.880><c> blocks</c><00:21:27.120><c> to</c><00:21:28.840><c> serialize</c>

00:21:31.110 --> 00:21:31.120 align:start position:0%
using diff blocks to serialize
 

00:21:31.120 --> 00:21:34.470 align:start position:0%
using diff blocks to serialize
now<00:21:31.840><c> uh</c><00:21:34.080><c> there's</c>

00:21:34.470 --> 00:21:34.480 align:start position:0%
now uh there's
 

00:21:34.480 --> 00:21:37.669 align:start position:0%
now uh there's
sort<00:21:34.640><c> of</c><00:21:34.720><c> a</c><00:21:34.799><c> couple</c><00:21:34.960><c> of</c><00:21:35.120><c> important</c><00:21:35.520><c> points</c><00:21:36.400><c> uh</c>

00:21:37.669 --> 00:21:37.679 align:start position:0%
sort of a couple of important points uh
 

00:21:37.679 --> 00:21:40.310 align:start position:0%
sort of a couple of important points uh
the<00:21:38.720><c> nobody</c><00:21:39.280><c> really</c><00:21:39.440><c> sort</c><00:21:39.600><c> of</c><00:21:39.679><c> enforces</c><00:21:40.240><c> in</c>

00:21:40.310 --> 00:21:40.320 align:start position:0%
the nobody really sort of enforces in
 

00:21:40.320 --> 00:21:41.190 align:start position:0%
the nobody really sort of enforces in
this<00:21:40.559><c> interface</c>

00:21:41.190 --> 00:21:41.200 align:start position:0%
this interface
 

00:21:41.200 --> 00:21:43.190 align:start position:0%
this interface
you<00:21:41.360><c> know</c><00:21:41.520><c> that</c><00:21:41.760><c> you</c><00:21:41.919><c> put</c><00:21:42.159><c> in</c><00:21:42.320><c> the</c><00:21:42.720><c> acquires</c>

00:21:43.190 --> 00:21:43.200 align:start position:0%
you know that you put in the acquires
 

00:21:43.200 --> 00:21:44.390 align:start position:0%
you know that you put in the acquires
and<00:21:43.280><c> releases</c><00:21:43.679><c> you</c><00:21:43.840><c> know</c><00:21:43.919><c> it's</c><00:21:44.080><c> up</c><00:21:44.159><c> to</c><00:21:44.240><c> the</c>

00:21:44.390 --> 00:21:44.400 align:start position:0%
and releases you know it's up to the
 

00:21:44.400 --> 00:21:46.149 align:start position:0%
and releases you know it's up to the
program<00:21:44.799><c> to</c><00:21:44.880><c> do</c><00:21:45.039><c> so</c>

00:21:46.149 --> 00:21:46.159 align:start position:0%
program to do so
 

00:21:46.159 --> 00:21:47.669 align:start position:0%
program to do so
so<00:21:46.320><c> if</c><00:21:46.480><c> you</c><00:21:46.720><c> want</c><00:21:46.880><c> some</c><00:21:47.039><c> particular</c><00:21:47.360><c> piece</c><00:21:47.600><c> of</c>

00:21:47.669 --> 00:21:47.679 align:start position:0%
so if you want some particular piece of
 

00:21:47.679 --> 00:21:49.590 align:start position:0%
so if you want some particular piece of
code<00:21:47.919><c> to</c><00:21:48.000><c> be</c>

00:21:49.590 --> 00:21:49.600 align:start position:0%
code to be
 

00:21:49.600 --> 00:21:52.310 align:start position:0%
code to be
atomic<00:21:50.559><c> then</c><00:21:51.200><c> it's</c><00:21:51.360><c> up</c><00:21:51.440><c> to</c><00:21:51.600><c> the</c><00:21:51.760><c> developer</c><00:21:52.240><c> to</c>

00:21:52.310 --> 00:21:52.320 align:start position:0%
atomic then it's up to the developer to
 

00:21:52.320 --> 00:21:52.950 align:start position:0%
atomic then it's up to the developer to
actually

00:21:52.950 --> 00:21:52.960 align:start position:0%
actually
 

00:21:52.960 --> 00:21:55.430 align:start position:0%
actually
put<00:21:53.120><c> these</c><00:21:53.440><c> acquire</c><00:21:53.919><c> releases</c><00:21:54.400><c> in</c><00:21:55.120><c> and</c><00:21:55.280><c> you</c>

00:21:55.430 --> 00:21:55.440 align:start position:0%
put these acquire releases in and you
 

00:21:55.440 --> 00:21:57.590 align:start position:0%
put these acquire releases in and you
know<00:21:55.600><c> clearly</c><00:21:55.919><c> as</c><00:21:56.000><c> we'll</c><00:21:56.240><c> see</c>

00:21:57.590 --> 00:21:57.600 align:start position:0%
know clearly as we'll see
 

00:21:57.600 --> 00:22:00.789 align:start position:0%
know clearly as we'll see
if<00:21:57.679><c> you</c><00:21:57.840><c> can</c><00:21:57.919><c> imagine</c><00:21:58.799><c> um</c><00:22:00.240><c> and</c><00:22:00.400><c> that</c><00:22:00.640><c> is</c><00:22:00.720><c> a</c>

00:22:00.789 --> 00:22:00.799 align:start position:0%
if you can imagine um and that is a
 

00:22:00.799 --> 00:22:01.350 align:start position:0%
if you can imagine um and that is a
little<00:22:00.960><c> bit</c><00:22:01.120><c> uh</c>

00:22:01.350 --> 00:22:01.360 align:start position:0%
little bit uh
 

00:22:01.360 --> 00:22:02.870 align:start position:0%
little bit uh
it<00:22:01.440><c> can</c><00:22:01.600><c> be</c><00:22:01.760><c> tricky</c><00:22:02.240><c> and</c><00:22:02.320><c> so</c><00:22:02.480><c> it's</c><00:22:02.640><c> important</c>

00:22:02.870 --> 00:22:02.880 align:start position:0%
it can be tricky and so it's important
 

00:22:02.880 --> 00:22:04.470 align:start position:0%
it can be tricky and so it's important
to<00:22:03.039><c> realize</c><00:22:03.360><c> that</c><00:22:03.520><c> you</c><00:22:03.679><c> know</c><00:22:03.760><c> the</c><00:22:04.000><c> locking</c><00:22:04.400><c> is</c>

00:22:04.470 --> 00:22:04.480 align:start position:0%
to realize that you know the locking is
 

00:22:04.480 --> 00:22:06.870 align:start position:0%
to realize that you know the locking is
not<00:22:04.799><c> actually</c><00:22:05.120><c> done</c><00:22:05.360><c> automatically</c><00:22:06.000><c> for</c><00:22:06.240><c> you</c>

00:22:06.870 --> 00:22:06.880 align:start position:0%
not actually done automatically for you
 

00:22:06.880 --> 00:22:09.350 align:start position:0%
not actually done automatically for you
uh<00:22:07.200><c> it's</c><00:22:07.440><c> all</c><00:22:07.679><c> up</c><00:22:07.840><c> to</c><00:22:08.080><c> the</c><00:22:08.720><c> developer</c><00:22:09.200><c> to</c>

00:22:09.350 --> 00:22:09.360 align:start position:0%
uh it's all up to the developer to
 

00:22:09.360 --> 00:22:10.230 align:start position:0%
uh it's all up to the developer to
figure<00:22:09.679><c> out</c><00:22:09.840><c> to</c>

00:22:10.230 --> 00:22:10.240 align:start position:0%
figure out to
 

00:22:10.240 --> 00:22:14.070 align:start position:0%
figure out to
associate<00:22:11.120><c> with</c><00:22:12.799><c> data</c><00:22:13.120><c> structures</c>

00:22:14.070 --> 00:22:14.080 align:start position:0%
associate with data structures
 

00:22:14.080 --> 00:22:16.470 align:start position:0%
associate with data structures
and<00:22:14.880><c> ensuring</c><00:22:15.440><c> that</c><00:22:15.760><c> you</c><00:22:15.840><c> know</c><00:22:16.000><c> the</c>

00:22:16.470 --> 00:22:16.480 align:start position:0%
and ensuring that you know the
 

00:22:16.480 --> 00:22:18.470 align:start position:0%
and ensuring that you know the
appropriate<00:22:16.960><c> acquired</c><00:22:17.440><c> releases</c>

00:22:18.470 --> 00:22:18.480 align:start position:0%
appropriate acquired releases
 

00:22:18.480 --> 00:22:23.029 align:start position:0%
appropriate acquired releases
are<00:22:18.640><c> dead</c>

00:22:23.029 --> 00:22:23.039 align:start position:0%
 
 

00:22:23.039 --> 00:22:25.110 align:start position:0%
 
um<00:22:23.679><c> so</c><00:22:24.000><c> clearly</c><00:22:24.400><c> it's</c><00:22:24.480><c> the</c><00:22:24.559><c> case</c><00:22:24.799><c> like</c><00:22:25.039><c> you</c>

00:22:25.110 --> 00:22:25.120 align:start position:0%
um so clearly it's the case like you
 

00:22:25.120 --> 00:22:26.470 align:start position:0%
um so clearly it's the case like you
know<00:22:25.600><c> the</c><00:22:26.000><c> the</c>

00:22:26.470 --> 00:22:26.480 align:start position:0%
know the the
 

00:22:26.480 --> 00:22:29.909 align:start position:0%
know the the
uh<00:22:27.360><c> blocks</c><00:22:28.720><c> limit</c><00:22:29.120><c> imperialism</c><00:22:29.840><c> and</c>

00:22:29.909 --> 00:22:29.919 align:start position:0%
uh blocks limit imperialism and
 

00:22:29.919 --> 00:22:31.830 align:start position:0%
uh blocks limit imperialism and
therefore<00:22:30.320><c> their</c><00:22:30.480><c> limit</c><00:22:30.799><c> performance</c>

00:22:31.830 --> 00:22:31.840 align:start position:0%
therefore their limit performance
 

00:22:31.840 --> 00:22:33.750 align:start position:0%
therefore their limit performance
uh<00:22:32.320><c> and</c><00:22:32.480><c> so</c><00:22:32.640><c> then</c><00:22:32.799><c> i</c><00:22:32.880><c> mean</c><00:22:33.120><c> this</c><00:22:33.360><c> raises</c><00:22:33.600><c> the</c>

00:22:33.750 --> 00:22:33.760 align:start position:0%
uh and so then i mean this raises the
 

00:22:33.760 --> 00:22:42.630 align:start position:0%
uh and so then i mean this raises the
question<00:22:34.159><c> when</c><00:22:34.320><c> to</c><00:22:38.840><c> lock</c>

00:22:42.630 --> 00:22:42.640 align:start position:0%
 
 

00:22:42.640 --> 00:22:43.990 align:start position:0%
 
and<00:22:43.120><c> you</c><00:22:43.280><c> know</c><00:22:43.360><c> i'm</c><00:22:43.440><c> going</c><00:22:43.520><c> to</c><00:22:43.600><c> give</c><00:22:43.760><c> you</c><00:22:43.840><c> sort</c>

00:22:43.990 --> 00:22:44.000 align:start position:0%
and you know i'm going to give you sort
 

00:22:44.000 --> 00:22:47.590 align:start position:0%
and you know i'm going to give you sort
of<00:22:44.159><c> a</c><00:22:45.039><c> very</c><00:22:45.280><c> conservative</c><00:22:45.919><c> rule</c>

00:22:47.590 --> 00:22:47.600 align:start position:0%
of a very conservative rule
 

00:22:47.600 --> 00:22:49.029 align:start position:0%
of a very conservative rule
but<00:22:47.760><c> that's</c><00:22:48.000><c> a</c><00:22:48.080><c> good</c><00:22:48.240><c> one</c><00:22:48.480><c> as</c><00:22:48.640><c> a</c><00:22:48.720><c> starting</c>

00:22:49.029 --> 00:22:49.039 align:start position:0%
but that's a good one as a starting
 

00:22:49.039 --> 00:22:50.630 align:start position:0%
but that's a good one as a starting
point<00:22:49.200><c> to</c><00:22:49.280><c> think</c><00:22:49.440><c> about</c><00:22:49.679><c> things</c>

00:22:50.630 --> 00:22:50.640 align:start position:0%
point to think about things
 

00:22:50.640 --> 00:22:56.870 align:start position:0%
point to think about things
so<00:22:50.880><c> to</c><00:22:51.039><c> conserve</c><00:22:51.440><c> the</c><00:22:52.840><c> rule</c>

00:22:56.870 --> 00:22:56.880 align:start position:0%
 
 

00:22:56.880 --> 00:23:00.230 align:start position:0%
 
or<00:22:57.120><c> maybe</c><00:22:57.520><c> guideline</c><00:22:58.000><c> is</c><00:22:58.159><c> a</c><00:22:58.400><c> better</c><00:22:58.799><c> uh</c>

00:23:00.230 --> 00:23:00.240 align:start position:0%
or maybe guideline is a better uh
 

00:23:00.240 --> 00:23:02.149 align:start position:0%
or maybe guideline is a better uh
phrasing<00:23:01.039><c> is</c><00:23:01.200><c> that</c><00:23:01.440><c> if</c><00:23:01.679><c> you</c><00:23:01.760><c> know</c><00:23:01.919><c> two</c>

00:23:02.149 --> 00:23:02.159 align:start position:0%
phrasing is that if you know two
 

00:23:02.159 --> 00:23:05.830 align:start position:0%
phrasing is that if you know two
processes

00:23:05.830 --> 00:23:05.840 align:start position:0%
 
 

00:23:05.840 --> 00:23:09.110 align:start position:0%
 
two<00:23:06.000><c> processes</c><00:23:07.039><c> access</c>

00:23:09.110 --> 00:23:09.120 align:start position:0%
two processes access
 

00:23:09.120 --> 00:23:17.110 align:start position:0%
two processes access
a<00:23:09.280><c> shared</c><00:23:09.600><c> data</c><00:23:09.840><c> structure</c>

00:23:17.110 --> 00:23:17.120 align:start position:0%
 
 

00:23:17.120 --> 00:23:20.950 align:start position:0%
 
and<00:23:17.280><c> one</c><00:23:17.600><c> is</c><00:23:17.760><c> a</c><00:23:18.559><c> and</c><00:23:18.720><c> one</c><00:23:18.960><c> of</c><00:23:19.039><c> them</c><00:23:19.280><c> is</c><00:23:19.440><c> a</c>

00:23:20.950 --> 00:23:20.960 align:start position:0%
and one is a and one of them is a
 

00:23:20.960 --> 00:23:23.830 align:start position:0%
and one is a and one of them is a
writer<00:23:21.360><c> or</c><00:23:21.520><c> an</c><00:23:21.679><c> updater</c><00:23:22.400><c> so</c><00:23:22.720><c> meaning</c><00:23:23.679><c> it's</c>

00:23:23.830 --> 00:23:23.840 align:start position:0%
writer or an updater so meaning it's
 

00:23:23.840 --> 00:23:25.270 align:start position:0%
writer or an updater so meaning it's
actually<00:23:24.000><c> going</c><00:23:24.159><c> to</c><00:23:24.240><c> modify</c><00:23:24.640><c> the</c><00:23:24.720><c> shared</c><00:23:24.960><c> data</c>

00:23:25.270 --> 00:23:25.280 align:start position:0%
actually going to modify the shared data
 

00:23:25.280 --> 00:23:27.110 align:start position:0%
actually going to modify the shared data
structure

00:23:27.110 --> 00:23:27.120 align:start position:0%
structure
 

00:23:27.120 --> 00:23:34.830 align:start position:0%
structure
then<00:23:28.000><c> you</c><00:23:28.159><c> need</c><00:23:28.320><c> a</c><00:23:28.480><c> lock</c><00:23:28.720><c> for</c><00:23:28.799><c> that</c><00:23:28.960><c> data</c>

00:23:34.830 --> 00:23:34.840 align:start position:0%
 
 

00:23:34.840 --> 00:23:39.350 align:start position:0%
 
structure

00:23:39.350 --> 00:23:39.360 align:start position:0%
 
 

00:23:39.360 --> 00:23:42.149 align:start position:0%
 
uh<00:23:40.559><c> so</c><00:23:40.720><c> this</c><00:23:40.880><c> is</c><00:23:40.960><c> a</c><00:23:41.039><c> conservative</c><00:23:41.520><c> rule</c><00:23:42.000><c> sort</c>

00:23:42.149 --> 00:23:42.159 align:start position:0%
uh so this is a conservative rule sort
 

00:23:42.159 --> 00:23:43.830 align:start position:0%
uh so this is a conservative rule sort
of<00:23:42.240><c> like</c><00:23:42.400><c> a</c><00:23:42.559><c> red</c><00:23:42.799><c> flag</c><00:23:43.200><c> you</c><00:23:43.360><c> know</c><00:23:43.440><c> when</c><00:23:43.600><c> you're</c>

00:23:43.830 --> 00:23:43.840 align:start position:0%
of like a red flag you know when you're
 

00:23:43.840 --> 00:23:44.630 align:start position:0%
of like a red flag you know when you're
programming

00:23:44.630 --> 00:23:44.640 align:start position:0%
programming
 

00:23:44.640 --> 00:23:47.750 align:start position:0%
programming
and<00:23:45.520><c> you</c><00:23:45.760><c> have</c><00:23:46.159><c> a</c><00:23:46.880><c> data</c><00:23:47.200><c> structure</c><00:23:47.520><c> that</c><00:23:47.679><c> was</c>

00:23:47.750 --> 00:23:47.760 align:start position:0%
and you have a data structure that was
 

00:23:47.760 --> 00:23:49.590 align:start position:0%
and you have a data structure that was
accessed<00:23:48.080><c> by</c><00:23:48.320><c> multiple</c><00:23:48.720><c> processes</c><00:23:49.279><c> and</c><00:23:49.440><c> one</c>

00:23:49.590 --> 00:23:49.600 align:start position:0%
accessed by multiple processes and one
 

00:23:49.600 --> 00:23:50.470 align:start position:0%
accessed by multiple processes and one
can<00:23:49.760><c> be</c><00:23:49.840><c> a</c><00:23:49.919><c> writer</c>

00:23:50.470 --> 00:23:50.480 align:start position:0%
can be a writer
 

00:23:50.480 --> 00:23:51.909 align:start position:0%
can be a writer
at<00:23:50.559><c> that</c><00:23:50.720><c> point</c><00:23:50.960><c> you</c><00:23:51.200><c> should</c><00:23:51.360><c> be</c><00:23:51.520><c> thinking</c>

00:23:51.909 --> 00:23:51.919 align:start position:0%
at that point you should be thinking
 

00:23:51.919 --> 00:23:53.350 align:start position:0%
at that point you should be thinking
okay<00:23:52.159><c> there's</c><00:23:52.400><c> a</c><00:23:52.480><c> possibility</c><00:23:52.960><c> of</c><00:23:53.039><c> a</c><00:23:53.120><c> race</c>

00:23:53.350 --> 00:23:53.360 align:start position:0%
okay there's a possibility of a race
 

00:23:53.360 --> 00:23:53.909 align:start position:0%
okay there's a possibility of a race
condition

00:23:53.909 --> 00:23:53.919 align:start position:0%
condition
 

00:23:53.919 --> 00:23:55.430 align:start position:0%
condition
we<00:23:54.080><c> want</c><00:23:54.240><c> to</c><00:23:54.480><c> avoid</c><00:23:54.799><c> this</c><00:23:55.039><c> in</c><00:23:55.200><c> a</c><00:23:55.279><c> race</c>

00:23:55.430 --> 00:23:55.440 align:start position:0%
we want to avoid this in a race
 

00:23:55.440 --> 00:23:57.669 align:start position:0%
we want to avoid this in a race
condition<00:23:56.159><c> i'll</c><00:23:56.400><c> just</c><00:23:56.640><c> stick</c><00:23:56.799><c> it</c><00:23:56.960><c> in</c><00:23:57.120><c> lock</c>

00:23:57.669 --> 00:23:57.679 align:start position:0%
condition i'll just stick it in lock
 

00:23:57.679 --> 00:24:00.390 align:start position:0%
condition i'll just stick it in lock
i<00:23:57.760><c> will</c><00:23:58.000><c> use</c><00:23:58.240><c> a</c><00:23:58.320><c> lock</c><00:23:58.640><c> to</c><00:23:59.679><c> guarantee</c><00:24:00.159><c> that</c><00:24:00.240><c> this</c>

00:24:00.390 --> 00:24:00.400 align:start position:0%
i will use a lock to guarantee that this
 

00:24:00.400 --> 00:24:02.950 align:start position:0%
i will use a lock to guarantee that this
race<00:24:00.559><c> condition</c><00:24:00.960><c> can't</c><00:24:01.279><c> happen</c>

00:24:02.950 --> 00:24:02.960 align:start position:0%
race condition can't happen
 

00:24:02.960 --> 00:24:05.430 align:start position:0%
race condition can't happen
but<00:24:03.200><c> you</c><00:24:03.360><c> know</c><00:24:03.440><c> there's</c><00:24:03.600><c> rulers</c><00:24:04.240><c> uh</c><00:24:04.720><c> in</c><00:24:05.279><c> some</c>

00:24:05.430 --> 00:24:05.440 align:start position:0%
but you know there's rulers uh in some
 

00:24:05.440 --> 00:24:10.870 align:start position:0%
but you know there's rulers uh in some
ways<00:24:05.679><c> too</c><00:24:05.919><c> strict</c>

00:24:10.870 --> 00:24:10.880 align:start position:0%
 
 

00:24:10.880 --> 00:24:12.789 align:start position:0%
 
uh<00:24:11.120><c> there</c><00:24:11.279><c> are</c><00:24:11.440><c> cases</c><00:24:11.919><c> where</c><00:24:12.480><c> you</c><00:24:12.559><c> know</c><00:24:12.720><c> it's</c>

00:24:12.789 --> 00:24:12.799 align:start position:0%
uh there are cases where you know it's
 

00:24:12.799 --> 00:24:14.950 align:start position:0%
uh there are cases where you know it's
okay<00:24:13.279><c> if</c><00:24:13.760><c> two</c><00:24:13.919><c> processes</c><00:24:14.480><c> actually</c><00:24:14.799><c> share</c>

00:24:14.950 --> 00:24:14.960 align:start position:0%
okay if two processes actually share
 

00:24:14.960 --> 00:24:17.350 align:start position:0%
okay if two processes actually share
data<00:24:15.279><c> structure</c><00:24:15.520><c> and</c><00:24:15.679><c> one</c><00:24:15.840><c> is</c><00:24:15.919><c> a</c><00:24:16.000><c> writer</c>

00:24:17.350 --> 00:24:17.360 align:start position:0%
data structure and one is a writer
 

00:24:17.360 --> 00:24:19.029 align:start position:0%
data structure and one is a writer
in<00:24:17.520><c> particular</c><00:24:18.000><c> there</c><00:24:18.159><c> are</c><00:24:18.240><c> sort</c><00:24:18.400><c> of</c><00:24:18.559><c> styles</c>

00:24:19.029 --> 00:24:19.039 align:start position:0%
in particular there are sort of styles
 

00:24:19.039 --> 00:24:20.950 align:start position:0%
in particular there are sort of styles
of<00:24:19.600><c> programming</c><00:24:20.159><c> called</c><00:24:20.400><c> block</c><00:24:20.720><c> free</c>

00:24:20.950 --> 00:24:20.960 align:start position:0%
of programming called block free
 

00:24:20.960 --> 00:24:22.710 align:start position:0%
of programming called block free
programming

00:24:22.710 --> 00:24:22.720 align:start position:0%
programming
 

00:24:22.720 --> 00:24:25.029 align:start position:0%
programming
that<00:24:22.960><c> actually</c><00:24:23.200><c> totally</c><00:24:24.000><c> were</c><00:24:24.159><c> just</c><00:24:24.880><c> where</c>

00:24:25.029 --> 00:24:25.039 align:start position:0%
that actually totally were just where
 

00:24:25.039 --> 00:24:30.830 align:start position:0%
that actually totally were just where
these<00:24:25.279><c> kinds</c><00:24:25.440><c> of</c><00:24:25.520><c> scenarios</c><00:24:26.080><c> actually</c><00:24:26.400><c> do</c>

00:24:30.830 --> 00:24:30.840 align:start position:0%
 
 

00:24:30.840 --> 00:24:32.230 align:start position:0%
 
happen

00:24:32.230 --> 00:24:32.240 align:start position:0%
happen
 

00:24:32.240 --> 00:24:33.350 align:start position:0%
happen
you<00:24:32.400><c> might</c><00:24:32.640><c> want</c><00:24:32.720><c> to</c><00:24:32.799><c> do</c><00:24:32.960><c> log</c><00:24:33.120><c> free</c>

00:24:33.350 --> 00:24:33.360 align:start position:0%
you might want to do log free
 

00:24:33.360 --> 00:24:34.630 align:start position:0%
you might want to do log free
programming<00:24:33.679><c> just</c><00:24:33.840><c> basically</c><00:24:34.159><c> to</c><00:24:34.240><c> get</c><00:24:34.400><c> better</c>

00:24:34.630 --> 00:24:34.640 align:start position:0%
programming just basically to get better
 

00:24:34.640 --> 00:24:35.590 align:start position:0%
programming just basically to get better
performance<00:24:35.279><c> or</c>

00:24:35.590 --> 00:24:35.600 align:start position:0%
performance or
 

00:24:35.600 --> 00:24:38.710 align:start position:0%
performance or
more<00:24:35.840><c> parallelism</c><00:24:37.039><c> uh</c>

00:24:38.710 --> 00:24:38.720 align:start position:0%
more parallelism uh
 

00:24:38.720 --> 00:24:41.269 align:start position:0%
more parallelism uh
mark<00:24:38.960><c> free</c><00:24:39.200><c> program</c><00:24:39.520><c> is</c><00:24:39.679><c> tricky</c><00:24:40.400><c> uh</c><00:24:40.799><c> even</c><00:24:41.039><c> more</c>

00:24:41.269 --> 00:24:41.279 align:start position:0%
mark free program is tricky uh even more
 

00:24:41.279 --> 00:24:43.350 align:start position:0%
mark free program is tricky uh even more
tricky<00:24:41.600><c> than</c><00:24:41.840><c> programming</c><00:24:42.240><c> with</c><00:24:42.480><c> locks</c>

00:24:43.350 --> 00:24:43.360 align:start position:0%
tricky than programming with locks
 

00:24:43.360 --> 00:24:44.950 align:start position:0%
tricky than programming with locks
and<00:24:43.840><c> you</c><00:24:43.919><c> know</c><00:24:44.080><c> we'll</c><00:24:44.240><c> talk</c><00:24:44.400><c> about</c><00:24:44.640><c> it</c><00:24:44.799><c> at</c><00:24:44.880><c> the</c>

00:24:44.950 --> 00:24:44.960 align:start position:0%
and you know we'll talk about it at the
 

00:24:44.960 --> 00:24:47.830 align:start position:0%
and you know we'll talk about it at the
end<00:24:45.120><c> of</c><00:24:45.200><c> the</c><00:24:45.279><c> semester</c><00:24:45.760><c> we'll</c><00:24:45.919><c> to</c><00:24:46.159><c> study</c><00:24:46.480><c> some</c>

00:24:47.830 --> 00:24:47.840 align:start position:0%
end of the semester we'll to study some
 

00:24:47.840 --> 00:24:50.230 align:start position:0%
end of the semester we'll to study some
lock-free<00:24:48.400><c> styles</c><00:24:48.880><c> of</c><00:24:49.039><c> the</c><00:24:49.279><c> programming</c><00:24:50.000><c> that</c>

00:24:50.230 --> 00:24:50.240 align:start position:0%
lock-free styles of the programming that
 

00:24:50.240 --> 00:24:51.590 align:start position:0%
lock-free styles of the programming that
particularly<00:24:50.799><c> are</c>

00:24:51.590 --> 00:24:51.600 align:start position:0%
particularly are
 

00:24:51.600 --> 00:24:54.630 align:start position:0%
particularly are
common<00:24:52.000><c> in</c><00:24:52.720><c> operating</c><00:24:53.120><c> system</c><00:24:53.440><c> kernels</c><00:24:54.480><c> but</c>

00:24:54.630 --> 00:24:54.640 align:start position:0%
common in operating system kernels but
 

00:24:54.640 --> 00:24:56.230 align:start position:0%
common in operating system kernels but
basically<00:24:55.039><c> for</c><00:24:55.200><c> this</c><00:24:55.360><c> lecture</c>

00:24:56.230 --> 00:24:56.240 align:start position:0%
basically for this lecture
 

00:24:56.240 --> 00:24:58.310 align:start position:0%
basically for this lecture
and<00:24:56.480><c> for</c><00:24:56.720><c> most</c><00:24:57.039><c> of</c><00:24:57.120><c> the</c><00:24:57.279><c> rest</c><00:24:57.520><c> of</c><00:24:57.520><c> the</c><00:24:57.600><c> semester</c>

00:24:58.310 --> 00:24:58.320 align:start position:0%
and for most of the rest of the semester
 

00:24:58.320 --> 00:24:59.669 align:start position:0%
and for most of the rest of the semester
we're<00:24:58.559><c> going</c><00:24:58.640><c> to</c><00:24:58.799><c> be</c><00:24:58.960><c> thinking</c><00:24:59.200><c> about</c><00:24:59.520><c> the</c>

00:24:59.669 --> 00:24:59.679 align:start position:0%
we're going to be thinking about the
 

00:24:59.679 --> 00:25:00.710 align:start position:0%
we're going to be thinking about the
case<00:25:00.080><c> where</c>

00:25:00.710 --> 00:25:00.720 align:start position:0%
case where
 

00:25:00.720 --> 00:25:03.990 align:start position:0%
case where
uh<00:25:01.039><c> using</c><00:25:01.440><c> locks</c><00:25:01.919><c> you</c><00:25:02.080><c> know</c><00:25:02.240><c> to</c><00:25:02.960><c> uh</c>

00:25:03.990 --> 00:25:04.000 align:start position:0%
uh using locks you know to uh
 

00:25:04.000 --> 00:25:07.430 align:start position:0%
uh using locks you know to uh
control<00:25:04.720><c> uh</c><00:25:05.039><c> sharing</c><00:25:06.400><c> um</c><00:25:06.720><c> and</c><00:25:06.960><c> that's</c><00:25:07.279><c> hard</c>

00:25:07.430 --> 00:25:07.440 align:start position:0%
control uh sharing um and that's hard
 

00:25:07.440 --> 00:25:07.830 align:start position:0%
control uh sharing um and that's hard
enough

00:25:07.830 --> 00:25:07.840 align:start position:0%
enough
 

00:25:07.840 --> 00:25:09.909 align:start position:0%
enough
you<00:25:07.919><c> know</c><00:25:08.720><c> just</c><00:25:08.880><c> using</c><00:25:09.120><c> locks</c><00:25:09.440><c> it's</c><00:25:09.520><c> not</c><00:25:09.600><c> that</c>

00:25:09.909 --> 00:25:09.919 align:start position:0%
you know just using locks it's not that
 

00:25:09.919 --> 00:25:12.470 align:start position:0%
you know just using locks it's not that
straightforward<00:25:10.480><c> either</c>

00:25:12.470 --> 00:25:12.480 align:start position:0%
straightforward either
 

00:25:12.480 --> 00:25:14.710 align:start position:0%
straightforward either
um<00:25:13.120><c> so</c><00:25:13.279><c> it's</c><00:25:13.440><c> in</c><00:25:13.600><c> one</c><00:25:13.840><c> hand</c><00:25:14.080><c> a</c><00:25:14.080><c> little</c><00:25:14.240><c> bit</c><00:25:14.559><c> uh</c>

00:25:14.710 --> 00:25:14.720 align:start position:0%
um so it's in one hand a little bit uh
 

00:25:14.720 --> 00:25:15.750 align:start position:0%
um so it's in one hand a little bit uh
too<00:25:14.960><c> strict</c>

00:25:15.750 --> 00:25:15.760 align:start position:0%
too strict
 

00:25:15.760 --> 00:25:17.510 align:start position:0%
too strict
uh<00:25:16.240><c> because</c><00:25:16.480><c> it's</c><00:25:16.559><c> not</c><00:25:16.799><c> always</c><00:25:17.039><c> the</c><00:25:17.200><c> case</c><00:25:17.440><c> that</c>

00:25:17.510 --> 00:25:17.520 align:start position:0%
uh because it's not always the case that
 

00:25:17.520 --> 00:25:20.230 align:start position:0%
uh because it's not always the case that
you<00:25:17.760><c> uh</c><00:25:17.919><c> needed</c><00:25:18.400><c> also</c><00:25:18.559><c> some</c><00:25:18.799><c> cases</c><00:25:19.120><c> to</c><00:25:19.360><c> lose</c>

00:25:20.230 --> 00:25:20.240 align:start position:0%
you uh needed also some cases to lose
 

00:25:20.240 --> 00:25:23.510 align:start position:0%
you uh needed also some cases to lose
uh<00:25:21.440><c> you</c><00:25:21.600><c> might</c><00:25:21.840><c> just</c>

00:25:23.510 --> 00:25:23.520 align:start position:0%
uh you might just
 

00:25:23.520 --> 00:25:26.870 align:start position:0%
uh you might just
um<00:25:26.080><c> you</c><00:25:26.240><c> might</c><00:25:26.400><c> even</c>

00:25:26.870 --> 00:25:26.880 align:start position:0%
um you might even
 

00:25:26.880 --> 00:25:28.390 align:start position:0%
um you might even
lose<00:25:27.440><c> you</c><00:25:27.520><c> want</c><00:25:27.679><c> to</c><00:25:27.760><c> actually</c><00:25:27.919><c> maybe</c><00:25:28.159><c> want</c><00:25:28.320><c> to</c>

00:25:28.390 --> 00:25:28.400 align:start position:0%
lose you want to actually maybe want to
 

00:25:28.400 --> 00:25:30.470 align:start position:0%
lose you want to actually maybe want to
use<00:25:28.640><c> locks</c><00:25:29.039><c> you</c><00:25:29.120><c> know</c><00:25:29.279><c> to</c><00:25:29.520><c> enforce</c><00:25:29.840><c> some</c><00:25:30.080><c> other</c>

00:25:30.470 --> 00:25:30.480 align:start position:0%
use locks you know to enforce some other
 

00:25:30.480 --> 00:25:33.430 align:start position:0%
use locks you know to enforce some other
uh<00:25:31.039><c> properties</c><00:25:31.520><c> like</c><00:25:31.679><c> if</c><00:25:31.840><c> you</c><00:25:31.919><c> look</c><00:25:32.080><c> at</c><00:25:32.159><c> printf</c>

00:25:33.430 --> 00:25:33.440 align:start position:0%
uh properties like if you look at printf
 

00:25:33.440 --> 00:25:35.669 align:start position:0%
uh properties like if you look at printf
uh

00:25:35.669 --> 00:25:35.679 align:start position:0%
uh
 

00:25:35.679 --> 00:25:38.710 align:start position:0%
uh
if<00:25:35.840><c> we</c><00:25:36.000><c> pass</c><00:25:36.240><c> a</c><00:25:36.400><c> stream</c><00:25:36.799><c> to</c><00:25:36.960><c> printf</c><00:25:38.159><c> uh</c><00:25:38.640><c> you</c>

00:25:38.710 --> 00:25:38.720 align:start position:0%
if we pass a stream to printf uh you
 

00:25:38.720 --> 00:25:39.190 align:start position:0%
if we pass a stream to printf uh you
know<00:25:38.880><c> the</c>

00:25:39.190 --> 00:25:39.200 align:start position:0%
know the
 

00:25:39.200 --> 00:25:41.190 align:start position:0%
know the
xv6<00:25:39.679><c> kernel</c><00:25:40.000><c> tries</c><00:25:40.240><c> to</c><00:25:40.400><c> at</c><00:25:40.480><c> least</c><00:25:40.799><c> you</c><00:25:40.880><c> know</c>

00:25:41.190 --> 00:25:41.200 align:start position:0%
xv6 kernel tries to at least you know
 

00:25:41.200 --> 00:25:42.710 align:start position:0%
xv6 kernel tries to at least you know
get<00:25:41.360><c> the</c><00:25:41.520><c> whole</c><00:25:41.919><c> string</c>

00:25:42.710 --> 00:25:42.720 align:start position:0%
get the whole string
 

00:25:42.720 --> 00:25:45.909 align:start position:0%
get the whole string
to<00:25:42.880><c> be</c><00:25:43.120><c> printed</c><00:25:43.520><c> atomically</c><00:25:45.440><c> and</c><00:25:45.679><c> you</c><00:25:45.760><c> know</c>

00:25:45.909 --> 00:25:45.919 align:start position:0%
to be printed atomically and you know
 

00:25:45.919 --> 00:25:47.029 align:start position:0%
to be printed atomically and you know
there's<00:25:46.080><c> no</c><00:25:46.240><c> shared</c><00:25:46.480><c> data</c><00:25:46.720><c> structure</c>

00:25:47.029 --> 00:25:47.039 align:start position:0%
there's no shared data structure
 

00:25:47.039 --> 00:25:48.070 align:start position:0%
there's no shared data structure
involved

00:25:48.070 --> 00:25:48.080 align:start position:0%
involved
 

00:25:48.080 --> 00:25:50.230 align:start position:0%
involved
but<00:25:48.320><c> it's</c><00:25:48.480><c> still</c><00:25:49.200><c> useful</c><00:25:49.600><c> to</c><00:25:49.760><c> actually</c><00:25:50.000><c> use</c><00:25:50.159><c> a</c>

00:25:50.230 --> 00:25:50.240 align:start position:0%
but it's still useful to actually use a
 

00:25:50.240 --> 00:25:51.590 align:start position:0%
but it's still useful to actually use a
lock<00:25:50.480><c> in</c><00:25:50.559><c> that</c><00:25:50.720><c> particular</c><00:25:51.120><c> case</c>

00:25:51.590 --> 00:25:51.600 align:start position:0%
lock in that particular case
 

00:25:51.600 --> 00:25:52.789 align:start position:0%
lock in that particular case
because<00:25:51.840><c> we</c><00:25:51.919><c> want</c><00:25:52.080><c> the</c><00:25:52.240><c> output</c><00:25:52.559><c> to</c><00:25:52.640><c> be</c>

00:25:52.789 --> 00:25:52.799 align:start position:0%
because we want the output to be
 

00:25:52.799 --> 00:25:54.789 align:start position:0%
because we want the output to be
serialized<00:25:54.480><c> so</c>

00:25:54.789 --> 00:25:54.799 align:start position:0%
serialized so
 

00:25:54.799 --> 00:25:56.630 align:start position:0%
serialized so
this<00:25:54.960><c> rule</c><00:25:55.200><c> is</c><00:25:55.279><c> not</c><00:25:55.440><c> you</c><00:25:55.600><c> know</c><00:25:55.760><c> perfect</c><00:25:56.480><c> but</c>

00:25:56.630 --> 00:25:56.640 align:start position:0%
this rule is not you know perfect but
 

00:25:56.640 --> 00:25:59.909 align:start position:0%
this rule is not you know perfect but
it's<00:25:56.720><c> a</c><00:25:56.799><c> pretty</c><00:25:57.120><c> good</c><00:25:57.279><c> guideline</c>

00:25:59.909 --> 00:25:59.919 align:start position:0%
 
 

00:25:59.919 --> 00:26:04.789 align:start position:0%
 
any<00:26:00.159><c> questions</c><00:26:00.559><c> about</c><00:26:01.120><c> this</c><00:26:01.440><c> rule</c>

00:26:04.789 --> 00:26:04.799 align:start position:0%
 
 

00:26:04.799 --> 00:26:06.789 align:start position:0%
 
um<00:26:05.039><c> i</c><00:26:05.200><c> had</c><00:26:05.360><c> a</c><00:26:05.440><c> question</c><00:26:05.840><c> not</c><00:26:06.080><c> about</c><00:26:06.240><c> this</c><00:26:06.480><c> rule</c>

00:26:06.789 --> 00:26:06.799 align:start position:0%
um i had a question not about this rule
 

00:26:06.799 --> 00:26:07.909 align:start position:0%
um i had a question not about this rule
but

00:26:07.909 --> 00:26:07.919 align:start position:0%
but
 

00:26:07.919 --> 00:26:09.990 align:start position:0%
but
isn't<00:26:08.240><c> it</c><00:26:08.320><c> possible</c><00:26:08.799><c> that</c><00:26:09.200><c> two</c><00:26:09.440><c> processes</c>

00:26:09.990 --> 00:26:10.000 align:start position:0%
isn't it possible that two processes
 

00:26:10.000 --> 00:26:11.830 align:start position:0%
isn't it possible that two processes
could<00:26:10.159><c> acquire</c><00:26:10.559><c> the</c><00:26:10.720><c> lock</c><00:26:10.960><c> at</c><00:26:11.120><c> the</c><00:26:11.200><c> same</c><00:26:11.520><c> time</c>

00:26:11.830 --> 00:26:11.840 align:start position:0%
could acquire the lock at the same time
 

00:26:11.840 --> 00:26:13.350 align:start position:0%
could acquire the lock at the same time
and<00:26:12.080><c> so</c>

00:26:13.350 --> 00:26:13.360 align:start position:0%
and so
 

00:26:13.360 --> 00:26:16.390 align:start position:0%
and so
would<00:26:13.520><c> be</c><00:26:13.760><c> able</c><00:26:14.000><c> to</c><00:26:14.400><c> modify</c><00:26:14.880><c> the</c><00:26:15.039><c> structure</c>

00:26:16.390 --> 00:26:16.400 align:start position:0%
would be able to modify the structure
 

00:26:16.400 --> 00:26:18.310 align:start position:0%
would be able to modify the structure
yeah<00:26:16.559><c> no</c><00:26:16.799><c> so</c><00:26:17.039><c> so</c><00:26:17.440><c> part</c><00:26:17.679><c> of</c><00:26:17.760><c> the</c><00:26:17.919><c> sort</c><00:26:18.159><c> of</c>

00:26:18.310 --> 00:26:18.320 align:start position:0%
yeah no so so part of the sort of
 

00:26:18.320 --> 00:26:20.149 align:start position:0%
yeah no so so part of the sort of
contract<00:26:18.880><c> of</c><00:26:19.039><c> the</c><00:26:19.120><c> lock</c><00:26:19.360><c> abstraction</c><00:26:19.840><c> is</c><00:26:20.080><c> is</c>

00:26:20.149 --> 00:26:20.159 align:start position:0%
contract of the lock abstraction is is
 

00:26:20.159 --> 00:26:21.830 align:start position:0%
contract of the lock abstraction is is
that<00:26:20.320><c> it's</c><00:26:20.559><c> impossible</c><00:26:21.200><c> for</c><00:26:21.360><c> two</c>

00:26:21.830 --> 00:26:21.840 align:start position:0%
that it's impossible for two
 

00:26:21.840 --> 00:26:23.750 align:start position:0%
that it's impossible for two
uh<00:26:22.240><c> processes</c><00:26:22.720><c> to</c><00:26:22.880><c> acquire</c><00:26:23.360><c> a</c><00:26:23.440><c> lock</c><00:26:23.600><c> at</c><00:26:23.679><c> the</c>

00:26:23.750 --> 00:26:23.760 align:start position:0%
uh processes to acquire a lock at the
 

00:26:23.760 --> 00:26:25.269 align:start position:0%
uh processes to acquire a lock at the
same<00:26:24.080><c> time</c>

00:26:25.269 --> 00:26:25.279 align:start position:0%
same time
 

00:26:25.279 --> 00:26:28.870 align:start position:0%
same time
uh<00:26:25.919><c> if</c><00:26:26.400><c> uh</c><00:26:26.720><c> the</c><00:26:27.200><c> the</c><00:26:27.760><c> rule</c><00:26:28.159><c> is</c><00:26:28.320><c> that</c><00:26:28.480><c> there's</c>

00:26:28.870 --> 00:26:28.880 align:start position:0%
uh if uh the the rule is that there's
 

00:26:28.880 --> 00:26:31.110 align:start position:0%
uh if uh the the rule is that there's
ever<00:26:29.200><c> there's</c><00:26:29.520><c> no</c><00:26:30.159><c> there's</c><00:26:30.400><c> never</c><00:26:30.640><c> a</c><00:26:30.720><c> case</c>

00:26:31.110 --> 00:26:31.120 align:start position:0%
ever there's no there's never a case
 

00:26:31.120 --> 00:26:32.070 align:start position:0%
ever there's no there's never a case
where<00:26:31.520><c> two</c>

00:26:32.070 --> 00:26:32.080 align:start position:0%
where two
 

00:26:32.080 --> 00:26:34.230 align:start position:0%
where two
processes<00:26:32.559><c> actually</c><00:26:32.799><c> acquire</c><00:26:33.120><c> the</c><00:26:33.279><c> lock</c><00:26:33.840><c> uh</c>

00:26:34.230 --> 00:26:34.240 align:start position:0%
processes actually acquire the lock uh
 

00:26:34.240 --> 00:26:35.909 align:start position:0%
processes actually acquire the lock uh
can<00:26:34.480><c> hold</c><00:26:34.640><c> the</c><00:26:34.720><c> lock</c><00:26:34.960><c> at</c><00:26:35.039><c> the</c><00:26:35.120><c> same</c><00:26:35.360><c> time</c>

00:26:35.909 --> 00:26:35.919 align:start position:0%
can hold the lock at the same time
 

00:26:35.919 --> 00:26:37.350 align:start position:0%
can hold the lock at the same time
we'll<00:26:36.080><c> see</c><00:26:36.240><c> in</c><00:26:36.320><c> a</c><00:26:36.400><c> second</c><00:26:36.640><c> how</c><00:26:36.799><c> to</c><00:26:36.960><c> implement</c>

00:26:37.350 --> 00:26:37.360 align:start position:0%
we'll see in a second how to implement
 

00:26:37.360 --> 00:26:39.590 align:start position:0%
we'll see in a second how to implement
that<00:26:37.919><c> but</c><00:26:38.080><c> the</c><00:26:38.240><c> api</c><00:26:38.720><c> or</c><00:26:38.799><c> the</c><00:26:38.960><c> specification</c>

00:26:39.590 --> 00:26:39.600 align:start position:0%
that but the api or the specification
 

00:26:39.600 --> 00:26:40.310 align:start position:0%
that but the api or the specification
for<00:26:39.760><c> require</c>

00:26:40.310 --> 00:26:40.320 align:start position:0%
for require
 

00:26:40.320 --> 00:26:42.310 align:start position:0%
for require
is<00:26:40.640><c> there's</c><00:26:40.880><c> only</c><00:26:41.120><c> one</c><00:26:41.360><c> lock</c><00:26:41.600><c> holder</c><00:26:41.919><c> at</c><00:26:42.080><c> any</c>

00:26:42.310 --> 00:26:42.320 align:start position:0%
is there's only one lock holder at any
 

00:26:42.320 --> 00:26:45.029 align:start position:0%
is there's only one lock holder at any
given<00:26:42.559><c> point</c><00:26:42.799><c> in</c><00:26:42.880><c> time</c><00:26:43.279><c> or</c><00:26:43.520><c> zero</c>

00:26:45.029 --> 00:26:45.039 align:start position:0%
given point in time or zero
 

00:26:45.039 --> 00:26:49.269 align:start position:0%
given point in time or zero
nice

00:26:49.269 --> 00:26:49.279 align:start position:0%
 
 

00:26:49.279 --> 00:26:52.549 align:start position:0%
 
um<00:26:50.000><c> okay</c><00:26:50.559><c> so</c><00:26:51.360><c> uh</c><00:26:51.760><c> you</c><00:26:51.919><c> know</c><00:26:52.000><c> if</c><00:26:52.159><c> you</c><00:26:52.240><c> see</c>

00:26:52.549 --> 00:26:52.559 align:start position:0%
um okay so uh you know if you see
 

00:26:52.559 --> 00:26:54.789 align:start position:0%
um okay so uh you know if you see
the<00:26:52.960><c> programming</c><00:26:53.440><c> block</c><00:26:53.919><c> is</c><00:26:54.080><c> here</c><00:26:54.320><c> slightly</c>

00:26:54.789 --> 00:26:54.799 align:start position:0%
the programming block is here slightly
 

00:26:54.799 --> 00:26:56.230 align:start position:0%
the programming block is here slightly
uh<00:26:55.520><c> it</c><00:26:55.600><c> could</c><00:26:55.760><c> be</c>

00:26:56.230 --> 00:26:56.240 align:start position:0%
uh it could be
 

00:26:56.240 --> 00:26:57.430 align:start position:0%
uh it could be
problematic<00:26:56.799><c> because</c><00:26:56.960><c> of</c><00:26:57.039><c> these</c><00:26:57.200><c> race</c>

00:26:57.430 --> 00:26:57.440 align:start position:0%
problematic because of these race
 

00:26:57.440 --> 00:27:00.070 align:start position:0%
problematic because of these race
conditions<00:26:58.559><c> um</c>

00:27:00.070 --> 00:27:00.080 align:start position:0%
conditions um
 

00:27:00.080 --> 00:27:01.990 align:start position:0%
conditions um
yeah<00:27:00.320><c> now</c><00:27:00.559><c> of</c><00:27:00.640><c> course</c><00:27:00.799><c> the</c><00:27:01.200><c> particular</c><00:27:01.840><c> race</c>

00:27:01.990 --> 00:27:02.000 align:start position:0%
yeah now of course the particular race
 

00:27:02.000 --> 00:27:03.190 align:start position:0%
yeah now of course the particular race
condition<00:27:02.320><c> that</c><00:27:02.400><c> we</c><00:27:02.559><c> looked</c><00:27:02.799><c> at</c>

00:27:03.190 --> 00:27:03.200 align:start position:0%
condition that we looked at
 

00:27:03.200 --> 00:27:07.190 align:start position:0%
condition that we looked at
uh<00:27:03.919><c> in</c><00:27:04.720><c> k3</c><00:27:05.520><c> or</c><00:27:05.760><c> that</c><00:27:05.919><c> we</c><00:27:06.080><c> created</c><00:27:06.480><c> in</c><00:27:06.559><c> crayfi</c>

00:27:07.190 --> 00:27:07.200 align:start position:0%
uh in k3 or that we created in crayfi
 

00:27:07.200 --> 00:27:08.870 align:start position:0%
uh in k3 or that we created in crayfi
which<00:27:07.440><c> are</c><00:27:07.520><c> like</c><00:27:07.679><c> easily</c><00:27:08.080><c> spottable</c><00:27:08.640><c> in</c><00:27:08.720><c> some</c>

00:27:08.870 --> 00:27:08.880 align:start position:0%
which are like easily spottable in some
 

00:27:08.880 --> 00:27:10.470 align:start position:0%
which are like easily spottable in some
ways<00:27:09.200><c> and</c><00:27:09.360><c> the</c><00:27:09.520><c> fact</c><00:27:09.760><c> you</c><00:27:09.840><c> know</c><00:27:10.000><c> if</c><00:27:10.159><c> you</c><00:27:10.240><c> use</c><00:27:10.400><c> a</c>

00:27:10.470 --> 00:27:10.480 align:start position:0%
ways and the fact you know if you use a
 

00:27:10.480 --> 00:27:11.909 align:start position:0%
ways and the fact you know if you use a
race<00:27:10.720><c> detection</c><00:27:11.279><c> tool</c>

00:27:11.909 --> 00:27:11.919 align:start position:0%
race detection tool
 

00:27:11.919 --> 00:27:14.710 align:start position:0%
race detection tool
uh<00:27:12.159><c> it</c><00:27:12.240><c> would</c><00:27:12.400><c> immediately</c><00:27:12.880><c> find</c><00:27:13.120><c> it</c><00:27:13.760><c> um</c><00:27:14.480><c> but</c>

00:27:14.710 --> 00:27:14.720 align:start position:0%
uh it would immediately find it um but
 

00:27:14.720 --> 00:27:15.909 align:start position:0%
uh it would immediately find it um but
you<00:27:14.880><c> know</c><00:27:15.039><c> they're</c><00:27:15.200><c> more</c><00:27:15.360><c> tricky</c>

00:27:15.909 --> 00:27:15.919 align:start position:0%
you know they're more tricky
 

00:27:15.919 --> 00:27:19.269 align:start position:0%
you know they're more tricky
cases<00:27:17.600><c> and</c><00:27:17.679><c> so</c><00:27:17.919><c> you</c><00:27:18.000><c> may</c><00:27:18.240><c> want</c><00:27:18.320><c> to</c><00:27:18.399><c> wonder</c><00:27:18.880><c> like</c>

00:27:19.269 --> 00:27:19.279 align:start position:0%
cases and so you may want to wonder like
 

00:27:19.279 --> 00:27:20.789 align:start position:0%
cases and so you may want to wonder like
why<00:27:19.440><c> couldn't</c><00:27:19.760><c> you</c><00:27:19.840><c> like</c><00:27:20.080><c> make</c><00:27:20.559><c> you</c><00:27:20.640><c> know</c>

00:27:20.789 --> 00:27:20.799 align:start position:0%
why couldn't you like make you know
 

00:27:20.799 --> 00:27:22.310 align:start position:0%
why couldn't you like make you know
could<00:27:21.039><c> you</c><00:27:21.200><c> make</c><00:27:21.360><c> locks</c>

00:27:22.310 --> 00:27:22.320 align:start position:0%
could you make locks
 

00:27:22.320 --> 00:27:31.110 align:start position:0%
could you make locks
or<00:27:22.720><c> could</c><00:27:22.880><c> we</c><00:27:22.960><c> make</c><00:27:23.200><c> locking</c><00:27:23.600><c> automatic</c>

00:27:31.110 --> 00:27:31.120 align:start position:0%
 
 

00:27:31.120 --> 00:27:32.630 align:start position:0%
 
so<00:27:31.279><c> like</c><00:27:31.440><c> if</c><00:27:31.600><c> you</c><00:27:31.679><c> follow</c><00:27:32.000><c> this</c><00:27:32.240><c> sort</c><00:27:32.399><c> of</c>

00:27:32.630 --> 00:27:32.640 align:start position:0%
so like if you follow this sort of
 

00:27:32.640 --> 00:27:34.389 align:start position:0%
so like if you follow this sort of
simple<00:27:32.960><c> rule</c><00:27:33.200><c> that</c><00:27:33.440><c> i</c><00:27:33.520><c> just</c><00:27:33.679><c> stated</c><00:27:34.080><c> you</c><00:27:34.159><c> know</c>

00:27:34.389 --> 00:27:34.399 align:start position:0%
simple rule that i just stated you know
 

00:27:34.399 --> 00:27:35.909 align:start position:0%
simple rule that i just stated you know
then<00:27:34.640><c> if</c><00:27:34.799><c> ever</c><00:27:35.039><c> we</c><00:27:35.200><c> see</c><00:27:35.279><c> a</c><00:27:35.360><c> shared</c><00:27:35.600><c> data</c>

00:27:35.909 --> 00:27:35.919 align:start position:0%
then if ever we see a shared data
 

00:27:35.919 --> 00:27:36.789 align:start position:0%
then if ever we see a shared data
structure

00:27:36.789 --> 00:27:36.799 align:start position:0%
structure
 

00:27:36.799 --> 00:27:38.630 align:start position:0%
structure
then<00:27:37.360><c> you</c><00:27:37.520><c> know</c><00:27:37.679><c> operations</c><00:27:38.159><c> and</c><00:27:38.240><c> that</c><00:27:38.399><c> shared</c>

00:27:38.630 --> 00:27:38.640 align:start position:0%
then you know operations and that shared
 

00:27:38.640 --> 00:27:39.990 align:start position:0%
then you know operations and that shared
data<00:27:38.880><c> structure</c><00:27:39.200><c> basically</c><00:27:39.520><c> should</c><00:27:39.600><c> require</c>

00:27:39.990 --> 00:27:40.000 align:start position:0%
data structure basically should require
 

00:27:40.000 --> 00:27:41.190 align:start position:0%
data structure basically should require
a<00:27:40.080><c> walk</c><00:27:40.399><c> you</c><00:27:40.480><c> know</c><00:27:40.640><c> we</c><00:27:40.720><c> should</c>

00:27:41.190 --> 00:27:41.200 align:start position:0%
a walk you know we should
 

00:27:41.200 --> 00:27:42.710 align:start position:0%
a walk you know we should
we<00:27:41.279><c> should</c><00:27:41.440><c> associate</c><00:27:41.840><c> a</c><00:27:41.919><c> lot</c><00:27:42.159><c> with</c><00:27:42.320><c> the</c><00:27:42.399><c> data</c>

00:27:42.710 --> 00:27:42.720 align:start position:0%
we should associate a lot with the data
 

00:27:42.720 --> 00:27:44.230 align:start position:0%
we should associate a lot with the data
structure<00:27:43.200><c> and</c><00:27:43.279><c> then</c><00:27:43.520><c> every</c><00:27:43.760><c> operation</c>

00:27:44.230 --> 00:27:44.240 align:start position:0%
structure and then every operation
 

00:27:44.240 --> 00:27:49.110 align:start position:0%
structure and then every operation
actually<00:27:44.640><c> uh</c><00:27:46.840><c> uh</c><00:27:47.919><c> uh</c><00:27:48.159><c> that</c><00:27:48.399><c> is</c><00:27:48.640><c> uh</c>

00:27:49.110 --> 00:27:49.120 align:start position:0%
actually uh uh uh that is uh
 

00:27:49.120 --> 00:27:52.389 align:start position:0%
actually uh uh uh that is uh
that's<00:27:49.440><c> performed</c><00:27:49.919><c> on</c><00:27:50.000><c> that</c><00:27:50.320><c> uh</c><00:27:51.279><c> uh</c>

00:27:52.389 --> 00:27:52.399 align:start position:0%
that's performed on that uh uh
 

00:27:52.399 --> 00:27:53.590 align:start position:0%
that's performed on that uh uh
on<00:27:52.559><c> that</c><00:27:52.720><c> data</c><00:27:53.039><c> structure</c><00:27:53.279><c> basically</c>

00:27:53.590 --> 00:27:53.600 align:start position:0%
on that data structure basically
 

00:27:53.600 --> 00:27:55.669 align:start position:0%
on that data structure basically
required<00:27:53.919><c> to</c><00:27:54.000><c> release</c><00:27:54.399><c> the</c><00:27:54.480><c> lock</c><00:27:55.200><c> so</c>

00:27:55.669 --> 00:27:55.679 align:start position:0%
required to release the lock so
 

00:27:55.679 --> 00:27:57.990 align:start position:0%
required to release the lock so
one<00:27:55.919><c> way</c><00:27:56.080><c> to</c><00:27:56.159><c> think</c><00:27:56.320><c> about</c><00:27:56.559><c> it</c><00:27:56.640><c> maybe</c><00:27:57.200><c> in</c><00:27:57.440><c> xv6</c>

00:27:57.990 --> 00:27:58.000 align:start position:0%
one way to think about it maybe in xv6
 

00:27:58.000 --> 00:28:00.549 align:start position:0%
one way to think about it maybe in xv6
terms<00:27:58.320><c> like</c><00:27:58.559><c> every</c><00:27:58.799><c> struct</c>

00:28:00.549 --> 00:28:00.559 align:start position:0%
terms like every struct
 

00:28:00.559 --> 00:28:04.470 align:start position:0%
terms like every struct
you<00:28:00.720><c> know</c><00:28:01.120><c> has</c><00:28:01.679><c> a</c><00:28:01.840><c> lock</c>

00:28:04.470 --> 00:28:04.480 align:start position:0%
 
 

00:28:04.480 --> 00:28:07.269 align:start position:0%
 
and<00:28:05.200><c> uh</c><00:28:06.000><c> and</c><00:28:06.240><c> that</c><00:28:06.399><c> lock</c><00:28:06.640><c> is</c><00:28:06.799><c> automatically</c>

00:28:07.269 --> 00:28:07.279 align:start position:0%
and uh and that lock is automatically
 

00:28:07.279 --> 00:28:09.029 align:start position:0%
and uh and that lock is automatically
required<00:28:07.679><c> when</c><00:28:08.000><c> we</c><00:28:08.080><c> do</c><00:28:08.240><c> anything</c><00:28:08.559><c> related</c><00:28:08.880><c> to</c>

00:28:09.029 --> 00:28:09.039 align:start position:0%
required when we do anything related to
 

00:28:09.039 --> 00:28:09.669 align:start position:0%
required when we do anything related to
that<00:28:09.200><c> struct</c>

00:28:09.669 --> 00:28:09.679 align:start position:0%
that struct
 

00:28:09.679 --> 00:28:12.549 align:start position:0%
that struct
and<00:28:10.000><c> this</c><00:28:10.240><c> turns</c><00:28:10.480><c> out</c><00:28:10.640><c> to</c><00:28:10.799><c> be</c><00:28:11.679><c> too</c><00:28:11.840><c> rigid</c><00:28:12.399><c> and</c>

00:28:12.549 --> 00:28:12.559 align:start position:0%
and this turns out to be too rigid and
 

00:28:12.559 --> 00:28:13.669 align:start position:0%
and this turns out to be too rigid and
this<00:28:12.720><c> is</c><00:28:12.880><c> why</c><00:28:13.200><c> you</c><00:28:13.360><c> know</c>

00:28:13.669 --> 00:28:13.679 align:start position:0%
this is why you know
 

00:28:13.679 --> 00:28:16.789 align:start position:0%
this is why you know
walking<00:28:14.080><c> can</c><00:28:14.320><c> not</c><00:28:14.480><c> really</c><00:28:14.799><c> be</c><00:28:15.279><c> uh</c><00:28:15.520><c> automatic</c>

00:28:16.789 --> 00:28:16.799 align:start position:0%
walking can not really be uh automatic
 

00:28:16.799 --> 00:28:19.350 align:start position:0%
walking can not really be uh automatic
so<00:28:17.840><c> so</c><00:28:18.000><c> we've</c><00:28:18.080><c> been</c><00:28:18.320><c> operating</c><00:28:18.640><c> systems</c><00:28:19.200><c> an</c>

00:28:19.350 --> 00:28:19.360 align:start position:0%
so so we've been operating systems an
 

00:28:19.360 --> 00:28:20.870 align:start position:0%
so so we've been operating systems an
example<00:28:19.679><c> from</c><00:28:19.840><c> one</c><00:28:20.000><c> operating</c><00:28:20.320><c> system</c><00:28:20.640><c> is</c><00:28:20.720><c> the</c>

00:28:20.870 --> 00:28:20.880 align:start position:0%
example from one operating system is the
 

00:28:20.880 --> 00:28:21.590 align:start position:0%
example from one operating system is the
following

00:28:21.590 --> 00:28:21.600 align:start position:0%
following
 

00:28:21.600 --> 00:28:25.430 align:start position:0%
following
let's<00:28:21.760><c> say</c><00:28:22.000><c> we</c><00:28:22.240><c> have</c><00:28:22.720><c> a</c><00:28:22.880><c> call</c><00:28:23.120><c> like</c><00:28:23.440><c> rename</c>

00:28:25.430 --> 00:28:25.440 align:start position:0%
let's say we have a call like rename
 

00:28:25.440 --> 00:28:27.590 align:start position:0%
let's say we have a call like rename
that<00:28:25.679><c> moves</c><00:28:26.080><c> a</c><00:28:26.159><c> file</c><00:28:26.480><c> name</c><00:28:27.279><c> from</c><00:28:27.440><c> one</c>

00:28:27.590 --> 00:28:27.600 align:start position:0%
that moves a file name from one
 

00:28:27.600 --> 00:28:29.830 align:start position:0%
that moves a file name from one
directory<00:28:28.320><c> to</c><00:28:28.480><c> another</c><00:28:28.720><c> directory</c><00:28:29.360><c> so</c><00:28:29.600><c> let's</c>

00:28:29.830 --> 00:28:29.840 align:start position:0%
directory to another directory so let's
 

00:28:29.840 --> 00:28:32.149 align:start position:0%
directory to another directory so let's
say<00:28:30.080><c> we</c><00:28:30.240><c> have</c><00:28:30.480><c> d1x</c>

00:28:32.149 --> 00:28:32.159 align:start position:0%
say we have d1x
 

00:28:32.159 --> 00:28:36.230 align:start position:0%
say we have d1x
and<00:28:32.480><c> we</c><00:28:32.799><c> rename</c><00:28:33.279><c> it</c><00:28:33.600><c> to</c><00:28:34.240><c> you</c><00:28:34.320><c> know</c><00:28:34.559><c> d2</c>

00:28:36.230 --> 00:28:36.240 align:start position:0%
and we rename it to you know d2
 

00:28:36.240 --> 00:28:39.110 align:start position:0%
and we rename it to you know d2
y<00:28:37.760><c> right</c><00:28:37.919><c> so</c><00:28:38.159><c> we</c><00:28:38.240><c> have</c><00:28:38.399><c> a</c><00:28:38.480><c> file</c><00:28:38.720><c> name</c><00:28:38.960><c> in</c><00:28:39.039><c> the</c>

00:28:39.110 --> 00:28:39.120 align:start position:0%
y right so we have a file name in the
 

00:28:39.120 --> 00:28:39.750 align:start position:0%
y right so we have a file name in the
directory

00:28:39.750 --> 00:28:39.760 align:start position:0%
directory
 

00:28:39.760 --> 00:28:43.590 align:start position:0%
directory
uh<00:28:40.320><c> d1</c><00:28:40.880><c> x</c><00:28:41.200><c> and</c><00:28:41.520><c> you</c><00:28:41.679><c> know</c><00:28:41.840><c> we</c><00:28:42.000><c> rename</c><00:28:42.480><c> it</c><00:28:42.559><c> to</c>

00:28:43.590 --> 00:28:43.600 align:start position:0%
uh d1 x and you know we rename it to
 

00:28:43.600 --> 00:28:46.870 align:start position:0%
uh d1 x and you know we rename it to
d2<00:28:44.080><c> slash</c><00:28:44.480><c> y</c><00:28:45.360><c> so</c><00:28:45.520><c> the</c><00:28:45.679><c> way</c><00:28:46.159><c> uh</c>

00:28:46.870 --> 00:28:46.880 align:start position:0%
d2 slash y so the way uh
 

00:28:46.880 --> 00:28:49.669 align:start position:0%
d2 slash y so the way uh
you<00:28:47.039><c> presumably</c><00:28:48.559><c> if</c><00:28:48.720><c> we</c><00:28:48.880><c> follow</c><00:28:49.120><c> the</c><00:28:49.279><c> rigid</c>

00:28:49.669 --> 00:28:49.679 align:start position:0%
you presumably if we follow the rigid
 

00:28:49.679 --> 00:28:50.710 align:start position:0%
you presumably if we follow the rigid
rule<00:28:49.919><c> or</c><00:28:50.080><c> like</c><00:28:50.240><c> this</c>

00:28:50.710 --> 00:28:50.720 align:start position:0%
rule or like this
 

00:28:50.720 --> 00:28:52.549 align:start position:0%
rule or like this
rule<00:28:50.960><c> of</c><00:28:51.039><c> automatic</c><00:28:51.520><c> locking</c><00:28:51.840><c> now</c><00:28:52.000><c> what</c><00:28:52.320><c> would</c>

00:28:52.549 --> 00:28:52.559 align:start position:0%
rule of automatic locking now what would
 

00:28:52.559 --> 00:28:54.389 align:start position:0%
rule of automatic locking now what would
happen<00:28:52.880><c> is</c><00:28:53.679><c> uh</c>

00:28:54.389 --> 00:28:54.399 align:start position:0%
happen is uh
 

00:28:54.399 --> 00:28:56.070 align:start position:0%
happen is uh
you<00:28:54.480><c> know</c><00:28:54.640><c> that</c><00:28:55.039><c> rule</c><00:28:55.279><c> up</c><00:28:55.360><c> soon</c><00:28:55.600><c> we</c><00:28:55.760><c> have</c><00:28:55.840><c> two</c>

00:28:56.070 --> 00:28:56.080 align:start position:0%
you know that rule up soon we have two
 

00:28:56.080 --> 00:28:58.389 align:start position:0%
you know that rule up soon we have two
objects<00:28:56.480><c> we</c><00:28:56.559><c> have</c><00:28:56.720><c> d1</c><00:28:57.120><c> and</c><00:28:57.279><c> d2</c>

00:28:58.389 --> 00:28:58.399 align:start position:0%
objects we have d1 and d2
 

00:28:58.399 --> 00:29:00.230 align:start position:0%
objects we have d1 and d2
right<00:28:58.720><c> and</c><00:28:58.799><c> so</c><00:28:59.039><c> we</c><00:28:59.279><c> follow</c><00:28:59.600><c> the</c><00:28:59.679><c> rule</c><00:28:59.919><c> then</c>

00:29:00.230 --> 00:29:00.240 align:start position:0%
right and so we follow the rule then
 

00:29:00.240 --> 00:29:02.070 align:start position:0%
right and so we follow the rule then
basically<00:29:00.880><c> the</c><00:29:00.960><c> automatic</c><00:29:01.360><c> rule</c><00:29:01.679><c> then</c><00:29:01.919><c> you</c>

00:29:02.070 --> 00:29:02.080 align:start position:0%
basically the automatic rule then you
 

00:29:02.080 --> 00:29:05.669 align:start position:0%
basically the automatic rule then you
know<00:29:02.240><c> we</c><00:29:02.399><c> lock</c><00:29:02.640><c> d1</c>

00:29:05.669 --> 00:29:05.679 align:start position:0%
 
 

00:29:05.679 --> 00:29:09.029 align:start position:0%
 
you<00:29:05.760><c> know</c><00:29:06.000><c> erase</c><00:29:06.480><c> x</c>

00:29:09.029 --> 00:29:09.039 align:start position:0%
 
 

00:29:09.039 --> 00:29:12.870 align:start position:0%
 
and<00:29:10.840><c> release</c>

00:29:12.870 --> 00:29:12.880 align:start position:0%
and release
 

00:29:12.880 --> 00:29:17.669 align:start position:0%
and release
the<00:29:13.039><c> lock</c><00:29:13.360><c> for</c><00:29:14.080><c> uh</c><00:29:14.480><c> d1</c>

00:29:17.669 --> 00:29:17.679 align:start position:0%
 
 

00:29:17.679 --> 00:29:19.750 align:start position:0%
 
and<00:29:17.840><c> then</c><00:29:18.320><c> you</c><00:29:18.399><c> know</c><00:29:18.559><c> we</c><00:29:18.640><c> do</c><00:29:18.799><c> the</c><00:29:18.960><c> second</c><00:29:19.200><c> part</c>

00:29:19.750 --> 00:29:19.760 align:start position:0%
and then you know we do the second part
 

00:29:19.760 --> 00:29:21.269 align:start position:0%
and then you know we do the second part
update<00:29:20.320><c> you</c><00:29:20.480><c> know</c><00:29:20.640><c> d2</c>

00:29:21.269 --> 00:29:21.279 align:start position:0%
update you know d2
 

00:29:21.279 --> 00:29:25.190 align:start position:0%
update you know d2
lock<00:29:21.679><c> d2</c><00:29:23.440><c> at</c>

00:29:25.190 --> 00:29:25.200 align:start position:0%
lock d2 at
 

00:29:25.200 --> 00:29:29.830 align:start position:0%
lock d2 at
yeah<00:29:25.760><c> y</c><00:29:27.120><c> and</c><00:29:27.600><c> release</c>

00:29:29.830 --> 00:29:29.840 align:start position:0%
yeah y and release
 

00:29:29.840 --> 00:29:33.350 align:start position:0%
yeah y and release
d2<00:29:32.080><c> um</c>

00:29:33.350 --> 00:29:33.360 align:start position:0%
d2 um
 

00:29:33.360 --> 00:29:34.789 align:start position:0%
d2 um
and<00:29:33.440><c> then</c><00:29:33.600><c> we're</c><00:29:33.679><c> done</c><00:29:33.919><c> so</c><00:29:34.080><c> this</c><00:29:34.240><c> would</c><00:29:34.399><c> be</c><00:29:34.559><c> the</c>

00:29:34.789 --> 00:29:34.799 align:start position:0%
and then we're done so this would be the
 

00:29:34.799 --> 00:29:37.029 align:start position:0%
and then we're done so this would be the
sort<00:29:35.039><c> of</c><00:29:35.440><c> hypothetical</c><00:29:36.320><c> scheme</c>

00:29:37.029 --> 00:29:37.039 align:start position:0%
sort of hypothetical scheme
 

00:29:37.039 --> 00:29:40.389 align:start position:0%
sort of hypothetical scheme
uh<00:29:38.720><c> sort</c><00:29:38.880><c> of</c><00:29:39.600><c> you</c><00:29:39.760><c> imagine</c>

00:29:40.389 --> 00:29:40.399 align:start position:0%
uh sort of you imagine
 

00:29:40.399 --> 00:29:42.310 align:start position:0%
uh sort of you imagine
uh<00:29:40.799><c> would</c><00:29:41.039><c> happen</c><00:29:41.360><c> if</c><00:29:41.520><c> we</c><00:29:41.600><c> did</c><00:29:41.919><c> automatic</c>

00:29:42.310 --> 00:29:42.320 align:start position:0%
uh would happen if we did automatic
 

00:29:42.320 --> 00:29:44.149 align:start position:0%
uh would happen if we did automatic
walking<00:29:43.279><c> and</c>

00:29:44.149 --> 00:29:44.159 align:start position:0%
walking and
 

00:29:44.159 --> 00:29:46.070 align:start position:0%
walking and
uh<00:29:44.799><c> and</c><00:29:44.880><c> the</c><00:29:45.039><c> point</c><00:29:45.200><c> of</c><00:29:45.360><c> this</c><00:29:45.520><c> example</c><00:29:45.840><c> is</c><00:29:45.919><c> that</c>

00:29:46.070 --> 00:29:46.080 align:start position:0%
uh and the point of this example is that
 

00:29:46.080 --> 00:29:48.230 align:start position:0%
uh and the point of this example is that
you<00:29:46.240><c> know</c><00:29:46.480><c> we</c><00:29:46.640><c> will</c><00:29:46.880><c> have</c><00:29:47.039><c> the</c><00:29:47.120><c> wrong</c><00:29:47.440><c> outcome</c>

00:29:48.230 --> 00:29:48.240 align:start position:0%
you know we will have the wrong outcome
 

00:29:48.240 --> 00:29:52.070 align:start position:0%
you know we will have the wrong outcome
and<00:29:49.039><c> why</c><00:29:49.840><c> why</c><00:29:50.000><c> is</c><00:29:50.080><c> this</c><00:29:50.320><c> a</c><00:29:50.799><c> problematic</c><00:29:51.360><c> scheme</c>

00:29:52.070 --> 00:29:52.080 align:start position:0%
and why why is this a problematic scheme
 

00:29:52.080 --> 00:30:02.950 align:start position:0%
and why why is this a problematic scheme
why<00:29:52.240><c> is</c><00:29:52.399><c> this</c><00:29:52.559><c> not</c><00:29:52.720><c> gonna</c><00:29:52.880><c> work</c>

00:30:02.950 --> 00:30:02.960 align:start position:0%
 
 

00:30:02.960 --> 00:30:04.870 align:start position:0%
 
and<00:30:03.120><c> so</c><00:30:03.279><c> think</c><00:30:03.440><c> about</c><00:30:03.760><c> like</c><00:30:04.399><c> the</c><00:30:04.640><c> thing</c><00:30:04.799><c> to</c>

00:30:04.870 --> 00:30:04.880 align:start position:0%
and so think about like the thing to
 

00:30:04.880 --> 00:30:06.830 align:start position:0%
and so think about like the thing to
think<00:30:05.039><c> about</c><00:30:05.279><c> is</c><00:30:05.360><c> like</c><00:30:05.520><c> this</c>

00:30:06.830 --> 00:30:06.840 align:start position:0%
think about is like this
 

00:30:06.840 --> 00:30:10.470 align:start position:0%
think about is like this
period<00:30:08.000><c> so</c><00:30:08.240><c> we</c><00:30:08.320><c> have</c><00:30:08.480><c> done</c><00:30:08.640><c> the</c><00:30:08.799><c> first</c><00:30:09.039><c> step</c>

00:30:10.470 --> 00:30:10.480 align:start position:0%
period so we have done the first step
 

00:30:10.480 --> 00:30:14.870 align:start position:0%
period so we have done the first step
step<00:30:10.799><c> one</c><00:30:12.000><c> we've</c><00:30:12.159><c> not</c><00:30:12.320><c> done</c><00:30:12.960><c> step</c><00:30:13.279><c> two</c><00:30:13.440><c> yet</c>

00:30:14.870 --> 00:30:14.880 align:start position:0%
step one we've not done step two yet
 

00:30:14.880 --> 00:30:24.149 align:start position:0%
step one we've not done step two yet
what<00:30:15.120><c> could</c><00:30:15.360><c> another</c><00:30:15.679><c> process</c><00:30:20.840><c> observe</c>

00:30:24.149 --> 00:30:24.159 align:start position:0%
 
 

00:30:24.159 --> 00:30:28.870 align:start position:0%
 
anybody

00:30:28.870 --> 00:30:28.880 align:start position:0%
 
 

00:30:28.880 --> 00:30:31.350 align:start position:0%
 
the<00:30:29.039><c> file</c><00:30:29.360><c> would</c><00:30:29.600><c> just</c><00:30:29.840><c> be</c><00:30:30.000><c> gone</c><00:30:30.880><c> yeah</c><00:30:31.279><c> you</c>

00:30:31.350 --> 00:30:31.360 align:start position:0%
the file would just be gone yeah you
 

00:30:31.360 --> 00:30:32.549 align:start position:0%
the file would just be gone yeah you
know<00:30:31.520><c> this</c>

00:30:32.549 --> 00:30:32.559 align:start position:0%
know this
 

00:30:32.559 --> 00:30:34.070 align:start position:0%
know this
between<00:30:32.960><c> step</c><00:30:33.200><c> one</c><00:30:33.360><c> and</c><00:30:33.440><c> two</c><00:30:33.760><c> the</c><00:30:33.840><c> file</c>

00:30:34.070 --> 00:30:34.080 align:start position:0%
between step one and two the file
 

00:30:34.080 --> 00:30:41.430 align:start position:0%
between step one and two the file
doesn't<00:30:34.840><c> exist</c>

00:30:41.430 --> 00:30:41.440 align:start position:0%
 
 

00:30:41.440 --> 00:30:43.669 align:start position:0%
 
i<00:30:41.600><c> mean</c><00:30:41.760><c> that</c><00:30:41.919><c> is</c><00:30:42.080><c> clearly</c><00:30:42.559><c> wrong</c><00:30:43.039><c> because</c><00:30:43.600><c> the</c>

00:30:43.669 --> 00:30:43.679 align:start position:0%
i mean that is clearly wrong because the
 

00:30:43.679 --> 00:30:45.190 align:start position:0%
i mean that is clearly wrong because the
file<00:30:44.080><c> does</c><00:30:44.320><c> exist</c>

00:30:45.190 --> 00:30:45.200 align:start position:0%
file does exist
 

00:30:45.200 --> 00:30:47.669 align:start position:0%
file does exist
it's<00:30:45.360><c> just</c><00:30:45.600><c> being</c><00:30:45.760><c> renamed</c><00:30:46.720><c> uh</c><00:30:46.960><c> and</c><00:30:47.120><c> another</c>

00:30:47.669 --> 00:30:47.679 align:start position:0%
it's just being renamed uh and another
 

00:30:47.679 --> 00:30:48.870 align:start position:0%
it's just being renamed uh and another
point<00:30:47.840><c> of</c><00:30:47.919><c> time</c><00:30:48.159><c> really</c><00:30:48.320><c> that</c><00:30:48.480><c> it</c><00:30:48.559><c> didn't</c>

00:30:48.870 --> 00:30:48.880 align:start position:0%
point of time really that it didn't
 

00:30:48.880 --> 00:30:50.389 align:start position:0%
point of time really that it didn't
exist

00:30:50.389 --> 00:30:50.399 align:start position:0%
exist
 

00:30:50.399 --> 00:30:53.350 align:start position:0%
exist
but<00:30:50.640><c> by</c><00:30:51.120><c> implementing</c><00:30:51.679><c> this</c><00:30:52.000><c> in</c><00:30:52.080><c> this</c><00:30:52.320><c> way</c><00:30:53.200><c> it</c>

00:30:53.350 --> 00:30:53.360 align:start position:0%
but by implementing this in this way it
 

00:30:53.360 --> 00:30:55.269 align:start position:0%
but by implementing this in this way it
just<00:30:53.600><c> appears</c><00:30:54.240><c> that</c><00:30:54.559><c> the</c><00:30:54.720><c> file</c><00:30:55.039><c> might</c>

00:30:55.269 --> 00:30:55.279 align:start position:0%
just appears that the file might
 

00:30:55.279 --> 00:30:57.830 align:start position:0%
just appears that the file might
actually<00:30:55.520><c> not</c><00:30:55.679><c> exist</c><00:30:56.080><c> even</c><00:30:56.320><c> though</c><00:30:56.480><c> it</c><00:30:56.559><c> does</c>

00:30:57.830 --> 00:30:57.840 align:start position:0%
actually not exist even though it does
 

00:30:57.840 --> 00:30:59.750 align:start position:0%
actually not exist even though it does
so<00:30:58.000><c> the</c><00:30:58.159><c> really</c><00:30:58.559><c> right</c><00:30:58.960><c> you</c><00:30:59.120><c> know</c><00:30:59.279><c> solution</c><00:30:59.679><c> to</c>

00:30:59.750 --> 00:30:59.760 align:start position:0%
so the really right you know solution to
 

00:30:59.760 --> 00:31:03.430 align:start position:0%
so the really right you know solution to
this<00:31:00.080><c> is</c><00:31:00.159><c> what</c><00:31:00.320><c> we</c><00:31:00.480><c> need</c>

00:31:03.430 --> 00:31:03.440 align:start position:0%
 
 

00:31:03.440 --> 00:31:07.509 align:start position:0%
 
is<00:31:03.679><c> that</c><00:31:03.760><c> we</c><00:31:04.000><c> actually</c><00:31:04.320><c> lock</c><00:31:04.640><c> d1</c>

00:31:07.509 --> 00:31:07.519 align:start position:0%
 
 

00:31:07.519 --> 00:31:10.710 align:start position:0%
 
and<00:31:07.760><c> d2</c><00:31:08.320><c> first</c><00:31:08.960><c> at</c><00:31:09.039><c> the</c><00:31:09.120><c> beginning</c><00:31:09.440><c> of</c><00:31:09.600><c> rename</c>

00:31:10.710 --> 00:31:10.720 align:start position:0%
and d2 first at the beginning of rename
 

00:31:10.720 --> 00:31:15.750 align:start position:0%
and d2 first at the beginning of rename
then<00:31:11.840><c> erase</c><00:31:12.399><c> and</c><00:31:12.559><c> add</c>

00:31:15.750 --> 00:31:15.760 align:start position:0%
 
 

00:31:15.760 --> 00:31:19.110 align:start position:0%
 
and<00:31:15.919><c> then</c><00:31:16.840><c> release</c>

00:31:19.110 --> 00:31:19.120 align:start position:0%
and then release
 

00:31:19.120 --> 00:31:24.310 align:start position:0%
and then release
the<00:31:19.279><c> locks</c><00:31:19.600><c> for</c><00:31:19.679><c> d1</c><00:31:20.880><c> and</c><00:31:21.039><c> d2</c>

00:31:24.310 --> 00:31:24.320 align:start position:0%
 
 

00:31:24.320 --> 00:31:27.509 align:start position:0%
 
so<00:31:24.480><c> that</c><00:31:24.640><c> makes</c><00:31:24.880><c> sense</c><00:31:26.720><c> so</c><00:31:26.880><c> here's</c><00:31:27.120><c> sort</c><00:31:27.279><c> of</c><00:31:27.360><c> an</c>

00:31:27.509 --> 00:31:27.519 align:start position:0%
so that makes sense so here's sort of an
 

00:31:27.519 --> 00:31:29.029 align:start position:0%
so that makes sense so here's sort of an
example<00:31:27.919><c> where</c>

00:31:29.029 --> 00:31:29.039 align:start position:0%
example where
 

00:31:29.039 --> 00:31:31.750 align:start position:0%
example where
we<00:31:29.279><c> have</c><00:31:29.360><c> an</c><00:31:29.519><c> operation</c><00:31:30.480><c> that</c><00:31:31.279><c> regression</c>

00:31:31.750 --> 00:31:31.760 align:start position:0%
we have an operation that regression
 

00:31:31.760 --> 00:31:32.950 align:start position:0%
we have an operation that regression
needs<00:31:32.000><c> multiple</c><00:31:32.320><c> locks</c>

00:31:32.950 --> 00:31:32.960 align:start position:0%
needs multiple locks
 

00:31:32.960 --> 00:31:35.750 align:start position:0%
needs multiple locks
and<00:31:33.760><c> uh</c><00:31:34.320><c> and</c><00:31:34.480><c> the</c><00:31:34.559><c> locks</c><00:31:34.880><c> can</c><00:31:35.120><c> not</c><00:31:35.360><c> really</c><00:31:35.600><c> be</c>

00:31:35.750 --> 00:31:35.760 align:start position:0%
and uh and the locks can not really be
 

00:31:35.760 --> 00:31:36.789 align:start position:0%
and uh and the locks can not really be
associated<00:31:36.320><c> with</c><00:31:36.480><c> the</c>

00:31:36.789 --> 00:31:36.799 align:start position:0%
associated with the
 

00:31:36.799 --> 00:31:38.310 align:start position:0%
associated with the
two<00:31:37.039><c> objects</c><00:31:37.440><c> that</c><00:31:37.600><c> are</c><00:31:37.760><c> the</c><00:31:37.840><c> arguments</c><00:31:38.240><c> of</c>

00:31:38.310 --> 00:31:38.320 align:start position:0%
two objects that are the arguments of
 

00:31:38.320 --> 00:31:40.870 align:start position:0%
two objects that are the arguments of
this<00:31:38.559><c> operation</c><00:31:39.519><c> uh</c><00:31:39.840><c> it</c><00:31:40.000><c> has</c><00:31:40.240><c> to</c><00:31:40.320><c> be</c><00:31:40.480><c> the</c><00:31:40.640><c> case</c>

00:31:40.870 --> 00:31:40.880 align:start position:0%
this operation uh it has to be the case
 

00:31:40.880 --> 00:31:42.710 align:start position:0%
this operation uh it has to be the case
that<00:31:41.120><c> actually</c><00:31:41.360><c> the</c><00:31:41.519><c> operation</c><00:31:41.919><c> itself</c><00:31:42.240><c> first</c>

00:31:42.710 --> 00:31:42.720 align:start position:0%
that actually the operation itself first
 

00:31:42.720 --> 00:31:45.750 align:start position:0%
that actually the operation itself first
requires<00:31:43.200><c> to</c><00:31:43.279><c> both</c><00:31:44.240><c> blocks</c><00:31:44.799><c> then</c><00:31:45.279><c> performs</c>

00:31:45.750 --> 00:31:45.760 align:start position:0%
requires to both blocks then performs
 

00:31:45.760 --> 00:31:47.350 align:start position:0%
requires to both blocks then performs
the<00:31:45.919><c> operations</c>

00:31:47.350 --> 00:31:47.360 align:start position:0%
the operations
 

00:31:47.360 --> 00:31:49.350 align:start position:0%
the operations
so<00:31:47.519><c> this</c><00:31:47.679><c> automatic</c><00:31:48.159><c> locking</c><00:31:48.480><c> is</c><00:31:48.640><c> not</c><00:31:48.880><c> sort</c><00:31:49.039><c> of</c>

00:31:49.350 --> 00:31:49.360 align:start position:0%
so this automatic locking is not sort of
 

00:31:49.360 --> 00:31:50.950 align:start position:0%
so this automatic locking is not sort of
you<00:31:49.440><c> know</c><00:31:49.600><c> directly</c><00:31:50.000><c> possible</c>

00:31:50.950 --> 00:31:50.960 align:start position:0%
you know directly possible
 

00:31:50.960 --> 00:31:52.389 align:start position:0%
you know directly possible
uh<00:31:51.120><c> there's</c><00:31:51.360><c> gonna</c><00:31:51.519><c> be</c><00:31:51.679><c> cases</c><00:31:52.080><c> where</c><00:31:52.240><c> that</c>

00:31:52.389 --> 00:31:52.399 align:start position:0%
uh there's gonna be cases where that
 

00:31:52.399 --> 00:31:54.310 align:start position:0%
uh there's gonna be cases where that
just<00:31:52.640><c> is</c><00:31:52.799><c> not</c><00:31:53.200><c> gonna</c><00:31:53.760><c> run</c>

00:31:54.310 --> 00:31:54.320 align:start position:0%
just is not gonna run
 

00:31:54.320 --> 00:31:56.230 align:start position:0%
just is not gonna run
to<00:31:54.480><c> the</c><00:31:54.880><c> or</c><00:31:55.120><c> this</c><00:31:55.279><c> native</c><00:31:55.679><c> scheme</c><00:31:55.919><c> at</c><00:31:56.000><c> least</c>

00:31:56.230 --> 00:31:56.240 align:start position:0%
to the or this native scheme at least
 

00:31:56.240 --> 00:31:58.830 align:start position:0%
to the or this native scheme at least
will<00:31:56.480><c> run</c><00:31:56.720><c> into</c><00:31:56.960><c> a</c><00:31:57.200><c> problem</c>

00:31:58.830 --> 00:31:58.840 align:start position:0%
will run into a problem
 

00:31:58.840 --> 00:32:06.230 align:start position:0%
will run into a problem
problems<00:32:00.320><c> any</c><00:32:00.480><c> questions</c><00:32:00.799><c> about</c><00:32:00.960><c> this</c>

00:32:06.230 --> 00:32:06.240 align:start position:0%
 
 

00:32:06.240 --> 00:32:09.350 align:start position:0%
 
yeah<00:32:06.960><c> so</c><00:32:07.600><c> could</c><00:32:07.840><c> we</c><00:32:08.000><c> just</c><00:32:08.240><c> say</c><00:32:08.480><c> that</c><00:32:08.880><c> um</c>

00:32:09.350 --> 00:32:09.360 align:start position:0%
yeah so could we just say that um
 

00:32:09.360 --> 00:32:11.190 align:start position:0%
yeah so could we just say that um
when<00:32:09.600><c> we're</c><00:32:09.840><c> accessing</c><00:32:10.320><c> a</c><00:32:10.399><c> data</c><00:32:10.640><c> structure</c><00:32:11.039><c> we</c>

00:32:11.190 --> 00:32:11.200 align:start position:0%
when we're accessing a data structure we
 

00:32:11.200 --> 00:32:12.950 align:start position:0%
when we're accessing a data structure we
just<00:32:11.279><c> have</c><00:32:11.519><c> to</c><00:32:11.919><c> access</c><00:32:12.399><c> or</c><00:32:12.640><c> we</c><00:32:12.799><c> have</c><00:32:12.880><c> to</c>

00:32:12.950 --> 00:32:12.960 align:start position:0%
just have to access or we have to
 

00:32:12.960 --> 00:32:15.509 align:start position:0%
just have to access or we have to
acquire<00:32:13.440><c> all</c><00:32:13.600><c> of</c><00:32:13.760><c> the</c><00:32:13.919><c> locks</c><00:32:14.399><c> associated</c><00:32:15.039><c> with</c>

00:32:15.509 --> 00:32:15.519 align:start position:0%
acquire all of the locks associated with
 

00:32:15.519 --> 00:32:17.669 align:start position:0%
acquire all of the locks associated with
all<00:32:15.679><c> of</c><00:32:15.760><c> the</c><00:32:15.919><c> data</c><00:32:16.159><c> structures</c><00:32:16.640><c> we</c><00:32:16.799><c> need</c><00:32:17.519><c> at</c>

00:32:17.669 --> 00:32:17.679 align:start position:0%
all of the data structures we need at
 

00:32:17.679 --> 00:32:19.830 align:start position:0%
all of the data structures we need at
the<00:32:17.840><c> beginning</c>

00:32:19.830 --> 00:32:19.840 align:start position:0%
the beginning
 

00:32:19.840 --> 00:32:21.509 align:start position:0%
the beginning
yeah<00:32:20.080><c> so</c><00:32:20.240><c> that'll</c><00:32:20.399><c> be</c><00:32:20.640><c> one</c><00:32:20.799><c> way</c><00:32:20.960><c> doing</c><00:32:21.200><c> it</c><00:32:21.440><c> and</c>

00:32:21.509 --> 00:32:21.519 align:start position:0%
yeah so that'll be one way doing it and
 

00:32:21.519 --> 00:32:23.350 align:start position:0%
yeah so that'll be one way doing it and
i<00:32:21.600><c> think</c><00:32:21.760><c> that</c><00:32:21.919><c> this</c><00:32:22.320><c> quickly</c><00:32:22.799><c> will</c>

00:32:23.350 --> 00:32:23.360 align:start position:0%
i think that this quickly will
 

00:32:23.360 --> 00:32:25.590 align:start position:0%
i think that this quickly will
uh<00:32:24.240><c> sort</c><00:32:24.399><c> of</c><00:32:24.480><c> come</c><00:32:24.720><c> down</c><00:32:24.880><c> to</c><00:32:25.039><c> basically</c><00:32:25.360><c> having</c>

00:32:25.590 --> 00:32:25.600 align:start position:0%
uh sort of come down to basically having
 

00:32:25.600 --> 00:32:27.509 align:start position:0%
uh sort of come down to basically having
a<00:32:25.679><c> big</c><00:32:25.840><c> kernel</c><00:32:26.159><c> lock</c>

00:32:27.509 --> 00:32:27.519 align:start position:0%
a big kernel lock
 

00:32:27.519 --> 00:32:29.350 align:start position:0%
a big kernel lock
oh<00:32:27.760><c> i</c><00:32:27.919><c> think</c><00:32:28.320><c> okay</c><00:32:28.480><c> and</c><00:32:28.559><c> then</c><00:32:29.039><c> you're</c><00:32:29.200><c> on</c><00:32:29.279><c> the</c>

00:32:29.350 --> 00:32:29.360 align:start position:0%
oh i think okay and then you're on the
 

00:32:29.360 --> 00:32:30.630 align:start position:0%
oh i think okay and then you're on the
wrist<00:32:29.600><c> basically</c><00:32:29.840><c> you</c><00:32:29.919><c> have</c><00:32:30.000><c> no</c><00:32:30.159><c> parallelism</c>

00:32:30.630 --> 00:32:30.640 align:start position:0%
wrist basically you have no parallelism
 

00:32:30.640 --> 00:32:31.350 align:start position:0%
wrist basically you have no parallelism
anymore

00:32:31.350 --> 00:32:31.360 align:start position:0%
anymore
 

00:32:31.360 --> 00:32:33.190 align:start position:0%
anymore
and<00:32:31.760><c> so</c><00:32:31.919><c> you</c><00:32:32.080><c> want</c><00:32:32.159><c> to</c><00:32:32.240><c> do</c><00:32:32.320><c> better</c><00:32:32.559><c> than</c><00:32:32.720><c> that</c>

00:32:33.190 --> 00:32:33.200 align:start position:0%
and so you want to do better than that
 

00:32:33.200 --> 00:32:35.110 align:start position:0%
and so you want to do better than that
right<00:32:33.600><c> yeah</c><00:32:34.080><c> and</c><00:32:34.240><c> i</c><00:32:34.320><c> think</c><00:32:34.480><c> this</c><00:32:34.640><c> is</c><00:32:34.799><c> always</c>

00:32:35.110 --> 00:32:35.120 align:start position:0%
right yeah and i think this is always
 

00:32:35.120 --> 00:32:36.470 align:start position:0%
right yeah and i think this is always
the<00:32:35.200><c> tension</c><00:32:35.679><c> you</c><00:32:35.840><c> know</c><00:32:36.000><c> you</c><00:32:36.080><c> can</c><00:32:36.159><c> make</c><00:32:36.320><c> things</c>

00:32:36.470 --> 00:32:36.480 align:start position:0%
the tension you know you can make things
 

00:32:36.480 --> 00:32:37.190 align:start position:0%
the tension you know you can make things
simpler

00:32:37.190 --> 00:32:37.200 align:start position:0%
simpler
 

00:32:37.200 --> 00:32:39.669 align:start position:0%
simpler
by<00:32:37.679><c> basically</c><00:32:38.320><c> what's</c><00:32:38.559><c> called</c><00:32:38.880><c> your</c><00:32:39.200><c> coarse</c>

00:32:39.669 --> 00:32:39.679 align:start position:0%
by basically what's called your coarse
 

00:32:39.679 --> 00:32:41.350 align:start position:0%
by basically what's called your coarse
grain<00:32:40.000><c> blocking</c>

00:32:41.350 --> 00:32:41.360 align:start position:0%
grain blocking
 

00:32:41.360 --> 00:32:43.990 align:start position:0%
grain blocking
but<00:32:41.519><c> then</c><00:32:41.840><c> you</c><00:32:42.000><c> know</c><00:32:42.080><c> you're</c><00:32:42.320><c> loose</c><00:32:43.679><c> there's</c>

00:32:43.990 --> 00:32:44.000 align:start position:0%
but then you know you're loose there's
 

00:32:44.000 --> 00:32:44.870 align:start position:0%
but then you know you're loose there's
performance

00:32:44.870 --> 00:32:44.880 align:start position:0%
performance
 

00:32:44.880 --> 00:32:47.029 align:start position:0%
performance
or<00:32:45.039><c> you</c><00:32:45.120><c> may</c><00:32:45.360><c> lose</c><00:32:45.600><c> performance</c><00:32:46.640><c> depending</c><00:32:46.960><c> if</c>

00:32:47.029 --> 00:32:47.039 align:start position:0%
or you may lose performance depending if
 

00:32:47.039 --> 00:32:49.029 align:start position:0%
or you may lose performance depending if
the<00:32:47.120><c> lock</c><00:32:47.360><c> is</c><00:32:47.440><c> contented</c><00:32:47.840><c> or</c><00:32:47.919><c> not</c>

00:32:49.029 --> 00:32:49.039 align:start position:0%
the lock is contented or not
 

00:32:49.039 --> 00:32:52.950 align:start position:0%
the lock is contented or not
yep<00:32:49.679><c> makes</c><00:32:49.840><c> sense</c><00:32:50.240><c> thank</c><00:32:50.480><c> you</c>

00:32:52.950 --> 00:32:52.960 align:start position:0%
 
 

00:32:52.960 --> 00:32:55.029 align:start position:0%
 
so<00:32:53.360><c> lock</c><00:32:53.679><c> perspective</c><00:32:54.159><c> so</c><00:32:54.399><c> there's</c><00:32:54.640><c> different</c>

00:32:55.029 --> 00:32:55.039 align:start position:0%
so lock perspective so there's different
 

00:32:55.039 --> 00:32:56.230 align:start position:0%
so lock perspective so there's different
ways

00:32:56.230 --> 00:32:56.240 align:start position:0%
ways
 

00:32:56.240 --> 00:32:59.750 align:start position:0%
ways
uh<00:32:57.279><c> to</c><00:32:57.440><c> think</c><00:32:57.600><c> about</c><00:32:57.919><c> locks</c>

00:32:59.750 --> 00:32:59.760 align:start position:0%
uh to think about locks
 

00:32:59.760 --> 00:33:02.630 align:start position:0%
uh to think about locks
and<00:33:00.880><c> you</c><00:33:00.960><c> know</c><00:33:01.120><c> there</c><00:33:01.440><c> are</c><00:33:01.600><c> three</c><00:33:01.760><c> common</c><00:33:02.080><c> ones</c>

00:33:02.630 --> 00:33:02.640 align:start position:0%
and you know there are three common ones
 

00:33:02.640 --> 00:33:03.430 align:start position:0%
and you know there are three common ones
and

00:33:03.430 --> 00:33:03.440 align:start position:0%
and
 

00:33:03.440 --> 00:33:05.669 align:start position:0%
and
uh<00:33:04.080><c> you</c><00:33:04.159><c> know</c><00:33:04.640><c> go</c><00:33:04.799><c> for</c><00:33:05.039><c> all</c><00:33:05.120><c> three</c><00:33:05.279><c> of</c><00:33:05.360><c> them</c><00:33:05.600><c> and</c>

00:33:05.669 --> 00:33:05.679 align:start position:0%
uh you know go for all three of them and
 

00:33:05.679 --> 00:33:07.350 align:start position:0%
uh you know go for all three of them and
just<00:33:05.840><c> maybe</c><00:33:06.159><c> that</c><00:33:06.320><c> may</c><00:33:06.480><c> help</c><00:33:06.799><c> you</c>

00:33:07.350 --> 00:33:07.360 align:start position:0%
just maybe that may help you
 

00:33:07.360 --> 00:33:08.870 align:start position:0%
just maybe that may help you
to<00:33:07.519><c> think</c><00:33:07.679><c> about</c><00:33:07.919><c> locks</c><00:33:08.159><c> and</c><00:33:08.399><c> maybe</c><00:33:08.640><c> one</c><00:33:08.799><c> of</c>

00:33:08.870 --> 00:33:08.880 align:start position:0%
to think about locks and maybe one of
 

00:33:08.880 --> 00:33:10.549 align:start position:0%
to think about locks and maybe one of
them<00:33:08.960><c> is</c><00:33:09.279><c> your</c><00:33:09.440><c> favorite</c><00:33:09.919><c> and</c><00:33:10.080><c> you</c><00:33:10.240><c> can</c><00:33:10.320><c> use</c>

00:33:10.549 --> 00:33:10.559 align:start position:0%
them is your favorite and you can use
 

00:33:10.559 --> 00:33:11.909 align:start position:0%
them is your favorite and you can use
that<00:33:10.720><c> one</c>

00:33:11.909 --> 00:33:11.919 align:start position:0%
that one
 

00:33:11.919 --> 00:33:13.430 align:start position:0%
that one
as<00:33:12.080><c> your</c><00:33:12.320><c> way</c><00:33:12.559><c> of</c><00:33:12.640><c> thinking</c><00:33:12.960><c> about</c><00:33:13.120><c> it</c><00:33:13.200><c> but</c>

00:33:13.430 --> 00:33:13.440 align:start position:0%
as your way of thinking about it but
 

00:33:13.440 --> 00:33:14.789 align:start position:0%
as your way of thinking about it but
it's<00:33:13.600><c> probably</c><00:33:13.840><c> helpful</c><00:33:14.159><c> to</c><00:33:14.320><c> see</c><00:33:14.559><c> that</c><00:33:14.720><c> there</c>

00:33:14.789 --> 00:33:14.799 align:start position:0%
it's probably helpful to see that there
 

00:33:14.799 --> 00:33:15.990 align:start position:0%
it's probably helpful to see that there
are<00:33:14.880><c> actually</c><00:33:15.120><c> different</c><00:33:15.360><c> ways</c><00:33:15.600><c> of</c><00:33:15.679><c> thinking</c>

00:33:15.990 --> 00:33:16.000 align:start position:0%
are actually different ways of thinking
 

00:33:16.000 --> 00:33:19.029 align:start position:0%
are actually different ways of thinking
about<00:33:16.240><c> logs</c>

00:33:19.029 --> 00:33:19.039 align:start position:0%
 
 

00:33:19.039 --> 00:33:20.630 align:start position:0%
 
so<00:33:19.279><c> first</c><00:33:19.519><c> of</c><00:33:19.600><c> all</c><00:33:19.919><c> you</c><00:33:20.000><c> know</c><00:33:20.159><c> one</c><00:33:20.320><c> other</c><00:33:20.480><c> way</c>

00:33:20.630 --> 00:33:20.640 align:start position:0%
so first of all you know one other way
 

00:33:20.640 --> 00:33:23.909 align:start position:0%
so first of all you know one other way
to<00:33:20.720><c> think</c><00:33:20.880><c> about</c><00:33:21.200><c> it</c><00:33:21.279><c> is</c><00:33:21.440><c> actually</c><00:33:22.000><c> a</c><00:33:22.840><c> lot</c>

00:33:23.909 --> 00:33:23.919 align:start position:0%
to think about it is actually a lot
 

00:33:23.919 --> 00:33:26.470 align:start position:0%
to think about it is actually a lot
avoid

00:33:26.470 --> 00:33:26.480 align:start position:0%
 
 

00:33:26.480 --> 00:33:29.750 align:start position:0%
 
uh<00:33:27.440><c> lost</c><00:33:27.760><c> updates</c><00:33:28.399><c> or</c><00:33:28.640><c> help</c>

00:33:29.750 --> 00:33:29.760 align:start position:0%
uh lost updates or help
 

00:33:29.760 --> 00:33:31.509 align:start position:0%
uh lost updates or help
if<00:33:30.080><c> you</c><00:33:30.159><c> use</c><00:33:30.480><c> logs</c><00:33:30.720><c> correctly</c><00:33:31.200><c> you</c><00:33:31.360><c> know</c>

00:33:31.509 --> 00:33:31.519 align:start position:0%
if you use logs correctly you know
 

00:33:31.519 --> 00:33:33.590 align:start position:0%
if you use logs correctly you know
lock's<00:33:31.760><c> going</c><00:33:31.840><c> to</c><00:33:32.080><c> help</c><00:33:32.320><c> avoiding</c>

00:33:33.590 --> 00:33:33.600 align:start position:0%
lock's going to help avoiding
 

00:33:33.600 --> 00:33:38.549 align:start position:0%
lock's going to help avoiding
lost<00:33:36.840><c> updates</c>

00:33:38.549 --> 00:33:38.559 align:start position:0%
lost updates
 

00:33:38.559 --> 00:33:41.269 align:start position:0%
lost updates
and<00:33:38.720><c> if</c><00:33:38.880><c> you</c><00:33:38.960><c> think</c><00:33:39.120><c> about</c><00:33:39.760><c> uh</c><00:33:40.559><c> our</c><00:33:40.960><c> early</c>

00:33:41.269 --> 00:33:41.279 align:start position:0%
and if you think about uh our early
 

00:33:41.279 --> 00:33:42.950 align:start position:0%
and if you think about uh our early
example<00:33:41.760><c> in</c><00:33:41.919><c> the</c><00:33:42.080><c> catalog.c</c>

00:33:42.950 --> 00:33:42.960 align:start position:0%
example in the catalog.c
 

00:33:42.960 --> 00:33:44.630 align:start position:0%
example in the catalog.c
you<00:33:43.120><c> know</c><00:33:43.200><c> the</c><00:33:43.440><c> lost</c><00:33:43.760><c> update</c><00:33:44.159><c> is</c><00:33:44.240><c> basically</c>

00:33:44.630 --> 00:33:44.640 align:start position:0%
you know the lost update is basically
 

00:33:44.640 --> 00:33:46.630 align:start position:0%
you know the lost update is basically
the<00:33:45.279><c> we</c><00:33:45.440><c> lose</c><00:33:45.679><c> one</c><00:33:46.000><c> update</c><00:33:46.320><c> to</c>

00:33:46.630 --> 00:33:46.640 align:start position:0%
the we lose one update to
 

00:33:46.640 --> 00:33:50.789 align:start position:0%
the we lose one update to
the<00:33:47.840><c> k3</c><00:33:49.120><c> and</c><00:33:49.600><c> by</c><00:33:49.840><c> putting</c><00:33:50.159><c> walks</c><00:33:50.399><c> in</c><00:33:50.559><c> it</c><00:33:50.640><c> you</c>

00:33:50.789 --> 00:33:50.799 align:start position:0%
the k3 and by putting walks in it you
 

00:33:50.799 --> 00:33:51.830 align:start position:0%
the k3 and by putting walks in it you
know<00:33:50.960><c> where</c><00:33:51.120><c> actually</c><00:33:51.440><c> we</c>

00:33:51.830 --> 00:33:51.840 align:start position:0%
know where actually we
 

00:33:51.840 --> 00:33:53.990 align:start position:0%
know where actually we
didn't<00:33:52.080><c> lose</c><00:33:52.799><c> that</c><00:33:53.039><c> update</c><00:33:53.440><c> so</c><00:33:53.600><c> that's</c><00:33:53.840><c> one</c>

00:33:53.990 --> 00:33:54.000 align:start position:0%
didn't lose that update so that's one
 

00:33:54.000 --> 00:33:55.830 align:start position:0%
didn't lose that update so that's one
way<00:33:54.240><c> you're</c><00:33:54.399><c> thinking</c><00:33:54.720><c> about</c><00:33:54.960><c> it</c>

00:33:55.830 --> 00:33:55.840 align:start position:0%
way you're thinking about it
 

00:33:55.840 --> 00:33:58.549 align:start position:0%
way you're thinking about it
it's<00:33:56.080><c> a</c><00:33:56.159><c> very</c><00:33:56.480><c> low</c><00:33:56.640><c> level</c><00:33:56.960><c> way</c><00:33:57.679><c> uh</c><00:33:58.159><c> another</c><00:33:58.399><c> way</c>

00:33:58.549 --> 00:33:58.559 align:start position:0%
it's a very low level way uh another way
 

00:33:58.559 --> 00:33:59.190 align:start position:0%
it's a very low level way uh another way
to<00:33:58.640><c> think</c><00:33:58.799><c> about</c><00:33:58.960><c> it</c>

00:33:59.190 --> 00:33:59.200 align:start position:0%
to think about it
 

00:33:59.200 --> 00:34:03.990 align:start position:0%
to think about it
is<00:33:59.440><c> you</c><00:33:59.600><c> know</c><00:33:59.760><c> you</c><00:33:59.840><c> can</c><00:34:00.000><c> make</c><00:34:00.559><c> locked</c><00:34:01.440><c> blocks</c>

00:34:03.990 --> 00:34:04.000 align:start position:0%
 
 

00:34:04.000 --> 00:34:10.550 align:start position:0%
 
make<00:34:05.600><c> multi-step</c><00:34:06.320><c> operations</c>

00:34:10.550 --> 00:34:10.560 align:start position:0%
 
 

00:34:10.560 --> 00:34:13.589 align:start position:0%
 
atomic

00:34:13.589 --> 00:34:13.599 align:start position:0%
 
 

00:34:13.599 --> 00:34:14.790 align:start position:0%
 
and<00:34:13.760><c> so</c><00:34:13.919><c> there's</c><00:34:14.079><c> sort</c><00:34:14.240><c> of</c><00:34:14.320><c> the</c><00:34:14.399><c> view</c><00:34:14.639><c> of</c><00:34:14.720><c> a</c>

00:34:14.790 --> 00:34:14.800 align:start position:0%
and so there's sort of the view of a
 

00:34:14.800 --> 00:34:16.230 align:start position:0%
and so there's sort of the view of a
critical<00:34:15.119><c> section</c><00:34:15.520><c> you</c><00:34:15.679><c> know</c><00:34:15.839><c> we</c><00:34:15.919><c> have</c><00:34:16.079><c> a</c>

00:34:16.230 --> 00:34:16.240 align:start position:0%
critical section you know we have a
 

00:34:16.240 --> 00:34:19.510 align:start position:0%
critical section you know we have a
required<00:34:16.639><c> walk</c><00:34:16.879><c> we</c><00:34:17.040><c> do</c><00:34:17.119><c> a</c><00:34:17.200><c> whole</c><00:34:17.359><c> bunch</c><00:34:17.599><c> of</c>

00:34:19.510 --> 00:34:19.520 align:start position:0%
required walk we do a whole bunch of
 

00:34:19.520 --> 00:34:21.510 align:start position:0%
required walk we do a whole bunch of
steps<00:34:20.000><c> or</c><00:34:20.399><c> instructions</c><00:34:20.879><c> we</c><00:34:21.040><c> executed</c><00:34:21.440><c> all</c>

00:34:21.510 --> 00:34:21.520 align:start position:0%
steps or instructions we executed all
 

00:34:21.520 --> 00:34:23.270 align:start position:0%
steps or instructions we executed all
the<00:34:21.679><c> instructions</c><00:34:22.399><c> then</c><00:34:22.639><c> release</c>

00:34:23.270 --> 00:34:23.280 align:start position:0%
the instructions then release
 

00:34:23.280 --> 00:34:24.389 align:start position:0%
the instructions then release
and<00:34:23.440><c> basically</c><00:34:23.760><c> that</c><00:34:23.839><c> whole</c><00:34:24.079><c> critical</c>

00:34:24.389 --> 00:34:24.399 align:start position:0%
and basically that whole critical
 

00:34:24.399 --> 00:34:27.750 align:start position:0%
and basically that whole critical
section<00:34:25.200><c> execute</c><00:34:25.839><c> as</c><00:34:26.000><c> an</c><00:34:26.159><c> atomic</c><00:34:26.639><c> operation</c>

00:34:27.750 --> 00:34:27.760 align:start position:0%
section execute as an atomic operation
 

00:34:27.760 --> 00:34:30.310 align:start position:0%
section execute as an atomic operation
and<00:34:27.839><c> that's</c><00:34:28.000><c> sort</c><00:34:28.159><c> of</c><00:34:28.320><c> the</c><00:34:28.720><c> uh</c><00:34:29.760><c> and</c><00:34:30.000><c> also</c><00:34:30.240><c> a</c>

00:34:30.310 --> 00:34:30.320 align:start position:0%
and that's sort of the uh and also a
 

00:34:30.320 --> 00:34:32.950 align:start position:0%
and that's sort of the uh and also a
fine<00:34:30.639><c> way</c><00:34:30.960><c> you</c><00:34:31.040><c> know</c><00:34:31.119><c> to</c><00:34:31.440><c> think</c><00:34:31.679><c> about</c><00:34:31.919><c> locks</c>

00:34:32.950 --> 00:34:32.960 align:start position:0%
fine way you know to think about locks
 

00:34:32.960 --> 00:34:35.190 align:start position:0%
fine way you know to think about locks
and<00:34:33.040><c> then</c><00:34:33.280><c> the</c><00:34:33.359><c> third</c><00:34:33.599><c> one</c><00:34:34.399><c> uh</c><00:34:34.800><c> you</c><00:34:34.960><c> know</c><00:34:35.040><c> that</c>

00:34:35.190 --> 00:34:35.200 align:start position:0%
and then the third one uh you know that
 

00:34:35.200 --> 00:34:37.349 align:start position:0%
and then the third one uh you know that
may<00:34:35.359><c> be</c><00:34:35.520><c> helpful</c><00:34:35.919><c> is</c><00:34:36.079><c> that</c>

00:34:37.349 --> 00:34:37.359 align:start position:0%
may be helpful is that
 

00:34:37.359 --> 00:34:42.069 align:start position:0%
may be helpful is that
really<00:34:37.760><c> what</c><00:34:37.919><c> locks</c><00:34:38.240><c> do</c><00:34:38.720><c> is</c><00:34:39.919><c> locks</c><00:34:40.240><c> health</c>

00:34:42.069 --> 00:34:42.079 align:start position:0%
really what locks do is locks health
 

00:34:42.079 --> 00:34:48.230 align:start position:0%
really what locks do is locks health
maintain<00:34:42.480><c> an</c><00:34:42.639><c> invariant</c>

00:34:48.230 --> 00:34:48.240 align:start position:0%
 
 

00:34:48.240 --> 00:34:49.589 align:start position:0%
 
data<00:34:48.560><c> structure</c><00:34:48.960><c> that</c><00:34:49.200><c> you</c><00:34:49.359><c> know</c><00:34:49.520><c> it's</c>

00:34:49.589 --> 00:34:49.599 align:start position:0%
data structure that you know it's
 

00:34:49.599 --> 00:34:52.069 align:start position:0%
data structure that you know it's
protecting<00:34:51.200><c> and</c>

00:34:52.069 --> 00:34:52.079 align:start position:0%
protecting and
 

00:34:52.079 --> 00:34:55.270 align:start position:0%
protecting and
uh<00:34:52.480><c> what</c><00:34:52.639><c> really</c><00:34:52.960><c> is</c><00:34:53.040><c> going</c><00:34:53.280><c> on</c><00:34:53.520><c> is</c><00:34:53.679><c> that</c><00:34:54.480><c> uh</c>

00:34:55.270 --> 00:34:55.280 align:start position:0%
uh what really is going on is that uh
 

00:34:55.280 --> 00:34:57.589 align:start position:0%
uh what really is going on is that uh
at<00:34:55.440><c> the</c><00:34:55.760><c> before</c><00:34:56.159><c> a</c><00:34:56.320><c> choir</c><00:34:56.800><c> if</c><00:34:57.040><c> there's</c><00:34:57.200><c> no</c><00:34:57.359><c> lock</c>

00:34:57.589 --> 00:34:57.599 align:start position:0%
at the before a choir if there's no lock
 

00:34:57.599 --> 00:34:58.470 align:start position:0%
at the before a choir if there's no lock
holder<00:34:58.000><c> you</c><00:34:58.160><c> know</c>

00:34:58.470 --> 00:34:58.480 align:start position:0%
holder you know
 

00:34:58.480 --> 00:35:01.030 align:start position:0%
holder you know
that<00:34:58.720><c> invariant</c><00:34:59.200><c> holds</c><00:35:00.079><c> uh</c><00:35:00.320><c> when</c><00:35:00.480><c> we</c><00:35:00.640><c> acquire</c>

00:35:01.030 --> 00:35:01.040 align:start position:0%
that invariant holds uh when we acquire
 

00:35:01.040 --> 00:35:03.109 align:start position:0%
that invariant holds uh when we acquire
the<00:35:01.200><c> lock</c><00:35:01.839><c> and</c><00:35:02.000><c> we</c><00:35:02.079><c> do</c><00:35:02.240><c> some</c><00:35:02.400><c> operations</c><00:35:02.880><c> then</c>

00:35:03.109 --> 00:35:03.119 align:start position:0%
the lock and we do some operations then
 

00:35:03.119 --> 00:35:05.750 align:start position:0%
the lock and we do some operations then
temporarily<00:35:04.000><c> that</c><00:35:04.240><c> invariant</c><00:35:04.800><c> may</c><00:35:04.960><c> be</c>

00:35:05.750 --> 00:35:05.760 align:start position:0%
temporarily that invariant may be
 

00:35:05.760 --> 00:35:08.630 align:start position:0%
temporarily that invariant may be
uh<00:35:06.560><c> violated</c><00:35:07.520><c> but</c><00:35:07.760><c> at</c><00:35:07.839><c> the</c><00:35:08.000><c> point</c><00:35:08.240><c> that</c><00:35:08.400><c> we</c><00:35:08.480><c> do</c>

00:35:08.630 --> 00:35:08.640 align:start position:0%
uh violated but at the point that we do
 

00:35:08.640 --> 00:35:13.109 align:start position:0%
uh violated but at the point that we do
the<00:35:08.720><c> release</c>

00:35:13.109 --> 00:35:13.119 align:start position:0%
 
 

00:35:13.119 --> 00:35:15.829 align:start position:0%
 
and<00:35:13.359><c> so</c><00:35:13.520><c> if</c><00:35:13.599><c> you</c><00:35:13.680><c> think</c><00:35:13.839><c> about</c><00:35:14.960><c> our</c><00:35:15.119><c> free</c><00:35:15.440><c> list</c>

00:35:15.829 --> 00:35:15.839 align:start position:0%
and so if you think about our free list
 

00:35:15.839 --> 00:35:16.470 align:start position:0%
and so if you think about our free list
uh

00:35:16.470 --> 00:35:16.480 align:start position:0%
uh
 

00:35:16.480 --> 00:35:18.950 align:start position:0%
uh
case<00:35:17.200><c> you</c><00:35:17.359><c> know</c><00:35:17.440><c> the</c><00:35:17.599><c> invariant</c><00:35:18.000><c> is</c><00:35:18.160><c> there</c><00:35:18.720><c> uh</c>

00:35:18.950 --> 00:35:18.960 align:start position:0%
case you know the invariant is there uh
 

00:35:18.960 --> 00:35:19.510 align:start position:0%
case you know the invariant is there uh
you<00:35:19.119><c> know</c>

00:35:19.510 --> 00:35:19.520 align:start position:0%
you know
 

00:35:19.520 --> 00:35:22.390 align:start position:0%
you know
the<00:35:19.760><c> three</c><00:35:20.000><c> pointer</c><00:35:20.320><c> points</c><00:35:20.640><c> to</c><00:35:21.119><c> uh</c><00:35:21.599><c> one</c><00:35:22.000><c> other</c>

00:35:22.390 --> 00:35:22.400 align:start position:0%
the three pointer points to uh one other
 

00:35:22.400 --> 00:35:23.349 align:start position:0%
the three pointer points to uh one other
next<00:35:22.640><c> pointer</c>

00:35:23.349 --> 00:35:23.359 align:start position:0%
next pointer
 

00:35:23.359 --> 00:35:25.990 align:start position:0%
next pointer
and<00:35:23.680><c> all</c><00:35:23.920><c> the</c><00:35:24.000><c> three</c><00:35:24.480><c> pages</c><00:35:24.880><c> are</c><00:35:25.440><c> on</c><00:35:25.599><c> a</c><00:35:25.680><c> single</c>

00:35:25.990 --> 00:35:26.000 align:start position:0%
and all the three pages are on a single
 

00:35:26.000 --> 00:35:27.430 align:start position:0%
and all the three pages are on a single
list

00:35:27.430 --> 00:35:27.440 align:start position:0%
list
 

00:35:27.440 --> 00:35:30.470 align:start position:0%
list
uh<00:35:27.839><c> and</c><00:35:28.160><c> that's</c><00:35:28.480><c> temporarily</c><00:35:29.119><c> violated</c><00:35:29.920><c> uh</c>

00:35:30.470 --> 00:35:30.480 align:start position:0%
uh and that's temporarily violated uh
 

00:35:30.480 --> 00:35:34.069 align:start position:0%
uh and that's temporarily violated uh
at<00:35:30.560><c> the</c><00:35:30.720><c> point</c><00:35:31.359><c> uh</c>

00:35:34.069 --> 00:35:34.079 align:start position:0%
 
 

00:35:34.079 --> 00:35:36.630 align:start position:0%
 
in<00:35:34.160><c> the</c><00:35:34.240><c> middle</c><00:35:34.560><c> of</c><00:35:34.720><c> the</c><00:35:35.680><c> k3</c><00:35:36.160><c> because</c><00:35:36.480><c> like</c>

00:35:36.630 --> 00:35:36.640 align:start position:0%
in the middle of the k3 because like
 

00:35:36.640 --> 00:35:37.270 align:start position:0%
in the middle of the k3 because like
multiple

00:35:37.270 --> 00:35:37.280 align:start position:0%
multiple
 

00:35:37.280 --> 00:35:38.550 align:start position:0%
multiple
pointers<00:35:37.680><c> actually</c><00:35:37.920><c> point</c><00:35:38.079><c> to</c><00:35:38.240><c> the</c><00:35:38.320><c> beginning</c>

00:35:38.550 --> 00:35:38.560 align:start position:0%
pointers actually point to the beginning
 

00:35:38.560 --> 00:35:41.349 align:start position:0%
pointers actually point to the beginning
of<00:35:38.640><c> the</c><00:35:38.720><c> free</c><00:35:38.960><c> list</c>

00:35:41.349 --> 00:35:41.359 align:start position:0%
 
 

00:35:41.359 --> 00:35:42.630 align:start position:0%
 
and<00:35:41.440><c> then</c><00:35:41.599><c> it's</c><00:35:41.760><c> established</c><00:35:42.240><c> at</c><00:35:42.320><c> the</c><00:35:42.400><c> end</c><00:35:42.560><c> of</c>

00:35:42.630 --> 00:35:42.640 align:start position:0%
and then it's established at the end of
 

00:35:42.640 --> 00:35:44.950 align:start position:0%
and then it's established at the end of
it<00:35:43.680><c> so</c><00:35:44.000><c> and</c><00:35:44.240><c> you</c><00:35:44.320><c> know</c><00:35:44.480><c> for</c>

00:35:44.950 --> 00:35:44.960 align:start position:0%
it so and you know for
 

00:35:44.960 --> 00:35:46.790 align:start position:0%
it so and you know for
you<00:35:45.119><c> know</c><00:35:45.200><c> the</c><00:35:45.359><c> free</c><00:35:45.599><c> list</c><00:35:45.839><c> it</c><00:35:45.920><c> has</c><00:35:46.160><c> a</c><00:35:46.240><c> not</c><00:35:46.480><c> so</c>

00:35:46.790 --> 00:35:46.800 align:start position:0%
you know the free list it has a not so
 

00:35:46.800 --> 00:35:48.470 align:start position:0%
you know the free list it has a not so
complicated<00:35:47.359><c> variant</c><00:35:47.680><c> but</c><00:35:47.839><c> like</c><00:35:48.000><c> for</c><00:35:48.160><c> more</c>

00:35:48.470 --> 00:35:48.480 align:start position:0%
complicated variant but like for more
 

00:35:48.480 --> 00:35:49.990 align:start position:0%
complicated variant but like for more
uh<00:35:48.640><c> complicated</c><00:35:49.119><c> shared</c><00:35:49.359><c> data</c><00:35:49.599><c> structures</c>

00:35:49.990 --> 00:35:50.000 align:start position:0%
uh complicated shared data structures
 

00:35:50.000 --> 00:35:51.589 align:start position:0%
uh complicated shared data structures
you<00:35:50.079><c> know</c><00:35:50.240><c> it</c><00:35:50.480><c> can</c><00:35:50.640><c> be</c><00:35:50.800><c> a</c><00:35:50.880><c> helpful</c><00:35:51.200><c> way</c><00:35:51.440><c> of</c>

00:35:51.589 --> 00:35:51.599 align:start position:0%
you know it can be a helpful way of
 

00:35:51.599 --> 00:35:53.589 align:start position:0%
you know it can be a helpful way of
thinking<00:35:52.000><c> actually</c><00:35:52.400><c> what</c><00:35:52.640><c> the</c><00:35:52.880><c> lock</c><00:35:53.200><c> is</c><00:35:53.280><c> doing</c>

00:35:53.589 --> 00:35:53.599 align:start position:0%
thinking actually what the lock is doing
 

00:35:53.599 --> 00:35:55.829 align:start position:0%
thinking actually what the lock is doing
for<00:35:53.839><c> you</c>

00:35:55.829 --> 00:35:55.839 align:start position:0%
for you
 

00:35:55.839 --> 00:35:57.990 align:start position:0%
for you
and<00:35:56.079><c> so</c><00:35:56.240><c> see</c><00:35:56.480><c> even</c><00:35:56.720><c> in</c><00:35:56.800><c> this</c><00:35:57.040><c> kind</c><00:35:57.280><c> of</c><00:35:57.359><c> the</c><00:35:57.520><c> k3</c>

00:35:57.990 --> 00:35:58.000 align:start position:0%
and so see even in this kind of the k3
 

00:35:58.000 --> 00:35:59.829 align:start position:0%
and so see even in this kind of the k3
case<00:35:58.320><c> you</c><00:35:58.400><c> know</c><00:35:58.640><c> all</c><00:35:58.800><c> three</c><00:35:59.119><c> lock</c><00:35:59.440><c> perspective</c>

00:35:59.829 --> 00:35:59.839 align:start position:0%
case you know all three lock perspective
 

00:35:59.839 --> 00:36:01.430 align:start position:0%
case you know all three lock perspective
for<00:36:00.000><c> reasonable</c><00:36:00.400><c> perspective</c>

00:36:01.430 --> 00:36:01.440 align:start position:0%
for reasonable perspective
 

00:36:01.440 --> 00:36:04.550 align:start position:0%
for reasonable perspective
um<00:36:02.160><c> and</c><00:36:02.720><c> uh</c><00:36:03.440><c> you</c><00:36:03.520><c> know</c><00:36:04.000><c> one</c><00:36:04.160><c> of</c><00:36:04.240><c> them</c>

00:36:04.550 --> 00:36:04.560 align:start position:0%
um and uh you know one of them
 

00:36:04.560 --> 00:36:07.990 align:start position:0%
um and uh you know one of them
you<00:36:04.640><c> know</c><00:36:05.520><c> uh</c><00:36:06.240><c> brings</c><00:36:06.640><c> more</c><00:36:06.880><c> with</c><00:36:07.119><c> you</c><00:36:07.280><c> than</c><00:36:07.440><c> so</c>

00:36:07.990 --> 00:36:08.000 align:start position:0%
you know uh brings more with you than so
 

00:36:08.000 --> 00:36:09.589 align:start position:0%
you know uh brings more with you than so
than<00:36:08.240><c> one</c><00:36:08.400><c> of</c><00:36:08.480><c> the</c><00:36:08.560><c> other</c><00:36:08.720><c> ones</c><00:36:09.040><c> and</c><00:36:09.280><c> you</c><00:36:09.440><c> know</c>

00:36:09.589 --> 00:36:09.599 align:start position:0%
than one of the other ones and you know
 

00:36:09.599 --> 00:36:11.589 align:start position:0%
than one of the other ones and you know
use<00:36:09.839><c> that</c><00:36:10.000><c> as</c><00:36:10.160><c> your</c><00:36:10.800><c> way</c><00:36:11.040><c> to</c><00:36:11.119><c> think</c><00:36:11.280><c> about</c>

00:36:11.589 --> 00:36:11.599 align:start position:0%
use that as your way to think about
 

00:36:11.599 --> 00:36:14.710 align:start position:0%
use that as your way to think about
locks

00:36:14.710 --> 00:36:14.720 align:start position:0%
 
 

00:36:14.720 --> 00:36:23.589 align:start position:0%
 
any<00:36:15.119><c> questions</c><00:36:16.160><c> about</c><00:36:16.400><c> this</c><00:36:16.640><c> point</c>

00:36:23.589 --> 00:36:23.599 align:start position:0%
 
 

00:36:23.599 --> 00:36:26.950 align:start position:0%
 
okay<00:36:25.440><c> so</c><00:36:25.599><c> i'm</c><00:36:25.760><c> gonna</c><00:36:25.920><c> now</c><00:36:26.160><c> run</c><00:36:26.480><c> for</c><00:36:26.640><c> a</c><00:36:26.720><c> couple</c>

00:36:26.950 --> 00:36:26.960 align:start position:0%
okay so i'm gonna now run for a couple
 

00:36:26.960 --> 00:36:27.430 align:start position:0%
okay so i'm gonna now run for a couple
things

00:36:27.430 --> 00:36:27.440 align:start position:0%
things
 

00:36:27.440 --> 00:36:31.349 align:start position:0%
things
uh<00:36:28.000><c> uh</c><00:36:28.960><c> sort</c><00:36:29.200><c> of</c><00:36:29.520><c> uh</c>

00:36:31.349 --> 00:36:31.359 align:start position:0%
uh uh sort of uh
 

00:36:31.359 --> 00:36:33.270 align:start position:0%
uh uh sort of uh
you<00:36:31.440><c> know</c><00:36:31.599><c> undesirable</c><00:36:32.240><c> properties</c><00:36:32.800><c> or</c><00:36:33.119><c> that</c>

00:36:33.270 --> 00:36:33.280 align:start position:0%
you know undesirable properties or that
 

00:36:33.280 --> 00:36:34.870 align:start position:0%
you know undesirable properties or that
can<00:36:33.440><c> actually</c><00:36:33.680><c> happen</c><00:36:34.000><c> with</c><00:36:34.240><c> locks</c>

00:36:34.870 --> 00:36:34.880 align:start position:0%
can actually happen with locks
 

00:36:34.880 --> 00:36:37.349 align:start position:0%
can actually happen with locks
and<00:36:35.280><c> you</c><00:36:35.440><c> know</c><00:36:35.520><c> we</c><00:36:35.680><c> know</c><00:36:35.920><c> like</c><00:36:36.160><c> locks</c><00:36:36.400><c> are</c><00:36:36.800><c> uh</c>

00:36:37.349 --> 00:36:37.359 align:start position:0%
and you know we know like locks are uh
 

00:36:37.359 --> 00:36:39.430 align:start position:0%
and you know we know like locks are uh
necessary<00:36:37.920><c> to</c><00:36:38.160><c> fix</c><00:36:38.400><c> a</c><00:36:38.480><c> correctness</c><00:36:38.880><c> problem</c>

00:36:39.430 --> 00:36:39.440 align:start position:0%
necessary to fix a correctness problem
 

00:36:39.440 --> 00:36:41.430 align:start position:0%
necessary to fix a correctness problem
you<00:36:39.599><c> know</c><00:36:39.920><c> to</c><00:36:40.079><c> avoid</c><00:36:40.240><c> these</c><00:36:40.400><c> race</c><00:36:40.560><c> conditions</c>

00:36:41.430 --> 00:36:41.440 align:start position:0%
you know to avoid these race conditions
 

00:36:41.440 --> 00:36:42.870 align:start position:0%
you know to avoid these race conditions
blocks<00:36:41.920><c> themselves</c><00:36:42.560><c> in</c>

00:36:42.870 --> 00:36:42.880 align:start position:0%
blocks themselves in
 

00:36:42.880 --> 00:36:45.190 align:start position:0%
blocks themselves in
when<00:36:43.119><c> inappropriate</c><00:36:43.920><c> inappropriately</c><00:36:44.720><c> used</c>

00:36:45.190 --> 00:36:45.200 align:start position:0%
when inappropriate inappropriately used
 

00:36:45.200 --> 00:36:46.950 align:start position:0%
when inappropriate inappropriately used
can<00:36:45.440><c> also</c><00:36:45.680><c> introduce</c><00:36:46.160><c> their</c><00:36:46.400><c> own</c><00:36:46.640><c> set</c><00:36:46.880><c> of</c>

00:36:46.950 --> 00:36:46.960 align:start position:0%
can also introduce their own set of
 

00:36:46.960 --> 00:36:48.230 align:start position:0%
can also introduce their own set of
problems

00:36:48.230 --> 00:36:48.240 align:start position:0%
problems
 

00:36:48.240 --> 00:36:49.589 align:start position:0%
problems
and<00:36:48.400><c> so</c><00:36:48.640><c> i</c><00:36:48.720><c> want</c><00:36:48.800><c> to</c><00:36:48.880><c> talk</c><00:36:49.040><c> a</c><00:36:49.119><c> little</c><00:36:49.280><c> bit</c><00:36:49.440><c> about</c>

00:36:49.589 --> 00:36:49.599 align:start position:0%
and so i want to talk a little bit about
 

00:36:49.599 --> 00:36:51.430 align:start position:0%
and so i want to talk a little bit about
that<00:36:50.240><c> and</c><00:36:50.400><c> so</c><00:36:50.640><c> the</c><00:36:50.800><c> obvious</c><00:36:51.119><c> one</c>

00:36:51.430 --> 00:36:51.440 align:start position:0%
that and so the obvious one
 

00:36:51.440 --> 00:36:57.190 align:start position:0%
that and so the obvious one
of<00:36:51.520><c> course</c><00:36:51.760><c> is</c><00:36:52.839><c> deadlock</c>

00:36:57.190 --> 00:36:57.200 align:start position:0%
 
 

00:36:57.200 --> 00:36:58.950 align:start position:0%
 
you<00:36:57.280><c> know</c><00:36:57.440><c> for</c><00:36:57.599><c> example</c><00:36:58.160><c> you</c><00:36:58.320><c> know</c><00:36:58.480><c> the</c><00:36:58.800><c> the</c>

00:36:58.950 --> 00:36:58.960 align:start position:0%
you know for example you know the the
 

00:36:58.960 --> 00:37:00.550 align:start position:0%
you know for example you know the the
simplest<00:36:59.359><c> case</c><00:36:59.680><c> you</c><00:36:59.839><c> know</c><00:37:00.000><c> was</c><00:37:00.240><c> a</c><00:37:00.320><c> little</c><00:37:00.480><c> bit</c>

00:37:00.550 --> 00:37:00.560 align:start position:0%
simplest case you know was a little bit
 

00:37:00.560 --> 00:37:01.670 align:start position:0%
simplest case you know was a little bit
boring<00:37:00.880><c> but</c><00:37:01.119><c> i</c><00:37:01.200><c> mean</c><00:37:01.359><c> you</c>

00:37:01.670 --> 00:37:01.680 align:start position:0%
boring but i mean you
 

00:37:01.680 --> 00:37:03.190 align:start position:0%
boring but i mean you
worthwhile<00:37:02.079><c> thinking</c><00:37:02.320><c> about</c><00:37:02.880><c> you</c><00:37:02.960><c> know</c><00:37:03.119><c> if</c>

00:37:03.190 --> 00:37:03.200 align:start position:0%
worthwhile thinking about you know if
 

00:37:03.200 --> 00:37:05.349 align:start position:0%
worthwhile thinking about you know if
you<00:37:03.280><c> do</c><00:37:03.440><c> an</c><00:37:03.520><c> acquire</c>

00:37:05.349 --> 00:37:05.359 align:start position:0%
you do an acquire
 

00:37:05.359 --> 00:37:08.630 align:start position:0%
you do an acquire
you<00:37:05.440><c> know</c><00:37:06.320><c> a</c><00:37:06.839><c> lock</c><00:37:07.680><c> and</c><00:37:08.000><c> so</c><00:37:08.160><c> you</c><00:37:08.320><c> start</c><00:37:08.560><c> the</c>

00:37:08.630 --> 00:37:08.640 align:start position:0%
you know a lock and so you start the
 

00:37:08.640 --> 00:37:09.510 align:start position:0%
you know a lock and so you start the
critical<00:37:09.040><c> section</c>

00:37:09.510 --> 00:37:09.520 align:start position:0%
critical section
 

00:37:09.520 --> 00:37:11.270 align:start position:0%
critical section
and<00:37:09.760><c> in</c><00:37:09.920><c> the</c><00:37:10.000><c> critical</c><00:37:10.400><c> section</c><00:37:10.880><c> you</c><00:37:11.119><c> do</c>

00:37:11.270 --> 00:37:11.280 align:start position:0%
and in the critical section you do
 

00:37:11.280 --> 00:37:13.510 align:start position:0%
and in the critical section you do
another<00:37:11.599><c> acquire</c>

00:37:13.510 --> 00:37:13.520 align:start position:0%
another acquire
 

00:37:13.520 --> 00:37:16.870 align:start position:0%
another acquire
of<00:37:13.760><c> the</c><00:37:13.839><c> same</c><00:37:14.079><c> lock</c>

00:37:16.870 --> 00:37:16.880 align:start position:0%
 
 

00:37:16.880 --> 00:37:20.230 align:start position:0%
 
what<00:37:17.040><c> will</c><00:37:17.200><c> happen</c>

00:37:20.230 --> 00:37:20.240 align:start position:0%
 
 

00:37:20.240 --> 00:37:29.589 align:start position:0%
 
can<00:37:20.400><c> the</c><00:37:20.560><c> second</c><00:37:20.880><c> acquirer</c><00:37:21.359><c> succeed</c>

00:37:29.589 --> 00:37:29.599 align:start position:0%
 
 

00:37:29.599 --> 00:37:31.430 align:start position:0%
 
well<00:37:30.079><c> with</c><00:37:30.320><c> the</c><00:37:30.400><c> spec</c><00:37:30.720><c> that</c><00:37:30.800><c> we've</c><00:37:31.040><c> given</c>

00:37:31.430 --> 00:37:31.440 align:start position:0%
well with the spec that we've given
 

00:37:31.440 --> 00:37:33.190 align:start position:0%
well with the spec that we've given
early<00:37:31.760><c> on</c><00:37:32.240><c> uh</c><00:37:32.720><c> you</c><00:37:32.880><c> know</c>

00:37:33.190 --> 00:37:33.200 align:start position:0%
early on uh you know
 

00:37:33.200 --> 00:37:34.790 align:start position:0%
early on uh you know
this<00:37:33.440><c> should</c><00:37:33.599><c> be</c><00:37:33.839><c> not</c><00:37:34.079><c> allowed</c><00:37:34.560><c> and</c><00:37:34.640><c> so</c>

00:37:34.790 --> 00:37:34.800 align:start position:0%
this should be not allowed and so
 

00:37:34.800 --> 00:37:37.109 align:start position:0%
this should be not allowed and so
basically<00:37:35.200><c> the</c><00:37:35.520><c> second</c><00:37:35.839><c> acquirer</c><00:37:36.320><c> must</c><00:37:36.560><c> block</c>

00:37:37.109 --> 00:37:37.119 align:start position:0%
basically the second acquirer must block
 

00:37:37.119 --> 00:37:39.430 align:start position:0%
basically the second acquirer must block
until<00:37:37.920><c> the</c><00:37:38.079><c> first</c><00:37:38.320><c> acquire</c><00:37:38.800><c> release</c><00:37:39.119><c> the</c><00:37:39.200><c> lock</c>

00:37:39.430 --> 00:37:39.440 align:start position:0%
until the first acquire release the lock
 

00:37:39.440 --> 00:37:40.390 align:start position:0%
until the first acquire release the lock
but<00:37:39.599><c> that</c><00:37:39.760><c> was</c>

00:37:40.390 --> 00:37:40.400 align:start position:0%
but that was
 

00:37:40.400 --> 00:37:42.230 align:start position:0%
but that was
you<00:37:40.560><c> know</c><00:37:40.640><c> the</c><00:37:40.800><c> process</c><00:37:41.200><c> itself</c><00:37:41.599><c> so</c><00:37:41.839><c> basically</c>

00:37:42.230 --> 00:37:42.240 align:start position:0%
you know the process itself so basically
 

00:37:42.240 --> 00:37:46.870 align:start position:0%
you know the process itself so basically
this<00:37:42.400><c> resulted</c><00:37:42.960><c> in</c><00:37:42.960><c> a</c><00:37:43.040><c> deadlock</c>

00:37:46.870 --> 00:37:46.880 align:start position:0%
 
 

00:37:46.880 --> 00:37:48.390 align:start position:0%
 
now<00:37:47.040><c> this</c><00:37:47.200><c> is</c><00:37:47.359><c> a</c><00:37:47.440><c> trivial</c><00:37:47.920><c> example</c><00:37:48.240><c> of</c><00:37:48.320><c> a</c>

00:37:48.390 --> 00:37:48.400 align:start position:0%
now this is a trivial example of a
 

00:37:48.400 --> 00:37:50.069 align:start position:0%
now this is a trivial example of a
deadlock<00:37:49.040><c> uh</c><00:37:49.440><c> maybe</c><00:37:49.760><c> now</c><00:37:49.920><c> there's</c>

00:37:50.069 --> 00:37:50.079 align:start position:0%
deadlock uh maybe now there's
 

00:37:50.079 --> 00:37:51.270 align:start position:0%
deadlock uh maybe now there's
interesting<00:37:50.400><c> in</c><00:37:50.480><c> fact</c><00:37:50.640><c> this</c><00:37:50.800><c> is</c><00:37:50.880><c> a</c><00:37:50.960><c> deadlock</c>

00:37:51.270 --> 00:37:51.280 align:start position:0%
interesting in fact this is a deadlock
 

00:37:51.280 --> 00:37:53.829 align:start position:0%
interesting in fact this is a deadlock
that<00:37:51.440><c> xv6</c><00:37:52.000><c> detects</c><00:37:52.480><c> you</c><00:37:52.640><c> know</c><00:37:52.800><c> because</c><00:37:53.119><c> when</c>

00:37:53.829 --> 00:37:53.839 align:start position:0%
that xv6 detects you know because when
 

00:37:53.839 --> 00:37:55.510 align:start position:0%
that xv6 detects you know because when
it<00:37:54.000><c> sees</c><00:37:54.320><c> that</c><00:37:54.480><c> the</c><00:37:54.560><c> same</c><00:37:54.800><c> process</c><00:37:55.119><c> requires</c>

00:37:55.510 --> 00:37:55.520 align:start position:0%
it sees that the same process requires
 

00:37:55.520 --> 00:37:57.750 align:start position:0%
it sees that the same process requires
the<00:37:55.599><c> same</c><00:37:55.839><c> walk</c><00:37:56.079><c> again</c><00:37:56.800><c> uh</c><00:37:57.040><c> it</c><00:37:57.200><c> actually</c>

00:37:57.750 --> 00:37:57.760 align:start position:0%
the same walk again uh it actually
 

00:37:57.760 --> 00:38:00.390 align:start position:0%
the same walk again uh it actually
causes<00:37:58.079><c> a</c><00:37:58.240><c> panic</c><00:37:59.599><c> the</c><00:37:59.760><c> more</c><00:38:00.000><c> interesting</c>

00:38:00.390 --> 00:38:00.400 align:start position:0%
causes a panic the more interesting
 

00:38:00.400 --> 00:38:01.190 align:start position:0%
causes a panic the more interesting
cases<00:38:00.800><c> are</c>

00:38:01.190 --> 00:38:01.200 align:start position:0%
cases are
 

00:38:01.200 --> 00:38:03.910 align:start position:0%
cases are
when<00:38:01.680><c> multiple</c><00:38:02.160><c> locks</c><00:38:02.480><c> are</c><00:38:02.640><c> involved</c><00:38:03.760><c> so</c>

00:38:03.910 --> 00:38:03.920 align:start position:0%
when multiple locks are involved so
 

00:38:03.920 --> 00:38:04.550 align:start position:0%
when multiple locks are involved so
let's

00:38:04.550 --> 00:38:04.560 align:start position:0%
let's
 

00:38:04.560 --> 00:38:07.510 align:start position:0%
let's
go<00:38:04.720><c> to</c><00:38:04.960><c> our</c><00:38:05.760><c> previous</c><00:38:06.240><c> example</c><00:38:06.960><c> let's</c><00:38:07.119><c> say</c><00:38:07.359><c> we</c>

00:38:07.510 --> 00:38:07.520 align:start position:0%
go to our previous example let's say we
 

00:38:07.520 --> 00:38:08.550 align:start position:0%
go to our previous example let's say we
have<00:38:07.599><c> the</c><00:38:07.760><c> following</c>

00:38:08.550 --> 00:38:08.560 align:start position:0%
have the following
 

00:38:08.560 --> 00:38:12.150 align:start position:0%
have the following
uh<00:38:09.839><c> we</c><00:38:10.000><c> have</c><00:38:10.160><c> core</c><00:38:10.400><c> one</c><00:38:11.520><c> or</c><00:38:11.680><c> maybe</c>

00:38:12.150 --> 00:38:12.160 align:start position:0%
uh we have core one or maybe
 

00:38:12.160 --> 00:38:16.230 align:start position:0%
uh we have core one or maybe
cpu<00:38:12.640><c> one</c>

00:38:16.230 --> 00:38:16.240 align:start position:0%
 
 

00:38:16.240 --> 00:38:19.910 align:start position:0%
 
we<00:38:16.480><c> have</c><00:38:16.560><c> cpu</c><00:38:17.040><c> two</c>

00:38:19.910 --> 00:38:19.920 align:start position:0%
 
 

00:38:19.920 --> 00:38:22.950 align:start position:0%
 
and<00:38:20.160><c> cpu</c><00:38:20.640><c> 1</c><00:38:21.200><c> you</c><00:38:21.359><c> know</c><00:38:21.599><c> executes</c>

00:38:22.950 --> 00:38:22.960 align:start position:0%
and cpu 1 you know executes
 

00:38:22.960 --> 00:38:27.349 align:start position:0%
and cpu 1 you know executes
vname<00:38:25.320><c> directory1x</c>

00:38:27.349 --> 00:38:27.359 align:start position:0%
vname directory1x
 

00:38:27.359 --> 00:38:33.270 align:start position:0%
vname directory1x
to<00:38:27.839><c> directory2</c><00:38:30.839><c> y</c>

00:38:33.270 --> 00:38:33.280 align:start position:0%
to directory2 y
 

00:38:33.280 --> 00:38:36.790 align:start position:0%
to directory2 y
and<00:38:33.520><c> cpu</c><00:38:34.000><c> 2</c><00:38:34.480><c> executes</c><00:38:35.200><c> at</c><00:38:35.359><c> the</c><00:38:35.440><c> same</c><00:38:35.680><c> time</c>

00:38:36.790 --> 00:38:36.800 align:start position:0%
and cpu 2 executes at the same time
 

00:38:36.800 --> 00:38:41.270 align:start position:0%
and cpu 2 executes at the same time
uh<00:38:37.280><c> rename</c>

00:38:41.270 --> 00:38:41.280 align:start position:0%
 
 

00:38:41.280 --> 00:38:43.829 align:start position:0%
 
uh<00:38:42.640><c> in</c><00:38:42.800><c> the</c><00:38:42.960><c> other</c><00:38:43.119><c> way</c><00:38:43.359><c> in</c><00:38:43.440><c> the</c><00:38:43.599><c> other</c>

00:38:43.829 --> 00:38:43.839 align:start position:0%
uh in the other way in the other
 

00:38:43.839 --> 00:38:44.550 align:start position:0%
uh in the other way in the other
direction

00:38:44.550 --> 00:38:44.560 align:start position:0%
direction
 

00:38:44.560 --> 00:38:47.829 align:start position:0%
direction
you<00:38:44.640><c> know</c><00:38:44.800><c> d2</c><00:38:45.599><c> a</c><00:38:46.640><c> to</c>

00:38:47.829 --> 00:38:47.839 align:start position:0%
you know d2 a to
 

00:38:47.839 --> 00:38:51.430 align:start position:0%
you know d2 a to
the<00:38:48.320><c> one</c><00:38:50.079><c> you</c><00:38:50.240><c> know</c><00:38:50.320><c> why</c><00:38:50.480><c> i</c><00:38:50.560><c> say</c><00:38:50.800><c> b</c>

00:38:51.430 --> 00:38:51.440 align:start position:0%
the one you know why i say b
 

00:38:51.440 --> 00:38:53.990 align:start position:0%
the one you know why i say b
just<00:38:51.680><c> to</c><00:38:52.000><c> make</c><00:38:52.160><c> the</c><00:38:52.320><c> names</c><00:38:52.640><c> different</c><00:38:53.599><c> so</c><00:38:53.920><c> the</c>

00:38:53.990 --> 00:38:54.000 align:start position:0%
just to make the names different so the
 

00:38:54.000 --> 00:38:56.069 align:start position:0%
just to make the names different so the
critical

00:38:56.069 --> 00:38:56.079 align:start position:0%
critical
 

00:38:56.079 --> 00:38:59.109 align:start position:0%
critical
thing<00:38:56.240><c> to</c><00:38:56.320><c> observe</c><00:38:56.720><c> here</c><00:38:56.960><c> is</c><00:38:57.200><c> that</c><00:38:58.000><c> cpu1</c><00:38:59.040><c> you</c>

00:38:59.109 --> 00:38:59.119 align:start position:0%
thing to observe here is that cpu1 you
 

00:38:59.119 --> 00:39:02.150 align:start position:0%
thing to observe here is that cpu1 you
know<00:38:59.359><c> runs</c><00:38:59.760><c> a</c><00:38:59.920><c> rename</c><00:39:00.320><c> from</c><00:39:00.480><c> d1</c><00:39:00.800><c> to</c><00:39:00.960><c> d2</c>

00:39:02.150 --> 00:39:02.160 align:start position:0%
know runs a rename from d1 to d2
 

00:39:02.160 --> 00:39:05.190 align:start position:0%
know runs a rename from d1 to d2
and<00:39:02.720><c> cpu</c><00:39:03.440><c> uh</c><00:39:03.920><c> two</c><00:39:04.160><c> does</c><00:39:04.400><c> exactly</c><00:39:04.720><c> the</c><00:39:04.880><c> opposite</c>

00:39:05.190 --> 00:39:05.200 align:start position:0%
and cpu uh two does exactly the opposite
 

00:39:05.200 --> 00:39:08.950 align:start position:0%
and cpu uh two does exactly the opposite
that<00:39:05.359><c> doesn't</c><00:39:05.599><c> rename</c><00:39:06.000><c> from</c><00:39:06.160><c> d2</c><00:39:06.640><c> to</c><00:39:06.800><c> d1</c>

00:39:08.950 --> 00:39:08.960 align:start position:0%
that doesn't rename from d2 to d1
 

00:39:08.960 --> 00:39:10.630 align:start position:0%
that doesn't rename from d2 to d1
so<00:39:09.119><c> let's</c><00:39:09.359><c> assume</c><00:39:09.920><c> that</c><00:39:10.240><c> we</c><00:39:10.400><c> actually</c>

00:39:10.630 --> 00:39:10.640 align:start position:0%
so let's assume that we actually
 

00:39:10.640 --> 00:39:12.470 align:start position:0%
so let's assume that we actually
acquired<00:39:11.119><c> the</c><00:39:11.280><c> locks</c><00:39:11.680><c> in</c><00:39:11.760><c> the</c><00:39:11.920><c> order</c><00:39:12.160><c> of</c><00:39:12.240><c> their</c>

00:39:12.470 --> 00:39:12.480 align:start position:0%
acquired the locks in the order of their
 

00:39:12.480 --> 00:39:13.349 align:start position:0%
acquired the locks in the order of their
arguments

00:39:13.349 --> 00:39:13.359 align:start position:0%
arguments
 

00:39:13.359 --> 00:39:16.150 align:start position:0%
arguments
and<00:39:13.520><c> so</c><00:39:13.680><c> what</c><00:39:13.839><c> will</c><00:39:14.079><c> happen</c><00:39:14.400><c> rick</c><00:39:14.720><c> is</c><00:39:14.880><c> that</c><00:39:15.680><c> uh</c>

00:39:16.150 --> 00:39:16.160 align:start position:0%
and so what will happen rick is that uh
 

00:39:16.160 --> 00:39:17.109 align:start position:0%
and so what will happen rick is that uh
in<00:39:16.320><c> this</c><00:39:16.560><c> case</c>

00:39:17.109 --> 00:39:17.119 align:start position:0%
in this case
 

00:39:17.119 --> 00:39:18.790 align:start position:0%
in this case
you<00:39:17.200><c> know</c><00:39:17.359><c> we'll</c><00:39:17.599><c> acquire</c><00:39:17.920><c> both</c><00:39:18.240><c> locks</c><00:39:18.640><c> we</c>

00:39:18.790 --> 00:39:18.800 align:start position:0%
you know we'll acquire both locks we
 

00:39:18.800 --> 00:39:20.470 align:start position:0%
you know we'll acquire both locks we
know<00:39:19.040><c> from</c><00:39:19.280><c> our</c><00:39:19.440><c> previous</c><00:39:19.760><c> example</c><00:39:20.079><c> that</c><00:39:20.320><c> is</c>

00:39:20.470 --> 00:39:20.480 align:start position:0%
know from our previous example that is
 

00:39:20.480 --> 00:39:20.950 align:start position:0%
know from our previous example that is
actually

00:39:20.950 --> 00:39:20.960 align:start position:0%
actually
 

00:39:20.960 --> 00:39:25.190 align:start position:0%
actually
important<00:39:22.000><c> so</c><00:39:22.240><c> we'll</c><00:39:22.320><c> acquire</c>

00:39:25.190 --> 00:39:25.200 align:start position:0%
 
 

00:39:25.200 --> 00:39:28.550 align:start position:0%
 
v1<00:39:26.839><c> lock</c>

00:39:28.550 --> 00:39:28.560 align:start position:0%
v1 lock
 

00:39:28.560 --> 00:39:30.470 align:start position:0%
v1 lock
and<00:39:28.960><c> you</c><00:39:29.119><c> know</c><00:39:29.280><c> let's</c><00:39:29.440><c> say</c><00:39:29.599><c> they</c><00:39:29.839><c> really</c><00:39:30.160><c> run</c>

00:39:30.470 --> 00:39:30.480 align:start position:0%
and you know let's say they really run
 

00:39:30.480 --> 00:39:32.310 align:start position:0%
and you know let's say they really run
they're<00:39:30.640><c> truly</c><00:39:30.960><c> concurrent</c>

00:39:32.310 --> 00:39:32.320 align:start position:0%
they're truly concurrent
 

00:39:32.320 --> 00:39:34.150 align:start position:0%
they're truly concurrent
so<00:39:32.560><c> at</c><00:39:32.640><c> that</c><00:39:32.800><c> point</c><00:39:33.040><c> you</c><00:39:33.200><c> know</c><00:39:33.359><c> this</c><00:39:33.599><c> other</c><00:39:33.760><c> guy</c>

00:39:34.150 --> 00:39:34.160 align:start position:0%
so at that point you know this other guy
 

00:39:34.160 --> 00:39:35.750 align:start position:0%
so at that point you know this other guy
might<00:39:34.400><c> actually</c><00:39:34.720><c> this</c><00:39:34.960><c> other</c><00:39:35.119><c> cpu</c><00:39:35.520><c> might</c>

00:39:35.750 --> 00:39:35.760 align:start position:0%
might actually this other cpu might
 

00:39:35.760 --> 00:39:37.910 align:start position:0%
might actually this other cpu might
acquire

00:39:37.910 --> 00:39:37.920 align:start position:0%
acquire
 

00:39:37.920 --> 00:39:40.829 align:start position:0%
acquire
d2<00:39:38.480><c> first</c><00:39:39.119><c> because</c><00:39:39.359><c> that</c><00:39:39.680><c> is</c><00:39:40.000><c> its</c><00:39:40.320><c> first</c>

00:39:40.829 --> 00:39:40.839 align:start position:0%
d2 first because that is its first
 

00:39:40.839 --> 00:39:43.109 align:start position:0%
d2 first because that is its first
argument

00:39:43.109 --> 00:39:43.119 align:start position:0%
argument
 

00:39:43.119 --> 00:39:45.829 align:start position:0%
argument
and<00:39:43.280><c> now</c><00:39:43.599><c> of</c><00:39:43.760><c> course</c><00:39:44.079><c> d2</c><00:39:44.560><c> d1</c><00:39:45.119><c> wants</c><00:39:45.359><c> to</c><00:39:45.440><c> acquire</c>

00:39:45.829 --> 00:39:45.839 align:start position:0%
and now of course d2 d1 wants to acquire
 

00:39:45.839 --> 00:39:48.470 align:start position:0%
and now of course d2 d1 wants to acquire
d2

00:39:48.470 --> 00:39:48.480 align:start position:0%
 
 

00:39:48.480 --> 00:39:51.510 align:start position:0%
 
so<00:39:48.640><c> i'll</c><00:39:48.880><c> try</c><00:39:49.119><c> to</c><00:39:49.440><c> acquire</c><00:39:49.920><c> d2</c><00:39:51.200><c> will</c><00:39:51.440><c> it</c>

00:39:51.510 --> 00:39:51.520 align:start position:0%
so i'll try to acquire d2 will it
 

00:39:51.520 --> 00:39:53.349 align:start position:0%
so i'll try to acquire d2 will it
succeed

00:39:53.349 --> 00:39:53.359 align:start position:0%
succeed
 

00:39:53.359 --> 00:39:55.030 align:start position:0%
succeed
i<00:39:53.680><c> won't</c><00:39:53.920><c> succeed</c><00:39:54.320><c> because</c><00:39:54.640><c> you</c><00:39:54.720><c> know</c><00:39:54.880><c> the</c>

00:39:55.030 --> 00:39:55.040 align:start position:0%
i won't succeed because you know the
 

00:39:55.040 --> 00:39:57.430 align:start position:0%
i won't succeed because you know the
other<00:39:55.200><c> guy</c><00:39:55.920><c> you</c><00:39:56.000><c> know</c><00:39:56.240><c> actually</c><00:39:56.560><c> has</c><00:39:56.880><c> the</c><00:39:57.040><c> lock</c>

00:39:57.430 --> 00:39:57.440 align:start position:0%
other guy you know actually has the lock
 

00:39:57.440 --> 00:40:00.310 align:start position:0%
other guy you know actually has the lock
and<00:39:57.520><c> so</c><00:39:57.760><c> this</c><00:39:57.920><c> guy</c><00:39:58.240><c> will</c><00:39:58.400><c> stop</c><00:39:58.720><c> here</c><00:39:59.680><c> and</c><00:40:00.000><c> not</c>

00:40:00.310 --> 00:40:00.320 align:start position:0%
and so this guy will stop here and not
 

00:40:00.320 --> 00:40:01.430 align:start position:0%
and so this guy will stop here and not
proceed

00:40:01.430 --> 00:40:01.440 align:start position:0%
proceed
 

00:40:01.440 --> 00:40:04.150 align:start position:0%
proceed
now<00:40:01.599><c> let's</c><00:40:01.760><c> look</c><00:40:01.920><c> at</c><00:40:02.000><c> the</c><00:40:02.160><c> other</c><00:40:02.960><c> cpu</c><00:40:03.440><c> cpu2</c>

00:40:04.150 --> 00:40:04.160 align:start position:0%
now let's look at the other cpu cpu2
 

00:40:04.160 --> 00:40:05.270 align:start position:0%
now let's look at the other cpu cpu2
acquired<00:40:04.640><c> d2</c>

00:40:05.270 --> 00:40:05.280 align:start position:0%
acquired d2
 

00:40:05.280 --> 00:40:06.790 align:start position:0%
acquired d2
it's<00:40:05.440><c> not</c><00:40:05.599><c> going</c><00:40:05.680><c> to</c><00:40:05.760><c> require</c><00:40:06.079><c> d1</c><00:40:06.560><c> for</c><00:40:06.720><c> its</c>

00:40:06.790 --> 00:40:06.800 align:start position:0%
it's not going to require d1 for its
 

00:40:06.800 --> 00:40:08.470 align:start position:0%
it's not going to require d1 for its
secondary<00:40:07.200><c> argument</c>

00:40:08.470 --> 00:40:08.480 align:start position:0%
secondary argument
 

00:40:08.480 --> 00:40:10.790 align:start position:0%
secondary argument
he's<00:40:08.800><c> going</c><00:40:08.960><c> to</c><00:40:09.040><c> try</c><00:40:09.280><c> to</c><00:40:09.440><c> call</c><00:40:10.400><c> it's</c><00:40:10.560><c> going</c><00:40:10.720><c> to</c>

00:40:10.790 --> 00:40:10.800 align:start position:0%
he's going to try to call it's going to
 

00:40:10.800 --> 00:40:12.710 align:start position:0%
he's going to try to call it's going to
call<00:40:11.280><c> acquire</c><00:40:11.760><c> d1</c>

00:40:12.710 --> 00:40:12.720 align:start position:0%
call acquire d1
 

00:40:12.720 --> 00:40:14.950 align:start position:0%
call acquire d1
and<00:40:12.960><c> will</c><00:40:13.200><c> it</c><00:40:13.359><c> be</c><00:40:13.520><c> able</c><00:40:13.760><c> to</c><00:40:13.839><c> proceed</c><00:40:14.560><c> no</c><00:40:14.800><c> it</c>

00:40:14.950 --> 00:40:14.960 align:start position:0%
and will it be able to proceed no it
 

00:40:14.960 --> 00:40:16.230 align:start position:0%
and will it be able to proceed no it
won't<00:40:15.200><c> be</c><00:40:15.359><c> able</c><00:40:15.520><c> to</c><00:40:15.680><c> proceed</c>

00:40:16.230 --> 00:40:16.240 align:start position:0%
won't be able to proceed
 

00:40:16.240 --> 00:40:19.349 align:start position:0%
won't be able to proceed
right<00:40:16.560><c> because</c><00:40:17.440><c> the</c><00:40:18.160><c> cpu</c><00:40:18.560><c> one</c><00:40:18.880><c> actually</c><00:40:19.119><c> has</c>

00:40:19.349 --> 00:40:19.359 align:start position:0%
right because the cpu one actually has
 

00:40:19.359 --> 00:40:20.950 align:start position:0%
right because the cpu one actually has
to<00:40:19.520><c> walk</c><00:40:19.760><c> in</c><00:40:19.839><c> d1</c>

00:40:20.950 --> 00:40:20.960 align:start position:0%
to walk in d1
 

00:40:20.960 --> 00:40:22.630 align:start position:0%
to walk in d1
and<00:40:21.200><c> so</c><00:40:21.359><c> here</c><00:40:21.680><c> we</c><00:40:21.920><c> you</c><00:40:22.000><c> know</c><00:40:22.079><c> sometimes</c><00:40:22.480><c> this</c>

00:40:22.630 --> 00:40:22.640 align:start position:0%
and so here we you know sometimes this
 

00:40:22.640 --> 00:40:24.069 align:start position:0%
and so here we you know sometimes this
is<00:40:22.720><c> called</c><00:40:22.960><c> the</c><00:40:23.040><c> deadly</c><00:40:23.440><c> embrace</c>

00:40:24.069 --> 00:40:24.079 align:start position:0%
is called the deadly embrace
 

00:40:24.079 --> 00:40:27.349 align:start position:0%
is called the deadly embrace
you<00:40:24.160><c> know</c><00:40:24.560><c> uh</c><00:40:25.920><c> where</c><00:40:26.400><c> you</c><00:40:26.560><c> know</c><00:40:26.720><c> the</c>

00:40:27.349 --> 00:40:27.359 align:start position:0%
you know uh where you know the
 

00:40:27.359 --> 00:40:29.030 align:start position:0%
you know uh where you know the
because<00:40:27.599><c> in</c><00:40:27.760><c> the</c><00:40:27.839><c> way</c><00:40:28.079><c> we</c><00:40:28.319><c> acquired</c><00:40:28.960><c> the</c>

00:40:29.030 --> 00:40:29.040 align:start position:0%
because in the way we acquired the
 

00:40:29.040 --> 00:40:30.950 align:start position:0%
because in the way we acquired the
ordering<00:40:29.440><c> which</c><00:40:29.680><c> we</c><00:40:30.240><c> ordered</c><00:40:30.480><c> which</c><00:40:30.640><c> we</c><00:40:30.800><c> quite</c>

00:40:30.950 --> 00:40:30.960 align:start position:0%
ordering which we ordered which we quite
 

00:40:30.960 --> 00:40:41.030 align:start position:0%
ordering which we ordered which we quite
unlocked<00:40:31.280><c> results</c><00:40:31.760><c> actually</c><00:40:32.079><c> in</c><00:40:36.839><c> deadlock</c>

00:40:41.030 --> 00:40:41.040 align:start position:0%
 
 

00:40:41.040 --> 00:40:45.589 align:start position:0%
 
does<00:40:41.200><c> that</c><00:40:41.359><c> make</c><00:40:41.599><c> sense</c><00:40:42.480><c> this</c><00:40:42.720><c> example</c>

00:40:45.589 --> 00:40:45.599 align:start position:0%
 
 

00:40:45.599 --> 00:40:46.790 align:start position:0%
 
this<00:40:45.760><c> is</c><00:40:45.920><c> like</c><00:40:46.079><c> a</c><00:40:46.079><c> little</c><00:40:46.240><c> bit</c><00:40:46.319><c> of</c><00:40:46.560><c> a</c><00:40:46.640><c> more</c>

00:40:46.790 --> 00:40:46.800 align:start position:0%
this is like a little bit of a more
 

00:40:46.800 --> 00:40:48.390 align:start position:0%
this is like a little bit of a more
endangering<00:40:47.359><c> example</c><00:40:47.599><c> correct</c><00:40:47.920><c> of</c><00:40:48.000><c> deadlock</c>

00:40:48.390 --> 00:40:48.400 align:start position:0%
endangering example correct of deadlock
 

00:40:48.400 --> 00:40:50.150 align:start position:0%
endangering example correct of deadlock
you<00:40:48.480><c> know</c><00:40:48.640><c> it's</c><00:40:48.800><c> not</c><00:40:48.960><c> an</c><00:40:49.119><c> obvious</c>

00:40:50.150 --> 00:40:50.160 align:start position:0%
you know it's not an obvious
 

00:40:50.160 --> 00:40:52.470 align:start position:0%
you know it's not an obvious
problem<00:40:50.880><c> and</c><00:40:51.040><c> the</c><00:40:51.119><c> solution</c><00:40:51.520><c> turns</c><00:40:51.760><c> out</c><00:40:52.400><c> in</c>

00:40:52.470 --> 00:40:52.480 align:start position:0%
problem and the solution turns out in
 

00:40:52.480 --> 00:40:56.230 align:start position:0%
problem and the solution turns out in
some<00:40:52.720><c> sense</c><00:40:52.960><c> reasonably</c><00:40:53.280><c> simple</c>

00:40:56.230 --> 00:40:56.240 align:start position:0%
 
 

00:40:56.240 --> 00:40:57.750 align:start position:0%
 
the<00:40:56.400><c> solution</c><00:40:56.880><c> is</c><00:40:57.040><c> that</c><00:40:57.280><c> you</c><00:40:57.440><c> know</c><00:40:57.520><c> if</c><00:40:57.599><c> you</c>

00:40:57.750 --> 00:40:57.760 align:start position:0%
the solution is that you know if you
 

00:40:57.760 --> 00:41:00.069 align:start position:0%
the solution is that you know if you
have<00:40:57.839><c> multiple</c><00:40:58.319><c> locks</c><00:40:59.200><c> then</c>

00:41:00.069 --> 00:41:00.079 align:start position:0%
have multiple locks then
 

00:41:00.079 --> 00:41:03.910 align:start position:0%
have multiple locks then
you<00:41:00.240><c> have</c><00:41:00.400><c> to</c><00:41:00.560><c> order</c><00:41:00.800><c> the</c><00:41:00.960><c> locks</c>

00:41:03.910 --> 00:41:03.920 align:start position:0%
 
 

00:41:03.920 --> 00:41:07.109 align:start position:0%
 
and<00:41:04.400><c> all</c><00:41:04.839><c> operations</c><00:41:06.160><c> have</c><00:41:06.400><c> to</c><00:41:06.560><c> acquire</c>

00:41:07.109 --> 00:41:07.119 align:start position:0%
and all operations have to acquire
 

00:41:07.119 --> 00:41:17.430 align:start position:0%
and all operations have to acquire
locks<00:41:07.440><c> in</c><00:41:07.520><c> that</c><00:41:07.760><c> order</c>

00:41:17.430 --> 00:41:17.440 align:start position:0%
 
 

00:41:17.440 --> 00:41:19.109 align:start position:0%
 
so<00:41:17.680><c> if</c><00:41:17.839><c> you're</c><00:41:17.920><c> a</c><00:41:18.000><c> system</c><00:41:18.319><c> designer</c><00:41:18.800><c> you</c><00:41:18.960><c> have</c>

00:41:19.109 --> 00:41:19.119 align:start position:0%
so if you're a system designer you have
 

00:41:19.119 --> 00:41:21.109 align:start position:0%
so if you're a system designer you have
to<00:41:19.200><c> decide</c><00:41:19.520><c> you</c><00:41:19.680><c> know</c><00:41:19.839><c> what</c><00:41:20.000><c> the</c>

00:41:21.109 --> 00:41:21.119 align:start position:0%
to decide you know what the
 

00:41:21.119 --> 00:41:24.309 align:start position:0%
to decide you know what the
global<00:41:21.520><c> order</c><00:41:22.000><c> is</c><00:41:22.240><c> for</c><00:41:22.800><c> all</c><00:41:23.040><c> log</c><00:41:23.359><c> objects</c>

00:41:24.309 --> 00:41:24.319 align:start position:0%
global order is for all log objects
 

00:41:24.319 --> 00:41:26.630 align:start position:0%
global order is for all log objects
and<00:41:25.119><c> so</c><00:41:25.359><c> for</c><00:41:25.440><c> example</c><00:41:25.760><c> in</c><00:41:25.839><c> this</c><00:41:26.000><c> case</c><00:41:26.240><c> we</c><00:41:26.480><c> may</c>

00:41:26.630 --> 00:41:26.640 align:start position:0%
and so for example in this case we may
 

00:41:26.640 --> 00:41:27.990 align:start position:0%
and so for example in this case we may
want<00:41:26.800><c> to</c><00:41:26.880><c> decide</c><00:41:27.280><c> that</c><00:41:27.440><c> d1</c>

00:41:27.990 --> 00:41:28.000 align:start position:0%
want to decide that d1
 

00:41:28.000 --> 00:41:30.950 align:start position:0%
want to decide that d1
should<00:41:28.160><c> be</c><00:41:28.319><c> always</c><00:41:29.359><c> ordered</c><00:41:29.680><c> before</c><00:41:30.000><c> d2</c><00:41:30.800><c> and</c>

00:41:30.950 --> 00:41:30.960 align:start position:0%
should be always ordered before d2 and
 

00:41:30.960 --> 00:41:32.630 align:start position:0%
should be always ordered before d2 and
that<00:41:31.119><c> means</c><00:41:31.440><c> that</c>

00:41:32.630 --> 00:41:32.640 align:start position:0%
that means that
 

00:41:32.640 --> 00:41:34.710 align:start position:0%
that means that
when<00:41:32.800><c> we</c><00:41:32.960><c> execute</c><00:41:33.359><c> a</c><00:41:33.440><c> rename</c><00:41:34.240><c> the</c><00:41:34.400><c> rule</c><00:41:34.640><c> of</c>

00:41:34.710 --> 00:41:34.720 align:start position:0%
when we execute a rename the rule of
 

00:41:34.720 --> 00:41:36.710 align:start position:0%
when we execute a rename the rule of
life<00:41:35.040><c> is</c><00:41:35.520><c> we</c><00:41:35.680><c> always</c><00:41:36.079><c> acquire</c>

00:41:36.710 --> 00:41:36.720 align:start position:0%
life is we always acquire
 

00:41:36.720 --> 00:41:40.150 align:start position:0%
life is we always acquire
uh<00:41:37.040><c> the</c><00:41:37.280><c> lower</c><00:41:37.680><c> numbered</c><00:41:38.319><c> uh</c>

00:41:40.150 --> 00:41:40.160 align:start position:0%
uh the lower numbered uh
 

00:41:40.160 --> 00:41:42.309 align:start position:0%
uh the lower numbered uh
directories<00:41:40.720><c> first</c><00:41:41.200><c> before</c><00:41:41.599><c> we</c><00:41:41.839><c> acquire</c><00:41:42.160><c> the</c>

00:41:42.309 --> 00:41:42.319 align:start position:0%
directories first before we acquire the
 

00:41:42.319 --> 00:41:45.510 align:start position:0%
directories first before we acquire the
higher<00:41:42.880><c> order</c><00:41:43.200><c> directory</c><00:41:43.599><c> numbers</c>

00:41:45.510 --> 00:41:45.520 align:start position:0%
higher order directory numbers
 

00:41:45.520 --> 00:41:48.069 align:start position:0%
higher order directory numbers
and<00:41:45.599><c> that</c><00:41:45.839><c> will</c><00:41:46.079><c> ensure</c><00:41:46.640><c> that</c><00:41:46.880><c> basically</c><00:41:47.760><c> uh</c>

00:41:48.069 --> 00:41:48.079 align:start position:0%
and that will ensure that basically uh
 

00:41:48.079 --> 00:41:49.190 align:start position:0%
and that will ensure that basically uh
there's<00:41:48.319><c> a</c><00:41:48.400><c> global</c><00:41:48.720><c> order</c>

00:41:49.190 --> 00:41:49.200 align:start position:0%
there's a global order
 

00:41:49.200 --> 00:41:51.109 align:start position:0%
there's a global order
and<00:41:49.680><c> you</c><00:41:49.839><c> know</c><00:41:50.000><c> this</c><00:41:50.160><c> particular</c><00:41:50.640><c> case</c><00:41:50.960><c> you</c>

00:41:51.109 --> 00:41:51.119 align:start position:0%
and you know this particular case you
 

00:41:51.119 --> 00:41:52.710 align:start position:0%
and you know this particular case you
just<00:41:51.280><c> cannot</c><00:41:51.680><c> happen</c>

00:41:52.710 --> 00:41:52.720 align:start position:0%
just cannot happen
 

00:41:52.720 --> 00:41:55.829 align:start position:0%
just cannot happen
uh<00:41:53.760><c> because</c><00:41:54.240><c> you</c><00:41:54.400><c> know</c><00:41:54.560><c> the</c><00:41:55.040><c> block</c><00:41:55.440><c> order</c><00:41:55.760><c> is</c>

00:41:55.829 --> 00:41:55.839 align:start position:0%
uh because you know the block order is
 

00:41:55.839 --> 00:41:56.550 align:start position:0%
uh because you know the block order is
going<00:41:55.920><c> to</c><00:41:56.000><c> be</c><00:41:56.160><c> then</c>

00:41:56.550 --> 00:41:56.560 align:start position:0%
going to be then
 

00:41:56.560 --> 00:41:59.670 align:start position:0%
going to be then
for<00:41:57.280><c> v1</c><00:41:58.160><c> d2</c><00:41:58.560><c> for</c><00:41:58.720><c> this</c><00:41:58.880><c> guy</c>

00:41:59.670 --> 00:41:59.680 align:start position:0%
for v1 d2 for this guy
 

00:41:59.680 --> 00:42:01.510 align:start position:0%
for v1 d2 for this guy
and<00:42:00.079><c> this</c><00:42:00.319><c> guy</c><00:42:00.480><c> will</c><00:42:00.640><c> acquire</c><00:42:01.119><c> the</c><00:42:01.200><c> locks</c>

00:42:01.510 --> 00:42:01.520 align:start position:0%
and this guy will acquire the locks
 

00:42:01.520 --> 00:42:03.109 align:start position:0%
and this guy will acquire the locks
exactly<00:42:01.839><c> in</c><00:42:01.920><c> the</c><00:42:02.079><c> same</c><00:42:02.240><c> global</c><00:42:02.640><c> order</c><00:42:02.960><c> you</c>

00:42:03.109 --> 00:42:03.119 align:start position:0%
exactly in the same global order you
 

00:42:03.119 --> 00:42:04.470 align:start position:0%
exactly in the same global order you
know<00:42:03.280><c> d1</c><00:42:03.680><c> d2</c>

00:42:04.470 --> 00:42:04.480 align:start position:0%
know d1 d2
 

00:42:04.480 --> 00:42:06.470 align:start position:0%
know d1 d2
and<00:42:04.640><c> then</c><00:42:04.800><c> we</c><00:42:04.960><c> don't</c><00:42:05.200><c> have</c><00:42:05.839><c> this</c><00:42:06.000><c> deadline</c>

00:42:06.470 --> 00:42:06.480 align:start position:0%
and then we don't have this deadline
 

00:42:06.480 --> 00:42:09.510 align:start position:0%
and then we don't have this deadline
bridge

00:42:09.510 --> 00:42:09.520 align:start position:0%
 
 

00:42:09.520 --> 00:42:14.630 align:start position:0%
 
this<00:42:09.760><c> makes</c><00:42:10.000><c> sense</c>

00:42:14.630 --> 00:42:14.640 align:start position:0%
 
 

00:42:14.640 --> 00:42:22.069 align:start position:0%
 
any<00:42:14.880><c> questions</c><00:42:15.200><c> about</c><00:42:15.440><c> this</c>

00:42:22.069 --> 00:42:22.079 align:start position:0%
 
 

00:42:22.079 --> 00:42:24.390 align:start position:0%
 
so<00:42:22.240><c> this</c><00:42:22.560><c> uh</c><00:42:22.720><c> indicates</c><00:42:23.200><c> a</c><00:42:23.280><c> little</c><00:42:23.440><c> bit</c><00:42:23.520><c> of</c><00:42:23.680><c> a</c><00:42:24.240><c> a</c>

00:42:24.390 --> 00:42:24.400 align:start position:0%
so this uh indicates a little bit of a a
 

00:42:24.400 --> 00:42:25.829 align:start position:0%
so this uh indicates a little bit of a a
problem

00:42:25.829 --> 00:42:25.839 align:start position:0%
problem
 

00:42:25.839 --> 00:42:27.510 align:start position:0%
problem
even<00:42:26.000><c> though</c><00:42:26.240><c> like</c><00:42:26.400><c> okay</c><00:42:26.640><c> so</c><00:42:26.720><c> it</c><00:42:26.880><c> fixes</c><00:42:27.440><c> you</c>

00:42:27.510 --> 00:42:27.520 align:start position:0%
even though like okay so it fixes you
 

00:42:27.520 --> 00:42:29.030 align:start position:0%
even though like okay so it fixes you
know<00:42:27.680><c> this</c><00:42:27.839><c> sort</c><00:42:28.000><c> of</c><00:42:28.079><c> deadlock</c><00:42:28.480><c> problem</c><00:42:28.880><c> by</c>

00:42:29.030 --> 00:42:29.040 align:start position:0%
know this sort of deadlock problem by
 

00:42:29.040 --> 00:42:30.230 align:start position:0%
know this sort of deadlock problem by
having<00:42:29.359><c> global</c><00:42:29.680><c> order</c>

00:42:30.230 --> 00:42:30.240 align:start position:0%
having global order
 

00:42:30.240 --> 00:42:33.430 align:start position:0%
having global order
notice<00:42:30.880><c> this</c><00:42:31.359><c> order</c><00:42:31.680><c> is</c><00:42:31.760><c> global</c>

00:42:33.430 --> 00:42:33.440 align:start position:0%
notice this order is global
 

00:42:33.440 --> 00:42:37.030 align:start position:0%
notice this order is global
and<00:42:34.240><c> this</c><00:42:34.480><c> is</c><00:42:34.720><c> uh</c>

00:42:37.030 --> 00:42:37.040 align:start position:0%
 
 

00:42:37.040 --> 00:42:39.670 align:start position:0%
 
an<00:42:37.359><c> issue</c><00:42:37.599><c> a</c><00:42:37.680><c> little</c><00:42:37.920><c> bit</c><00:42:38.880><c> when</c><00:42:39.119><c> designing</c><00:42:39.599><c> a</c>

00:42:39.670 --> 00:42:39.680 align:start position:0%
an issue a little bit when designing a
 

00:42:39.680 --> 00:42:40.790 align:start position:0%
an issue a little bit when designing a
system<00:42:40.000><c> because</c>

00:42:40.790 --> 00:42:40.800 align:start position:0%
system because
 

00:42:40.800 --> 00:43:05.990 align:start position:0%
system because
um<00:42:41.599><c> hold</c><00:42:42.839><c> on</c>

00:43:05.990 --> 00:43:06.000 align:start position:0%
 
 

00:43:06.000 --> 00:43:08.630 align:start position:0%
 
uh<00:43:07.359><c> so</c><00:43:07.520><c> if</c><00:43:07.599><c> you</c><00:43:07.680><c> think</c><00:43:07.839><c> about</c><00:43:08.000><c> the</c><00:43:08.400><c> sort</c><00:43:08.560><c> of</c>

00:43:08.630 --> 00:43:08.640 align:start position:0%
uh so if you think about the sort of
 

00:43:08.640 --> 00:43:14.950 align:start position:0%
uh so if you think about the sort of
walk<00:43:10.839><c> ordering</c>

00:43:14.950 --> 00:43:14.960 align:start position:0%
 
 

00:43:14.960 --> 00:43:17.990 align:start position:0%
 
you<00:43:15.119><c> know</c><00:43:15.200><c> that</c><00:43:15.359><c> has</c><00:43:15.520><c> to</c><00:43:15.599><c> be</c><00:43:15.760><c> sort</c><00:43:15.920><c> of</c><00:43:16.000><c> global</c>

00:43:17.990 --> 00:43:18.000 align:start position:0%
you know that has to be sort of global
 

00:43:18.000 --> 00:43:21.670 align:start position:0%
you know that has to be sort of global
and<00:43:18.319><c> so</c><00:43:18.560><c> if</c><00:43:18.720><c> one</c><00:43:18.960><c> module</c><00:43:20.160><c> one</c><00:43:20.480><c> m</c><00:43:20.800><c> you</c><00:43:20.960><c> know</c>

00:43:21.670 --> 00:43:21.680 align:start position:0%
and so if one module one m you know
 

00:43:21.680 --> 00:43:25.670 align:start position:0%
and so if one module one m you know
calls<00:43:22.160><c> a</c><00:43:22.560><c> method</c><00:43:24.400><c> in</c><00:43:24.640><c> marshall</c>

00:43:25.670 --> 00:43:25.680 align:start position:0%
calls a method in marshall
 

00:43:25.680 --> 00:43:29.430 align:start position:0%
calls a method in marshall
two<00:43:27.599><c> um</c>

00:43:29.430 --> 00:43:29.440 align:start position:0%
two um
 

00:43:29.440 --> 00:43:31.990 align:start position:0%
two um
and<00:43:29.760><c> the</c><00:43:30.240><c> collar</c><00:43:30.720><c> you</c><00:43:30.880><c> know</c><00:43:31.040><c> and</c><00:43:31.280><c> one</c><00:43:31.520><c> g</c><00:43:31.920><c> you</c>

00:43:31.990 --> 00:43:32.000 align:start position:0%
and the collar you know and one g you
 

00:43:32.000 --> 00:43:32.790 align:start position:0%
and the collar you know and one g you
know<00:43:32.160><c> might</c><00:43:32.400><c> actually</c>

00:43:32.790 --> 00:43:32.800 align:start position:0%
know might actually
 

00:43:32.800 --> 00:43:34.710 align:start position:0%
know might actually
needs<00:43:33.040><c> to</c><00:43:33.119><c> be</c><00:43:33.280><c> aware</c><00:43:33.839><c> or</c><00:43:34.079><c> could</c><00:43:34.240><c> be</c><00:43:34.400><c> you</c><00:43:34.560><c> need</c>

00:43:34.710 --> 00:43:34.720 align:start position:0%
needs to be aware or could be you need
 

00:43:34.720 --> 00:43:37.030 align:start position:0%
needs to be aware or could be you need
to<00:43:34.800><c> be</c><00:43:34.960><c> aware</c><00:43:35.359><c> actually</c><00:43:35.680><c> or</c><00:43:35.920><c> what</c><00:43:36.240><c> locks</c>

00:43:37.030 --> 00:43:37.040 align:start position:0%
to be aware actually or what locks
 

00:43:37.040 --> 00:43:40.069 align:start position:0%
to be aware actually or what locks
f<00:43:37.839><c> acquires</c><00:43:38.319><c> award</c><00:43:38.720><c> walks</c><00:43:39.280><c> you</c><00:43:39.359><c> know</c><00:43:39.599><c> and</c><00:43:39.760><c> two</c>

00:43:40.069 --> 00:43:40.079 align:start position:0%
f acquires award walks you know and two
 

00:43:40.079 --> 00:43:42.630 align:start position:0%
f acquires award walks you know and two
uses

00:43:42.630 --> 00:43:42.640 align:start position:0%
 
 

00:43:42.640 --> 00:43:46.150 align:start position:0%
 
uh<00:43:43.359><c> because</c><00:43:44.079><c> uh</c><00:43:44.640><c> if</c><00:43:45.200><c> you</c><00:43:45.359><c> know</c><00:43:45.520><c> and</c><00:43:45.680><c> two</c>

00:43:46.150 --> 00:43:46.160 align:start position:0%
uh because uh if you know and two
 

00:43:46.160 --> 00:43:49.670 align:start position:0%
uh because uh if you know and two
uh<00:43:47.119><c> uses</c><00:43:47.440><c> some</c><00:43:47.680><c> set</c><00:43:47.839><c> of</c><00:43:48.000><c> locks</c><00:43:48.720><c> uh</c><00:43:49.040><c> then</c>

00:43:49.670 --> 00:43:49.680 align:start position:0%
uh uses some set of locks uh then
 

00:43:49.680 --> 00:43:51.510 align:start position:0%
uh uses some set of locks uh then
you<00:43:49.760><c> know</c><00:43:50.000><c> if</c><00:43:50.160><c> we</c><00:43:50.319><c> follow</c><00:43:50.640><c> our</c><00:43:50.800><c> walk</c><00:43:51.040><c> ordering</c>

00:43:51.510 --> 00:43:51.520 align:start position:0%
you know if we follow our walk ordering
 

00:43:51.520 --> 00:43:53.750 align:start position:0%
you know if we follow our walk ordering
rule<00:43:52.000><c> uh</c><00:43:52.319><c> jesus</c><00:43:52.640><c> got</c><00:43:52.720><c> to</c><00:43:52.800><c> make</c><00:43:52.960><c> sure</c><00:43:53.359><c> that</c><00:43:53.680><c> you</c>

00:43:53.750 --> 00:43:53.760 align:start position:0%
rule uh jesus got to make sure that you
 

00:43:53.760 --> 00:43:55.109 align:start position:0%
rule uh jesus got to make sure that you
know<00:43:53.920><c> if</c><00:43:54.079><c> it</c><00:43:54.240><c> has</c><00:43:54.400><c> some</c><00:43:54.640><c> locks</c>

00:43:55.109 --> 00:43:55.119 align:start position:0%
know if it has some locks
 

00:43:55.119 --> 00:43:57.109 align:start position:0%
know if it has some locks
that<00:43:55.280><c> it</c><00:43:55.440><c> acquires</c><00:43:55.839><c> all</c><00:43:56.000><c> locks</c><00:43:56.400><c> you</c><00:43:56.560><c> know</c><00:43:56.880><c> from</c>

00:43:57.109 --> 00:43:57.119 align:start position:0%
that it acquires all locks you know from
 

00:43:57.119 --> 00:43:59.270 align:start position:0%
that it acquires all locks you know from
f<00:43:57.359><c> and</c><00:43:57.440><c> g</c><00:43:57.680><c> together</c><00:43:58.079><c> actually</c><00:43:58.319><c> in</c><00:43:58.560><c> some</c>

00:43:59.270 --> 00:43:59.280 align:start position:0%
f and g together actually in some
 

00:43:59.280 --> 00:44:02.150 align:start position:0%
f and g together actually in some
uh<00:43:59.599><c> global</c><00:44:00.000><c> order</c><00:44:01.119><c> and</c><00:44:01.280><c> so</c><00:44:01.440><c> that</c><00:44:01.599><c> really</c><00:44:01.920><c> means</c>

00:44:02.150 --> 00:44:02.160 align:start position:0%
uh global order and so that really means
 

00:44:02.160 --> 00:44:06.550 align:start position:0%
uh global order and so that really means
that<00:44:02.319><c> these</c><00:44:02.640><c> are</c><00:44:02.800><c> the</c><00:44:02.960><c> internals</c>

00:44:06.550 --> 00:44:06.560 align:start position:0%
 
 

00:44:06.560 --> 00:44:09.510 align:start position:0%
 
the<00:44:06.720><c> internals</c><00:44:07.119><c> of</c><00:44:07.280><c> m2</c><00:44:08.720><c> at</c><00:44:08.800><c> least</c><00:44:09.040><c> in</c><00:44:09.119><c> terms</c><00:44:09.359><c> of</c>

00:44:09.510 --> 00:44:09.520 align:start position:0%
the internals of m2 at least in terms of
 

00:44:09.520 --> 00:44:15.829 align:start position:0%
the internals of m2 at least in terms of
locks

00:44:15.829 --> 00:44:15.839 align:start position:0%
 
 

00:44:15.839 --> 00:44:21.270 align:start position:0%
 
must<00:44:16.000><c> be</c><00:44:16.240><c> visible</c><00:44:16.720><c> to</c><00:44:16.960><c> m1</c>

00:44:21.270 --> 00:44:21.280 align:start position:0%
 
 

00:44:21.280 --> 00:44:23.109 align:start position:0%
 
so<00:44:21.440><c> that</c><00:44:21.680><c> you</c><00:44:21.839><c> know</c><00:44:22.000><c> and</c><00:44:22.160><c> one</c><00:44:22.319><c> can</c><00:44:22.560><c> ensure</c><00:44:22.880><c> that</c>

00:44:23.109 --> 00:44:23.119 align:start position:0%
so that you know and one can ensure that
 

00:44:23.119 --> 00:44:24.710 align:start position:0%
so that you know and one can ensure that
actually<00:44:23.359><c> you</c><00:44:23.520><c> know</c><00:44:23.839><c> uh</c><00:44:24.160><c> calls</c>

00:44:24.710 --> 00:44:24.720 align:start position:0%
actually you know uh calls
 

00:44:24.720 --> 00:44:28.069 align:start position:0%
actually you know uh calls
uh<00:44:25.040><c> at</c><00:44:25.359><c> uh</c><00:44:25.920><c> n2</c><00:44:26.400><c> in</c><00:44:26.560><c> the</c><00:44:27.040><c> in</c><00:44:27.440><c> in</c><00:44:27.520><c> the</c><00:44:27.680><c> appropriate</c>

00:44:28.069 --> 00:44:28.079 align:start position:0%
uh at uh n2 in the in in the appropriate
 

00:44:28.079 --> 00:44:29.109 align:start position:0%
uh at uh n2 in the in in the appropriate
way

00:44:29.109 --> 00:44:29.119 align:start position:0%
way
 

00:44:29.119 --> 00:44:30.630 align:start position:0%
way
uh<00:44:29.359><c> and</c><00:44:29.520><c> you</c><00:44:29.680><c> know</c><00:44:29.760><c> in</c><00:44:29.839><c> some</c><00:44:30.000><c> ways</c><00:44:30.240><c> that</c><00:44:30.400><c> is</c><00:44:30.560><c> you</c>

00:44:30.630 --> 00:44:30.640 align:start position:0%
uh and you know in some ways that is you
 

00:44:30.640 --> 00:44:33.589 align:start position:0%
uh and you know in some ways that is you
know<00:44:30.800><c> sort</c><00:44:30.960><c> of</c><00:44:31.040><c> an</c><00:44:31.200><c> abstraction</c><00:44:31.760><c> violation</c>

00:44:33.589 --> 00:44:33.599 align:start position:0%
know sort of an abstraction violation
 

00:44:33.599 --> 00:44:35.829 align:start position:0%
know sort of an abstraction violation
you<00:44:33.680><c> know</c><00:44:34.640><c> abstractions</c><00:44:35.119><c> work</c><00:44:35.359><c> out</c><00:44:35.440><c> perfectly</c>

00:44:35.829 --> 00:44:35.839 align:start position:0%
you know abstractions work out perfectly
 

00:44:35.839 --> 00:44:37.109 align:start position:0%
you know abstractions work out perfectly
you<00:44:35.920><c> know</c><00:44:36.079><c> m1</c><00:44:36.319><c> doesn't</c><00:44:36.560><c> really</c><00:44:36.720><c> know</c><00:44:36.880><c> you</c><00:44:36.960><c> need</c>

00:44:37.109 --> 00:44:37.119 align:start position:0%
you know m1 doesn't really know you need
 

00:44:37.119 --> 00:44:38.790 align:start position:0%
you know m1 doesn't really know you need
to<00:44:37.200><c> know</c><00:44:37.440><c> anything</c><00:44:37.839><c> about</c><00:44:38.079><c> how</c><00:44:38.319><c> m2</c><00:44:38.640><c> is</c>

00:44:38.790 --> 00:44:38.800 align:start position:0%
to know anything about how m2 is
 

00:44:38.800 --> 00:44:39.750 align:start position:0%
to know anything about how m2 is
implemented

00:44:39.750 --> 00:44:39.760 align:start position:0%
implemented
 

00:44:39.760 --> 00:44:42.470 align:start position:0%
implemented
and<00:44:39.920><c> unfortunately</c><00:44:40.560><c> logs</c><00:44:41.440><c> are</c><00:44:42.000><c> a</c><00:44:42.079><c> common</c>

00:44:42.470 --> 00:44:42.480 align:start position:0%
and unfortunately logs are a common
 

00:44:42.480 --> 00:44:44.390 align:start position:0%
and unfortunately logs are a common
example<00:44:42.960><c> where</c><00:44:43.200><c> some</c><00:44:43.359><c> of</c><00:44:43.520><c> the</c><00:44:43.599><c> internals</c><00:44:44.240><c> you</c>

00:44:44.390 --> 00:44:44.400 align:start position:0%
example where some of the internals you
 

00:44:44.400 --> 00:44:47.270 align:start position:0%
example where some of the internals you
know<00:44:44.560><c> of</c><00:44:44.720><c> m2</c><00:44:45.200><c> might</c><00:44:45.440><c> actually</c><00:44:45.760><c> leak</c><00:44:46.079><c> out</c><00:44:46.240><c> to</c><00:44:46.480><c> m1</c>

00:44:47.270 --> 00:44:47.280 align:start position:0%
know of m2 might actually leak out to m1
 

00:44:47.280 --> 00:44:50.550 align:start position:0%
know of m2 might actually leak out to m1
because<00:44:47.520><c> m1</c><00:44:47.920><c> really</c><00:44:48.079><c> needs</c><00:44:48.319><c> to</c><00:44:48.839><c> know</c><00:44:50.000><c> and</c><00:44:50.079><c> so</c>

00:44:50.550 --> 00:44:50.560 align:start position:0%
because m1 really needs to know and so
 

00:44:50.560 --> 00:44:52.870 align:start position:0%
because m1 really needs to know and so
you<00:44:50.640><c> know</c><00:44:50.720><c> when</c><00:44:50.880><c> you</c><00:44:51.040><c> design</c><00:44:51.359><c> a</c><00:44:51.839><c> bigger</c><00:44:52.079><c> system</c>

00:44:52.870 --> 00:44:52.880 align:start position:0%
you know when you design a bigger system
 

00:44:52.880 --> 00:44:53.990 align:start position:0%
you know when you design a bigger system
uh<00:44:53.280><c> you</c><00:44:53.440><c> know</c>

00:44:53.990 --> 00:44:54.000 align:start position:0%
uh you know
 

00:44:54.000 --> 00:44:55.349 align:start position:0%
uh you know
this<00:44:54.160><c> makes</c><00:44:54.400><c> the</c><00:44:54.480><c> modularity</c><00:44:55.200><c> more</c>

00:44:55.349 --> 00:44:55.359 align:start position:0%
this makes the modularity more
 

00:44:55.359 --> 00:45:00.630 align:start position:0%
this makes the modularity more
complicated

00:45:00.630 --> 00:45:00.640 align:start position:0%
 
 

00:45:00.640 --> 00:45:03.510 align:start position:0%
 
um<00:45:01.359><c> oh</c><00:45:01.680><c> sorry</c><00:45:02.000><c> i</c><00:45:02.160><c> was</c><00:45:02.319><c> just</c><00:45:02.560><c> wondering</c><00:45:03.280><c> does</c><00:45:03.440><c> it</c>

00:45:03.510 --> 00:45:03.520 align:start position:0%
um oh sorry i was just wondering does it
 

00:45:03.520 --> 00:45:04.069 align:start position:0%
um oh sorry i was just wondering does it
need<00:45:03.680><c> to</c><00:45:03.839><c> be</c>

00:45:04.069 --> 00:45:04.079 align:start position:0%
need to be
 

00:45:04.079 --> 00:45:07.430 align:start position:0%
need to be
a<00:45:04.240><c> complete</c><00:45:05.359><c> um</c><00:45:05.760><c> ordering</c><00:45:06.319><c> of</c><00:45:06.560><c> locks</c><00:45:07.040><c> or</c>

00:45:07.430 --> 00:45:07.440 align:start position:0%
a complete um ordering of locks or
 

00:45:07.440 --> 00:45:10.710 align:start position:0%
a complete um ordering of locks or
can<00:45:07.599><c> there</c><00:45:07.920><c> be</c><00:45:08.160><c> some</c><00:45:08.960><c> blocks</c><00:45:09.359><c> that</c><00:45:09.599><c> are</c><00:45:10.400><c> um</c>

00:45:10.710 --> 00:45:10.720 align:start position:0%
can there be some blocks that are um
 

00:45:10.720 --> 00:45:14.230 align:start position:0%
can there be some blocks that are um
like<00:45:11.200><c> that</c><00:45:11.440><c> can</c><00:45:11.599><c> be</c><00:45:12.000><c> ordered</c><00:45:12.560><c> in</c><00:45:12.800><c> whatever</c><00:45:13.680><c> way</c>

00:45:14.230 --> 00:45:14.240 align:start position:0%
like that can be ordered in whatever way
 

00:45:14.240 --> 00:45:17.750 align:start position:0%
like that can be ordered in whatever way
they<00:45:15.040><c> yeah</c><00:45:16.160><c> it</c><00:45:16.240><c> depends</c><00:45:16.560><c> if</c><00:45:16.720><c> like</c><00:45:16.960><c> f</c><00:45:17.119><c> and</c><00:45:17.200><c> g</c>

00:45:17.750 --> 00:45:17.760 align:start position:0%
they yeah it depends if like f and g
 

00:45:17.760 --> 00:45:20.150 align:start position:0%
they yeah it depends if like f and g
you<00:45:17.839><c> know</c><00:45:18.000><c> share</c><00:45:18.240><c> any</c><00:45:18.560><c> locks</c><00:45:18.960><c> right</c><00:45:19.839><c> so</c><00:45:20.000><c> for</c>

00:45:20.150 --> 00:45:20.160 align:start position:0%
you know share any locks right so for
 

00:45:20.160 --> 00:45:22.710 align:start position:0%
you know share any locks right so for
example<00:45:20.480><c> if</c><00:45:20.640><c> you</c><00:45:20.880><c> like</c><00:45:21.119><c> and</c><00:45:21.280><c> look</c><00:45:21.440><c> at</c><00:45:21.599><c> xv6</c>

00:45:22.710 --> 00:45:22.720 align:start position:0%
example if you like and look at xv6
 

00:45:22.720 --> 00:45:26.390 align:start position:0%
example if you like and look at xv6
uh<00:45:23.280><c> there</c><00:45:24.240><c> uh</c><00:45:24.720><c> are</c><00:45:24.880><c> sort</c><00:45:25.040><c> of</c><00:45:25.119><c> multiple</c><00:45:25.520><c> strands</c>

00:45:26.390 --> 00:45:26.400 align:start position:0%
uh there uh are sort of multiple strands
 

00:45:26.400 --> 00:45:27.829 align:start position:0%
uh there uh are sort of multiple strands
of<00:45:26.720><c> lock</c><00:45:26.960><c> orderings</c><00:45:27.440><c> because</c><00:45:27.680><c> some</c>

00:45:27.829 --> 00:45:27.839 align:start position:0%
of lock orderings because some
 

00:45:27.839 --> 00:45:29.190 align:start position:0%
of lock orderings because some
blockchain<00:45:28.240><c> have</c><00:45:28.400><c> nothing</c><00:45:28.640><c> to</c><00:45:28.720><c> do</c><00:45:28.880><c> with</c><00:45:29.040><c> other</c>

00:45:29.190 --> 00:45:29.200 align:start position:0%
blockchain have nothing to do with other
 

00:45:29.200 --> 00:45:30.470 align:start position:0%
blockchain have nothing to do with other
locks<00:45:29.520><c> and</c><00:45:29.599><c> so</c><00:45:29.760><c> they</c><00:45:29.920><c> know</c>

00:45:30.470 --> 00:45:30.480 align:start position:0%
locks and so they know
 

00:45:30.480 --> 00:45:33.349 align:start position:0%
locks and so they know
they're<00:45:30.640><c> never</c><00:45:30.880><c> required</c><00:45:31.680><c> together</c><00:45:32.960><c> and</c><00:45:33.200><c> so</c>

00:45:33.349 --> 00:45:33.359 align:start position:0%
they're never required together and so
 

00:45:33.359 --> 00:45:34.550 align:start position:0%
they're never required together and so
if<00:45:33.520><c> they're</c><00:45:33.680><c> never</c><00:45:33.839><c> acquired</c><00:45:34.160><c> together</c>

00:45:34.550 --> 00:45:34.560 align:start position:0%
if they're never acquired together
 

00:45:34.560 --> 00:45:36.150 align:start position:0%
if they're never acquired together
they're<00:45:34.800><c> just</c><00:45:35.040><c> joined</c><00:45:35.280><c> block</c><00:45:35.599><c> sets</c><00:45:35.920><c> if</c><00:45:36.079><c> you</c>

00:45:36.150 --> 00:45:36.160 align:start position:0%
they're just joined block sets if you
 

00:45:36.160 --> 00:45:36.870 align:start position:0%
they're just joined block sets if you
will

00:45:36.870 --> 00:45:36.880 align:start position:0%
will
 

00:45:36.880 --> 00:45:38.630 align:start position:0%
will
and<00:45:37.119><c> then</c><00:45:37.440><c> only</c><00:45:37.760><c> you</c><00:45:37.839><c> have</c><00:45:38.000><c> to</c><00:45:38.079><c> make</c><00:45:38.240><c> sure</c><00:45:38.480><c> that</c>

00:45:38.630 --> 00:45:38.640 align:start position:0%
and then only you have to make sure that
 

00:45:38.640 --> 00:45:40.710 align:start position:0%
and then only you have to make sure that
the<00:45:38.720><c> ordering</c><00:45:39.520><c> in</c><00:45:39.599><c> one</c><00:45:39.839><c> particular</c><00:45:40.240><c> lock</c><00:45:40.480><c> set</c>

00:45:40.710 --> 00:45:40.720 align:start position:0%
the ordering in one particular lock set
 

00:45:40.720 --> 00:45:41.589 align:start position:0%
the ordering in one particular lock set
is<00:45:40.800><c> global</c>

00:45:41.589 --> 00:45:41.599 align:start position:0%
is global
 

00:45:41.599 --> 00:45:43.750 align:start position:0%
is global
and<00:45:42.079><c> the</c><00:45:42.640><c> ordering</c><00:45:42.960><c> in</c><00:45:43.040><c> the</c><00:45:43.200><c> other</c><00:45:43.359><c> lock</c><00:45:43.520><c> sets</c>

00:45:43.750 --> 00:45:43.760 align:start position:0%
and the ordering in the other lock sets
 

00:45:43.760 --> 00:45:45.190 align:start position:0%
and the ordering in the other lock sets
is<00:45:43.920><c> completely</c><00:45:44.240><c> independent</c><00:45:44.640><c> of</c><00:45:44.800><c> the</c><00:45:44.960><c> other</c>

00:45:45.190 --> 00:45:45.200 align:start position:0%
is completely independent of the other
 

00:45:45.200 --> 00:45:47.670 align:start position:0%
is completely independent of the other
ordering

00:45:47.670 --> 00:45:47.680 align:start position:0%
ordering
 

00:45:47.680 --> 00:45:49.270 align:start position:0%
ordering
so<00:45:47.920><c> it</c><00:45:48.079><c> is</c><00:45:48.240><c> correct</c><00:45:48.560><c> that</c><00:45:48.720><c> there</c><00:45:48.960><c> is</c><00:45:49.040><c> no</c>

00:45:49.270 --> 00:45:49.280 align:start position:0%
so it is correct that there is no
 

00:45:49.280 --> 00:45:51.190 align:start position:0%
so it is correct that there is no
doesn't<00:45:49.599><c> have</c><00:45:49.760><c> to</c><00:45:49.920><c> be</c><00:45:50.000><c> a</c><00:45:50.079><c> global</c><00:45:50.480><c> ordering</c><00:45:50.960><c> but</c>

00:45:51.190 --> 00:45:51.200 align:start position:0%
doesn't have to be a global ordering but
 

00:45:51.200 --> 00:45:51.510 align:start position:0%
doesn't have to be a global ordering but
like

00:45:51.510 --> 00:45:51.520 align:start position:0%
like
 

00:45:51.520 --> 00:45:52.870 align:start position:0%
like
all<00:45:51.680><c> the</c><00:45:51.839><c> functions</c><00:45:52.240><c> that</c><00:45:52.400><c> you</c><00:45:52.560><c> know</c>

00:45:52.870 --> 00:45:52.880 align:start position:0%
all the functions that you know
 

00:45:52.880 --> 00:45:54.950 align:start position:0%
all the functions that you know
manipulate<00:45:53.520><c> the</c><00:45:53.680><c> same</c><00:45:54.000><c> shared</c><00:45:54.480><c> sort</c><00:45:54.640><c> of</c>

00:45:54.950 --> 00:45:54.960 align:start position:0%
manipulate the same shared sort of
 

00:45:54.960 --> 00:45:57.030 align:start position:0%
manipulate the same shared sort of
log<00:45:55.200><c> set</c><00:45:55.599><c> they</c><00:45:55.839><c> need</c><00:45:56.000><c> to</c><00:45:56.160><c> agree</c><00:45:56.480><c> on</c><00:45:56.640><c> in</c><00:45:56.720><c> global</c>

00:45:57.030 --> 00:45:57.040 align:start position:0%
log set they need to agree on in global
 

00:45:57.040 --> 00:45:59.190 align:start position:0%
log set they need to agree on in global
order

00:45:59.190 --> 00:45:59.200 align:start position:0%
order
 

00:45:59.200 --> 00:46:04.390 align:start position:0%
order
thank<00:45:59.440><c> you</c>

00:46:04.390 --> 00:46:04.400 align:start position:0%
 
 

00:46:04.400 --> 00:46:08.550 align:start position:0%
 
okay<00:46:04.720><c> so</c><00:46:05.920><c> one</c><00:46:07.119><c> you</c><00:46:07.200><c> know</c><00:46:07.440><c> another</c><00:46:07.920><c> sort</c><00:46:08.079><c> of</c>

00:46:08.550 --> 00:46:08.560 align:start position:0%
okay so one you know another sort of
 

00:46:08.560 --> 00:46:11.670 align:start position:0%
okay so one you know another sort of
uh<00:46:08.960><c> challenge</c><00:46:09.839><c> uh</c><00:46:10.079><c> with</c><00:46:10.400><c> box</c><00:46:10.960><c> uh</c><00:46:11.359><c> we've</c><00:46:11.520><c> seen</c>

00:46:11.670 --> 00:46:11.680 align:start position:0%
uh challenge uh with box uh we've seen
 

00:46:11.680 --> 00:46:13.190 align:start position:0%
uh challenge uh with box uh we've seen
now<00:46:11.839><c> two</c><00:46:12.000><c> challenges</c><00:46:12.319><c> one</c><00:46:12.480><c> is</c><00:46:12.560><c> deadlock</c><00:46:13.040><c> one</c>

00:46:13.190 --> 00:46:13.200 align:start position:0%
now two challenges one is deadlock one
 

00:46:13.200 --> 00:46:14.470 align:start position:0%
now two challenges one is deadlock one
is<00:46:13.280><c> modularity</c>

00:46:14.470 --> 00:46:14.480 align:start position:0%
is modularity
 

00:46:14.480 --> 00:46:16.710 align:start position:0%
is modularity
uh<00:46:14.880><c> the</c><00:46:14.960><c> second</c><00:46:15.359><c> uh</c><00:46:15.680><c> challenge</c><00:46:16.240><c> or</c><00:46:16.480><c> third</c>

00:46:16.710 --> 00:46:16.720 align:start position:0%
uh the second uh challenge or third
 

00:46:16.720 --> 00:46:18.550 align:start position:0%
uh the second uh challenge or third
challenge<00:46:17.119><c> is</c><00:46:17.359><c> just</c><00:46:17.599><c> walks</c>

00:46:18.550 --> 00:46:18.560 align:start position:0%
challenge is just walks
 

00:46:18.560 --> 00:46:24.069 align:start position:0%
challenge is just walks
versus<00:46:18.880><c> performance</c>

00:46:24.069 --> 00:46:24.079 align:start position:0%
 
 

00:46:24.079 --> 00:46:26.230 align:start position:0%
 
and<00:46:24.400><c> you</c><00:46:24.480><c> know</c><00:46:24.640><c> really</c><00:46:25.599><c> hinted</c><00:46:25.920><c> at</c><00:46:26.000><c> this</c><00:46:26.160><c> a</c>

00:46:26.230 --> 00:46:26.240 align:start position:0%
and you know really hinted at this a
 

00:46:26.240 --> 00:46:28.870 align:start position:0%
and you know really hinted at this a
couple<00:46:26.480><c> times</c><00:46:26.720><c> but</c><00:46:26.880><c> it</c><00:46:27.040><c> needs</c><00:46:27.280><c> to</c><00:46:27.520><c> uh</c>

00:46:28.870 --> 00:46:28.880 align:start position:0%
couple times but it needs to uh
 

00:46:28.880 --> 00:46:31.670 align:start position:0%
couple times but it needs to uh
is<00:46:30.240><c> important</c><00:46:30.560><c> enough</c><00:46:30.800><c> to</c><00:46:30.960><c> sort</c><00:46:31.119><c> of</c><00:46:31.280><c> actually</c>

00:46:31.670 --> 00:46:31.680 align:start position:0%
is important enough to sort of actually
 

00:46:31.680 --> 00:46:33.349 align:start position:0%
is important enough to sort of actually
put<00:46:31.839><c> some</c><00:46:32.000><c> emphasis</c><00:46:32.480><c> on</c>

00:46:33.349 --> 00:46:33.359 align:start position:0%
put some emphasis on
 

00:46:33.359 --> 00:46:36.950 align:start position:0%
put some emphasis on
uh<00:46:34.160><c> and</c><00:46:34.400><c> so</c><00:46:34.560><c> basically</c><00:46:34.880><c> if</c><00:46:35.040><c> you</c><00:46:35.119><c> want</c><00:46:35.200><c> to</c><00:46:35.359><c> get</c>

00:46:36.950 --> 00:46:36.960 align:start position:0%
uh and so basically if you want to get
 

00:46:36.960 --> 00:46:39.750 align:start position:0%
uh and so basically if you want to get
performance<00:46:37.839><c> you</c><00:46:38.000><c> need</c><00:46:38.240><c> to</c><00:46:39.040><c> split</c><00:46:39.359><c> up</c><00:46:39.440><c> data</c>

00:46:39.750 --> 00:46:39.760 align:start position:0%
performance you need to split up data
 

00:46:39.760 --> 00:46:40.230 align:start position:0%
performance you need to split up data
structures

00:46:40.230 --> 00:46:40.240 align:start position:0%
structures
 

00:46:40.240 --> 00:46:43.109 align:start position:0%
structures
right<00:46:40.640><c> so</c><00:46:41.119><c> if</c><00:46:41.280><c> you</c><00:46:41.520><c> have</c><00:46:41.760><c> one</c><00:46:41.920><c> big</c><00:46:42.160><c> kernel</c><00:46:42.480><c> lock</c>

00:46:43.109 --> 00:46:43.119 align:start position:0%
right so if you have one big kernel lock
 

00:46:43.119 --> 00:46:44.790 align:start position:0%
right so if you have one big kernel lock
uh<00:46:43.359><c> that</c><00:46:43.520><c> will</c><00:46:43.680><c> limit</c><00:46:43.920><c> your</c><00:46:44.079><c> performance</c><00:46:44.560><c> to</c>

00:46:44.790 --> 00:46:44.800 align:start position:0%
uh that will limit your performance to
 

00:46:44.800 --> 00:46:46.710 align:start position:0%
uh that will limit your performance to
basically<00:46:45.200><c> performance</c><00:46:45.599><c> in</c><00:46:45.680><c> a</c><00:46:45.760><c> single</c><00:46:46.000><c> cpu</c>

00:46:46.710 --> 00:46:46.720 align:start position:0%
basically performance in a single cpu
 

00:46:46.720 --> 00:46:48.309 align:start position:0%
basically performance in a single cpu
if<00:46:46.800><c> you</c><00:46:46.960><c> want</c><00:46:47.200><c> you</c><00:46:47.359><c> know</c><00:46:47.520><c> performance</c><00:46:47.920><c> remove</c>

00:46:48.309 --> 00:46:48.319 align:start position:0%
if you want you know performance remove
 

00:46:48.319 --> 00:46:50.630 align:start position:0%
if you want you know performance remove
uh<00:46:48.880><c> you</c><00:46:48.960><c> want</c><00:46:49.119><c> that</c><00:46:49.280><c> to</c><00:46:49.440><c> perform</c><00:46:49.839><c> scales</c>

00:46:50.630 --> 00:46:50.640 align:start position:0%
uh you want that to perform scales
 

00:46:50.640 --> 00:46:52.790 align:start position:0%
uh you want that to perform scales
with<00:46:50.800><c> the</c><00:46:50.880><c> numerous</c><00:46:51.200><c> cpus</c><00:46:51.920><c> you</c><00:46:52.079><c> got</c><00:46:52.319><c> to</c><00:46:52.400><c> split</c>

00:46:52.790 --> 00:46:52.800 align:start position:0%
with the numerous cpus you got to split
 

00:46:52.800 --> 00:46:54.069 align:start position:0%
with the numerous cpus you got to split
up

00:46:54.069 --> 00:46:54.079 align:start position:0%
up
 

00:46:54.079 --> 00:47:04.950 align:start position:0%
up
you<00:46:54.240><c> need</c><00:46:54.400><c> to</c><00:46:54.480><c> split</c><00:46:54.800><c> up</c><00:46:54.880><c> data</c><00:46:55.119><c> structures</c>

00:47:04.950 --> 00:47:04.960 align:start position:0%
 
 

00:47:04.960 --> 00:47:07.040 align:start position:0%
 
um<00:47:05.920><c> and</c><00:47:06.079><c> the</c><00:47:06.160><c> best</c><00:47:06.319><c> split</c><00:47:06.800><c> you</c><00:47:06.960><c> know</c>

00:47:07.040 --> 00:47:07.050 align:start position:0%
um and the best split you know
 

00:47:07.050 --> 00:47:09.270 align:start position:0%
um and the best split you know
[Music]

00:47:09.270 --> 00:47:09.280 align:start position:0%
[Music]
 

00:47:09.280 --> 00:47:17.750 align:start position:0%
[Music]
is<00:47:09.359><c> not</c><00:47:09.520><c> obvious</c><00:47:10.240><c> or</c><00:47:10.400><c> can</c><00:47:10.560><c> be</c><00:47:10.720><c> a</c><00:47:10.800><c> challenge</c>

00:47:17.750 --> 00:47:17.760 align:start position:0%
 
 

00:47:17.760 --> 00:47:19.349 align:start position:0%
 
uh<00:47:18.240><c> you</c><00:47:18.319><c> know</c><00:47:18.480><c> for</c><00:47:18.560><c> example</c><00:47:18.960><c> you</c><00:47:19.040><c> know</c><00:47:19.200><c> if</c><00:47:19.280><c> you</c>

00:47:19.349 --> 00:47:19.359 align:start position:0%
uh you know for example you know if you
 

00:47:19.359 --> 00:47:20.790 align:start position:0%
uh you know for example you know if you
do<00:47:19.680><c> associate</c><00:47:20.160><c> the</c><00:47:20.240><c> lock</c><00:47:20.400><c> with</c><00:47:20.640><c> every</c>

00:47:20.790 --> 00:47:20.800 align:start position:0%
do associate the lock with every
 

00:47:20.800 --> 00:47:22.470 align:start position:0%
do associate the lock with every
directory<00:47:21.280><c> should</c><00:47:21.440><c> you</c><00:47:21.760><c> associate</c><00:47:22.240><c> the</c><00:47:22.319><c> lock</c>

00:47:22.470 --> 00:47:22.480 align:start position:0%
directory should you associate the lock
 

00:47:22.480 --> 00:47:23.430 align:start position:0%
directory should you associate the lock
with<00:47:22.720><c> every</c><00:47:22.960><c> inode</c>

00:47:23.430 --> 00:47:23.440 align:start position:0%
with every inode
 

00:47:23.440 --> 00:47:24.630 align:start position:0%
with every inode
you<00:47:23.520><c> know</c><00:47:23.599><c> should</c><00:47:23.760><c> you</c><00:47:23.839><c> associate</c><00:47:24.400><c> a</c><00:47:24.480><c> lock</c>

00:47:24.630 --> 00:47:24.640 align:start position:0%
you know should you associate a lock
 

00:47:24.640 --> 00:47:26.790 align:start position:0%
you know should you associate a lock
with<00:47:24.800><c> every</c><00:47:25.040><c> process</c><00:47:25.440><c> or</c><00:47:25.520><c> not</c><00:47:26.400><c> uh</c>

00:47:26.790 --> 00:47:26.800 align:start position:0%
with every process or not uh
 

00:47:26.800 --> 00:47:29.030 align:start position:0%
with every process or not uh
or<00:47:26.960><c> is</c><00:47:27.119><c> it</c><00:47:27.200><c> better</c><00:47:27.760><c> you</c><00:47:27.839><c> know</c><00:47:28.000><c> to</c><00:47:28.400><c> sort</c><00:47:28.559><c> of</c>

00:47:29.030 --> 00:47:29.040 align:start position:0%
or is it better you know to sort of
 

00:47:29.040 --> 00:47:30.549 align:start position:0%
or is it better you know to sort of
split<00:47:29.359><c> the</c><00:47:29.440><c> data</c><00:47:29.680><c> structures</c><00:47:30.079><c> in</c><00:47:30.160><c> a</c><00:47:30.240><c> different</c>

00:47:30.549 --> 00:47:30.559 align:start position:0%
split the data structures in a different
 

00:47:30.559 --> 00:47:31.910 align:start position:0%
split the data structures in a different
way

00:47:31.910 --> 00:47:31.920 align:start position:0%
way
 

00:47:31.920 --> 00:47:35.349 align:start position:0%
way
um<00:47:32.880><c> and</c><00:47:33.839><c> uh</c><00:47:34.160><c> and</c><00:47:34.319><c> if</c><00:47:34.400><c> you</c><00:47:34.480><c> make</c><00:47:34.640><c> a</c><00:47:34.800><c> change</c><00:47:35.200><c> you</c>

00:47:35.349 --> 00:47:35.359 align:start position:0%
um and uh and if you make a change you
 

00:47:35.359 --> 00:47:35.910 align:start position:0%
um and uh and if you make a change you
know<00:47:35.440><c> you</c>

00:47:35.910 --> 00:47:35.920 align:start position:0%
know you
 

00:47:35.920 --> 00:47:38.230 align:start position:0%
know you
re<00:47:36.559><c> redesigned</c><00:47:37.440><c> sort</c><00:47:37.680><c> of</c><00:47:37.760><c> the</c><00:47:37.920><c> locking</c>

00:47:38.230 --> 00:47:38.240 align:start position:0%
re redesigned sort of the locking
 

00:47:38.240 --> 00:47:39.349 align:start position:0%
re redesigned sort of the locking
discipline

00:47:39.349 --> 00:47:39.359 align:start position:0%
discipline
 

00:47:39.359 --> 00:47:41.430 align:start position:0%
discipline
uh<00:47:39.680><c> and</c><00:47:40.079><c> then</c><00:47:40.240><c> they've</c><00:47:40.400><c> got</c><00:47:40.559><c> to</c><00:47:40.880><c> make</c><00:47:41.119><c> sure</c>

00:47:41.430 --> 00:47:41.440 align:start position:0%
uh and then they've got to make sure
 

00:47:41.440 --> 00:47:42.950 align:start position:0%
uh and then they've got to make sure
that<00:47:41.599><c> you</c><00:47:41.680><c> know</c><00:47:41.839><c> you're</c><00:47:42.000><c> still</c><00:47:42.240><c> maintained</c><00:47:42.800><c> in</c>

00:47:42.950 --> 00:47:42.960 align:start position:0%
that you know you're still maintained in
 

00:47:42.960 --> 00:47:44.630 align:start position:0%
that you know you're still maintained in
variance<00:47:43.440><c> that</c><00:47:43.680><c> actually</c>

00:47:44.630 --> 00:47:44.640 align:start position:0%
variance that actually
 

00:47:44.640 --> 00:47:47.670 align:start position:0%
variance that actually
the<00:47:44.800><c> kernel</c><00:47:45.040><c> is</c><00:47:45.119><c> trying</c><00:47:45.359><c> to</c><00:47:45.599><c> maintain</c><00:47:46.880><c> uh</c><00:47:47.200><c> and</c>

00:47:47.670 --> 00:47:47.680 align:start position:0%
the kernel is trying to maintain uh and
 

00:47:47.680 --> 00:47:49.430 align:start position:0%
the kernel is trying to maintain uh and
if<00:47:47.839><c> you</c><00:47:48.000><c> split</c><00:47:48.319><c> locks</c><00:47:48.640><c> you</c><00:47:48.720><c> know</c><00:47:49.119><c> you</c><00:47:49.200><c> also</c>

00:47:49.430 --> 00:47:49.440 align:start position:0%
if you split locks you know you also
 

00:47:49.440 --> 00:47:51.430 align:start position:0%
if you split locks you know you also
have<00:47:49.520><c> to</c><00:47:49.599><c> rewrite</c><00:47:50.000><c> the</c><00:47:50.079><c> goat</c>

00:47:51.430 --> 00:47:51.440 align:start position:0%
have to rewrite the goat
 

00:47:51.440 --> 00:47:54.069 align:start position:0%
have to rewrite the goat
or<00:47:51.760><c> you</c><00:47:51.920><c> may</c><00:47:52.160><c> have</c><00:47:52.240><c> to</c><00:47:52.400><c> need</c><00:47:52.880><c> that</c><00:47:53.119><c> may</c><00:47:53.359><c> write</c>

00:47:54.069 --> 00:47:54.079 align:start position:0%
or you may have to need that may write
 

00:47:54.079 --> 00:47:56.309 align:start position:0%
or you may have to need that may write
may<00:47:54.400><c> need</c><00:47:54.640><c> to</c>

00:47:56.309 --> 00:47:56.319 align:start position:0%
may need to
 

00:47:56.319 --> 00:48:02.790 align:start position:0%
may need to
rewrite<00:47:56.880><c> code</c><00:47:57.119><c> too</c>

00:48:02.790 --> 00:48:02.800 align:start position:0%
 
 

00:48:02.800 --> 00:48:05.829 align:start position:0%
 
and<00:48:02.880><c> so</c><00:48:03.040><c> it</c><00:48:03.119><c> turns</c><00:48:03.440><c> out</c><00:48:03.599><c> that</c><00:48:03.760><c> basically</c>

00:48:05.829 --> 00:48:05.839 align:start position:0%
and so it turns out that basically
 

00:48:05.839 --> 00:48:08.870 align:start position:0%
and so it turns out that basically
you<00:48:06.559><c> refactor</c><00:48:07.359><c> you</c><00:48:07.440><c> know</c><00:48:07.680><c> the</c>

00:48:08.870 --> 00:48:08.880 align:start position:0%
you refactor you know the
 

00:48:08.880 --> 00:48:10.390 align:start position:0%
you refactor you know the
parts<00:48:09.119><c> of</c><00:48:09.200><c> your</c><00:48:09.359><c> kernel</c><00:48:09.760><c> or</c><00:48:10.000><c> part</c><00:48:10.160><c> of</c><00:48:10.240><c> your</c>

00:48:10.390 --> 00:48:10.400 align:start position:0%
parts of your kernel or part of your
 

00:48:10.400 --> 00:48:13.349 align:start position:0%
parts of your kernel or part of your
apparel<00:48:10.800><c> program</c><00:48:11.599><c> to</c><00:48:11.839><c> get</c><00:48:12.079><c> better</c><00:48:12.400><c> forms</c>

00:48:13.349 --> 00:48:13.359 align:start position:0%
apparel program to get better forms
 

00:48:13.359 --> 00:48:15.030 align:start position:0%
apparel program to get better forms
by<00:48:13.760><c> splitting</c><00:48:14.160><c> data</c><00:48:14.400><c> structure</c><00:48:14.800><c> ops</c>

00:48:15.030 --> 00:48:15.040 align:start position:0%
by splitting data structure ops
 

00:48:15.040 --> 00:48:16.549 align:start position:0%
by splitting data structure ops
introducing<00:48:15.520><c> more</c><00:48:15.760><c> locks</c>

00:48:16.549 --> 00:48:16.559 align:start position:0%
introducing more locks
 

00:48:16.559 --> 00:48:18.069 align:start position:0%
introducing more locks
uh<00:48:16.800><c> you</c><00:48:16.960><c> know</c><00:48:17.119><c> that</c><00:48:17.280><c> it's</c><00:48:17.440><c> just</c><00:48:17.680><c> it's</c><00:48:17.839><c> a</c><00:48:17.920><c> lot</c><00:48:18.000><c> of</c>

00:48:18.069 --> 00:48:18.079 align:start position:0%
uh you know that it's just it's a lot of
 

00:48:18.079 --> 00:48:19.430 align:start position:0%
uh you know that it's just it's a lot of
work<00:48:18.319><c> you</c><00:48:18.480><c> have</c><00:48:18.559><c> to</c><00:48:18.640><c> carefully</c><00:48:19.040><c> think</c><00:48:19.280><c> through</c>

00:48:19.430 --> 00:48:19.440 align:start position:0%
work you have to carefully think through
 

00:48:19.440 --> 00:48:20.950 align:start position:0%
work you have to carefully think through
that<00:48:19.680><c> you</c><00:48:19.760><c> maintain</c><00:48:20.160><c> the</c><00:48:20.400><c> values</c><00:48:20.720><c> that</c><00:48:20.880><c> you</c>

00:48:20.950 --> 00:48:20.960 align:start position:0%
that you maintain the values that you
 

00:48:20.960 --> 00:48:22.710 align:start position:0%
that you maintain the values that you
intended<00:48:21.280><c> to</c><00:48:21.359><c> maintain</c>

00:48:22.710 --> 00:48:22.720 align:start position:0%
intended to maintain
 

00:48:22.720 --> 00:48:25.430 align:start position:0%
intended to maintain
you<00:48:22.880><c> have</c><00:48:22.960><c> to</c><00:48:23.040><c> rewrite</c><00:48:23.599><c> code</c><00:48:24.559><c> and</c><00:48:24.640><c> so</c>

00:48:25.430 --> 00:48:25.440 align:start position:0%
you have to rewrite code and so
 

00:48:25.440 --> 00:48:27.990 align:start position:0%
you have to rewrite code and so
generally<00:48:25.760><c> this</c><00:48:26.000><c> is</c><00:48:26.079><c> just</c><00:48:26.319><c> a</c><00:48:26.400><c> lot</c><00:48:26.559><c> of</c><00:48:26.640><c> work</c>

00:48:27.990 --> 00:48:28.000 align:start position:0%
generally this is just a lot of work
 

00:48:28.000 --> 00:48:32.630 align:start position:0%
generally this is just a lot of work
and<00:48:28.160><c> not</c><00:48:28.400><c> easy</c>

00:48:32.630 --> 00:48:32.640 align:start position:0%
 
 

00:48:32.640 --> 00:48:34.069 align:start position:0%
 
and<00:48:32.800><c> so</c><00:48:32.960><c> this</c><00:48:33.119><c> is</c><00:48:33.440><c> a</c><00:48:33.599><c> little</c><00:48:33.760><c> bit</c><00:48:33.920><c> of</c><00:48:34.000><c> a</c>

00:48:34.069 --> 00:48:34.079 align:start position:0%
and so this is a little bit of a
 

00:48:34.079 --> 00:48:35.589 align:start position:0%
and so this is a little bit of a
negative<00:48:34.559><c> you</c><00:48:34.720><c> know</c><00:48:34.880><c> news</c><00:48:35.119><c> point</c><00:48:35.359><c> right</c>

00:48:35.589 --> 00:48:35.599 align:start position:0%
negative you know news point right
 

00:48:35.599 --> 00:48:36.069 align:start position:0%
negative you know news point right
because

00:48:36.069 --> 00:48:36.079 align:start position:0%
because
 

00:48:36.079 --> 00:48:37.829 align:start position:0%
because
you<00:48:36.160><c> know</c><00:48:37.040><c> we</c><00:48:37.200><c> want</c><00:48:37.359><c> to</c><00:48:37.440><c> get</c><00:48:37.599><c> better</c>

00:48:37.829 --> 00:48:37.839 align:start position:0%
you know we want to get better
 

00:48:37.839 --> 00:48:39.510 align:start position:0%
you know we want to get better
performance<00:48:38.480><c> and</c><00:48:38.559><c> that</c><00:48:38.720><c> suggests</c><00:48:39.280><c> you</c><00:48:39.359><c> know</c>

00:48:39.510 --> 00:48:39.520 align:start position:0%
performance and that suggests you know
 

00:48:39.520 --> 00:48:40.630 align:start position:0%
performance and that suggests you know
more<00:48:39.839><c> locks</c>

00:48:40.630 --> 00:48:40.640 align:start position:0%
more locks
 

00:48:40.640 --> 00:48:43.829 align:start position:0%
more locks
uh<00:48:41.359><c> and</c><00:48:42.000><c> uh</c><00:48:43.200><c> but</c><00:48:43.359><c> that</c>

00:48:43.829 --> 00:48:43.839 align:start position:0%
uh and uh but that
 

00:48:43.839 --> 00:48:45.750 align:start position:0%
uh and uh but that
you<00:48:43.920><c> know</c><00:48:44.400><c> it's</c><00:48:44.559><c> actually</c><00:48:44.880><c> a</c><00:48:45.040><c> you</c><00:48:45.119><c> know</c><00:48:45.440><c> a</c><00:48:45.520><c> lot</c>

00:48:45.750 --> 00:48:45.760 align:start position:0%
you know it's actually a you know a lot
 

00:48:45.760 --> 00:48:46.950 align:start position:0%
you know it's actually a you know a lot
of<00:48:45.839><c> work</c>

00:48:46.950 --> 00:48:46.960 align:start position:0%
of work
 

00:48:46.960 --> 00:48:50.069 align:start position:0%
of work
and<00:48:47.280><c> so</c><00:48:47.520><c> the</c><00:48:47.599><c> general</c><00:48:48.240><c> recipe</c><00:48:49.599><c> you</c><00:48:49.760><c> know</c><00:48:49.839><c> to</c>

00:48:50.069 --> 00:48:50.079 align:start position:0%
and so the general recipe you know to
 

00:48:50.079 --> 00:48:51.589 align:start position:0%
and so the general recipe you know to
how<00:48:50.240><c> to</c><00:48:50.319><c> go</c><00:48:50.480><c> about</c><00:48:50.720><c> this</c>

00:48:51.589 --> 00:48:51.599 align:start position:0%
how to go about this
 

00:48:51.599 --> 00:49:00.829 align:start position:0%
how to go about this
is<00:48:51.760><c> to</c><00:48:52.160><c> you</c><00:48:52.240><c> know</c><00:48:52.400><c> start</c><00:48:53.680><c> of</c><00:48:53.839><c> course</c><00:48:54.079><c> during</c>

00:49:00.829 --> 00:49:00.839 align:start position:0%
 
 

00:49:00.839 --> 00:49:05.109 align:start position:0%
 
walks

00:49:05.109 --> 00:49:05.119 align:start position:0%
 
 

00:49:05.119 --> 00:49:11.430 align:start position:0%
 
and<00:49:05.200><c> then</c><00:49:05.359><c> measure</c>

00:49:11.430 --> 00:49:11.440 align:start position:0%
 
 

00:49:11.440 --> 00:49:12.710 align:start position:0%
 
so<00:49:11.680><c> i'm</c><00:49:11.680><c> going</c><00:49:11.839><c> to</c><00:49:12.000><c> run</c><00:49:12.240><c> a</c><00:49:12.319><c> bunch</c><00:49:12.559><c> of</c>

00:49:12.710 --> 00:49:12.720 align:start position:0%
so i'm going to run a bunch of
 

00:49:12.720 --> 00:49:14.829 align:start position:0%
so i'm going to run a bunch of
applications<00:49:13.200><c> on</c><00:49:13.280><c> top</c><00:49:13.520><c> of</c><00:49:13.599><c> your</c><00:49:13.760><c> kernel</c>

00:49:14.829 --> 00:49:14.839 align:start position:0%
applications on top of your kernel
 

00:49:14.839 --> 00:49:17.510 align:start position:0%
applications on top of your kernel
and<00:49:16.319><c> see</c><00:49:16.559><c> whether</c><00:49:16.800><c> you</c><00:49:16.880><c> get</c><00:49:17.040><c> actually</c><00:49:17.280><c> any</c>

00:49:17.510 --> 00:49:17.520 align:start position:0%
and see whether you get actually any
 

00:49:17.520 --> 00:49:19.030 align:start position:0%
and see whether you get actually any
speed<00:49:17.839><c> up</c><00:49:18.000><c> if</c><00:49:18.160><c> they</c><00:49:18.400><c> actually</c><00:49:18.720><c> explode</c>

00:49:19.030 --> 00:49:19.040 align:start position:0%
speed up if they actually explode
 

00:49:19.040 --> 00:49:20.549 align:start position:0%
speed up if they actually explode
multiple<00:49:19.440><c> cars</c>

00:49:20.549 --> 00:49:20.559 align:start position:0%
multiple cars
 

00:49:20.559 --> 00:49:22.549 align:start position:0%
multiple cars
and<00:49:21.200><c> if</c><00:49:21.280><c> they</c><00:49:21.440><c> do</c><00:49:21.839><c> you</c><00:49:22.000><c> know</c><00:49:22.079><c> your</c><00:49:22.240><c> base</c><00:49:22.480><c> will</c>

00:49:22.549 --> 00:49:22.559 align:start position:0%
and if they do you know your base will
 

00:49:22.559 --> 00:49:23.670 align:start position:0%
and if they do you know your base will
be<00:49:22.720><c> done</c><00:49:22.960><c> right</c>

00:49:23.670 --> 00:49:23.680 align:start position:0%
be done right
 

00:49:23.680 --> 00:49:26.390 align:start position:0%
be done right
your<00:49:23.839><c> walking</c><00:49:24.160><c> design</c><00:49:24.559><c> is</c><00:49:24.640><c> good</c><00:49:24.800><c> enough</c><00:49:25.359><c> if</c><00:49:26.000><c> if</c>

00:49:26.390 --> 00:49:26.400 align:start position:0%
your walking design is good enough if if
 

00:49:26.400 --> 00:49:27.510 align:start position:0%
your walking design is good enough if if
you<00:49:26.559><c> don't</c><00:49:26.720><c> get</c><00:49:26.880><c> speed</c><00:49:27.200><c> up</c>

00:49:27.510 --> 00:49:27.520 align:start position:0%
you don't get speed up
 

00:49:27.520 --> 00:49:28.950 align:start position:0%
you don't get speed up
basically<00:49:27.839><c> that</c><00:49:28.000><c> means</c><00:49:28.240><c> that</c><00:49:28.319><c> some</c><00:49:28.559><c> lock</c><00:49:28.800><c> is</c>

00:49:28.950 --> 00:49:28.960 align:start position:0%
basically that means that some lock is
 

00:49:28.960 --> 00:49:33.030 align:start position:0%
basically that means that some lock is
contended

00:49:33.030 --> 00:49:33.040 align:start position:0%
 
 

00:49:33.040 --> 00:49:35.030 align:start position:0%
 
multiple<00:49:33.839><c> processes</c><00:49:34.400><c> are</c><00:49:34.480><c> trying</c><00:49:34.720><c> to</c><00:49:34.800><c> get</c><00:49:34.960><c> the</c>

00:49:35.030 --> 00:49:35.040 align:start position:0%
multiple processes are trying to get the
 

00:49:35.040 --> 00:49:36.630 align:start position:0%
multiple processes are trying to get the
same<00:49:35.359><c> lock</c><00:49:35.839><c> and</c><00:49:35.920><c> therefore</c><00:49:36.319><c> they</c><00:49:36.480><c> are</c>

00:49:36.630 --> 00:49:36.640 align:start position:0%
same lock and therefore they are
 

00:49:36.640 --> 00:49:37.670 align:start position:0%
same lock and therefore they are
serialized

00:49:37.670 --> 00:49:37.680 align:start position:0%
serialized
 

00:49:37.680 --> 00:49:40.470 align:start position:0%
serialized
and<00:49:37.760><c> therefore</c><00:49:38.079><c> you</c><00:49:38.240><c> don't</c><00:49:38.480><c> get</c><00:49:38.960><c> speed</c><00:49:39.359><c> up</c>

00:49:40.470 --> 00:49:40.480 align:start position:0%
and therefore you don't get speed up
 

00:49:40.480 --> 00:49:42.309 align:start position:0%
and therefore you don't get speed up
then<00:49:40.800><c> you</c><00:49:40.960><c> know</c><00:49:41.119><c> you</c><00:49:41.200><c> have</c><00:49:41.280><c> to</c><00:49:41.440><c> rethink</c><00:49:41.839><c> about</c>

00:49:42.309 --> 00:49:42.319 align:start position:0%
then you know you have to rethink about
 

00:49:42.319 --> 00:49:48.470 align:start position:0%
then you know you have to rethink about
then<00:49:42.800><c> you</c><00:49:42.960><c> need</c><00:49:43.119><c> to</c><00:49:43.680><c> redesign</c>

00:49:48.470 --> 00:49:48.480 align:start position:0%
 
 

00:49:48.480 --> 00:49:49.829 align:start position:0%
 
but<00:49:48.640><c> the</c><00:49:48.800><c> point</c><00:49:49.040><c> is</c><00:49:49.200><c> that</c><00:49:49.359><c> you</c><00:49:49.440><c> want</c><00:49:49.599><c> to</c><00:49:49.680><c> be</c>

00:49:49.829 --> 00:49:49.839 align:start position:0%
but the point is that you want to be
 

00:49:49.839 --> 00:49:51.910 align:start position:0%
but the point is that you want to be
guided<00:49:50.319><c> you</c><00:49:50.400><c> know</c><00:49:50.720><c> by</c><00:49:51.040><c> these</c>

00:49:51.910 --> 00:49:51.920 align:start position:0%
guided you know by these
 

00:49:51.920 --> 00:49:53.990 align:start position:0%
guided you know by these
measurements<00:49:52.960><c> uh</c><00:49:53.280><c> because</c><00:49:53.520><c> it</c><00:49:53.599><c> may</c><00:49:53.760><c> be</c><00:49:53.920><c> the</c>

00:49:53.990 --> 00:49:54.000 align:start position:0%
measurements uh because it may be the
 

00:49:54.000 --> 00:49:55.750 align:start position:0%
measurements uh because it may be the
case<00:49:54.319><c> that</c><00:49:54.480><c> you</c><00:49:54.640><c> know</c><00:49:54.800><c> some</c><00:49:54.960><c> module</c><00:49:55.440><c> that</c>

00:49:55.750 --> 00:49:55.760 align:start position:0%
case that you know some module that
 

00:49:55.760 --> 00:49:57.349 align:start position:0%
case that you know some module that
uses<00:49:56.079><c> of</c><00:49:56.160><c> course</c><00:49:56.400><c> green</c><00:49:56.559><c> block</c><00:49:56.800><c> is</c><00:49:56.960><c> just</c><00:49:57.119><c> not</c>

00:49:57.349 --> 00:49:57.359 align:start position:0%
uses of course green block is just not
 

00:49:57.359 --> 00:49:59.910 align:start position:0%
uses of course green block is just not
called<00:49:58.240><c> uh</c><00:49:58.720><c> in</c><00:49:58.880><c> parallel</c><00:49:59.440><c> often</c>

00:49:59.910 --> 00:49:59.920 align:start position:0%
called uh in parallel often
 

00:49:59.920 --> 00:50:01.670 align:start position:0%
called uh in parallel often
and<00:50:00.000><c> therefore</c><00:50:00.480><c> it's</c><00:50:00.720><c> not</c><00:50:00.960><c> necessary</c><00:50:01.520><c> to</c>

00:50:01.670 --> 00:50:01.680 align:start position:0%
and therefore it's not necessary to
 

00:50:01.680 --> 00:50:02.950 align:start position:0%
and therefore it's not necessary to
actually<00:50:02.000><c> redesign</c>

00:50:02.950 --> 00:50:02.960 align:start position:0%
actually redesign
 

00:50:02.960 --> 00:50:04.710 align:start position:0%
actually redesign
and<00:50:03.119><c> since</c><00:50:03.359><c> redesign</c><00:50:03.839><c> is</c><00:50:04.000><c> a</c><00:50:04.000><c> lot</c><00:50:04.160><c> of</c><00:50:04.240><c> work</c><00:50:04.640><c> you</c>

00:50:04.710 --> 00:50:04.720 align:start position:0%
and since redesign is a lot of work you
 

00:50:04.720 --> 00:50:06.390 align:start position:0%
and since redesign is a lot of work you
know<00:50:05.040><c> and</c><00:50:05.280><c> you</c><00:50:05.359><c> know</c><00:50:05.599><c> it</c><00:50:05.760><c> also</c>

00:50:06.390 --> 00:50:06.400 align:start position:0%
know and you know it also
 

00:50:06.400 --> 00:50:07.990 align:start position:0%
know and you know it also
can<00:50:06.559><c> complicate</c><00:50:07.040><c> the</c><00:50:07.200><c> reasoning</c><00:50:07.599><c> about</c><00:50:07.760><c> that</c>

00:50:07.990 --> 00:50:08.000 align:start position:0%
can complicate the reasoning about that
 

00:50:08.000 --> 00:50:09.750 align:start position:0%
can complicate the reasoning about that
code<00:50:08.720><c> uh</c><00:50:09.040><c> you</c><00:50:09.200><c> know</c><00:50:09.359><c> then</c>

00:50:09.750 --> 00:50:09.760 align:start position:0%
code uh you know then
 

00:50:09.760 --> 00:50:11.190 align:start position:0%
code uh you know then
you<00:50:09.839><c> know</c><00:50:10.079><c> it's</c><00:50:10.240><c> a</c><00:50:10.319><c> good</c><00:50:10.480><c> idea</c><00:50:10.720><c> not</c><00:50:10.960><c> actually</c>

00:50:11.190 --> 00:50:11.200 align:start position:0%
you know it's a good idea not actually
 

00:50:11.200 --> 00:50:12.549 align:start position:0%
you know it's a good idea not actually
to<00:50:11.359><c> do</c><00:50:11.440><c> that</c><00:50:11.680><c> redesign</c><00:50:12.079><c> is</c><00:50:12.240><c> it's</c><00:50:12.400><c> not</c>

00:50:12.549 --> 00:50:12.559 align:start position:0%
to do that redesign is it's not
 

00:50:12.559 --> 00:50:14.390 align:start position:0%
to do that redesign is it's not
necessary

00:50:14.390 --> 00:50:14.400 align:start position:0%
necessary
 

00:50:14.400 --> 00:50:18.309 align:start position:0%
necessary
um<00:50:15.359><c> and</c><00:50:15.440><c> so</c><00:50:16.400><c> in</c><00:50:16.559><c> general</c><00:50:17.200><c> a</c><00:50:17.839><c> good</c>

00:50:18.309 --> 00:50:18.319 align:start position:0%
um and so in general a good
 

00:50:18.319 --> 00:50:20.230 align:start position:0%
um and so in general a good
rule<00:50:18.480><c> of</c><00:50:19.200><c> thumb</c><00:50:19.440><c> is</c><00:50:19.599><c> you</c><00:50:19.760><c> know</c><00:50:19.839><c> start</c><00:50:20.079><c> with</c>

00:50:20.230 --> 00:50:20.240 align:start position:0%
rule of thumb is you know start with
 

00:50:20.240 --> 00:50:21.349 align:start position:0%
rule of thumb is you know start with
course<00:50:20.480><c> grade</c><00:50:20.720><c> locks</c>

00:50:21.349 --> 00:50:21.359 align:start position:0%
course grade locks
 

00:50:21.359 --> 00:50:23.430 align:start position:0%
course grade locks
measure<00:50:21.760><c> whether</c><00:50:22.240><c> a</c><00:50:22.400><c> contention</c><00:50:22.960><c> appears</c><00:50:23.359><c> in</c>

00:50:23.430 --> 00:50:23.440 align:start position:0%
measure whether a contention appears in
 

00:50:23.440 --> 00:50:24.710 align:start position:0%
measure whether a contention appears in
one<00:50:23.599><c> of</c><00:50:23.680><c> these</c><00:50:23.839><c> locks</c><00:50:24.240><c> and</c><00:50:24.400><c> then</c>

00:50:24.710 --> 00:50:24.720 align:start position:0%
one of these locks and then
 

00:50:24.720 --> 00:50:26.470 align:start position:0%
one of these locks and then
redesign<00:50:25.200><c> that</c><00:50:25.359><c> part</c><00:50:25.599><c> of</c><00:50:25.680><c> the</c><00:50:25.839><c> system</c><00:50:26.160><c> so</c><00:50:26.319><c> that</c>

00:50:26.470 --> 00:50:26.480 align:start position:0%
redesign that part of the system so that
 

00:50:26.480 --> 00:50:30.549 align:start position:0%
redesign that part of the system so that
you<00:50:26.559><c> get</c><00:50:26.720><c> better</c><00:50:27.599><c> better</c><00:50:27.920><c> parallelism</c>

00:50:30.549 --> 00:50:30.559 align:start position:0%
 
 

00:50:30.559 --> 00:50:32.710 align:start position:0%
 
does<00:50:30.800><c> it</c><00:50:30.800><c> all</c><00:50:30.960><c> make</c><00:50:31.119><c> sense</c><00:50:31.920><c> any</c><00:50:32.160><c> questions</c><00:50:32.559><c> so</c>

00:50:32.710 --> 00:50:32.720 align:start position:0%
does it all make sense any questions so
 

00:50:32.720 --> 00:50:38.950 align:start position:0%
does it all make sense any questions so
far

00:50:38.950 --> 00:50:38.960 align:start position:0%
 
 

00:50:38.960 --> 00:50:41.990 align:start position:0%
 
okay<00:50:39.280><c> let's</c><00:50:39.520><c> look</c><00:50:39.680><c> at</c><00:50:39.920><c> uh</c><00:50:40.640><c> uh</c>

00:50:41.990 --> 00:50:42.000 align:start position:0%
okay let's look at uh uh
 

00:50:42.000 --> 00:50:43.910 align:start position:0%
okay let's look at uh uh
let's<00:50:42.240><c> do</c><00:50:42.400><c> a</c><00:50:42.480><c> little</c><00:50:42.960><c> uh</c><00:50:43.200><c> let's</c><00:50:43.440><c> look</c><00:50:43.599><c> at</c><00:50:43.680><c> the</c>

00:50:43.910 --> 00:50:43.920 align:start position:0%
let's do a little uh let's look at the
 

00:50:43.920 --> 00:50:46.630 align:start position:0%
let's do a little uh let's look at the
in<00:50:44.079><c> xc6</c><00:50:44.720><c> uh</c><00:50:45.119><c> you</c><00:50:45.280><c> know</c><00:50:45.359><c> some</c><00:50:45.599><c> code</c><00:50:45.920><c> you</c><00:50:46.079><c> know</c>

00:50:46.630 --> 00:50:46.640 align:start position:0%
in xc6 uh you know some code you know
 

00:50:46.640 --> 00:50:48.150 align:start position:0%
in xc6 uh you know some code you know
so<00:50:46.800><c> you</c><00:50:46.880><c> can</c><00:50:47.119><c> understand</c><00:50:47.520><c> a</c><00:50:47.599><c> little</c><00:50:47.760><c> bit</c><00:50:47.920><c> uh</c>

00:50:48.150 --> 00:50:48.160 align:start position:0%
so you can understand a little bit uh
 

00:50:48.160 --> 00:50:50.150 align:start position:0%
so you can understand a little bit uh
how<00:50:48.319><c> this</c><00:50:48.559><c> locking</c><00:50:48.960><c> sort</c><00:50:49.119><c> of</c><00:50:49.280><c> works</c><00:50:49.520><c> out</c><00:50:49.760><c> in</c>

00:50:50.150 --> 00:50:50.160 align:start position:0%
how this locking sort of works out in
 

00:50:50.160 --> 00:50:53.510 align:start position:0%
how this locking sort of works out in
practice<00:50:50.559><c> in</c><00:50:50.720><c> xv6</c><00:50:52.400><c> uh</c>

00:50:53.510 --> 00:50:53.520 align:start position:0%
practice in xv6 uh
 

00:50:53.520 --> 00:50:58.470 align:start position:0%
practice in xv6 uh
and<00:50:53.680><c> so</c><00:50:53.920><c> i'm</c><00:50:54.000><c> going</c><00:50:54.079><c> to</c><00:50:54.240><c> go</c><00:50:54.400><c> back</c><00:50:55.040><c> to</c><00:50:55.440><c> our</c><00:50:55.760><c> uh</c>

00:50:58.470 --> 00:50:58.480 align:start position:0%
 
 

00:50:58.480 --> 00:51:01.670 align:start position:0%
 
to<00:50:58.720><c> the</c><00:51:00.559><c> this</c><00:51:00.800><c> screen</c>

00:51:01.670 --> 00:51:01.680 align:start position:0%
to the this screen
 

00:51:01.680 --> 00:51:04.790 align:start position:0%
to the this screen
uh<00:51:02.000><c> i</c><00:51:02.240><c> really</c><00:51:02.480><c> need</c><00:51:02.640><c> this</c><00:51:03.599><c> and</c><00:51:04.000><c> i</c><00:51:04.079><c> want</c><00:51:04.319><c> to</c><00:51:04.559><c> look</c>

00:51:04.790 --> 00:51:04.800 align:start position:0%
uh i really need this and i want to look
 

00:51:04.800 --> 00:51:05.109 align:start position:0%
uh i really need this and i want to look
at

00:51:05.109 --> 00:51:05.119 align:start position:0%
at
 

00:51:05.119 --> 00:51:06.870 align:start position:0%
at
view<00:51:05.359><c> art</c><00:51:05.680><c> because</c><00:51:06.000><c> you</c><00:51:06.079><c> know</c><00:51:06.240><c> we're</c><00:51:06.640><c> start</c>

00:51:06.870 --> 00:51:06.880 align:start position:0%
view art because you know we're start
 

00:51:06.880 --> 00:51:08.549 align:start position:0%
view art because you know we're start
talking<00:51:07.200><c> about</c><00:51:07.440><c> locking</c><00:51:07.760><c> there</c>

00:51:08.549 --> 00:51:08.559 align:start position:0%
talking about locking there
 

00:51:08.559 --> 00:51:10.700 align:start position:0%
talking about locking there
uh<00:51:10.240><c> on</c>

00:51:10.700 --> 00:51:10.710 align:start position:0%
uh on
 

00:51:10.710 --> 00:51:13.109 align:start position:0%
uh on
[Music]

00:51:13.109 --> 00:51:13.119 align:start position:0%
[Music]
 

00:51:13.119 --> 00:51:14.549 align:start position:0%
[Music]
a<00:51:13.280><c> monday</c><00:51:13.680><c> and</c><00:51:13.839><c> i</c><00:51:13.920><c> want</c><00:51:14.000><c> to</c><00:51:14.079><c> look</c><00:51:14.240><c> a</c><00:51:14.319><c> little</c><00:51:14.480><c> bit</c>

00:51:14.549 --> 00:51:14.559 align:start position:0%
a monday and i want to look a little bit
 

00:51:14.559 --> 00:51:16.390 align:start position:0%
a monday and i want to look a little bit
more<00:51:14.800><c> in</c><00:51:14.880><c> detail</c>

00:51:16.390 --> 00:51:16.400 align:start position:0%
more in detail
 

00:51:16.400 --> 00:51:17.910 align:start position:0%
more in detail
uh<00:51:16.800><c> now</c><00:51:17.040><c> that</c><00:51:17.200><c> we</c><00:51:17.280><c> know</c><00:51:17.440><c> a</c><00:51:17.520><c> little</c><00:51:17.680><c> bit</c><00:51:17.760><c> more</c>

00:51:17.910 --> 00:51:17.920 align:start position:0%
uh now that we know a little bit more
 

00:51:17.920 --> 00:51:19.589 align:start position:0%
uh now that we know a little bit more
about<00:51:18.160><c> locks</c><00:51:18.480><c> and</c><00:51:18.640><c> then</c><00:51:18.880><c> also</c>

00:51:19.589 --> 00:51:19.599 align:start position:0%
about locks and then also
 

00:51:19.599 --> 00:51:20.829 align:start position:0%
about locks and then also
illustrate<00:51:20.000><c> a</c><00:51:20.079><c> couple</c><00:51:20.240><c> of</c><00:51:20.400><c> interesting</c>

00:51:20.829 --> 00:51:20.839 align:start position:0%
illustrate a couple of interesting
 

00:51:20.839 --> 00:51:28.069 align:start position:0%
illustrate a couple of interesting
points

00:51:28.069 --> 00:51:28.079 align:start position:0%
 
 

00:51:28.079 --> 00:51:30.870 align:start position:0%
 
so<00:51:28.480><c> first</c><00:51:29.040><c> uh</c><00:51:29.760><c> you</c><00:51:29.920><c> know</c><00:51:30.079><c> it</c><00:51:30.240><c> turns</c><00:51:30.480><c> out</c><00:51:30.800><c> you</c>

00:51:30.870 --> 00:51:30.880 align:start position:0%
so first uh you know it turns out you
 

00:51:30.880 --> 00:51:32.069 align:start position:0%
so first uh you know it turns out you
know<00:51:30.960><c> i</c><00:51:31.040><c> want</c><00:51:31.200><c> to</c><00:51:31.280><c> go</c><00:51:31.440><c> to</c>

00:51:32.069 --> 00:51:32.079 align:start position:0%
know i want to go to
 

00:51:32.079 --> 00:51:35.349 align:start position:0%
know i want to go to
you<00:51:32.160><c> know</c><00:51:32.720><c> looking</c><00:51:32.960><c> at</c><00:51:34.800><c> lock</c>

00:51:35.349 --> 00:51:35.359 align:start position:0%
you know looking at lock
 

00:51:35.359 --> 00:51:37.109 align:start position:0%
you know looking at lock
you<00:51:35.440><c> know</c><00:51:35.599><c> turns</c><00:51:35.920><c> out</c><00:51:36.079><c> that</c><00:51:36.240><c> the</c><00:51:36.480><c> uart</c>

00:51:37.109 --> 00:51:37.119 align:start position:0%
you know turns out that the uart
 

00:51:37.119 --> 00:51:39.030 align:start position:0%
you know turns out that the uart
actually<00:51:37.520><c> has</c><00:51:37.839><c> only</c><00:51:38.160><c> one</c><00:51:38.400><c> lock</c>

00:51:39.030 --> 00:51:39.040 align:start position:0%
actually has only one lock
 

00:51:39.040 --> 00:51:40.549 align:start position:0%
actually has only one lock
so<00:51:39.280><c> you</c><00:51:39.359><c> can</c><00:51:39.520><c> think</c><00:51:39.680><c> about</c><00:51:39.839><c> this</c><00:51:40.000><c> as</c><00:51:40.240><c> a</c>

00:51:40.549 --> 00:51:40.559 align:start position:0%
so you can think about this as a
 

00:51:40.559 --> 00:51:42.309 align:start position:0%
so you can think about this as a
reasonable<00:51:40.960><c> coarse</c><00:51:41.280><c> grained</c><00:51:41.839><c> uh</c>

00:51:42.309 --> 00:51:42.319 align:start position:0%
reasonable coarse grained uh
 

00:51:42.319 --> 00:51:44.230 align:start position:0%
reasonable coarse grained uh
design<00:51:42.720><c> at</c><00:51:42.800><c> this</c><00:51:42.960><c> particular</c><00:51:43.359><c> point</c><00:51:44.000><c> at</c><00:51:44.079><c> least</c>

00:51:44.230 --> 00:51:44.240 align:start position:0%
design at this particular point at least
 

00:51:44.240 --> 00:51:45.349 align:start position:0%
design at this particular point at least
for<00:51:44.400><c> the</c><00:51:44.480><c> uart</c>

00:51:45.349 --> 00:51:45.359 align:start position:0%
for the uart
 

00:51:45.359 --> 00:51:46.710 align:start position:0%
for the uart
and<00:51:45.440><c> that</c><00:51:45.599><c> particular</c><00:51:46.079><c> lock</c><00:51:46.480><c> you</c><00:51:46.559><c> know</c>

00:51:46.710 --> 00:51:46.720 align:start position:0%
and that particular lock you know
 

00:51:46.720 --> 00:51:48.710 align:start position:0%
and that particular lock you know
protects<00:51:47.440><c> uh</c><00:51:47.760><c> basically</c><00:51:48.160><c> the</c><00:51:48.240><c> uart</c>

00:51:48.710 --> 00:51:48.720 align:start position:0%
protects uh basically the uart
 

00:51:48.720 --> 00:51:51.349 align:start position:0%
protects uh basically the uart
transmission<00:51:49.280><c> buffer</c><00:51:50.160><c> and</c><00:51:50.480><c> the</c><00:51:51.119><c> right</c>

00:51:51.349 --> 00:51:51.359 align:start position:0%
transmission buffer and the right
 

00:51:51.359 --> 00:51:52.069 align:start position:0%
transmission buffer and the right
pointer

00:51:52.069 --> 00:51:52.079 align:start position:0%
pointer
 

00:51:52.079 --> 00:51:55.589 align:start position:0%
pointer
and<00:51:52.240><c> the</c><00:51:52.559><c> read</c><00:51:53.200><c> pointer</c><00:51:53.920><c> and</c><00:51:55.040><c> so</c><00:51:55.200><c> when</c><00:51:55.359><c> we</c>

00:51:55.589 --> 00:51:55.599 align:start position:0%
and the read pointer and so when we
 

00:51:55.599 --> 00:51:56.870 align:start position:0%
and the read pointer and so when we
transmit<00:51:56.079><c> you</c><00:51:56.240><c> know</c><00:51:56.400><c> the</c>

00:51:56.870 --> 00:51:56.880 align:start position:0%
transmit you know the
 

00:51:56.880 --> 00:51:59.030 align:start position:0%
transmit you know the
right<00:51:57.119><c> pointer</c><00:51:58.079><c> points</c><00:51:58.319><c> to</c><00:51:58.480><c> the</c><00:51:58.559><c> next</c><00:51:58.800><c> free</c>

00:51:59.030 --> 00:51:59.040 align:start position:0%
right pointer points to the next free
 

00:51:59.040 --> 00:52:01.190 align:start position:0%
right pointer points to the next free
slot<00:51:59.520><c> in</c><00:51:59.680><c> the</c><00:52:00.000><c> transmission</c><00:52:00.559><c> buffer</c>

00:52:01.190 --> 00:52:01.200 align:start position:0%
slot in the transmission buffer
 

00:52:01.200 --> 00:52:03.109 align:start position:0%
slot in the transmission buffer
and<00:52:01.359><c> the</c><00:52:01.440><c> read</c><00:52:01.680><c> pointer</c><00:52:02.079><c> is</c><00:52:02.240><c> the</c><00:52:02.640><c> next</c><00:52:02.960><c> law</c>

00:52:03.109 --> 00:52:03.119 align:start position:0%
and the read pointer is the next law
 

00:52:03.119 --> 00:52:05.190 align:start position:0%
and the read pointer is the next law
that<00:52:03.280><c> actually</c><00:52:03.520><c> needs</c><00:52:03.760><c> to</c><00:52:03.839><c> be</c><00:52:03.920><c> transmitted</c>

00:52:05.190 --> 00:52:05.200 align:start position:0%
that actually needs to be transmitted
 

00:52:05.200 --> 00:52:09.109 align:start position:0%
that actually needs to be transmitted
okay<00:52:05.440><c> this</c><00:52:05.680><c> is</c><00:52:05.839><c> our</c><00:52:06.480><c> uh</c><00:52:07.040><c> standard</c><00:52:08.079><c> design</c>

00:52:09.109 --> 00:52:09.119 align:start position:0%
okay this is our uh standard design
 

00:52:09.119 --> 00:52:12.710 align:start position:0%
okay this is our uh standard design
for<00:52:09.520><c> uh</c><00:52:09.760><c> parallelism</c><00:52:10.880><c> uh</c><00:52:11.119><c> over</c><00:52:11.599><c> consumer</c>

00:52:12.710 --> 00:52:12.720 align:start position:0%
for uh parallelism uh over consumer
 

00:52:12.720 --> 00:52:15.670 align:start position:0%
for uh parallelism uh over consumer
producer<00:52:13.119><c> consumer</c><00:52:13.520><c> parallelism</c><00:52:15.119><c> so</c><00:52:15.280><c> let</c><00:52:15.440><c> me</c>

00:52:15.670 --> 00:52:15.680 align:start position:0%
producer consumer parallelism so let me
 

00:52:15.680 --> 00:52:18.309 align:start position:0%
producer consumer parallelism so let me
go<00:52:15.839><c> back</c><00:52:16.160><c> and</c>

00:52:18.309 --> 00:52:18.319 align:start position:0%
go back and
 

00:52:18.319 --> 00:52:24.790 align:start position:0%
go back and
brought<00:52:18.559><c> it</c><00:52:18.720><c> out</c><00:52:19.440><c> so</c><00:52:20.800><c> case</c><00:52:21.119><c> study</c>

00:52:24.790 --> 00:52:24.800 align:start position:0%
 
 

00:52:24.800 --> 00:52:29.829 align:start position:0%
 
uart<00:52:27.280><c> and</c><00:52:27.440><c> there's</c><00:52:27.680><c> basically</c><00:52:28.079><c> a</c><00:52:28.160><c> buffer</c>

00:52:29.829 --> 00:52:29.839 align:start position:0%
uart and there's basically a buffer
 

00:52:29.839 --> 00:52:31.430 align:start position:0%
uart and there's basically a buffer
and<00:52:30.000><c> there's</c><00:52:30.240><c> a</c><00:52:30.319><c> read</c><00:52:30.559><c> point</c><00:52:30.880><c> there's</c><00:52:31.119><c> a</c><00:52:31.200><c> right</c>

00:52:31.430 --> 00:52:31.440 align:start position:0%
and there's a read point there's a right
 

00:52:31.440 --> 00:52:32.950 align:start position:0%
and there's a read point there's a right
pointer<00:52:32.400><c> or</c>

00:52:32.950 --> 00:52:32.960 align:start position:0%
pointer or
 

00:52:32.960 --> 00:52:37.030 align:start position:0%
pointer or
right<00:52:33.440><c> read</c><00:52:33.760><c> index</c><00:52:34.240><c> and</c><00:52:34.800><c> read</c><00:52:35.119><c> index</c>

00:52:37.030 --> 00:52:37.040 align:start position:0%
right read index and read index
 

00:52:37.040 --> 00:52:42.790 align:start position:0%
right read index and read index
this<00:52:37.280><c> has</c><00:52:37.440><c> to</c><00:52:37.520><c> go</c><00:52:37.680><c> to</c><00:52:37.920><c> the</c><00:52:38.240><c> uart</c><00:52:39.839><c> displayed</c>

00:52:42.790 --> 00:52:42.800 align:start position:0%
 
 

00:52:42.800 --> 00:52:46.630 align:start position:0%
 
and<00:52:43.040><c> this</c><00:52:43.280><c> is</c><00:52:43.359><c> the</c><00:52:44.839><c> writer</c>

00:52:46.630 --> 00:52:46.640 align:start position:0%
and this is the writer
 

00:52:46.640 --> 00:52:49.190 align:start position:0%
and this is the writer
printf<00:52:47.839><c> maybe</c><00:52:48.240><c> that</c><00:52:48.480><c> actually</c><00:52:48.720><c> sticks</c>

00:52:49.190 --> 00:52:49.200 align:start position:0%
printf maybe that actually sticks
 

00:52:49.200 --> 00:52:52.549 align:start position:0%
printf maybe that actually sticks
characters<00:52:49.680><c> into</c><00:52:50.000><c> this</c><00:52:50.240><c> buffer</c>

00:52:52.549 --> 00:52:52.559 align:start position:0%
characters into this buffer
 

00:52:52.559 --> 00:52:55.349 align:start position:0%
characters into this buffer
okay<00:52:53.839><c> and</c><00:52:54.079><c> so</c><00:52:54.480><c> you</c><00:52:54.559><c> know</c><00:52:54.720><c> what</c><00:52:54.880><c> we</c><00:52:54.880><c> can</c><00:52:55.040><c> see</c><00:52:55.200><c> is</c>

00:52:55.349 --> 00:52:55.359 align:start position:0%
okay and so you know what we can see is
 

00:52:55.359 --> 00:52:56.230 align:start position:0%
okay and so you know what we can see is
that<00:52:55.440><c> the</c><00:52:55.599><c> lock</c>

00:52:56.230 --> 00:52:56.240 align:start position:0%
that the lock
 

00:52:56.240 --> 00:53:03.349 align:start position:0%
that the lock
uh<00:52:56.800><c> you</c><00:52:56.960><c> know</c><00:52:57.280><c> the</c><00:52:57.440><c> lock</c><00:52:57.680><c> has</c><00:52:57.839><c> multiple</c><00:52:58.839><c> rolls</c>

00:53:03.349 --> 00:53:03.359 align:start position:0%
 
 

00:53:03.359 --> 00:53:05.670 align:start position:0%
 
one<00:53:03.839><c> is</c><00:53:04.160><c> to</c><00:53:04.559><c> basically</c><00:53:04.960><c> protect</c><00:53:05.280><c> this</c><00:53:05.359><c> data</c>

00:53:05.670 --> 00:53:05.680 align:start position:0%
one is to basically protect this data
 

00:53:05.680 --> 00:53:11.510 align:start position:0%
one is to basically protect this data
structure

00:53:11.510 --> 00:53:11.520 align:start position:0%
 
 

00:53:11.520 --> 00:53:12.829 align:start position:0%
 
and<00:53:11.680><c> this</c><00:53:11.839><c> data</c><00:53:12.079><c> structure</c><00:53:12.400><c> has</c><00:53:12.480><c> some</c>

00:53:12.829 --> 00:53:12.839 align:start position:0%
and this data structure has some
 

00:53:12.839 --> 00:53:14.630 align:start position:0%
and this data structure has some
invariance

00:53:14.630 --> 00:53:14.640 align:start position:0%
invariance
 

00:53:14.640 --> 00:53:17.349 align:start position:0%
invariance
namely<00:53:15.599><c> the</c><00:53:15.760><c> read</c><00:53:16.000><c> to</c><00:53:16.160><c> proceed</c><00:53:16.720><c> you</c><00:53:16.800><c> know</c><00:53:17.200><c> the</c>

00:53:17.349 --> 00:53:17.359 align:start position:0%
namely the read to proceed you know the
 

00:53:17.359 --> 00:53:19.190 align:start position:0%
namely the read to proceed you know the
right

00:53:19.190 --> 00:53:19.200 align:start position:0%
right
 

00:53:19.200 --> 00:53:22.069 align:start position:0%
right
anything<00:53:19.680><c> between</c><00:53:20.400><c> r</c><00:53:20.640><c> and</c><00:53:20.720><c> w</c><00:53:21.359><c> our</c><00:53:21.599><c> characters</c>

00:53:22.069 --> 00:53:22.079 align:start position:0%
anything between r and w our characters
 

00:53:22.079 --> 00:53:23.349 align:start position:0%
anything between r and w our characters
that<00:53:22.160><c> need</c><00:53:22.319><c> to</c><00:53:22.400><c> be</c><00:53:22.640><c> sent</c>

00:53:23.349 --> 00:53:23.359 align:start position:0%
that need to be sent
 

00:53:23.359 --> 00:53:25.510 align:start position:0%
that need to be sent
anything<00:53:23.760><c> between</c><00:53:24.079><c> w</c><00:53:24.480><c> and</c><00:53:24.640><c> r</c><00:53:24.960><c> are</c><00:53:25.040><c> things</c><00:53:25.280><c> that</c>

00:53:25.510 --> 00:53:25.520 align:start position:0%
anything between w and r are things that
 

00:53:25.520 --> 00:53:29.030 align:start position:0%
anything between w and r are things that
actually<00:53:26.079><c> are</c><00:53:26.240><c> empty</c><00:53:26.839><c> slots</c><00:53:27.760><c> and</c><00:53:28.480><c> the</c><00:53:28.640><c> locks</c>

00:53:29.030 --> 00:53:29.040 align:start position:0%
actually are empty slots and the locks
 

00:53:29.040 --> 00:53:30.470 align:start position:0%
actually are empty slots and the locks
basically<00:53:29.440><c> help</c><00:53:29.680><c> us</c>

00:53:30.470 --> 00:53:30.480 align:start position:0%
basically help us
 

00:53:30.480 --> 00:53:34.069 align:start position:0%
basically help us
maintain<00:53:31.440><c> that</c><00:53:31.680><c> invariant</c>

00:53:34.069 --> 00:53:34.079 align:start position:0%
maintain that invariant
 

00:53:34.079 --> 00:53:37.109 align:start position:0%
maintain that invariant
so<00:53:34.559><c> here's</c><00:53:34.960><c> our</c>

00:53:37.109 --> 00:53:37.119 align:start position:0%
so here's our
 

00:53:37.119 --> 00:53:40.230 align:start position:0%
so here's our
code<00:53:37.359><c> again</c><00:53:38.480><c> and</c><00:53:39.119><c> you</c><00:53:39.280><c> know</c><00:53:39.440><c> let's</c><00:53:39.920><c> look</c><00:53:40.160><c> at</c>

00:53:40.230 --> 00:53:40.240 align:start position:0%
code again and you know let's look at
 

00:53:40.240 --> 00:53:42.309 align:start position:0%
code again and you know let's look at
the<00:53:40.839><c> choirs</c><00:53:41.839><c> so</c>

00:53:42.309 --> 00:53:42.319 align:start position:0%
the choirs so
 

00:53:42.319 --> 00:53:45.510 align:start position:0%
the choirs so
here's<00:53:42.800><c> the</c><00:53:42.880><c> uart</c><00:53:43.280><c> put</c><00:53:43.520><c> c</c><00:53:44.480><c> and</c><00:53:45.119><c> you</c><00:53:45.200><c> know</c><00:53:45.440><c> the</c>

00:53:45.510 --> 00:53:45.520 align:start position:0%
here's the uart put c and you know the
 

00:53:45.520 --> 00:53:46.150 align:start position:0%
here's the uart put c and you know the
first<00:53:45.760><c> thing</c>

00:53:46.150 --> 00:53:46.160 align:start position:0%
first thing
 

00:53:46.160 --> 00:53:47.589 align:start position:0%
first thing
you<00:53:46.240><c> know</c><00:53:46.319><c> you</c><00:53:46.480><c> work</c><00:53:46.720><c> with</c><00:53:46.880><c> c</c><00:53:47.040><c> does</c><00:53:47.359><c> is</c>

00:53:47.589 --> 00:53:47.599 align:start position:0%
you know you work with c does is
 

00:53:47.599 --> 00:53:49.910 align:start position:0%
you know you work with c does is
actually<00:53:48.000><c> you</c><00:53:48.079><c> know</c><00:53:48.240><c> grab</c><00:53:48.559><c> the</c><00:53:48.720><c> lock</c>

00:53:49.910 --> 00:53:49.920 align:start position:0%
actually you know grab the lock
 

00:53:49.920 --> 00:53:53.349 align:start position:0%
actually you know grab the lock
uh<00:53:50.640><c> and</c><00:53:50.960><c> then</c><00:53:51.440><c> stick</c><00:53:52.319><c> the</c><00:53:52.720><c> character</c>

00:53:53.349 --> 00:53:53.359 align:start position:0%
uh and then stick the character
 

00:53:53.359 --> 00:53:55.349 align:start position:0%
uh and then stick the character
if<00:53:53.520><c> there's</c><00:53:53.839><c> a</c><00:53:54.160><c> place</c><00:53:54.400><c> in</c><00:53:54.480><c> the</c><00:53:54.559><c> buffer</c><00:53:55.040><c> sticks</c>

00:53:55.349 --> 00:53:55.359 align:start position:0%
if there's a place in the buffer sticks
 

00:53:55.359 --> 00:53:57.109 align:start position:0%
if there's a place in the buffer sticks
the<00:53:55.440><c> barrier</c><00:53:55.760><c> character</c><00:53:56.079><c> in</c><00:53:56.160><c> the</c><00:53:56.240><c> buffer</c>

00:53:57.109 --> 00:53:57.119 align:start position:0%
the barrier character in the buffer
 

00:53:57.119 --> 00:53:59.109 align:start position:0%
the barrier character in the buffer
and<00:53:57.280><c> starts</c><00:53:57.839><c> you</c><00:53:57.920><c> know</c><00:53:58.160><c> the</c><00:53:58.640><c> printing</c><00:53:59.040><c> and</c>

00:53:59.109 --> 00:53:59.119 align:start position:0%
and starts you know the printing and
 

00:53:59.119 --> 00:54:00.549 align:start position:0%
and starts you know the printing and
then<00:53:59.280><c> releases</c>

00:54:00.549 --> 00:54:00.559 align:start position:0%
then releases
 

00:54:00.559 --> 00:54:03.670 align:start position:0%
then releases
the<00:54:02.000><c> lock</c><00:54:02.720><c> so</c><00:54:02.960><c> if</c><00:54:03.200><c> two</c>

00:54:03.670 --> 00:54:03.680 align:start position:0%
the lock so if two
 

00:54:03.680 --> 00:54:06.710 align:start position:0%
the lock so if two
processes<00:54:04.319><c> at</c><00:54:04.480><c> the</c><00:54:04.559><c> same</c><00:54:04.960><c> time</c><00:54:06.000><c> call</c><00:54:06.319><c> uart</c>

00:54:06.710 --> 00:54:06.720 align:start position:0%
processes at the same time call uart
 

00:54:06.720 --> 00:54:07.829 align:start position:0%
processes at the same time call uart
quick<00:54:07.040><c> c</c>

00:54:07.829 --> 00:54:07.839 align:start position:0%
quick c
 

00:54:07.839 --> 00:54:10.630 align:start position:0%
quick c
then<00:54:08.319><c> this</c><00:54:08.559><c> lock</c><00:54:08.800><c> will</c><00:54:08.960><c> ensure</c><00:54:09.839><c> that</c><00:54:10.319><c> you</c><00:54:10.400><c> know</c>

00:54:10.630 --> 00:54:10.640 align:start position:0%
then this lock will ensure that you know
 

00:54:10.640 --> 00:54:12.069 align:start position:0%
then this lock will ensure that you know
one<00:54:10.880><c> character</c><00:54:11.280><c> from</c><00:54:11.359><c> the</c><00:54:11.440><c> first</c><00:54:11.680><c> process</c>

00:54:12.069 --> 00:54:12.079 align:start position:0%
one character from the first process
 

00:54:12.079 --> 00:54:13.270 align:start position:0%
one character from the first process
goes<00:54:12.240><c> in</c><00:54:12.319><c> the</c><00:54:12.400><c> first</c><00:54:12.640><c> slot</c>

00:54:13.270 --> 00:54:13.280 align:start position:0%
goes in the first slot
 

00:54:13.280 --> 00:54:16.390 align:start position:0%
goes in the first slot
and<00:54:13.440><c> then</c><00:54:14.160><c> the</c><00:54:14.960><c> uh</c><00:54:15.520><c> second</c><00:54:15.839><c> character</c>

00:54:16.390 --> 00:54:16.400 align:start position:0%
and then the uh second character
 

00:54:16.400 --> 00:54:17.990 align:start position:0%
and then the uh second character
of<00:54:16.559><c> the</c><00:54:16.720><c> second</c><00:54:16.960><c> process</c><00:54:17.359><c> you</c><00:54:17.520><c> know</c><00:54:17.599><c> goes</c><00:54:17.839><c> in</c>

00:54:17.990 --> 00:54:18.000 align:start position:0%
of the second process you know goes in
 

00:54:18.000 --> 00:54:19.670 align:start position:0%
of the second process you know goes in
the<00:54:18.079><c> next</c><00:54:18.319><c> slot</c><00:54:18.720><c> and</c><00:54:18.960><c> they're</c><00:54:19.200><c> known</c><00:54:19.440><c> as</c>

00:54:19.670 --> 00:54:19.680 align:start position:0%
the next slot and they're known as
 

00:54:19.680 --> 00:54:20.309 align:start position:0%
the next slot and they're known as
happen<00:54:19.920><c> to</c>

00:54:20.309 --> 00:54:20.319 align:start position:0%
happen to
 

00:54:20.319 --> 00:54:23.190 align:start position:0%
happen to
end<00:54:20.480><c> up</c><00:54:20.960><c> in</c><00:54:21.040><c> the</c><00:54:21.119><c> same</c><00:54:21.359><c> slot</c><00:54:22.640><c> right</c><00:54:22.800><c> so</c><00:54:22.960><c> this</c><00:54:23.119><c> is</c>

00:54:23.190 --> 00:54:23.200 align:start position:0%
end up in the same slot right so this is
 

00:54:23.200 --> 00:54:24.549 align:start position:0%
end up in the same slot right so this is
like<00:54:23.359><c> a</c><00:54:23.440><c> clear</c><00:54:23.760><c> example</c><00:54:24.240><c> where</c>

00:54:24.549 --> 00:54:24.559 align:start position:0%
like a clear example where
 

00:54:24.559 --> 00:54:27.750 align:start position:0%
like a clear example where
luck<00:54:25.040><c> you</c><00:54:25.200><c> know</c><00:54:25.359><c> helps</c><00:54:25.680><c> us</c><00:54:25.839><c> to</c><00:54:26.640><c> uh</c>

00:54:27.750 --> 00:54:27.760 align:start position:0%
luck you know helps us to uh
 

00:54:27.760 --> 00:54:30.870 align:start position:0%
luck you know helps us to uh
uh<00:54:29.119><c> you</c><00:54:29.200><c> know</c><00:54:29.440><c> avoid</c><00:54:29.839><c> the</c><00:54:29.920><c> race</c><00:54:30.079><c> condition</c>

00:54:30.870 --> 00:54:30.880 align:start position:0%
uh you know avoid the race condition
 

00:54:30.880 --> 00:54:33.349 align:start position:0%
uh you know avoid the race condition
uh<00:54:31.200><c> because</c><00:54:31.440><c> otherwise</c><00:54:31.920><c> you</c><00:54:32.079><c> know</c><00:54:32.240><c> the</c><00:54:33.200><c> the</c>

00:54:33.349 --> 00:54:33.359 align:start position:0%
uh because otherwise you know the the
 

00:54:33.359 --> 00:54:35.030 align:start position:0%
uh because otherwise you know the the
second<00:54:33.680><c> process</c><00:54:34.079><c> might</c><00:54:34.319><c> over</c>

00:54:35.030 --> 00:54:35.040 align:start position:0%
second process might over
 

00:54:35.040 --> 00:54:36.870 align:start position:0%
second process might over
write<00:54:35.359><c> you</c><00:54:35.440><c> know</c><00:54:35.599><c> the</c><00:54:35.760><c> first</c><00:54:36.319><c> processes</c>

00:54:36.870 --> 00:54:36.880 align:start position:0%
write you know the first processes
 

00:54:36.880 --> 00:54:38.630 align:start position:0%
write you know the first processes
character

00:54:38.630 --> 00:54:38.640 align:start position:0%
character
 

00:54:38.640 --> 00:54:41.349 align:start position:0%
character
so<00:54:38.799><c> that's</c><00:54:39.040><c> one</c><00:54:39.280><c> part</c><00:54:40.000><c> so</c><00:54:40.160><c> then</c><00:54:40.319><c> we</c><00:54:40.720><c> go</c><00:54:40.880><c> look</c><00:54:41.119><c> at</c>

00:54:41.349 --> 00:54:41.359 align:start position:0%
so that's one part so then we go look at
 

00:54:41.359 --> 00:54:43.030 align:start position:0%
so that's one part so then we go look at
uh

00:54:43.030 --> 00:54:43.040 align:start position:0%
uh
 

00:54:43.040 --> 00:54:44.150 align:start position:0%
uh
we<00:54:43.119><c> did</c><00:54:43.280><c> that</c><00:54:43.440><c> a</c><00:54:43.440><c> little</c><00:54:43.599><c> bit</c><00:54:43.760><c> before</c><00:54:44.000><c> if</c><00:54:44.079><c> you</c>

00:54:44.150 --> 00:54:44.160 align:start position:0%
we did that a little bit before if you
 

00:54:44.160 --> 00:54:45.670 align:start position:0%
we did that a little bit before if you
look<00:54:44.319><c> at</c><00:54:44.400><c> start</c><00:54:44.880><c> you</c><00:54:45.040><c> know</c><00:54:45.119><c> we</c><00:54:45.280><c> see</c><00:54:45.359><c> a</c><00:54:45.440><c> couple</c>

00:54:45.670 --> 00:54:45.680 align:start position:0%
look at start you know we see a couple
 

00:54:45.680 --> 00:54:47.270 align:start position:0%
look at start you know we see a couple
more<00:54:45.839><c> things</c><00:54:46.079><c> going</c><00:54:46.319><c> on</c>

00:54:47.270 --> 00:54:47.280 align:start position:0%
more things going on
 

00:54:47.280 --> 00:54:50.390 align:start position:0%
more things going on
um<00:54:48.640><c> the</c><00:54:49.040><c> uh</c>

00:54:50.390 --> 00:54:50.400 align:start position:0%
um the uh
 

00:54:50.400 --> 00:54:53.990 align:start position:0%
um the uh
we<00:54:50.559><c> see</c><00:54:50.799><c> actually</c><00:54:51.119><c> that</c><00:54:51.359><c> the</c><00:54:53.280><c> uh</c><00:54:53.599><c> if</c><00:54:53.760><c> the</c>

00:54:53.990 --> 00:54:54.000 align:start position:0%
we see actually that the uh if the
 

00:54:54.000 --> 00:54:57.270 align:start position:0%
we see actually that the uh if the
buffer<00:54:54.400><c> is</c><00:54:54.480><c> not</c><00:54:54.960><c> you</c><00:54:55.119><c> know</c><00:54:55.280><c> the</c><00:54:56.160><c> uh</c>

00:54:57.270 --> 00:54:57.280 align:start position:0%
buffer is not you know the uh
 

00:54:57.280 --> 00:54:59.829 align:start position:0%
buffer is not you know the uh
if<00:54:57.440><c> the</c><00:54:57.520><c> buffer</c><00:54:57.839><c> is</c><00:54:57.920><c> not</c><00:54:58.160><c> empty</c><00:54:59.040><c> then</c><00:54:59.599><c> you</c><00:54:59.680><c> know</c>

00:54:59.829 --> 00:54:59.839 align:start position:0%
if the buffer is not empty then you know
 

00:54:59.839 --> 00:55:00.549 align:start position:0%
if the buffer is not empty then you know
we<00:55:00.000><c> know</c><00:55:00.240><c> that</c>

00:55:00.549 --> 00:55:00.559 align:start position:0%
we know that
 

00:55:00.559 --> 00:55:02.549 align:start position:0%
we know that
basically<00:55:01.040><c> there's</c><00:55:01.280><c> a</c><00:55:01.359><c> bunch</c><00:55:01.599><c> of</c><00:55:02.000><c> uh</c>

00:55:02.549 --> 00:55:02.559 align:start position:0%
basically there's a bunch of uh
 

00:55:02.559 --> 00:55:04.789 align:start position:0%
basically there's a bunch of uh
characters<00:55:02.960><c> that</c><00:55:03.119><c> are</c><00:55:03.200><c> being</c><00:55:03.599><c> progressed</c>

00:55:04.789 --> 00:55:04.799 align:start position:0%
characters that are being progressed
 

00:55:04.799 --> 00:55:07.750 align:start position:0%
characters that are being progressed
or<00:55:05.040><c> being</c><00:55:05.359><c> sent</c><00:55:06.480><c> and</c><00:55:06.960><c> you</c><00:55:07.040><c> know</c><00:55:07.200><c> the</c><00:55:07.359><c> lock</c><00:55:07.680><c> you</c>

00:55:07.750 --> 00:55:07.760 align:start position:0%
or being sent and you know the lock you
 

00:55:07.760 --> 00:55:09.349 align:start position:0%
or being sent and you know the lock you
know<00:55:07.920><c> make</c><00:55:08.079><c> sure</c><00:55:08.319><c> that</c><00:55:08.480><c> we</c><00:55:08.640><c> don't</c><00:55:08.799><c> really</c>

00:55:09.349 --> 00:55:09.359 align:start position:0%
know make sure that we don't really
 

00:55:09.359 --> 00:55:11.910 align:start position:0%
know make sure that we don't really
uh<00:55:09.760><c> overwrite</c><00:55:10.240><c> any</c><00:55:10.480><c> of</c><00:55:10.640><c> those</c><00:55:11.119><c> and</c><00:55:11.359><c> so</c>

00:55:11.910 --> 00:55:11.920 align:start position:0%
uh overwrite any of those and so
 

00:55:11.920 --> 00:55:13.510 align:start position:0%
uh overwrite any of those and so
anything<00:55:12.240><c> that's</c><00:55:12.400><c> sort</c><00:55:12.559><c> of</c><00:55:12.720><c> at</c><00:55:12.799><c> the</c>

00:55:13.510 --> 00:55:13.520 align:start position:0%
anything that's sort of at the
 

00:55:13.520 --> 00:55:17.030 align:start position:0%
anything that's sort of at the
tail<00:55:13.839><c> end</c><00:55:14.160><c> of</c><00:55:14.319><c> the</c><00:55:14.799><c> queue</c><00:55:15.359><c> uh</c><00:55:15.920><c> is</c><00:55:16.319><c> actually</c><00:55:16.720><c> uh</c>

00:55:17.030 --> 00:55:17.040 align:start position:0%
tail end of the queue uh is actually uh
 

00:55:17.040 --> 00:55:18.150 align:start position:0%
tail end of the queue uh is actually uh
being<00:55:17.359><c> processed</c>

00:55:18.150 --> 00:55:18.160 align:start position:0%
being processed
 

00:55:18.160 --> 00:55:21.910 align:start position:0%
being processed
by<00:55:18.319><c> the</c><00:55:18.480><c> uart</c><00:55:19.440><c> uh</c>

00:55:21.910 --> 00:55:21.920 align:start position:0%
 
 

00:55:21.920 --> 00:55:26.390 align:start position:0%
 
itself<00:55:22.559><c> so</c><00:55:23.520><c> tail</c><00:55:23.839><c> end</c>

00:55:26.390 --> 00:55:26.400 align:start position:0%
 
 

00:55:26.400 --> 00:55:30.230 align:start position:0%
 
is<00:55:26.640><c> in</c><00:55:26.880><c> flight</c>

00:55:30.230 --> 00:55:30.240 align:start position:0%
 
 

00:55:30.240 --> 00:55:32.950 align:start position:0%
 
and<00:55:30.720><c> we</c><00:55:30.880><c> make</c><00:55:31.040><c> sure</c><00:55:31.280><c> that</c><00:55:31.440><c> we</c><00:55:31.520><c> basically</c><00:55:32.000><c> don't</c>

00:55:32.950 --> 00:55:32.960 align:start position:0%
and we make sure that we basically don't
 

00:55:32.960 --> 00:55:35.109 align:start position:0%
and we make sure that we basically don't
modify<00:55:33.520><c> or</c><00:55:33.920><c> interfere</c><00:55:34.400><c> with</c><00:55:34.559><c> that</c><00:55:34.640><c> particular</c>

00:55:35.109 --> 00:55:35.119 align:start position:0%
modify or interfere with that particular
 

00:55:35.119 --> 00:55:36.230 align:start position:0%
modify or interfere with that particular
aspect<00:55:35.440><c> by</c><00:55:35.599><c> you</c><00:55:35.760><c> know</c>

00:55:36.230 --> 00:55:36.240 align:start position:0%
aspect by you know
 

00:55:36.240 --> 00:55:39.589 align:start position:0%
aspect by you know
grabbing<00:55:36.559><c> a</c><00:55:36.640><c> lock</c><00:55:38.079><c> and</c><00:55:38.160><c> then</c><00:55:38.319><c> finally</c>

00:55:39.589 --> 00:55:39.599 align:start position:0%
grabbing a lock and then finally
 

00:55:39.599 --> 00:55:42.150 align:start position:0%
grabbing a lock and then finally
the<00:55:39.760><c> sort</c><00:55:39.920><c> of</c><00:55:40.000><c> more</c><00:55:40.240><c> and</c><00:55:40.319><c> more</c><00:55:41.119><c> thing</c><00:55:41.359><c> is</c><00:55:41.520><c> that</c>

00:55:42.150 --> 00:55:42.160 align:start position:0%
the sort of more and more thing is that
 

00:55:42.160 --> 00:55:44.390 align:start position:0%
the sort of more and more thing is that
the<00:55:42.400><c> rights</c>

00:55:44.390 --> 00:55:44.400 align:start position:0%
the rights
 

00:55:44.400 --> 00:55:46.390 align:start position:0%
the rights
you<00:55:44.559><c> know</c><00:55:44.720><c> to</c><00:55:44.960><c> the</c><00:55:45.119><c> registers</c><00:55:45.760><c> of</c><00:55:45.839><c> the</c><00:55:45.920><c> uart</c>

00:55:46.390 --> 00:55:46.400 align:start position:0%
you know to the registers of the uart
 

00:55:46.400 --> 00:55:47.829 align:start position:0%
you know to the registers of the uart
like<00:55:46.559><c> the</c><00:55:46.720><c> thr</c><00:55:47.280><c> register</c>

00:55:47.829 --> 00:55:47.839 align:start position:0%
like the thr register
 

00:55:47.839 --> 00:55:49.589 align:start position:0%
like the thr register
which<00:55:48.000><c> one</c><00:55:48.160><c> there's</c><00:55:48.400><c> only</c><00:55:48.640><c> one</c><00:55:49.280><c> you</c><00:55:49.440><c> know</c>

00:55:49.589 --> 00:55:49.599 align:start position:0%
which one there's only one you know
 

00:55:49.599 --> 00:55:51.270 align:start position:0%
which one there's only one you know
basically<00:55:50.000><c> the</c><00:55:50.160><c> lock</c><00:55:50.400><c> ensures</c>

00:55:51.270 --> 00:55:51.280 align:start position:0%
basically the lock ensures
 

00:55:51.280 --> 00:55:52.950 align:start position:0%
basically the lock ensures
uh<00:55:51.680><c> you</c><00:55:51.839><c> remember</c><00:55:52.160><c> that</c><00:55:52.240><c> you</c><00:55:52.400><c> are</c><00:55:52.559><c> start</c><00:55:52.880><c> is</c>

00:55:52.950 --> 00:55:52.960 align:start position:0%
uh you remember that you are start is
 

00:55:52.960 --> 00:55:55.030 align:start position:0%
uh you remember that you are start is
called<00:55:53.280><c> with</c><00:55:53.440><c> the</c><00:55:53.839><c> lock</c><00:55:54.240><c> held</c>

00:55:55.030 --> 00:55:55.040 align:start position:0%
called with the lock held
 

00:55:55.040 --> 00:55:57.349 align:start position:0%
called with the lock held
uh<00:55:55.280><c> ensures</c><00:55:55.760><c> that</c><00:55:55.839><c> there's</c><00:55:56.400><c> only</c><00:55:56.640><c> one</c><00:55:56.960><c> writer</c>

00:55:57.349 --> 00:55:57.359 align:start position:0%
uh ensures that there's only one writer
 

00:55:57.359 --> 00:55:58.390 align:start position:0%
uh ensures that there's only one writer
you<00:55:57.440><c> know</c><00:55:57.520><c> to</c><00:55:57.680><c> the</c><00:55:57.760><c> ta</c>

00:55:58.390 --> 00:55:58.400 align:start position:0%
you know to the ta
 

00:55:58.400 --> 00:56:01.510 align:start position:0%
you know to the ta
register<00:55:59.839><c> and</c><00:56:00.000><c> so</c><00:56:00.640><c> another</c><00:56:01.200><c> sort</c><00:56:01.359><c> of</c>

00:56:01.510 --> 00:56:01.520 align:start position:0%
register and so another sort of
 

00:56:01.520 --> 00:56:01.990 align:start position:0%
register and so another sort of
invariant

00:56:01.990 --> 00:56:02.000 align:start position:0%
invariant
 

00:56:02.000 --> 00:56:04.470 align:start position:0%
invariant
or<00:56:02.160><c> another</c><00:56:02.480><c> aspect</c><00:56:02.799><c> that</c><00:56:03.200><c> the</c><00:56:03.359><c> locking</c>

00:56:04.470 --> 00:56:04.480 align:start position:0%
or another aspect that the locking
 

00:56:04.480 --> 00:56:05.910 align:start position:0%
or another aspect that the locking
enforces<00:56:05.119><c> is</c><00:56:05.359><c> that</c>

00:56:05.910 --> 00:56:05.920 align:start position:0%
enforces is that
 

00:56:05.920 --> 00:56:10.470 align:start position:0%
enforces is that
hardware<00:56:06.319><c> registers</c>

00:56:10.470 --> 00:56:10.480 align:start position:0%
 
 

00:56:10.480 --> 00:56:16.549 align:start position:0%
 
have<00:56:10.720><c> one</c><00:56:14.839><c> writer</c>

00:56:16.549 --> 00:56:16.559 align:start position:0%
have one writer
 

00:56:16.559 --> 00:56:20.069 align:start position:0%
have one writer
okay<00:56:18.559><c> now</c><00:56:18.799><c> there's</c><00:56:18.960><c> one</c><00:56:19.200><c> other</c><00:56:19.520><c> instant</c><00:56:19.920><c> thing</c>

00:56:20.069 --> 00:56:20.079 align:start position:0%
okay now there's one other instant thing
 

00:56:20.079 --> 00:56:21.030 align:start position:0%
okay now there's one other instant thing
that<00:56:20.240><c> i</c><00:56:20.400><c> want</c><00:56:20.559><c> to</c>

00:56:21.030 --> 00:56:21.040 align:start position:0%
that i want to
 

00:56:21.040 --> 00:56:24.150 align:start position:0%
that i want to
uh<00:56:21.440><c> talk</c><00:56:21.680><c> a</c><00:56:21.839><c> little</c><00:56:22.079><c> bit</c><00:56:22.160><c> about</c><00:56:23.119><c> and</c><00:56:23.359><c> that</c><00:56:23.680><c> is</c>

00:56:24.150 --> 00:56:24.160 align:start position:0%
uh talk a little bit about and that is
 

00:56:24.160 --> 00:56:26.870 align:start position:0%
uh talk a little bit about and that is
uh<00:56:24.960><c> you</c><00:56:25.040><c> know</c><00:56:25.200><c> if</c><00:56:25.440><c> the</c><00:56:25.920><c> uart</c><00:56:26.319><c> is</c><00:56:26.400><c> done</c><00:56:26.640><c> correct</c>

00:56:26.870 --> 00:56:26.880 align:start position:0%
uh you know if the uart is done correct
 

00:56:26.880 --> 00:56:28.549 align:start position:0%
uh you know if the uart is done correct
the<00:56:26.960><c> hard</c><00:56:27.119><c> work</c><00:56:27.359><c> is</c><00:56:27.440><c> done</c><00:56:27.680><c> then</c>

00:56:28.549 --> 00:56:28.559 align:start position:0%
the hard work is done then
 

00:56:28.559 --> 00:56:31.829 align:start position:0%
the hard work is done then
there<00:56:28.720><c> was</c><00:56:28.880><c> an</c><00:56:28.960><c> interrupt</c><00:56:30.240><c> and</c><00:56:31.119><c> uh</c>

00:56:31.829 --> 00:56:31.839 align:start position:0%
there was an interrupt and uh
 

00:56:31.839 --> 00:56:33.589 align:start position:0%
there was an interrupt and uh
and<00:56:31.920><c> as</c><00:56:32.079><c> you</c><00:56:32.240><c> know</c><00:56:32.559><c> we</c><00:56:32.720><c> noticed</c><00:56:32.960><c> before</c><00:56:33.280><c> york</c>

00:56:33.589 --> 00:56:33.599 align:start position:0%
and as you know we noticed before york
 

00:56:33.599 --> 00:56:36.150 align:start position:0%
and as you know we noticed before york
start<00:56:33.920><c> correct</c><00:56:34.240><c> you</c><00:56:34.400><c> know</c><00:56:34.559><c> we</c><00:56:34.720><c> have</c><00:56:34.880><c> to</c>

00:56:36.150 --> 00:56:36.160 align:start position:0%
start correct you know we have to
 

00:56:36.160 --> 00:56:38.069 align:start position:0%
start correct you know we have to
the<00:56:36.720><c> color</c><00:56:37.119><c> it's</c><00:56:37.280><c> it's</c><00:56:37.440><c> on</c><00:56:37.599><c> the</c><00:56:37.680><c> collar</c><00:56:37.920><c> to</c>

00:56:38.069 --> 00:56:38.079 align:start position:0%
the color it's it's on the collar to
 

00:56:38.079 --> 00:56:39.190 align:start position:0%
the color it's it's on the collar to
require<00:56:38.480><c> the</c><00:56:38.640><c> lock</c>

00:56:39.190 --> 00:56:39.200 align:start position:0%
require the lock
 

00:56:39.200 --> 00:56:42.549 align:start position:0%
require the lock
to<00:56:39.359><c> ensure</c><00:56:40.400><c> uh</c><00:56:41.040><c> that</c><00:56:41.839><c> uh</c><00:56:42.160><c> with</c>

00:56:42.549 --> 00:56:42.559 align:start position:0%
to ensure uh that uh with
 

00:56:42.559 --> 00:56:45.109 align:start position:0%
to ensure uh that uh with
multiple<00:56:43.359><c> uh</c><00:56:44.160><c> entities</c><00:56:44.640><c> writing</c><00:56:44.880><c> to</c><00:56:45.040><c> the</c>

00:56:45.109 --> 00:56:45.119 align:start position:0%
multiple uh entities writing to the
 

00:56:45.119 --> 00:56:46.630 align:start position:0%
multiple uh entities writing to the
right<00:56:45.359><c> register</c>

00:56:46.630 --> 00:56:46.640 align:start position:0%
right register
 

00:56:46.640 --> 00:56:50.549 align:start position:0%
right register
um<00:56:47.359><c> and</c><00:56:47.520><c> so</c><00:56:48.319><c> uh</c><00:56:48.720><c> the</c><00:56:48.880><c> uart</c><00:56:49.200><c> interrupt</c><00:56:49.599><c> itself</c>

00:56:50.549 --> 00:56:50.559 align:start position:0%
um and so uh the uart interrupt itself
 

00:56:50.559 --> 00:56:53.270 align:start position:0%
um and so uh the uart interrupt itself
could<00:56:50.960><c> run</c><00:56:51.760><c> in</c><00:56:52.000><c> parallel</c><00:56:52.799><c> you</c><00:56:52.880><c> know</c><00:56:53.040><c> with</c>

00:56:53.270 --> 00:56:53.280 align:start position:0%
could run in parallel you know with
 

00:56:53.280 --> 00:56:55.109 align:start position:0%
could run in parallel you know with
another<00:56:53.520><c> process</c><00:56:53.920><c> that</c><00:56:54.079><c> called</c><00:56:54.240><c> printf</c><00:56:54.720><c> so</c><00:56:54.960><c> if</c>

00:56:55.109 --> 00:56:55.119 align:start position:0%
another process that called printf so if
 

00:56:55.119 --> 00:56:56.870 align:start position:0%
another process that called printf so if
some<00:56:55.359><c> practical</c><00:56:55.760><c> printf</c>

00:56:56.870 --> 00:56:56.880 align:start position:0%
some practical printf
 

00:56:56.880 --> 00:56:59.750 align:start position:0%
some practical printf
that<00:56:57.040><c> runs</c><00:56:57.280><c> a</c><00:56:57.359><c> cpu</c><00:56:57.839><c> zero</c><00:56:58.559><c> and</c><00:56:58.799><c> on</c><00:56:59.040><c> cpu</c><00:56:59.520><c> one</c>

00:56:59.750 --> 00:56:59.760 align:start position:0%
that runs a cpu zero and on cpu one
 

00:56:59.760 --> 00:57:01.510 align:start position:0%
that runs a cpu zero and on cpu one
actually<00:57:00.079><c> takes</c><00:57:00.400><c> the</c><00:57:00.480><c> uart</c><00:57:00.880><c> interrupt</c><00:57:01.359><c> you</c>

00:57:01.510 --> 00:57:01.520 align:start position:0%
actually takes the uart interrupt you
 

00:57:01.520 --> 00:57:02.789 align:start position:0%
actually takes the uart interrupt you
know<00:57:01.680><c> because</c><00:57:01.920><c> maybe</c><00:57:02.160><c> it's</c><00:57:02.319><c> doing</c><00:57:02.480><c> nothing</c>

00:57:02.789 --> 00:57:02.799 align:start position:0%
know because maybe it's doing nothing
 

00:57:02.799 --> 00:57:03.910 align:start position:0%
know because maybe it's doing nothing
and<00:57:02.880><c> so</c><00:57:03.040><c> it's</c><00:57:03.119><c> ready</c><00:57:03.359><c> to</c><00:57:03.440><c> take</c><00:57:03.599><c> an</c><00:57:03.680><c> interrupt</c>

00:57:03.910 --> 00:57:03.920 align:start position:0%
and so it's ready to take an interrupt
 

00:57:03.920 --> 00:57:05.670 align:start position:0%
and so it's ready to take an interrupt
at<00:57:04.000><c> any</c><00:57:04.160><c> particular</c><00:57:04.480><c> point</c><00:57:04.720><c> in</c><00:57:04.799><c> time</c>

00:57:05.670 --> 00:57:05.680 align:start position:0%
at any particular point in time
 

00:57:05.680 --> 00:57:08.950 align:start position:0%
at any particular point in time
and<00:57:06.079><c> it</c><00:57:06.319><c> will</c><00:57:06.880><c> uh</c><00:57:07.280><c> call</c><00:57:07.520><c> your</c><00:57:07.839><c> start</c>

00:57:08.950 --> 00:57:08.960 align:start position:0%
and it will uh call your start
 

00:57:08.960 --> 00:57:10.549 align:start position:0%
and it will uh call your start
and<00:57:09.119><c> it</c><00:57:09.280><c> has</c><00:57:09.520><c> to</c><00:57:09.599><c> be</c><00:57:09.760><c> the</c><00:57:09.839><c> case</c><00:57:10.160><c> correct</c><00:57:10.480><c> you</c>

00:57:10.549 --> 00:57:10.559 align:start position:0%
and it has to be the case correct you
 

00:57:10.559 --> 00:57:11.910 align:start position:0%
and it has to be the case correct you
know<00:57:10.720><c> we</c><00:57:10.880><c> want</c><00:57:11.040><c> to</c><00:57:11.119><c> ensure</c><00:57:11.440><c> that</c><00:57:11.599><c> there's</c><00:57:11.839><c> a</c>

00:57:11.910 --> 00:57:11.920 align:start position:0%
know we want to ensure that there's a
 

00:57:11.920 --> 00:57:13.349 align:start position:0%
know we want to ensure that there's a
single<00:57:12.240><c> raider</c><00:57:12.559><c> you</c><00:57:12.640><c> know</c><00:57:12.799><c> to</c><00:57:12.880><c> these</c><00:57:13.040><c> hardware</c>

00:57:13.349 --> 00:57:13.359 align:start position:0%
single raider you know to these hardware
 

00:57:13.359 --> 00:57:14.390 align:start position:0%
single raider you know to these hardware
registers

00:57:14.390 --> 00:57:14.400 align:start position:0%
registers
 

00:57:14.400 --> 00:57:17.430 align:start position:0%
registers
uh<00:57:14.799><c> or</c><00:57:15.119><c> to</c><00:57:15.280><c> protect</c><00:57:15.680><c> you</c><00:57:15.760><c> know</c><00:57:15.920><c> the</c><00:57:16.960><c> variance</c>

00:57:17.430 --> 00:57:17.440 align:start position:0%
uh or to protect you know the variance
 

00:57:17.440 --> 00:57:18.150 align:start position:0%
uh or to protect you know the variance
actually<00:57:17.680><c> of</c><00:57:17.839><c> the</c>

00:57:18.150 --> 00:57:18.160 align:start position:0%
actually of the
 

00:57:18.160 --> 00:57:20.470 align:start position:0%
actually of the
transmission<00:57:18.640><c> buffer</c><00:57:19.440><c> uh</c><00:57:19.839><c> you</c><00:57:20.000><c> know</c><00:57:20.160><c> we</c><00:57:20.319><c> have</c>

00:57:20.470 --> 00:57:20.480 align:start position:0%
transmission buffer uh you know we have
 

00:57:20.480 --> 00:57:21.670 align:start position:0%
transmission buffer uh you know we have
to<00:57:20.559><c> acquire</c><00:57:20.880><c> the</c><00:57:20.960><c> lock</c>

00:57:21.670 --> 00:57:21.680 align:start position:0%
to acquire the lock
 

00:57:21.680 --> 00:57:24.470 align:start position:0%
to acquire the lock
and<00:57:21.839><c> so</c><00:57:22.000><c> it</c><00:57:22.160><c> is</c><00:57:22.319><c> the</c><00:57:22.480><c> case</c><00:57:22.960><c> that</c><00:57:23.359><c> uh</c><00:57:23.680><c> in</c><00:57:23.839><c> xv6</c>

00:57:24.470 --> 00:57:24.480 align:start position:0%
and so it is the case that uh in xv6
 

00:57:24.480 --> 00:57:25.430 align:start position:0%
and so it is the case that uh in xv6
actually<00:57:24.799><c> that</c>

00:57:25.430 --> 00:57:25.440 align:start position:0%
actually that
 

00:57:25.440 --> 00:57:27.670 align:start position:0%
actually that
interrupts<00:57:26.079><c> you</c><00:57:26.240><c> know</c><00:57:26.400><c> can</c><00:57:26.799><c> run</c><00:57:27.280><c> you</c><00:57:27.440><c> know</c><00:57:27.520><c> so</c>

00:57:27.670 --> 00:57:27.680 align:start position:0%
interrupts you know can run you know so
 

00:57:27.680 --> 00:57:29.670 align:start position:0%
interrupts you know can run you know so
the<00:57:27.839><c> bottom</c><00:57:28.079><c> half</c><00:57:28.400><c> of</c><00:57:28.480><c> the</c><00:57:28.640><c> driver</c><00:57:29.040><c> can</c><00:57:29.200><c> run</c>

00:57:29.670 --> 00:57:29.680 align:start position:0%
the bottom half of the driver can run
 

00:57:29.680 --> 00:57:32.950 align:start position:0%
the bottom half of the driver can run
truly<00:57:30.160><c> concurrent</c><00:57:30.799><c> on</c><00:57:31.119><c> uh</c><00:57:31.440><c> uh</c><00:57:32.480><c> on</c><00:57:32.640><c> different</c>

00:57:32.950 --> 00:57:32.960 align:start position:0%
truly concurrent on uh uh on different
 

00:57:32.960 --> 00:57:33.670 align:start position:0%
truly concurrent on uh uh on different
processors

00:57:33.670 --> 00:57:33.680 align:start position:0%
processors
 

00:57:33.680 --> 00:57:36.309 align:start position:0%
processors
with<00:57:33.920><c> the</c><00:57:34.079><c> top</c><00:57:34.400><c> half</c><00:57:34.720><c> of</c><00:57:34.960><c> the</c><00:57:35.280><c> driver</c><00:57:36.000><c> and</c><00:57:36.160><c> so</c>

00:57:36.309 --> 00:57:36.319 align:start position:0%
with the top half of the driver and so
 

00:57:36.319 --> 00:57:37.829 align:start position:0%
with the top half of the driver and so
therefore<00:57:36.640><c> your</c><00:57:36.880><c> interrupt</c>

00:57:37.829 --> 00:57:37.839 align:start position:0%
therefore your interrupt
 

00:57:37.839 --> 00:57:41.030 align:start position:0%
therefore your interrupt
functions<00:57:38.720><c> uh</c><00:57:39.040><c> also</c><00:57:39.280><c> acquire</c><00:57:39.680><c> walks</c><00:57:40.799><c> and</c><00:57:40.960><c> in</c>

00:57:41.030 --> 00:57:41.040 align:start position:0%
functions uh also acquire walks and in
 

00:57:41.040 --> 00:57:42.630 align:start position:0%
functions uh also acquire walks and in
fact<00:57:41.280><c> in</c><00:57:41.359><c> this</c><00:57:41.520><c> particular</c><00:57:41.920><c> case</c>

00:57:42.630 --> 00:57:42.640 align:start position:0%
fact in this particular case
 

00:57:42.640 --> 00:57:44.390 align:start position:0%
fact in this particular case
uh<00:57:42.960><c> you</c><00:57:43.040><c> know</c><00:57:43.200><c> it</c><00:57:43.440><c> requires</c><00:57:43.920><c> the</c><00:57:44.000><c> one</c><00:57:44.160><c> lock</c>

00:57:44.390 --> 00:57:44.400 align:start position:0%
uh you know it requires the one lock
 

00:57:44.400 --> 00:57:46.630 align:start position:0%
uh you know it requires the one lock
that<00:57:44.640><c> is</c><00:57:44.799><c> actually</c><00:57:45.040><c> in</c><00:57:45.119><c> the</c><00:57:45.280><c> uart</c><00:57:45.839><c> and</c>

00:57:46.630 --> 00:57:46.640 align:start position:0%
that is actually in the uart and
 

00:57:46.640 --> 00:57:47.990 align:start position:0%
that is actually in the uart and
then<00:57:46.799><c> calls</c><00:57:47.040><c> you</c><00:57:47.119><c> right</c><00:57:47.359><c> start</c><00:57:47.680><c> and</c><00:57:47.760><c> then</c>

00:57:47.990 --> 00:57:48.000 align:start position:0%
then calls you right start and then
 

00:57:48.000 --> 00:57:50.630 align:start position:0%
then calls you right start and then
releases<00:57:48.480><c> the</c><00:57:48.559><c> lock</c>

00:57:50.630 --> 00:57:50.640 align:start position:0%
releases the lock
 

00:57:50.640 --> 00:57:52.710 align:start position:0%
releases the lock
and<00:57:50.880><c> i'll</c><00:57:51.200><c> come</c><00:57:51.359><c> back</c><00:57:51.520><c> to</c><00:57:51.760><c> that</c><00:57:51.920><c> in</c><00:57:52.079><c> a</c><00:57:52.160><c> second</c>

00:57:52.710 --> 00:57:52.720 align:start position:0%
and i'll come back to that in a second
 

00:57:52.720 --> 00:57:54.549 align:start position:0%
and i'll come back to that in a second
because<00:57:52.960><c> there's</c><00:57:53.119><c> a</c><00:57:53.200><c> little</c><00:57:53.359><c> bit</c><00:57:53.520><c> trickiness</c>

00:57:54.549 --> 00:57:54.559 align:start position:0%
because there's a little bit trickiness
 

00:57:54.559 --> 00:57:58.069 align:start position:0%
because there's a little bit trickiness
uh<00:57:55.359><c> in</c><00:57:56.079><c> implementing</c><00:57:56.559><c> a</c><00:57:56.640><c> lock</c><00:57:57.280><c> in</c><00:57:57.440><c> such</c><00:57:57.680><c> a</c><00:57:57.760><c> way</c>

00:57:58.069 --> 00:57:58.079 align:start position:0%
uh in implementing a lock in such a way
 

00:57:58.079 --> 00:58:00.549 align:start position:0%
uh in implementing a lock in such a way
that<00:57:58.240><c> this</c><00:57:58.480><c> actually</c><00:57:58.720><c> works</c><00:57:59.040><c> out</c><00:57:59.200><c> correctly</c>

00:58:00.549 --> 00:58:00.559 align:start position:0%
that this actually works out correctly
 

00:58:00.559 --> 00:58:03.750 align:start position:0%
that this actually works out correctly
and<00:58:02.079><c> the</c><00:58:02.720><c> the</c><00:58:03.040><c> thing</c><00:58:03.200><c> that</c><00:58:03.440><c> actually</c><00:58:03.680><c> you</c>

00:58:03.750 --> 00:58:03.760 align:start position:0%
and the the thing that actually you
 

00:58:03.760 --> 00:58:04.630 align:start position:0%
and the the thing that actually you
should<00:58:03.920><c> be</c><00:58:04.000><c> worried</c><00:58:04.240><c> about</c>

00:58:04.630 --> 00:58:04.640 align:start position:0%
should be worried about
 

00:58:04.640 --> 00:58:07.670 align:start position:0%
should be worried about
is<00:58:04.799><c> that</c><00:58:06.400><c> i'll</c><00:58:06.799><c> actually</c><00:58:07.040><c> talk</c><00:58:07.200><c> about</c><00:58:07.359><c> it</c><00:58:07.440><c> in</c><00:58:07.599><c> a</c>

00:58:07.670 --> 00:58:07.680 align:start position:0%
is that i'll actually talk about it in a
 

00:58:07.680 --> 00:58:09.270 align:start position:0%
is that i'll actually talk about it in a
second<00:58:07.920><c> let</c><00:58:08.079><c> me</c><00:58:08.240><c> postpone</c><00:58:08.640><c> that</c><00:58:08.799><c> until</c><00:58:09.040><c> i</c><00:58:09.119><c> get</c>

00:58:09.270 --> 00:58:09.280 align:start position:0%
second let me postpone that until i get
 

00:58:09.280 --> 00:58:12.950 align:start position:0%
second let me postpone that until i get
there

00:58:12.950 --> 00:58:12.960 align:start position:0%
 
 

00:58:12.960 --> 00:58:16.549 align:start position:0%
 
okay<00:58:13.200><c> so</c><00:58:13.520><c> any</c><00:58:13.839><c> uh</c><00:58:14.480><c> questions</c><00:58:14.960><c> about</c><00:58:15.200><c> this</c><00:58:15.440><c> is</c><00:58:15.680><c> a</c>

00:58:16.549 --> 00:58:16.559 align:start position:0%
okay so any uh questions about this is a
 

00:58:16.559 --> 00:58:19.910 align:start position:0%
okay so any uh questions about this is a
simple<00:58:16.880><c> example</c><00:58:17.359><c> of</c><00:58:18.319><c> uh</c><00:58:18.720><c> lock</c><00:58:19.119><c> use</c>

00:58:19.910 --> 00:58:19.920 align:start position:0%
simple example of uh lock use
 

00:58:19.920 --> 00:58:29.670 align:start position:0%
simple example of uh lock use
in<00:58:20.240><c> the</c><00:58:20.839><c> uart</c>

00:58:29.670 --> 00:58:29.680 align:start position:0%
 
 

00:58:29.680 --> 00:58:32.710 align:start position:0%
 
okay<00:58:30.000><c> let</c><00:58:30.160><c> me</c><00:58:30.400><c> uh</c><00:58:31.200><c> that</c><00:58:31.359><c> brings</c><00:58:32.160><c> let</c><00:58:32.319><c> me</c>

00:58:32.710 --> 00:58:32.720 align:start position:0%
okay let me uh that brings let me
 

00:58:32.720 --> 00:58:35.990 align:start position:0%
okay let me uh that brings let me
talk<00:58:32.880><c> about</c><00:58:33.119><c> implementing</c><00:58:33.599><c> a</c><00:58:33.680><c> lock</c><00:58:34.960><c> uh</c>

00:58:35.990 --> 00:58:36.000 align:start position:0%
talk about implementing a lock uh
 

00:58:36.000 --> 00:58:38.870 align:start position:0%
talk about implementing a lock uh
and<00:58:36.160><c> so</c><00:58:36.319><c> the</c><00:58:36.480><c> spec</c><00:58:36.799><c> is</c><00:58:36.880><c> that</c><00:58:37.119><c> only</c><00:58:37.520><c> one</c><00:58:38.319><c> uh</c>

00:58:38.870 --> 00:58:38.880 align:start position:0%
and so the spec is that only one uh
 

00:58:38.880 --> 00:58:39.670 align:start position:0%
and so the spec is that only one uh
process

00:58:39.670 --> 00:58:39.680 align:start position:0%
process
 

00:58:39.680 --> 00:58:42.470 align:start position:0%
process
can<00:58:40.160><c> acquire</c><00:58:40.559><c> a</c><00:58:40.640><c> lock</c><00:58:41.200><c> uh</c><00:58:41.520><c> there's</c><00:58:41.760><c> no</c><00:58:42.000><c> more</c>

00:58:42.470 --> 00:58:42.480 align:start position:0%
can acquire a lock uh there's no more
 

00:58:42.480 --> 00:58:43.030 align:start position:0%
can acquire a lock uh there's no more
than

00:58:43.030 --> 00:58:43.040 align:start position:0%
than
 

00:58:43.040 --> 00:58:44.630 align:start position:0%
than
one<00:58:43.280><c> lock</c><00:58:43.440><c> holder</c><00:58:43.760><c> at</c><00:58:43.920><c> any</c><00:58:44.079><c> given</c><00:58:44.319><c> point</c><00:58:44.559><c> of</c>

00:58:44.630 --> 00:58:44.640 align:start position:0%
one lock holder at any given point of
 

00:58:44.640 --> 00:58:47.430 align:start position:0%
one lock holder at any given point of
time<00:58:45.599><c> and</c><00:58:46.079><c> and</c><00:58:46.400><c> we</c><00:58:46.559><c> now</c><00:58:46.720><c> want</c><00:58:46.880><c> to</c><00:58:46.960><c> look</c>

00:58:47.430 --> 00:58:47.440 align:start position:0%
time and and we now want to look
 

00:58:47.440 --> 00:58:48.870 align:start position:0%
time and and we now want to look
and<00:58:47.760><c> understand</c><00:58:48.240><c> actually</c><00:58:48.559><c> how</c><00:58:48.720><c> you</c>

00:58:48.870 --> 00:58:48.880 align:start position:0%
and understand actually how you
 

00:58:48.880 --> 00:58:50.150 align:start position:0%
and understand actually how you
implement<00:58:49.200><c> the</c><00:58:49.280><c> walk</c><00:58:49.520><c> in</c><00:58:49.599><c> such</c><00:58:49.760><c> a</c><00:58:49.839><c> way</c><00:58:50.000><c> that</c>

00:58:50.150 --> 00:58:50.160 align:start position:0%
implement the walk in such a way that
 

00:58:50.160 --> 00:58:51.990 align:start position:0%
implement the walk in such a way that
that<00:58:50.319><c> actually</c><00:58:50.640><c> is</c><00:58:50.720><c> guaranteed</c>

00:58:51.990 --> 00:58:52.000 align:start position:0%
that actually is guaranteed
 

00:58:52.000 --> 00:58:55.109 align:start position:0%
that actually is guaranteed
let<00:58:52.160><c> me</c><00:58:52.319><c> first</c><00:58:52.480><c> write</c><00:58:52.720><c> a</c><00:58:52.799><c> broken</c><00:58:53.119><c> lock</c><00:58:54.799><c> so</c><00:58:54.960><c> that</c>

00:58:55.109 --> 00:58:55.119 align:start position:0%
let me first write a broken lock so that
 

00:58:55.119 --> 00:58:55.910 align:start position:0%
let me first write a broken lock so that
we<00:58:55.280><c> understand</c>

00:58:55.910 --> 00:58:55.920 align:start position:0%
we understand
 

00:58:55.920 --> 00:58:59.270 align:start position:0%
we understand
you<00:58:56.000><c> know</c><00:58:56.160><c> what</c><00:58:56.319><c> the</c><00:58:56.559><c> challenges</c><00:58:58.880><c> for</c>

00:58:59.270 --> 00:58:59.280 align:start position:0%
you know what the challenges for
 

00:58:59.280 --> 00:59:05.190 align:start position:0%
you know what the challenges for
broken<00:59:02.839><c> acquire</c>

00:59:05.190 --> 00:59:05.200 align:start position:0%
broken acquire
 

00:59:05.200 --> 00:59:06.710 align:start position:0%
broken acquire
so<00:59:05.440><c> now</c><00:59:05.599><c> we</c><00:59:05.680><c> know</c><00:59:05.839><c> what</c><00:59:06.000><c> the</c><00:59:06.160><c> challenge</c><00:59:06.480><c> is</c>

00:59:06.710 --> 00:59:06.720 align:start position:0%
so now we know what the challenge is
 

00:59:06.720 --> 00:59:09.589 align:start position:0%
so now we know what the challenge is
actually<00:59:07.040><c> in</c><00:59:07.200><c> implementing</c><00:59:07.680><c> choir</c>

00:59:09.589 --> 00:59:09.599 align:start position:0%
actually in implementing choir
 

00:59:09.599 --> 00:59:14.390 align:start position:0%
actually in implementing choir
uh<00:59:10.319><c> so</c><00:59:10.559><c> here's</c><00:59:10.799><c> my</c><00:59:11.040><c> broken</c><00:59:11.440><c> one</c><00:59:12.000><c> uh</c><00:59:12.559><c> so</c>

00:59:14.390 --> 00:59:14.400 align:start position:0%
uh so here's my broken one uh so
 

00:59:14.400 --> 00:59:17.750 align:start position:0%
uh so here's my broken one uh so
construct<00:59:15.200><c> takes</c><00:59:15.520><c> in</c><00:59:16.839><c> environment</c><00:59:17.440><c> front</c>

00:59:17.750 --> 00:59:17.760 align:start position:0%
construct takes in environment front
 

00:59:17.760 --> 00:59:18.470 align:start position:0%
construct takes in environment front
lock

00:59:18.470 --> 00:59:18.480 align:start position:0%
lock
 

00:59:18.480 --> 00:59:21.910 align:start position:0%
lock
star<00:59:18.960><c> l</c><00:59:20.319><c> and</c>

00:59:21.910 --> 00:59:21.920 align:start position:0%
star l and
 

00:59:21.920 --> 00:59:23.750 align:start position:0%
star l and
you<00:59:22.000><c> know</c><00:59:22.160><c> what</c><00:59:22.400><c> it</c><00:59:22.480><c> does</c><00:59:22.720><c> is</c><00:59:22.960><c> as</c><00:59:23.119><c> follows</c><00:59:23.599><c> it</c>

00:59:23.750 --> 00:59:23.760 align:start position:0%
you know what it does is as follows it
 

00:59:23.760 --> 00:59:26.390 align:start position:0%
you know what it does is as follows it
has<00:59:24.000><c> an</c><00:59:24.160><c> infinite</c><00:59:24.720><c> loop</c>

00:59:26.390 --> 00:59:26.400 align:start position:0%
has an infinite loop
 

00:59:26.400 --> 00:59:31.270 align:start position:0%
has an infinite loop
while<00:59:26.799><c> one</c><00:59:28.559><c> uh</c><00:59:29.280><c> you</c><00:59:29.440><c> know</c><00:59:29.599><c> if</c>

00:59:31.270 --> 00:59:31.280 align:start position:0%
while one uh you know if
 

00:59:31.280 --> 00:59:34.470 align:start position:0%
while one uh you know if
uh<00:59:32.319><c> l</c><00:59:33.520><c> is</c>

00:59:34.470 --> 00:59:34.480 align:start position:0%
uh l is
 

00:59:34.480 --> 00:59:36.870 align:start position:0%
uh l is
locked<00:59:34.799><c> to</c><00:59:34.960><c> zero</c><00:59:35.359><c> meaning</c><00:59:35.920><c> nobody's</c><00:59:36.480><c> holding</c>

00:59:36.870 --> 00:59:36.880 align:start position:0%
locked to zero meaning nobody's holding
 

00:59:36.880 --> 00:59:37.910 align:start position:0%
locked to zero meaning nobody's holding
it

00:59:37.910 --> 00:59:37.920 align:start position:0%
it
 

00:59:37.920 --> 00:59:39.910 align:start position:0%
it
then<00:59:38.160><c> presumably</c><00:59:38.640><c> the</c><00:59:38.799><c> caller</c><00:59:39.440><c> should</c><00:59:39.599><c> grab</c>

00:59:39.910 --> 00:59:39.920 align:start position:0%
then presumably the caller should grab
 

00:59:39.920 --> 00:59:42.789 align:start position:0%
then presumably the caller should grab
the<00:59:40.000><c> log</c><00:59:40.640><c> so</c>

00:59:42.789 --> 00:59:42.799 align:start position:0%
the log so
 

00:59:42.799 --> 00:59:48.309 align:start position:0%
the log so
then<00:59:43.119><c> we</c><00:59:43.280><c> set</c><00:59:43.599><c> l</c><00:59:43.839><c> lock</c><00:59:44.240><c> to</c><00:59:44.839><c> one</c>

00:59:48.309 --> 00:59:48.319 align:start position:0%
 
 

00:59:48.319 --> 00:59:50.069 align:start position:0%
 
and<00:59:48.880><c> you</c><00:59:49.040><c> know</c><00:59:49.200><c> at</c><00:59:49.280><c> that</c><00:59:49.440><c> point</c><00:59:49.680><c> we</c><00:59:49.839><c> got</c><00:59:50.000><c> the</c>

00:59:50.069 --> 00:59:50.079 align:start position:0%
and you know at that point we got the
 

00:59:50.079 --> 00:59:51.670 align:start position:0%
and you know at that point we got the
lock<00:59:50.240><c> so</c><00:59:50.400><c> we</c><00:59:50.559><c> can</c><00:59:50.720><c> return</c>

00:59:51.670 --> 00:59:51.680 align:start position:0%
lock so we can return
 

00:59:51.680 --> 00:59:54.710 align:start position:0%
lock so we can return
nothing<00:59:52.000><c> to</c><00:59:52.079><c> do</c><00:59:52.319><c> anymore</c><00:59:53.520><c> and</c><00:59:54.319><c> close</c>

00:59:54.710 --> 00:59:54.720 align:start position:0%
nothing to do anymore and close
 

00:59:54.720 --> 00:59:56.230 align:start position:0%
nothing to do anymore and close
loop<00:59:55.040><c> if</c><00:59:55.119><c> we</c><00:59:55.200><c> didn't</c><00:59:55.440><c> get</c><00:59:55.599><c> the</c><00:59:55.680><c> lock</c><00:59:56.000><c> because</c>

00:59:56.230 --> 00:59:56.240 align:start position:0%
loop if we didn't get the lock because
 

00:59:56.240 --> 00:59:57.349 align:start position:0%
loop if we didn't get the lock because
when<00:59:56.400><c> the</c><00:59:56.480><c> lock</c><00:59:56.720><c> was</c><00:59:56.880><c> one</c><00:59:57.040><c> that</c><00:59:57.119><c> means</c>

00:59:57.349 --> 00:59:57.359 align:start position:0%
when the lock was one that means
 

00:59:57.359 --> 00:59:58.789 align:start position:0%
when the lock was one that means
somebody<00:59:57.599><c> else</c><00:59:57.760><c> is</c><00:59:57.839><c> holding</c><00:59:58.160><c> lock</c><00:59:58.319><c> so</c><00:59:58.480><c> we</c><00:59:58.640><c> just</c>

00:59:58.789 --> 00:59:58.799 align:start position:0%
somebody else is holding lock so we just
 

00:59:58.799 --> 01:00:00.630 align:start position:0%
somebody else is holding lock so we just
keep<00:59:58.960><c> spinning</c>

01:00:00.630 --> 01:00:00.640 align:start position:0%
keep spinning
 

01:00:00.640 --> 01:00:02.710 align:start position:0%
keep spinning
and<01:00:01.200><c> waiting</c><01:00:01.599><c> to</c><01:00:01.680><c> go</c><01:00:01.839><c> around</c><01:00:02.079><c> the</c><01:00:02.160><c> loop</c><01:00:02.480><c> over</c>

01:00:02.710 --> 01:00:02.720 align:start position:0%
and waiting to go around the loop over
 

01:00:02.720 --> 01:00:03.990 align:start position:0%
and waiting to go around the loop over
and<01:00:02.880><c> over</c><01:00:03.040><c> and</c><01:00:03.200><c> over</c>

01:00:03.990 --> 01:00:04.000 align:start position:0%
and over and over
 

01:00:04.000 --> 01:00:06.870 align:start position:0%
and over and over
until<01:00:04.319><c> at</c><01:00:04.400><c> some</c><01:00:04.640><c> point</c><01:00:04.960><c> you</c><01:00:05.119><c> know</c><01:00:05.280><c> the</c><01:00:06.640><c> whole</c>

01:00:06.870 --> 01:00:06.880 align:start position:0%
until at some point you know the whole
 

01:00:06.880 --> 01:00:07.750 align:start position:0%
until at some point you know the whole
lock<01:00:07.119><c> holder</c><01:00:07.440><c> called</c>

01:00:07.750 --> 01:00:07.760 align:start position:0%
lock holder called
 

01:00:07.760 --> 01:00:11.030 align:start position:0%
lock holder called
release<01:00:08.240><c> which</c><01:00:08.480><c> will</c><01:00:08.640><c> set</c><01:00:08.880><c> lock</c><01:00:09.119><c> to</c><01:00:10.640><c> will</c><01:00:10.799><c> set</c>

01:00:11.030 --> 01:00:11.040 align:start position:0%
release which will set lock to will set
 

01:00:11.040 --> 01:00:14.710 align:start position:0%
release which will set lock to will set
lock<01:00:11.200><c> to</c><01:00:12.839><c> zero</c>

01:00:14.710 --> 01:00:14.720 align:start position:0%
lock to zero
 

01:00:14.720 --> 01:00:17.349 align:start position:0%
lock to zero
and<01:00:15.200><c> you</c><01:00:15.359><c> know</c><01:00:16.240><c> so</c><01:00:16.400><c> what's</c><01:00:16.640><c> wrong</c><01:00:17.040><c> with</c><01:00:17.200><c> this</c>

01:00:17.349 --> 01:00:17.359 align:start position:0%
and you know so what's wrong with this
 

01:00:17.359 --> 01:00:20.870 align:start position:0%
and you know so what's wrong with this
particular<01:00:17.760><c> implementation</c>

01:00:20.870 --> 01:00:20.880 align:start position:0%
 
 

01:00:20.880 --> 01:00:23.829 align:start position:0%
 
i<01:00:21.040><c> think</c><01:00:21.599><c> two</c><01:00:22.240><c> processes</c><01:00:22.960><c> might</c><01:00:23.440><c> read</c><01:00:23.680><c> that</c>

01:00:23.829 --> 01:00:23.839 align:start position:0%
i think two processes might read that
 

01:00:23.839 --> 01:00:24.470 align:start position:0%
i think two processes might read that
it's<01:00:24.160><c> uh</c>

01:00:24.470 --> 01:00:24.480 align:start position:0%
it's uh
 

01:00:24.480 --> 01:00:29.589 align:start position:0%
it's uh
not<01:00:24.799><c> locked</c><01:00:25.680><c> at</c><01:00:25.839><c> the</c><01:00:25.920><c> same</c><01:00:26.240><c> time</c><01:00:27.359><c> yeah</c><01:00:27.680><c> right</c>

01:00:29.589 --> 01:00:29.599 align:start position:0%
not locked at the same time yeah right
 

01:00:29.599 --> 01:00:31.270 align:start position:0%
not locked at the same time yeah right
yeah<01:00:30.000><c> so</c><01:00:30.240><c> there's</c><01:00:30.480><c> a</c><01:00:30.559><c> race</c><01:00:30.720><c> condition</c><01:00:31.119><c> here</c>

01:00:31.270 --> 01:00:31.280 align:start position:0%
yeah so there's a race condition here
 

01:00:31.280 --> 01:00:33.589 align:start position:0%
yeah so there's a race condition here
right<01:00:31.760><c> and</c><01:00:32.160><c> uh</c>

01:00:33.589 --> 01:00:33.599 align:start position:0%
right and uh
 

01:00:33.599 --> 01:00:35.589 align:start position:0%
right and uh
just<01:00:33.839><c> to</c><01:00:34.160><c> make</c><01:00:34.319><c> sure</c><01:00:34.559><c> that</c><01:00:34.720><c> the</c><01:00:34.880><c> race</c><01:00:35.119><c> is</c><01:00:35.359><c> right</c>

01:00:35.589 --> 01:00:35.599 align:start position:0%
just to make sure that the race is right
 

01:00:35.599 --> 01:00:39.349 align:start position:0%
just to make sure that the race is right
here

01:00:39.349 --> 01:00:39.359 align:start position:0%
 
 

01:00:39.359 --> 01:00:42.309 align:start position:0%
 
we<01:00:39.520><c> can</c><01:00:39.680><c> have</c><01:00:40.240><c> basically</c><01:00:40.640><c> two</c><01:00:40.880><c> cpus</c><01:00:41.440><c> coming</c><01:00:41.680><c> in</c>

01:00:42.309 --> 01:00:42.319 align:start position:0%
we can have basically two cpus coming in
 

01:00:42.319 --> 01:00:44.549 align:start position:0%
we can have basically two cpus coming in
so<01:00:42.480><c> if</c><01:00:42.559><c> we</c><01:00:42.720><c> talk</c><01:00:42.880><c> a</c><01:00:43.040><c> time</c><01:00:43.280><c> diagram</c>

01:00:44.549 --> 01:00:44.559 align:start position:0%
so if we talk a time diagram
 

01:00:44.559 --> 01:00:48.069 align:start position:0%
so if we talk a time diagram
you<01:00:44.720><c> know</c><01:00:44.960><c> cpu</c><01:00:45.440><c> one</c><01:00:46.160><c> uh</c><01:00:46.880><c> cpu</c><01:00:47.440><c> zero</c>

01:00:48.069 --> 01:00:48.079 align:start position:0%
you know cpu one uh cpu zero
 

01:00:48.079 --> 01:00:52.470 align:start position:0%
you know cpu one uh cpu zero
cpu<01:00:48.559><c> one</c><01:00:50.559><c> you</c><01:00:50.640><c> know</c><01:00:50.960><c> this</c><01:00:51.200><c> is</c><01:00:51.280><c> statement</c><01:00:51.680><c> a</c>

01:00:52.470 --> 01:00:52.480 align:start position:0%
cpu one you know this is statement a
 

01:00:52.480 --> 01:00:55.829 align:start position:0%
cpu one you know this is statement a
maybe<01:00:52.720><c> this</c><01:00:52.880><c> is</c><01:00:53.040><c> statement</c><01:00:53.359><c> b</c><01:00:54.400><c> uh</c><01:00:54.799><c> both</c><01:00:55.359><c> cpu</c>

01:00:55.829 --> 01:00:55.839 align:start position:0%
maybe this is statement b uh both cpu
 

01:00:55.839 --> 01:00:56.309 align:start position:0%
maybe this is statement b uh both cpu
one

01:00:56.309 --> 01:00:56.319 align:start position:0%
one
 

01:00:56.319 --> 01:00:59.430 align:start position:0%
one
you<01:00:56.480><c> know</c><01:00:57.440><c> reaches</c><01:00:57.839><c> statement</c><01:00:58.240><c> a</c><01:00:58.720><c> uh</c>

01:00:59.430 --> 01:00:59.440 align:start position:0%
you know reaches statement a uh
 

01:00:59.440 --> 01:01:03.910 align:start position:0%
you know reaches statement a uh
and<01:01:00.079><c> cpu</c><01:01:00.400><c> zero</c><01:01:00.720><c> and</c><01:01:00.880><c> cpu</c><01:01:01.440><c> uh</c>

01:01:03.910 --> 01:01:03.920 align:start position:0%
 
 

01:01:03.920 --> 01:01:05.589 align:start position:0%
 
zero<01:01:04.240><c> one</c><01:01:04.400><c> both</c><01:01:04.640><c> are</c><01:01:04.799><c> each</c><01:01:04.960><c> statement</c><01:01:05.280><c> a</c><01:01:05.440><c> so</c>

01:01:05.589 --> 01:01:05.599 align:start position:0%
zero one both are each statement a so
 

01:01:05.599 --> 01:01:07.030 align:start position:0%
zero one both are each statement a so
they<01:01:05.760><c> both</c><01:01:06.160><c> see</c>

01:01:07.030 --> 01:01:07.040 align:start position:0%
they both see
 

01:01:07.040 --> 01:01:10.150 align:start position:0%
they both see
uh<01:01:07.760><c> locked</c><01:01:08.240><c> being</c><01:01:08.480><c> zero</c><01:01:09.280><c> and</c><01:01:09.359><c> then</c><01:01:09.680><c> they</c><01:01:09.839><c> above</c>

01:01:10.150 --> 01:01:10.160 align:start position:0%
uh locked being zero and then they above
 

01:01:10.160 --> 01:01:13.349 align:start position:0%
uh locked being zero and then they above
execute<01:01:10.559><c> b</c>

01:01:13.349 --> 01:01:13.359 align:start position:0%
 
 

01:01:13.359 --> 01:01:16.950 align:start position:0%
 
all<01:01:13.440><c> right</c><01:01:13.599><c> so</c><01:01:13.839><c> here</c><01:01:14.160><c> they</c><01:01:14.319><c> see</c><01:01:14.559><c> lock</c><01:01:14.799><c> to</c><01:01:14.960><c> zero</c>

01:01:16.950 --> 01:01:16.960 align:start position:0%
all right so here they see lock to zero
 

01:01:16.960 --> 01:01:20.630 align:start position:0%
all right so here they see lock to zero
this<01:01:17.200><c> guy</c><01:01:17.440><c> c</c><01:01:17.680><c> lock</c><01:01:17.920><c> to</c><01:01:18.079><c> zero</c>

01:01:20.630 --> 01:01:20.640 align:start position:0%
 
 

01:01:20.640 --> 01:01:22.710 align:start position:0%
 
and<01:01:20.799><c> so</c><01:01:21.040><c> they</c><01:01:21.200><c> both</c><01:01:21.440><c> execute</c><01:01:22.079><c> statement</c><01:01:22.480><c> b</c><01:01:22.640><c> and</c>

01:01:22.710 --> 01:01:22.720 align:start position:0%
and so they both execute statement b and
 

01:01:22.720 --> 01:01:23.829 align:start position:0%
and so they both execute statement b and
now<01:01:22.880><c> both</c><01:01:23.440><c> uh</c>

01:01:23.829 --> 01:01:23.839 align:start position:0%
now both uh
 

01:01:23.839 --> 01:01:27.270 align:start position:0%
now both uh
have<01:01:24.559><c> uh</c><01:01:24.799><c> acquired</c><01:01:25.200><c> the</c><01:01:25.359><c> lock</c><01:01:26.079><c> and</c><01:01:26.640><c> uh</c><01:01:26.799><c> which</c>

01:01:27.270 --> 01:01:27.280 align:start position:0%
have uh acquired the lock and uh which
 

01:01:27.280 --> 01:01:29.349 align:start position:0%
have uh acquired the lock and uh which
violated<01:01:28.000><c> you</c><01:01:28.079><c> know</c><01:01:28.240><c> the</c><01:01:28.400><c> spec</c><01:01:29.119><c> of</c><01:01:29.200><c> this</c>

01:01:29.349 --> 01:01:29.359 align:start position:0%
violated you know the spec of this
 

01:01:29.359 --> 01:01:31.510 align:start position:0%
violated you know the spec of this
particular<01:01:29.680><c> function</c>

01:01:31.510 --> 01:01:31.520 align:start position:0%
particular function
 

01:01:31.520 --> 01:01:35.589 align:start position:0%
particular function
this<01:01:31.680><c> makes</c><01:01:31.920><c> sense</c>

01:01:35.589 --> 01:01:35.599 align:start position:0%
 
 

01:01:35.599 --> 01:01:38.150 align:start position:0%
 
so<01:01:35.760><c> it</c><01:01:35.839><c> turns</c><01:01:36.160><c> out</c><01:01:36.400><c> you</c><01:01:36.559><c> know</c><01:01:36.720><c> to</c><01:01:37.599><c> solve</c><01:01:37.920><c> this</c>

01:01:38.150 --> 01:01:38.160 align:start position:0%
so it turns out you know to solve this
 

01:01:38.160 --> 01:01:38.710 align:start position:0%
so it turns out you know to solve this
problem

01:01:38.710 --> 01:01:38.720 align:start position:0%
problem
 

01:01:38.720 --> 01:01:40.150 align:start position:0%
problem
and<01:01:38.799><c> sort</c><01:01:39.040><c> of</c><01:01:39.119><c> get</c><01:01:39.200><c> a</c><01:01:39.280><c> correct</c><01:01:39.680><c> implementation</c>

01:01:40.150 --> 01:01:40.160 align:start position:0%
and sort of get a correct implementation
 

01:01:40.160 --> 01:01:41.430 align:start position:0%
and sort of get a correct implementation
there<01:01:40.319><c> are</c><01:01:40.400><c> multiple</c><01:01:40.640><c> ways</c><01:01:40.880><c> of</c><01:01:40.960><c> going</c><01:01:41.119><c> about</c>

01:01:41.430 --> 01:01:41.440 align:start position:0%
there are multiple ways of going about
 

01:01:41.440 --> 01:01:42.390 align:start position:0%
there are multiple ways of going about
it

01:01:42.390 --> 01:01:42.400 align:start position:0%
it
 

01:01:42.400 --> 01:01:44.789 align:start position:0%
it
but<01:01:42.559><c> the</c><01:01:42.880><c> most</c><01:01:43.280><c> common</c><01:01:43.680><c> way</c><01:01:43.920><c> is</c><01:01:44.000><c> to</c><01:01:44.160><c> rely</c>

01:01:44.789 --> 01:01:44.799 align:start position:0%
but the most common way is to rely
 

01:01:44.799 --> 01:01:46.150 align:start position:0%
but the most common way is to rely
basically<01:01:45.280><c> on</c><01:01:45.440><c> a</c><01:01:45.599><c> special</c><01:01:45.839><c> hardware</c>

01:01:46.150 --> 01:01:46.160 align:start position:0%
basically on a special hardware
 

01:01:46.160 --> 01:01:47.670 align:start position:0%
basically on a special hardware
instruction

01:01:47.670 --> 01:01:47.680 align:start position:0%
instruction
 

01:01:47.680 --> 01:01:49.750 align:start position:0%
instruction
uh<01:01:48.079><c> an</c><01:01:48.319><c> art</c><01:01:48.559><c> of</c><01:01:48.640><c> instruction</c><01:01:49.119><c> that</c><01:01:49.359><c> basically</c>

01:01:49.750 --> 01:01:49.760 align:start position:0%
uh an art of instruction that basically
 

01:01:49.760 --> 01:01:50.789 align:start position:0%
uh an art of instruction that basically
what<01:01:49.920><c> it</c><01:01:50.079><c> does</c>

01:01:50.789 --> 01:01:50.799 align:start position:0%
what it does
 

01:01:50.799 --> 01:01:53.030 align:start position:0%
what it does
it<01:01:50.960><c> does</c><01:01:51.200><c> this</c><01:01:51.520><c> test</c><01:01:52.319><c> and</c><01:01:52.400><c> this</c><01:01:52.640><c> set</c>

01:01:53.030 --> 01:01:53.040 align:start position:0%
it does this test and this set
 

01:01:53.040 --> 01:01:55.990 align:start position:0%
it does this test and this set
atomically

01:01:55.990 --> 01:01:56.000 align:start position:0%
 
 

01:01:56.000 --> 01:02:00.390 align:start position:0%
 
and<01:01:56.160><c> so</c><01:01:57.599><c> the</c><01:01:57.760><c> solution</c><01:01:58.160><c> to</c><01:01:58.319><c> this</c>

01:02:00.390 --> 01:02:00.400 align:start position:0%
and so the solution to this
 

01:02:00.400 --> 01:02:06.390 align:start position:0%
and so the solution to this
problem<01:02:00.799><c> is</c><01:02:04.839><c> hardware</c>

01:02:06.390 --> 01:02:06.400 align:start position:0%
problem is hardware
 

01:02:06.400 --> 01:02:17.349 align:start position:0%
problem is hardware
test<01:02:08.000><c> and</c><01:02:08.319><c> set</c><01:02:08.480><c> support</c>

01:02:17.349 --> 01:02:17.359 align:start position:0%
 
 

01:02:17.359 --> 01:02:18.710 align:start position:0%
 
and<01:02:17.599><c> the</c><01:02:17.680><c> way</c><01:02:17.839><c> you</c><01:02:17.920><c> can</c><01:02:18.079><c> think</c><01:02:18.240><c> about</c><01:02:18.400><c> it</c><01:02:18.559><c> you</c>

01:02:18.710 --> 01:02:18.720 align:start position:0%
and the way you can think about it you
 

01:02:18.720 --> 01:02:21.029 align:start position:0%
and the way you can think about it you
know<01:02:18.960><c> on</c><01:02:19.119><c> the</c><01:02:20.000><c> risk</c><01:02:20.319><c> five</c><01:02:20.640><c> you</c><01:02:20.720><c> know</c><01:02:20.880><c> this</c>

01:02:21.029 --> 01:02:21.039 align:start position:0%
know on the risk five you know this
 

01:02:21.039 --> 01:02:22.710 align:start position:0%
know on the risk five you know this
instruction<01:02:21.599><c> actually</c><01:02:21.839><c> is</c><01:02:22.400><c> the</c>

01:02:22.710 --> 01:02:22.720 align:start position:0%
instruction actually is the
 

01:02:22.720 --> 01:02:26.789 align:start position:0%
instruction actually is the
atomic<01:02:23.280><c> memory</c><01:02:23.680><c> operation</c><01:02:24.319><c> swap</c>

01:02:26.789 --> 01:02:26.799 align:start position:0%
 
 

01:02:26.799 --> 01:02:29.910 align:start position:0%
 
that<01:02:26.960><c> we're</c><01:02:27.119><c> going</c><01:02:27.200><c> to</c><01:02:27.280><c> be</c><01:02:27.440><c> using</c><01:02:28.720><c> uh</c><01:02:29.520><c> and</c>

01:02:29.910 --> 01:02:29.920 align:start position:0%
that we're going to be using uh and
 

01:02:29.920 --> 01:02:31.589 align:start position:0%
that we're going to be using uh and
it<01:02:30.079><c> basically</c><01:02:30.480><c> boils</c><01:02:30.720><c> down</c><01:02:30.880><c> to</c><01:02:31.119><c> test</c><01:02:31.359><c> and</c><01:02:31.440><c> then</c>

01:02:31.589 --> 01:02:31.599 align:start position:0%
it basically boils down to test and then
 

01:02:31.599 --> 01:02:32.950 align:start position:0%
it basically boils down to test and then
a<01:02:31.680><c> set</c><01:02:31.920><c> and</c><01:02:32.079><c> you</c><01:02:32.319><c> know</c><01:02:32.480><c> basically</c><01:02:32.799><c> what</c><01:02:32.880><c> the</c>

01:02:32.950 --> 01:02:32.960 align:start position:0%
a set and you know basically what the
 

01:02:32.960 --> 01:02:34.230 align:start position:0%
a set and you know basically what the
hardware<01:02:33.359><c> guarantees</c>

01:02:34.230 --> 01:02:34.240 align:start position:0%
hardware guarantees
 

01:02:34.240 --> 01:02:36.870 align:start position:0%
hardware guarantees
if<01:02:34.400><c> you</c><01:02:34.559><c> will</c><01:02:34.799><c> so</c><01:02:35.200><c> you</c><01:02:35.359><c> take</c><01:02:35.599><c> this</c><01:02:35.920><c> uh</c><01:02:36.559><c> it</c><01:02:36.640><c> takes</c>

01:02:36.870 --> 01:02:36.880 align:start position:0%
if you will so you take this uh it takes
 

01:02:36.880 --> 01:02:38.710 align:start position:0%
if you will so you take this uh it takes
two<01:02:37.119><c> arguments</c><01:02:37.599><c> or</c><01:02:37.839><c> three</c><01:02:38.079><c> arguments</c><01:02:38.559><c> an</c>

01:02:38.710 --> 01:02:38.720 align:start position:0%
two arguments or three arguments an
 

01:02:38.720 --> 01:02:40.150 align:start position:0%
two arguments or three arguments an
address

01:02:40.150 --> 01:02:40.160 align:start position:0%
address
 

01:02:40.160 --> 01:02:43.349 align:start position:0%
address
uh<01:02:40.799><c> a</c><01:02:40.880><c> register</c><01:02:41.440><c> one</c><01:02:42.319><c> r1</c>

01:02:43.349 --> 01:02:43.359 align:start position:0%
uh a register one r1
 

01:02:43.359 --> 01:02:46.710 align:start position:0%
uh a register one r1
and<01:02:43.440><c> a</c><01:02:43.520><c> register</c><01:02:44.079><c> two</c><01:02:45.039><c> and</c><01:02:46.000><c> essentially</c><01:02:46.559><c> what</c>

01:02:46.710 --> 01:02:46.720 align:start position:0%
and a register two and essentially what
 

01:02:46.720 --> 01:02:48.390 align:start position:0%
and a register two and essentially what
the<01:02:46.799><c> hardware</c><01:02:47.200><c> does</c><01:02:47.920><c> the</c>

01:02:48.390 --> 01:02:48.400 align:start position:0%
the hardware does the
 

01:02:48.400 --> 01:02:51.829 align:start position:0%
the hardware does the
just<01:02:48.640><c> conceptually</c><01:02:50.559><c> is</c><01:02:50.799><c> basically</c><01:02:51.200><c> it</c><01:02:51.440><c> locks</c>

01:02:51.829 --> 01:02:51.839 align:start position:0%
just conceptually is basically it locks
 

01:02:51.839 --> 01:02:53.430 align:start position:0%
just conceptually is basically it locks
the<01:02:52.000><c> address</c>

01:02:53.430 --> 01:02:53.440 align:start position:0%
the address
 

01:02:53.440 --> 01:02:55.670 align:start position:0%
the address
if<01:02:53.599><c> you</c><01:02:53.760><c> will</c><01:02:54.799><c> i'll</c><01:02:55.039><c> talk</c><01:02:55.200><c> about</c><01:02:55.359><c> that</c><01:02:55.520><c> in</c><01:02:55.599><c> a</c>

01:02:55.670 --> 01:02:55.680 align:start position:0%
if you will i'll talk about that in a
 

01:02:55.680 --> 01:02:57.029 align:start position:0%
if you will i'll talk about that in a
second<01:02:55.920><c> a</c><01:02:56.000><c> little</c><01:02:56.160><c> bit</c><01:02:56.240><c> more</c><01:02:56.480><c> with</c><01:02:56.720><c> logs</c>

01:02:57.029 --> 01:02:57.039 align:start position:0%
second a little bit more with logs
 

01:02:57.039 --> 01:02:58.150 align:start position:0%
second a little bit more with logs
address

01:02:58.150 --> 01:02:58.160 align:start position:0%
address
 

01:02:58.160 --> 01:03:01.190 align:start position:0%
address
it

01:03:01.190 --> 01:03:01.200 align:start position:0%
 
 

01:03:01.200 --> 01:03:04.150 align:start position:0%
 
it<01:03:01.359><c> puts</c><01:03:01.599><c> in</c><01:03:01.680><c> a</c><01:03:01.760><c> temporary</c><01:03:02.319><c> variable</c><01:03:03.839><c> you</c><01:03:04.000><c> know</c>

01:03:04.150 --> 01:03:04.160 align:start position:0%
it puts in a temporary variable you know
 

01:03:04.160 --> 01:03:04.470 align:start position:0%
it puts in a temporary variable you know
the

01:03:04.470 --> 01:03:04.480 align:start position:0%
the
 

01:03:04.480 --> 01:03:06.230 align:start position:0%
the
value<01:03:05.359><c> that</c><01:03:05.599><c> actually</c><01:03:05.839><c> is</c><01:03:06.000><c> at</c><01:03:06.079><c> that</c>

01:03:06.230 --> 01:03:06.240 align:start position:0%
value that actually is at that
 

01:03:06.240 --> 01:03:09.589 align:start position:0%
value that actually is at that
particular<01:03:06.640><c> address</c>

01:03:09.589 --> 01:03:09.599 align:start position:0%
 
 

01:03:09.599 --> 01:03:13.270 align:start position:0%
 
and<01:03:10.319><c> then</c>

01:03:13.270 --> 01:03:13.280 align:start position:0%
 
 

01:03:13.280 --> 01:03:17.510 align:start position:0%
 
writes<01:03:13.599><c> the</c><01:03:13.680><c> value</c><01:03:14.160><c> of</c><01:03:14.400><c> r1</c><01:03:15.599><c> into</c><01:03:15.920><c> that</c><01:03:16.079><c> address</c>

01:03:17.510 --> 01:03:17.520 align:start position:0%
writes the value of r1 into that address
 

01:03:17.520 --> 01:03:20.150 align:start position:0%
writes the value of r1 into that address
and<01:03:17.599><c> then</c><01:03:18.079><c> basically</c><01:03:18.960><c> puts</c><01:03:19.280><c> the</c><01:03:19.440><c> value</c><01:03:19.920><c> that</c>

01:03:20.150 --> 01:03:20.160 align:start position:0%
and then basically puts the value that
 

01:03:20.160 --> 01:03:21.349 align:start position:0%
and then basically puts the value that
was<01:03:20.400><c> at</c><01:03:20.559><c> the</c>

01:03:21.349 --> 01:03:21.359 align:start position:0%
was at the
 

01:03:21.359 --> 01:03:24.710 align:start position:0%
was at the
originally<01:03:21.920><c> at</c><01:03:22.000><c> the</c><01:03:22.079><c> address</c><01:03:22.559><c> into</c><01:03:24.160><c> the</c><01:03:24.319><c> temp</c>

01:03:24.710 --> 01:03:24.720 align:start position:0%
originally at the address into the temp
 

01:03:24.720 --> 01:03:27.589 align:start position:0%
originally at the address into the temp
uh<01:03:25.599><c> the</c><01:03:25.760><c> temporary</c><01:03:26.240><c> value</c><01:03:26.480><c> that</c><01:03:26.640><c> was</c><01:03:27.520><c> the</c>

01:03:27.589 --> 01:03:27.599 align:start position:0%
uh the temporary value that was the
 

01:03:27.599 --> 01:03:28.630 align:start position:0%
uh the temporary value that was the
original<01:03:27.920><c> value</c><01:03:28.160><c> that</c><01:03:28.240><c> was</c><01:03:28.400><c> actually</c>

01:03:28.630 --> 01:03:28.640 align:start position:0%
original value that was actually
 

01:03:28.640 --> 01:03:30.390 align:start position:0%
original value that was actually
addressed<01:03:28.960><c> actually</c><01:03:29.119><c> into</c><01:03:29.359><c> an</c><01:03:29.520><c> r2</c>

01:03:30.390 --> 01:03:30.400 align:start position:0%
addressed actually into an r2
 

01:03:30.400 --> 01:03:35.589 align:start position:0%
addressed actually into an r2
and<01:03:30.559><c> then</c><01:03:30.720><c> basically</c><01:03:31.119><c> unlocks</c><01:03:32.000><c> and</c><01:03:32.160><c> returns</c>

01:03:35.589 --> 01:03:35.599 align:start position:0%
 
 

01:03:35.599 --> 01:03:38.630 align:start position:0%
 
um<01:03:37.280><c> and</c><01:03:38.000><c> you</c><01:03:38.160><c> know</c>

01:03:38.630 --> 01:03:38.640 align:start position:0%
um and you know
 

01:03:38.640 --> 01:03:41.109 align:start position:0%
um and you know
in<01:03:38.720><c> the</c><01:03:39.039><c> this</c><01:03:39.440><c> lock</c><01:03:39.920><c> if</c><01:03:40.079><c> you</c><01:03:40.160><c> will</c><01:03:40.640><c> guarantee</c>

01:03:41.109 --> 01:03:41.119 align:start position:0%
in the this lock if you will guarantee
 

01:03:41.119 --> 01:03:42.630 align:start position:0%
in the this lock if you will guarantee
is<01:03:41.280><c> that</c><01:03:41.359><c> basically</c><01:03:41.760><c> this</c><01:03:42.079><c> test</c>

01:03:42.630 --> 01:03:42.640 align:start position:0%
is that basically this test
 

01:03:42.640 --> 01:03:44.069 align:start position:0%
is that basically this test
you<01:03:42.720><c> know</c><01:03:42.880><c> where</c><01:03:43.119><c> the</c><01:03:43.200><c> result</c><01:03:43.520><c> of</c><01:03:43.599><c> the</c><01:03:43.760><c> test</c><01:03:44.000><c> is</c>

01:03:44.069 --> 01:03:44.079 align:start position:0%
you know where the result of the test is
 

01:03:44.079 --> 01:03:45.670 align:start position:0%
you know where the result of the test is
returned<01:03:44.480><c> into</c><01:03:44.720><c> r2</c>

01:03:45.670 --> 01:03:45.680 align:start position:0%
returned into r2
 

01:03:45.680 --> 01:03:48.950 align:start position:0%
returned into r2
and<01:03:45.839><c> the</c><01:03:46.079><c> set</c><01:03:46.480><c> actually</c><01:03:46.799><c> happen</c><01:03:47.839><c> atomically</c>

01:03:48.950 --> 01:03:48.960 align:start position:0%
and the set actually happen atomically
 

01:03:48.960 --> 01:03:50.950 align:start position:0%
and the set actually happen atomically
and<01:03:49.039><c> so</c><01:03:49.200><c> this</c><01:03:49.359><c> is</c><01:03:49.440><c> a</c><01:03:49.520><c> hardware</c><01:03:49.839><c> instruction</c><01:03:50.559><c> uh</c>

01:03:50.950 --> 01:03:50.960 align:start position:0%
and so this is a hardware instruction uh
 

01:03:50.960 --> 01:03:52.789 align:start position:0%
and so this is a hardware instruction uh
most<01:03:51.359><c> processors</c><01:03:52.000><c> have</c><01:03:52.319><c> an</c><01:03:52.559><c> artwork</c>

01:03:52.789 --> 01:03:52.799 align:start position:0%
most processors have an artwork
 

01:03:52.799 --> 01:03:55.349 align:start position:0%
most processors have an artwork
instruction<01:03:53.280><c> like</c><01:03:53.520><c> this</c>

01:03:55.349 --> 01:03:55.359 align:start position:0%
instruction like this
 

01:03:55.359 --> 01:03:56.950 align:start position:0%
instruction like this
because<01:03:55.680><c> it's</c><01:03:55.839><c> a</c><01:03:55.920><c> convenient</c><01:03:56.480><c> way</c><01:03:56.799><c> to</c>

01:03:56.950 --> 01:03:56.960 align:start position:0%
because it's a convenient way to
 

01:03:56.960 --> 01:04:01.430 align:start position:0%
because it's a convenient way to
actually<01:03:57.359><c> implement</c><01:03:57.760><c> locks</c>

01:04:01.430 --> 01:04:01.440 align:start position:0%
 
 

01:04:01.440 --> 01:04:03.270 align:start position:0%
 
and<01:04:01.520><c> so</c><01:04:01.839><c> basically</c><01:04:02.160><c> what</c><01:04:02.319><c> we've</c><01:04:02.559><c> done</c><01:04:02.880><c> is</c><01:04:03.039><c> like</c>

01:04:03.270 --> 01:04:03.280 align:start position:0%
and so basically what we've done is like
 

01:04:03.280 --> 01:04:04.710 align:start position:0%
and so basically what we've done is like
we've<01:04:03.520><c> reduced</c><01:04:04.160><c> you</c><01:04:04.240><c> know</c><01:04:04.400><c> sort</c><01:04:04.480><c> of</c><01:04:04.640><c> the</c>

01:04:04.710 --> 01:04:04.720 align:start position:0%
we've reduced you know sort of the
 

01:04:04.720 --> 01:04:06.870 align:start position:0%
we've reduced you know sort of the
automaticity<01:04:05.520><c> of</c><01:04:05.599><c> this</c>

01:04:06.870 --> 01:04:06.880 align:start position:0%
automaticity of this
 

01:04:06.880 --> 01:04:09.829 align:start position:0%
automaticity of this
or<01:04:07.039><c> the</c><01:04:07.680><c> software</c><01:04:08.640><c> lock</c><01:04:09.039><c> implementation</c><01:04:09.680><c> to</c>

01:04:09.829 --> 01:04:09.839 align:start position:0%
or the software lock implementation to
 

01:04:09.839 --> 01:04:10.470 align:start position:0%
or the software lock implementation to
basically

01:04:10.470 --> 01:04:10.480 align:start position:0%
basically
 

01:04:10.480 --> 01:04:14.230 align:start position:0%
basically
a<01:04:10.640><c> hardware</c><01:04:11.119><c> lock</c><01:04:11.520><c> implementation</c><01:04:13.280><c> uh</c>

01:04:14.230 --> 01:04:14.240 align:start position:0%
a hardware lock implementation uh
 

01:04:14.240 --> 01:04:18.390 align:start position:0%
a hardware lock implementation uh
and<01:04:14.559><c> uh</c><01:04:16.880><c> so</c><01:04:17.039><c> the</c><01:04:17.440><c> processor</c><01:04:17.839><c> might</c><01:04:18.079><c> implement</c>

01:04:18.390 --> 01:04:18.400 align:start position:0%
and uh so the processor might implement
 

01:04:18.400 --> 01:04:18.870 align:start position:0%
and uh so the processor might implement
this<01:04:18.640><c> in</c>

01:04:18.870 --> 01:04:18.880 align:start position:0%
this in
 

01:04:18.880 --> 01:04:21.349 align:start position:0%
this in
very<01:04:19.119><c> different</c><01:04:19.359><c> ways</c><01:04:19.680><c> so</c><01:04:19.920><c> basically</c><01:04:20.559><c> uh</c><01:04:21.039><c> the</c>

01:04:21.349 --> 01:04:21.359 align:start position:0%
very different ways so basically uh the
 

01:04:21.359 --> 01:04:22.950 align:start position:0%
very different ways so basically uh the
instruction<01:04:21.760><c> set</c><01:04:22.000><c> itself</c><01:04:22.400><c> where</c><01:04:22.559><c> this</c><01:04:22.799><c> is</c>

01:04:22.950 --> 01:04:22.960 align:start position:0%
instruction set itself where this is
 

01:04:22.960 --> 01:04:24.390 align:start position:0%
instruction set itself where this is
like<01:04:23.039><c> a</c><01:04:23.119><c> specification</c><01:04:23.760><c> it</c><01:04:23.839><c> doesn't</c><01:04:24.160><c> actually</c>

01:04:24.390 --> 01:04:24.400 align:start position:0%
like a specification it doesn't actually
 

01:04:24.400 --> 01:04:25.750 align:start position:0%
like a specification it doesn't actually
say<01:04:24.559><c> how</c><01:04:24.720><c> it's</c><01:04:24.880><c> implemented</c>

01:04:25.750 --> 01:04:25.760 align:start position:0%
say how it's implemented
 

01:04:25.760 --> 01:04:27.589 align:start position:0%
say how it's implemented
and<01:04:25.839><c> this</c><01:04:26.000><c> is</c><01:04:26.160><c> very</c><01:04:26.480><c> dependent</c><01:04:27.119><c> in</c><01:04:27.200><c> the</c><01:04:27.359><c> actual</c>

01:04:27.589 --> 01:04:27.599 align:start position:0%
and this is very dependent in the actual
 

01:04:27.599 --> 01:04:30.309 align:start position:0%
and this is very dependent in the actual
implementation

01:04:30.309 --> 01:04:30.319 align:start position:0%
 
 

01:04:30.319 --> 01:04:34.710 align:start position:0%
 
of<01:04:30.480><c> this</c><01:04:30.720><c> is</c><01:04:30.880><c> dependent</c>

01:04:34.710 --> 01:04:34.720 align:start position:0%
 
 

01:04:34.720 --> 01:04:44.309 align:start position:0%
 
on<01:04:34.960><c> how</c><01:04:35.119><c> the</c><01:04:35.200><c> memory</c><01:04:35.520><c> system</c><01:04:35.839><c> exactly</c><01:04:38.839><c> works</c>

01:04:44.309 --> 01:04:44.319 align:start position:0%
 
 

01:04:44.319 --> 01:04:47.510 align:start position:0%
 
so<01:04:44.480><c> for</c><01:04:44.640><c> example</c><01:04:45.440><c> uh</c><01:04:46.319><c> if</c><01:04:46.799><c> you</c><01:04:46.880><c> know</c><01:04:47.039><c> the</c><01:04:47.200><c> module</c>

01:04:47.510 --> 01:04:47.520 align:start position:0%
so for example uh if you know the module
 

01:04:47.520 --> 01:04:48.309 align:start position:0%
so for example uh if you know the module
processor

01:04:48.309 --> 01:04:48.319 align:start position:0%
processor
 

01:04:48.319 --> 01:04:50.950 align:start position:0%
processor
uh<01:04:48.960><c> share</c><01:04:49.200><c> a</c><01:04:49.359><c> single</c><01:04:49.599><c> memory</c><01:04:49.920><c> controller</c><01:04:50.720><c> that</c>

01:04:50.950 --> 01:04:50.960 align:start position:0%
uh share a single memory controller that
 

01:04:50.960 --> 01:04:52.150 align:start position:0%
uh share a single memory controller that
retail<01:04:51.280><c> writes</c><01:04:51.520><c> to</c><01:04:51.599><c> memory</c>

01:04:52.150 --> 01:04:52.160 align:start position:0%
retail writes to memory
 

01:04:52.160 --> 01:04:53.670 align:start position:0%
retail writes to memory
then<01:04:52.319><c> the</c><01:04:52.480><c> memory</c><01:04:52.720><c> controller</c><01:04:53.200><c> can</c><01:04:53.359><c> actually</c>

01:04:53.670 --> 01:04:53.680 align:start position:0%
then the memory controller can actually
 

01:04:53.680 --> 01:04:56.150 align:start position:0%
then the memory controller can actually
support<01:04:54.000><c> this</c><01:04:54.240><c> operation</c><01:04:54.720><c> you</c><01:04:54.960><c> can</c><01:04:55.119><c> basically</c>

01:04:56.150 --> 01:04:56.160 align:start position:0%
support this operation you can basically
 

01:04:56.160 --> 01:04:58.470 align:start position:0%
support this operation you can basically
allow<01:04:56.960><c> uh</c><01:04:57.280><c> basically</c><01:04:57.680><c> you</c><01:04:57.760><c> know</c><01:04:57.920><c> set</c><01:04:58.079><c> a</c><01:04:58.240><c> lock</c>

01:04:58.470 --> 01:04:58.480 align:start position:0%
allow uh basically you know set a lock
 

01:04:58.480 --> 01:04:59.670 align:start position:0%
allow uh basically you know set a lock
and<01:04:58.559><c> a</c><01:04:58.640><c> particular</c><01:04:58.960><c> address</c><01:04:59.359><c> you</c><01:04:59.440><c> know</c><01:04:59.599><c> and</c>

01:04:59.670 --> 01:04:59.680 align:start position:0%
and a particular address you know and
 

01:04:59.680 --> 01:05:00.069 align:start position:0%
and a particular address you know and
then

01:05:00.069 --> 01:05:00.079 align:start position:0%
then
 

01:05:00.079 --> 01:05:01.829 align:start position:0%
then
let<01:05:00.319><c> you</c><01:05:00.480><c> know</c><01:05:00.640><c> one</c><01:05:00.880><c> processor</c><01:05:01.440><c> do</c><01:05:01.599><c> two</c>

01:05:01.829 --> 01:05:01.839 align:start position:0%
let you know one processor do two
 

01:05:01.839 --> 01:05:03.270 align:start position:0%
let you know one processor do two
operations<01:05:02.400><c> or</c><01:05:02.559><c> three</c><01:05:02.880><c> uh</c>

01:05:03.270 --> 01:05:03.280 align:start position:0%
operations or three uh
 

01:05:03.280 --> 01:05:05.270 align:start position:0%
operations or three uh
instructions<01:05:04.079><c> and</c><01:05:04.160><c> then</c><01:05:04.319><c> basically</c><01:05:04.799><c> unlock</c>

01:05:05.270 --> 01:05:05.280 align:start position:0%
instructions and then basically unlock
 

01:05:05.280 --> 01:05:06.829 align:start position:0%
instructions and then basically unlock
and<01:05:05.440><c> so</c><01:05:05.680><c> since</c><01:05:05.920><c> all</c><01:05:06.160><c> the</c>

01:05:06.829 --> 01:05:06.839 align:start position:0%
and so since all the
 

01:05:06.839 --> 01:05:08.549 align:start position:0%
and so since all the
processors<01:05:07.520><c> the</c><01:05:07.599><c> reason</c><01:05:07.920><c> writes</c><01:05:08.160><c> go</c><01:05:08.319><c> for</c><01:05:08.480><c> this</c>

01:05:08.549 --> 01:05:08.559 align:start position:0%
processors the reason writes go for this
 

01:05:08.559 --> 01:05:09.990 align:start position:0%
processors the reason writes go for this
memory<01:05:08.880><c> controller</c><01:05:09.200><c> the</c><01:05:09.280><c> memory</c><01:05:09.599><c> controller</c>

01:05:09.990 --> 01:05:10.000 align:start position:0%
memory controller the memory controller
 

01:05:10.000 --> 01:05:12.230 align:start position:0%
memory controller the memory controller
can<01:05:10.079><c> do</c><01:05:10.160><c> the</c><01:05:10.319><c> ordering</c><01:05:10.799><c> or</c><01:05:10.880><c> the</c><01:05:11.039><c> blocking</c>

01:05:12.230 --> 01:05:12.240 align:start position:0%
can do the ordering or the blocking
 

01:05:12.240 --> 01:05:16.230 align:start position:0%
can do the ordering or the blocking
uh<01:05:12.720><c> if</c><01:05:13.200><c> the</c><01:05:14.720><c> memories</c><01:05:15.200><c> are</c><01:05:15.440><c> in</c><01:05:15.599><c> this</c><01:05:15.760><c> processor</c>

01:05:16.230 --> 01:05:16.240 align:start position:0%
uh if the memories are in this processor
 

01:05:16.240 --> 01:05:18.789 align:start position:0%
uh if the memories are in this processor
sit<01:05:16.480><c> on</c><01:05:16.640><c> the</c><01:05:16.799><c> shared</c><01:05:17.280><c> bus</c>

01:05:18.789 --> 01:05:18.799 align:start position:0%
sit on the shared bus
 

01:05:18.799 --> 01:05:20.630 align:start position:0%
sit on the shared bus
it's<01:05:18.960><c> often</c><01:05:19.200><c> the</c><01:05:19.280><c> bus</c><01:05:19.599><c> arbiter</c><01:05:20.240><c> that</c><01:05:20.480><c> can</c>

01:05:20.630 --> 01:05:20.640 align:start position:0%
it's often the bus arbiter that can
 

01:05:20.640 --> 01:05:21.990 align:start position:0%
it's often the bus arbiter that can
actually<01:05:20.880><c> do</c><01:05:21.039><c> that</c><01:05:21.119><c> where</c><01:05:21.280><c> the</c><01:05:21.359><c> bus</c><01:05:21.599><c> arbiter</c>

01:05:21.990 --> 01:05:22.000 align:start position:0%
actually do that where the bus arbiter
 

01:05:22.000 --> 01:05:23.029 align:start position:0%
actually do that where the bus arbiter
has<01:05:22.160><c> support</c><01:05:22.640><c> for</c>

01:05:23.029 --> 01:05:23.039 align:start position:0%
has support for
 

01:05:23.039 --> 01:05:25.829 align:start position:0%
has support for
basically<01:05:23.359><c> executing</c><01:05:24.000><c> two</c><01:05:24.960><c> uh</c><01:05:25.440><c> memory</c>

01:05:25.829 --> 01:05:25.839 align:start position:0%
basically executing two uh memory
 

01:05:25.839 --> 01:05:28.309 align:start position:0%
basically executing two uh memory
operations<01:05:26.480><c> in</c><01:05:26.640><c> an</c><01:05:26.720><c> atomic</c><01:05:27.119><c> way</c>

01:05:28.309 --> 01:05:28.319 align:start position:0%
operations in an atomic way
 

01:05:28.319 --> 01:05:31.349 align:start position:0%
operations in an atomic way
uh<01:05:28.880><c> if</c><01:05:29.280><c> it's</c><01:05:29.440><c> a</c><01:05:30.240><c> if</c><01:05:30.400><c> the</c><01:05:30.559><c> processors</c><01:05:30.960><c> have</c>

01:05:31.349 --> 01:05:31.359 align:start position:0%
uh if it's a if the processors have
 

01:05:31.359 --> 01:05:32.390 align:start position:0%
uh if it's a if the processors have
caches

01:05:32.390 --> 01:05:32.400 align:start position:0%
caches
 

01:05:32.400 --> 01:05:35.109 align:start position:0%
caches
uh<01:05:32.960><c> then</c><01:05:34.000><c> it's</c><01:05:34.160><c> sort</c><01:05:34.400><c> of</c><01:05:34.559><c> typically</c><01:05:34.880><c> part</c><01:05:35.039><c> of</c>

01:05:35.109 --> 01:05:35.119 align:start position:0%
uh then it's sort of typically part of
 

01:05:35.119 --> 01:05:37.029 align:start position:0%
uh then it's sort of typically part of
the<01:05:35.200><c> cash</c><01:05:35.440><c> rehearse</c><01:05:35.839><c> protocol</c><01:05:36.319><c> where</c>

01:05:37.029 --> 01:05:37.039 align:start position:0%
the cash rehearse protocol where
 

01:05:37.039 --> 01:05:39.829 align:start position:0%
the cash rehearse protocol where
uh<01:05:38.240><c> the</c><01:05:38.400><c> cash</c><01:05:38.559><c> continues</c><01:05:38.960><c> protocol</c><01:05:39.520><c> will</c>

01:05:39.829 --> 01:05:39.839 align:start position:0%
uh the cash continues protocol will
 

01:05:39.839 --> 01:05:40.470 align:start position:0%
uh the cash continues protocol will
ensure<01:05:40.160><c> that</c>

01:05:40.470 --> 01:05:40.480 align:start position:0%
ensure that
 

01:05:40.480 --> 01:05:42.309 align:start position:0%
ensure that
if<01:05:40.559><c> there's</c><01:05:40.799><c> a</c><01:05:40.880><c> writer</c><01:05:41.280><c> you</c><01:05:41.440><c> know</c><01:05:41.599><c> that</c><01:05:42.079><c> that</c>

01:05:42.309 --> 01:05:42.319 align:start position:0%
if there's a writer you know that that
 

01:05:42.319 --> 01:05:44.710 align:start position:0%
if there's a writer you know that that
particular<01:05:43.200><c> uh</c>

01:05:44.710 --> 01:05:44.720 align:start position:0%
particular uh
 

01:05:44.720 --> 01:05:46.390 align:start position:0%
particular uh
the<01:05:44.880><c> cash</c><01:05:45.119><c> line</c><01:05:45.280><c> that</c><01:05:45.520><c> holds</c><01:05:45.839><c> you</c><01:05:46.000><c> know</c><01:05:46.079><c> the</c>

01:05:46.390 --> 01:05:46.400 align:start position:0%
the cash line that holds you know the
 

01:05:46.400 --> 01:05:48.630 align:start position:0%
the cash line that holds you know the
the<01:05:47.119><c> value</c><01:05:47.440><c> that</c><01:05:47.599><c> we</c><01:05:47.680><c> want</c><01:05:47.760><c> to</c><01:05:47.920><c> update</c><01:05:48.240><c> ends</c><01:05:48.480><c> up</c>

01:05:48.630 --> 01:05:48.640 align:start position:0%
the value that we want to update ends up
 

01:05:48.640 --> 01:05:50.549 align:start position:0%
the value that we want to update ends up
in<01:05:48.880><c> one</c><01:05:49.119><c> single</c><01:05:49.520><c> cache</c>

01:05:50.549 --> 01:05:50.559 align:start position:0%
in one single cache
 

01:05:50.559 --> 01:05:51.990 align:start position:0%
in one single cache
and<01:05:50.640><c> then</c><01:05:51.200><c> you</c><01:05:51.359><c> know</c><01:05:51.520><c> basically</c><01:05:51.839><c> the</c>

01:05:51.990 --> 01:05:52.000 align:start position:0%
and then you know basically the
 

01:05:52.000 --> 01:05:53.430 align:start position:0%
and then you know basically the
processor<01:05:52.319><c> is</c><01:05:52.400><c> going</c><01:05:52.480><c> to</c><01:05:52.559><c> sort</c><01:05:52.720><c> of</c><01:05:52.880><c> lock</c><01:05:53.200><c> that</c>

01:05:53.430 --> 01:05:53.440 align:start position:0%
processor is going to sort of lock that
 

01:05:53.440 --> 01:05:54.870 align:start position:0%
processor is going to sort of lock that
single<01:05:53.760><c> cache</c><01:05:54.079><c> line</c><01:05:54.319><c> across</c>

01:05:54.870 --> 01:05:54.880 align:start position:0%
single cache line across
 

01:05:54.880 --> 01:05:58.069 align:start position:0%
single cache line across
two<01:05:55.520><c> uh</c><01:05:56.000><c> operations</c><01:05:57.200><c> and</c><01:05:57.280><c> so</c><01:05:57.440><c> the</c><01:05:57.680><c> the</c>

01:05:58.069 --> 01:05:58.079 align:start position:0%
two uh operations and so the the
 

01:05:58.079 --> 01:05:59.029 align:start position:0%
two uh operations and so the the
implementation<01:05:58.559><c> of</c><01:05:58.640><c> this</c>

01:05:59.029 --> 01:05:59.039 align:start position:0%
implementation of this
 

01:05:59.039 --> 01:06:00.309 align:start position:0%
implementation of this
you<01:05:59.119><c> know</c><01:05:59.359><c> can</c><01:05:59.520><c> be</c><01:05:59.599><c> done</c><01:05:59.760><c> in</c><01:05:59.839><c> many</c><01:06:00.079><c> different</c>

01:06:00.309 --> 01:06:00.319 align:start position:0%
you know can be done in many different
 

01:06:00.319 --> 01:06:02.710 align:start position:0%
you know can be done in many different
ways<01:06:01.039><c> uh</c><01:06:01.359><c> but</c><01:06:01.599><c> conceptually</c>

01:06:02.710 --> 01:06:02.720 align:start position:0%
ways uh but conceptually
 

01:06:02.720 --> 01:06:04.630 align:start position:0%
ways uh but conceptually
the<01:06:03.280><c> what's</c><01:06:03.440><c> going</c><01:06:03.680><c> on</c><01:06:03.839><c> is</c><01:06:04.000><c> like</c><01:06:04.160><c> you</c><01:06:04.319><c> lock</c><01:06:04.559><c> the</c>

01:06:04.630 --> 01:06:04.640 align:start position:0%
the what's going on is like you lock the
 

01:06:04.640 --> 01:06:07.750 align:start position:0%
the what's going on is like you lock the
address<01:06:05.440><c> uh</c><01:06:05.760><c> you</c><01:06:06.000><c> read</c><01:06:06.319><c> the</c><01:06:06.480><c> original</c><01:06:06.880><c> value</c>

01:06:07.750 --> 01:06:07.760 align:start position:0%
address uh you read the original value
 

01:06:07.760 --> 01:06:09.750 align:start position:0%
address uh you read the original value
you<01:06:08.319><c> store</c><01:06:08.640><c> in</c><01:06:08.799><c> the</c><01:06:08.880><c> new</c><01:06:09.119><c> value</c><01:06:09.520><c> and</c><01:06:09.599><c> you</c>

01:06:09.750 --> 01:06:09.760 align:start position:0%
you store in the new value and you
 

01:06:09.760 --> 01:06:12.150 align:start position:0%
you store in the new value and you
return<01:06:10.160><c> the</c><01:06:10.240><c> old</c><01:06:10.480><c> value</c>

01:06:12.150 --> 01:06:12.160 align:start position:0%
return the old value
 

01:06:12.160 --> 01:06:15.670 align:start position:0%
return the old value
does<01:06:12.400><c> that</c><01:06:12.480><c> make</c><01:06:12.640><c> sense</c>

01:06:15.670 --> 01:06:15.680 align:start position:0%
 
 

01:06:15.680 --> 01:06:17.910 align:start position:0%
 
to<01:06:15.920><c> make</c><01:06:16.079><c> that</c><01:06:16.799><c> to</c><01:06:16.880><c> see</c><01:06:17.039><c> how</c><01:06:17.200><c> we</c><01:06:17.280><c> can</c><01:06:17.440><c> use</c><01:06:17.599><c> that</c>

01:06:17.910 --> 01:06:17.920 align:start position:0%
to make that to see how we can use that
 

01:06:17.920 --> 01:06:19.510 align:start position:0%
to make that to see how we can use that
instruction

01:06:19.510 --> 01:06:19.520 align:start position:0%
instruction
 

01:06:19.520 --> 01:06:20.390 align:start position:0%
instruction
let's<01:06:19.760><c> actually</c><01:06:20.000><c> look</c><01:06:20.160><c> at</c><01:06:20.240><c> the</c>

01:06:20.390 --> 01:06:20.400 align:start position:0%
let's actually look at the
 

01:06:20.400 --> 01:06:24.230 align:start position:0%
let's actually look at the
implementation<01:06:21.119><c> of</c><01:06:22.400><c> acquire</c><01:06:22.880><c> and</c><01:06:23.039><c> release</c><01:06:23.599><c> in</c>

01:06:24.230 --> 01:06:24.240 align:start position:0%
implementation of acquire and release in
 

01:06:24.240 --> 01:06:26.390 align:start position:0%
implementation of acquire and release in
xv6<01:06:25.200><c> and</c><01:06:25.359><c> then</c><01:06:25.440><c> we'll</c><01:06:25.599><c> expose</c><01:06:25.920><c> a</c><01:06:26.000><c> couple</c><01:06:26.240><c> of</c>

01:06:26.390 --> 01:06:26.400 align:start position:0%
xv6 and then we'll expose a couple of
 

01:06:26.400 --> 01:06:31.670 align:start position:0%
xv6 and then we'll expose a couple of
other<01:06:26.559><c> interesting</c><01:06:26.880><c> details</c>

01:06:31.670 --> 01:06:31.680 align:start position:0%
 
 

01:06:31.680 --> 01:06:35.029 align:start position:0%
 
so<01:06:31.920><c> let</c><01:06:32.079><c> me</c><01:06:32.240><c> first</c><01:06:32.640><c> uh</c><01:06:33.359><c> bring</c><01:06:33.520><c> up</c><01:06:33.680><c> spinlock.h</c>

01:06:35.029 --> 01:06:35.039 align:start position:0%
so let me first uh bring up spinlock.h
 

01:06:35.039 --> 01:06:39.109 align:start position:0%
so let me first uh bring up spinlock.h
uh<01:06:36.079><c> it's</c><01:06:36.240><c> been</c><01:06:36.480><c> locked</c><01:06:36.720><c> at</c><01:06:36.880><c> h</c><01:06:37.520><c> as</c><01:06:37.680><c> you</c><01:06:37.760><c> can</c><01:06:37.920><c> see</c>

01:06:39.109 --> 01:06:39.119 align:start position:0%
uh it's been locked at h as you can see
 

01:06:39.119 --> 01:06:42.230 align:start position:0%
uh it's been locked at h as you can see
it's<01:06:39.359><c> pretty</c><01:06:39.599><c> straightforward</c><01:06:40.559><c> uh</c><01:06:41.760><c> it</c><01:06:42.000><c> has</c>

01:06:42.230 --> 01:06:42.240 align:start position:0%
it's pretty straightforward uh it has
 

01:06:42.240 --> 01:06:42.630 align:start position:0%
it's pretty straightforward uh it has
this

01:06:42.630 --> 01:06:42.640 align:start position:0%
this
 

01:06:42.640 --> 01:06:45.349 align:start position:0%
this
flight<01:06:43.039><c> lock</c><01:06:43.359><c> exactly</c><01:06:43.760><c> as</c><01:06:44.000><c> in</c><01:06:44.160><c> our</c><01:06:44.319><c> pseudocode</c>

01:06:45.349 --> 01:06:45.359 align:start position:0%
flight lock exactly as in our pseudocode
 

01:06:45.359 --> 01:06:46.710 align:start position:0%
flight lock exactly as in our pseudocode
and<01:06:45.440><c> then</c><01:06:45.599><c> it</c><01:06:45.760><c> has</c><01:06:45.920><c> two</c><01:06:46.160><c> other</c><01:06:46.319><c> things</c><01:06:46.559><c> for</c>

01:06:46.710 --> 01:06:46.720 align:start position:0%
and then it has two other things for
 

01:06:46.720 --> 01:06:48.710 align:start position:0%
and then it has two other things for
debugging<01:06:47.200><c> namely</c><01:06:47.599><c> the</c><01:06:47.680><c> name</c><01:06:47.920><c> of</c><01:06:48.079><c> the</c><01:06:48.160><c> lock</c>

01:06:48.710 --> 01:06:48.720 align:start position:0%
debugging namely the name of the lock
 

01:06:48.720 --> 01:06:52.150 align:start position:0%
debugging namely the name of the lock
and<01:06:49.680><c> the</c><01:06:49.839><c> cpu</c><01:06:50.319><c> the</c><01:06:50.480><c> last</c><01:06:51.359><c> the</c><01:06:51.520><c> current</c><01:06:51.839><c> cpu</c>

01:06:52.150 --> 01:06:52.160 align:start position:0%
and the cpu the last the current cpu
 

01:06:52.160 --> 01:06:54.470 align:start position:0%
and the cpu the last the current cpu
that<01:06:52.319><c> actually</c><01:06:52.559><c> is</c><01:06:52.640><c> holding</c><01:06:52.960><c> the</c><01:06:53.039><c> lock</c>

01:06:54.470 --> 01:06:54.480 align:start position:0%
that actually is holding the lock
 

01:06:54.480 --> 01:06:55.589 align:start position:0%
that actually is holding the lock
and<01:06:54.559><c> this</c><01:06:54.720><c> is</c><01:06:54.799><c> mostly</c><01:06:55.119><c> to</c><01:06:55.280><c> print</c><01:06:55.520><c> out</c>

01:06:55.589 --> 01:06:55.599 align:start position:0%
and this is mostly to print out
 

01:06:55.599 --> 01:06:57.510 align:start position:0%
and this is mostly to print out
debugging<01:06:56.079><c> messages</c><01:06:56.559><c> for</c><01:06:56.640><c> example</c><01:06:57.039><c> if</c><01:06:57.119><c> you</c><01:06:57.280><c> do</c>

01:06:57.510 --> 01:06:57.520 align:start position:0%
debugging messages for example if you do
 

01:06:57.520 --> 01:07:01.589 align:start position:0%
debugging messages for example if you do
two<01:06:58.160><c> acquires</c><01:06:58.799><c> on</c><01:06:58.880><c> the</c><01:06:58.960><c> same</c><01:06:59.200><c> cpu</c>

01:07:01.589 --> 01:07:01.599 align:start position:0%
two acquires on the same cpu
 

01:07:01.599 --> 01:07:06.069 align:start position:0%
two acquires on the same cpu
okay<01:07:01.839><c> so</c><01:07:02.000><c> then</c><01:07:02.400><c> let's</c><01:07:02.559><c> look</c><01:07:02.799><c> at</c>

01:07:06.069 --> 01:07:06.079 align:start position:0%
 
 

01:07:06.079 --> 01:07:11.990 align:start position:0%
 
the<01:07:06.319><c> implementation</c>

01:07:11.990 --> 01:07:12.000 align:start position:0%
 
 

01:07:12.000 --> 01:07:15.109 align:start position:0%
 
uh<01:07:12.640><c> and</c><01:07:12.880><c> so</c><01:07:13.039><c> let's</c><01:07:13.200><c> start</c><01:07:13.440><c> out</c><01:07:13.599><c> with</c><01:07:13.839><c> the</c><01:07:13.920><c> choir</c>

01:07:15.109 --> 01:07:15.119 align:start position:0%
uh and so let's start out with the choir
 

01:07:15.119 --> 01:07:19.510 align:start position:0%
uh and so let's start out with the choir
um<01:07:16.160><c> and</c><01:07:16.559><c> let's</c><01:07:16.799><c> first</c><01:07:17.039><c> look</c><01:07:17.280><c> at</c><01:07:17.359><c> this</c><01:07:18.079><c> loop</c>

01:07:19.510 --> 01:07:19.520 align:start position:0%
um and let's first look at this loop
 

01:07:19.520 --> 01:07:22.870 align:start position:0%
um and let's first look at this loop
so<01:07:19.680><c> this</c><01:07:19.920><c> is</c><01:07:20.079><c> actually</c><01:07:20.559><c> uh</c><01:07:22.000><c> the</c><01:07:22.319><c> sort</c><01:07:22.480><c> of</c><01:07:22.640><c> test</c>

01:07:22.870 --> 01:07:22.880 align:start position:0%
so this is actually uh the sort of test
 

01:07:22.880 --> 01:07:25.270 align:start position:0%
so this is actually uh the sort of test
and<01:07:22.960><c> set</c><01:07:23.200><c> loop</c><01:07:23.440><c> that</c><01:07:23.680><c> i</c><01:07:23.920><c> just</c><01:07:24.160><c> talked</c><01:07:24.400><c> about</c>

01:07:25.270 --> 01:07:25.280 align:start position:0%
and set loop that i just talked about
 

01:07:25.280 --> 01:07:28.390 align:start position:0%
and set loop that i just talked about
it<01:07:25.359><c> turns</c><01:07:25.680><c> out</c><01:07:25.839><c> that</c><01:07:26.160><c> in</c><01:07:26.960><c> um</c>

01:07:28.390 --> 01:07:28.400 align:start position:0%
it turns out that in um
 

01:07:28.400 --> 01:07:31.829 align:start position:0%
it turns out that in um
uh<01:07:29.680><c> the</c><01:07:29.839><c> c</c><01:07:30.079><c> standard</c><01:07:30.640><c> actually</c><01:07:31.039><c> defines</c>

01:07:31.829 --> 01:07:31.839 align:start position:0%
uh the c standard actually defines
 

01:07:31.839 --> 01:07:35.589 align:start position:0%
uh the c standard actually defines
uh<01:07:32.880><c> one</c><01:07:33.039><c> of</c><01:07:33.119><c> these</c><01:07:33.280><c> atomic</c><01:07:33.680><c> operations</c><01:07:34.640><c> and</c><01:07:34.880><c> so</c>

01:07:35.589 --> 01:07:35.599 align:start position:0%
uh one of these atomic operations and so
 

01:07:35.599 --> 01:07:37.910 align:start position:0%
uh one of these atomic operations and so
um<01:07:36.319><c> and</c><01:07:36.559><c> so</c><01:07:36.720><c> the</c><01:07:36.799><c> c</c><01:07:36.960><c> standard</c><01:07:37.359><c> actually</c><01:07:37.520><c> has</c><01:07:37.839><c> a</c>

01:07:37.910 --> 01:07:37.920 align:start position:0%
um and so the c standard actually has a
 

01:07:37.920 --> 01:07:39.109 align:start position:0%
um and so the c standard actually has a
function<01:07:38.319><c> that</c>

01:07:39.109 --> 01:07:39.119 align:start position:0%
function that
 

01:07:39.119 --> 01:07:41.990 align:start position:0%
function that
uh<01:07:39.359><c> says</c><01:07:39.839><c> you</c><01:07:40.000><c> know</c><01:07:40.160><c> sync</c><01:07:40.480><c> lock</c><01:07:41.359><c> test</c><01:07:41.680><c> and</c><01:07:41.760><c> set</c>

01:07:41.990 --> 01:07:42.000 align:start position:0%
uh says you know sync lock test and set
 

01:07:42.000 --> 01:07:43.829 align:start position:0%
uh says you know sync lock test and set
and<01:07:42.079><c> basically</c><01:07:42.400><c> it</c><01:07:42.559><c> specifies</c><01:07:43.119><c> behavior</c><01:07:43.680><c> that</c>

01:07:43.829 --> 01:07:43.839 align:start position:0%
and basically it specifies behavior that
 

01:07:43.839 --> 01:07:44.230 align:start position:0%
and basically it specifies behavior that
i

01:07:44.230 --> 01:07:44.240 align:start position:0%
i
 

01:07:44.240 --> 01:07:46.630 align:start position:0%
i
just<01:07:44.480><c> described</c><01:07:45.599><c> and</c><01:07:45.760><c> then</c><01:07:45.920><c> every</c><01:07:46.160><c> processor</c>

01:07:46.630 --> 01:07:46.640 align:start position:0%
just described and then every processor
 

01:07:46.640 --> 01:07:48.150 align:start position:0%
just described and then every processor
basically<01:07:47.039><c> is</c><01:07:47.119><c> required</c><01:07:47.760><c> you</c><01:07:47.839><c> know</c><01:07:48.000><c> to</c>

01:07:48.150 --> 01:07:48.160 align:start position:0%
basically is required you know to
 

01:07:48.160 --> 01:07:48.710 align:start position:0%
basically is required you know to
implement

01:07:48.710 --> 01:07:48.720 align:start position:0%
implement
 

01:07:48.720 --> 01:07:51.430 align:start position:0%
implement
uh<01:07:49.839><c> that</c><01:07:50.079><c> behavior</c><01:07:50.799><c> and</c><01:07:50.960><c> since</c><01:07:51.200><c> most</c>

01:07:51.430 --> 01:07:51.440 align:start position:0%
uh that behavior and since most
 

01:07:51.440 --> 01:07:52.789 align:start position:0%
uh that behavior and since most
processors<01:07:52.000><c> have</c><01:07:52.319><c> a</c>

01:07:52.789 --> 01:07:52.799 align:start position:0%
processors have a
 

01:07:52.799 --> 01:07:54.470 align:start position:0%
processors have a
matching<01:07:53.280><c> sort</c><01:07:53.440><c> of</c><01:07:53.599><c> test</c><01:07:53.839><c> and</c><01:07:53.920><c> set</c><01:07:54.160><c> hardware</c>

01:07:54.470 --> 01:07:54.480 align:start position:0%
matching sort of test and set hardware
 

01:07:54.480 --> 01:07:56.309 align:start position:0%
matching sort of test and set hardware
instruction<01:07:55.520><c> this</c><01:07:55.680><c> turns</c><01:07:55.920><c> out</c><01:07:56.079><c> to</c><01:07:56.160><c> be</c><01:07:56.240><c> a</c>

01:07:56.309 --> 01:07:56.319 align:start position:0%
instruction this turns out to be a
 

01:07:56.319 --> 01:07:57.510 align:start position:0%
instruction this turns out to be a
reasonable<01:07:56.640><c> straightforward</c><01:07:57.359><c> or</c>

01:07:57.510 --> 01:07:57.520 align:start position:0%
reasonable straightforward or
 

01:07:57.520 --> 01:07:58.549 align:start position:0%
reasonable straightforward or
approximate<01:07:57.920><c> to</c><01:07:58.079><c> implement</c>

01:07:58.549 --> 01:07:58.559 align:start position:0%
approximate to implement
 

01:07:58.559 --> 01:08:01.270 align:start position:0%
approximate to implement
and<01:07:58.720><c> so</c><01:07:58.880><c> in</c><01:07:58.960><c> fact</c><01:07:59.200><c> if</c><01:07:59.359><c> you</c><01:07:59.440><c> look</c><01:08:00.079><c> at</c><01:08:00.240><c> kernel.asm</c>

01:08:01.270 --> 01:08:01.280 align:start position:0%
and so in fact if you look at kernel.asm
 

01:08:01.280 --> 01:08:02.549 align:start position:0%
and so in fact if you look at kernel.asm
you<01:08:01.440><c> know</c><01:08:01.520><c> we</c><01:08:01.680><c> can</c><01:08:01.760><c> look</c><01:08:01.920><c> at</c><01:08:02.000><c> the</c><01:08:02.079><c> assembly</c>

01:08:02.549 --> 01:08:02.559 align:start position:0%
you know we can look at the assembly
 

01:08:02.559 --> 01:08:04.230 align:start position:0%
you know we can look at the assembly
instructions<01:08:03.200><c> and</c><01:08:03.359><c> see</c><01:08:03.599><c> exactly</c><01:08:04.000><c> you</c><01:08:04.079><c> know</c>

01:08:04.230 --> 01:08:04.240 align:start position:0%
instructions and see exactly you know
 

01:08:04.240 --> 01:08:08.829 align:start position:0%
instructions and see exactly you know
what<01:08:04.400><c> the</c><01:08:04.480><c> risk</c><01:08:04.720><c> 5</c><01:08:04.960><c> processor</c><01:08:05.520><c> does</c>

01:08:08.829 --> 01:08:08.839 align:start position:0%
 
 

01:08:08.839 --> 01:08:12.230 align:start position:0%
 
so<01:08:11.119><c> back</c><01:08:11.280><c> here</c><01:08:11.680><c> is</c>

01:08:12.230 --> 01:08:12.240 align:start position:0%
so back here is
 

01:08:12.240 --> 01:08:14.630 align:start position:0%
so back here is
our<01:08:12.480><c> assembly</c><01:08:12.880><c> instructions</c><01:08:13.200><c> for</c><01:08:13.359><c> require</c>

01:08:14.630 --> 01:08:14.640 align:start position:0%
our assembly instructions for require
 

01:08:14.640 --> 01:08:15.589 align:start position:0%
our assembly instructions for require
and

01:08:15.589 --> 01:08:15.599 align:start position:0%
and
 

01:08:15.599 --> 01:08:27.829 align:start position:0%
and
let's<01:08:15.920><c> here's</c><01:08:16.400><c> our</c><01:08:17.839><c> atomic</c><01:08:18.319><c> swap</c><01:08:22.839><c> instruction</c>

01:08:27.829 --> 01:08:27.839 align:start position:0%
 
 

01:08:27.839 --> 01:08:31.510 align:start position:0%
 
uh<01:08:28.080><c> so</c><01:08:28.239><c> as</c><01:08:28.319><c> you</c><01:08:28.400><c> can</c><01:08:28.560><c> see</c><01:08:29.279><c> uh</c><01:08:30.799><c> if</c>

01:08:31.510 --> 01:08:31.520 align:start position:0%
uh so as you can see uh if
 

01:08:31.520 --> 01:08:33.590 align:start position:0%
uh so as you can see uh if
you<01:08:31.600><c> know</c><01:08:31.759><c> an</c><01:08:31.920><c> atomic</c><01:08:32.239><c> swap</c><01:08:32.560><c> basically</c><01:08:33.199><c> uh</c><01:08:33.520><c> is</c>

01:08:33.590 --> 01:08:33.600 align:start position:0%
you know an atomic swap basically uh is
 

01:08:33.600 --> 01:08:35.189 align:start position:0%
you know an atomic swap basically uh is
called<01:08:33.839><c> with</c><01:08:34.080><c> the</c><01:08:34.239><c> register</c><01:08:34.640><c> a5</c>

01:08:35.189 --> 01:08:35.199 align:start position:0%
called with the register a5
 

01:08:35.199 --> 01:08:38.630 align:start position:0%
called with the register a5
and<01:08:35.679><c> uh</c><01:08:36.719><c> as</c><01:08:36.880><c> the</c><01:08:37.120><c> input</c><01:08:37.440><c> and</c><01:08:37.520><c> the</c><01:08:38.000><c> output</c><01:08:38.319><c> also</c>

01:08:38.630 --> 01:08:38.640 align:start position:0%
and uh as the input and the output also
 

01:08:38.640 --> 01:08:40.070 align:start position:0%
and uh as the input and the output also
ends<01:08:38.799><c> up</c><01:08:38.960><c> in</c><01:08:39.120><c> a5</c>

01:08:40.070 --> 01:08:40.080 align:start position:0%
ends up in a5
 

01:08:40.080 --> 01:08:43.269 align:start position:0%
ends up in a5
and<01:08:40.319><c> s1</c><01:08:40.719><c> is</c><01:08:40.799><c> to</c><01:08:40.880><c> hold</c><01:08:41.040><c> to</c><01:08:41.120><c> the</c><01:08:41.279><c> address</c><01:08:42.239><c> and</c>

01:08:43.269 --> 01:08:43.279 align:start position:0%
and s1 is to hold to the address and
 

01:08:43.279 --> 01:08:46.550 align:start position:0%
and s1 is to hold to the address and
uh<01:08:44.239><c> and</c><01:08:44.560><c> if</c><01:08:44.799><c> it's</c><01:08:45.199><c> not</c><01:08:45.520><c> equal</c>

01:08:46.550 --> 01:08:46.560 align:start position:0%
uh and if it's not equal
 

01:08:46.560 --> 01:08:49.669 align:start position:0%
uh and if it's not equal
uh<01:08:47.600><c> we</c><01:08:48.080><c> return</c><01:08:48.799><c> and</c><01:08:49.040><c> otherwise</c>

01:08:49.669 --> 01:08:49.679 align:start position:0%
uh we return and otherwise
 

01:08:49.679 --> 01:08:52.870 align:start position:0%
uh we return and otherwise
basically<01:08:50.080><c> we</c><01:08:50.319><c> go</c><01:08:50.480><c> back</c><01:08:50.799><c> you</c><01:08:50.880><c> know</c><01:08:51.120><c> to</c><01:08:51.520><c> uh</c>

01:08:52.870 --> 01:08:52.880 align:start position:0%
basically we go back you know to uh
 

01:08:52.880 --> 01:08:57.110 align:start position:0%
basically we go back you know to uh
jump<01:08:53.120><c> back</c><01:08:53.759><c> to</c><01:08:54.159><c> uh</c><01:08:55.040><c> uh</c>

01:08:57.110 --> 01:08:57.120 align:start position:0%
jump back to uh uh
 

01:08:57.120 --> 01:08:58.390 align:start position:0%
jump back to uh uh
double<01:08:57.359><c> check</c><01:08:57.520><c> i'm</c><01:08:57.679><c> saying</c><01:08:57.920><c> the</c><01:08:58.000><c> right</c><01:08:58.159><c> thing</c>

01:08:58.390 --> 01:08:58.400 align:start position:0%
double check i'm saying the right thing
 

01:08:58.400 --> 01:09:00.229 align:start position:0%
double check i'm saying the right thing
here<01:08:59.199><c> uh</c><01:08:59.440><c> move</c><01:08:59.839><c> a</c>

01:09:00.229 --> 01:09:00.239 align:start position:0%
here uh move a
 

01:09:00.239 --> 01:09:04.149 align:start position:0%
here uh move a
four<01:09:00.640><c> in</c><01:09:01.839><c> six</c><01:09:02.400><c> if</c><01:09:02.560><c> not</c><01:09:02.799><c> equal</c><01:09:03.040><c> to</c><01:09:03.199><c> go</c><01:09:03.359><c> to</c><01:09:03.520><c> ox</c>

01:09:04.149 --> 01:09:04.159 align:start position:0%
four in six if not equal to go to ox
 

01:09:04.159 --> 01:09:07.189 align:start position:0%
four in six if not equal to go to ox
20<01:09:05.120><c> plus</c><01:09:05.440><c> oaks</c><01:09:05.759><c> 22.</c>

01:09:07.189 --> 01:09:07.199 align:start position:0%
20 plus oaks 22.
 

01:09:07.199 --> 01:09:09.349 align:start position:0%
20 plus oaks 22.
uh<01:09:07.679><c> that's</c><01:09:07.839><c> a</c><01:09:07.920><c> little</c><01:09:08.080><c> bit</c><01:09:08.159><c> hard</c><01:09:08.319><c> to</c><01:09:08.400><c> calculate</c>

01:09:09.349 --> 01:09:09.359 align:start position:0%
uh that's a little bit hard to calculate
 

01:09:09.359 --> 01:09:10.950 align:start position:0%
uh that's a little bit hard to calculate
but<01:09:09.520><c> that</c><01:09:09.679><c> basically</c><01:09:10.000><c> in</c><01:09:10.080><c> one</c><01:09:10.239><c> case</c><01:09:10.480><c> we</c><01:09:10.640><c> branch</c>

01:09:10.950 --> 01:09:10.960 align:start position:0%
but that basically in one case we branch
 

01:09:10.960 --> 01:09:11.349 align:start position:0%
but that basically in one case we branch
out

01:09:11.349 --> 01:09:11.359 align:start position:0%
out
 

01:09:11.359 --> 01:09:14.149 align:start position:0%
out
and<01:09:11.520><c> in</c><01:09:11.600><c> the</c><01:09:11.759><c> other</c><01:09:11.920><c> case</c><01:09:12.080><c> we</c><01:09:12.239><c> branch</c><01:09:12.640><c> back</c><01:09:13.920><c> and</c>

01:09:14.149 --> 01:09:14.159 align:start position:0%
and in the other case we branch back and
 

01:09:14.159 --> 01:09:15.510 align:start position:0%
and in the other case we branch back and
so<01:09:14.400><c> this</c><01:09:14.560><c> may</c><01:09:14.719><c> be</c><01:09:14.799><c> easier</c><01:09:15.120><c> to</c>

01:09:15.510 --> 01:09:15.520 align:start position:0%
so this may be easier to
 

01:09:15.520 --> 01:09:18.019 align:start position:0%
so this may be easier to
look<01:09:15.679><c> at</c><01:09:15.759><c> the</c><01:09:16.000><c> c</c><01:09:16.239><c> code</c>

01:09:18.019 --> 01:09:18.029 align:start position:0%
look at the c code
 

01:09:18.029 --> 01:09:19.430 align:start position:0%
look at the c code
[Music]

01:09:19.430 --> 01:09:19.440 align:start position:0%
[Music]
 

01:09:19.440 --> 01:09:22.149 align:start position:0%
[Music]
so<01:09:19.600><c> let's</c><01:09:19.839><c> go</c><01:09:20.319><c> in</c><01:09:20.480><c> here</c><01:09:20.719><c> so</c><01:09:20.880><c> what</c><01:09:21.120><c> happens</c><01:09:21.920><c> so</c>

01:09:22.149 --> 01:09:22.159 align:start position:0%
so let's go in here so what happens so
 

01:09:22.159 --> 01:09:22.709 align:start position:0%
so let's go in here so what happens so
if<01:09:22.319><c> the</c>

01:09:22.709 --> 01:09:22.719 align:start position:0%
if the
 

01:09:22.719 --> 01:09:25.990 align:start position:0%
if the
if<01:09:22.880><c> the</c><01:09:22.960><c> lock</c><01:09:23.279><c> is</c><01:09:23.759><c> not</c><01:09:24.000><c> held</c><01:09:25.040><c> uh</c><01:09:25.359><c> what</c><01:09:25.520><c> will</c><01:09:25.759><c> be</c>

01:09:25.990 --> 01:09:26.000 align:start position:0%
if the lock is not held uh what will be
 

01:09:26.000 --> 01:09:27.269 align:start position:0%
if the lock is not held uh what will be
the<01:09:26.080><c> value</c><01:09:26.400><c> of</c><01:09:26.560><c> l</c><01:09:26.719><c> locked</c><01:09:26.960><c> well</c>

01:09:27.269 --> 01:09:27.279 align:start position:0%
the value of l locked well
 

01:09:27.279 --> 01:09:30.630 align:start position:0%
the value of l locked well
l<01:09:27.440><c> log</c><01:09:27.600><c> will</c><01:09:27.759><c> be</c><01:09:28.000><c> zero</c><01:09:28.880><c> all</c><01:09:28.960><c> right</c><01:09:30.080><c> and</c><01:09:30.319><c> so</c>

01:09:30.630 --> 01:09:30.640 align:start position:0%
l log will be zero all right and so
 

01:09:30.640 --> 01:09:32.470 align:start position:0%
l log will be zero all right and so
we<01:09:30.799><c> call</c><01:09:30.960><c> this</c><01:09:31.120><c> test</c><01:09:31.359><c> and</c><01:09:31.520><c> set</c><01:09:32.080><c> what</c><01:09:32.319><c> will</c>

01:09:32.470 --> 01:09:32.480 align:start position:0%
we call this test and set what will
 

01:09:32.480 --> 01:09:34.309 align:start position:0%
we call this test and set what will
happen<01:09:32.880><c> is</c><01:09:33.040><c> we'll</c><01:09:33.199><c> write</c><01:09:33.440><c> a</c><01:09:33.600><c> one</c>

01:09:34.309 --> 01:09:34.319 align:start position:0%
happen is we'll write a one
 

01:09:34.319 --> 01:09:37.349 align:start position:0%
happen is we'll write a one
yeah<01:09:34.719><c> in</c><01:09:34.960><c> walked</c><01:09:36.319><c> but</c><01:09:36.480><c> return</c><01:09:36.880><c> the</c><01:09:36.960><c> previous</c>

01:09:37.349 --> 01:09:37.359 align:start position:0%
yeah in walked but return the previous
 

01:09:37.359 --> 01:09:38.470 align:start position:0%
yeah in walked but return the previous
value

01:09:38.470 --> 01:09:38.480 align:start position:0%
value
 

01:09:38.480 --> 01:09:41.669 align:start position:0%
value
so<01:09:38.640><c> if</c><01:09:38.799><c> the</c><01:09:38.880><c> previous</c><01:09:39.199><c> value</c><01:09:39.839><c> is</c><01:09:40.000><c> zero</c><01:09:41.120><c> uh</c>

01:09:41.669 --> 01:09:41.679 align:start position:0%
so if the previous value is zero uh
 

01:09:41.679 --> 01:09:43.829 align:start position:0%
so if the previous value is zero uh
then<01:09:42.480><c> we're</c><01:09:42.719><c> good</c><01:09:43.040><c> right</c><01:09:43.279><c> because</c><01:09:43.520><c> that</c><01:09:43.679><c> means</c>

01:09:43.829 --> 01:09:43.839 align:start position:0%
then we're good right because that means
 

01:09:43.839 --> 01:09:45.669 align:start position:0%
then we're good right because that means
that<01:09:44.000><c> nobody</c><01:09:44.319><c> was</c><01:09:44.480><c> holding</c><01:09:44.799><c> the</c><01:09:44.960><c> lock</c><01:09:45.279><c> and</c><01:09:45.440><c> we</c>

01:09:45.669 --> 01:09:45.679 align:start position:0%
that nobody was holding the lock and we
 

01:09:45.679 --> 01:09:46.309 align:start position:0%
that nobody was holding the lock and we
fall<01:09:45.920><c> through</c>

01:09:46.309 --> 01:09:46.319 align:start position:0%
fall through
 

01:09:46.319 --> 01:09:49.590 align:start position:0%
fall through
and<01:09:46.400><c> we're</c><01:09:46.560><c> done</c><01:09:46.719><c> with</c><01:09:46.880><c> this</c><01:09:47.040><c> while</c><01:09:47.279><c> loop</c>

01:09:49.590 --> 01:09:49.600 align:start position:0%
and we're done with this while loop
 

01:09:49.600 --> 01:09:51.910 align:start position:0%
and we're done with this while loop
now<01:09:49.759><c> let's</c><01:09:49.920><c> say</c><01:09:50.159><c> the</c><01:09:50.400><c> log</c><01:09:50.640><c> value</c><01:09:50.960><c> was</c><01:09:51.199><c> one</c><01:09:51.759><c> so</c>

01:09:51.910 --> 01:09:51.920 align:start position:0%
now let's say the log value was one so
 

01:09:51.920 --> 01:09:53.110 align:start position:0%
now let's say the log value was one so
the<01:09:52.239><c> pro</c><01:09:52.560><c> the</c>

01:09:53.110 --> 01:09:53.120 align:start position:0%
the pro the
 

01:09:53.120 --> 01:09:55.590 align:start position:0%
the pro the
the<01:09:53.679><c> lock</c><01:09:53.920><c> was</c><01:09:54.239><c> actually</c><01:09:54.560><c> locked</c><01:09:55.199><c> well</c><01:09:55.440><c> what</c>

01:09:55.590 --> 01:09:55.600 align:start position:0%
the lock was actually locked well what
 

01:09:55.600 --> 01:09:57.189 align:start position:0%
the lock was actually locked well what
will<01:09:55.760><c> this</c><01:09:56.000><c> instruction</c><01:09:56.400><c> do</c>

01:09:57.189 --> 01:09:57.199 align:start position:0%
will this instruction do
 

01:09:57.199 --> 01:10:00.709 align:start position:0%
will this instruction do
it<01:09:57.360><c> will</c><01:09:58.000><c> uh</c><01:09:59.360><c> read</c><01:09:59.679><c> you</c><01:09:59.840><c> know</c><01:09:59.920><c> the</c><01:10:00.080><c> old</c><01:10:00.320><c> value</c>

01:10:00.709 --> 01:10:00.719 align:start position:0%
it will uh read you know the old value
 

01:10:00.719 --> 01:10:02.790 align:start position:0%
it will uh read you know the old value
and<01:10:00.880><c> put</c><01:10:01.040><c> that</c><01:10:01.199><c> at</c><01:10:01.360><c> the</c><01:10:01.440><c> site</c><01:10:01.760><c> correct</c><01:10:02.000><c> that</c><01:10:02.239><c> is</c>

01:10:02.790 --> 01:10:02.800 align:start position:0%
and put that at the site correct that is
 

01:10:02.800 --> 01:10:04.790 align:start position:0%
and put that at the site correct that is
one<01:10:03.040><c> actually</c><01:10:03.280><c> in</c><01:10:03.360><c> this</c><01:10:03.600><c> case</c><01:10:04.080><c> and</c><01:10:04.159><c> then</c><01:10:04.400><c> write</c>

01:10:04.790 --> 01:10:04.800 align:start position:0%
one actually in this case and then write
 

01:10:04.800 --> 01:10:07.750 align:start position:0%
one actually in this case and then write
a<01:10:05.280><c> new</c><01:10:05.600><c> one</c><01:10:05.920><c> into</c><01:10:06.239><c> that</c><01:10:06.400><c> location</c>

01:10:07.750 --> 01:10:07.760 align:start position:0%
a new one into that location
 

01:10:07.760 --> 01:10:10.070 align:start position:0%
a new one into that location
um<01:10:08.560><c> and</c><01:10:08.800><c> but</c><01:10:08.960><c> that</c><01:10:09.120><c> will</c><01:10:09.360><c> change</c><01:10:09.600><c> nothing</c>

01:10:10.070 --> 01:10:10.080 align:start position:0%
um and but that will change nothing
 

01:10:10.080 --> 01:10:11.030 align:start position:0%
um and but that will change nothing
right<01:10:10.400><c> because</c><01:10:10.640><c> the</c>

01:10:11.030 --> 01:10:11.040 align:start position:0%
right because the
 

01:10:11.040 --> 01:10:13.590 align:start position:0%
right because the
lock<01:10:11.199><c> was</c><01:10:11.440><c> already</c><01:10:11.840><c> locked</c><01:10:12.800><c> and</c><01:10:13.280><c> and</c><01:10:13.440><c> the</c>

01:10:13.590 --> 01:10:13.600 align:start position:0%
lock was already locked and and the
 

01:10:13.600 --> 01:10:15.350 align:start position:0%
lock was already locked and and the
function<01:10:13.920><c> will</c><01:10:14.080><c> return</c><01:10:14.400><c> one</c>

01:10:15.350 --> 01:10:15.360 align:start position:0%
function will return one
 

01:10:15.360 --> 01:10:16.630 align:start position:0%
function will return one
indicating<01:10:15.760><c> that</c><01:10:15.920><c> actually</c><01:10:16.159><c> somebody</c><01:10:16.560><c> the</c>

01:10:16.630 --> 01:10:16.640 align:start position:0%
indicating that actually somebody the
 

01:10:16.640 --> 01:10:18.709 align:start position:0%
indicating that actually somebody the
previous<01:10:16.960><c> hold</c><01:10:17.280><c> that</c><01:10:17.679><c> it</c><01:10:17.840><c> was</c><01:10:18.080><c> already</c><01:10:18.400><c> locked</c>

01:10:18.709 --> 01:10:18.719 align:start position:0%
previous hold that it was already locked
 

01:10:18.719 --> 01:10:19.830 align:start position:0%
previous hold that it was already locked
and<01:10:18.800><c> so</c><01:10:19.040><c> in</c><01:10:19.199><c> that</c><01:10:19.360><c> case</c>

01:10:19.830 --> 01:10:19.840 align:start position:0%
and so in that case
 

01:10:19.840 --> 01:10:22.390 align:start position:0%
and so in that case
it's<01:10:20.080><c> unequal</c><01:10:20.560><c> to</c><01:10:20.719><c> zero</c><01:10:21.360><c> and</c><01:10:21.440><c> so</c><01:10:21.600><c> we'll</c><01:10:21.840><c> spin</c>

01:10:22.390 --> 01:10:22.400 align:start position:0%
it's unequal to zero and so we'll spin
 

01:10:22.400 --> 01:10:23.669 align:start position:0%
it's unequal to zero and so we'll spin
and<01:10:22.480><c> we'll</c><01:10:22.640><c> keep</c><01:10:22.880><c> spinning</c>

01:10:23.669 --> 01:10:23.679 align:start position:0%
and we'll keep spinning
 

01:10:23.679 --> 01:10:27.030 align:start position:0%
and we'll keep spinning
until<01:10:24.400><c> locked</c><01:10:24.719><c> actually</c><01:10:25.040><c> is</c><01:10:25.120><c> set</c><01:10:25.440><c> back</c><01:10:26.159><c> to</c>

01:10:27.030 --> 01:10:27.040 align:start position:0%
until locked actually is set back to
 

01:10:27.040 --> 01:10:29.669 align:start position:0%
until locked actually is set back to
uh<01:10:27.600><c> zero</c><01:10:28.480><c> and</c><01:10:28.719><c> zoom</c><01:10:28.960><c> level</c><01:10:29.199><c> happened</c><01:10:29.440><c> in</c><01:10:29.600><c> the</c>

01:10:29.669 --> 01:10:29.679 align:start position:0%
uh zero and zoom level happened in the
 

01:10:29.679 --> 01:10:32.390 align:start position:0%
uh zero and zoom level happened in the
release

01:10:32.390 --> 01:10:32.400 align:start position:0%
 
 

01:10:32.400 --> 01:10:51.270 align:start position:0%
 
any<01:10:32.640><c> questions</c><01:10:32.960><c> about</c><01:10:42.840><c> this</c>

01:10:51.270 --> 01:10:51.280 align:start position:0%
 
 

01:10:51.280 --> 01:10:55.990 align:start position:0%
 
no<01:10:51.440><c> questions</c><01:10:52.800><c> okay</c><01:10:53.520><c> um</c>

01:10:55.990 --> 01:10:56.000 align:start position:0%
 
 

01:10:56.000 --> 01:10:57.510 align:start position:0%
 
so<01:10:56.159><c> now</c><01:10:56.400><c> basically</c><01:10:56.880><c> you</c><01:10:56.960><c> know</c><01:10:57.120><c> let's</c><01:10:57.280><c> look</c><01:10:57.440><c> at</c>

01:10:57.510 --> 01:10:57.520 align:start position:0%
so now basically you know let's look at
 

01:10:57.520 --> 01:11:00.149 align:start position:0%
so now basically you know let's look at
the<01:10:57.840><c> corresponding</c><01:10:58.640><c> uh</c>

01:11:00.149 --> 01:11:00.159 align:start position:0%
the corresponding uh
 

01:11:00.159 --> 01:11:03.510 align:start position:0%
the corresponding uh
the<01:11:00.320><c> release</c><01:11:00.640><c> operation</c><01:11:02.000><c> and</c>

01:11:03.510 --> 01:11:03.520 align:start position:0%
the release operation and
 

01:11:03.520 --> 01:11:07.510 align:start position:0%
the release operation and
uh

01:11:07.510 --> 01:11:07.520 align:start position:0%
 
 

01:11:07.520 --> 01:11:10.709 align:start position:0%
 
and<01:11:08.080><c> uh</c><01:11:08.400><c> here's</c><01:11:08.960><c> uh</c><01:11:09.280><c> the</c><01:11:09.360><c> release</c><01:11:09.679><c> operation</c>

01:11:10.709 --> 01:11:10.719 align:start position:0%
and uh here's uh the release operation
 

01:11:10.719 --> 01:11:15.990 align:start position:0%
and uh here's uh the release operation
and<01:11:11.040><c> if</c><01:11:11.120><c> you</c><01:11:11.520><c> look</c><01:11:11.679><c> at</c><01:11:11.760><c> the</c><01:11:12.000><c> kernel</c><01:11:12.320><c> asm</c><01:11:12.960><c> again</c>

01:11:15.990 --> 01:11:16.000 align:start position:0%
 
 

01:11:16.000 --> 01:11:18.950 align:start position:0%
 
that<01:11:16.239><c> instruction</c><01:11:17.280><c> uh</c><01:11:17.600><c> so</c><01:11:18.080><c> let's</c><01:11:18.560><c> release</c>

01:11:18.950 --> 01:11:18.960 align:start position:0%
that instruction uh so let's release
 

01:11:18.960 --> 01:11:22.070 align:start position:0%
that instruction uh so let's release
probably<01:11:19.280><c> right</c><01:11:19.520><c> after</c><01:11:19.840><c> it</c><01:11:19.920><c> here's</c><01:11:20.239><c> release</c>

01:11:22.070 --> 01:11:22.080 align:start position:0%
probably right after it here's release
 

01:11:22.080 --> 01:11:23.990 align:start position:0%
probably right after it here's release
so<01:11:22.320><c> the</c><01:11:22.400><c> release</c><01:11:22.800><c> actually</c><01:11:23.120><c> also</c><01:11:23.360><c> uses</c><01:11:23.760><c> this</c>

01:11:23.990 --> 01:11:24.000 align:start position:0%
so the release actually also uses this
 

01:11:24.000 --> 01:11:27.910 align:start position:0%
so the release actually also uses this
atomic<01:11:24.480><c> swap</c><01:11:25.040><c> instruction</c>

01:11:27.910 --> 01:11:27.920 align:start position:0%
 
 

01:11:27.920 --> 01:11:33.430 align:start position:0%
 
and<01:11:28.159><c> putting</c><01:11:28.480><c> basically</c><01:11:28.880><c> zero</c><01:11:29.520><c> into</c><01:11:29.920><c> s1</c>

01:11:33.430 --> 01:11:33.440 align:start position:0%
 
 

01:11:33.440 --> 01:11:35.830 align:start position:0%
 
and<01:11:33.679><c> so</c><01:11:34.400><c> this</c><01:11:34.719><c> guarantee</c><01:11:35.120><c> is</c><01:11:35.280><c> basically</c><01:11:35.679><c> that</c>

01:11:35.830 --> 01:11:35.840 align:start position:0%
and so this guarantee is basically that
 

01:11:35.840 --> 01:11:38.470 align:start position:0%
and so this guarantee is basically that
this<01:11:36.159><c> atomic</c><01:11:36.560><c> update</c><01:11:37.040><c> you</c><01:11:37.199><c> know</c><01:11:37.360><c> to</c>

01:11:38.470 --> 01:11:38.480 align:start position:0%
this atomic update you know to
 

01:11:38.480 --> 01:11:41.669 align:start position:0%
this atomic update you know to
lock<01:11:39.120><c> or</c><01:11:39.280><c> lk</c><01:11:39.679><c> locked</c><01:11:40.320><c> uh</c>

01:11:41.669 --> 01:11:41.679 align:start position:0%
lock or lk locked uh
 

01:11:41.679 --> 01:11:43.590 align:start position:0%
lock or lk locked uh
writing<01:11:42.000><c> a</c><01:11:42.080><c> zero</c><01:11:42.480><c> into</c><01:11:42.719><c> lk</c><01:11:43.120><c> locked</c><01:11:43.360><c> is</c><01:11:43.520><c> an</c>

01:11:43.590 --> 01:11:43.600 align:start position:0%
writing a zero into lk locked is an
 

01:11:43.600 --> 01:11:46.229 align:start position:0%
writing a zero into lk locked is an
atomic<01:11:44.000><c> operation</c>

01:11:46.229 --> 01:11:46.239 align:start position:0%
atomic operation
 

01:11:46.239 --> 01:11:48.390 align:start position:0%
atomic operation
many<01:11:46.480><c> of</c><01:11:46.560><c> you</c><01:11:46.800><c> ask</c><01:11:47.520><c> why</c><01:11:47.679><c> not</c><01:11:47.920><c> just</c><01:11:48.239><c> you</c><01:11:48.320><c> know</c>

01:11:48.390 --> 01:11:48.400 align:start position:0%
many of you ask why not just you know
 

01:11:48.400 --> 01:11:49.669 align:start position:0%
many of you ask why not just you know
you<01:11:48.640><c> store</c>

01:11:49.669 --> 01:11:49.679 align:start position:0%
you store
 

01:11:49.679 --> 01:11:51.110 align:start position:0%
you store
a<01:11:49.760><c> store</c><01:11:50.080><c> instruction</c><01:11:50.480><c> to</c><01:11:50.560><c> actually</c><01:11:50.800><c> write</c><01:11:50.960><c> to</c>

01:11:51.110 --> 01:11:51.120 align:start position:0%
a store instruction to actually write to
 

01:11:51.120 --> 01:11:55.350 align:start position:0%
a store instruction to actually write to
zero<01:11:52.840><c> and</c><01:11:53.920><c> anybody</c>

01:11:55.350 --> 01:11:55.360 align:start position:0%
zero and anybody
 

01:11:55.360 --> 01:11:59.030 align:start position:0%
zero and anybody
may<01:11:55.600><c> want</c><01:11:55.760><c> to</c><01:11:55.840><c> guess</c><01:11:56.239><c> why</c><01:11:58.320><c> why</c><01:11:58.480><c> that</c><01:11:58.640><c> might</c><01:11:58.800><c> not</c>

01:11:59.030 --> 01:11:59.040 align:start position:0%
may want to guess why why that might not
 

01:11:59.040 --> 01:11:59.830 align:start position:0%
may want to guess why why that might not
work<01:11:59.360><c> or</c>

01:11:59.830 --> 01:11:59.840 align:start position:0%
work or
 

01:11:59.840 --> 01:12:03.189 align:start position:0%
work or
what<01:12:00.000><c> the</c><01:12:00.159><c> problem</c><01:12:00.400><c> could</c><01:12:00.560><c> be</c><01:12:02.320><c> because</c><01:12:02.640><c> then</c>

01:12:03.189 --> 01:12:03.199 align:start position:0%
what the problem could be because then
 

01:12:03.199 --> 01:12:04.950 align:start position:0%
what the problem could be because then
some<01:12:03.440><c> other</c><01:12:03.760><c> process</c><01:12:04.159><c> might</c><01:12:04.320><c> be</c><01:12:04.480><c> writing</c><01:12:04.880><c> a</c>

01:12:04.950 --> 01:12:04.960 align:start position:0%
some other process might be writing a
 

01:12:04.960 --> 01:12:06.790 align:start position:0%
some other process might be writing a
one<01:12:05.199><c> to</c><01:12:05.360><c> the</c><01:12:05.520><c> log</c><01:12:05.840><c> or</c>

01:12:06.790 --> 01:12:06.800 align:start position:0%
one to the log or
 

01:12:06.800 --> 01:12:09.510 align:start position:0%
one to the log or
no<01:12:07.679><c> or</c><01:12:08.000><c> writing</c><01:12:08.320><c> another</c><01:12:08.719><c> zero</c><01:12:09.120><c> but</c><01:12:09.360><c> that</c>

01:12:09.510 --> 01:12:09.520 align:start position:0%
no or writing another zero but that
 

01:12:09.520 --> 01:12:11.270 align:start position:0%
no or writing another zero but that
can't<01:12:09.760><c> be</c><01:12:09.920><c> the</c><01:12:10.000><c> case</c><01:12:10.239><c> right</c>

01:12:11.270 --> 01:12:11.280 align:start position:0%
can't be the case right
 

01:12:11.280 --> 01:12:12.630 align:start position:0%
can't be the case right
yeah<01:12:11.520><c> well</c><01:12:11.760><c> there</c><01:12:11.920><c> could</c><01:12:12.000><c> be</c><01:12:12.239><c> okay</c><01:12:12.400><c> so</c><01:12:12.560><c> there</c>

01:12:12.630 --> 01:12:12.640 align:start position:0%
yeah well there could be okay so there
 

01:12:12.640 --> 01:12:14.550 align:start position:0%
yeah well there could be okay so there
could<01:12:12.800><c> be</c><01:12:12.960><c> two</c><01:12:13.120><c> processes</c><01:12:13.760><c> or</c><01:12:13.920><c> two</c><01:12:14.080><c> cpus</c>

01:12:14.550 --> 01:12:14.560 align:start position:0%
could be two processes or two cpus
 

01:12:14.560 --> 01:12:16.229 align:start position:0%
could be two processes or two cpus
writing<01:12:14.880><c> to</c><01:12:15.040><c> l</c><01:12:15.199><c> locked</c><01:12:15.520><c> at</c><01:12:15.600><c> the</c><01:12:15.679><c> same</c><01:12:15.920><c> time</c>

01:12:16.229 --> 01:12:16.239 align:start position:0%
writing to l locked at the same time
 

01:12:16.239 --> 01:12:17.270 align:start position:0%
writing to l locked at the same time
right

01:12:17.270 --> 01:12:17.280 align:start position:0%
right
 

01:12:17.280 --> 01:12:19.510 align:start position:0%
right
uh<01:12:17.920><c> but</c><01:12:18.080><c> i</c><01:12:18.159><c> think</c><01:12:18.640><c> what</c><01:12:18.800><c> the</c><01:12:18.960><c> the</c><01:12:19.199><c> question</c>

01:12:19.510 --> 01:12:19.520 align:start position:0%
uh but i think what the the question
 

01:12:19.520 --> 01:12:21.430 align:start position:0%
uh but i think what the the question
really<01:12:19.840><c> is</c><01:12:20.000><c> that</c><01:12:20.320><c> you</c><01:12:20.400><c> know</c><01:12:20.640><c> for</c><01:12:20.800><c> many</c><01:12:21.040><c> people</c>

01:12:21.430 --> 01:12:21.440 align:start position:0%
really is that you know for many people
 

01:12:21.440 --> 01:12:23.350 align:start position:0%
really is that you know for many people
and<01:12:21.840><c> i</c><01:12:22.080><c> often</c><01:12:22.320><c> assume</c><01:12:22.640><c> this</c><01:12:22.800><c> too</c>

01:12:23.350 --> 01:12:23.360 align:start position:0%
and i often assume this too
 

01:12:23.360 --> 01:12:24.870 align:start position:0%
and i often assume this too
is<01:12:23.440><c> that</c><01:12:23.600><c> you</c><01:12:23.840><c> when</c><01:12:24.000><c> you</c><01:12:24.080><c> do</c><01:12:24.239><c> a</c><01:12:24.320><c> single</c><01:12:24.640><c> store</c>

01:12:24.870 --> 01:12:24.880 align:start position:0%
is that you when you do a single store
 

01:12:24.880 --> 01:12:25.990 align:start position:0%
is that you when you do a single store
instruction<01:12:25.280><c> that's</c><01:12:25.520><c> sort</c><01:12:25.679><c> of</c><01:12:25.760><c> like</c><01:12:25.920><c> an</c>

01:12:25.990 --> 01:12:26.000 align:start position:0%
instruction that's sort of like an
 

01:12:26.000 --> 01:12:28.950 align:start position:0%
instruction that's sort of like an
atomic<01:12:26.480><c> operation</c>

01:12:28.950 --> 01:12:28.960 align:start position:0%
atomic operation
 

01:12:28.960 --> 01:12:30.870 align:start position:0%
atomic operation
and<01:12:29.040><c> that</c><01:12:29.280><c> is</c><01:12:29.440><c> not</c><01:12:29.679><c> always</c><01:12:30.000><c> the</c><01:12:30.159><c> case</c><01:12:30.719><c> you</c><01:12:30.800><c> know</c>

01:12:30.870 --> 01:12:30.880 align:start position:0%
and that is not always the case you know
 

01:12:30.880 --> 01:12:32.470 align:start position:0%
and that is not always the case you know
for<01:12:31.040><c> example</c><01:12:31.520><c> if</c><01:12:31.760><c> you</c>

01:12:32.470 --> 01:12:32.480 align:start position:0%
for example if you
 

01:12:32.480 --> 01:12:34.229 align:start position:0%
for example if you
uh<01:12:32.960><c> and</c><01:12:33.120><c> it</c><01:12:33.199><c> really</c><01:12:33.440><c> depends</c><01:12:33.840><c> on</c><01:12:34.080><c> the</c>

01:12:34.229 --> 01:12:34.239 align:start position:0%
uh and it really depends on the
 

01:12:34.239 --> 01:12:35.510 align:start position:0%
uh and it really depends on the
architectural<01:12:34.800><c> implementation</c>

01:12:35.510 --> 01:12:35.520 align:start position:0%
architectural implementation
 

01:12:35.520 --> 01:12:37.350 align:start position:0%
architectural implementation
like<01:12:35.679><c> for</c><01:12:35.840><c> example</c><01:12:36.239><c> if</c><01:12:36.640><c> the</c><01:12:36.800><c> cascadiers</c>

01:12:37.350 --> 01:12:37.360 align:start position:0%
like for example if the cascadiers
 

01:12:37.360 --> 01:12:39.270 align:start position:0%
like for example if the cascadiers
protocol<01:12:37.840><c> works</c><01:12:38.159><c> or</c><01:12:38.320><c> the</c><01:12:38.400><c> cache</c><01:12:38.640><c> system</c><01:12:38.960><c> works</c>

01:12:39.270 --> 01:12:39.280 align:start position:0%
protocol works or the cache system works
 

01:12:39.280 --> 01:12:40.950 align:start position:0%
protocol works or the cache system works
using<01:12:39.520><c> cache</c><01:12:39.840><c> lines</c><01:12:40.080><c> where</c><01:12:40.239><c> a</c><01:12:40.320><c> cache</c><01:12:40.560><c> line</c><01:12:40.719><c> may</c>

01:12:40.950 --> 01:12:40.960 align:start position:0%
using cache lines where a cache line may
 

01:12:40.960 --> 01:12:41.910 align:start position:0%
using cache lines where a cache line may
be

01:12:41.910 --> 01:12:41.920 align:start position:0%
be
 

01:12:41.920 --> 01:12:43.830 align:start position:0%
be
bigger<01:12:42.159><c> than</c><01:12:42.320><c> an</c><01:12:42.480><c> integer</c><01:12:43.199><c> typically</c><01:12:43.600><c> bigger</c>

01:12:43.830 --> 01:12:43.840 align:start position:0%
bigger than an integer typically bigger
 

01:12:43.840 --> 01:12:44.950 align:start position:0%
bigger than an integer typically bigger
than<01:12:44.000><c> the</c><01:12:44.080><c> integer</c>

01:12:44.950 --> 01:12:44.960 align:start position:0%
than the integer
 

01:12:44.960 --> 01:12:47.110 align:start position:0%
than the integer
uh<01:12:45.600><c> then</c><01:12:45.760><c> really</c><01:12:46.000><c> what's</c><01:12:46.320><c> happening</c><01:12:46.640><c> is</c><01:12:46.960><c> the</c>

01:12:47.110 --> 01:12:47.120 align:start position:0%
uh then really what's happening is the
 

01:12:47.120 --> 01:12:48.709 align:start position:0%
uh then really what's happening is the
first<01:12:47.360><c> operation</c><01:12:47.840><c> is</c><01:12:48.000><c> loading</c><01:12:48.400><c> the</c><01:12:48.480><c> cache</c>

01:12:48.709 --> 01:12:48.719 align:start position:0%
first operation is loading the cache
 

01:12:48.719 --> 01:12:50.709 align:start position:0%
first operation is loading the cache
line<01:12:49.040><c> and</c><01:12:49.120><c> then</c><01:12:49.360><c> updating</c><01:12:49.679><c> the</c><01:12:49.840><c> cache</c><01:12:50.159><c> line</c>

01:12:50.709 --> 01:12:50.719 align:start position:0%
line and then updating the cache line
 

01:12:50.719 --> 01:12:52.229 align:start position:0%
line and then updating the cache line
so<01:12:50.880><c> in</c><01:12:50.960><c> fact</c><01:12:51.199><c> you</c><01:12:51.280><c> know</c><01:12:51.440><c> a</c><01:12:51.520><c> store</c><01:12:51.840><c> instruction</c>

01:12:52.229 --> 01:12:52.239 align:start position:0%
so in fact you know a store instruction
 

01:12:52.239 --> 01:12:53.590 align:start position:0%
so in fact you know a store instruction
basically<01:12:52.560><c> has</c><01:12:52.719><c> sort</c><01:12:52.800><c> of</c><01:12:52.880><c> two</c><01:12:53.120><c> micro</c>

01:12:53.590 --> 01:12:53.600 align:start position:0%
basically has sort of two micro
 

01:12:53.600 --> 01:12:54.790 align:start position:0%
basically has sort of two micro
operations<01:12:54.080><c> in</c><01:12:54.239><c> it</c>

01:12:54.790 --> 01:12:54.800 align:start position:0%
operations in it
 

01:12:54.800 --> 01:12:59.590 align:start position:0%
operations in it
and<01:12:55.440><c> and</c><01:12:56.320><c> you</c><01:12:56.400><c> can</c><01:12:56.560><c> get</c><01:12:56.719><c> the</c><01:12:56.800><c> wrong</c><01:12:57.040><c> result</c>

01:12:59.590 --> 01:12:59.600 align:start position:0%
 
 

01:12:59.600 --> 01:13:03.350 align:start position:0%
 
and<01:12:59.679><c> so</c><01:13:00.320><c> uh</c><01:13:01.280><c> you</c><01:13:01.440><c> know</c><01:13:01.600><c> the</c><01:13:02.400><c> to</c><01:13:02.560><c> the</c><01:13:02.719><c> devoid</c><01:13:03.199><c> you</c>

01:13:03.350 --> 01:13:03.360 align:start position:0%
and so uh you know the to the devoid you
 

01:13:03.360 --> 01:13:03.669 align:start position:0%
and so uh you know the to the devoid you
know

01:13:03.669 --> 01:13:03.679 align:start position:0%
know
 

01:13:03.679 --> 01:13:04.950 align:start position:0%
know
having<01:13:03.920><c> to</c><01:13:04.000><c> understand</c><01:13:04.400><c> anything</c><01:13:04.800><c> of</c><01:13:04.880><c> the</c>

01:13:04.950 --> 01:13:04.960 align:start position:0%
having to understand anything of the
 

01:13:04.960 --> 01:13:06.470 align:start position:0%
having to understand anything of the
hardware<01:13:05.280><c> implementation</c><01:13:05.840><c> of</c><01:13:05.920><c> exactly</c><01:13:06.400><c> and</c>

01:13:06.470 --> 01:13:06.480 align:start position:0%
hardware implementation of exactly and
 

01:13:06.480 --> 01:13:08.310 align:start position:0%
hardware implementation of exactly and
whether<01:13:06.880><c> integers</c><01:13:07.280><c> operations</c><01:13:07.760><c> are</c><01:13:07.920><c> atomic</c>

01:13:08.310 --> 01:13:08.320 align:start position:0%
whether integers operations are atomic
 

01:13:08.320 --> 01:13:08.870 align:start position:0%
whether integers operations are atomic
or<01:13:08.400><c> not</c>

01:13:08.870 --> 01:13:08.880 align:start position:0%
or not
 

01:13:08.880 --> 01:13:12.390 align:start position:0%
or not
or<01:13:09.120><c> writing</c><01:13:09.440><c> to</c><01:13:09.679><c> 64-bit</c><01:13:10.719><c> 64</c>

01:13:12.390 --> 01:13:12.400 align:start position:0%
or writing to 64-bit 64
 

01:13:12.400 --> 01:13:14.709 align:start position:0%
or writing to 64-bit 64
bit<01:13:12.880><c> memory</c><01:13:13.199><c> values</c><01:13:13.600><c> and</c><01:13:13.679><c> atomic</c><01:13:14.080><c> operation</c>

01:13:14.709 --> 01:13:14.719 align:start position:0%
bit memory values and atomic operation
 

01:13:14.719 --> 01:13:15.990 align:start position:0%
bit memory values and atomic operation
you<01:13:14.800><c> know</c><01:13:14.960><c> we</c><01:13:15.120><c> use</c><01:13:15.440><c> the</c>

01:13:15.990 --> 01:13:16.000 align:start position:0%
you know we use the
 

01:13:16.000 --> 01:13:19.030 align:start position:0%
you know we use the
uh<01:13:16.960><c> uh</c><01:13:17.679><c> there</c><01:13:17.920><c> is</c><01:13:18.159><c> five</c>

01:13:19.030 --> 01:13:19.040 align:start position:0%
uh uh there is five
 

01:13:19.040 --> 01:13:20.470 align:start position:0%
uh uh there is five
operation<01:13:19.440><c> that</c><01:13:19.679><c> is</c><01:13:19.840><c> guaranteed</c><01:13:20.320><c> to</c><01:13:20.400><c> be</c>

01:13:20.470 --> 01:13:20.480 align:start position:0%
operation that is guaranteed to be
 

01:13:20.480 --> 01:13:24.790 align:start position:0%
operation that is guaranteed to be
executed<01:13:20.960><c> atomically</c>

01:13:24.790 --> 01:13:24.800 align:start position:0%
 
 

01:13:24.800 --> 01:13:28.070 align:start position:0%
 
does<01:13:25.040><c> that</c><01:13:25.199><c> make</c><01:13:25.360><c> sense</c>

01:13:28.070 --> 01:13:28.080 align:start position:0%
 
 

01:13:28.080 --> 01:13:33.110 align:start position:0%
 
yes<01:13:29.280><c> okay</c><01:13:30.239><c> okay</c><01:13:30.480><c> so</c><01:13:30.960><c> just</c><01:13:31.199><c> to</c><01:13:31.760><c> uh</c>

01:13:33.110 --> 01:13:33.120 align:start position:0%
yes okay okay so just to uh
 

01:13:33.120 --> 01:13:36.149 align:start position:0%
yes okay okay so just to uh
just<01:13:33.440><c> for</c><01:13:33.679><c> your</c><01:13:34.000><c> amusement</c><01:13:34.800><c> uh</c><01:13:35.679><c> the</c>

01:13:36.149 --> 01:13:36.159 align:start position:0%
just for your amusement uh the
 

01:13:36.159 --> 01:13:38.070 align:start position:0%
just for your amusement uh the
atomic<01:13:36.560><c> swap</c><01:13:36.800><c> is</c><01:13:36.880><c> not</c><01:13:37.040><c> the</c><01:13:37.199><c> only</c><01:13:37.440><c> instruction</c>

01:13:38.070 --> 01:13:38.080 align:start position:0%
atomic swap is not the only instruction
 

01:13:38.080 --> 01:13:40.229 align:start position:0%
atomic swap is not the only instruction
uh<01:13:38.320><c> that</c><01:13:38.560><c> exists</c><01:13:39.040><c> uh</c><01:13:39.360><c> so</c><01:13:39.520><c> here's</c><01:13:39.760><c> the</c><01:13:40.000><c> risk</c>

01:13:40.229 --> 01:13:40.239 align:start position:0%
uh that exists uh so here's the risk
 

01:13:40.239 --> 01:13:41.430 align:start position:0%
uh that exists uh so here's the risk
five<01:13:40.480><c> manual</c>

01:13:41.430 --> 01:13:41.440 align:start position:0%
five manual
 

01:13:41.440 --> 01:13:43.830 align:start position:0%
five manual
uh<01:13:42.159><c> and</c><01:13:42.560><c> it</c><01:13:42.880><c> lists</c><01:13:43.199><c> a</c><01:13:43.280><c> whole</c><01:13:43.440><c> bunch</c><01:13:43.600><c> of</c><01:13:43.679><c> the</c>

01:13:43.830 --> 01:13:43.840 align:start position:0%
uh and it lists a whole bunch of the
 

01:13:43.840 --> 01:13:45.430 align:start position:0%
uh and it lists a whole bunch of the
atomic<01:13:44.239><c> operations</c><01:13:44.640><c> so</c><01:13:44.800><c> there's</c><01:13:44.960><c> an</c><01:13:45.040><c> atomic</c>

01:13:45.430 --> 01:13:45.440 align:start position:0%
atomic operations so there's an atomic
 

01:13:45.440 --> 01:13:45.750 align:start position:0%
atomic operations so there's an atomic
end

01:13:45.750 --> 01:13:45.760 align:start position:0%
end
 

01:13:45.760 --> 01:13:48.870 align:start position:0%
end
an<01:13:45.920><c> atomic</c><01:13:46.400><c> ore</c><01:13:46.640><c> and</c><01:13:46.719><c> there's</c><01:13:47.040><c> a</c><01:13:47.520><c> max</c><01:13:47.920><c> min</c>

01:13:48.870 --> 01:13:48.880 align:start position:0%
an atomic ore and there's a max min
 

01:13:48.880 --> 01:13:52.630 align:start position:0%
an atomic ore and there's a max min
that<01:13:49.199><c> all</c><01:13:51.120><c> can</c><01:13:51.520><c> read</c><01:13:51.760><c> and</c><01:13:51.840><c> write</c><01:13:52.080><c> a</c><01:13:52.159><c> value</c>

01:13:52.630 --> 01:13:52.640 align:start position:0%
that all can read and write a value
 

01:13:52.640 --> 01:13:58.830 align:start position:0%
that all can read and write a value
in<01:13:52.719><c> an</c><01:13:52.880><c> atomic</c><01:13:53.280><c> operation</c>

01:13:58.830 --> 01:13:58.840 align:start position:0%
 
 

01:13:58.840 --> 01:14:01.270 align:start position:0%
 
okay<01:13:59.920><c> so</c><01:14:00.080><c> there's</c><01:14:00.239><c> a</c><01:14:00.320><c> couple</c><01:14:00.880><c> other</c><01:14:01.040><c> things</c>

01:14:01.270 --> 01:14:01.280 align:start position:0%
okay so there's a couple other things
 

01:14:01.280 --> 01:14:02.310 align:start position:0%
okay so there's a couple other things
that<01:14:01.360><c> i</c><01:14:01.440><c> want</c><01:14:01.520><c> to</c><01:14:01.600><c> point</c><01:14:01.920><c> out</c>

01:14:02.310 --> 01:14:02.320 align:start position:0%
that i want to point out
 

01:14:02.320 --> 01:14:06.390 align:start position:0%
that i want to point out
uh<01:14:02.719><c> in</c><01:14:02.880><c> this</c><01:14:03.040><c> particular</c><01:14:03.440><c> implementation</c><01:14:04.880><c> um</c>

01:14:06.390 --> 01:14:06.400 align:start position:0%
uh in this particular implementation um
 

01:14:06.400 --> 01:14:09.990 align:start position:0%
uh in this particular implementation um
and<01:14:07.600><c> let</c><01:14:07.760><c> me</c><01:14:07.920><c> start</c><01:14:08.239><c> again</c><01:14:08.480><c> and</c><01:14:08.560><c> go</c><01:14:08.719><c> back</c><01:14:09.040><c> to</c>

01:14:09.990 --> 01:14:10.000 align:start position:0%
and let me start again and go back to
 

01:14:10.000 --> 01:14:13.350 align:start position:0%
and let me start again and go back to
acquire<01:14:12.800><c> uh</c><01:14:13.040><c> so</c>

01:14:13.350 --> 01:14:13.360 align:start position:0%
acquire uh so
 

01:14:13.360 --> 01:14:16.149 align:start position:0%
acquire uh so
one<01:14:13.520><c> of</c><01:14:13.600><c> the</c><01:14:13.679><c> first</c><01:14:13.840><c> things</c><01:14:14.159><c> that</c><01:14:14.480><c> the</c><01:14:14.960><c> uh</c>

01:14:16.149 --> 01:14:16.159 align:start position:0%
one of the first things that the uh
 

01:14:16.159 --> 01:14:17.750 align:start position:0%
one of the first things that the uh
acquire<01:14:16.480><c> function</c><01:14:16.800><c> does</c>

01:14:17.750 --> 01:14:17.760 align:start position:0%
acquire function does
 

01:14:17.760 --> 01:14:20.790 align:start position:0%
acquire function does
uh<01:14:18.480><c> is</c><01:14:19.040><c> it</c><01:14:19.360><c> uh</c><01:14:20.159><c> turns</c><01:14:20.480><c> off</c>

01:14:20.790 --> 01:14:20.800 align:start position:0%
uh is it uh turns off
 

01:14:20.800 --> 01:14:24.550 align:start position:0%
uh is it uh turns off
interrupts<01:14:22.880><c> and</c><01:14:23.679><c> it'd</c><01:14:23.840><c> be</c><01:14:24.000><c> good</c><01:14:24.159><c> to</c>

01:14:24.550 --> 01:14:24.560 align:start position:0%
interrupts and it'd be good to
 

01:14:24.560 --> 01:14:26.390 align:start position:0%
interrupts and it'd be good to
understand<01:14:25.040><c> why</c><01:14:25.360><c> that</c><01:14:25.600><c> is</c><01:14:25.679><c> the</c><01:14:25.840><c> case</c><01:14:26.159><c> and</c><01:14:26.239><c> so</c>

01:14:26.390 --> 01:14:26.400 align:start position:0%
understand why that is the case and so
 

01:14:26.400 --> 01:14:28.630 align:start position:0%
understand why that is the case and so
for<01:14:26.560><c> that</c><01:14:26.800><c> i'm</c><01:14:26.960><c> to</c><01:14:27.040><c> go</c><01:14:27.199><c> back</c><01:14:27.360><c> to</c><01:14:27.520><c> our</c><01:14:27.679><c> uart</c><01:14:28.239><c> exam</c>

01:14:28.630 --> 01:14:28.640 align:start position:0%
for that i'm to go back to our uart exam
 

01:14:28.640 --> 01:14:30.870 align:start position:0%
for that i'm to go back to our uart exam
code<01:14:29.760><c> and</c><01:14:29.920><c> you</c><01:14:30.080><c> think</c><01:14:30.239><c> a</c><01:14:30.320><c> little</c><01:14:30.480><c> bit</c><01:14:30.640><c> about</c>

01:14:30.870 --> 01:14:30.880 align:start position:0%
code and you think a little bit about
 

01:14:30.880 --> 01:14:32.149 align:start position:0%
code and you think a little bit about
this

01:14:32.149 --> 01:14:32.159 align:start position:0%
this
 

01:14:32.159 --> 01:14:34.470 align:start position:0%
this
and<01:14:32.320><c> so</c><01:14:32.480><c> we</c><01:14:32.640><c> want</c><01:14:32.800><c> to</c><01:14:33.040><c> think</c><01:14:33.280><c> about</c><01:14:33.440><c> the</c><01:14:33.600><c> case</c>

01:14:34.470 --> 01:14:34.480 align:start position:0%
and so we want to think about the case
 

01:14:34.480 --> 01:14:35.430 align:start position:0%
and so we want to think about the case
where

01:14:35.430 --> 01:14:35.440 align:start position:0%
where
 

01:14:35.440 --> 01:14:38.870 align:start position:0%
where
uh<01:14:37.040><c> a</c><01:14:37.199><c> query</c><01:14:37.520><c> is</c><01:14:37.679><c> actually</c><01:14:38.080><c> maybe</c><01:14:38.400><c> incorrectly</c>

01:14:38.870 --> 01:14:38.880 align:start position:0%
uh a query is actually maybe incorrectly
 

01:14:38.880 --> 01:14:40.709 align:start position:0%
uh a query is actually maybe incorrectly
implemented<01:14:39.280><c> and</c><01:14:39.440><c> does</c><01:14:39.679><c> not</c><01:14:39.840><c> turn</c><01:14:40.080><c> off</c>

01:14:40.709 --> 01:14:40.719 align:start position:0%
implemented and does not turn off
 

01:14:40.719 --> 01:14:43.350 align:start position:0%
implemented and does not turn off
erupts<01:14:41.280><c> so</c><01:14:42.080><c> and</c><01:14:42.560><c> the</c><01:14:42.719><c> way</c><01:14:42.880><c> to</c><01:14:43.040><c> think</c><01:14:43.199><c> about</c>

01:14:43.350 --> 01:14:43.360 align:start position:0%
erupts so and the way to think about
 

01:14:43.360 --> 01:14:44.950 align:start position:0%
erupts so and the way to think about
this<01:14:43.679><c> is</c><01:14:43.840><c> if</c><01:14:43.920><c> we</c><01:14:44.080><c> go</c><01:14:44.239><c> to</c><01:14:44.320><c> europe</c>

01:14:44.950 --> 01:14:44.960 align:start position:0%
this is if we go to europe
 

01:14:44.960 --> 01:14:47.669 align:start position:0%
this is if we go to europe
put<01:14:45.199><c> c</c><01:14:46.080><c> and</c><01:14:46.400><c> here</c><01:14:46.960><c> you</c><01:14:47.040><c> know</c><01:14:47.120><c> let's</c><01:14:47.280><c> say</c><01:14:47.440><c> your</c>

01:14:47.669 --> 01:14:47.679 align:start position:0%
put c and here you know let's say your
 

01:14:47.679 --> 01:14:49.189 align:start position:0%
put c and here you know let's say your
qt<01:14:48.159><c> runs</c>

01:14:49.189 --> 01:14:49.199 align:start position:0%
qt runs
 

01:14:49.199 --> 01:14:53.430 align:start position:0%
qt runs
and<01:14:50.480><c> uh</c><01:14:51.040><c> acquires</c><01:14:51.679><c> the</c><01:14:51.920><c> lock</c>

01:14:53.430 --> 01:14:53.440 align:start position:0%
and uh acquires the lock
 

01:14:53.440 --> 01:14:55.510 align:start position:0%
and uh acquires the lock
and<01:14:53.600><c> but</c><01:14:53.760><c> does</c><01:14:54.080><c> not</c><01:14:54.400><c> turn</c><01:14:54.719><c> off</c><01:14:54.880><c> interrupts</c>

01:14:55.510 --> 01:14:55.520 align:start position:0%
and but does not turn off interrupts
 

01:14:55.520 --> 01:15:02.790 align:start position:0%
and but does not turn off interrupts
what<01:14:55.679><c> can</c><01:14:55.920><c> happen</c>

01:15:02.790 --> 01:15:02.800 align:start position:0%
 
 

01:15:02.800 --> 01:15:04.229 align:start position:0%
 
i'll<01:15:03.040><c> give</c><01:15:03.280><c> everybody</c><01:15:03.520><c> a</c><01:15:03.600><c> couple</c><01:15:03.840><c> seconds</c><01:15:04.159><c> to</c>

01:15:04.229 --> 01:15:04.239 align:start position:0%
i'll give everybody a couple seconds to
 

01:15:04.239 --> 01:15:05.910 align:start position:0%
i'll give everybody a couple seconds to
think<01:15:04.400><c> about</c><01:15:04.640><c> it</c><01:15:05.520><c> but</c>

01:15:05.910 --> 01:15:05.920 align:start position:0%
think about it but
 

01:15:05.920 --> 01:15:07.830 align:start position:0%
think about it but
if<01:15:06.080><c> you</c><01:15:06.239><c> have</c><01:15:06.400><c> an</c><01:15:06.560><c> idea</c><01:15:06.960><c> or</c><01:15:07.199><c> why</c><01:15:07.440><c> it</c><01:15:07.520><c> might</c><01:15:07.679><c> be</c>

01:15:07.830 --> 01:15:07.840 align:start position:0%
if you have an idea or why it might be
 

01:15:07.840 --> 01:15:09.430 align:start position:0%
if you have an idea or why it might be
wrong<01:15:08.080><c> you</c><01:15:08.239><c> know</c><01:15:08.320><c> like</c>

01:15:09.430 --> 01:15:09.440 align:start position:0%
wrong you know like
 

01:15:09.440 --> 01:15:18.709 align:start position:0%
wrong you know like
jump<01:15:09.679><c> in</c>

01:15:18.709 --> 01:15:18.719 align:start position:0%
 
 

01:15:18.719 --> 01:15:22.550 align:start position:0%
 
perhaps<01:15:19.920><c> it</c><01:15:20.080><c> could</c><01:15:20.239><c> be</c><01:15:20.960><c> interrupted</c><01:15:21.520><c> because</c>

01:15:22.550 --> 01:15:22.560 align:start position:0%
perhaps it could be interrupted because
 

01:15:22.560 --> 01:15:25.830 align:start position:0%
perhaps it could be interrupted because
of<01:15:23.199><c> um</c><01:15:24.159><c> because</c><01:15:24.480><c> of</c><01:15:24.560><c> the</c><01:15:24.960><c> clock</c>

01:15:25.830 --> 01:15:25.840 align:start position:0%
of um because of the clock
 

01:15:25.840 --> 01:15:29.030 align:start position:0%
of um because of the clock
and<01:15:26.000><c> then</c><01:15:26.239><c> something</c><01:15:27.360><c> happens</c><01:15:28.400><c> and</c><01:15:28.719><c> it</c><01:15:28.800><c> needs</c>

01:15:29.030 --> 01:15:29.040 align:start position:0%
and then something happens and it needs
 

01:15:29.040 --> 01:15:30.470 align:start position:0%
and then something happens and it needs
to<01:15:29.120><c> print</c><01:15:29.440><c> something</c>

01:15:30.470 --> 01:15:30.480 align:start position:0%
to print something
 

01:15:30.480 --> 01:15:33.830 align:start position:0%
to print something
else<01:15:31.040><c> and</c><01:15:31.199><c> it</c><01:15:31.280><c> tries</c><01:15:31.600><c> to</c><01:15:31.679><c> do</c><01:15:31.920><c> your</c><01:15:32.239><c> put</c><01:15:32.480><c> c</c><01:15:32.800><c> again</c>

01:15:33.830 --> 01:15:33.840 align:start position:0%
else and it tries to do your put c again
 

01:15:33.840 --> 01:15:35.990 align:start position:0%
else and it tries to do your put c again
but<01:15:34.080><c> the</c><01:15:34.239><c> lock</c><01:15:34.480><c> is</c><01:15:34.560><c> already</c><01:15:34.880><c> taken</c><01:15:35.679><c> yeah</c><01:15:35.840><c> that</c>

01:15:35.990 --> 01:15:36.000 align:start position:0%
but the lock is already taken yeah that
 

01:15:36.000 --> 01:15:37.270 align:start position:0%
but the lock is already taken yeah that
might<01:15:36.080><c> be</c><01:15:36.159><c> a</c><01:15:36.239><c> possible</c><01:15:36.640><c> scenario</c>

01:15:37.270 --> 01:15:37.280 align:start position:0%
might be a possible scenario
 

01:15:37.280 --> 01:15:39.669 align:start position:0%
might be a possible scenario
uh<01:15:37.840><c> there's</c><01:15:38.080><c> a</c><01:15:38.159><c> much</c><01:15:38.400><c> more</c><01:15:38.560><c> direct</c><01:15:39.280><c> example</c>

01:15:39.669 --> 01:15:39.679 align:start position:0%
uh there's a much more direct example
 

01:15:39.679 --> 01:15:40.709 align:start position:0%
uh there's a much more direct example
for<01:15:39.840><c> this</c>

01:15:40.709 --> 01:15:40.719 align:start position:0%
for this
 

01:15:40.719 --> 01:15:42.229 align:start position:0%
for this
so<01:15:40.880><c> let's</c><01:15:41.120><c> just</c><01:15:41.199><c> say</c><01:15:41.360><c> you</c><01:15:41.600><c> are</c><01:15:41.679><c> could</c><01:15:41.920><c> see</c><01:15:42.159><c> you</c>

01:15:42.229 --> 01:15:42.239 align:start position:0%
so let's just say you are could see you
 

01:15:42.239 --> 01:15:43.750 align:start position:0%
so let's just say you are could see you
know<01:15:42.400><c> drives</c><01:15:42.800><c> lock</c>

01:15:43.750 --> 01:15:43.760 align:start position:0%
know drives lock
 

01:15:43.760 --> 01:15:45.910 align:start position:0%
know drives lock
and<01:15:44.000><c> the</c><01:15:44.159><c> universe</c><01:15:44.640><c> basically</c><01:15:45.440><c> transmitting</c>

01:15:45.910 --> 01:15:45.920 align:start position:0%
and the universe basically transmitting
 

01:15:45.920 --> 01:15:47.510 align:start position:0%
and the universe basically transmitting
some<01:15:46.080><c> character</c>

01:15:47.510 --> 01:15:47.520 align:start position:0%
some character
 

01:15:47.520 --> 01:15:49.910 align:start position:0%
some character
so<01:15:47.840><c> one</c><01:15:48.080><c> the</c><01:15:48.159><c> urge</c><01:15:48.560><c> is</c><01:15:48.640><c> done</c><01:15:49.040><c> uh</c><01:15:49.360><c> transmitting</c>

01:15:49.910 --> 01:15:49.920 align:start position:0%
so one the urge is done uh transmitting
 

01:15:49.920 --> 01:15:53.270 align:start position:0%
so one the urge is done uh transmitting
character<01:15:50.159><c> what</c><01:15:50.320><c> does</c><01:15:50.480><c> it</c><01:15:50.840><c> do</c>

01:15:53.270 --> 01:15:53.280 align:start position:0%
character what does it do
 

01:15:53.280 --> 01:15:55.990 align:start position:0%
character what does it do
it<01:15:53.360><c> causes</c><01:15:53.760><c> an</c><01:15:53.920><c> interrupt</c><01:15:54.320><c> correct</c><01:15:55.280><c> and</c><01:15:55.760><c> you</c>

01:15:55.990 --> 01:15:56.000 align:start position:0%
it causes an interrupt correct and you
 

01:15:56.000 --> 01:15:57.830 align:start position:0%
it causes an interrupt correct and you
are<01:15:56.159><c> interrupted</c><01:15:56.640><c> runs</c>

01:15:57.830 --> 01:15:57.840 align:start position:0%
are interrupted runs
 

01:15:57.840 --> 01:16:01.110 align:start position:0%
are interrupted runs
and<01:15:57.920><c> what</c><01:15:58.080><c> does</c><01:15:58.239><c> your</c><01:15:58.480><c> interrupt</c><01:15:59.120><c> do</c><01:16:00.640><c> it</c><01:16:00.880><c> grabs</c>

01:16:01.110 --> 01:16:01.120 align:start position:0%
and what does your interrupt do it grabs
 

01:16:01.120 --> 01:16:02.390 align:start position:0%
and what does your interrupt do it grabs
the<01:16:01.280><c> same</c><01:16:01.679><c> lock</c>

01:16:02.390 --> 01:16:02.400 align:start position:0%
the same lock
 

01:16:02.400 --> 01:16:04.550 align:start position:0%
the same lock
you<01:16:02.480><c> know</c><01:16:02.719><c> that</c><01:16:03.040><c> the</c><01:16:03.199><c> pc</c><01:16:03.520><c> is</c><01:16:03.679><c> holding</c><01:16:04.239><c> right</c><01:16:04.400><c> so</c>

01:16:04.550 --> 01:16:04.560 align:start position:0%
you know that the pc is holding right so
 

01:16:04.560 --> 01:16:05.990 align:start position:0%
you know that the pc is holding right so
what<01:16:04.719><c> will</c><01:16:04.880><c> happen</c><01:16:05.199><c> here</c>

01:16:05.990 --> 01:16:06.000 align:start position:0%
what will happen here
 

01:16:06.000 --> 01:16:08.070 align:start position:0%
what will happen here
if<01:16:06.159><c> there's</c><01:16:06.320><c> only</c><01:16:06.560><c> one</c><01:16:06.719><c> cpu</c><01:16:07.520><c> and</c><01:16:07.679><c> so</c><01:16:07.920><c> there's</c>

01:16:08.070 --> 01:16:08.080 align:start position:0%
if there's only one cpu and so there's
 

01:16:08.080 --> 01:16:09.510 align:start position:0%
if there's only one cpu and so there's
no<01:16:08.239><c> other</c><01:16:08.480><c> cpu</c><01:16:08.880><c> where</c><01:16:09.120><c> this</c>

01:16:09.510 --> 01:16:09.520 align:start position:0%
no other cpu where this
 

01:16:09.520 --> 01:16:12.790 align:start position:0%
no other cpu where this
interrupt<01:16:09.840><c> could</c><01:16:10.000><c> be</c><01:16:10.159><c> running</c><01:16:12.320><c> well</c><01:16:12.560><c> we</c><01:16:12.640><c> have</c>

01:16:12.790 --> 01:16:12.800 align:start position:0%
interrupt could be running well we have
 

01:16:12.800 --> 01:16:13.430 align:start position:0%
interrupt could be running well we have
a<01:16:12.880><c> deadlock</c>

01:16:13.430 --> 01:16:13.440 align:start position:0%
a deadlock
 

01:16:13.440 --> 01:16:17.189 align:start position:0%
a deadlock
right<01:16:13.600><c> because</c><01:16:14.480><c> the</c><01:16:15.760><c> current</c><01:16:16.000><c> cpu</c><01:16:16.480><c> is</c><01:16:16.640><c> holding</c>

01:16:17.189 --> 01:16:17.199 align:start position:0%
right because the current cpu is holding
 

01:16:17.199 --> 01:16:19.830 align:start position:0%
right because the current cpu is holding
the<01:16:17.360><c> lock</c><01:16:17.840><c> as</c><01:16:18.080><c> part</c><01:16:18.239><c> of</c><01:16:18.480><c> you</c><01:16:18.719><c> put</c><01:16:18.960><c> see</c><01:16:19.600><c> then</c>

01:16:19.830 --> 01:16:19.840 align:start position:0%
the lock as part of you put see then
 

01:16:19.840 --> 01:16:20.470 align:start position:0%
the lock as part of you put see then
later

01:16:20.470 --> 01:16:20.480 align:start position:0%
later
 

01:16:20.480 --> 01:16:22.550 align:start position:0%
later
the<01:16:20.640><c> interrupt</c><01:16:21.440><c> came</c><01:16:21.679><c> in</c><01:16:22.159><c> and</c><01:16:22.320><c> the</c><01:16:22.400><c> first</c>

01:16:22.550 --> 01:16:22.560 align:start position:0%
the interrupt came in and the first
 

01:16:22.560 --> 01:16:23.590 align:start position:0%
the interrupt came in and the first
thing<01:16:22.800><c> it</c><01:16:22.880><c> tries</c><01:16:23.120><c> to</c><01:16:23.199><c> do</c><01:16:23.280><c> is</c><01:16:23.440><c> actually</c>

01:16:23.590 --> 01:16:23.600 align:start position:0%
thing it tries to do is actually
 

01:16:23.600 --> 01:16:25.590 align:start position:0%
thing it tries to do is actually
acquired<01:16:23.920><c> a</c><01:16:24.000><c> lot</c><01:16:24.159><c> that's</c><01:16:24.400><c> already</c><01:16:24.640><c> held</c>

01:16:25.590 --> 01:16:25.600 align:start position:0%
acquired a lot that's already held
 

01:16:25.600 --> 01:16:27.350 align:start position:0%
acquired a lot that's already held
in<01:16:25.760><c> fact</c><01:16:25.920><c> you</c><01:16:26.000><c> know</c><01:16:26.159><c> in</c><01:16:26.239><c> the</c><01:16:26.400><c> case</c><01:16:26.640><c> of</c><01:16:26.719><c> xv6</c><01:16:27.280><c> you</c>

01:16:27.350 --> 01:16:27.360 align:start position:0%
in fact you know in the case of xv6 you
 

01:16:27.360 --> 01:16:28.950 align:start position:0%
in fact you know in the case of xv6 you
know<01:16:27.520><c> we'll</c><01:16:27.760><c> get</c><01:16:27.920><c> a</c><01:16:28.000><c> panic</c><01:16:28.400><c> you</c><01:16:28.560><c> know</c><01:16:28.719><c> because</c>

01:16:28.950 --> 01:16:28.960 align:start position:0%
know we'll get a panic you know because
 

01:16:28.960 --> 01:16:30.790 align:start position:0%
know we'll get a panic you know because
you<01:16:29.040><c> know</c><01:16:29.199><c> the</c><01:16:29.280><c> same</c><01:16:29.520><c> cpu</c>

01:16:30.790 --> 01:16:30.800 align:start position:0%
you know the same cpu
 

01:16:30.800 --> 01:16:32.149 align:start position:0%
you know the same cpu
is<01:16:30.960><c> actually</c><01:16:31.199><c> trying</c><01:16:31.360><c> to</c><01:16:31.440><c> acquire</c><01:16:31.760><c> the</c><01:16:31.920><c> same</c>

01:16:32.149 --> 01:16:32.159 align:start position:0%
is actually trying to acquire the same
 

01:16:32.159 --> 01:16:37.430 align:start position:0%
is actually trying to acquire the same
lock<01:16:32.840><c> again</c>

01:16:37.430 --> 01:16:37.440 align:start position:0%
 
 

01:16:37.440 --> 01:16:39.830 align:start position:0%
 
so<01:16:38.080><c> basically</c><01:16:38.480><c> you</c><01:16:38.640><c> know</c><01:16:38.800><c> what</c><01:16:39.280><c> acquire</c><01:16:39.679><c> or</c>

01:16:39.830 --> 01:16:39.840 align:start position:0%
so basically you know what acquire or
 

01:16:39.840 --> 01:16:41.510 align:start position:0%
so basically you know what acquire or
spinlock<01:16:40.320><c> deals</c><01:16:40.640><c> with</c><01:16:40.880><c> is</c><01:16:40.960><c> sort</c><01:16:41.120><c> of</c><01:16:41.199><c> two</c>

01:16:41.510 --> 01:16:41.520 align:start position:0%
spinlock deals with is sort of two
 

01:16:41.520 --> 01:16:42.870 align:start position:0%
spinlock deals with is sort of two
different<01:16:41.840><c> types</c><01:16:42.080><c> of</c><01:16:42.159><c> concurrency</c>

01:16:42.870 --> 01:16:42.880 align:start position:0%
different types of concurrency
 

01:16:42.880 --> 01:16:44.229 align:start position:0%
different types of concurrency
you<01:16:42.960><c> know</c><01:16:43.120><c> one</c><01:16:43.360><c> there's</c><01:16:43.520><c> sort</c><01:16:43.679><c> of</c><01:16:43.760><c> concurrency</c>

01:16:44.229 --> 01:16:44.239 align:start position:0%
you know one there's sort of concurrency
 

01:16:44.239 --> 01:16:45.910 align:start position:0%
you know one there's sort of concurrency
between<01:16:44.480><c> two</c><01:16:44.640><c> different</c><01:16:44.880><c> cpus</c>

01:16:45.910 --> 01:16:45.920 align:start position:0%
between two different cpus
 

01:16:45.920 --> 01:16:47.350 align:start position:0%
between two different cpus
we<01:16:46.000><c> got</c><01:16:46.159><c> to</c><01:16:46.239><c> make</c><01:16:46.320><c> sure</c><01:16:46.560><c> that</c><01:16:46.800><c> for</c><01:16:46.880><c> example</c><01:16:47.280><c> if</c>

01:16:47.350 --> 01:16:47.360 align:start position:0%
we got to make sure that for example if
 

01:16:47.360 --> 01:16:49.350 align:start position:0%
we got to make sure that for example if
the<01:16:47.840><c> interrupter</c><01:16:48.480><c> function</c><01:16:48.800><c> runs</c><01:16:49.120><c> on</c><01:16:49.280><c> a</c>

01:16:49.350 --> 01:16:49.360 align:start position:0%
the interrupter function runs on a
 

01:16:49.360 --> 01:16:50.390 align:start position:0%
the interrupter function runs on a
different<01:16:49.679><c> cpu</c>

01:16:50.390 --> 01:16:50.400 align:start position:0%
different cpu
 

01:16:50.400 --> 01:16:51.910 align:start position:0%
different cpu
that<01:16:50.560><c> basically</c><01:16:50.960><c> we</c><01:16:51.120><c> don't</c><01:16:51.280><c> get</c><01:16:51.440><c> a</c><01:16:51.520><c> raise</c><01:16:51.760><c> on</c>

01:16:51.910 --> 01:16:51.920 align:start position:0%
that basically we don't get a raise on
 

01:16:51.920 --> 01:16:53.510 align:start position:0%
that basically we don't get a raise on
the<01:16:52.000><c> transmission</c><01:16:52.480><c> buffer</c>

01:16:53.510 --> 01:16:53.520 align:start position:0%
the transmission buffer
 

01:16:53.520 --> 01:16:55.270 align:start position:0%
the transmission buffer
but<01:16:53.760><c> if</c><01:16:53.840><c> they</c><01:16:54.000><c> run</c><01:16:54.239><c> in</c><01:16:54.320><c> the</c><01:16:54.400><c> same</c><01:16:54.640><c> cpu</c><01:16:55.040><c> we</c><01:16:55.120><c> got</c>

01:16:55.270 --> 01:16:55.280 align:start position:0%
but if they run in the same cpu we got
 

01:16:55.280 --> 01:16:57.189 align:start position:0%
but if they run in the same cpu we got
to<01:16:55.360><c> make</c><01:16:55.440><c> sure</c><01:16:55.600><c> that</c><01:16:55.840><c> it's</c><01:16:56.000><c> still</c><01:16:56.239><c> atomic</c>

01:16:57.189 --> 01:16:57.199 align:start position:0%
to make sure that it's still atomic
 

01:16:57.199 --> 01:16:58.870 align:start position:0%
to make sure that it's still atomic
uh<01:16:57.520><c> and</c><01:16:57.600><c> that</c><01:16:57.840><c> is</c><01:16:57.920><c> not</c><01:16:58.080><c> being</c><01:16:58.320><c> interrupted</c><01:16:58.800><c> and</c>

01:16:58.870 --> 01:16:58.880 align:start position:0%
uh and that is not being interrupted and
 

01:16:58.880 --> 01:17:00.310 align:start position:0%
uh and that is not being interrupted and
therefore<01:16:59.280><c> we</c><01:16:59.440><c> actually</c><01:16:59.679><c> turn</c><01:16:59.920><c> the</c><01:17:00.000><c> yarn</c>

01:17:00.310 --> 01:17:00.320 align:start position:0%
therefore we actually turn the yarn
 

01:17:00.320 --> 01:17:00.870 align:start position:0%
therefore we actually turn the yarn
wraps<01:17:00.560><c> off</c>

01:17:00.870 --> 01:17:00.880 align:start position:0%
wraps off
 

01:17:00.880 --> 01:17:04.390 align:start position:0%
wraps off
in<01:17:01.199><c> the</c><01:17:01.280><c> choir</c><01:17:03.280><c> and</c><01:17:03.440><c> they're</c><01:17:03.679><c> only</c><01:17:04.000><c> turned</c><01:17:04.239><c> on</c>

01:17:04.390 --> 01:17:04.400 align:start position:0%
in the choir and they're only turned on
 

01:17:04.400 --> 01:17:05.110 align:start position:0%
in the choir and they're only turned on
again

01:17:05.110 --> 01:17:05.120 align:start position:0%
again
 

01:17:05.120 --> 01:17:08.229 align:start position:0%
again
at<01:17:05.280><c> the</c><01:17:05.360><c> end</c><01:17:05.600><c> of</c><01:17:05.760><c> release</c><01:17:07.600><c> when</c><01:17:07.840><c> the</c><01:17:08.000><c> lock</c>

01:17:08.229 --> 01:17:08.239 align:start position:0%
at the end of release when the lock
 

01:17:08.239 --> 01:17:09.750 align:start position:0%
at the end of release when the lock
actually<01:17:08.560><c> has</c><01:17:08.800><c> been</c><01:17:08.960><c> released</c><01:17:09.440><c> and</c><01:17:09.520><c> at</c><01:17:09.600><c> that</c>

01:17:09.750 --> 01:17:09.760 align:start position:0%
actually has been released and at that
 

01:17:09.760 --> 01:17:11.350 align:start position:0%
actually has been released and at that
point<01:17:10.000><c> it's</c><01:17:10.159><c> safe</c><01:17:10.480><c> again</c><01:17:10.800><c> you</c><01:17:10.880><c> know</c><01:17:11.040><c> to</c><01:17:11.199><c> take</c>

01:17:11.350 --> 01:17:11.360 align:start position:0%
point it's safe again you know to take
 

01:17:11.360 --> 01:17:12.390 align:start position:0%
point it's safe again you know to take
these<01:17:11.520><c> interrupts</c>

01:17:12.390 --> 01:17:12.400 align:start position:0%
these interrupts
 

01:17:12.400 --> 01:17:14.310 align:start position:0%
these interrupts
because<01:17:12.640><c> the</c><01:17:12.719><c> lock</c><01:17:12.960><c> actually</c><01:17:14.000><c> is</c><01:17:14.080><c> not</c>

01:17:14.310 --> 01:17:14.320 align:start position:0%
because the lock actually is not
 

01:17:14.320 --> 01:17:16.630 align:start position:0%
because the lock actually is not
released<01:17:14.840><c> anymore</c><01:17:15.920><c> it's</c><01:17:16.159><c> not</c><01:17:16.320><c> acquired</c>

01:17:16.630 --> 01:17:16.640 align:start position:0%
released anymore it's not acquired
 

01:17:16.640 --> 01:17:18.950 align:start position:0%
released anymore it's not acquired
holding<01:17:16.960><c> it</c><01:17:17.120><c> not</c><01:17:17.280><c> health</c><01:17:17.600><c> anymore</c>

01:17:18.950 --> 01:17:18.960 align:start position:0%
holding it not health anymore
 

01:17:18.960 --> 01:17:28.470 align:start position:0%
holding it not health anymore
does<01:17:19.120><c> that</c><01:17:19.280><c> make</c><01:17:19.440><c> sense</c>

01:17:28.470 --> 01:17:28.480 align:start position:0%
 
 

01:17:28.480 --> 01:17:31.430 align:start position:0%
 
okay<01:17:28.800><c> there's</c><01:17:29.040><c> one</c><01:17:29.280><c> more</c><01:17:29.920><c> subtle</c><01:17:30.239><c> thing</c><01:17:30.560><c> in</c>

01:17:31.430 --> 01:17:31.440 align:start position:0%
okay there's one more subtle thing in
 

01:17:31.440 --> 01:17:32.070 align:start position:0%
okay there's one more subtle thing in
this

01:17:32.070 --> 01:17:32.080 align:start position:0%
this
 

01:17:32.080 --> 01:17:35.590 align:start position:0%
this
implementation<01:17:32.640><c> that</c><01:17:32.800><c> i</c><01:17:32.960><c> want</c><01:17:33.120><c> to</c><01:17:33.199><c> talk</c><01:17:33.440><c> about</c>

01:17:35.590 --> 01:17:35.600 align:start position:0%
implementation that i want to talk about
 

01:17:35.600 --> 01:17:43.110 align:start position:0%
implementation that i want to talk about
and<01:17:37.840><c> that</c><01:17:38.000><c> we</c><01:17:38.159><c> need</c><01:17:38.320><c> to</c><01:17:38.400><c> deal</c><01:17:38.640><c> with</c>

01:17:43.110 --> 01:17:43.120 align:start position:0%
 
 

01:17:43.120 --> 01:17:53.830 align:start position:0%
 
and<01:17:43.280><c> that</c><01:17:43.600><c> is</c><01:17:43.920><c> uh</c><01:17:45.280><c> memory</c><01:17:45.600><c> ordering</c>

01:17:53.830 --> 01:17:53.840 align:start position:0%
 
 

01:17:53.840 --> 01:17:56.870 align:start position:0%
 
so<01:17:54.239><c> uh</c><01:17:55.199><c> for</c><01:17:55.440><c> example</c><01:17:55.920><c> if</c><01:17:56.000><c> you</c><01:17:56.080><c> think</c><01:17:56.239><c> about</c><01:17:56.719><c> you</c>

01:17:56.870 --> 01:17:56.880 align:start position:0%
so uh for example if you think about you
 

01:17:56.880 --> 01:17:57.510 align:start position:0%
so uh for example if you think about you
know<01:17:57.120><c> locked</c>

01:17:57.510 --> 01:17:57.520 align:start position:0%
know locked
 

01:17:57.520 --> 01:18:00.709 align:start position:0%
know locked
is<01:17:57.840><c> let's</c><01:17:58.000><c> say</c><01:17:59.360><c> acquires</c><01:18:00.000><c> it's</c><01:18:00.159><c> locked</c><01:18:00.560><c> you</c>

01:18:00.709 --> 01:18:00.719 align:start position:0%
is let's say acquires it's locked you
 

01:18:00.719 --> 01:18:00.950 align:start position:0%
is let's say acquires it's locked you
know

01:18:00.950 --> 01:18:00.960 align:start position:0%
know
 

01:18:00.960 --> 01:18:03.830 align:start position:0%
know
to<01:18:01.280><c> one</c><01:18:02.320><c> uh</c><01:18:02.800><c> maybe</c><01:18:03.120><c> we</c><01:18:03.280><c> have</c><01:18:03.440><c> a</c><01:18:03.520><c> critical</c>

01:18:03.830 --> 01:18:03.840 align:start position:0%
to one uh maybe we have a critical
 

01:18:03.840 --> 01:18:05.750 align:start position:0%
to one uh maybe we have a critical
section<01:18:04.239><c> in</c><01:18:04.320><c> which</c><01:18:04.560><c> you</c><01:18:04.719><c> know</c><01:18:04.880><c> x</c><01:18:05.040><c> is</c><01:18:05.120><c> except</c><01:18:05.520><c> x</c>

01:18:05.750 --> 01:18:05.760 align:start position:0%
section in which you know x is except x
 

01:18:05.760 --> 01:18:06.950 align:start position:0%
section in which you know x is except x
plus<01:18:06.080><c> one</c>

01:18:06.950 --> 01:18:06.960 align:start position:0%
plus one
 

01:18:06.960 --> 01:18:10.950 align:start position:0%
plus one
and<01:18:07.840><c> uh</c><01:18:08.880><c> and</c><01:18:09.040><c> then</c><01:18:09.520><c> require</c>

01:18:10.950 --> 01:18:10.960 align:start position:0%
and uh and then require
 

01:18:10.960 --> 01:18:13.430 align:start position:0%
and uh and then require
release<01:18:11.440><c> you</c><01:18:11.520><c> know</c><01:18:11.679><c> says</c><01:18:11.840><c> lock</c><01:18:12.080><c> to</c><01:18:12.239><c> zero</c><01:18:13.120><c> so</c>

01:18:13.430 --> 01:18:13.440 align:start position:0%
release you know says lock to zero so
 

01:18:13.440 --> 01:18:14.870 align:start position:0%
release you know says lock to zero so
you<01:18:13.760><c> sort</c><01:18:13.840><c> of</c><01:18:13.920><c> think</c><01:18:14.080><c> about</c><01:18:14.320><c> the</c><01:18:14.400><c> instruction</c>

01:18:14.870 --> 01:18:14.880 align:start position:0%
you sort of think about the instruction
 

01:18:14.880 --> 01:18:16.390 align:start position:0%
you sort of think about the instruction
stream<01:18:15.199><c> that's</c><01:18:15.440><c> being</c><01:18:15.679><c> executed</c><01:18:16.159><c> on</c><01:18:16.320><c> a</c>

01:18:16.390 --> 01:18:16.400 align:start position:0%
stream that's being executed on a
 

01:18:16.400 --> 01:18:17.510 align:start position:0%
stream that's being executed on a
particular<01:18:16.719><c> cpu</c>

01:18:17.510 --> 01:18:17.520 align:start position:0%
particular cpu
 

01:18:17.520 --> 01:18:18.470 align:start position:0%
particular cpu
you<01:18:17.600><c> know</c><01:18:17.760><c> so</c><01:18:17.920><c> these</c><01:18:18.159><c> are</c><01:18:18.239><c> sort</c><01:18:18.320><c> of</c><01:18:18.400><c> the</c>

01:18:18.470 --> 01:18:18.480 align:start position:0%
you know so these are sort of the
 

01:18:18.480 --> 01:18:19.910 align:start position:0%
you know so these are sort of the
instructions<01:18:18.880><c> that</c><01:18:18.960><c> are</c><01:18:19.040><c> being</c><01:18:19.280><c> executed</c>

01:18:19.910 --> 01:18:19.920 align:start position:0%
instructions that are being executed
 

01:18:19.920 --> 01:18:22.149 align:start position:0%
instructions that are being executed
right

01:18:22.149 --> 01:18:22.159 align:start position:0%
 
 

01:18:22.159 --> 01:18:24.870 align:start position:0%
 
now<01:18:22.560><c> if</c><01:18:22.880><c> the</c><01:18:23.040><c> code</c><01:18:23.280><c> were</c><01:18:23.520><c> just</c><01:18:23.760><c> purely</c><01:18:24.560><c> uh</c>

01:18:24.870 --> 01:18:24.880 align:start position:0%
now if the code were just purely uh
 

01:18:24.880 --> 01:18:27.080 align:start position:0%
now if the code were just purely uh
sequential

01:18:27.080 --> 01:18:27.090 align:start position:0%
sequential
 

01:18:27.090 --> 01:18:30.470 align:start position:0%
sequential
[Music]

01:18:30.470 --> 01:18:30.480 align:start position:0%
[Music]
 

01:18:30.480 --> 01:18:34.070 align:start position:0%
[Music]
the<01:18:30.640><c> compiler</c><01:18:31.199><c> or</c><01:18:31.440><c> the</c>

01:18:34.070 --> 01:18:34.080 align:start position:0%
 
 

01:18:34.080 --> 01:18:35.990 align:start position:0%
 
processor<01:18:34.960><c> could</c><01:18:35.199><c> actually</c><01:18:35.440><c> or</c><01:18:35.600><c> reorder</c>

01:18:35.990 --> 01:18:36.000 align:start position:0%
processor could actually or reorder
 

01:18:36.000 --> 01:18:37.590 align:start position:0%
processor could actually or reorder
instructions<01:18:36.560><c> you</c><01:18:36.719><c> know</c><01:18:36.960><c> just</c><01:18:37.120><c> to</c><01:18:37.199><c> get</c><01:18:37.360><c> better</c>

01:18:37.590 --> 01:18:37.600 align:start position:0%
instructions you know just to get better
 

01:18:37.600 --> 01:18:39.350 align:start position:0%
instructions you know just to get better
performance

01:18:39.350 --> 01:18:39.360 align:start position:0%
performance
 

01:18:39.360 --> 01:18:42.149 align:start position:0%
performance
so<01:18:39.520><c> for</c><01:18:39.679><c> example</c><01:18:40.640><c> uh</c><01:18:41.360><c> if</c><01:18:41.760><c> it</c><01:18:41.920><c> were</c><01:18:42.080><c> a</c>

01:18:42.149 --> 01:18:42.159 align:start position:0%
so for example uh if it were a
 

01:18:42.159 --> 01:18:43.110 align:start position:0%
so for example uh if it were a
sequential<01:18:42.640><c> stream</c>

01:18:43.110 --> 01:18:43.120 align:start position:0%
sequential stream
 

01:18:43.120 --> 01:18:44.550 align:start position:0%
sequential stream
would<01:18:43.280><c> it</c><01:18:43.360><c> be</c><01:18:43.520><c> okay</c><01:18:43.920><c> to</c><01:18:44.159><c> move</c><01:18:44.400><c> this</c>

01:18:44.550 --> 01:18:44.560 align:start position:0%
would it be okay to move this
 

01:18:44.560 --> 01:18:49.189 align:start position:0%
would it be okay to move this
instruction<01:18:45.199><c> to</c><01:18:45.440><c> afterwards</c>

01:18:49.189 --> 01:18:49.199 align:start position:0%
 
 

01:18:49.199 --> 01:18:51.590 align:start position:0%
 
would<01:18:49.360><c> that</c><01:18:49.600><c> change</c><01:18:50.000><c> the</c><01:18:50.239><c> correctness</c><01:18:51.120><c> of</c><01:18:51.360><c> the</c>

01:18:51.590 --> 01:18:51.600 align:start position:0%
would that change the correctness of the
 

01:18:51.600 --> 01:18:58.070 align:start position:0%
would that change the correctness of the
single<01:18:51.840><c> stream</c><01:18:52.159><c> of</c><01:18:52.840><c> execution</c>

01:18:58.070 --> 01:18:58.080 align:start position:0%
 
 

01:18:58.080 --> 01:18:59.830 align:start position:0%
 
no<01:18:58.320><c> not</c><01:18:58.480><c> really</c><01:18:58.800><c> right</c><01:18:59.040><c> because</c><01:18:59.280><c> lock</c><01:18:59.520><c> and</c><01:18:59.679><c> x</c>

01:18:59.830 --> 01:18:59.840 align:start position:0%
no not really right because lock and x
 

01:18:59.840 --> 01:19:01.110 align:start position:0%
no not really right because lock and x
are<01:18:59.920><c> totally</c><01:19:00.159><c> independent</c><01:19:00.560><c> of</c><01:19:00.719><c> each</c><01:19:00.880><c> other</c>

01:19:01.110 --> 01:19:01.120 align:start position:0%
are totally independent of each other
 

01:19:01.120 --> 01:19:03.189 align:start position:0%
are totally independent of each other
there's<01:19:01.360><c> no</c><01:19:02.239><c> relation</c><01:19:02.560><c> to</c><01:19:02.719><c> it</c><01:19:02.800><c> so</c><01:19:02.960><c> it'd</c><01:19:03.040><c> be</c>

01:19:03.189 --> 01:19:03.199 align:start position:0%
there's no relation to it so it'd be
 

01:19:03.199 --> 01:19:05.030 align:start position:0%
there's no relation to it so it'd be
perfectly<01:19:03.600><c> fine</c><01:19:03.920><c> if</c><01:19:04.080><c> it</c><01:19:04.159><c> were</c><01:19:04.400><c> a</c><01:19:04.480><c> sequential</c>

01:19:05.030 --> 01:19:05.040 align:start position:0%
perfectly fine if it were a sequential
 

01:19:05.040 --> 01:19:05.990 align:start position:0%
perfectly fine if it were a sequential
execution

01:19:05.990 --> 01:19:06.000 align:start position:0%
execution
 

01:19:06.000 --> 01:19:07.910 align:start position:0%
execution
that<01:19:06.239><c> the</c><01:19:06.480><c> x</c><01:19:06.640><c> you</c><01:19:06.800><c> know</c><01:19:06.960><c> has</c><01:19:07.120><c> moved</c><01:19:07.360><c> after</c><01:19:07.679><c> the</c>

01:19:07.910 --> 01:19:07.920 align:start position:0%
that the x you know has moved after the
 

01:19:07.920 --> 01:19:09.270 align:start position:0%
that the x you know has moved after the
locked<01:19:08.400><c> uh</c>

01:19:09.270 --> 01:19:09.280 align:start position:0%
locked uh
 

01:19:09.280 --> 01:19:14.310 align:start position:0%
locked uh
log<01:19:09.600><c> zero</c><01:19:10.880><c> so</c><01:19:11.120><c> that</c><01:19:11.360><c> you</c><01:19:11.440><c> know</c><01:19:11.600><c> on</c><01:19:11.760><c> the</c><01:19:11.840><c> single</c>

01:19:14.310 --> 01:19:14.320 align:start position:0%
 
 

01:19:14.320 --> 01:19:17.990 align:start position:0%
 
single<01:19:14.719><c> serial</c><01:19:15.120><c> execution</c>

01:19:17.990 --> 01:19:18.000 align:start position:0%
 
 

01:19:18.000 --> 01:19:23.430 align:start position:0%
 
that's<01:19:20.840><c> okay</c>

01:19:23.430 --> 01:19:23.440 align:start position:0%
that's okay
 

01:19:23.440 --> 01:19:25.590 align:start position:0%
that's okay
and<01:19:23.760><c> in</c><01:19:23.840><c> fact</c><01:19:24.000><c> so</c><01:19:24.320><c> in</c><01:19:24.640><c> effect</c><01:19:24.960><c> processors</c><01:19:25.520><c> you</c>

01:19:25.590 --> 01:19:25.600 align:start position:0%
and in fact so in effect processors you
 

01:19:25.600 --> 01:19:27.030 align:start position:0%
and in fact so in effect processors you
know<01:19:25.679><c> do</c><01:19:25.840><c> this</c><01:19:26.080><c> all</c><01:19:26.159><c> the</c><01:19:26.320><c> time</c><01:19:26.640><c> you</c><01:19:26.719><c> know</c><01:19:26.880><c> they</c>

01:19:27.030 --> 01:19:27.040 align:start position:0%
know do this all the time you know they
 

01:19:27.040 --> 01:19:29.030 align:start position:0%
know do this all the time you know they
do<01:19:27.199><c> respectively</c><01:19:27.840><c> execute</c><01:19:28.320><c> stuff</c>

01:19:29.030 --> 01:19:29.040 align:start position:0%
do respectively execute stuff
 

01:19:29.040 --> 01:19:31.030 align:start position:0%
do respectively execute stuff
uh<01:19:29.280><c> or</c><01:19:29.679><c> especially</c><01:19:30.080><c> execute</c><01:19:30.480><c> instructions</c>

01:19:31.030 --> 01:19:31.040 align:start position:0%
uh or especially execute instructions
 

01:19:31.040 --> 01:19:32.630 align:start position:0%
uh or especially execute instructions
and<01:19:31.199><c> so</c><01:19:31.440><c> that</c><01:19:31.600><c> can</c><01:19:31.840><c> result</c><01:19:32.239><c> in</c><01:19:32.320><c> basically</c>

01:19:32.630 --> 01:19:32.640 align:start position:0%
and so that can result in basically
 

01:19:32.640 --> 01:19:34.709 align:start position:0%
and so that can result in basically
these<01:19:32.880><c> instructions</c><01:19:33.440><c> reorderings</c>

01:19:34.709 --> 01:19:34.719 align:start position:0%
these instructions reorderings
 

01:19:34.719 --> 01:19:37.510 align:start position:0%
these instructions reorderings
uh<01:19:35.360><c> the</c><01:19:36.080><c> compiler</c><01:19:36.560><c> does</c><01:19:36.719><c> it</c><01:19:36.880><c> too</c><01:19:37.120><c> you</c><01:19:37.199><c> know</c><01:19:37.360><c> to</c>

01:19:37.510 --> 01:19:37.520 align:start position:0%
uh the compiler does it too you know to
 

01:19:37.520 --> 01:19:39.189 align:start position:0%
uh the compiler does it too you know to
maybe<01:19:37.840><c> optimize</c><01:19:38.320><c> you</c><01:19:38.400><c> know</c><01:19:38.480><c> some</c><01:19:38.640><c> code</c><01:19:38.880><c> path</c>

01:19:39.189 --> 01:19:39.199 align:start position:0%
maybe optimize you know some code path
 

01:19:39.199 --> 01:19:40.790 align:start position:0%
maybe optimize you know some code path
and<01:19:39.280><c> it</c><01:19:39.360><c> also</c><01:19:39.600><c> will</c><01:19:39.760><c> reorder</c><01:19:40.159><c> instructions</c><01:19:40.640><c> as</c>

01:19:40.790 --> 01:19:40.800 align:start position:0%
and it also will reorder instructions as
 

01:19:40.800 --> 01:19:41.910 align:start position:0%
and it also will reorder instructions as
long<01:19:41.040><c> as</c><01:19:41.280><c> it</c><01:19:41.360><c> like</c><01:19:41.520><c> you</c><01:19:41.600><c> know</c>

01:19:41.910 --> 01:19:41.920 align:start position:0%
long as it like you know
 

01:19:41.920 --> 01:19:44.790 align:start position:0%
long as it like you know
results<01:19:42.320><c> in</c><01:19:42.400><c> the</c><01:19:42.480><c> same</c><01:19:42.719><c> serial</c><01:19:43.120><c> execution</c><01:19:44.640><c> but</c>

01:19:44.790 --> 01:19:44.800 align:start position:0%
results in the same serial execution but
 

01:19:44.800 --> 01:19:46.470 align:start position:0%
results in the same serial execution but
clearly<01:19:45.199><c> during</c><01:19:45.440><c> concurrent</c><01:19:45.920><c> execution</c><01:19:46.320><c> this</c>

01:19:46.470 --> 01:19:46.480 align:start position:0%
clearly during concurrent execution this
 

01:19:46.480 --> 01:19:48.390 align:start position:0%
clearly during concurrent execution this
would<01:19:46.560><c> be</c><01:19:46.719><c> disaster</c><01:19:47.280><c> correct</c><01:19:47.600><c> because</c><01:19:47.920><c> if</c>

01:19:48.390 --> 01:19:48.400 align:start position:0%
would be disaster correct because if
 

01:19:48.400 --> 01:19:52.229 align:start position:0%
would be disaster correct because if
locked<01:19:48.719><c> which</c><01:19:48.960><c> a</c><01:19:49.040><c> require</c><01:19:51.360><c> and</c><01:19:51.679><c> this</c><01:19:51.920><c> was</c><01:19:52.080><c> our</c>

01:19:52.229 --> 01:19:52.239 align:start position:0%
locked which a require and this was our
 

01:19:52.239 --> 01:19:54.070 align:start position:0%
locked which a require and this was our
release

01:19:54.070 --> 01:19:54.080 align:start position:0%
release
 

01:19:54.080 --> 01:19:55.510 align:start position:0%
release
then<01:19:54.239><c> basically</c><01:19:54.560><c> what</c><01:19:54.719><c> we've</c><01:19:54.880><c> done</c><01:19:55.120><c> we</c><01:19:55.280><c> moved</c>

01:19:55.510 --> 01:19:55.520 align:start position:0%
then basically what we've done we moved
 

01:19:55.520 --> 01:19:57.750 align:start position:0%
then basically what we've done we moved
to<01:19:55.679><c> the</c><01:19:55.760><c> critical</c><01:19:56.080><c> section</c><01:19:56.560><c> outside</c><01:19:57.120><c> of</c><01:19:57.280><c> the</c>

01:19:57.750 --> 01:19:57.760 align:start position:0%
to the critical section outside of the
 

01:19:57.760 --> 01:19:59.990 align:start position:0%
to the critical section outside of the
the<01:19:58.159><c> the</c><01:19:58.800><c> acquiring</c><01:19:59.280><c> release</c><01:19:59.520><c> and</c><01:19:59.600><c> then</c><01:19:59.760><c> be</c>

01:19:59.990 --> 01:20:00.000 align:start position:0%
the the acquiring release and then be
 

01:20:00.000 --> 01:20:01.510 align:start position:0%
the the acquiring release and then be
totally<01:20:00.320><c> incorrect</c>

01:20:01.510 --> 01:20:01.520 align:start position:0%
totally incorrect
 

01:20:01.520 --> 01:20:04.709 align:start position:0%
totally incorrect
so<01:20:01.679><c> that's</c><01:20:02.840><c> wrong</c><01:20:04.159><c> wrong</c>

01:20:04.709 --> 01:20:04.719 align:start position:0%
so that's wrong wrong
 

01:20:04.719 --> 01:20:12.709 align:start position:0%
so that's wrong wrong
in<01:20:04.800><c> a</c><01:20:04.880><c> concurrent</c><01:20:05.360><c> execution</c>

01:20:12.709 --> 01:20:12.719 align:start position:0%
 
 

01:20:12.719 --> 01:20:15.189 align:start position:0%
 
and<01:20:12.800><c> so</c><01:20:13.120><c> you</c><01:20:13.199><c> know</c><01:20:13.360><c> to</c><01:20:14.159><c> forbid</c><01:20:14.719><c> or</c><01:20:14.880><c> tell</c><01:20:15.040><c> the</c>

01:20:15.189 --> 01:20:15.199 align:start position:0%
and so you know to forbid or tell the
 

01:20:15.199 --> 01:20:16.629 align:start position:0%
and so you know to forbid or tell the
compiler<01:20:15.520><c> in</c><01:20:15.600><c> the</c><01:20:15.679><c> hardware</c><01:20:16.159><c> not</c>

01:20:16.629 --> 01:20:16.639 align:start position:0%
compiler in the hardware not
 

01:20:16.639 --> 01:20:19.510 align:start position:0%
compiler in the hardware not
you<01:20:16.719><c> know</c><01:20:16.880><c> to</c><01:20:17.040><c> do</c><01:20:17.199><c> this</c><01:20:17.920><c> uh</c><01:20:18.719><c> there's</c><01:20:19.280><c> something</c>

01:20:19.510 --> 01:20:19.520 align:start position:0%
you know to do this uh there's something
 

01:20:19.520 --> 01:20:20.149 align:start position:0%
you know to do this uh there's something
what's<01:20:19.760><c> called</c>

01:20:20.149 --> 01:20:20.159 align:start position:0%
what's called
 

01:20:20.159 --> 01:20:22.229 align:start position:0%
what's called
a<01:20:20.639><c> memory</c><01:20:21.280><c> fence</c><01:20:21.679><c> or</c><01:20:21.840><c> something</c><01:20:22.080><c> kind</c><01:20:22.159><c> of</c>

01:20:22.229 --> 01:20:22.239 align:start position:0%
a memory fence or something kind of
 

01:20:22.239 --> 01:20:23.270 align:start position:0%
a memory fence or something kind of
synchronized

01:20:23.270 --> 01:20:23.280 align:start position:0%
synchronized
 

01:20:23.280 --> 01:20:24.550 align:start position:0%
synchronized
uh<01:20:23.520><c> there's</c><01:20:23.679><c> an</c><01:20:23.760><c> instruction</c><01:20:24.159><c> that</c><01:20:24.239><c> basically</c>

01:20:24.550 --> 01:20:24.560 align:start position:0%
uh there's an instruction that basically
 

01:20:24.560 --> 01:20:26.870 align:start position:0%
uh there's an instruction that basically
says<01:20:24.880><c> like</c><01:20:25.120><c> any</c><01:20:25.840><c> loads</c><01:20:26.080><c> of</c><01:20:26.159><c> storage</c><01:20:26.560><c> before</c>

01:20:26.870 --> 01:20:26.880 align:start position:0%
says like any loads of storage before
 

01:20:26.880 --> 01:20:27.910 align:start position:0%
says like any loads of storage before
this<01:20:27.120><c> point</c>

01:20:27.910 --> 01:20:27.920 align:start position:0%
this point
 

01:20:27.920 --> 01:20:30.070 align:start position:0%
this point
you're<01:20:28.320><c> not</c><01:20:28.800><c> allowed</c><01:20:29.120><c> to</c><01:20:29.199><c> move</c><01:20:29.520><c> beyond</c><01:20:29.840><c> this</c>

01:20:30.070 --> 01:20:30.080 align:start position:0%
you're not allowed to move beyond this
 

01:20:30.080 --> 01:20:31.270 align:start position:0%
you're not allowed to move beyond this
point

01:20:31.270 --> 01:20:31.280 align:start position:0%
point
 

01:20:31.280 --> 01:20:34.229 align:start position:0%
point
and<01:20:31.440><c> so</c><01:20:31.679><c> release</c><01:20:32.080><c> has</c><01:20:32.320><c> this</c><01:20:32.719><c> and</c><01:20:33.199><c> uh</c><01:20:33.760><c> acquiring</c>

01:20:34.229 --> 01:20:34.239 align:start position:0%
and so release has this and uh acquiring
 

01:20:34.239 --> 01:20:35.030 align:start position:0%
and so release has this and uh acquiring
has<01:20:34.480><c> this</c>

01:20:35.030 --> 01:20:35.040 align:start position:0%
has this
 

01:20:35.040 --> 01:20:36.870 align:start position:0%
has this
and<01:20:35.199><c> so</c><01:20:35.360><c> for</c><01:20:35.520><c> example</c><01:20:35.840><c> this</c><01:20:36.080><c> x</c><01:20:36.239><c> plus</c><01:20:36.480><c> x</c><01:20:36.639><c> plus</c>

01:20:36.870 --> 01:20:36.880 align:start position:0%
and so for example this x plus x plus
 

01:20:36.880 --> 01:20:38.310 align:start position:0%
and so for example this x plus x plus
one<01:20:37.280><c> if</c><01:20:37.440><c> that</c><01:20:37.600><c> was</c>

01:20:38.310 --> 01:20:38.320 align:start position:0%
one if that was
 

01:20:38.320 --> 01:20:41.110 align:start position:0%
one if that was
uh<01:20:38.719><c> uh</c><01:20:39.120><c> updated</c><01:20:39.920><c> after</c><01:20:40.239><c> the</c><01:20:40.400><c> choir</c><01:20:40.800><c> and</c><01:20:40.880><c> before</c>

01:20:41.110 --> 01:20:41.120 align:start position:0%
uh uh updated after the choir and before
 

01:20:41.120 --> 01:20:41.750 align:start position:0%
uh uh updated after the choir and before
the<01:20:41.280><c> release</c>

01:20:41.750 --> 01:20:41.760 align:start position:0%
the release
 

01:20:41.760 --> 01:20:43.910 align:start position:0%
the release
that<01:20:42.000><c> x</c><01:20:42.159><c> plus</c><01:20:42.480><c> x</c><01:20:42.639><c> plus</c><01:20:42.800><c> one</c><01:20:43.199><c> has</c><01:20:43.440><c> to</c><01:20:43.600><c> stay</c>

01:20:43.910 --> 01:20:43.920 align:start position:0%
that x plus x plus one has to stay
 

01:20:43.920 --> 01:20:45.830 align:start position:0%
that x plus x plus one has to stay
before<01:20:44.719><c> you</c><01:20:44.880><c> know</c><01:20:45.040><c> this</c><01:20:45.199><c> particular</c><01:20:45.600><c> memory</c>

01:20:45.830 --> 01:20:45.840 align:start position:0%
before you know this particular memory
 

01:20:45.840 --> 01:20:47.430 align:start position:0%
before you know this particular memory
synchronization<01:20:46.480><c> point</c>

01:20:47.430 --> 01:20:47.440 align:start position:0%
synchronization point
 

01:20:47.440 --> 01:20:49.590 align:start position:0%
synchronization point
and<01:20:47.600><c> so</c><01:20:48.000><c> it</c><01:20:48.159><c> will</c><01:20:48.400><c> not</c><01:20:48.639><c> be</c><01:20:48.880><c> there</c><01:20:49.040><c> will</c><01:20:49.199><c> be</c><01:20:49.360><c> no</c>

01:20:49.590 --> 01:20:49.600 align:start position:0%
and so it will not be there will be no
 

01:20:49.600 --> 01:20:50.870 align:start position:0%
and so it will not be there will be no
trouble<01:20:50.320><c> uh</c>

01:20:50.870 --> 01:20:50.880 align:start position:0%
trouble uh
 

01:20:50.880 --> 01:20:53.590 align:start position:0%
trouble uh
with<01:20:51.280><c> uh</c><01:20:51.840><c> memory</c><01:20:52.159><c> ordering</c><01:20:52.960><c> so</c><01:20:53.120><c> this</c><01:20:53.360><c> is</c><01:20:53.440><c> the</c>

01:20:53.590 --> 01:20:53.600 align:start position:0%
with uh memory ordering so this is the
 

01:20:53.600 --> 01:20:54.149 align:start position:0%
with uh memory ordering so this is the
reason

01:20:54.149 --> 01:20:54.159 align:start position:0%
reason
 

01:20:54.159 --> 01:20:56.790 align:start position:0%
reason
why<01:20:54.480><c> sync</c><01:20:54.719><c> synchronizes</c><01:20:55.360><c> there</c><01:20:56.000><c> uh</c><01:20:56.239><c> both</c><01:20:56.639><c> in</c>

01:20:56.790 --> 01:20:56.800 align:start position:0%
why sync synchronizes there uh both in
 

01:20:56.800 --> 01:20:57.270 align:start position:0%
why sync synchronizes there uh both in
the

01:20:57.270 --> 01:20:57.280 align:start position:0%
the
 

01:20:57.280 --> 01:20:58.950 align:start position:0%
the
release<01:20:57.760><c> and</c><01:20:57.920><c> also</c><01:20:58.239><c> there's</c><01:20:58.480><c> one</c><01:20:58.719><c> in</c><01:20:58.880><c> the</c>

01:20:58.950 --> 01:20:58.960 align:start position:0%
release and also there's one in the
 

01:20:58.960 --> 01:21:03.350 align:start position:0%
release and also there's one in the
acquire

01:21:03.350 --> 01:21:03.360 align:start position:0%
 
 

01:21:03.360 --> 01:21:06.390 align:start position:0%
 
does<01:21:03.520><c> that</c><01:21:03.679><c> make</c><01:21:03.840><c> sense</c>

01:21:06.390 --> 01:21:06.400 align:start position:0%
 
 

01:21:06.400 --> 01:21:09.990 align:start position:0%
 
i<01:21:06.560><c> have</c><01:21:06.800><c> a</c><01:21:06.960><c> question</c><01:21:08.880><c> um</c>

01:21:09.990 --> 01:21:10.000 align:start position:0%
i have a question um
 

01:21:10.000 --> 01:21:14.229 align:start position:0%
i have a question um
is<01:21:10.239><c> it</c><01:21:10.960><c> is</c><01:21:11.199><c> it</c><01:21:11.440><c> by</c><01:21:11.679><c> convention</c><01:21:12.400><c> that</c><01:21:12.719><c> the</c><01:21:13.040><c> start</c>

01:21:14.229 --> 01:21:14.239 align:start position:0%
is it is it by convention that the start
 

01:21:14.239 --> 01:21:17.270 align:start position:0%
is it is it by convention that the start
of

01:21:17.270 --> 01:21:17.280 align:start position:0%
 
 

01:21:17.280 --> 01:21:20.550 align:start position:0%
 
the<01:21:17.600><c> port</c><01:21:18.320><c> so</c><01:21:18.560><c> i</c><01:21:18.719><c> guess</c><01:21:19.679><c> i</c><01:21:19.840><c> guess</c>

01:21:20.550 --> 01:21:20.560 align:start position:0%
the port so i guess i guess
 

01:21:20.560 --> 01:21:23.030 align:start position:0%
the port so i guess i guess
the<01:21:20.719><c> compiler</c><01:21:21.280><c> could</c><01:21:22.080><c> figure</c><01:21:22.400><c> out</c><01:21:22.560><c> that</c><01:21:22.800><c> there</c>

01:21:23.030 --> 01:21:23.040 align:start position:0%
the compiler could figure out that there
 

01:21:23.040 --> 01:21:23.750 align:start position:0%
the compiler could figure out that there
is<01:21:23.280><c> an</c>

01:21:23.750 --> 01:21:23.760 align:start position:0%
is an
 

01:21:23.760 --> 01:21:25.990 align:start position:0%
is an
instruction<01:21:24.400><c> before</c><01:21:24.880><c> the</c><01:21:25.040><c> lock</c><01:21:25.360><c> is</c><01:21:25.520><c> even</c>

01:21:25.990 --> 01:21:26.000 align:start position:0%
instruction before the lock is even
 

01:21:26.000 --> 01:21:26.790 align:start position:0%
instruction before the lock is even
acquired

01:21:26.790 --> 01:21:26.800 align:start position:0%
acquired
 

01:21:26.800 --> 01:21:29.270 align:start position:0%
acquired
and<01:21:26.960><c> that</c><01:21:27.760><c> it</c><01:21:27.920><c> can</c><01:21:28.159><c> be</c><01:21:28.320><c> just</c><01:21:28.560><c> as</c><01:21:28.719><c> well</c><01:21:28.960><c> moved</c>

01:21:29.270 --> 01:21:29.280 align:start position:0%
and that it can be just as well moved
 

01:21:29.280 --> 01:21:31.510 align:start position:0%
and that it can be just as well moved
after<01:21:29.520><c> the</c><01:21:29.679><c> lock</c><01:21:30.000><c> is</c><01:21:30.159><c> released</c>

01:21:31.510 --> 01:21:31.520 align:start position:0%
after the lock is released
 

01:21:31.520 --> 01:21:35.110 align:start position:0%
after the lock is released
um<01:21:32.800><c> can</c><01:21:33.120><c> that</c><01:21:33.520><c> happen</c><01:21:34.080><c> or</c><01:21:34.480><c> will</c><01:21:34.800><c> it</c>

01:21:35.110 --> 01:21:35.120 align:start position:0%
um can that happen or will it
 

01:21:35.120 --> 01:21:37.990 align:start position:0%
um can that happen or will it
encounter<01:21:35.679><c> the</c><01:21:35.920><c> barrier</c><01:21:36.480><c> and</c><01:21:36.639><c> see</c><01:21:36.880><c> that</c><01:21:37.840><c> we'll</c>

01:21:37.990 --> 01:21:38.000 align:start position:0%
encounter the barrier and see that we'll
 

01:21:38.000 --> 01:21:39.350 align:start position:0%
encounter the barrier and see that we'll
see<01:21:38.239><c> you</c><01:21:38.320><c> know</c><01:21:38.560><c> in</c><01:21:38.719><c> this</c><01:21:38.880><c> case</c>

01:21:39.350 --> 01:21:39.360 align:start position:0%
see you know in this case
 

01:21:39.360 --> 01:21:40.870 align:start position:0%
see you know in this case
a<01:21:39.520><c> choir</c><01:21:39.760><c> has</c><01:21:39.920><c> a</c><01:21:40.000><c> barrier</c><01:21:40.320><c> and</c><01:21:40.400><c> releases</c><01:21:40.800><c> a</c>

01:21:40.870 --> 01:21:40.880 align:start position:0%
a choir has a barrier and releases a
 

01:21:40.880 --> 01:21:42.790 align:start position:0%
a choir has a barrier and releases a
barrier<01:21:41.360><c> so</c><01:21:41.600><c> anything</c><01:21:41.920><c> that</c><01:21:42.000><c> happened</c><01:21:42.320><c> before</c>

01:21:42.790 --> 01:21:42.800 align:start position:0%
barrier so anything that happened before
 

01:21:42.800 --> 01:21:45.189 align:start position:0%
barrier so anything that happened before
locked<01:21:43.199><c> in</c><01:21:43.520><c> sector</c><01:21:43.840><c> one</c><01:21:44.400><c> will</c><01:21:44.560><c> happen</c><01:21:44.880><c> before</c>

01:21:45.189 --> 01:21:45.199 align:start position:0%
locked in sector one will happen before
 

01:21:45.199 --> 01:21:47.590 align:start position:0%
locked in sector one will happen before
that<01:21:45.760><c> it</c><01:21:45.920><c> will</c><01:21:46.159><c> never</c><01:21:46.480><c> pass</c><01:21:46.800><c> that</c><01:21:47.040><c> instruction</c>

01:21:47.590 --> 01:21:47.600 align:start position:0%
that it will never pass that instruction
 

01:21:47.600 --> 01:21:50.310 align:start position:0%
that it will never pass that instruction
so<01:21:47.760><c> this</c><01:21:47.920><c> is</c><01:21:48.080><c> a</c><01:21:48.159><c> barrier</c><01:21:48.639><c> so</c><01:21:48.800><c> if</c><01:21:48.960><c> you</c><01:21:49.040><c> will</c>

01:21:50.310 --> 01:21:50.320 align:start position:0%
so this is a barrier so if you will
 

01:21:50.320 --> 01:21:52.950 align:start position:0%
so this is a barrier so if you will
this<01:21:50.480><c> is</c><01:21:50.639><c> barrier</c><01:21:51.120><c> one</c><01:21:52.159><c> and</c><01:21:52.239><c> this</c><01:21:52.480><c> is</c><01:21:52.560><c> barrier</c>

01:21:52.950 --> 01:21:52.960 align:start position:0%
this is barrier one and this is barrier
 

01:21:52.960 --> 01:21:55.430 align:start position:0%
this is barrier one and this is barrier
two

01:21:55.430 --> 01:21:55.440 align:start position:0%
 
 

01:21:55.440 --> 01:21:56.950 align:start position:0%
 
and<01:21:55.600><c> so</c><01:21:55.840><c> that</c><01:21:56.000><c> means</c><01:21:56.239><c> that</c><01:21:56.400><c> any</c><01:21:56.560><c> instructions</c>

01:21:56.950 --> 01:21:56.960 align:start position:0%
and so that means that any instructions
 

01:21:56.960 --> 01:21:59.030 align:start position:0%
and so that means that any instructions
before<01:21:57.360><c> here</c><01:21:58.000><c> stay</c><01:21:58.320><c> here</c>

01:21:59.030 --> 01:21:59.040 align:start position:0%
before here stay here
 

01:21:59.040 --> 01:22:01.350 align:start position:0%
before here stay here
any<01:21:59.360><c> structure</c><01:21:59.679><c> in</c><01:21:59.840><c> between</c><01:22:00.800><c> will</c><01:22:01.040><c> happen</c>

01:22:01.350 --> 01:22:01.360 align:start position:0%
any structure in between will happen
 

01:22:01.360 --> 01:22:03.030 align:start position:0%
any structure in between will happen
between<01:22:01.600><c> the</c><01:22:01.760><c> two</c><01:22:02.080><c> between</c><01:22:02.400><c> between</c><01:22:02.639><c> required</c>

01:22:03.030 --> 01:22:03.040 align:start position:0%
between the two between between required
 

01:22:03.040 --> 01:22:04.790 align:start position:0%
between the two between between required
release<01:22:03.360><c> and</c><01:22:03.440><c> then</c><01:22:03.600><c> instruction</c><01:22:04.159><c> after</c>

01:22:04.790 --> 01:22:04.800 align:start position:0%
release and then instruction after
 

01:22:04.800 --> 01:22:08.830 align:start position:0%
release and then instruction after
it<01:22:05.040><c> will</c><01:22:05.199><c> stay</c><01:22:05.440><c> after</c><01:22:05.840><c> the</c><01:22:06.000><c> release</c>

01:22:08.830 --> 01:22:08.840 align:start position:0%
 
 

01:22:08.840 --> 01:22:11.110 align:start position:0%
 
okay

01:22:11.110 --> 01:22:11.120 align:start position:0%
okay
 

01:22:11.120 --> 01:22:14.149 align:start position:0%
okay
okay<01:22:12.400><c> okay</c><01:22:12.719><c> so</c><01:22:12.800><c> i'm</c><01:22:12.960><c> running</c><01:22:13.360><c> uh</c><01:22:13.920><c> you</c><01:22:14.000><c> know</c>

01:22:14.149 --> 01:22:14.159 align:start position:0%
okay okay so i'm running uh you know
 

01:22:14.159 --> 01:22:15.430 align:start position:0%
okay okay so i'm running uh you know
close<01:22:14.400><c> to</c><01:22:14.560><c> the</c><01:22:14.719><c> end</c>

01:22:15.430 --> 01:22:15.440 align:start position:0%
close to the end
 

01:22:15.440 --> 01:22:18.470 align:start position:0%
close to the end
so<01:22:15.679><c> let</c><01:22:15.840><c> me</c><01:22:16.080><c> just</c><01:22:16.400><c> actually</c><01:22:16.800><c> uh</c>

01:22:18.470 --> 01:22:18.480 align:start position:0%
so let me just actually uh
 

01:22:18.480 --> 01:22:27.750 align:start position:0%
so let me just actually uh
wrap<01:22:18.719><c> up</c><01:22:22.840><c> here</c>

01:22:27.750 --> 01:22:27.760 align:start position:0%
 
 

01:22:27.760 --> 01:22:30.790 align:start position:0%
 
so<01:22:28.239><c> uh</c><01:22:29.280><c> so</c><01:22:29.520><c> locks</c><01:22:30.000><c> you</c><01:22:30.080><c> know</c>

01:22:30.790 --> 01:22:30.800 align:start position:0%
so uh so locks you know
 

01:22:30.800 --> 01:22:40.310 align:start position:0%
so uh so locks you know
blocks<01:22:31.120><c> are</c><01:22:31.199><c> good</c><01:22:31.360><c> for</c><01:22:36.840><c> correctness</c>

01:22:40.310 --> 01:22:40.320 align:start position:0%
 
 

01:22:40.320 --> 01:22:47.430 align:start position:0%
 
uh<01:22:40.560><c> but</c><01:22:40.719><c> can</c><01:22:40.880><c> be</c><01:22:40.960><c> bad</c><01:22:41.120><c> for</c><01:22:41.280><c> performance</c>

01:22:47.430 --> 01:22:47.440 align:start position:0%
 
 

01:22:47.440 --> 01:22:49.110 align:start position:0%
 
uh<01:22:47.920><c> which</c><01:22:48.080><c> is</c><01:22:48.159><c> sort</c><01:22:48.320><c> of</c><01:22:48.480><c> a</c><01:22:48.560><c> bummer</c><01:22:48.800><c> correct</c>

01:22:49.110 --> 01:22:49.120 align:start position:0%
uh which is sort of a bummer correct
 

01:22:49.120 --> 01:22:50.790 align:start position:0%
uh which is sort of a bummer correct
because<01:22:49.679><c> one</c><01:22:49.840><c> reason</c><01:22:50.159><c> we</c><01:22:50.320><c> actually</c>

01:22:50.790 --> 01:22:50.800 align:start position:0%
because one reason we actually
 

01:22:50.800 --> 01:22:52.310 align:start position:0%
because one reason we actually
you<01:22:50.880><c> know</c><01:22:51.040><c> got</c><01:22:51.199><c> into</c><01:22:51.360><c> locks</c><01:22:51.679><c> is</c><01:22:51.760><c> basically</c><01:22:52.080><c> to</c>

01:22:52.310 --> 01:22:52.320 align:start position:0%
you know got into locks is basically to
 

01:22:52.320 --> 01:22:54.550 align:start position:0%
you know got into locks is basically to
get<01:22:52.800><c> correctness</c><01:22:53.199><c> during</c><01:22:53.520><c> aerial</c><01:22:53.920><c> execution</c>

01:22:54.550 --> 01:22:54.560 align:start position:0%
get correctness during aerial execution
 

01:22:54.560 --> 01:22:56.950 align:start position:0%
get correctness during aerial execution
uh<01:22:54.800><c> but</c><01:22:54.960><c> the</c><01:22:55.199><c> locks</c><01:22:55.520><c> actually</c><01:22:55.760><c> limit</c><01:22:56.000><c> parallel</c>

01:22:56.950 --> 01:22:56.960 align:start position:0%
uh but the locks actually limit parallel
 

01:22:56.960 --> 01:23:00.470 align:start position:0%
uh but the locks actually limit parallel
uh<01:22:57.520><c> execution</c><01:22:59.600><c> so</c><01:22:59.760><c> that's</c><01:23:00.080><c> one</c>

01:23:00.470 --> 01:23:00.480 align:start position:0%
uh execution so that's one
 

01:23:00.480 --> 01:23:05.430 align:start position:0%
uh execution so that's one
and<01:23:00.639><c> two</c><01:23:00.960><c> locks</c><01:23:01.360><c> complicate</c>

01:23:05.430 --> 01:23:05.440 align:start position:0%
 
 

01:23:05.440 --> 01:23:08.390 align:start position:0%
 
uh<01:23:05.679><c> programming</c><01:23:07.199><c> and</c><01:23:07.440><c> you</c><01:23:07.600><c> will</c><01:23:08.000><c> experience</c>

01:23:08.390 --> 01:23:08.400 align:start position:0%
uh programming and you will experience
 

01:23:08.400 --> 01:23:09.590 align:start position:0%
uh programming and you will experience
that<01:23:08.560><c> in</c><01:23:08.639><c> some</c><01:23:08.880><c> of</c><01:23:08.960><c> the</c><01:23:09.120><c> labs</c><01:23:09.360><c> that</c><01:23:09.440><c> we're</c>

01:23:09.590 --> 01:23:09.600 align:start position:0%
that in some of the labs that we're
 

01:23:09.600 --> 01:23:11.350 align:start position:0%
that in some of the labs that we're
going<01:23:09.679><c> to</c><01:23:09.840><c> be</c><01:23:10.000><c> doing</c><01:23:10.320><c> in</c><01:23:10.480><c> fact</c><01:23:10.719><c> from</c><01:23:10.880><c> now</c><01:23:11.040><c> on</c>

01:23:11.350 --> 01:23:11.360 align:start position:0%
going to be doing in fact from now on
 

01:23:11.360 --> 01:23:11.830 align:start position:0%
going to be doing in fact from now on
we'll<01:23:11.520><c> see</c>

01:23:11.830 --> 01:23:11.840 align:start position:0%
we'll see
 

01:23:11.840 --> 01:23:14.149 align:start position:0%
we'll see
locks<01:23:12.159><c> showing</c><01:23:12.480><c> up</c><01:23:12.639><c> all</c><01:23:12.800><c> the</c><01:23:12.960><c> time</c><01:23:13.840><c> and</c><01:23:14.080><c> that</c>

01:23:14.149 --> 01:23:14.159 align:start position:0%
locks showing up all the time and that
 

01:23:14.159 --> 01:23:15.189 align:start position:0%
locks showing up all the time and that
will<01:23:14.320><c> give</c><01:23:14.560><c> us</c><01:23:14.719><c> uh</c>

01:23:15.189 --> 01:23:15.199 align:start position:0%
will give us uh
 

01:23:15.199 --> 01:23:17.830 align:start position:0%
will give us uh
you<01:23:15.360><c> know</c><01:23:15.600><c> at</c><01:23:15.760><c> least</c><01:23:16.239><c> you</c><01:23:16.320><c> know</c><01:23:16.800><c> uh</c><01:23:17.600><c> some</c>

01:23:17.830 --> 01:23:17.840 align:start position:0%
you know at least you know uh some
 

01:23:17.840 --> 01:23:18.709 align:start position:0%
you know at least you know uh some
thought<01:23:18.159><c> you</c><01:23:18.239><c> know</c><01:23:18.400><c> it's</c><01:23:18.480><c> going</c><01:23:18.560><c> to</c><01:23:18.639><c> be</c>

01:23:18.709 --> 01:23:18.719 align:start position:0%
thought you know it's going to be
 

01:23:18.719 --> 01:23:20.310 align:start position:0%
thought you know it's going to be
necessary<01:23:19.199><c> to</c><01:23:19.360><c> understand</c><01:23:19.840><c> like</c><01:23:20.000><c> why</c><01:23:20.159><c> the</c>

01:23:20.310 --> 01:23:20.320 align:start position:0%
necessary to understand like why the
 

01:23:20.320 --> 01:23:21.750 align:start position:0%
necessary to understand like why the
locks<01:23:20.560><c> are</c><01:23:20.639><c> there</c><01:23:20.960><c> and</c><01:23:21.199><c> you</c><01:23:21.360><c> know</c><01:23:21.440><c> what</c><01:23:21.600><c> they</c>

01:23:21.750 --> 01:23:21.760 align:start position:0%
locks are there and you know what they
 

01:23:21.760 --> 01:23:22.629 align:start position:0%
locks are there and you know what they
protect

01:23:22.629 --> 01:23:22.639 align:start position:0%
protect
 

01:23:22.639 --> 01:23:24.870 align:start position:0%
protect
um<01:23:23.120><c> and</c><01:23:23.199><c> but</c><01:23:23.360><c> they're</c><01:23:23.600><c> sort</c><01:23:23.760><c> of</c><01:23:23.920><c> inherent</c><01:23:24.560><c> uh</c>

01:23:24.870 --> 01:23:24.880 align:start position:0%
um and but they're sort of inherent uh
 

01:23:24.880 --> 01:23:26.709 align:start position:0%
um and but they're sort of inherent uh
if<01:23:25.040><c> you</c><01:23:25.120><c> didn't</c><01:23:25.280><c> do</c><01:23:25.440><c> parallel</c><01:23:25.840><c> programming</c>

01:23:26.709 --> 01:23:26.719 align:start position:0%
if you didn't do parallel programming
 

01:23:26.719 --> 01:23:30.629 align:start position:0%
if you didn't do parallel programming
uh<01:23:26.960><c> the</c><01:23:27.280><c> you</c><01:23:27.360><c> know</c><01:23:27.520><c> you</c><01:23:27.600><c> need</c><01:23:27.760><c> to</c><01:23:27.840><c> use</c><01:23:28.639><c> locks</c>

01:23:30.629 --> 01:23:30.639 align:start position:0%
uh the you know you need to use locks
 

01:23:30.639 --> 01:23:32.550 align:start position:0%
uh the you know you need to use locks
and<01:23:30.800><c> so</c><01:23:31.360><c> you</c><01:23:31.520><c> know</c><01:23:31.600><c> if</c><01:23:31.760><c> you</c><01:23:31.840><c> want</c><01:23:32.000><c> to</c><01:23:32.080><c> avoid</c><01:23:32.480><c> the</c>

01:23:32.550 --> 01:23:32.560 align:start position:0%
and so you know if you want to avoid the
 

01:23:32.560 --> 01:23:34.470 align:start position:0%
and so you know if you want to avoid the
complications<01:23:33.120><c> due</c><01:23:33.280><c> to</c><01:23:33.440><c> locks</c><01:23:33.760><c> is</c><01:23:34.000><c> you</c><01:23:34.159><c> know</c>

01:23:34.470 --> 01:23:34.480 align:start position:0%
complications due to locks is you know
 

01:23:34.480 --> 01:23:36.070 align:start position:0%
complications due to locks is you know
the<01:23:34.560><c> couple</c><01:23:34.800><c> things</c><01:23:34.960><c> you</c><01:23:35.040><c> could</c><01:23:35.199><c> do</c><01:23:35.440><c> you</c><01:23:35.600><c> know</c>

01:23:36.070 --> 01:23:36.080 align:start position:0%
the couple things you could do you know
 

01:23:36.080 --> 01:23:42.790 align:start position:0%
the couple things you could do you know
don't<01:23:36.320><c> share</c><01:23:36.560><c> if</c><01:23:36.719><c> you</c><01:23:36.800><c> don't</c><01:23:36.960><c> have</c><01:23:37.120><c> to</c>

01:23:42.790 --> 01:23:42.800 align:start position:0%
 
 

01:23:42.800 --> 01:23:46.390 align:start position:0%
 
if<01:23:42.960><c> you</c><01:23:43.040><c> don't</c><01:23:43.199><c> have</c><01:23:43.360><c> shared</c><01:23:43.600><c> data</c><01:23:43.840><c> structures</c>

01:23:46.390 --> 01:23:46.400 align:start position:0%
 
 

01:23:46.400 --> 01:23:48.709 align:start position:0%
 
these<01:23:46.560><c> race</c><01:23:46.800><c> conditions</c><01:23:47.199><c> cannot</c><01:23:47.520><c> happen</c><01:23:48.400><c> uh</c>

01:23:48.709 --> 01:23:48.719 align:start position:0%
these race conditions cannot happen uh
 

01:23:48.719 --> 01:23:49.590 align:start position:0%
these race conditions cannot happen uh
and<01:23:48.880><c> so</c><01:23:49.120><c> there</c>

01:23:49.590 --> 01:23:49.600 align:start position:0%
and so there
 

01:23:49.600 --> 01:23:51.669 align:start position:0%
and so there
and<01:23:49.920><c> so</c><01:23:50.159><c> you</c><01:23:50.480><c> you</c><01:23:50.639><c> don't</c><01:23:50.800><c> need</c><01:23:50.960><c> locks</c><01:23:51.360><c> and</c><01:23:51.520><c> so</c>

01:23:51.669 --> 01:23:51.679 align:start position:0%
and so you you don't need locks and so
 

01:23:51.679 --> 01:23:52.709 align:start position:0%
and so you you don't need locks and so
you<01:23:51.760><c> don't</c><01:23:51.920><c> need</c><01:23:52.080><c> this</c><01:23:52.239><c> complicated</c>

01:23:52.709 --> 01:23:52.719 align:start position:0%
you don't need this complicated
 

01:23:52.719 --> 01:23:53.990 align:start position:0%
you don't need this complicated
programming

01:23:53.990 --> 01:23:54.000 align:start position:0%
programming
 

01:23:54.000 --> 01:23:55.669 align:start position:0%
programming
uh<01:23:54.480><c> but</c><01:23:54.639><c> you</c><01:23:54.800><c> know</c><01:23:54.960><c> typically</c><01:23:55.280><c> you</c><01:23:55.360><c> will</c><01:23:55.520><c> have</c>

01:23:55.669 --> 01:23:55.679 align:start position:0%
uh but you know typically you will have
 

01:23:55.679 --> 01:23:57.430 align:start position:0%
uh but you know typically you will have
some<01:23:55.840><c> shared</c><01:23:56.080><c> data</c><01:23:56.320><c> structures</c><01:23:56.639><c> you</c><01:23:56.800><c> will</c><01:23:56.960><c> do</c>

01:23:57.430 --> 01:23:57.440 align:start position:0%
some shared data structures you will do
 

01:23:57.440 --> 01:23:59.990 align:start position:0%
some shared data structures you will do
uh<01:23:57.840><c> you</c><01:23:58.000><c> will</c><01:23:58.159><c> need</c><01:23:58.400><c> locks</c><01:23:59.120><c> and</c><01:23:59.360><c> i</c><01:23:59.440><c> think</c><01:23:59.600><c> the</c>

01:23:59.990 --> 01:24:00.000 align:start position:0%
uh you will need locks and i think the
 

01:24:00.000 --> 01:24:04.070 align:start position:0%
uh you will need locks and i think the
thing<01:24:00.239><c> to</c><01:24:00.320><c> do</c><01:24:00.480><c> is</c><01:24:00.639><c> start</c><01:24:00.800><c> with</c><01:24:00.960><c> coarse</c><01:24:01.280><c> grained</c>

01:24:04.070 --> 01:24:04.080 align:start position:0%
 
 

01:24:04.080 --> 01:24:07.590 align:start position:0%
 
and<01:24:04.239><c> then</c><01:24:04.480><c> move</c><01:24:04.800><c> to</c><01:24:06.800><c> firing</c><01:24:07.199><c> grain</c>

01:24:07.590 --> 01:24:07.600 align:start position:0%
and then move to firing grain
 

01:24:07.600 --> 01:24:09.430 align:start position:0%
and then move to firing grain
if<01:24:07.840><c> necessary</c><01:24:08.480><c> based</c><01:24:08.800><c> on</c><01:24:09.199><c> you</c><01:24:09.280><c> know</c>

01:24:09.430 --> 01:24:09.440 align:start position:0%
if necessary based on you know
 

01:24:09.440 --> 01:24:11.189 align:start position:0%
if necessary based on you know
measurements<01:24:10.080><c> you</c><01:24:10.239><c> want</c><01:24:10.320><c> to</c><01:24:10.560><c> determine</c>

01:24:11.189 --> 01:24:11.199 align:start position:0%
measurements you want to determine
 

01:24:11.199 --> 01:24:12.310 align:start position:0%
measurements you want to determine
make<01:24:11.360><c> sure</c><01:24:11.520><c> that</c><01:24:11.679><c> the</c><01:24:11.760><c> lock</c><01:24:12.000><c> is</c><01:24:12.080><c> actually</c>

01:24:12.310 --> 01:24:12.320 align:start position:0%
make sure that the lock is actually
 

01:24:12.320 --> 01:24:13.750 align:start position:0%
make sure that the lock is actually
contended<01:24:12.800><c> you</c><01:24:12.960><c> know</c><01:24:13.040><c> before</c><01:24:13.360><c> you</c><01:24:13.440><c> actually</c>

01:24:13.750 --> 01:24:13.760 align:start position:0%
contended you know before you actually
 

01:24:13.760 --> 01:24:15.350 align:start position:0%
contended you know before you actually
start<01:24:13.920><c> redesigning</c>

01:24:15.350 --> 01:24:15.360 align:start position:0%
start redesigning
 

01:24:15.360 --> 01:24:17.590 align:start position:0%
start redesigning
and<01:24:15.600><c> finally</c><01:24:16.080><c> you</c><01:24:16.239><c> know</c><01:24:16.480><c> use</c><01:24:16.719><c> a</c><01:24:16.800><c> race</c><01:24:17.040><c> detector</c>

01:24:17.590 --> 01:24:17.600 align:start position:0%
and finally you know use a race detector
 

01:24:17.600 --> 01:24:20.310 align:start position:0%
and finally you know use a race detector
to

01:24:20.310 --> 01:24:20.320 align:start position:0%
 
 

01:24:20.320 --> 01:24:21.590 align:start position:0%
 
you<01:24:20.400><c> know</c><01:24:20.560><c> one</c><01:24:20.639><c> of</c><01:24:20.800><c> these</c><01:24:20.960><c> race</c><01:24:21.199><c> detector</c>

01:24:21.590 --> 01:24:21.600 align:start position:0%
you know one of these race detector
 

01:24:21.600 --> 01:24:23.669 align:start position:0%
you know one of these race detector
tools<01:24:21.840><c> to</c><01:24:22.000><c> actually</c><01:24:22.239><c> find</c>

01:24:23.669 --> 01:24:23.679 align:start position:0%
tools to actually find
 

01:24:23.679 --> 01:24:25.910 align:start position:0%
tools to actually find
uh<01:24:24.000><c> problems</c><01:24:24.560><c> uh</c><01:24:25.040><c> or</c><01:24:25.280><c> race</c><01:24:25.520><c> conditions</c>

01:24:25.910 --> 01:24:25.920 align:start position:0%
uh problems uh or race conditions
 

01:24:25.920 --> 01:24:26.950 align:start position:0%
uh problems uh or race conditions
because<01:24:26.080><c> you</c><01:24:26.159><c> know</c><01:24:26.320><c> you</c><01:24:26.400><c> put</c><01:24:26.560><c> the</c><01:24:26.639><c> locks</c><01:24:26.880><c> in</c>

01:24:26.950 --> 01:24:26.960 align:start position:0%
because you know you put the locks in
 

01:24:26.960 --> 01:24:28.229 align:start position:0%
because you know you put the locks in
the<01:24:27.040><c> wrong</c><01:24:27.280><c> or</c><01:24:27.440><c> you</c><01:24:27.520><c> put</c><01:24:27.679><c> the</c><01:24:27.840><c> acquiring</c><01:24:28.159><c> the</c>

01:24:28.229 --> 01:24:28.239 align:start position:0%
the wrong or you put the acquiring the
 

01:24:28.239 --> 01:24:29.750 align:start position:0%
the wrong or you put the acquiring the
releases<01:24:28.639><c> in</c><01:24:28.719><c> the</c><01:24:28.800><c> wrong</c><01:24:29.040><c> place</c><01:24:29.280><c> and</c><01:24:29.440><c> in</c><01:24:29.520><c> fact</c>

01:24:29.750 --> 01:24:29.760 align:start position:0%
releases in the wrong place and in fact
 

01:24:29.760 --> 01:24:30.629 align:start position:0%
releases in the wrong place and in fact
you<01:24:29.840><c> know</c><01:24:29.920><c> you</c><01:24:30.080><c> still</c><01:24:30.239><c> have</c>

01:24:30.629 --> 01:24:30.639 align:start position:0%
you know you still have
 

01:24:30.639 --> 01:24:33.830 align:start position:0%
you know you still have
uh<01:24:31.520><c> races</c><01:24:32.719><c> okay</c><01:24:33.199><c> so</c><01:24:33.360><c> this</c><01:24:33.440><c> is</c><01:24:33.520><c> a</c><01:24:33.600><c> quick</c>

01:24:33.830 --> 01:24:33.840 align:start position:0%
uh races okay so this is a quick
 

01:24:33.840 --> 01:24:35.350 align:start position:0%
uh races okay so this is a quick
introduction<01:24:34.239><c> to</c><01:24:34.400><c> logs</c><01:24:34.800><c> uh</c><01:24:35.040><c> we're</c><01:24:35.199><c> going</c><01:24:35.280><c> to</c>

01:24:35.350 --> 01:24:35.360 align:start position:0%
introduction to logs uh we're going to
 

01:24:35.360 --> 01:24:35.669 align:start position:0%
introduction to logs uh we're going to
talk

01:24:35.669 --> 01:24:35.679 align:start position:0%
talk
 

01:24:35.679 --> 01:24:37.830 align:start position:0%
talk
a<01:24:35.760><c> lot</c><01:24:35.920><c> more</c><01:24:36.080><c> about</c><01:24:36.320><c> locks</c><01:24:36.639><c> in</c><01:24:36.719><c> the</c><01:24:37.440><c> basically</c>

01:24:37.830 --> 01:24:37.840 align:start position:0%
a lot more about locks in the basically
 

01:24:37.840 --> 01:24:38.870 align:start position:0%
a lot more about locks in the basically
for<01:24:37.920><c> the</c><01:24:38.000><c> rest</c><01:24:38.080><c> of</c><01:24:38.159><c> the</c><01:24:38.239><c> semester</c><01:24:38.560><c> that</c><01:24:38.719><c> will</c>

01:24:38.870 --> 01:24:38.880 align:start position:0%
for the rest of the semester that will
 

01:24:38.880 --> 01:24:40.390 align:start position:0%
for the rest of the semester that will
show<01:24:39.040><c> up</c><01:24:39.280><c> and</c><01:24:39.440><c> we'll</c><01:24:39.760><c> talk</c><01:24:39.920><c> a</c><01:24:40.000><c> little</c><01:24:40.159><c> bit</c><01:24:40.239><c> more</c>

01:24:40.390 --> 01:24:40.400 align:start position:0%
show up and we'll talk a little bit more
 

01:24:40.400 --> 01:24:42.470 align:start position:0%
show up and we'll talk a little bit more
about<01:24:40.639><c> lock</c><01:24:40.880><c> free</c><01:24:41.120><c> program</c><01:24:41.440><c> and</c><01:24:41.600><c> the</c><01:24:41.840><c> end</c>

01:24:42.470 --> 01:24:42.480 align:start position:0%
about lock free program and the end
 

01:24:42.480 --> 01:24:45.510 align:start position:0%
about lock free program and the end
and<01:24:42.960><c> see</c><01:24:43.120><c> how</c><01:24:43.280><c> that</c><01:24:43.520><c> is</c><01:24:43.600><c> done</c><01:24:43.840><c> in</c><01:24:44.239><c> in</c><01:24:44.320><c> kernels</c>

01:24:45.510 --> 01:24:45.520 align:start position:0%
and see how that is done in in kernels
 

01:24:45.520 --> 01:24:48.310 align:start position:0%
and see how that is done in in kernels
okay<01:24:46.000><c> so</c><01:24:46.320><c> let</c><01:24:46.480><c> me</c><01:24:46.639><c> stop</c><01:24:46.880><c> here</c><01:24:47.600><c> so</c><01:24:47.760><c> that</c><01:24:48.000><c> anybody</c>

01:24:48.310 --> 01:24:48.320 align:start position:0%
okay so let me stop here so that anybody
 

01:24:48.320 --> 01:24:50.229 align:start position:0%
okay so let me stop here so that anybody
who<01:24:48.560><c> has</c><01:24:48.719><c> to</c><01:24:48.800><c> go</c><01:24:48.960><c> to</c><01:24:49.040><c> somewhere</c><01:24:49.360><c> else</c><01:24:49.600><c> can</c><01:24:49.760><c> go</c>

01:24:50.229 --> 01:24:50.239 align:start position:0%
who has to go to somewhere else can go
 

01:24:50.239 --> 01:24:52.390 align:start position:0%
who has to go to somewhere else can go
but<01:24:50.400><c> if</c><01:24:50.480><c> you</c><01:24:50.639><c> have</c><01:24:50.800><c> any</c><01:24:50.960><c> more</c><01:24:51.199><c> questions</c>

01:24:52.390 --> 01:24:52.400 align:start position:0%
but if you have any more questions
 

01:24:52.400 --> 01:24:54.709 align:start position:0%
but if you have any more questions
please<01:24:52.639><c> feel</c><01:24:52.880><c> free</c><01:24:53.040><c> to</c><01:24:53.199><c> ask</c><01:24:53.440><c> them</c>

01:24:54.709 --> 01:24:54.719 align:start position:0%
please feel free to ask them
 

01:24:54.719 --> 01:24:57.350 align:start position:0%
please feel free to ask them
we<01:24:54.800><c> have</c><01:24:54.960><c> a</c><01:24:55.040><c> question</c><01:24:55.360><c> in</c><01:24:55.440><c> the</c><01:24:55.600><c> chat</c><01:24:56.960><c> isn't</c><01:24:57.199><c> the</c>

01:24:57.350 --> 01:24:57.360 align:start position:0%
we have a question in the chat isn't the
 

01:24:57.360 --> 01:24:59.189 align:start position:0%
we have a question in the chat isn't the
fence<01:24:57.679><c> instruction</c><01:24:58.239><c> unnecessary</c><01:24:58.880><c> because</c>

01:24:59.189 --> 01:24:59.199 align:start position:0%
fence instruction unnecessary because
 

01:24:59.199 --> 01:24:59.430 align:start position:0%
fence instruction unnecessary because
the

01:24:59.430 --> 01:24:59.440 align:start position:0%
the
 

01:24:59.440 --> 01:25:01.350 align:start position:0%
the
amo<01:24:59.920><c> swap</c><01:25:00.239><c> instruction</c><01:25:00.800><c> can</c><01:25:00.960><c> have</c><01:25:01.199><c> the</c>

01:25:01.350 --> 01:25:01.360 align:start position:0%
amo swap instruction can have the
 

01:25:01.360 --> 01:25:03.990 align:start position:0%
amo swap instruction can have the
acquire<01:25:01.760><c> release</c><01:25:02.159><c> ordering</c>

01:25:03.990 --> 01:25:04.000 align:start position:0%
acquire release ordering
 

01:25:04.000 --> 01:25:07.110 align:start position:0%
acquire release ordering
uh<01:25:04.480><c> yeah</c><01:25:04.960><c> uh</c><01:25:05.360><c> okay</c><01:25:05.760><c> so</c><01:25:06.159><c> uh</c><01:25:06.560><c> okay</c>

01:25:07.110 --> 01:25:07.120 align:start position:0%
uh yeah uh okay so uh okay
 

01:25:07.120 --> 01:25:09.669 align:start position:0%
uh yeah uh okay so uh okay
so<01:25:07.360><c> the</c><01:25:07.440><c> two</c><01:25:07.600><c> things</c><01:25:08.000><c> uh</c><01:25:08.320><c> there's</c><01:25:08.719><c> the</c><01:25:09.120><c> the</c><01:25:09.360><c> the</c>

01:25:09.669 --> 01:25:09.679 align:start position:0%
so the two things uh there's the the the
 

01:25:09.679 --> 01:25:11.189 align:start position:0%
so the two things uh there's the the the
the<01:25:09.920><c> sync</c><01:25:10.159><c> instructions</c><01:25:10.560><c> there</c><01:25:10.800><c> both</c><01:25:10.960><c> for</c><01:25:11.120><c> the</c>

01:25:11.189 --> 01:25:11.199 align:start position:0%
the sync instructions there both for the
 

01:25:11.199 --> 01:25:24.870 align:start position:0%
the sync instructions there both for the
compiler<01:25:11.600><c> and</c><01:25:11.760><c> for</c><01:25:11.920><c> the</c><01:25:12.000><c> hardware</c>

01:25:24.870 --> 01:25:24.880 align:start position:0%
 
 

01:25:24.880 --> 01:25:26.709 align:start position:0%
 
yeah<01:25:25.120><c> i'm</c><01:25:25.280><c> jumping</c><01:25:25.600><c> off</c><01:25:25.840><c> uh</c><01:25:26.000><c> to</c><01:25:26.159><c> start</c><01:25:26.400><c> office</c>

01:25:26.709 --> 01:25:26.719 align:start position:0%
yeah i'm jumping off uh to start office
 

01:25:26.719 --> 01:25:27.750 align:start position:0%
yeah i'm jumping off uh to start office
hours<01:25:26.960><c> but</c><01:25:27.040><c> i</c><01:25:27.120><c> think</c><01:25:27.280><c> there's</c><01:25:27.440><c> still</c><01:25:27.600><c> more</c>

01:25:27.750 --> 01:25:27.760 align:start position:0%
hours but i think there's still more
 

01:25:27.760 --> 01:25:29.030 align:start position:0%
hours but i think there's still more
questions

01:25:29.030 --> 01:25:29.040 align:start position:0%
questions
 

01:25:29.040 --> 01:25:31.430 align:start position:0%
questions
how<01:25:29.199><c> do</c><01:25:29.280><c> you</c><01:25:29.360><c> do</c><01:25:29.520><c> it</c><01:25:29.600><c> for</c><01:25:29.679><c> the</c><01:25:29.840><c> compiler</c><01:25:30.400><c> only</c>

01:25:31.430 --> 01:25:31.440 align:start position:0%
how do you do it for the compiler only
 

01:25:31.440 --> 01:25:32.229 align:start position:0%
how do you do it for the compiler only
uh

01:25:32.229 --> 01:25:32.239 align:start position:0%
uh
 

01:25:32.239 --> 01:25:34.229 align:start position:0%
uh
the<01:25:32.400><c> the</c><01:25:33.040><c> the</c><01:25:33.360><c> compiler</c><01:25:33.760><c> knows</c><01:25:33.920><c> for</c><01:25:34.000><c> which</c>

01:25:34.229 --> 01:25:34.239 align:start position:0%
the the the compiler knows for which
 

01:25:34.239 --> 01:25:35.750 align:start position:0%
the the the compiler knows for which
architecture<01:25:34.639><c> is</c><01:25:34.800><c> compiling</c>

01:25:35.750 --> 01:25:35.760 align:start position:0%
architecture is compiling
 

01:25:35.760 --> 01:25:37.270 align:start position:0%
architecture is compiling
and<01:25:35.920><c> so</c><01:25:36.159><c> it</c><01:25:36.320><c> will</c><01:25:36.480><c> know</c><01:25:36.719><c> whether</c><01:25:36.960><c> it</c><01:25:37.120><c> actually</c>

01:25:37.270 --> 01:25:37.280 align:start position:0%
and so it will know whether it actually
 

01:25:37.280 --> 01:25:39.510 align:start position:0%
and so it will know whether it actually
has<01:25:37.520><c> to</c><01:25:38.000><c> insert</c><01:25:38.320><c> the</c><01:25:38.480><c> appropriate</c><01:25:38.880><c> fences</c><01:25:39.440><c> you</c>

01:25:39.510 --> 01:25:39.520 align:start position:0%
has to insert the appropriate fences you
 

01:25:39.520 --> 01:25:40.229 align:start position:0%
has to insert the appropriate fences you
know<01:25:39.679><c> for</c>

01:25:40.229 --> 01:25:40.239 align:start position:0%
know for
 

01:25:40.239 --> 01:25:41.669 align:start position:0%
know for
whatever<01:25:40.639><c> architecture</c><01:25:41.120><c> it's</c><01:25:41.280><c> running</c><01:25:41.520><c> on</c>

01:25:41.669 --> 01:25:41.679 align:start position:0%
whatever architecture it's running on
 

01:25:41.679 --> 01:25:43.510 align:start position:0%
whatever architecture it's running on
and<01:25:41.840><c> whatever</c><01:25:42.159><c> memory</c><01:25:42.400><c> consistency</c><01:25:43.040><c> model</c><01:25:43.360><c> it</c>

01:25:43.510 --> 01:25:43.520 align:start position:0%
and whatever memory consistency model it
 

01:25:43.520 --> 01:25:44.709 align:start position:0%
and whatever memory consistency model it
has

01:25:44.709 --> 01:25:44.719 align:start position:0%
has
 

01:25:44.719 --> 01:25:45.830 align:start position:0%
has
so<01:25:44.880><c> this</c><01:25:45.040><c> gets</c><01:25:45.199><c> in</c><01:25:45.360><c> a</c><01:25:45.440><c> little</c><01:25:45.600><c> bit</c><01:25:45.679><c> more</c>

01:25:45.830 --> 01:25:45.840 align:start position:0%
so this gets in a little bit more
 

01:25:45.840 --> 01:25:47.270 align:start position:0%
so this gets in a little bit more
complicated<01:25:46.320><c> discussion</c><01:25:46.719><c> is</c><01:25:46.880><c> that</c><01:25:47.040><c> every</c>

01:25:47.270 --> 01:25:47.280 align:start position:0%
complicated discussion is that every
 

01:25:47.280 --> 01:25:48.310 align:start position:0%
complicated discussion is that every
piece<01:25:47.440><c> of</c><01:25:47.520><c> hardware</c><01:25:48.000><c> has</c>

01:25:48.310 --> 01:25:48.320 align:start position:0%
piece of hardware has
 

01:25:48.320 --> 01:25:51.590 align:start position:0%
piece of hardware has
a<01:25:48.960><c> memory</c><01:25:49.280><c> model</c><01:25:50.159><c> and</c><01:25:50.960><c> the</c><01:25:51.040><c> compiler</c><01:25:51.440><c> has</c><01:25:51.520><c> to</c>

01:25:51.590 --> 01:25:51.600 align:start position:0%
a memory model and the compiler has to
 

01:25:51.600 --> 01:25:52.550 align:start position:0%
a memory model and the compiler has to
decide

01:25:52.550 --> 01:25:52.560 align:start position:0%
decide
 

01:25:52.560 --> 01:25:54.870 align:start position:0%
decide
uh<01:25:53.120><c> you</c><01:25:53.280><c> know</c><01:25:53.520><c> given</c><01:25:53.760><c> the</c><01:25:53.920><c> memory</c><01:25:54.159><c> model</c><01:25:54.719><c> for</c>

01:25:54.870 --> 01:25:54.880 align:start position:0%
uh you know given the memory model for
 

01:25:54.880 --> 01:25:56.229 align:start position:0%
uh you know given the memory model for
that<01:25:55.120><c> particular</c><01:25:55.520><c> architecture</c><01:25:56.000><c> what</c>

01:25:56.229 --> 01:25:56.239 align:start position:0%
that particular architecture what
 

01:25:56.239 --> 01:25:59.270 align:start position:0%
that particular architecture what
actually<01:25:56.560><c> it</c><01:25:56.639><c> can</c><01:25:56.800><c> do</c><01:25:56.960><c> what</c><01:25:57.120><c> it</c><01:25:57.199><c> cannot</c><01:25:57.520><c> do</c>

01:25:59.270 --> 01:25:59.280 align:start position:0%
actually it can do what it cannot do
 

01:25:59.280 --> 01:26:01.830 align:start position:0%
actually it can do what it cannot do
and<01:25:59.679><c> i</c><01:25:59.760><c> guess</c><01:25:59.920><c> my</c><01:26:00.159><c> question</c><01:26:00.480><c> was</c><01:26:00.719><c> that</c><01:26:01.199><c> like</c>

01:26:01.830 --> 01:26:01.840 align:start position:0%
and i guess my question was that like
 

01:26:01.840 --> 01:26:03.430 align:start position:0%
and i guess my question was that like
defense<01:26:02.239><c> instruction</c><01:26:02.719><c> only</c><01:26:02.960><c> becomes</c>

01:26:03.430 --> 01:26:03.440 align:start position:0%
defense instruction only becomes
 

01:26:03.440 --> 01:26:06.790 align:start position:0%
defense instruction only becomes
unnecessary<01:26:04.320><c> if</c><01:26:04.480><c> you</c><01:26:04.639><c> call</c><01:26:04.800><c> ammo</c><01:26:05.199><c> swap</c>

01:26:06.790 --> 01:26:06.800 align:start position:0%
unnecessary if you call ammo swap
 

01:26:06.800 --> 01:26:10.470 align:start position:0%
unnecessary if you call ammo swap
like<01:26:07.440><c> w</c><01:26:08.000><c> dot</c><01:26:08.560><c> release</c>

01:26:10.470 --> 01:26:10.480 align:start position:0%
like w dot release
 

01:26:10.480 --> 01:26:14.470 align:start position:0%
like w dot release
and<01:26:11.760><c> uh</c>

01:26:14.470 --> 01:26:14.480 align:start position:0%
 
 

01:26:14.480 --> 01:26:17.990 align:start position:0%
 
like<01:26:15.040><c> putting</c><01:26:15.360><c> in</c><01:26:15.520><c> the</c><01:26:16.639><c> the</c><01:26:17.360><c> sync</c>

01:26:17.990 --> 01:26:18.000 align:start position:0%
like putting in the the sync
 

01:26:18.000 --> 01:26:20.390 align:start position:0%
like putting in the the sync
and<01:26:18.159><c> there</c><01:26:18.560><c> that</c><01:26:18.719><c> will</c><01:26:18.960><c> sync</c><01:26:19.199><c> with</c><01:26:19.440><c> the</c><01:26:20.320><c> you</c>

01:26:20.390 --> 01:26:20.400 align:start position:0%
and there that will sync with the you
 

01:26:20.400 --> 01:26:21.590 align:start position:0%
and there that will sync with the you
know<01:26:20.560><c> the</c><01:26:20.719><c> compiler</c>

01:26:21.590 --> 01:26:21.600 align:start position:0%
know the compiler
 

01:26:21.600 --> 01:26:25.350 align:start position:0%
know the compiler
ordering<01:26:22.320><c> and</c><01:26:22.560><c> then</c><01:26:23.199><c> the</c><01:26:24.320><c> um</c>

01:26:25.350 --> 01:26:25.360 align:start position:0%
ordering and then the um
 

01:26:25.360 --> 01:26:27.510 align:start position:0%
ordering and then the um
the<01:26:25.920><c> memory</c><01:26:26.320><c> ordering</c><01:26:26.800><c> and</c><01:26:26.960><c> the</c><01:26:27.280><c> out</c><01:26:27.360><c> of</c>

01:26:27.510 --> 01:26:27.520 align:start position:0%
the memory ordering and the out of
 

01:26:27.520 --> 01:26:28.709 align:start position:0%
the memory ordering and the out of
ordering

01:26:28.709 --> 01:26:28.719 align:start position:0%
ordering
 

01:26:28.719 --> 01:26:30.229 align:start position:0%
ordering
yeah<01:26:29.120><c> machinery</c><01:26:29.679><c> using</c><01:26:29.920><c> the</c><01:26:30.000><c> fence</c>

01:26:30.229 --> 01:26:30.239 align:start position:0%
yeah machinery using the fence
 

01:26:30.239 --> 01:26:31.510 align:start position:0%
yeah machinery using the fence
instruction<01:26:30.719><c> as</c><01:26:30.880><c> well</c><01:26:31.120><c> the</c><01:26:31.280><c> fence</c>

01:26:31.510 --> 01:26:31.520 align:start position:0%
instruction as well the fence
 

01:26:31.520 --> 01:26:33.270 align:start position:0%
instruction as well the fence
instruction<01:26:31.920><c> is</c><01:26:32.080><c> only</c><01:26:32.400><c> unnecessary</c><01:26:33.040><c> in</c><01:26:33.120><c> the</c>

01:26:33.270 --> 01:26:33.280 align:start position:0%
instruction is only unnecessary in the
 

01:26:33.280 --> 01:26:34.390 align:start position:0%
instruction is only unnecessary in the
case<01:26:33.520><c> that</c><01:26:33.600><c> you</c><01:26:33.920><c> do</c>

01:26:34.390 --> 01:26:34.400 align:start position:0%
case that you do
 

01:26:34.400 --> 01:26:36.390 align:start position:0%
case that you do
dot<01:26:34.719><c> rl</c><01:26:35.199><c> so</c><01:26:35.440><c> it</c><01:26:35.600><c> seems</c><01:26:35.840><c> like</c><01:26:36.000><c> it</c><01:26:36.080><c> wouldn't</c>

01:26:36.390 --> 01:26:36.400 align:start position:0%
dot rl so it seems like it wouldn't
 

01:26:36.400 --> 01:26:38.629 align:start position:0%
dot rl so it seems like it wouldn't
detect<01:26:36.800><c> that</c><01:26:37.120><c> so</c><01:26:37.280><c> how</c><01:26:37.440><c> would</c><01:26:37.600><c> you</c><01:26:37.760><c> do</c><01:26:37.920><c> it</c>

01:26:38.629 --> 01:26:38.639 align:start position:0%
detect that so how would you do it
 

01:26:38.639 --> 01:26:41.669 align:start position:0%
detect that so how would you do it
so<01:26:39.040><c> the</c><01:26:39.199><c> compiler</c><01:26:40.400><c> enforces</c><01:26:40.960><c> the</c><01:26:41.040><c> ordering</c><01:26:41.520><c> on</c>

01:26:41.669 --> 01:26:41.679 align:start position:0%
so the compiler enforces the ordering on
 

01:26:41.679 --> 01:26:42.790 align:start position:0%
so the compiler enforces the ordering on
its<01:26:42.000><c> end</c>

01:26:42.790 --> 01:26:42.800 align:start position:0%
its end
 

01:26:42.800 --> 01:26:45.510 align:start position:0%
its end
but<01:26:43.280><c> you</c><01:26:43.520><c> already</c><01:26:43.760><c> cover</c><01:26:44.080><c> it</c><01:26:44.480><c> using</c><01:26:45.280><c> the</c>

01:26:45.510 --> 01:26:45.520 align:start position:0%
but you already cover it using the
 

01:26:45.520 --> 01:26:46.390 align:start position:0%
but you already cover it using the
amazon<01:26:46.000><c> yeah</c>

01:26:46.390 --> 01:26:46.400 align:start position:0%
amazon yeah
 

01:26:46.400 --> 01:26:49.189 align:start position:0%
amazon yeah
so<01:26:46.639><c> like</c><01:26:46.880><c> uh</c><01:26:47.520><c> if</c><01:26:47.679><c> you</c><01:26:47.920><c> uh</c><01:26:48.320><c> it's</c><01:26:48.719><c> a</c><01:26:48.800><c> very</c><01:26:49.040><c> good</c>

01:26:49.189 --> 01:26:49.199 align:start position:0%
so like uh if you uh it's a very good
 

01:26:49.199 --> 01:26:50.070 align:start position:0%
so like uh if you uh it's a very good
question<01:26:49.679><c> uh</c>

01:26:50.070 --> 01:26:50.080 align:start position:0%
question uh
 

01:26:50.080 --> 01:26:51.750 align:start position:0%
question uh
and<01:26:50.400><c> you</c><01:26:50.560><c> know</c><01:26:50.639><c> some</c><01:26:50.880><c> more</c><01:26:51.040><c> sophisticated</c>

01:26:51.750 --> 01:26:51.760 align:start position:0%
and you know some more sophisticated
 

01:26:51.760 --> 01:26:53.350 align:start position:0%
and you know some more sophisticated
acquiring<01:26:52.080><c> these</c><01:26:52.320><c> implementation</c><01:26:52.880><c> would</c><01:26:53.040><c> be</c>

01:26:53.350 --> 01:26:53.360 align:start position:0%
acquiring these implementation would be
 

01:26:53.360 --> 01:26:57.110 align:start position:0%
acquiring these implementation would be
uh<01:26:54.159><c> we</c><01:26:54.560><c> more</c><01:26:54.960><c> like</c><01:26:55.360><c> specialized</c><01:26:56.000><c> uh</c>

01:26:57.110 --> 01:26:57.120 align:start position:0%
uh we more like specialized uh
 

01:26:57.120 --> 01:26:58.709 align:start position:0%
uh we more like specialized uh
uh<01:26:57.280><c> acquire</c><01:26:57.679><c> a</c><01:26:57.840><c> release</c><01:26:58.080><c> implementation</c><01:26:58.560><c> or</c>

01:26:58.709 --> 01:26:58.719 align:start position:0%
uh acquire a release implementation or
 

01:26:58.719 --> 01:26:59.990 align:start position:0%
uh acquire a release implementation or
lease<01:26:58.960><c> implementation</c><01:26:59.360><c> for</c><01:26:59.440><c> a</c><01:26:59.520><c> risk</c><01:26:59.679><c> fight</c><01:26:59.920><c> we</c>

01:26:59.990 --> 01:27:00.000 align:start position:0%
lease implementation for a risk fight we
 

01:27:00.000 --> 01:27:01.430 align:start position:0%
lease implementation for a risk fight we
will<01:27:00.159><c> probably</c><01:27:00.400><c> do</c><01:27:00.560><c> more</c><01:27:00.719><c> sophisticated</c>

01:27:01.430 --> 01:27:01.440 align:start position:0%
will probably do more sophisticated
 

01:27:01.440 --> 01:27:02.950 align:start position:0%
will probably do more sophisticated
things<01:27:01.600><c> than</c><01:27:01.760><c> we</c><01:27:01.920><c> do</c><01:27:02.159><c> where</c><01:27:02.400><c> we</c><01:27:02.639><c> pretty</c><01:27:02.880><c> of</c>

01:27:02.950 --> 01:27:02.960 align:start position:0%
things than we do where we pretty of
 

01:27:02.960 --> 01:27:04.629 align:start position:0%
things than we do where we pretty of
course<01:27:03.199><c> grain</c><01:27:03.440><c> by</c><01:27:03.600><c> just</c><01:27:03.920><c> issuing</c><01:27:04.239><c> defense</c>

01:27:04.629 --> 01:27:04.639 align:start position:0%
course grain by just issuing defense
 

01:27:04.639 --> 01:27:05.750 align:start position:0%
course grain by just issuing defense
instruction

01:27:05.750 --> 01:27:05.760 align:start position:0%
instruction
 

01:27:05.760 --> 01:27:09.189 align:start position:0%
instruction
um<01:27:06.639><c> the</c><01:27:07.360><c> uh</c><01:27:08.159><c> the</c>

01:27:09.189 --> 01:27:09.199 align:start position:0%
um the uh the
 

01:27:09.199 --> 01:27:12.390 align:start position:0%
um the uh the
but<01:27:09.440><c> it's</c><01:27:09.600><c> slightly</c><01:27:09.840><c> complicated</c><01:27:10.639><c> um</c><01:27:11.600><c> and</c><01:27:11.760><c> so</c>

01:27:12.390 --> 01:27:12.400 align:start position:0%
but it's slightly complicated um and so
 

01:27:12.400 --> 01:27:14.550 align:start position:0%
but it's slightly complicated um and so
if<01:27:12.560><c> you</c><01:27:12.880><c> uh</c><01:27:13.280><c> if</c><01:27:13.440><c> you're</c><01:27:13.520><c> interested</c><01:27:13.920><c> in</c><01:27:14.080><c> this</c>

01:27:14.550 --> 01:27:14.560 align:start position:0%
if you uh if you're interested in this
 

01:27:14.560 --> 01:27:15.510 align:start position:0%
if you uh if you're interested in this
uh

01:27:15.510 --> 01:27:15.520 align:start position:0%
uh
 

01:27:15.520 --> 01:27:19.110 align:start position:0%
uh
the<01:27:15.920><c> memory</c><01:27:16.239><c> model</c><01:27:16.560><c> for</c><01:27:16.719><c> the</c><01:27:16.800><c> risk</c><01:27:17.120><c> drive</c><01:27:17.920><c> is</c><01:27:18.159><c> a</c>

01:27:19.110 --> 01:27:19.120 align:start position:0%
the memory model for the risk drive is a
 

01:27:19.120 --> 01:27:20.709 align:start position:0%
the memory model for the risk drive is a
reasonably<01:27:19.520><c> complicated</c><01:27:20.080><c> so</c><01:27:20.239><c> if</c><01:27:20.320><c> you</c><01:27:20.480><c> look</c><01:27:20.639><c> at</c>

01:27:20.709 --> 01:27:20.719 align:start position:0%
reasonably complicated so if you look at
 

01:27:20.719 --> 01:27:22.390 align:start position:0%
reasonably complicated so if you look at
the<01:27:21.600><c> instruction</c>

01:27:22.390 --> 01:27:22.400 align:start position:0%
the instruction
 

01:27:22.400 --> 01:27:25.030 align:start position:0%
the instruction
manual<01:27:23.199><c> for</c><01:27:23.520><c> the</c><01:27:24.000><c> unprevious</c><01:27:24.560><c> instructions</c>

01:27:25.030 --> 01:27:25.040 align:start position:0%
manual for the unprevious instructions
 

01:27:25.040 --> 01:27:26.550 align:start position:0%
manual for the unprevious instructions
there's<01:27:25.199><c> a</c><01:27:25.280><c> whole</c><01:27:25.440><c> chapter</c>

01:27:26.550 --> 01:27:26.560 align:start position:0%
there's a whole chapter
 

01:27:26.560 --> 01:27:28.790 align:start position:0%
there's a whole chapter
dedicated<01:27:27.280><c> you</c><01:27:27.440><c> know</c><01:27:27.600><c> to</c><01:27:27.840><c> memory</c><01:27:28.159><c> ordering</c>

01:27:28.790 --> 01:27:28.800 align:start position:0%
dedicated you know to memory ordering
 

01:27:28.800 --> 01:27:30.310 align:start position:0%
dedicated you know to memory ordering
and<01:27:29.280><c> tells</c><01:27:29.520><c> you</c><01:27:29.679><c> what</c><01:27:29.760><c> they</c><01:27:29.920><c> have</c><01:27:30.000><c> to</c><01:27:30.159><c> what</c><01:27:30.239><c> the</c>

01:27:30.310 --> 01:27:30.320 align:start position:0%
and tells you what they have to what the
 

01:27:30.320 --> 01:27:33.270 align:start position:0%
and tells you what they have to what the
compiler<01:27:30.800><c> should</c><01:27:30.960><c> do</c>

01:27:33.270 --> 01:27:33.280 align:start position:0%
compiler should do
 

01:27:33.280 --> 01:27:37.669 align:start position:0%
compiler should do
in<01:27:33.440><c> this</c><01:27:33.600><c> particular</c><01:27:34.000><c> case</c>

01:27:37.669 --> 01:27:37.679 align:start position:0%
 
 

01:27:37.679 --> 01:27:39.590 align:start position:0%
 
so<01:27:37.840><c> you're</c><01:27:38.000><c> saying</c><01:27:38.320><c> the</c><01:27:38.560><c> compiler</c><01:27:39.120><c> would</c><01:27:39.280><c> pick</c>

01:27:39.590 --> 01:27:39.600 align:start position:0%
so you're saying the compiler would pick
 

01:27:39.600 --> 01:27:41.750 align:start position:0%
so you're saying the compiler would pick
up<01:27:39.920><c> on</c><01:27:40.159><c> the</c><01:27:40.320><c> fact</c><01:27:40.560><c> that</c><01:27:40.719><c> we</c><01:27:40.880><c> just</c><01:27:41.120><c> put</c><01:27:41.280><c> that</c>

01:27:41.750 --> 01:27:41.760 align:start position:0%
up on the fact that we just put that
 

01:27:41.760 --> 01:27:44.070 align:start position:0%
up on the fact that we just put that
assembly<01:27:42.239><c> instruction</c><01:27:42.719><c> inside</c><01:27:43.120><c> of</c><01:27:43.199><c> there</c><01:27:43.679><c> and</c>

01:27:44.070 --> 01:27:44.080 align:start position:0%
assembly instruction inside of there and
 

01:27:44.080 --> 01:27:45.270 align:start position:0%
assembly instruction inside of there and
it<01:27:44.239><c> wouldn't</c><01:27:44.560><c> reorder</c>

01:27:45.270 --> 01:27:45.280 align:start position:0%
it wouldn't reorder
 

01:27:45.280 --> 01:27:47.189 align:start position:0%
it wouldn't reorder
any<01:27:45.440><c> of</c><01:27:45.520><c> the</c><01:27:45.600><c> memory</c><01:27:46.000><c> accesses</c><01:27:46.400><c> on</c><01:27:46.560><c> its</c><01:27:46.719><c> own</c>

01:27:47.189 --> 01:27:47.199 align:start position:0%
any of the memory accesses on its own
 

01:27:47.199 --> 01:27:48.550 align:start position:0%
any of the memory accesses on its own
sorry<01:27:47.600><c> the</c><01:27:47.760><c> the</c>

01:27:48.550 --> 01:27:48.560 align:start position:0%
sorry the the
 

01:27:48.560 --> 01:27:50.790 align:start position:0%
sorry the the
the<01:27:48.800><c> synchronize</c><01:27:49.600><c> this</c><01:27:49.840><c> this</c><01:27:50.320><c> synchronized</c>

01:27:50.790 --> 01:27:50.800 align:start position:0%
the synchronize this this synchronized
 

01:27:50.800 --> 01:27:52.550 align:start position:0%
the synchronize this this synchronized
library<01:27:51.360><c> function</c><01:27:51.600><c> is</c><01:27:51.679><c> a</c><01:27:51.760><c> library</c><01:27:52.159><c> function</c>

01:27:52.550 --> 01:27:52.560 align:start position:0%
library function is a library function
 

01:27:52.560 --> 01:27:53.750 align:start position:0%
library function is a library function
right<01:27:52.880><c> and</c><01:27:52.960><c> can</c><01:27:53.120><c> be</c><01:27:53.199><c> implemented</c><01:27:53.679><c> in</c>

01:27:53.750 --> 01:27:53.760 align:start position:0%
right and can be implemented in
 

01:27:53.760 --> 01:27:55.030 align:start position:0%
right and can be implemented in
different<01:27:54.080><c> ways</c>

01:27:55.030 --> 01:27:55.040 align:start position:0%
different ways
 

01:27:55.040 --> 01:27:56.709 align:start position:0%
different ways
uh<01:27:55.600><c> and</c><01:27:55.760><c> this</c><01:27:55.920><c> is</c><01:27:56.080><c> one</c><01:27:56.320><c> particular</c>

01:27:56.709 --> 01:27:56.719 align:start position:0%
uh and this is one particular
 

01:27:56.719 --> 01:27:58.390 align:start position:0%
uh and this is one particular
implementation

01:27:58.390 --> 01:27:58.400 align:start position:0%
implementation
 

01:27:58.400 --> 01:28:00.149 align:start position:0%
implementation
and<01:27:58.639><c> the</c><01:27:58.960><c> library</c><01:27:59.280><c> function</c><01:27:59.600><c> is</c><01:27:59.679><c> provided</c><01:28:00.000><c> by</c>

01:28:00.149 --> 01:28:00.159 align:start position:0%
and the library function is provided by
 

01:28:00.159 --> 01:28:02.310 align:start position:0%
and the library function is provided by
the<01:28:00.239><c> compiler</c>

01:28:02.310 --> 01:28:02.320 align:start position:0%
the compiler
 

01:28:02.320 --> 01:28:04.310 align:start position:0%
the compiler
so<01:28:02.639><c> uh</c><01:28:02.880><c> but</c><01:28:03.120><c> is</c><01:28:03.280><c> there</c><01:28:03.440><c> like</c><01:28:03.600><c> the</c><01:28:03.840><c> option</c><01:28:04.159><c> for</c>

01:28:04.310 --> 01:28:04.320 align:start position:0%
so uh but is there like the option for
 

01:28:04.320 --> 01:28:05.510 align:start position:0%
so uh but is there like the option for
the<01:28:04.400><c> compiler</c><01:28:04.960><c> to</c><01:28:05.120><c> do</c>

01:28:05.510 --> 01:28:05.520 align:start position:0%
the compiler to do
 

01:28:05.520 --> 01:28:08.070 align:start position:0%
the compiler to do
optimization<01:28:06.320><c> where</c><01:28:06.560><c> it</c><01:28:06.880><c> itself</c><01:28:07.360><c> moves</c><01:28:07.760><c> the</c>

01:28:08.070 --> 01:28:08.080 align:start position:0%
optimization where it itself moves the
 

01:28:08.080 --> 01:28:10.470 align:start position:0%
optimization where it itself moves the
loads<01:28:08.400><c> and</c><01:28:08.560><c> stores</c><01:28:08.880><c> around</c>

01:28:10.470 --> 01:28:10.480 align:start position:0%
loads and stores around
 

01:28:10.480 --> 01:28:12.950 align:start position:0%
loads and stores around
uh<01:28:10.719><c> yes</c><01:28:11.280><c> compilers</c><01:28:11.760><c> do</c><01:28:12.400><c> so</c><01:28:12.560><c> how</c><01:28:12.719><c> do</c><01:28:12.800><c> you</c>

01:28:12.950 --> 01:28:12.960 align:start position:0%
uh yes compilers do so how do you
 

01:28:12.960 --> 01:28:13.510 align:start position:0%
uh yes compilers do so how do you
prevent

01:28:13.510 --> 01:28:13.520 align:start position:0%
prevent
 

01:28:13.520 --> 01:28:15.270 align:start position:0%
prevent
that<01:28:13.920><c> without</c><01:28:14.400><c> emitting</c><01:28:14.800><c> defense</c>

01:28:15.270 --> 01:28:15.280 align:start position:0%
that without emitting defense
 

01:28:15.280 --> 01:28:16.790 align:start position:0%
that without emitting defense
instruction<01:28:16.000><c> that's</c><01:28:16.159><c> what</c><01:28:16.239><c> i</c><01:28:16.320><c> was</c><01:28:16.480><c> curious</c>

01:28:16.790 --> 01:28:16.800 align:start position:0%
instruction that's what i was curious
 

01:28:16.800 --> 01:28:17.350 align:start position:0%
instruction that's what i was curious
about

01:28:17.350 --> 01:28:17.360 align:start position:0%
about
 

01:28:17.360 --> 01:28:20.870 align:start position:0%
about
i<01:28:17.440><c> guess</c><01:28:17.760><c> what</c><01:28:17.920><c> i'm</c><01:28:18.239><c> saying</c><01:28:18.560><c> is</c><01:28:18.719><c> that</c><01:28:18.960><c> uh</c><01:28:19.760><c> uh</c>

01:28:20.870 --> 01:28:20.880 align:start position:0%
i guess what i'm saying is that uh uh
 

01:28:20.880 --> 01:28:22.870 align:start position:0%
i guess what i'm saying is that uh uh
maybe<01:28:21.360><c> uh</c><01:28:22.159><c> what</c><01:28:22.320><c> i'm</c><01:28:22.480><c> saying</c><01:28:22.639><c> is</c><01:28:22.800><c> that</c>

01:28:22.870 --> 01:28:22.880 align:start position:0%
maybe uh what i'm saying is that
 

01:28:22.880 --> 01:28:24.470 align:start position:0%
maybe uh what i'm saying is that
basically<01:28:23.280><c> the</c>

01:28:24.470 --> 01:28:24.480 align:start position:0%
basically the
 

01:28:24.480 --> 01:28:26.310 align:start position:0%
basically the
this<01:28:24.719><c> indication</c><01:28:25.280><c> the</c><01:28:25.520><c> sync</c><01:28:25.760><c> synchronized</c>

01:28:26.310 --> 01:28:26.320 align:start position:0%
this indication the sync synchronized
 

01:28:26.320 --> 01:28:27.590 align:start position:0%
this indication the sync synchronized
basically<01:28:26.639><c> both</c><01:28:26.880><c> tells</c><01:28:27.120><c> the</c><01:28:27.199><c> compiler</c><01:28:27.520><c> and</c>

01:28:27.590 --> 01:28:27.600 align:start position:0%
basically both tells the compiler and
 

01:28:27.600 --> 01:28:27.990 align:start position:0%
basically both tells the compiler and
hardware

01:28:27.990 --> 01:28:28.000 align:start position:0%
hardware
 

01:28:28.000 --> 01:28:28.950 align:start position:0%
hardware
but<01:28:28.080><c> the</c><01:28:28.159><c> compiler</c><01:28:28.639><c> could</c><01:28:28.800><c> actually</c>

01:28:28.950 --> 01:28:28.960 align:start position:0%
but the compiler could actually
 

01:28:28.960 --> 01:28:30.390 align:start position:0%
but the compiler could actually
implement<01:28:29.360><c> sync</c><01:28:29.600><c> increment</c><01:28:29.920><c> synchronized</c>

01:28:30.390 --> 01:28:30.400 align:start position:0%
implement sync increment synchronized
 

01:28:30.400 --> 01:28:31.669 align:start position:0%
implement sync increment synchronized
differently<01:28:30.800><c> it</c><01:28:30.960><c> knows</c><01:28:31.280><c> that</c><01:28:31.440><c> they</c><01:28:31.520><c> can't</c>

01:28:31.669 --> 01:28:31.679 align:start position:0%
differently it knows that they can't
 

01:28:31.679 --> 01:28:32.709 align:start position:0%
differently it knows that they can't
move<01:28:31.920><c> things</c><01:28:32.159><c> around</c>

01:28:32.709 --> 01:28:32.719 align:start position:0%
move things around
 

01:28:32.719 --> 01:28:34.149 align:start position:0%
move things around
but<01:28:32.960><c> it</c><01:28:33.040><c> doesn't</c><01:28:33.280><c> have</c><01:28:33.440><c> to</c><01:28:33.520><c> issue</c><01:28:33.760><c> a</c><01:28:33.920><c> fence</c>

01:28:34.149 --> 01:28:34.159 align:start position:0%
but it doesn't have to issue a fence
 

01:28:34.159 --> 01:28:36.149 align:start position:0%
but it doesn't have to issue a fence
instruction<01:28:34.639><c> on</c><01:28:34.719><c> the</c><01:28:34.800><c> risk</c><01:28:35.040><c> 5</c><01:28:35.280><c> it</c><01:28:35.600><c> knew</c>

01:28:36.149 --> 01:28:36.159 align:start position:0%
instruction on the risk 5 it knew
 

01:28:36.159 --> 01:28:37.669 align:start position:0%
instruction on the risk 5 it knew
that<01:28:36.400><c> it</c><01:28:36.480><c> was</c><01:28:36.639><c> running</c><01:28:36.960><c> in</c><01:28:37.040><c> a</c><01:28:37.120><c> particular</c><01:28:37.440><c> way</c>

01:28:37.669 --> 01:28:37.679 align:start position:0%
that it was running in a particular way
 

01:28:37.679 --> 01:28:41.990 align:start position:0%
that it was running in a particular way
on<01:28:37.760><c> risk</c><01:28:40.840><c> 5.</c>

01:28:41.990 --> 01:28:42.000 align:start position:0%
on risk 5.
 

01:28:42.000 --> 01:28:45.510 align:start position:0%
on risk 5.
uh<01:28:42.719><c> but</c><01:28:42.960><c> isn't</c><01:28:43.280><c> the</c><01:28:43.520><c> risk</c><01:28:43.840><c> five</c><01:28:44.800><c> memory</c><01:28:45.199><c> model</c>

01:28:45.510 --> 01:28:45.520 align:start position:0%
uh but isn't the risk five memory model
 

01:28:45.520 --> 01:28:47.270 align:start position:0%
uh but isn't the risk five memory model
like<01:28:45.760><c> loose</c><01:28:46.000><c> enough</c><01:28:46.400><c> to</c><01:28:46.560><c> where</c><01:28:46.800><c> the</c><01:28:46.960><c> out</c><01:28:47.120><c> of</c>

01:28:47.270 --> 01:28:47.280 align:start position:0%
like loose enough to where the out of
 

01:28:47.280 --> 01:28:48.070 align:start position:0%
like loose enough to where the out of
order

01:28:48.070 --> 01:28:48.080 align:start position:0%
order
 

01:28:48.080 --> 01:28:50.950 align:start position:0%
order
machinery<01:28:48.639><c> could</c><01:28:48.880><c> reorganize</c><01:28:49.679><c> stuff</c><01:28:50.159><c> so</c><01:28:50.560><c> you</c>

01:28:50.950 --> 01:28:50.960 align:start position:0%
machinery could reorganize stuff so you
 

01:28:50.960 --> 01:28:53.750 align:start position:0%
machinery could reorganize stuff so you
do<01:28:51.199><c> need</c><01:28:51.440><c> like</c><01:28:51.679><c> the</c><01:28:51.840><c> acquire</c>

01:28:53.750 --> 01:28:53.760 align:start position:0%
do need like the acquire
 

01:28:53.760 --> 01:28:55.750 align:start position:0%
do need like the acquire
like<01:28:54.000><c> the</c><01:28:54.080><c> whole</c><01:28:54.239><c> point</c><01:28:54.480><c> of</c><01:28:54.639><c> having</c><01:28:55.199><c> okay</c><01:28:55.600><c> okay</c>

01:28:55.750 --> 01:28:55.760 align:start position:0%
like the whole point of having okay okay
 

01:28:55.760 --> 01:28:57.270 align:start position:0%
like the whole point of having okay okay
so<01:28:56.480><c> they're</c><01:28:56.719><c> more</c>

01:28:57.270 --> 01:28:57.280 align:start position:0%
so they're more
 

01:28:57.280 --> 01:29:00.709 align:start position:0%
so they're more
uh<01:28:59.280><c> they're</c><01:28:59.520><c> more</c><01:28:59.679><c> complicated</c><01:29:00.320><c> interfaces</c>

01:29:00.709 --> 01:29:00.719 align:start position:0%
uh they're more complicated interfaces
 

01:29:00.719 --> 01:29:01.110 align:start position:0%
uh they're more complicated interfaces
than

01:29:01.110 --> 01:29:01.120 align:start position:0%
than
 

01:29:01.120 --> 01:29:04.470 align:start position:0%
than
seeing<01:29:01.360><c> synchronized</c><01:29:02.880><c> uh</c><01:29:03.600><c> and</c><01:29:04.080><c> which</c><01:29:04.320><c> gives</c>

01:29:04.470 --> 01:29:04.480 align:start position:0%
seeing synchronized uh and which gives
 

01:29:04.480 --> 01:29:05.590 align:start position:0%
seeing synchronized uh and which gives
the<01:29:04.560><c> compiler</c><01:29:05.040><c> writer</c>

01:29:05.590 --> 01:29:05.600 align:start position:0%
the compiler writer
 

01:29:05.600 --> 01:29:07.189 align:start position:0%
the compiler writer
more<01:29:05.840><c> it</c><01:29:05.920><c> gives</c><01:29:06.159><c> the</c><01:29:06.560><c> programming</c><01:29:06.960><c> more</c>

01:29:07.189 --> 01:29:07.199 align:start position:0%
more it gives the programming more
 

01:29:07.199 --> 01:29:08.709 align:start position:0%
more it gives the programming more
freedom<01:29:07.600><c> and</c><01:29:07.679><c> will</c><01:29:07.840><c> give</c><01:29:08.000><c> the</c><01:29:08.080><c> compiler</c>

01:29:08.709 --> 01:29:08.719 align:start position:0%
freedom and will give the compiler
 

01:29:08.719 --> 01:29:10.629 align:start position:0%
freedom and will give the compiler
and<01:29:09.040><c> sort</c><01:29:09.199><c> decouple</c><01:29:09.679><c> the</c><01:29:09.760><c> compiler</c><01:29:10.239><c> part</c><01:29:10.480><c> and</c>

01:29:10.629 --> 01:29:10.639 align:start position:0%
and sort decouple the compiler part and
 

01:29:10.639 --> 01:29:12.950 align:start position:0%
and sort decouple the compiler part and
the<01:29:10.800><c> processor</c><01:29:11.280><c> part</c>

01:29:12.950 --> 01:29:12.960 align:start position:0%
the processor part
 

01:29:12.960 --> 01:29:14.390 align:start position:0%
the processor part
so<01:29:13.199><c> for</c><01:29:13.360><c> example</c><01:29:13.600><c> i</c><01:29:13.679><c> think</c><01:29:13.840><c> there's</c><01:29:14.080><c> a</c><01:29:14.159><c> flag</c>

01:29:14.390 --> 01:29:14.400 align:start position:0%
so for example i think there's a flag
 

01:29:14.400 --> 01:29:15.830 align:start position:0%
so for example i think there's a flag
that<01:29:14.560><c> you</c><01:29:14.639><c> can</c><01:29:14.800><c> pass</c><01:29:15.040><c> in</c><01:29:15.280><c> you</c><01:29:15.360><c> know</c><01:29:15.520><c> to</c><01:29:15.679><c> say</c>

01:29:15.830 --> 01:29:15.840 align:start position:0%
that you can pass in you know to say
 

01:29:15.840 --> 01:29:17.430 align:start position:0%
that you can pass in you know to say
that<01:29:16.000><c> this</c><01:29:16.159><c> is</c><01:29:16.239><c> a</c><01:29:16.239><c> release</c><01:29:16.560><c> consistent</c>

01:29:17.430 --> 01:29:17.440 align:start position:0%
that this is a release consistent
 

01:29:17.440 --> 01:29:20.709 align:start position:0%
that this is a release consistent
uh<01:29:18.400><c> synchronize</c><01:29:20.000><c> uh</c>

01:29:20.709 --> 01:29:20.719 align:start position:0%
uh synchronize uh
 

01:29:20.719 --> 01:29:22.470 align:start position:0%
uh synchronize uh
you<01:29:20.880><c> know</c><01:29:21.040><c> i</c><01:29:21.199><c> i</c><01:29:21.440><c> don't</c><01:29:21.600><c> know</c><01:29:22.000><c> the</c><01:29:22.080><c> details</c>

01:29:22.470 --> 01:29:22.480 align:start position:0%
you know i i don't know the details
 

01:29:22.480 --> 01:29:23.830 align:start position:0%
you know i i don't know the details
right<01:29:22.719><c> of</c><01:29:22.800><c> my</c><01:29:22.960><c> head</c>

01:29:23.830 --> 01:29:23.840 align:start position:0%
right of my head
 

01:29:23.840 --> 01:29:26.390 align:start position:0%
right of my head
but<01:29:24.080><c> if</c><01:29:24.159><c> you</c><01:29:24.239><c> look</c><01:29:24.480><c> into</c><01:29:24.639><c> this</c><01:29:26.000><c> this</c><01:29:26.159><c> is</c><01:29:26.239><c> sort</c>

01:29:26.390 --> 01:29:26.400 align:start position:0%
but if you look into this this is sort
 

01:29:26.400 --> 01:29:27.669 align:start position:0%
but if you look into this this is sort
of<01:29:26.480><c> the</c><01:29:26.560><c> coarse</c><01:29:26.800><c> grained</c><01:29:27.199><c> interface</c><01:29:27.600><c> and</c>

01:29:27.669 --> 01:29:27.679 align:start position:0%
of the coarse grained interface and
 

01:29:27.679 --> 01:29:29.030 align:start position:0%
of the coarse grained interface and
there<01:29:27.760><c> are</c><01:29:27.840><c> more</c><01:29:28.000><c> fine-grained</c><01:29:28.560><c> interfaces</c>

01:29:29.030 --> 01:29:29.040 align:start position:0%
there are more fine-grained interfaces
 

01:29:29.040 --> 01:29:31.270 align:start position:0%
there are more fine-grained interfaces
that<01:29:29.199><c> give</c><01:29:29.360><c> the</c><01:29:29.440><c> programmer</c><01:29:29.840><c> more</c><01:29:30.000><c> control</c>

01:29:31.270 --> 01:29:31.280 align:start position:0%
that give the programmer more control
 

01:29:31.280 --> 01:29:35.910 align:start position:0%
that give the programmer more control
okay<01:29:32.719><c> thank</c><01:29:32.880><c> you</c>

01:29:35.910 --> 01:29:35.920 align:start position:0%
 
 

01:29:35.920 --> 01:29:39.350 align:start position:0%
 
i<01:29:36.080><c> have</c><01:29:36.320><c> a</c><01:29:36.639><c> question</c><01:29:37.520><c> one</c><01:29:37.760><c> is</c><01:29:38.400><c> um</c>

01:29:39.350 --> 01:29:39.360 align:start position:0%
i have a question one is um
 

01:29:39.360 --> 01:29:42.310 align:start position:0%
i have a question one is um
how<01:29:39.520><c> do</c><01:29:39.679><c> you</c><01:29:40.000><c> like</c><01:29:40.320><c> for</c><01:29:41.040><c> having</c><01:29:41.840><c> multiple</c>

01:29:42.310 --> 01:29:42.320 align:start position:0%
how do you like for having multiple
 

01:29:42.320 --> 01:29:43.350 align:start position:0%
how do you like for having multiple
threads<01:29:42.719><c> on</c><01:29:42.800><c> one</c>

01:29:43.350 --> 01:29:43.360 align:start position:0%
threads on one
 

01:29:43.360 --> 01:29:45.750 align:start position:0%
threads on one
processor<01:29:44.239><c> do</c><01:29:44.320><c> you</c><01:29:44.560><c> argue</c><01:29:45.040><c> in</c><01:29:45.280><c> roughly</c><01:29:45.679><c> the</c>

01:29:45.750 --> 01:29:45.760 align:start position:0%
processor do you argue in roughly the
 

01:29:45.760 --> 01:29:46.390 align:start position:0%
processor do you argue in roughly the
same<01:29:46.000><c> way</c>

01:29:46.390 --> 01:29:46.400 align:start position:0%
same way
 

01:29:46.400 --> 01:29:50.870 align:start position:0%
same way
as<01:29:46.800><c> we</c><01:29:46.960><c> did</c><01:29:47.199><c> for</c><01:29:47.760><c> multiple</c><01:29:49.120><c> processors</c>

01:29:50.870 --> 01:29:50.880 align:start position:0%
as we did for multiple processors
 

01:29:50.880 --> 01:29:54.390 align:start position:0%
as we did for multiple processors
uh<01:29:52.560><c> so</c><01:29:53.199><c> can</c><01:29:53.360><c> you</c><01:29:53.440><c> repeat</c><01:29:53.760><c> that</c><01:29:53.840><c> question</c><01:29:54.159><c> just</c>

01:29:54.390 --> 01:29:54.400 align:start position:0%
uh so can you repeat that question just
 

01:29:54.400 --> 01:29:56.149 align:start position:0%
uh so can you repeat that question just
to<01:29:54.480><c> make</c><01:29:54.560><c> sure</c><01:29:54.719><c> i</c><01:29:54.880><c> uh</c>

01:29:56.149 --> 01:29:56.159 align:start position:0%
to make sure i uh
 

01:29:56.159 --> 01:29:59.189 align:start position:0%
to make sure i uh
um<01:29:56.639><c> so</c><01:29:57.120><c> we</c><01:29:57.280><c> didn't</c><01:29:58.080><c> i</c><01:29:58.320><c> think</c><01:29:58.639><c> i</c><01:29:58.719><c> don't</c><01:29:58.880><c> think</c><01:29:59.040><c> we</c>

01:29:59.189 --> 01:29:59.199 align:start position:0%
um so we didn't i think i don't think we
 

01:29:59.199 --> 01:30:01.750 align:start position:0%
um so we didn't i think i don't think we
really<01:29:59.440><c> talked</c><01:29:59.760><c> about</c><01:30:00.000><c> multiple</c><01:30:00.560><c> threads</c><01:30:01.120><c> we</c>

01:30:01.750 --> 01:30:01.760 align:start position:0%
really talked about multiple threads we
 

01:30:01.760 --> 01:30:04.790 align:start position:0%
really talked about multiple threads we
mostly<01:30:02.080><c> talked</c><01:30:02.320><c> about</c><01:30:02.480><c> multiple</c><01:30:02.880><c> cpus</c><01:30:04.159><c> so</c>

01:30:04.790 --> 01:30:04.800 align:start position:0%
mostly talked about multiple cpus so
 

01:30:04.800 --> 01:30:08.390 align:start position:0%
mostly talked about multiple cpus so
for<01:30:05.199><c> multiple</c><01:30:05.600><c> threads</c><01:30:06.480><c> is</c><01:30:07.040><c> the</c><01:30:07.679><c> um</c><01:30:08.000><c> i</c><01:30:08.159><c> guess</c>

01:30:08.390 --> 01:30:08.400 align:start position:0%
for multiple threads is the um i guess
 

01:30:08.400 --> 01:30:09.990 align:start position:0%
for multiple threads is the um i guess
the<01:30:08.560><c> solution</c>

01:30:09.990 --> 01:30:10.000 align:start position:0%
the solution
 

01:30:10.000 --> 01:30:13.189 align:start position:0%
the solution
the<01:30:10.159><c> same</c><01:30:10.800><c> as</c><01:30:11.760><c> for</c><01:30:12.320><c> when</c><01:30:12.480><c> you</c><01:30:12.560><c> have</c><01:30:12.880><c> multiple</c>

01:30:13.189 --> 01:30:13.199 align:start position:0%
the same as for when you have multiple
 

01:30:13.199 --> 01:30:14.470 align:start position:0%
the same as for when you have multiple
cpus<01:30:13.679><c> like</c><01:30:13.920><c> do</c><01:30:14.080><c> you</c>

01:30:14.470 --> 01:30:14.480 align:start position:0%
cpus like do you
 

01:30:14.480 --> 01:30:17.270 align:start position:0%
cpus like do you
have<01:30:14.719><c> the</c><01:30:14.800><c> same</c><01:30:15.040><c> arguments</c><01:30:15.600><c> there</c><01:30:16.880><c> more</c><01:30:17.120><c> or</c>

01:30:17.270 --> 01:30:17.280 align:start position:0%
have the same arguments there more or
 

01:30:17.280 --> 01:30:17.830 align:start position:0%
have the same arguments there more or
less

01:30:17.830 --> 01:30:17.840 align:start position:0%
less
 

01:30:17.840 --> 01:30:19.669 align:start position:0%
less
uh<01:30:18.400><c> at</c><01:30:18.560><c> least</c><01:30:18.800><c> conceptually</c><01:30:19.360><c> is</c><01:30:19.440><c> the</c><01:30:19.520><c> right</c>

01:30:19.669 --> 01:30:19.679 align:start position:0%
uh at least conceptually is the right
 

01:30:19.679 --> 01:30:21.350 align:start position:0%
uh at least conceptually is the right
way<01:30:19.840><c> to</c><01:30:19.920><c> think</c><01:30:20.159><c> about</c><01:30:20.400><c> it</c><01:30:20.639><c> uh</c>

01:30:21.350 --> 01:30:21.360 align:start position:0%
way to think about it uh
 

01:30:21.360 --> 01:30:23.430 align:start position:0%
way to think about it uh
so<01:30:21.520><c> if</c><01:30:21.679><c> you</c><01:30:21.760><c> have</c><01:30:21.920><c> multiple</c><01:30:22.320><c> threads</c><01:30:23.040><c> but</c><01:30:23.199><c> only</c>

01:30:23.430 --> 01:30:23.440 align:start position:0%
so if you have multiple threads but only
 

01:30:23.440 --> 01:30:24.870 align:start position:0%
so if you have multiple threads but only
one<01:30:23.679><c> cpu</c>

01:30:24.870 --> 01:30:24.880 align:start position:0%
one cpu
 

01:30:24.880 --> 01:30:26.870 align:start position:0%
one cpu
uh<01:30:25.679><c> it's</c><01:30:25.840><c> still</c><01:30:26.000><c> the</c><01:30:26.159><c> case</c><01:30:26.400><c> that</c><01:30:26.560><c> you</c><01:30:26.639><c> want</c><01:30:26.800><c> to</c>

01:30:26.870 --> 01:30:26.880 align:start position:0%
uh it's still the case that you want to
 

01:30:26.880 --> 01:30:28.629 align:start position:0%
uh it's still the case that you want to
ensure<01:30:27.199><c> that</c><01:30:27.360><c> certain</c><01:30:27.760><c> uh</c>

01:30:28.629 --> 01:30:28.639 align:start position:0%
ensure that certain uh
 

01:30:28.639 --> 01:30:30.229 align:start position:0%
ensure that certain uh
kernel<01:30:28.960><c> code</c><01:30:29.120><c> sequences</c><01:30:29.600><c> are</c><01:30:29.760><c> executed</c>

01:30:30.229 --> 01:30:30.239 align:start position:0%
kernel code sequences are executed
 

01:30:30.239 --> 01:30:32.390 align:start position:0%
kernel code sequences are executed
atomically

01:30:32.390 --> 01:30:32.400 align:start position:0%
atomically
 

01:30:32.400 --> 01:30:34.550 align:start position:0%
atomically
and<01:30:32.880><c> so</c><01:30:33.280><c> you</c><01:30:33.440><c> still</c><01:30:33.679><c> have</c><01:30:33.840><c> to</c><01:30:34.080><c> have</c><01:30:34.239><c> a</c><01:30:34.320><c> notion</c>

01:30:34.550 --> 01:30:34.560 align:start position:0%
and so you still have to have a notion
 

01:30:34.560 --> 01:30:35.990 align:start position:0%
and so you still have to have a notion
of<01:30:34.639><c> critical</c><01:30:34.960><c> sections</c>

01:30:35.990 --> 01:30:36.000 align:start position:0%
of critical sections
 

01:30:36.000 --> 01:30:39.030 align:start position:0%
of critical sections
uh<01:30:36.960><c> you</c><01:30:37.120><c> might</c><01:30:37.280><c> not</c><01:30:37.520><c> need</c><01:30:37.840><c> locks</c><01:30:38.320><c> or</c><01:30:38.560><c> releases</c>

01:30:39.030 --> 01:30:39.040 align:start position:0%
uh you might not need locks or releases
 

01:30:39.040 --> 01:30:40.950 align:start position:0%
uh you might not need locks or releases
explicitly<01:30:39.679><c> but</c><01:30:39.840><c> you</c><01:30:39.920><c> do</c><01:30:40.159><c> need</c><01:30:40.320><c> a</c><01:30:40.400><c> way</c><01:30:40.639><c> of</c>

01:30:40.950 --> 01:30:40.960 align:start position:0%
explicitly but you do need a way of
 

01:30:40.960 --> 01:30:42.709 align:start position:0%
explicitly but you do need a way of
turning<01:30:41.280><c> on</c><01:30:41.440><c> interrupts</c><01:30:41.920><c> off</c><01:30:42.080><c> and</c><01:30:42.239><c> on</c><01:30:42.480><c> in</c><01:30:42.639><c> a</c>

01:30:42.709 --> 01:30:42.719 align:start position:0%
turning on interrupts off and on in a
 

01:30:42.719 --> 01:30:44.870 align:start position:0%
turning on interrupts off and on in a
particular<01:30:43.040><c> piece</c><01:30:43.280><c> of</c><01:30:43.440><c> code</c>

01:30:44.870 --> 01:30:44.880 align:start position:0%
particular piece of code
 

01:30:44.880 --> 01:30:47.750 align:start position:0%
particular piece of code
so<01:30:45.040><c> if</c><01:30:45.199><c> you</c><01:30:45.280><c> look</c><01:30:45.520><c> at</c><01:30:46.400><c> older</c><01:30:47.120><c> operating</c><01:30:47.520><c> system</c>

01:30:47.750 --> 01:30:47.760 align:start position:0%
so if you look at older operating system
 

01:30:47.760 --> 01:30:49.830 align:start position:0%
so if you look at older operating system
kernels<01:30:48.320><c> they</c><01:30:48.480><c> typically</c><01:30:48.880><c> don't</c><01:30:49.120><c> have</c><01:30:49.440><c> really</c>

01:30:49.830 --> 01:30:49.840 align:start position:0%
kernels they typically don't have really
 

01:30:49.840 --> 01:30:51.270 align:start position:0%
kernels they typically don't have really
lock<01:30:50.080><c> and</c><01:30:50.239><c> acquire</c>

01:30:51.270 --> 01:30:51.280 align:start position:0%
lock and acquire
 

01:30:51.280 --> 01:30:53.030 align:start position:0%
lock and acquire
uh<01:30:51.679><c> in</c><01:30:51.840><c> the</c><01:30:51.920><c> kernel</c><01:30:52.320><c> because</c><01:30:52.480><c> they</c><01:30:52.719><c> assume</c>

01:30:53.030 --> 01:30:53.040 align:start position:0%
uh in the kernel because they assume
 

01:30:53.040 --> 01:30:54.790 align:start position:0%
uh in the kernel because they assume
they're<01:30:53.280><c> running</c><01:30:53.520><c> on</c><01:30:53.600><c> a</c><01:30:53.679><c> single</c><01:30:54.000><c> processor</c>

01:30:54.790 --> 01:30:54.800 align:start position:0%
they're running on a single processor
 

01:30:54.800 --> 01:30:56.470 align:start position:0%
they're running on a single processor
but<01:30:54.960><c> they</c><01:30:55.120><c> do</c><01:30:55.360><c> have</c><01:30:55.600><c> something</c><01:30:55.920><c> like</c><01:30:56.159><c> locks</c>

01:30:56.470 --> 01:30:56.480 align:start position:0%
but they do have something like locks
 

01:30:56.480 --> 01:30:58.070 align:start position:0%
but they do have something like locks
you<01:30:56.639><c> know</c><01:30:56.800><c> to</c><01:30:57.120><c> basically</c><01:30:57.520><c> turn</c><01:30:57.840><c> off</c>

01:30:58.070 --> 01:30:58.080 align:start position:0%
you know to basically turn off
 

01:30:58.080 --> 01:31:03.590 align:start position:0%
you know to basically turn off
interrupts<01:30:58.639><c> and</c><01:30:59.120><c> interrupts</c><01:31:00.320><c> on</c><01:31:00.560><c> and</c><01:31:00.840><c> off</c>

01:31:03.590 --> 01:31:03.600 align:start position:0%
interrupts and interrupts on and off
 

01:31:03.600 --> 01:31:06.629 align:start position:0%
interrupts and interrupts on and off
okay<01:31:03.920><c> i</c><01:31:04.159><c> see</c><01:31:04.880><c> um</c><01:31:05.199><c> and</c><01:31:05.280><c> my</c><01:31:05.520><c> other</c><01:31:05.760><c> question</c>

01:31:06.629 --> 01:31:06.639 align:start position:0%
okay i see um and my other question
 

01:31:06.639 --> 01:31:09.990 align:start position:0%
okay i see um and my other question
was<01:31:07.280><c> um</c><01:31:07.840><c> actually</c><01:31:08.320><c> on</c><01:31:08.400><c> the</c><01:31:08.560><c> slide</c><01:31:09.120><c> with</c>

01:31:09.990 --> 01:31:10.000 align:start position:0%
was um actually on the slide with
 

01:31:10.000 --> 01:31:13.189 align:start position:0%
was um actually on the slide with
um<01:31:10.639><c> the</c><01:31:11.360><c> yard</c><01:31:12.080><c> picture</c>

01:31:13.189 --> 01:31:13.199 align:start position:0%
um the yard picture
 

01:31:13.199 --> 01:31:17.830 align:start position:0%
um the yard picture
the<01:31:14.000><c> buffer</c><01:31:15.520><c> um</c>

01:31:17.830 --> 01:31:17.840 align:start position:0%
the buffer um
 

01:31:17.840 --> 01:31:20.709 align:start position:0%
the buffer um
yeah<01:31:18.400><c> is</c><01:31:18.560><c> it</c><01:31:18.719><c> yeah</c><01:31:19.199><c> that</c><01:31:19.360><c> one</c><01:31:19.840><c> is</c><01:31:20.080><c> it</c><01:31:20.400><c> always</c>

01:31:20.709 --> 01:31:20.719 align:start position:0%
yeah is it yeah that one is it always
 

01:31:20.719 --> 01:31:21.669 align:start position:0%
yeah is it yeah that one is it always
the<01:31:20.880><c> case</c><01:31:21.199><c> that</c>

01:31:21.669 --> 01:31:21.679 align:start position:0%
the case that
 

01:31:21.679 --> 01:31:25.189 align:start position:0%
the case that
the<01:31:22.239><c> read</c><01:31:22.719><c> is</c><01:31:22.880><c> going</c><01:31:23.199><c> to</c><01:31:23.360><c> be</c><01:31:24.000><c> um</c><01:31:24.320><c> like</c><01:31:24.639><c> lagging</c>

01:31:25.189 --> 01:31:25.199 align:start position:0%
the read is going to be um like lagging
 

01:31:25.199 --> 01:31:25.750 align:start position:0%
the read is going to be um like lagging
behind

01:31:25.750 --> 01:31:25.760 align:start position:0%
behind
 

01:31:25.760 --> 01:31:27.990 align:start position:0%
behind
i<01:31:25.840><c> didn't</c><01:31:26.080><c> understand</c><01:31:26.560><c> that</c><01:31:27.199><c> yeah</c><01:31:27.520><c> okay</c><01:31:27.760><c> so</c>

01:31:27.990 --> 01:31:28.000 align:start position:0%
i didn't understand that yeah okay so
 

01:31:28.000 --> 01:31:29.270 align:start position:0%
i didn't understand that yeah okay so
the<01:31:28.159><c> the</c>

01:31:29.270 --> 01:31:29.280 align:start position:0%
the the
 

01:31:29.280 --> 01:31:30.629 align:start position:0%
the the
so<01:31:29.440><c> this</c><01:31:29.679><c> goes</c><01:31:29.840><c> to</c><01:31:30.000><c> the</c><01:31:30.080><c> display</c><01:31:30.480><c> yeah</c>

01:31:30.629 --> 01:31:30.639 align:start position:0%
so this goes to the display yeah
 

01:31:30.639 --> 01:31:32.229 align:start position:0%
so this goes to the display yeah
whatever<01:31:30.960><c> is</c><01:31:31.120><c> in</c><01:31:31.199><c> this</c><01:31:31.679><c> you</c><01:31:31.840><c> know</c><01:31:31.920><c> basically</c>

01:31:32.229 --> 01:31:32.239 align:start position:0%
whatever is in this you know basically
 

01:31:32.239 --> 01:31:33.510 align:start position:0%
whatever is in this you know basically
this<01:31:32.400><c> is</c><01:31:32.480><c> the</c><01:31:32.560><c> sequence</c><01:31:32.960><c> of</c><01:31:33.040><c> characters</c><01:31:33.440><c> that</c>

01:31:33.510 --> 01:31:33.520 align:start position:0%
this is the sequence of characters that
 

01:31:33.520 --> 01:31:36.709 align:start position:0%
this is the sequence of characters that
needs<01:31:33.679><c> to</c><01:31:33.760><c> go</c><01:31:33.920><c> to</c><01:31:34.080><c> the</c><01:31:34.159><c> display</c>

01:31:36.709 --> 01:31:36.719 align:start position:0%
 
 

01:31:36.719 --> 01:31:38.629 align:start position:0%
 
and<01:31:37.360><c> and</c><01:31:37.600><c> the</c><01:31:37.760><c> writer</c><01:31:38.159><c> basically</c><01:31:38.560><c> is</c>

01:31:38.629 --> 01:31:38.639 align:start position:0%
and and the writer basically is
 

01:31:38.639 --> 01:31:41.750 align:start position:0%
and and the writer basically is
appending<01:31:39.120><c> more</c><01:31:39.280><c> and</c><01:31:39.360><c> more</c><01:31:39.520><c> more</c><01:31:39.760><c> characters</c>

01:31:41.750 --> 01:31:41.760 align:start position:0%
appending more and more more characters
 

01:31:41.760 --> 01:31:44.550 align:start position:0%
appending more and more more characters
right<01:31:42.080><c> and</c><01:31:42.320><c> so</c><01:31:43.199><c> uh</c><01:31:43.679><c> so</c><01:31:43.840><c> the</c><01:31:44.000><c> writer</c><01:31:44.320><c> is</c><01:31:44.400><c> going</c>

01:31:44.550 --> 01:31:44.560 align:start position:0%
right and so uh so the writer is going
 

01:31:44.560 --> 01:31:45.189 align:start position:0%
right and so uh so the writer is going
that<01:31:44.800><c> way</c>

01:31:45.189 --> 01:31:45.199 align:start position:0%
that way
 

01:31:45.199 --> 01:31:46.790 align:start position:0%
that way
and<01:31:45.600><c> basically</c><01:31:46.000><c> the</c><01:31:46.080><c> readers</c><01:31:46.560><c> you</c><01:31:46.639><c> know</c>

01:31:46.790 --> 01:31:46.800 align:start position:0%
and basically the readers you know
 

01:31:46.800 --> 01:31:48.629 align:start position:0%
and basically the readers you know
following<01:31:47.280><c> the</c><01:31:47.440><c> writer</c><01:31:48.000><c> right</c><01:31:48.239><c> because</c><01:31:48.480><c> you</c>

01:31:48.629 --> 01:31:48.639 align:start position:0%
following the writer right because you
 

01:31:48.639 --> 01:31:49.750 align:start position:0%
following the writer right because you
know<01:31:48.719><c> can't</c><01:31:48.960><c> print</c><01:31:49.120><c> the</c><01:31:49.280><c> character</c><01:31:49.520><c> that</c>

01:31:49.750 --> 01:31:49.760 align:start position:0%
know can't print the character that
 

01:31:49.760 --> 01:31:50.310 align:start position:0%
know can't print the character that
hasn't<01:31:50.000><c> been</c>

01:31:50.310 --> 01:31:50.320 align:start position:0%
hasn't been
 

01:31:50.320 --> 01:31:53.430 align:start position:0%
hasn't been
you<01:31:50.400><c> know</c><01:31:50.560><c> put</c><01:31:50.719><c> in</c><01:31:50.880><c> the</c><01:31:50.960><c> buffer</c><01:31:51.280><c> yet</c><01:31:52.239><c> um</c><01:31:52.960><c> and</c><01:31:53.199><c> so</c>

01:31:53.430 --> 01:31:53.440 align:start position:0%
you know put in the buffer yet um and so
 

01:31:53.440 --> 01:31:53.910 align:start position:0%
you know put in the buffer yet um and so
what

01:31:53.910 --> 01:31:53.920 align:start position:0%
what
 

01:31:53.920 --> 01:31:57.189 align:start position:0%
what
you<01:31:54.000><c> know</c><01:31:54.239><c> the</c><01:31:55.040><c> the</c><01:31:55.920><c> the</c><01:31:56.159><c> uart</c><01:31:56.639><c> who</c>

01:31:57.189 --> 01:31:57.199 align:start position:0%
you know the the the uart who
 

01:31:57.199 --> 01:32:02.229 align:start position:0%
you know the the the uart who
puts<01:31:57.440><c> things</c><01:31:57.679><c> on</c><01:31:57.840><c> the</c><01:31:58.000><c> display</c>

01:32:02.229 --> 01:32:02.239 align:start position:0%
 
 

01:32:02.239 --> 01:32:04.390 align:start position:0%
 
you<01:32:02.400><c> know</c><01:32:02.560><c> we'll</c><01:32:03.280><c> you</c><01:32:03.440><c> know</c><01:32:03.600><c> start</c><01:32:04.000><c> basically</c>

01:32:04.390 --> 01:32:04.400 align:start position:0%
you know we'll you know start basically
 

01:32:04.400 --> 01:32:05.830 align:start position:0%
you know we'll you know start basically
putting<01:32:04.719><c> the</c><01:32:04.800><c> first</c><01:32:05.040><c> character</c><01:32:05.520><c> as</c><01:32:05.600><c> in</c><01:32:05.679><c> this</c>

01:32:05.830 --> 01:32:05.840 align:start position:0%
putting the first character as in this
 

01:32:05.840 --> 01:32:08.149 align:start position:0%
putting the first character as in this
slot<01:32:06.239><c> you</c><01:32:06.320><c> know</c><01:32:06.560><c> onto</c><01:32:06.880><c> the</c><01:32:07.040><c> display</c>

01:32:08.149 --> 01:32:08.159 align:start position:0%
slot you know onto the display
 

01:32:08.159 --> 01:32:09.750 align:start position:0%
slot you know onto the display
meanwhile<01:32:08.800><c> printf</c><01:32:09.120><c> could</c><01:32:09.280><c> come</c><01:32:09.520><c> in</c><01:32:09.600><c> and</c>

01:32:09.750 --> 01:32:09.760 align:start position:0%
meanwhile printf could come in and
 

01:32:09.760 --> 01:32:11.350 align:start position:0%
meanwhile printf could come in and
multiple<01:32:10.080><c> printers</c><01:32:10.400><c> come</c><01:32:10.639><c> in</c><01:32:10.800><c> that</c>

01:32:11.350 --> 01:32:11.360 align:start position:0%
multiple printers come in that
 

01:32:11.360 --> 01:32:13.189 align:start position:0%
multiple printers come in that
they<01:32:11.520><c> put</c><01:32:11.679><c> more</c><01:32:12.000><c> characters</c><01:32:12.400><c> in</c><01:32:12.560><c> here</c><01:32:12.880><c> so</c><01:32:13.040><c> that</c>

01:32:13.189 --> 01:32:13.199 align:start position:0%
they put more characters in here so that
 

01:32:13.199 --> 01:32:14.550 align:start position:0%
they put more characters in here so that
the<01:32:13.280><c> right</c><01:32:13.520><c> point</c><01:32:13.679><c> are</c><01:32:13.840><c> staying</c><01:32:14.239><c> standing</c>

01:32:14.550 --> 01:32:14.560 align:start position:0%
the right point are staying standing
 

01:32:14.560 --> 01:32:15.189 align:start position:0%
the right point are staying standing
here

01:32:15.189 --> 01:32:15.199 align:start position:0%
here
 

01:32:15.199 --> 01:32:16.629 align:start position:0%
here
and<01:32:15.280><c> then</c><01:32:15.440><c> when</c><01:32:15.600><c> this</c><01:32:15.840><c> one</c><01:32:16.080><c> character</c><01:32:16.480><c> is</c>

01:32:16.629 --> 01:32:16.639 align:start position:0%
and then when this one character is
 

01:32:16.639 --> 01:32:18.709 align:start position:0%
and then when this one character is
displayed<01:32:17.520><c> then</c><01:32:17.760><c> you</c><01:32:17.920><c> know</c><01:32:18.000><c> the</c><01:32:18.159><c> uart</c><01:32:18.560><c> will</c>

01:32:18.709 --> 01:32:18.719 align:start position:0%
displayed then you know the uart will
 

01:32:18.719 --> 01:32:20.229 align:start position:0%
displayed then you know the uart will
move<01:32:18.960><c> up</c><01:32:19.120><c> this</c><01:32:19.280><c> pointer</c>

01:32:20.229 --> 01:32:20.239 align:start position:0%
move up this pointer
 

01:32:20.239 --> 01:32:22.470 align:start position:0%
move up this pointer
to<01:32:20.400><c> display</c><01:32:20.719><c> the</c><01:32:20.800><c> next</c><01:32:21.040><c> character</c><01:32:22.159><c> right</c><01:32:22.320><c> so</c>

01:32:22.470 --> 01:32:22.480 align:start position:0%
to display the next character right so
 

01:32:22.480 --> 01:32:23.990 align:start position:0%
to display the next character right so
the<01:32:22.560><c> uart</c><01:32:22.960><c> is</c><01:32:23.040><c> always</c><01:32:23.440><c> lagging</c>

01:32:23.990 --> 01:32:24.000 align:start position:0%
the uart is always lagging
 

01:32:24.000 --> 01:32:27.350 align:start position:0%
the uart is always lagging
a<01:32:24.080><c> little</c><01:32:24.320><c> bit</c><01:32:24.480><c> behind</c><01:32:25.520><c> the</c><01:32:26.320><c> writer</c><01:32:26.960><c> until</c><01:32:27.280><c> the</c>

01:32:27.350 --> 01:32:27.360 align:start position:0%
a little bit behind the writer until the
 

01:32:27.360 --> 01:32:29.430 align:start position:0%
a little bit behind the writer until the
point<01:32:27.600><c> that</c><01:32:27.760><c> it</c><01:32:27.840><c> catches</c><01:32:28.239><c> up</c><01:32:28.480><c> right</c><01:32:28.800><c> and</c>

01:32:29.430 --> 01:32:29.440 align:start position:0%
point that it catches up right and
 

01:32:29.440 --> 01:32:31.270 align:start position:0%
point that it catches up right and
where<01:32:29.760><c> r</c><01:32:30.000><c> and</c><01:32:30.080><c> w</c><01:32:30.480><c> are</c><01:32:30.560><c> the</c><01:32:30.719><c> same</c><01:32:30.960><c> and</c><01:32:31.040><c> at</c><01:32:31.120><c> that</c>

01:32:31.270 --> 01:32:31.280 align:start position:0%
where r and w are the same and at that
 

01:32:31.280 --> 01:32:32.629 align:start position:0%
where r and w are the same and at that
point<01:32:31.520><c> basically</c><01:32:31.920><c> that</c><01:32:32.000><c> means</c><01:32:32.239><c> that</c><01:32:32.400><c> there's</c>

01:32:32.629 --> 01:32:32.639 align:start position:0%
point basically that means that there's
 

01:32:32.639 --> 01:32:35.910 align:start position:0%
point basically that means that there's
no<01:32:32.800><c> character</c><01:32:33.199><c> anymore</c><01:32:33.600><c> in</c><01:32:33.679><c> the</c><01:32:33.760><c> buffer</c>

01:32:35.910 --> 01:32:35.920 align:start position:0%
no character anymore in the buffer
 

01:32:35.920 --> 01:32:38.070 align:start position:0%
no character anymore in the buffer
oh<01:32:36.080><c> okay</c><01:32:36.400><c> i</c><01:32:36.560><c> see</c><01:32:36.800><c> that</c><01:32:36.960><c> makes</c><01:32:37.280><c> that</c><01:32:37.440><c> makes</c><01:32:38.000><c> a</c>

01:32:38.070 --> 01:32:38.080 align:start position:0%
oh okay i see that makes that makes a
 

01:32:38.080 --> 01:32:40.229 align:start position:0%
oh okay i see that makes that makes a
lot<01:32:38.239><c> more</c><01:32:38.480><c> sense</c><01:32:38.719><c> okay</c><01:32:38.960><c> thank</c><01:32:39.120><c> you</c><01:32:39.280><c> so</c><01:32:39.440><c> much</c>

01:32:40.229 --> 01:32:40.239 align:start position:0%
lot more sense okay thank you so much
 

01:32:40.239 --> 01:32:48.870 align:start position:0%
lot more sense okay thank you so much
you're<01:32:40.400><c> welcome</c><01:32:42.800><c> any</c><01:32:43.040><c> more</c><01:32:43.199><c> questions</c>

01:32:48.870 --> 01:32:48.880 align:start position:0%
 
 

01:32:48.880 --> 01:32:54.709 align:start position:0%
 
just<01:32:49.199><c> us</c><01:32:49.360><c> left</c><01:32:52.840><c> here</c><01:32:53.920><c> guys</c>

01:32:54.709 --> 01:32:54.719 align:start position:0%
just us left here guys
 

01:32:54.719 --> 01:32:57.760 align:start position:0%
just us left here guys
see<01:32:54.880><c> you</c><01:32:54.960><c> later</c>

