WEBVTT
Kind: captions
Language: en

00:00:07.600 --> 00:00:09.910 align:start position:0%
 
all<00:00:07.759><c> right</c>

00:00:09.910 --> 00:00:09.920 align:start position:0%
all right
 

00:00:09.920 --> 00:00:13.270 align:start position:0%
all right
you<00:00:10.080><c> guys</c><00:00:10.320><c> hear</c><00:00:10.559><c> me</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
 
 

00:00:13.280 --> 00:00:16.230 align:start position:0%
 
yes<00:00:14.320><c> excellent</c><00:00:14.880><c> thank</c><00:00:15.040><c> you</c><00:00:15.759><c> all</c><00:00:15.920><c> right</c><00:00:16.000><c> today</c>

00:00:16.230 --> 00:00:16.240 align:start position:0%
yes excellent thank you all right today
 

00:00:16.240 --> 00:00:17.830 align:start position:0%
yes excellent thank you all right today
i<00:00:16.320><c> want</c><00:00:16.480><c> to</c><00:00:16.560><c> talk</c><00:00:16.720><c> about</c><00:00:17.039><c> talk</c><00:00:17.279><c> mostly</c><00:00:17.600><c> about</c>

00:00:17.830 --> 00:00:17.840 align:start position:0%
i want to talk about talk mostly about
 

00:00:17.840 --> 00:00:18.710 align:start position:0%
i want to talk about talk mostly about
microkernels

00:00:18.710 --> 00:00:18.720 align:start position:0%
microkernels
 

00:00:18.720 --> 00:00:21.990 align:start position:0%
microkernels
um<00:00:20.160><c> but</c><00:00:20.320><c> but</c><00:00:20.560><c> first</c><00:00:20.800><c> a</c><00:00:20.880><c> little</c><00:00:21.119><c> bit</c><00:00:21.359><c> of</c><00:00:21.600><c> uh</c>

00:00:21.990 --> 00:00:22.000 align:start position:0%
um but but first a little bit of uh
 

00:00:22.000 --> 00:00:25.509 align:start position:0%
um but but first a little bit of uh
context<00:00:22.720><c> to</c><00:00:22.960><c> um</c><00:00:24.400><c> sort</c><00:00:24.560><c> of</c><00:00:24.640><c> help</c><00:00:24.880><c> explain</c><00:00:25.199><c> why</c>

00:00:25.509 --> 00:00:25.519 align:start position:0%
context to um sort of help explain why
 

00:00:25.519 --> 00:00:26.310 align:start position:0%
context to um sort of help explain why
people

00:00:26.310 --> 00:00:26.320 align:start position:0%
people
 

00:00:26.320 --> 00:00:28.470 align:start position:0%
people
explored<00:00:26.720><c> microkernels</c><00:00:27.359><c> in</c><00:00:27.439><c> the</c><00:00:27.519><c> first</c><00:00:27.760><c> place</c>

00:00:28.470 --> 00:00:28.480 align:start position:0%
explored microkernels in the first place
 

00:00:28.480 --> 00:00:29.830 align:start position:0%
explored microkernels in the first place
um

00:00:29.830 --> 00:00:29.840 align:start position:0%
um
 

00:00:29.840 --> 00:00:32.709 align:start position:0%
um
this<00:00:30.160><c> uh</c><00:00:31.840><c> the</c><00:00:32.079><c> p</c><00:00:32.239><c> people</c><00:00:32.480><c> got</c><00:00:32.640><c> the</c>

00:00:32.709 --> 00:00:32.719 align:start position:0%
this uh the p people got the
 

00:00:32.719 --> 00:00:35.190 align:start position:0%
this uh the p people got the
microkernels<00:00:33.360><c> by</c><00:00:33.520><c> trying</c><00:00:33.760><c> to</c><00:00:33.840><c> think</c><00:00:34.079><c> about</c>

00:00:35.190 --> 00:00:35.200 align:start position:0%
microkernels by trying to think about
 

00:00:35.200 --> 00:00:37.350 align:start position:0%
microkernels by trying to think about
uh<00:00:35.520><c> a</c><00:00:35.600><c> little</c><00:00:35.840><c> more</c><00:00:36.000><c> broadly</c><00:00:36.399><c> about</c><00:00:36.960><c> what</c>

00:00:37.350 --> 00:00:37.360 align:start position:0%
uh a little more broadly about what
 

00:00:37.360 --> 00:00:38.869 align:start position:0%
uh a little more broadly about what
kernels<00:00:37.840><c> should</c><00:00:38.000><c> actually</c><00:00:38.399><c> do</c>

00:00:38.869 --> 00:00:38.879 align:start position:0%
kernels should actually do
 

00:00:38.879 --> 00:00:42.069 align:start position:0%
kernels should actually do
like<00:00:39.120><c> we</c><00:00:39.520><c> you</c><00:00:39.600><c> know</c><00:00:39.760><c> with</c><00:00:40.000><c> xv6</c><00:00:40.640><c> is</c><00:00:41.280><c> sort</c><00:00:41.520><c> of</c>

00:00:42.069 --> 00:00:42.079 align:start position:0%
like we you know with xv6 is sort of
 

00:00:42.079 --> 00:00:43.750 align:start position:0%
like we you know with xv6 is sort of
does<00:00:42.320><c> the</c><00:00:42.480><c> things</c><00:00:42.719><c> that</c><00:00:42.800><c> unix</c><00:00:43.280><c> does</c><00:00:43.520><c> and</c><00:00:43.680><c> we</c>

00:00:43.750 --> 00:00:43.760 align:start position:0%
does the things that unix does and we
 

00:00:43.760 --> 00:00:45.270 align:start position:0%
does the things that unix does and we
kind<00:00:44.000><c> of</c><00:00:44.079><c> take</c>

00:00:45.270 --> 00:00:45.280 align:start position:0%
kind of take
 

00:00:45.280 --> 00:00:47.510 align:start position:0%
kind of take
um<00:00:45.760><c> that</c><00:00:46.000><c> set</c><00:00:46.160><c> of</c><00:00:46.320><c> abstractions</c><00:00:47.039><c> and</c><00:00:47.120><c> system</c>

00:00:47.510 --> 00:00:47.520 align:start position:0%
um that set of abstractions and system
 

00:00:47.520 --> 00:00:48.389 align:start position:0%
um that set of abstractions and system
calls<00:00:48.000><c> and</c>

00:00:48.389 --> 00:00:48.399 align:start position:0%
calls and
 

00:00:48.399 --> 00:00:50.389 align:start position:0%
calls and
uh<00:00:48.800><c> keep</c><00:00:49.120><c> sort</c><00:00:49.280><c> of</c><00:00:49.520><c> facilities</c><00:00:50.079><c> inside</c><00:00:50.320><c> the</c>

00:00:50.389 --> 00:00:50.399 align:start position:0%
uh keep sort of facilities inside the
 

00:00:50.399 --> 00:00:51.670 align:start position:0%
uh keep sort of facilities inside the
kernel<00:00:50.719><c> is</c><00:00:50.800><c> kind</c><00:00:50.960><c> of</c>

00:00:51.670 --> 00:00:51.680 align:start position:0%
kernel is kind of
 

00:00:51.680 --> 00:00:54.150 align:start position:0%
kernel is kind of
for<00:00:51.840><c> granted</c><00:00:52.320><c> as</c><00:00:52.480><c> the</c><00:00:53.280><c> target</c><00:00:53.680><c> of</c><00:00:53.920><c> what</c><00:00:54.079><c> we're</c>

00:00:54.150 --> 00:00:54.160 align:start position:0%
for granted as the target of what we're
 

00:00:54.160 --> 00:00:56.630 align:start position:0%
for granted as the target of what we're
trying<00:00:54.399><c> to</c><00:00:54.480><c> design</c><00:00:54.879><c> but</c>

00:00:56.630 --> 00:00:56.640 align:start position:0%
trying to design but
 

00:00:56.640 --> 00:00:58.869 align:start position:0%
trying to design but
it's<00:00:56.800><c> totally</c><00:00:57.120><c> worth</c><00:00:57.520><c> wondering</c><00:00:58.160><c> gosh</c><00:00:58.640><c> what</c>

00:00:58.869 --> 00:00:58.879 align:start position:0%
it's totally worth wondering gosh what
 

00:00:58.879 --> 00:01:00.310 align:start position:0%
it's totally worth wondering gosh what
should<00:00:59.039><c> a</c><00:00:59.120><c> kernel</c><00:00:59.359><c> do</c><00:00:59.520><c> in</c><00:00:59.600><c> the</c><00:00:59.760><c> first</c><00:01:00.000><c> place</c>

00:01:00.310 --> 00:01:00.320 align:start position:0%
should a kernel do in the first place
 

00:01:00.320 --> 00:01:01.510 align:start position:0%
should a kernel do in the first place
maybe

00:01:01.510 --> 00:01:01.520 align:start position:0%
maybe
 

00:01:01.520 --> 00:01:02.950 align:start position:0%
maybe
maybe<00:01:01.840><c> the</c><00:01:02.000><c> particular</c><00:01:02.320><c> kind</c><00:01:02.480><c> of</c><00:01:02.559><c> stuff</c><00:01:02.800><c> that</c>

00:01:02.950 --> 00:01:02.960 align:start position:0%
maybe the particular kind of stuff that
 

00:01:02.960 --> 00:01:04.869 align:start position:0%
maybe the particular kind of stuff that
xv6<00:01:03.520><c> or</c><00:01:03.680><c> linux</c><00:01:04.080><c> does</c>

00:01:04.869 --> 00:01:04.879 align:start position:0%
xv6 or linux does
 

00:01:04.879 --> 00:01:07.109 align:start position:0%
xv6 or linux does
um<00:01:05.280><c> is</c><00:01:05.680><c> not</c><00:01:05.920><c> really</c><00:01:06.159><c> the</c><00:01:06.240><c> best</c><00:01:06.479><c> answer</c><00:01:07.040><c> or</c>

00:01:07.109 --> 00:01:07.119 align:start position:0%
um is not really the best answer or
 

00:01:07.119 --> 00:01:08.390 align:start position:0%
um is not really the best answer or
maybe<00:01:07.439><c> it</c><00:01:07.600><c> is</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
maybe it is
 

00:01:08.400 --> 00:01:10.789 align:start position:0%
maybe it is
um<00:01:09.040><c> and</c><00:01:09.200><c> of</c><00:01:09.360><c> course</c><00:01:10.240><c> you</c><00:01:10.320><c> know</c><00:01:10.400><c> we're</c><00:01:10.640><c> on</c>

00:01:10.789 --> 00:01:10.799 align:start position:0%
um and of course you know we're on
 

00:01:10.799 --> 00:01:12.789 align:start position:0%
um and of course you know we're on
somewhat<00:01:11.119><c> treacherous</c><00:01:11.600><c> ground</c><00:01:11.920><c> here</c><00:01:12.240><c> because</c>

00:01:12.789 --> 00:01:12.799 align:start position:0%
somewhat treacherous ground here because
 

00:01:12.799 --> 00:01:14.950 align:start position:0%
somewhat treacherous ground here because
now<00:01:12.960><c> we're</c><00:01:13.520><c> you</c><00:01:13.600><c> know</c><00:01:13.760><c> where</c><00:01:14.240><c> what</c><00:01:14.479><c> kernels</c>

00:01:14.950 --> 00:01:14.960 align:start position:0%
now we're you know where what kernels
 

00:01:14.960 --> 00:01:16.950 align:start position:0%
now we're you know where what kernels
are<00:01:15.280><c> is</c><00:01:15.360><c> kind</c><00:01:15.520><c> of</c><00:01:15.680><c> a</c><00:01:15.759><c> development</c><00:01:16.400><c> platform</c>

00:01:16.950 --> 00:01:16.960 align:start position:0%
are is kind of a development platform
 

00:01:16.960 --> 00:01:18.230 align:start position:0%
are is kind of a development platform
for<00:01:17.119><c> programmers</c>

00:01:18.230 --> 00:01:18.240 align:start position:0%
for programmers
 

00:01:18.240 --> 00:01:20.070 align:start position:0%
for programmers
as<00:01:18.320><c> we</c><00:01:18.479><c> know</c><00:01:18.720><c> programmers</c><00:01:19.439><c> different</c><00:01:19.759><c> people</c>

00:01:20.070 --> 00:01:20.080 align:start position:0%
as we know programmers different people
 

00:01:20.080 --> 00:01:22.230 align:start position:0%
as we know programmers different people
have<00:01:20.240><c> like</c><00:01:20.799><c> very</c><00:01:21.200><c> different</c>

00:01:22.230 --> 00:01:22.240 align:start position:0%
have like very different
 

00:01:22.240 --> 00:01:25.830 align:start position:0%
have like very different
um<00:01:22.720><c> sort</c><00:01:22.960><c> of</c><00:01:23.200><c> subjective</c><00:01:24.159><c> preferences</c><00:01:24.880><c> about</c>

00:01:25.830 --> 00:01:25.840 align:start position:0%
um sort of subjective preferences about
 

00:01:25.840 --> 00:01:27.429 align:start position:0%
um sort of subjective preferences about
what<00:01:26.080><c> kind</c><00:01:26.240><c> of</c><00:01:26.400><c> infrastructure</c><00:01:26.960><c> they</c><00:01:27.119><c> like</c><00:01:27.280><c> to</c>

00:01:27.429 --> 00:01:27.439 align:start position:0%
what kind of infrastructure they like to
 

00:01:27.439 --> 00:01:28.870 align:start position:0%
what kind of infrastructure they like to
program<00:01:27.840><c> on</c><00:01:28.080><c> so</c><00:01:28.240><c> we</c>

00:01:28.870 --> 00:01:28.880 align:start position:0%
program on so we
 

00:01:28.880 --> 00:01:30.950 align:start position:0%
program on so we
can't<00:01:29.119><c> necessarily</c><00:01:29.840><c> expect</c><00:01:30.240><c> a</c><00:01:30.400><c> single</c><00:01:30.640><c> best</c>

00:01:30.950 --> 00:01:30.960 align:start position:0%
can't necessarily expect a single best
 

00:01:30.960 --> 00:01:33.270 align:start position:0%
can't necessarily expect a single best
answer

00:01:33.270 --> 00:01:33.280 align:start position:0%
answer
 

00:01:33.280 --> 00:01:34.870 align:start position:0%
answer
but<00:01:33.439><c> we</c><00:01:33.600><c> can</c><00:01:33.840><c> expect</c><00:01:34.079><c> to</c><00:01:34.320><c> maybe</c><00:01:34.640><c> learn</c>

00:01:34.870 --> 00:01:34.880 align:start position:0%
but we can expect to maybe learn
 

00:01:34.880 --> 00:01:37.109 align:start position:0%
but we can expect to maybe learn
something<00:01:35.840><c> and</c><00:01:35.920><c> maybe</c><00:01:36.240><c> make</c><00:01:36.400><c> some</c><00:01:36.640><c> progress</c>

00:01:37.109 --> 00:01:37.119 align:start position:0%
something and maybe make some progress
 

00:01:37.119 --> 00:01:37.830 align:start position:0%
something and maybe make some progress
by

00:01:37.830 --> 00:01:37.840 align:start position:0%
by
 

00:01:37.840 --> 00:01:39.190 align:start position:0%
by
trying<00:01:38.000><c> to</c><00:01:38.079><c> think</c><00:01:38.240><c> about</c><00:01:38.400><c> what</c><00:01:38.640><c> answers</c><00:01:38.960><c> might</c>

00:01:39.190 --> 00:01:39.200 align:start position:0%
trying to think about what answers might
 

00:01:39.200 --> 00:01:41.749 align:start position:0%
trying to think about what answers might
be<00:01:40.560><c> so</c><00:01:40.720><c> first</c><00:01:40.960><c> of</c><00:01:41.119><c> all</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
be so first of all
 

00:01:41.759 --> 00:01:43.990 align:start position:0%
be so first of all
let<00:01:41.920><c> me</c><00:01:42.000><c> try</c><00:01:42.159><c> to</c><00:01:42.320><c> kind</c><00:01:42.399><c> of</c><00:01:42.560><c> crystallize</c><00:01:43.680><c> what</c>

00:01:43.990 --> 00:01:44.000 align:start position:0%
let me try to kind of crystallize what
 

00:01:44.000 --> 00:01:45.510 align:start position:0%
let me try to kind of crystallize what
the<00:01:44.640><c> traditional</c>

00:01:45.510 --> 00:01:45.520 align:start position:0%
the traditional
 

00:01:45.520 --> 00:01:48.870 align:start position:0%
the traditional
approach<00:01:46.000><c> is</c><00:01:46.479><c> to</c><00:01:48.079><c> what</c><00:01:48.320><c> kind</c><00:01:48.479><c> of</c><00:01:48.560><c> kernel</c>

00:01:48.870 --> 00:01:48.880 align:start position:0%
approach is to what kind of kernel
 

00:01:48.880 --> 00:01:49.670 align:start position:0%
approach is to what kind of kernel
interfaces

00:01:49.670 --> 00:01:49.680 align:start position:0%
interfaces
 

00:01:49.680 --> 00:01:53.270 align:start position:0%
interfaces
we<00:01:49.759><c> ought</c><00:01:49.920><c> to</c><00:01:50.000><c> be</c><00:01:50.159><c> using</c><00:01:51.119><c> and</c><00:01:51.600><c> linux</c><00:01:52.479><c> and</c><00:01:52.799><c> unix</c>

00:01:53.270 --> 00:01:53.280 align:start position:0%
we ought to be using and linux and unix
 

00:01:53.280 --> 00:01:53.990 align:start position:0%
we ought to be using and linux and unix
and<00:01:53.439><c> xv6</c>

00:01:53.990 --> 00:01:54.000 align:start position:0%
and xv6
 

00:01:54.000 --> 00:01:57.590 align:start position:0%
and xv6
are<00:01:54.079><c> all</c><00:01:54.240><c> examples</c><00:01:54.720><c> of</c><00:01:55.360><c> of</c><00:01:56.640><c> what</c><00:01:56.880><c> i</c><00:01:57.119><c> personally</c>

00:01:57.590 --> 00:01:57.600 align:start position:0%
are all examples of of what i personally
 

00:01:57.600 --> 00:01:58.709 align:start position:0%
are all examples of of what i personally
call<00:01:57.759><c> the</c>

00:01:58.709 --> 00:01:58.719 align:start position:0%
call the
 

00:01:58.719 --> 00:02:01.190 align:start position:0%
call the
a<00:01:58.880><c> traditional</c><00:01:59.360><c> design</c><00:01:59.759><c> approach</c><00:02:00.399><c> but</c>

00:02:01.190 --> 00:02:01.200 align:start position:0%
a traditional design approach but
 

00:02:01.200 --> 00:02:02.709 align:start position:0%
a traditional design approach but
another<00:02:01.600><c> word</c><00:02:01.840><c> for</c><00:02:02.079><c> it</c><00:02:02.159><c> that</c><00:02:02.320><c> kind</c><00:02:02.479><c> of</c>

00:02:02.709 --> 00:02:02.719 align:start position:0%
another word for it that kind of
 

00:02:02.719 --> 00:02:03.990 align:start position:0%
another word for it that kind of
summarizes

00:02:03.990 --> 00:02:04.000 align:start position:0%
summarizes
 

00:02:04.000 --> 00:02:06.389 align:start position:0%
summarizes
uh<00:02:05.040><c> what</c><00:02:05.200><c> this</c><00:02:05.360><c> approach</c><00:02:05.680><c> has</c><00:02:05.840><c> ended</c><00:02:06.079><c> up</c><00:02:06.159><c> like</c>

00:02:06.389 --> 00:02:06.399 align:start position:0%
uh what this approach has ended up like
 

00:02:06.399 --> 00:02:13.430 align:start position:0%
uh what this approach has ended up like
is<00:02:06.840><c> monolithic</c>

00:02:13.430 --> 00:02:13.440 align:start position:0%
 
 

00:02:13.440 --> 00:02:17.430 align:start position:0%
 
monolithic<00:02:14.319><c> and</c><00:02:16.160><c> what</c><00:02:16.319><c> that</c><00:02:16.480><c> means</c><00:02:16.879><c> is</c><00:02:17.040><c> that</c>

00:02:17.430 --> 00:02:17.440 align:start position:0%
monolithic and what that means is that
 

00:02:17.440 --> 00:02:19.990 align:start position:0%
monolithic and what that means is that
the<00:02:17.599><c> kernel</c><00:02:18.160><c> is</c><00:02:18.319><c> a</c><00:02:18.480><c> single</c><00:02:18.959><c> big</c><00:02:19.440><c> program</c><00:02:19.840><c> that</c>

00:02:19.990 --> 00:02:20.000 align:start position:0%
the kernel is a single big program that
 

00:02:20.000 --> 00:02:22.630 align:start position:0%
the kernel is a single big program that
does<00:02:20.319><c> all</c><00:02:20.560><c> kinds</c><00:02:20.800><c> of</c><00:02:20.959><c> things</c><00:02:21.920><c> all</c><00:02:22.160><c> within</c><00:02:22.480><c> the</c>

00:02:22.630 --> 00:02:22.640 align:start position:0%
does all kinds of things all within the
 

00:02:22.640 --> 00:02:25.430 align:start position:0%
does all kinds of things all within the
same<00:02:22.879><c> program</c>

00:02:25.430 --> 00:02:25.440 align:start position:0%
 
 

00:02:25.440 --> 00:02:28.070 align:start position:0%
 
and<00:02:26.160><c> indeed</c><00:02:26.480><c> this</c><00:02:26.720><c> really</c><00:02:27.040><c> reflects</c><00:02:27.680><c> the</c><00:02:27.840><c> way</c>

00:02:28.070 --> 00:02:28.080 align:start position:0%
and indeed this really reflects the way
 

00:02:28.080 --> 00:02:29.589 align:start position:0%
and indeed this really reflects the way
people<00:02:28.319><c> thought</c><00:02:28.560><c> about</c>

00:02:29.589 --> 00:02:29.599 align:start position:0%
people thought about
 

00:02:29.599 --> 00:02:31.589 align:start position:0%
people thought about
what<00:02:29.840><c> kernels</c><00:02:30.160><c> ought</c><00:02:30.319><c> to</c><00:02:30.400><c> be</c><00:02:30.560><c> doing</c><00:02:31.120><c> a</c><00:02:31.280><c> real</c>

00:02:31.589 --> 00:02:31.599 align:start position:0%
what kernels ought to be doing a real
 

00:02:31.599 --> 00:02:33.509 align:start position:0%
what kernels ought to be doing a real
hallmark<00:02:32.239><c> of</c>

00:02:33.509 --> 00:02:33.519 align:start position:0%
hallmark of
 

00:02:33.519 --> 00:02:36.790 align:start position:0%
hallmark of
kernels<00:02:33.920><c> like</c><00:02:34.879><c> linux</c><00:02:35.440><c> is</c><00:02:35.599><c> that</c><00:02:36.239><c> they</c><00:02:36.400><c> have</c>

00:02:36.790 --> 00:02:36.800 align:start position:0%
kernels like linux is that they have
 

00:02:36.800 --> 00:02:40.470 align:start position:0%
kernels like linux is that they have
they<00:02:37.040><c> provide</c><00:02:38.640><c> powerful</c><00:02:39.120><c> abstractions</c>

00:02:40.470 --> 00:02:40.480 align:start position:0%
they provide powerful abstractions
 

00:02:40.480 --> 00:02:42.630 align:start position:0%
they provide powerful abstractions
you<00:02:40.560><c> know</c><00:02:40.720><c> they</c><00:02:40.959><c> choose</c><00:02:41.280><c> things</c><00:02:41.519><c> like</c><00:02:42.160><c> file</c>

00:02:42.630 --> 00:02:42.640 align:start position:0%
you know they choose things like file
 

00:02:42.640 --> 00:02:43.589 align:start position:0%
you know they choose things like file
systems

00:02:43.589 --> 00:02:43.599 align:start position:0%
systems
 

00:02:43.599 --> 00:02:47.030 align:start position:0%
systems
and<00:02:43.920><c> which</c><00:02:44.160><c> is</c><00:02:44.319><c> really</c><00:02:44.560><c> a</c><00:02:44.640><c> complicated</c><00:02:45.360><c> item</c>

00:02:47.030 --> 00:02:47.040 align:start position:0%
and which is really a complicated item
 

00:02:47.040 --> 00:02:48.869 align:start position:0%
and which is really a complicated item
and<00:02:47.120><c> they</c><00:02:47.280><c> present</c><00:02:47.599><c> file</c><00:02:47.920><c> systems</c><00:02:48.319><c> and</c><00:02:48.480><c> files</c>

00:02:48.869 --> 00:02:48.879 align:start position:0%
and they present file systems and files
 

00:02:48.879 --> 00:02:51.270 align:start position:0%
and they present file systems and files
and<00:02:49.040><c> directories</c><00:02:49.680><c> and</c><00:02:49.840><c> file</c><00:02:50.080><c> descriptors</c>

00:02:51.270 --> 00:02:51.280 align:start position:0%
and directories and file descriptors
 

00:02:51.280 --> 00:02:53.110 align:start position:0%
and directories and file descriptors
as<00:02:51.599><c> their</c><00:02:51.920><c> interface</c><00:02:52.480><c> rather</c><00:02:52.720><c> than</c><00:02:52.959><c> for</c>

00:02:53.110 --> 00:02:53.120 align:start position:0%
as their interface rather than for
 

00:02:53.120 --> 00:02:55.190 align:start position:0%
as their interface rather than for
example<00:02:53.920><c> presenting</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
example presenting
 

00:02:55.200 --> 00:02:57.350 align:start position:0%
example presenting
disk<00:02:55.599><c> hardware</c><00:02:56.400><c> as</c><00:02:56.560><c> their</c><00:02:56.720><c> interface</c><00:02:57.200><c> to</c>

00:02:57.350 --> 00:02:57.360 align:start position:0%
disk hardware as their interface to
 

00:02:57.360 --> 00:02:58.390 align:start position:0%
disk hardware as their interface to
applications

00:02:58.390 --> 00:02:58.400 align:start position:0%
applications
 

00:02:58.400 --> 00:03:01.750 align:start position:0%
applications
so<00:02:59.200><c> um</c><00:02:59.680><c> and</c><00:03:01.120><c> using</c>

00:03:01.750 --> 00:03:01.760 align:start position:0%
so um and using
 

00:03:01.760 --> 00:03:03.430 align:start position:0%
so um and using
presenting<00:03:02.239><c> powerful</c><00:03:02.640><c> abstractions</c><00:03:03.200><c> instead</c>

00:03:03.430 --> 00:03:03.440 align:start position:0%
presenting powerful abstractions instead
 

00:03:03.440 --> 00:03:04.949 align:start position:0%
presenting powerful abstractions instead
of<00:03:03.519><c> very</c><00:03:03.760><c> low</c><00:03:03.920><c> level</c><00:03:04.159><c> abstractions</c><00:03:04.720><c> have</c><00:03:04.800><c> some</c>

00:03:04.949 --> 00:03:04.959 align:start position:0%
of very low level abstractions have some
 

00:03:04.959 --> 00:03:06.149 align:start position:0%
of very low level abstractions have some
big<00:03:05.120><c> advantages</c>

00:03:06.149 --> 00:03:06.159 align:start position:0%
big advantages
 

00:03:06.159 --> 00:03:08.309 align:start position:0%
big advantages
um<00:03:06.879><c> so</c><00:03:07.040><c> these</c><00:03:07.200><c> monolithic</c><00:03:07.680><c> kernels</c><00:03:08.080><c> often</c>

00:03:08.309 --> 00:03:08.319 align:start position:0%
um so these monolithic kernels often
 

00:03:08.319 --> 00:03:09.350 align:start position:0%
um so these monolithic kernels often
have<00:03:08.879><c> sort</c><00:03:09.040><c> of</c>

00:03:09.350 --> 00:03:09.360 align:start position:0%
have sort of
 

00:03:09.360 --> 00:03:17.110 align:start position:0%
have sort of
big<00:03:10.159><c> abstractions</c>

00:03:17.110 --> 00:03:17.120 align:start position:0%
 
 

00:03:17.120 --> 00:03:21.030 align:start position:0%
 
like<00:03:18.640><c> file</c><00:03:18.959><c> the</c><00:03:19.040><c> file</c><00:03:19.360><c> system</c>

00:03:21.030 --> 00:03:21.040 align:start position:0%
like file the file system
 

00:03:21.040 --> 00:03:22.550 align:start position:0%
like file the file system
one<00:03:21.200><c> advantage</c><00:03:21.599><c> of</c><00:03:21.680><c> big</c><00:03:21.840><c> abstractions</c><00:03:22.480><c> is</c>

00:03:22.550 --> 00:03:22.560 align:start position:0%
one advantage of big abstractions is
 

00:03:22.560 --> 00:03:24.390 align:start position:0%
one advantage of big abstractions is
that<00:03:22.800><c> they're</c><00:03:22.959><c> often</c><00:03:23.440><c> portable</c>

00:03:24.390 --> 00:03:24.400 align:start position:0%
that they're often portable
 

00:03:24.400 --> 00:03:27.030 align:start position:0%
that they're often portable
um<00:03:24.799><c> of</c><00:03:25.040><c> files</c><00:03:25.519><c> and</c><00:03:25.599><c> directories</c><00:03:26.239><c> you</c><00:03:26.400><c> can</c>

00:03:27.030 --> 00:03:27.040 align:start position:0%
um of files and directories you can
 

00:03:27.040 --> 00:03:28.630 align:start position:0%
um of files and directories you can
implement<00:03:27.360><c> files</c><00:03:27.680><c> and</c><00:03:27.760><c> directories</c><00:03:28.239><c> on</c><00:03:28.480><c> all</c>

00:03:28.630 --> 00:03:28.640 align:start position:0%
implement files and directories on all
 

00:03:28.640 --> 00:03:30.229 align:start position:0%
implement files and directories on all
kinds<00:03:28.879><c> of</c><00:03:28.959><c> storage</c>

00:03:30.229 --> 00:03:30.239 align:start position:0%
kinds of storage
 

00:03:30.239 --> 00:03:32.949 align:start position:0%
kinds of storage
um<00:03:30.720><c> and</c><00:03:30.879><c> it</c><00:03:31.120><c> the</c><00:03:31.920><c> file</c><00:03:32.239><c> you</c><00:03:32.400><c> know</c><00:03:32.560><c> you</c><00:03:32.640><c> can</c><00:03:32.720><c> use</c>

00:03:32.949 --> 00:03:32.959 align:start position:0%
um and it the file you know you can use
 

00:03:32.959 --> 00:03:34.149 align:start position:0%
um and it the file you know you can use
files<00:03:33.200><c> and</c><00:03:33.280><c> directories</c><00:03:33.680><c> that</c><00:03:33.840><c> have</c>

00:03:34.149 --> 00:03:34.159 align:start position:0%
files and directories that have
 

00:03:34.159 --> 00:03:36.390 align:start position:0%
files and directories that have
having<00:03:34.400><c> to</c><00:03:34.480><c> worry</c><00:03:34.799><c> about</c><00:03:35.280><c> what</c><00:03:35.519><c> brand</c><00:03:35.840><c> of</c><00:03:36.080><c> disk</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
having to worry about what brand of disk
 

00:03:36.400 --> 00:03:37.670 align:start position:0%
having to worry about what brand of disk
drive<00:03:36.720><c> it's</c><00:03:36.799><c> running</c><00:03:37.120><c> on</c><00:03:37.360><c> or</c>

00:03:37.670 --> 00:03:37.680 align:start position:0%
drive it's running on or
 

00:03:37.680 --> 00:03:39.430 align:start position:0%
drive it's running on or
maybe<00:03:38.000><c> it's</c><00:03:38.080><c> an</c><00:03:38.239><c> ssd</c><00:03:38.720><c> instead</c><00:03:38.959><c> of</c><00:03:39.120><c> a</c><00:03:39.200><c> hard</c>

00:03:39.430 --> 00:03:39.440 align:start position:0%
maybe it's an ssd instead of a hard
 

00:03:39.440 --> 00:03:40.949 align:start position:0%
maybe it's an ssd instead of a hard
drive<00:03:39.680><c> or</c><00:03:39.920><c> maybe</c><00:03:40.159><c> it's</c><00:03:40.319><c> a</c><00:03:40.400><c> network</c><00:03:40.720><c> file</c>

00:03:40.949 --> 00:03:40.959 align:start position:0%
drive or maybe it's a network file
 

00:03:40.959 --> 00:03:42.390 align:start position:0%
drive or maybe it's a network file
system<00:03:41.280><c> at</c><00:03:41.440><c> all</c><00:03:41.519><c> it's</c><00:03:41.680><c> the</c><00:03:41.760><c> same</c><00:03:42.000><c> interface</c>

00:03:42.390 --> 00:03:42.400 align:start position:0%
system at all it's the same interface
 

00:03:42.400 --> 00:03:43.350 align:start position:0%
system at all it's the same interface
because

00:03:43.350 --> 00:03:43.360 align:start position:0%
because
 

00:03:43.360 --> 00:03:44.949 align:start position:0%
because
the<00:03:43.440><c> file</c><00:03:43.599><c> system</c><00:03:43.920><c> interface</c><00:03:44.319><c> is</c><00:03:44.480><c> pretty</c><00:03:44.720><c> high</c>

00:03:44.949 --> 00:03:44.959 align:start position:0%
the file system interface is pretty high
 

00:03:44.959 --> 00:03:47.030 align:start position:0%
the file system interface is pretty high
level<00:03:45.280><c> pretty</c><00:03:45.519><c> abstract</c>

00:03:47.030 --> 00:03:47.040 align:start position:0%
level pretty abstract
 

00:03:47.040 --> 00:03:50.149 align:start position:0%
level pretty abstract
so<00:03:48.000><c> an</c><00:03:48.159><c> advantage</c><00:03:48.480><c> of</c><00:03:48.560><c> this</c><00:03:48.799><c> is</c><00:03:48.959><c> that</c><00:03:49.120><c> the</c>

00:03:50.149 --> 00:03:50.159 align:start position:0%
so an advantage of this is that the
 

00:03:50.159 --> 00:03:52.470 align:start position:0%
so an advantage of this is that the
it's<00:03:50.400><c> a</c><00:03:50.480><c> way</c><00:03:50.720><c> to</c><00:03:50.879><c> get</c><00:03:51.040><c> portability</c><00:03:52.159><c> you</c><00:03:52.319><c> can</c>

00:03:52.470 --> 00:03:52.480 align:start position:0%
it's a way to get portability you can
 

00:03:52.480 --> 00:03:54.789 align:start position:0%
it's a way to get portability you can
write<00:03:52.720><c> an</c><00:03:52.879><c> application</c><00:03:53.360><c> and</c><00:03:53.439><c> have</c><00:03:53.599><c> it</c><00:03:53.680><c> run</c><00:03:53.920><c> on</c>

00:03:54.789 --> 00:03:54.799 align:start position:0%
write an application and have it run on
 

00:03:54.799 --> 00:03:56.149 align:start position:0%
write an application and have it run on
all<00:03:54.959><c> kinds</c><00:03:55.200><c> of</c><00:03:55.280><c> different</c><00:03:55.519><c> hardware</c><00:03:55.920><c> without</c>

00:03:56.149 --> 00:03:56.159 align:start position:0%
all kinds of different hardware without
 

00:03:56.159 --> 00:03:58.830 align:start position:0%
all kinds of different hardware without
having<00:03:56.400><c> to</c><00:03:56.480><c> modify</c><00:03:56.959><c> the</c>

00:03:58.830 --> 00:03:58.840 align:start position:0%
having to modify the
 

00:03:58.840 --> 00:04:01.190 align:start position:0%
having to modify the
application<00:04:00.159><c> another</c><00:04:00.480><c> example</c><00:04:00.799><c> of</c><00:04:00.879><c> this</c><00:04:01.040><c> is</c>

00:04:01.190 --> 00:04:01.200 align:start position:0%
application another example of this is
 

00:04:01.200 --> 00:04:02.869 align:start position:0%
application another example of this is
that

00:04:02.869 --> 00:04:02.879 align:start position:0%
that
 

00:04:02.879 --> 00:04:05.509 align:start position:0%
that
you<00:04:03.040><c> know</c><00:04:03.200><c> unix</c><00:04:03.840><c> linux</c><00:04:04.560><c> provides</c><00:04:04.959><c> an</c><00:04:05.120><c> address</c>

00:04:05.509 --> 00:04:05.519 align:start position:0%
you know unix linux provides an address
 

00:04:05.519 --> 00:04:06.630 align:start position:0%
you know unix linux provides an address
space

00:04:06.630 --> 00:04:06.640 align:start position:0%
space
 

00:04:06.640 --> 00:04:08.710 align:start position:0%
space
abstraction<00:04:07.439><c> rather</c><00:04:07.760><c> than</c><00:04:07.920><c> providing</c>

00:04:08.710 --> 00:04:08.720 align:start position:0%
abstraction rather than providing
 

00:04:08.720 --> 00:04:10.070 align:start position:0%
abstraction rather than providing
something<00:04:09.040><c> that's</c><00:04:09.360><c> like</c>

00:04:10.070 --> 00:04:10.080 align:start position:0%
something that's like
 

00:04:10.080 --> 00:04:11.670 align:start position:0%
something that's like
rather<00:04:10.400><c> than</c><00:04:10.480><c> providing</c><00:04:10.879><c> direct</c><00:04:11.200><c> access</c><00:04:11.599><c> to</c>

00:04:11.670 --> 00:04:11.680 align:start position:0%
rather than providing direct access to
 

00:04:11.680 --> 00:04:14.070 align:start position:0%
rather than providing direct access to
the<00:04:11.840><c> mmu</c><00:04:12.239><c> hardware</c>

00:04:14.070 --> 00:04:14.080 align:start position:0%
the mmu hardware
 

00:04:14.080 --> 00:04:16.710 align:start position:0%
the mmu hardware
and<00:04:14.159><c> that's</c><00:04:14.400><c> useful</c><00:04:14.799><c> to</c><00:04:15.680><c> for</c><00:04:15.920><c> portability</c><00:04:16.560><c> and</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
and that's useful to for portability and
 

00:04:16.720 --> 00:04:17.990 align:start position:0%
and that's useful to for portability and
to<00:04:16.799><c> sort</c><00:04:16.959><c> of</c><00:04:17.040><c> hide</c><00:04:17.280><c> complexity</c><00:04:17.840><c> from</c>

00:04:17.990 --> 00:04:18.000 align:start position:0%
to sort of hide complexity from
 

00:04:18.000 --> 00:04:20.550 align:start position:0%
to sort of hide complexity from
applications

00:04:20.550 --> 00:04:20.560 align:start position:0%
applications
 

00:04:20.560 --> 00:04:23.670 align:start position:0%
applications
so<00:04:20.799><c> so</c><00:04:20.959><c> another</c><00:04:21.280><c> big</c><00:04:22.560><c> advantage</c><00:04:22.960><c> here</c><00:04:23.120><c> these</c>

00:04:23.670 --> 00:04:23.680 align:start position:0%
so so another big advantage here these
 

00:04:23.680 --> 00:04:25.270 align:start position:0%
so so another big advantage here these
powerful<00:04:24.080><c> abstractions</c><00:04:24.720><c> is</c><00:04:24.800><c> that</c><00:04:24.960><c> they</c><00:04:25.120><c> tend</c>

00:04:25.270 --> 00:04:25.280 align:start position:0%
powerful abstractions is that they tend
 

00:04:25.280 --> 00:04:30.310 align:start position:0%
powerful abstractions is that they tend
to<00:04:25.440><c> hide</c><00:04:25.919><c> complexity</c><00:04:26.479><c> from</c><00:04:26.840><c> applications</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
 
 

00:04:30.320 --> 00:04:33.909 align:start position:0%
 
the<00:04:30.800><c> so</c><00:04:30.960><c> for</c><00:04:31.120><c> example</c><00:04:31.520><c> the</c><00:04:32.479><c> file</c><00:04:32.800><c> descriptor</c>

00:04:33.909 --> 00:04:33.919 align:start position:0%
the so for example the file descriptor
 

00:04:33.919 --> 00:04:36.390 align:start position:0%
the so for example the file descriptor
interface<00:04:34.560><c> that</c><00:04:35.199><c> xv6</c><00:04:35.759><c> provides</c><00:04:36.080><c> it's</c><00:04:36.240><c> very</c>

00:04:36.390 --> 00:04:36.400 align:start position:0%
interface that xv6 provides it's very
 

00:04:36.400 --> 00:04:37.909 align:start position:0%
interface that xv6 provides it's very
simple<00:04:36.720><c> interface</c><00:04:37.280><c> but</c>

00:04:37.909 --> 00:04:37.919 align:start position:0%
simple interface but
 

00:04:37.919 --> 00:04:39.189 align:start position:0%
simple interface but
you<00:04:38.000><c> know</c><00:04:38.160><c> just</c><00:04:38.320><c> read</c><00:04:38.560><c> and</c><00:04:38.639><c> write</c><00:04:38.880><c> on</c><00:04:38.960><c> file</c>

00:04:39.189 --> 00:04:39.199 align:start position:0%
you know just read and write on file
 

00:04:39.199 --> 00:04:41.270 align:start position:0%
you know just read and write on file
descriptors<00:04:39.840><c> can</c><00:04:40.080><c> get</c><00:04:40.240><c> much</c><00:04:40.479><c> simpler</c>

00:04:41.270 --> 00:04:41.280 align:start position:0%
descriptors can get much simpler
 

00:04:41.280 --> 00:04:43.030 align:start position:0%
descriptors can get much simpler
but<00:04:41.520><c> behind</c><00:04:41.840><c> it</c><00:04:42.000><c> is</c><00:04:42.080><c> some</c><00:04:42.240><c> very</c><00:04:42.479><c> complicated</c>

00:04:43.030 --> 00:04:43.040 align:start position:0%
but behind it is some very complicated
 

00:04:43.040 --> 00:04:46.070 align:start position:0%
but behind it is some very complicated
code<00:04:43.440><c> for</c><00:04:44.080><c> actually</c><00:04:44.479><c> reading</c><00:04:44.800><c> and</c><00:04:44.960><c> writing</c>

00:04:46.070 --> 00:04:46.080 align:start position:0%
code for actually reading and writing
 

00:04:46.080 --> 00:04:50.550 align:start position:0%
code for actually reading and writing
the<00:04:46.240><c> disk</c><00:04:46.560><c> the</c><00:04:46.639><c> file</c><00:04:46.960><c> system</c><00:04:47.280><c> on</c><00:04:47.520><c> disk</c>

00:04:50.550 --> 00:04:50.560 align:start position:0%
 
 

00:04:50.560 --> 00:04:51.990 align:start position:0%
 
and<00:04:50.639><c> so</c><00:04:50.800><c> it's</c><00:04:50.960><c> nice</c><00:04:51.120><c> for</c><00:04:51.280><c> programmers</c><00:04:51.759><c> but</c><00:04:51.919><c> it</c>

00:04:51.990 --> 00:04:52.000 align:start position:0%
and so it's nice for programmers but it
 

00:04:52.000 --> 00:04:54.870 align:start position:0%
and so it's nice for programmers but it
makes<00:04:52.160><c> for</c><00:04:52.240><c> a</c><00:04:52.560><c> big</c><00:04:52.720><c> complex</c><00:04:53.280><c> kernel</c>

00:04:54.870 --> 00:04:54.880 align:start position:0%
makes for a big complex kernel
 

00:04:54.880 --> 00:04:56.790 align:start position:0%
makes for a big complex kernel
these<00:04:55.120><c> big</c><00:04:55.360><c> abstractions</c><00:04:56.000><c> also</c><00:04:56.320><c> help</c><00:04:56.639><c> the</c>

00:04:56.790 --> 00:04:56.800 align:start position:0%
these big abstractions also help the
 

00:04:56.800 --> 00:04:59.350 align:start position:0%
these big abstractions also help the
kernel<00:04:57.759><c> manage</c><00:04:58.160><c> and</c><00:04:58.320><c> share</c><00:04:58.639><c> resources</c><00:04:59.199><c> we</c>

00:04:59.350 --> 00:04:59.360 align:start position:0%
kernel manage and share resources we
 

00:04:59.360 --> 00:05:00.790 align:start position:0%
kernel manage and share resources we
sort<00:04:59.520><c> of</c><00:04:59.600><c> delegated</c><00:05:00.080><c> to</c><00:05:00.240><c> the</c><00:05:00.320><c> kernel</c>

00:05:00.790 --> 00:05:00.800 align:start position:0%
sort of delegated to the kernel
 

00:05:00.800 --> 00:05:02.870 align:start position:0%
sort of delegated to the kernel
things<00:05:01.039><c> like</c><00:05:01.440><c> memory</c><00:05:01.840><c> management</c><00:05:02.400><c> the</c><00:05:02.639><c> kernel</c>

00:05:02.870 --> 00:05:02.880 align:start position:0%
things like memory management the kernel
 

00:05:02.880 --> 00:05:04.790 align:start position:0%
things like memory management the kernel
keeps<00:05:03.199><c> track</c><00:05:03.440><c> of</c><00:05:03.600><c> what</c><00:05:03.840><c> memory</c><00:05:04.080><c> is</c><00:05:04.240><c> free</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
keeps track of what memory is free
 

00:05:04.800 --> 00:05:07.749 align:start position:0%
keeps track of what memory is free
we<00:05:05.440><c> similarly</c><00:05:06.800><c> the</c><00:05:06.960><c> kernel</c><00:05:07.199><c> keeps</c><00:05:07.440><c> track</c><00:05:07.680><c> of</c>

00:05:07.749 --> 00:05:07.759 align:start position:0%
we similarly the kernel keeps track of
 

00:05:07.759 --> 00:05:09.430 align:start position:0%
we similarly the kernel keeps track of
what<00:05:08.000><c> parts</c><00:05:08.240><c> of</c><00:05:08.320><c> the</c><00:05:08.400><c> disk</c><00:05:08.720><c> are</c><00:05:08.880><c> free</c><00:05:09.199><c> and</c><00:05:09.280><c> what</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
what parts of the disk are free and what
 

00:05:09.440 --> 00:05:11.110 align:start position:0%
what parts of the disk are free and what
parts<00:05:09.680><c> of</c><00:05:09.759><c> the</c><00:05:09.840><c> disk</c><00:05:10.080><c> are</c><00:05:10.240><c> in</c><00:05:10.320><c> current</c><00:05:10.639><c> use</c>

00:05:11.110 --> 00:05:11.120 align:start position:0%
parts of the disk are in current use
 

00:05:11.120 --> 00:05:14.070 align:start position:0%
parts of the disk are in current use
so<00:05:11.360><c> programs</c><00:05:11.680><c> don't</c><00:05:11.840><c> get</c><00:05:12.000><c> to</c><00:05:12.080><c> think</c><00:05:12.320><c> about</c><00:05:12.560><c> it</c>

00:05:14.070 --> 00:05:14.080 align:start position:0%
so programs don't get to think about it
 

00:05:14.080 --> 00:05:15.749 align:start position:0%
so programs don't get to think about it
and<00:05:14.160><c> that</c><00:05:14.320><c> again</c><00:05:14.639><c> it</c><00:05:14.720><c> simplifies</c><00:05:15.199><c> programs</c><00:05:15.600><c> it</c>

00:05:15.749 --> 00:05:15.759 align:start position:0%
and that again it simplifies programs it
 

00:05:15.759 --> 00:05:17.909 align:start position:0%
and that again it simplifies programs it
also<00:05:15.919><c> helps</c><00:05:16.240><c> with</c><00:05:16.400><c> robustness</c><00:05:17.199><c> and</c><00:05:17.360><c> security</c>

00:05:17.909 --> 00:05:17.919 align:start position:0%
also helps with robustness and security
 

00:05:17.919 --> 00:05:19.189 align:start position:0%
also helps with robustness and security
even

00:05:19.189 --> 00:05:19.199 align:start position:0%
even
 

00:05:19.199 --> 00:05:20.950 align:start position:0%
even
because<00:05:19.840><c> if</c><00:05:20.080><c> programs</c><00:05:20.479><c> are</c><00:05:20.639><c> allowed</c><00:05:20.880><c> to</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
because if programs are allowed to
 

00:05:20.960 --> 00:05:22.550 align:start position:0%
because if programs are allowed to
decide<00:05:21.360><c> what</c><00:05:21.520><c> parts</c><00:05:21.759><c> of</c><00:05:21.840><c> the</c><00:05:21.919><c> disk</c><00:05:22.160><c> are</c><00:05:22.320><c> free</c>

00:05:22.550 --> 00:05:22.560 align:start position:0%
decide what parts of the disk are free
 

00:05:22.560 --> 00:05:23.029 align:start position:0%
decide what parts of the disk are free
or<00:05:22.639><c> not</c>

00:05:23.029 --> 00:05:23.039 align:start position:0%
or not
 

00:05:23.039 --> 00:05:26.070 align:start position:0%
or not
then<00:05:23.520><c> maybe</c><00:05:23.840><c> one</c><00:05:24.080><c> program</c><00:05:25.120><c> could</c><00:05:25.360><c> use</c>

00:05:26.070 --> 00:05:26.080 align:start position:0%
then maybe one program could use
 

00:05:26.080 --> 00:05:27.189 align:start position:0%
then maybe one program could use
part<00:05:26.240><c> of</c><00:05:26.320><c> the</c><00:05:26.400><c> disk</c><00:05:26.639><c> that's</c><00:05:26.800><c> already</c><00:05:27.039><c> being</c>

00:05:27.189 --> 00:05:27.199 align:start position:0%
part of the disk that's already being
 

00:05:27.199 --> 00:05:30.310 align:start position:0%
part of the disk that's already being
used<00:05:27.440><c> by</c><00:05:27.600><c> another</c><00:05:27.919><c> program</c>

00:05:30.310 --> 00:05:30.320 align:start position:0%
used by another program
 

00:05:30.320 --> 00:05:33.110 align:start position:0%
used by another program
so<00:05:31.520><c> the</c><00:05:31.680><c> fact</c><00:05:31.919><c> that</c><00:05:32.000><c> the</c><00:05:32.160><c> kernel</c><00:05:32.479><c> is</c><00:05:32.639><c> in</c><00:05:32.720><c> charge</c>

00:05:33.110 --> 00:05:33.120 align:start position:0%
so the fact that the kernel is in charge
 

00:05:33.120 --> 00:05:37.029 align:start position:0%
so the fact that the kernel is in charge
of<00:05:33.199><c> resource</c><00:05:33.600><c> management</c>

00:05:37.029 --> 00:05:37.039 align:start position:0%
 
 

00:05:37.039 --> 00:05:38.469 align:start position:0%
 
helps<00:05:37.360><c> with</c><00:05:37.600><c> sharing</c><00:05:38.000><c> it</c><00:05:38.080><c> helps</c><00:05:38.320><c> with</c>

00:05:38.469 --> 00:05:38.479 align:start position:0%
helps with sharing it helps with
 

00:05:38.479 --> 00:05:40.550 align:start position:0%
helps with sharing it helps with
security<00:05:39.440><c> um</c><00:05:39.680><c> but</c><00:05:39.919><c> again</c><00:05:40.240><c> it</c>

00:05:40.550 --> 00:05:40.560 align:start position:0%
security um but again it
 

00:05:40.560 --> 00:05:44.070 align:start position:0%
security um but again it
it's<00:05:40.800><c> a</c><00:05:40.880><c> force</c><00:05:41.199><c> that</c><00:05:41.919><c> um</c><00:05:42.960><c> sort</c><00:05:43.120><c> of</c>

00:05:44.070 --> 00:05:44.080 align:start position:0%
it's a force that um sort of
 

00:05:44.080 --> 00:05:49.350 align:start position:0%
it's a force that um sort of
causes<00:05:44.400><c> the</c><00:05:44.479><c> kernel</c><00:05:44.800><c> to</c><00:05:44.880><c> be</c><00:05:45.039><c> big</c><00:05:46.800><c> um</c>

00:05:49.350 --> 00:05:49.360 align:start position:0%
 
 

00:05:49.360 --> 00:05:51.270 align:start position:0%
 
so<00:05:49.600><c> anyway</c><00:05:49.919><c> so</c><00:05:50.160><c> so</c><00:05:50.400><c> having</c><00:05:50.720><c> the</c><00:05:50.800><c> kernel</c><00:05:51.039><c> be</c><00:05:51.199><c> in</c>

00:05:51.270 --> 00:05:51.280 align:start position:0%
so anyway so so having the kernel be in
 

00:05:51.280 --> 00:05:52.469 align:start position:0%
so anyway so so having the kernel be in
charge<00:05:51.520><c> of</c><00:05:51.680><c> all</c><00:05:51.759><c> these</c>

00:05:52.469 --> 00:05:52.479 align:start position:0%
charge of all these
 

00:05:52.479 --> 00:05:56.309 align:start position:0%
charge of all these
sort<00:05:52.639><c> of</c><00:05:53.600><c> juicy</c><00:05:54.080><c> abstractions</c><00:05:54.800><c> that</c>

00:05:56.309 --> 00:05:56.319 align:start position:0%
sort of juicy abstractions that
 

00:05:56.319 --> 00:05:58.390 align:start position:0%
sort of juicy abstractions that
even<00:05:56.560><c> if</c><00:05:56.639><c> they</c><00:05:56.720><c> have</c><00:05:56.800><c> simple</c><00:05:57.120><c> interfaces</c><00:05:58.240><c> have</c>

00:05:58.390 --> 00:05:58.400 align:start position:0%
even if they have simple interfaces have
 

00:05:58.400 --> 00:05:59.749 align:start position:0%
even if they have simple interfaces have
a lot<00:05:58.560><c> of</c><00:05:58.639><c> complexity</c><00:05:59.199><c> inside</c>

00:05:59.749 --> 00:05:59.759 align:start position:0%
a lot of complexity inside
 

00:05:59.759 --> 00:06:03.430 align:start position:0%
a lot of complexity inside
have<00:06:00.000><c> led</c><00:06:00.160><c> kernels</c><00:06:00.639><c> to</c><00:06:00.720><c> be</c><00:06:00.960><c> big</c>

00:06:03.430 --> 00:06:03.440 align:start position:0%
 
 

00:06:03.440 --> 00:06:07.110 align:start position:0%
 
and<00:06:03.680><c> complex</c><00:06:04.840><c> items</c><00:06:05.840><c> and</c><00:06:06.080><c> another</c><00:06:06.479><c> aspect</c><00:06:07.039><c> of</c>

00:06:07.110 --> 00:06:07.120 align:start position:0%
and complex items and another aspect of
 

00:06:07.120 --> 00:06:07.670 align:start position:0%
and complex items and another aspect of
this

00:06:07.670 --> 00:06:07.680 align:start position:0%
this
 

00:06:07.680 --> 00:06:09.909 align:start position:0%
this
monolithic<00:06:08.319><c> design</c><00:06:08.720><c> approach</c><00:06:09.120><c> is</c><00:06:09.280><c> that</c>

00:06:09.909 --> 00:06:09.919 align:start position:0%
monolithic design approach is that
 

00:06:09.919 --> 00:06:11.909 align:start position:0%
monolithic design approach is that
because<00:06:10.240><c> it's</c><00:06:10.479><c> all</c><00:06:10.720><c> one</c><00:06:11.039><c> program</c>

00:06:11.909 --> 00:06:11.919 align:start position:0%
because it's all one program
 

00:06:11.919 --> 00:06:13.590 align:start position:0%
because it's all one program
all<00:06:12.080><c> the</c><00:06:12.240><c> different</c><00:06:12.479><c> kernel</c><00:06:12.880><c> substances</c><00:06:13.440><c> like</c>

00:06:13.590 --> 00:06:13.600 align:start position:0%
all the different kernel substances like
 

00:06:13.600 --> 00:06:15.270 align:start position:0%
all the different kernel substances like
the<00:06:13.759><c> file</c><00:06:14.000><c> system</c><00:06:14.319><c> and</c><00:06:14.479><c> the</c><00:06:14.560><c> memory</c><00:06:14.800><c> allocator</c>

00:06:15.270 --> 00:06:15.280 align:start position:0%
the file system and the memory allocator
 

00:06:15.280 --> 00:06:16.950 align:start position:0%
the file system and the memory allocator
and<00:06:15.360><c> the</c><00:06:15.520><c> scheduler</c><00:06:16.160><c> and</c><00:06:16.240><c> the</c><00:06:16.400><c> virtual</c><00:06:16.639><c> memory</c>

00:06:16.950 --> 00:06:16.960 align:start position:0%
and the scheduler and the virtual memory
 

00:06:16.960 --> 00:06:18.309 align:start position:0%
and the scheduler and the virtual memory
system<00:06:17.199><c> they're</c><00:06:17.360><c> all</c><00:06:17.520><c> part</c><00:06:17.680><c> of</c><00:06:17.840><c> one</c><00:06:18.080><c> big</c>

00:06:18.309 --> 00:06:18.319 align:start position:0%
system they're all part of one big
 

00:06:18.319 --> 00:06:19.590 align:start position:0%
system they're all part of one big
integrated<00:06:18.880><c> program</c>

00:06:19.590 --> 00:06:19.600 align:start position:0%
integrated program
 

00:06:19.600 --> 00:06:21.110 align:start position:0%
integrated program
it<00:06:19.680><c> means</c><00:06:19.919><c> that</c><00:06:20.080><c> they</c><00:06:20.240><c> can</c><00:06:20.400><c> peer</c><00:06:20.720><c> into</c><00:06:20.960><c> each</c>

00:06:21.110 --> 00:06:21.120 align:start position:0%
it means that they can peer into each
 

00:06:21.120 --> 00:06:23.590 align:start position:0%
it means that they can peer into each
other's<00:06:21.360><c> data</c><00:06:21.680><c> structures</c><00:06:22.319><c> and</c><00:06:22.479><c> so</c>

00:06:23.590 --> 00:06:23.600 align:start position:0%
other's data structures and so
 

00:06:23.600 --> 00:06:25.590 align:start position:0%
other's data structures and so
that's<00:06:23.840><c> just</c><00:06:24.160><c> tended</c><00:06:24.560><c> to</c><00:06:24.639><c> make</c><00:06:24.880><c> it</c><00:06:25.280><c> much</c>

00:06:25.590 --> 00:06:25.600 align:start position:0%
that's just tended to make it much
 

00:06:25.600 --> 00:06:27.510 align:start position:0%
that's just tended to make it much
easier<00:06:26.000><c> to</c><00:06:26.240><c> implement</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
easier to implement
 

00:06:27.520 --> 00:06:29.749 align:start position:0%
easier to implement
facilities<00:06:28.400><c> that</c><00:06:28.800><c> are</c><00:06:28.960><c> sort</c><00:06:29.120><c> of</c><00:06:29.280><c> parts</c><00:06:29.600><c> of</c>

00:06:29.749 --> 00:06:29.759 align:start position:0%
facilities that are sort of parts of
 

00:06:29.759 --> 00:06:31.670 align:start position:0%
facilities that are sort of parts of
more<00:06:30.080><c> than</c><00:06:30.319><c> one</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
more than one
 

00:06:31.680 --> 00:06:33.189 align:start position:0%
more than one
or<00:06:31.840><c> what</c><00:06:32.080><c> you</c><00:06:32.160><c> might</c><00:06:32.400><c> think</c><00:06:32.560><c> of</c><00:06:32.720><c> as</c><00:06:32.880><c> more</c><00:06:33.039><c> than</c>

00:06:33.189 --> 00:06:33.199 align:start position:0%
or what you might think of as more than
 

00:06:33.199 --> 00:06:35.749 align:start position:0%
or what you might think of as more than
one<00:06:33.440><c> kind</c><00:06:33.600><c> of</c><00:06:34.160><c> modular</c><00:06:34.800><c> subsystem</c><00:06:35.440><c> so</c><00:06:35.600><c> for</c>

00:06:35.749 --> 00:06:35.759 align:start position:0%
one kind of modular subsystem so for
 

00:06:35.759 --> 00:06:37.189 align:start position:0%
one kind of modular subsystem so for
example

00:06:37.189 --> 00:06:37.199 align:start position:0%
example
 

00:06:37.199 --> 00:06:40.309 align:start position:0%
example
a<00:06:37.280><c> system</c><00:06:37.600><c> called</c><00:06:37.840><c> like</c><00:06:38.080><c> exec</c><00:06:39.600><c> exec</c><00:06:40.000><c> has</c><00:06:40.160><c> his</c>

00:06:40.309 --> 00:06:40.319 align:start position:0%
a system called like exec exec has his
 

00:06:40.319 --> 00:06:41.909 align:start position:0%
a system called like exec exec has his
fingers<00:06:40.720><c> deeply</c><00:06:41.039><c> into</c><00:06:41.199><c> the</c><00:06:41.280><c> file</c><00:06:41.600><c> system</c>

00:06:41.909 --> 00:06:41.919 align:start position:0%
fingers deeply into the file system
 

00:06:41.919 --> 00:06:43.990 align:start position:0%
fingers deeply into the file system
because<00:06:42.080><c> it's</c><00:06:42.319><c> reading</c><00:06:42.720><c> binary</c><00:06:43.280><c> images</c><00:06:43.759><c> off</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
because it's reading binary images off
 

00:06:44.000 --> 00:06:44.469 align:start position:0%
because it's reading binary images off
the

00:06:44.469 --> 00:06:44.479 align:start position:0%
the
 

00:06:44.479 --> 00:06:46.390 align:start position:0%
the
disk<00:06:44.800><c> in</c><00:06:44.960><c> order</c><00:06:45.120><c> to</c><00:06:45.199><c> load</c><00:06:45.440><c> them</c><00:06:45.600><c> into</c><00:06:45.759><c> memory</c>

00:06:46.390 --> 00:06:46.400 align:start position:0%
disk in order to load them into memory
 

00:06:46.400 --> 00:06:48.469 align:start position:0%
disk in order to load them into memory
it<00:06:46.560><c> also</c><00:06:46.800><c> has</c><00:06:47.039><c> his</c><00:06:47.199><c> fingers</c><00:06:47.520><c> into</c><00:06:47.759><c> the</c>

00:06:48.469 --> 00:06:48.479 align:start position:0%
it also has his fingers into the
 

00:06:48.479 --> 00:06:50.629 align:start position:0%
it also has his fingers into the
memory<00:06:49.039><c> allocation</c><00:06:49.599><c> and</c><00:06:49.759><c> virtual</c><00:06:50.160><c> memory</c>

00:06:50.629 --> 00:06:50.639 align:start position:0%
memory allocation and virtual memory
 

00:06:50.639 --> 00:06:51.670 align:start position:0%
memory allocation and virtual memory
paging<00:06:51.120><c> system</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
paging system
 

00:06:51.680 --> 00:06:53.029 align:start position:0%
paging system
because<00:06:51.840><c> it</c><00:06:51.919><c> needs</c><00:06:52.080><c> to</c><00:06:52.240><c> set</c><00:06:52.479><c> up</c><00:06:52.560><c> the</c><00:06:52.720><c> address</c>

00:06:53.029 --> 00:06:53.039 align:start position:0%
because it needs to set up the address
 

00:06:53.039 --> 00:06:54.950 align:start position:0%
because it needs to set up the address
space<00:06:53.360><c> of</c><00:06:53.440><c> the</c><00:06:53.599><c> new</c><00:06:53.759><c> process</c><00:06:54.400><c> but</c><00:06:54.560><c> it's</c><00:06:54.720><c> really</c>

00:06:54.950 --> 00:06:54.960 align:start position:0%
space of the new process but it's really
 

00:06:54.960 --> 00:06:56.150 align:start position:0%
space of the new process but it's really
easy<00:06:55.280><c> there's</c><00:06:55.440><c> no</c>

00:06:56.150 --> 00:06:56.160 align:start position:0%
easy there's no
 

00:06:56.160 --> 00:06:58.230 align:start position:0%
easy there's no
problem<00:06:56.479><c> with</c><00:06:56.639><c> doing</c><00:06:56.800><c> that</c><00:06:57.039><c> in</c><00:06:57.199><c> xv6</c><00:06:57.759><c> or</c><00:06:57.840><c> linux</c>

00:06:58.230 --> 00:06:58.240 align:start position:0%
problem with doing that in xv6 or linux
 

00:06:58.240 --> 00:07:00.230 align:start position:0%
problem with doing that in xv6 or linux
because<00:06:59.120><c> you</c><00:06:59.199><c> know</c><00:06:59.360><c> both</c><00:06:59.599><c> all</c><00:06:59.840><c> the</c><00:06:59.919><c> file</c>

00:07:00.230 --> 00:07:00.240 align:start position:0%
because you know both all the file
 

00:07:00.240 --> 00:07:01.670 align:start position:0%
because you know both all the file
system<00:07:00.560><c> is</c><00:07:00.720><c> right</c><00:07:00.960><c> there</c>

00:07:01.670 --> 00:07:01.680 align:start position:0%
system is right there
 

00:07:01.680 --> 00:07:03.110 align:start position:0%
system is right there
in<00:07:01.840><c> the</c><00:07:01.919><c> same</c><00:07:02.160><c> kernel</c><00:07:02.479><c> program</c><00:07:02.880><c> and</c><00:07:02.960><c> the</c>

00:07:03.110 --> 00:07:03.120 align:start position:0%
in the same kernel program and the
 

00:07:03.120 --> 00:07:04.469 align:start position:0%
in the same kernel program and the
virtual<00:07:03.440><c> memory</c><00:07:03.680><c> system</c><00:07:03.919><c> is</c><00:07:04.080><c> also</c><00:07:04.319><c> right</c>

00:07:04.469 --> 00:07:04.479 align:start position:0%
virtual memory system is also right
 

00:07:04.479 --> 00:07:06.309 align:start position:0%
virtual memory system is also right
there<00:07:04.720><c> as</c><00:07:04.800><c> part</c><00:07:04.960><c> of</c><00:07:05.039><c> the</c><00:07:05.120><c> same</c><00:07:05.360><c> program</c>

00:07:06.309 --> 00:07:06.319 align:start position:0%
there as part of the same program
 

00:07:06.319 --> 00:07:09.029 align:start position:0%
there as part of the same program
um<00:07:07.039><c> and</c><00:07:07.199><c> if</c><00:07:07.759><c> you</c><00:07:07.840><c> know</c><00:07:08.000><c> somehow</c><00:07:08.400><c> there</c><00:07:08.560><c> was</c><00:07:08.800><c> a</c>

00:07:09.029 --> 00:07:09.039 align:start position:0%
um and if you know somehow there was a
 

00:07:09.039 --> 00:07:10.230 align:start position:0%
um and if you know somehow there was a
rigid

00:07:10.230 --> 00:07:10.240 align:start position:0%
rigid
 

00:07:10.240 --> 00:07:11.749 align:start position:0%
rigid
split<00:07:10.639><c> between</c><00:07:10.960><c> the</c><00:07:11.039><c> file</c><00:07:11.280><c> system</c><00:07:11.599><c> and</c><00:07:11.680><c> the</c>

00:07:11.749 --> 00:07:11.759 align:start position:0%
split between the file system and the
 

00:07:11.759 --> 00:07:13.270 align:start position:0%
split between the file system and the
virtual<00:07:12.080><c> memory</c><00:07:12.400><c> system</c><00:07:12.800><c> it'd</c><00:07:12.960><c> be</c><00:07:13.120><c> much</c>

00:07:13.270 --> 00:07:13.280 align:start position:0%
virtual memory system it'd be much
 

00:07:13.280 --> 00:07:15.110 align:start position:0%
virtual memory system it'd be much
harder<00:07:13.599><c> to</c><00:07:13.759><c> implement</c><00:07:14.160><c> something</c><00:07:14.479><c> like</c><00:07:14.639><c> exec</c>

00:07:15.110 --> 00:07:15.120 align:start position:0%
harder to implement something like exec
 

00:07:15.120 --> 00:07:17.029 align:start position:0%
harder to implement something like exec
that<00:07:15.360><c> has</c><00:07:15.840><c> sort</c><00:07:16.000><c> of</c><00:07:16.160><c> fingers</c><00:07:16.560><c> in</c><00:07:16.639><c> both</c><00:07:16.880><c> of</c>

00:07:17.029 --> 00:07:17.039 align:start position:0%
that has sort of fingers in both of
 

00:07:17.039 --> 00:07:18.469 align:start position:0%
that has sort of fingers in both of
these<00:07:17.280><c> pies</c>

00:07:18.469 --> 00:07:18.479 align:start position:0%
these pies
 

00:07:18.479 --> 00:07:20.230 align:start position:0%
these pies
but<00:07:18.639><c> in</c><00:07:18.720><c> a</c><00:07:18.800><c> monolithic</c><00:07:19.360><c> system</c><00:07:19.759><c> just</c><00:07:19.919><c> one</c><00:07:20.080><c> big</c>

00:07:20.230 --> 00:07:20.240 align:start position:0%
but in a monolithic system just one big
 

00:07:20.240 --> 00:07:22.070 align:start position:0%
but in a monolithic system just one big
program

00:07:22.070 --> 00:07:22.080 align:start position:0%
program
 

00:07:22.080 --> 00:07:25.430 align:start position:0%
program
it's<00:07:22.160><c> much</c><00:07:22.479><c> easier</c><00:07:24.800><c> another</c><00:07:25.120><c> thing</c><00:07:25.280><c> that</c>

00:07:25.430 --> 00:07:25.440 align:start position:0%
it's much easier another thing that
 

00:07:25.440 --> 00:07:27.189 align:start position:0%
it's much easier another thing that
makes

00:07:27.189 --> 00:07:27.199 align:start position:0%
makes
 

00:07:27.199 --> 00:07:28.469 align:start position:0%
makes
implementing<00:07:27.680><c> software</c><00:07:28.080><c> inside</c><00:07:28.400><c> a</c>

00:07:28.469 --> 00:07:28.479 align:start position:0%
implementing software inside a
 

00:07:28.479 --> 00:07:30.870 align:start position:0%
implementing software inside a
monolithic<00:07:28.960><c> kernel</c><00:07:29.199><c> like</c><00:07:29.440><c> xv6</c><00:07:30.000><c> or</c><00:07:30.160><c> linux</c><00:07:30.560><c> easy</c>

00:07:30.870 --> 00:07:30.880 align:start position:0%
monolithic kernel like xv6 or linux easy
 

00:07:30.880 --> 00:07:31.510 align:start position:0%
monolithic kernel like xv6 or linux easy
is<00:07:31.039><c> that</c>

00:07:31.510 --> 00:07:31.520 align:start position:0%
is that
 

00:07:31.520 --> 00:07:34.550 align:start position:0%
is that
all<00:07:31.680><c> the</c><00:07:31.919><c> code</c><00:07:32.319><c> runs</c><00:07:32.639><c> with</c><00:07:33.039><c> full</c><00:07:34.080><c> uh</c>

00:07:34.550 --> 00:07:34.560 align:start position:0%
all the code runs with full uh
 

00:07:34.560 --> 00:07:37.270 align:start position:0%
all the code runs with full uh
hardware<00:07:35.039><c> privileges</c><00:07:35.759><c> all</c><00:07:35.919><c> of</c><00:07:36.080><c> xc6</c><00:07:36.880><c> runs</c><00:07:37.199><c> in</c>

00:07:37.270 --> 00:07:37.280 align:start position:0%
hardware privileges all of xc6 runs in
 

00:07:37.280 --> 00:07:39.510 align:start position:0%
hardware privileges all of xc6 runs in
supervisor<00:07:37.919><c> mode</c><00:07:38.160><c> for</c><00:07:38.319><c> example</c>

00:07:39.510 --> 00:07:39.520 align:start position:0%
supervisor mode for example
 

00:07:39.520 --> 00:07:41.589 align:start position:0%
supervisor mode for example
which<00:07:39.759><c> means</c><00:07:39.919><c> there's</c><00:07:40.479><c> no</c><00:07:40.720><c> limits</c><00:07:41.199><c> there's</c><00:07:41.360><c> no</c>

00:07:41.589 --> 00:07:41.599 align:start position:0%
which means there's no limits there's no
 

00:07:41.599 --> 00:07:42.790 align:start position:0%
which means there's no limits there's no
irritating

00:07:42.790 --> 00:07:42.800 align:start position:0%
irritating
 

00:07:42.800 --> 00:07:44.790 align:start position:0%
irritating
oh<00:07:43.039><c> you</c><00:07:43.360><c> can't</c><00:07:43.840><c> you</c><00:07:43.919><c> know</c><00:07:44.160><c> redirect</c><00:07:44.639><c> that</c>

00:07:44.790 --> 00:07:44.800 align:start position:0%
oh you can't you know redirect that
 

00:07:44.800 --> 00:07:45.909 align:start position:0%
oh you can't you know redirect that
memory<00:07:45.199><c> here</c><00:07:45.360><c> because</c><00:07:45.520><c> you</c><00:07:45.680><c> don't</c><00:07:45.840><c> have</c>

00:07:45.909 --> 00:07:45.919 align:start position:0%
memory here because you don't have
 

00:07:45.919 --> 00:07:47.029 align:start position:0%
memory here because you don't have
enough<00:07:46.240><c> privilege</c>

00:07:47.029 --> 00:07:47.039 align:start position:0%
enough privilege
 

00:07:47.039 --> 00:07:49.670 align:start position:0%
enough privilege
um<00:07:47.280><c> all</c><00:07:47.440><c> the</c><00:07:47.599><c> kernel</c><00:07:47.919><c> code</c><00:07:48.240><c> runs</c><00:07:48.639><c> with</c><00:07:49.360><c> sort</c><00:07:49.520><c> of</c>

00:07:49.670 --> 00:07:49.680 align:start position:0%
um all the kernel code runs with sort of
 

00:07:49.680 --> 00:07:52.550 align:start position:0%
um all the kernel code runs with sort of
maximum<00:07:50.240><c> privilege</c>

00:07:52.550 --> 00:07:52.560 align:start position:0%
maximum privilege
 

00:07:52.560 --> 00:07:54.869 align:start position:0%
maximum privilege
and<00:07:52.720><c> you</c><00:07:52.800><c> know</c><00:07:52.960><c> the</c><00:07:53.039><c> same</c><00:07:53.280><c> is</c><00:07:53.440><c> true</c><00:07:53.680><c> of</c>

00:07:54.869 --> 00:07:54.879 align:start position:0%
and you know the same is true of
 

00:07:54.879 --> 00:07:57.749 align:start position:0%
and you know the same is true of
operating<00:07:55.280><c> systems</c><00:07:55.599><c> like</c><00:07:55.759><c> linux</c>

00:07:57.749 --> 00:07:57.759 align:start position:0%
operating systems like linux
 

00:07:57.759 --> 00:08:01.589 align:start position:0%
operating systems like linux
so<00:07:59.360><c> this</c><00:07:59.599><c> design</c>

00:08:01.589 --> 00:08:01.599 align:start position:0%
so this design
 

00:08:01.599 --> 00:08:04.150 align:start position:0%
so this design
strategy<00:08:02.319><c> is</c><00:08:02.960><c> very</c><00:08:03.199><c> convenient</c><00:08:03.599><c> for</c><00:08:03.840><c> kernel</c>

00:08:04.150 --> 00:08:04.160 align:start position:0%
strategy is very convenient for kernel
 

00:08:04.160 --> 00:08:05.510 align:start position:0%
strategy is very convenient for kernel
developers

00:08:05.510 --> 00:08:05.520 align:start position:0%
developers
 

00:08:05.520 --> 00:08:08.070 align:start position:0%
developers
and<00:08:05.680><c> it's</c><00:08:05.919><c> made</c><00:08:06.160><c> it</c><00:08:06.639><c> easy</c><00:08:07.039><c> to</c><00:08:07.360><c> build</c><00:08:07.599><c> these</c><00:08:07.840><c> big</c>

00:08:08.070 --> 00:08:08.080 align:start position:0%
and it's made it easy to build these big
 

00:08:08.080 --> 00:08:09.270 align:start position:0%
and it's made it easy to build these big
abstractions<00:08:08.800><c> which</c><00:08:09.039><c> are</c>

00:08:09.270 --> 00:08:09.280 align:start position:0%
abstractions which are
 

00:08:09.280 --> 00:08:13.589 align:start position:0%
abstractions which are
convenient<00:08:09.919><c> for</c><00:08:11.440><c> application</c><00:08:11.919><c> developers</c>

00:08:13.589 --> 00:08:13.599 align:start position:0%
convenient for application developers
 

00:08:13.599 --> 00:08:16.070 align:start position:0%
convenient for application developers
however<00:08:14.560><c> there's</c><00:08:14.800><c> also</c><00:08:15.360><c> a</c><00:08:15.440><c> certain</c><00:08:15.680><c> amount</c><00:08:15.919><c> to</c>

00:08:16.070 --> 00:08:16.080 align:start position:0%
however there's also a certain amount to
 

00:08:16.080 --> 00:08:16.950 align:start position:0%
however there's also a certain amount to
criticize

00:08:16.950 --> 00:08:16.960 align:start position:0%
criticize
 

00:08:16.960 --> 00:08:19.270 align:start position:0%
criticize
with<00:08:17.199><c> the</c><00:08:17.680><c> monolithic</c><00:08:18.639><c> the</c><00:08:18.800><c> traditional</c>

00:08:19.270 --> 00:08:19.280 align:start position:0%
with the monolithic the traditional
 

00:08:19.280 --> 00:08:23.189 align:start position:0%
with the monolithic the traditional
monolithic<00:08:19.919><c> approach</c>

00:08:23.189 --> 00:08:23.199 align:start position:0%
 
 

00:08:23.199 --> 00:08:24.869 align:start position:0%
 
and<00:08:23.440><c> this</c><00:08:23.680><c> is</c><00:08:24.000><c> starting</c><00:08:24.319><c> to</c><00:08:24.400><c> be</c><00:08:24.560><c> part</c><00:08:24.720><c> of</c><00:08:24.800><c> the</c>

00:08:24.869 --> 00:08:24.879 align:start position:0%
and this is starting to be part of the
 

00:08:24.879 --> 00:08:27.670 align:start position:0%
and this is starting to be part of the
motivation<00:08:25.520><c> for</c>

00:08:27.670 --> 00:08:27.680 align:start position:0%
motivation for
 

00:08:27.680 --> 00:08:30.869 align:start position:0%
motivation for
looking<00:08:28.000><c> at</c><00:08:28.080><c> other</c><00:08:28.560><c> architectures</c>

00:08:30.869 --> 00:08:30.879 align:start position:0%
looking at other architectures
 

00:08:30.879 --> 00:08:33.430 align:start position:0%
looking at other architectures
like<00:08:31.120><c> microkernels</c><00:08:32.479><c> so</c><00:08:32.640><c> you</c><00:08:32.719><c> might</c><00:08:32.959><c> ask</c><00:08:33.200><c> why</c>

00:08:33.430 --> 00:08:33.440 align:start position:0%
like microkernels so you might ask why
 

00:08:33.440 --> 00:08:35.750 align:start position:0%
like microkernels so you might ask why
not

00:08:35.750 --> 00:08:35.760 align:start position:0%
 
 

00:08:35.760 --> 00:08:43.430 align:start position:0%
 
monolithic<00:08:38.839><c> kernels</c>

00:08:43.430 --> 00:08:43.440 align:start position:0%
 
 

00:08:43.440 --> 00:08:46.710 align:start position:0%
 
so<00:08:45.600><c> one</c><00:08:45.839><c> is</c><00:08:45.920><c> just</c><00:08:46.080><c> that</c><00:08:46.160><c> they're</c><00:08:46.399><c> big</c><00:08:46.640><c> and</c>

00:08:46.710 --> 00:08:46.720 align:start position:0%
so one is just that they're big and
 

00:08:46.720 --> 00:08:47.829 align:start position:0%
so one is just that they're big and
complex

00:08:47.829 --> 00:08:47.839 align:start position:0%
complex
 

00:08:47.839 --> 00:08:50.949 align:start position:0%
complex
so<00:08:48.080><c> anything</c><00:08:48.480><c> that's</c><00:08:49.839><c> linux</c><00:08:50.320><c> is</c>

00:08:50.949 --> 00:08:50.959 align:start position:0%
so anything that's linux is
 

00:08:50.959 --> 00:08:53.190 align:start position:0%
so anything that's linux is
depending<00:08:51.440><c> on</c><00:08:51.600><c> how</c><00:08:51.839><c> you</c><00:08:52.000><c> count</c><00:08:52.720><c> linux</c><00:08:53.120><c> is</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
depending on how you count linux is
 

00:08:53.200 --> 00:08:54.630 align:start position:0%
depending on how you count linux is
somewhere<00:08:53.519><c> between</c><00:08:53.839><c> many</c><00:08:54.160><c> hundreds</c><00:08:54.560><c> of</c>

00:08:54.630 --> 00:08:54.640 align:start position:0%
somewhere between many hundreds of
 

00:08:54.640 --> 00:08:57.110 align:start position:0%
somewhere between many hundreds of
thousands<00:08:55.279><c> and</c><00:08:55.519><c> a</c><00:08:55.600><c> few</c><00:08:55.920><c> million</c>

00:08:57.110 --> 00:08:57.120 align:start position:0%
thousands and a few million
 

00:08:57.120 --> 00:09:00.230 align:start position:0%
thousands and a few million
lines<00:08:57.519><c> of</c><00:08:57.600><c> code</c><00:08:58.640><c> and</c><00:08:59.360><c> people</c><00:08:59.600><c> really</c><00:08:59.839><c> do</c><00:09:00.000><c> take</c>

00:09:00.230 --> 00:09:00.240 align:start position:0%
lines of code and people really do take
 

00:09:00.240 --> 00:09:02.389 align:start position:0%
lines of code and people really do take
advantage<00:09:00.880><c> of</c><00:09:01.120><c> the</c><00:09:01.279><c> fact</c><00:09:01.519><c> that</c><00:09:01.839><c> one</c><00:09:02.080><c> part</c><00:09:02.320><c> of</c>

00:09:02.389 --> 00:09:02.399 align:start position:0%
advantage of the fact that one part of
 

00:09:02.399 --> 00:09:03.990 align:start position:0%
advantage of the fact that one part of
linux<00:09:02.720><c> can</c><00:09:02.880><c> sort</c><00:09:03.040><c> of</c><00:09:03.200><c> look</c><00:09:03.440><c> at</c><00:09:03.519><c> the</c><00:09:03.600><c> data</c><00:09:03.920><c> of</c>

00:09:03.990 --> 00:09:04.000 align:start position:0%
linux can sort of look at the data of
 

00:09:04.000 --> 00:09:05.590 align:start position:0%
linux can sort of look at the data of
another<00:09:04.399><c> and</c><00:09:04.560><c> that</c><00:09:04.640><c> makes</c><00:09:04.880><c> the</c><00:09:04.959><c> programming</c>

00:09:05.590 --> 00:09:05.600 align:start position:0%
another and that makes the programming
 

00:09:05.600 --> 00:09:07.750 align:start position:0%
another and that makes the programming
easier<00:09:06.160><c> but</c><00:09:06.320><c> it</c><00:09:06.480><c> also</c><00:09:06.720><c> make</c><00:09:06.959><c> there</c><00:09:07.200><c> be</c><00:09:07.440><c> a</c><00:09:07.519><c> lot</c>

00:09:07.750 --> 00:09:07.760 align:start position:0%
easier but it also make there be a lot
 

00:09:07.760 --> 00:09:09.910 align:start position:0%
easier but it also make there be a lot
of<00:09:07.839><c> sort</c><00:09:08.000><c> of</c><00:09:08.160><c> interconnections</c>

00:09:09.910 --> 00:09:09.920 align:start position:0%
of sort of interconnections
 

00:09:09.920 --> 00:09:11.829 align:start position:0%
of sort of interconnections
and<00:09:10.080><c> interrelationships</c><00:09:10.880><c> between</c><00:09:11.279><c> code</c><00:09:11.600><c> and</c>

00:09:11.829 --> 00:09:11.839 align:start position:0%
and interrelationships between code and
 

00:09:11.839 --> 00:09:13.190 align:start position:0%
and interrelationships between code and
so<00:09:12.000><c> it</c><00:09:12.080><c> can</c><00:09:12.240><c> be</c>

00:09:13.190 --> 00:09:13.200 align:start position:0%
so it can be
 

00:09:13.200 --> 00:09:15.030 align:start position:0%
so it can be
a<00:09:13.279><c> bit</c><00:09:13.519><c> challenging</c><00:09:13.920><c> sometimes</c><00:09:14.399><c> to</c><00:09:14.640><c> look</c><00:09:14.800><c> at</c>

00:09:15.030 --> 00:09:15.040 align:start position:0%
a bit challenging sometimes to look at
 

00:09:15.040 --> 00:09:16.310 align:start position:0%
a bit challenging sometimes to look at
linux<00:09:15.360><c> kernel</c><00:09:15.600><c> code</c><00:09:15.839><c> and</c><00:09:15.920><c> figure</c><00:09:16.080><c> out</c><00:09:16.160><c> what</c>

00:09:16.310 --> 00:09:16.320 align:start position:0%
linux kernel code and figure out what
 

00:09:16.320 --> 00:09:19.350 align:start position:0%
linux kernel code and figure out what
it's<00:09:16.480><c> up</c><00:09:16.640><c> to</c>

00:09:19.350 --> 00:09:19.360 align:start position:0%
 
 

00:09:19.360 --> 00:09:21.269 align:start position:0%
 
and<00:09:19.600><c> anytime</c><00:09:19.920><c> you</c><00:09:20.000><c> get</c><00:09:20.240><c> big</c><00:09:20.480><c> programs</c>

00:09:21.269 --> 00:09:21.279 align:start position:0%
and anytime you get big programs
 

00:09:21.279 --> 00:09:23.110 align:start position:0%
and anytime you get big programs
especially<00:09:21.680><c> ones</c><00:09:21.920><c> that</c><00:09:22.000><c> are</c>

00:09:23.110 --> 00:09:23.120 align:start position:0%
especially ones that are
 

00:09:23.120 --> 00:09:27.190 align:start position:0%
especially ones that are
complex<00:09:23.600><c> structure</c><00:09:24.000><c> you</c><00:09:24.160><c> get</c><00:09:24.320><c> bugs</c>

00:09:27.190 --> 00:09:27.200 align:start position:0%
 
 

00:09:27.200 --> 00:09:29.430 align:start position:0%
 
and<00:09:28.240><c> operating</c><00:09:28.560><c> system</c><00:09:28.800><c> kernels</c><00:09:29.120><c> are</c><00:09:29.279><c> no</c>

00:09:29.430 --> 00:09:29.440 align:start position:0%
and operating system kernels are no
 

00:09:29.440 --> 00:09:30.470 align:start position:0%
and operating system kernels are no
exceptions<00:09:30.000><c> and</c>

00:09:30.470 --> 00:09:30.480 align:start position:0%
exceptions and
 

00:09:30.480 --> 00:09:31.750 align:start position:0%
exceptions and
over<00:09:30.640><c> the</c><00:09:30.800><c> years</c><00:09:30.959><c> they've</c><00:09:31.120><c> had</c><00:09:31.279><c> all</c><00:09:31.440><c> kinds</c><00:09:31.680><c> of</c>

00:09:31.750 --> 00:09:31.760 align:start position:0%
over the years they've had all kinds of
 

00:09:31.760 --> 00:09:35.110 align:start position:0%
over the years they've had all kinds of
bugs<00:09:33.120><c> including</c><00:09:33.519><c> bugs</c><00:09:34.000><c> that</c>

00:09:35.110 --> 00:09:35.120 align:start position:0%
bugs including bugs that
 

00:09:35.120 --> 00:09:40.070 align:start position:0%
bugs including bugs that
are<00:09:35.360><c> exploitable</c><00:09:36.240><c> for</c><00:09:36.560><c> security</c>

00:09:40.070 --> 00:09:40.080 align:start position:0%
 
 

00:09:40.080 --> 00:09:44.150 align:start position:0%
 
so

00:09:44.150 --> 00:09:44.160 align:start position:0%
 
 

00:09:44.160 --> 00:09:46.630 align:start position:0%
 
so<00:09:44.320><c> this</c><00:09:44.480><c> is</c><00:09:44.560><c> sort</c><00:09:44.720><c> of</c><00:09:44.880><c> a</c><00:09:44.959><c> troubling</c><00:09:46.320><c> set</c><00:09:46.560><c> of</c>

00:09:46.630 --> 00:09:46.640 align:start position:0%
so this is sort of a troubling set of
 

00:09:46.640 --> 00:09:47.590 align:start position:0%
so this is sort of a troubling set of
relationships

00:09:47.590 --> 00:09:47.600 align:start position:0%
relationships
 

00:09:47.600 --> 00:09:49.350 align:start position:0%
relationships
if<00:09:47.760><c> you</c><00:09:47.839><c> allow</c><00:09:48.080><c> a</c><00:09:48.160><c> big</c><00:09:48.320><c> model</c><00:09:48.560><c> of</c><00:09:48.720><c> the</c><00:09:48.800><c> kernel</c>

00:09:49.350 --> 00:09:49.360 align:start position:0%
if you allow a big model of the kernel
 

00:09:49.360 --> 00:09:50.710 align:start position:0%
if you allow a big model of the kernel
you're<00:09:49.600><c> most</c><00:09:49.839><c> certainly</c>

00:09:50.710 --> 00:09:50.720 align:start position:0%
you're most certainly
 

00:09:50.720 --> 00:09:53.430 align:start position:0%
you're most certainly
can't<00:09:50.959><c> avoid</c><00:09:51.600><c> bugs</c><00:09:52.080><c> and</c><00:09:52.800><c> exploitable</c>

00:09:53.430 --> 00:09:53.440 align:start position:0%
can't avoid bugs and exploitable
 

00:09:53.440 --> 00:09:54.870 align:start position:0%
can't avoid bugs and exploitable
security<00:09:53.920><c> problems</c>

00:09:54.870 --> 00:09:54.880 align:start position:0%
security problems
 

00:09:54.880 --> 00:09:57.350 align:start position:0%
security problems
and<00:09:55.040><c> that's</c><00:09:55.279><c> a</c><00:09:55.360><c> real</c><00:09:56.000><c> i</c><00:09:56.080><c> mean</c><00:09:56.399><c> there</c><00:09:56.560><c> really</c><00:09:57.200><c> is</c>

00:09:57.350 --> 00:09:57.360 align:start position:0%
and that's a real i mean there really is
 

00:09:57.360 --> 00:10:00.389 align:start position:0%
and that's a real i mean there really is
a<00:09:57.440><c> problem</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
 
 

00:10:00.399 --> 00:10:03.750 align:start position:0%
 
another<00:10:00.800><c> reason</c><00:10:01.120><c> why</c><00:10:01.360><c> people</c><00:10:01.680><c> are</c>

00:10:03.750 --> 00:10:03.760 align:start position:0%
another reason why people are
 

00:10:03.760 --> 00:10:05.590 align:start position:0%
another reason why people are
maybe<00:10:04.000><c> not</c><00:10:04.240><c> entirely</c><00:10:04.640><c> happy</c><00:10:04.880><c> with</c><00:10:05.040><c> monolithic</c>

00:10:05.590 --> 00:10:05.600 align:start position:0%
maybe not entirely happy with monolithic
 

00:10:05.600 --> 00:10:06.870 align:start position:0%
maybe not entirely happy with monolithic
kernels<00:10:06.079><c> is</c><00:10:06.240><c> that</c>

00:10:06.870 --> 00:10:06.880 align:start position:0%
kernels is that
 

00:10:06.880 --> 00:10:10.150 align:start position:0%
kernels is that
they<00:10:07.120><c> tend</c><00:10:07.360><c> to</c><00:10:07.839><c> just</c><00:10:08.320><c> grow</c><00:10:08.880><c> with</c>

00:10:10.150 --> 00:10:10.160 align:start position:0%
they tend to just grow with
 

00:10:10.160 --> 00:10:13.670 align:start position:0%
they tend to just grow with
all<00:10:10.320><c> desirable</c><00:10:11.040><c> features</c><00:10:11.519><c> over</c><00:10:11.760><c> time</c><00:10:12.480><c> and</c><00:10:12.800><c> so</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
all desirable features over time and so
 

00:10:13.680 --> 00:10:15.190 align:start position:0%
all desirable features over time and so
you<00:10:13.839><c> know</c><00:10:14.000><c> linux</c><00:10:14.320><c> is</c><00:10:14.399><c> used</c><00:10:14.640><c> for</c><00:10:14.720><c> all</c><00:10:14.880><c> kinds</c><00:10:15.120><c> of</c>

00:10:15.190 --> 00:10:15.200 align:start position:0%
you know linux is used for all kinds of
 

00:10:15.200 --> 00:10:17.110 align:start position:0%
you know linux is used for all kinds of
different<00:10:15.360><c> things</c><00:10:15.600><c> from</c><00:10:15.920><c> telephone</c><00:10:16.399><c> handsets</c>

00:10:17.110 --> 00:10:17.120 align:start position:0%
different things from telephone handsets
 

00:10:17.120 --> 00:10:21.430 align:start position:0%
different things from telephone handsets
to<00:10:18.320><c> desktop</c><00:10:18.800><c> workstations</c><00:10:19.440><c> and</c><00:10:19.519><c> laptops</c><00:10:20.240><c> to</c>

00:10:21.430 --> 00:10:21.440 align:start position:0%
to desktop workstations and laptops to
 

00:10:21.440 --> 00:10:23.829 align:start position:0%
to desktop workstations and laptops to
tablets<00:10:22.079><c> to</c><00:10:22.560><c> servers</c><00:10:22.959><c> on</c><00:10:23.040><c> the</c><00:10:23.200><c> internet</c><00:10:23.600><c> to</c>

00:10:23.829 --> 00:10:23.839 align:start position:0%
tablets to servers on the internet to
 

00:10:23.839 --> 00:10:24.949 align:start position:0%
tablets to servers on the internet to
routers

00:10:24.949 --> 00:10:24.959 align:start position:0%
routers
 

00:10:24.959 --> 00:10:27.590 align:start position:0%
routers
um<00:10:25.920><c> and</c><00:10:26.160><c> that's</c><00:10:26.399><c> caused</c><00:10:26.640><c> the</c><00:10:26.800><c> next</c><00:10:27.440><c> it's</c>

00:10:27.590 --> 00:10:27.600 align:start position:0%
um and that's caused the next it's
 

00:10:27.600 --> 00:10:29.190 align:start position:0%
um and that's caused the next it's
fantastic<00:10:28.079><c> that</c><00:10:28.240><c> linux</c><00:10:28.560><c> can</c><00:10:28.720><c> support</c><00:10:29.040><c> all</c>

00:10:29.190 --> 00:10:29.200 align:start position:0%
fantastic that linux can support all
 

00:10:29.200 --> 00:10:30.150 align:start position:0%
fantastic that linux can support all
those<00:10:29.360><c> things</c>

00:10:30.150 --> 00:10:30.160 align:start position:0%
those things
 

00:10:30.160 --> 00:10:31.910 align:start position:0%
those things
but<00:10:30.399><c> it</c><00:10:30.480><c> has</c><00:10:30.640><c> caused</c><00:10:30.880><c> it</c><00:10:30.959><c> to</c><00:10:31.120><c> be</c><00:10:31.200><c> very</c><00:10:31.440><c> general</c>

00:10:31.910 --> 00:10:31.920 align:start position:0%
but it has caused it to be very general
 

00:10:31.920 --> 00:10:34.069 align:start position:0%
but it has caused it to be very general
so<00:10:32.079><c> it</c><00:10:32.160><c> has</c><00:10:32.800><c> support</c><00:10:33.200><c> in</c><00:10:33.360><c> there</c><00:10:33.440><c> for</c><00:10:33.600><c> many</c><00:10:33.839><c> many</c>

00:10:34.069 --> 00:10:34.079 align:start position:0%
so it has support in there for many many
 

00:10:34.079 --> 00:10:35.110 align:start position:0%
so it has support in there for many many
different<00:10:34.320><c> things</c>

00:10:35.110 --> 00:10:35.120 align:start position:0%
different things
 

00:10:35.120 --> 00:10:37.430 align:start position:0%
different things
and<00:10:35.440><c> any</c><00:10:36.000><c> one</c><00:10:36.320><c> application</c><00:10:36.800><c> like</c><00:10:37.040><c> me</c><00:10:37.200><c> running</c>

00:10:37.430 --> 00:10:37.440 align:start position:0%
and any one application like me running
 

00:10:37.440 --> 00:10:39.990 align:start position:0%
and any one application like me running
my<00:10:37.600><c> web</c><00:10:37.839><c> server</c><00:10:38.079><c> is</c><00:10:38.240><c> unlikely</c><00:10:38.800><c> to</c><00:10:38.959><c> need</c>

00:10:39.990 --> 00:10:40.000 align:start position:0%
my web server is unlikely to need
 

00:10:40.000 --> 00:10:41.590 align:start position:0%
my web server is unlikely to need
uh<00:10:40.320><c> for</c><00:10:40.480><c> example</c><00:10:40.880><c> linux's</c><00:10:41.440><c> very</c>

00:10:41.590 --> 00:10:41.600 align:start position:0%
uh for example linux's very
 

00:10:41.600 --> 00:10:43.990 align:start position:0%
uh for example linux's very
sophisticated<00:10:42.480><c> sound</c><00:10:42.880><c> card</c><00:10:43.200><c> support</c>

00:10:43.990 --> 00:10:44.000 align:start position:0%
sophisticated sound card support
 

00:10:44.000 --> 00:10:45.910 align:start position:0%
sophisticated sound card support
so<00:10:44.240><c> there's</c><00:10:44.399><c> just</c><00:10:44.640><c> a</c><00:10:45.040><c> huge</c><00:10:45.279><c> amount</c><00:10:45.519><c> of</c><00:10:45.600><c> stuff</c>

00:10:45.910 --> 00:10:45.920 align:start position:0%
so there's just a huge amount of stuff
 

00:10:45.920 --> 00:10:47.750 align:start position:0%
so there's just a huge amount of stuff
that's<00:10:46.880><c> there</c><00:10:47.200><c> for</c>

00:10:47.750 --> 00:10:47.760 align:start position:0%
that's there for
 

00:10:47.760 --> 00:10:50.949 align:start position:0%
that's there for
to<00:10:47.920><c> allow</c><00:10:48.240><c> linux</c><00:10:48.640><c> to</c><00:10:48.800><c> be</c><00:10:48.959><c> general</c><00:10:49.279><c> purpose</c><00:10:50.320><c> um</c>

00:10:50.949 --> 00:10:50.959 align:start position:0%
to allow linux to be general purpose um
 

00:10:50.959 --> 00:10:54.550 align:start position:0%
to allow linux to be general purpose um
which<00:10:51.200><c> is</c><00:10:51.360><c> good</c><00:10:52.079><c> but</c><00:10:53.200><c> there's</c><00:10:53.519><c> a</c><00:10:53.920><c> worry</c>

00:10:54.550 --> 00:10:54.560 align:start position:0%
which is good but there's a worry
 

00:10:54.560 --> 00:10:57.590 align:start position:0%
which is good but there's a worry
that<00:10:55.920><c> uh</c><00:10:56.160><c> general</c><00:10:56.480><c> purpose</c><00:10:56.880><c> is</c><00:10:57.040><c> gonna</c><00:10:57.279><c> tend</c><00:10:57.519><c> to</c>

00:10:57.590 --> 00:10:57.600 align:start position:0%
that uh general purpose is gonna tend to
 

00:10:57.600 --> 00:10:58.870 align:start position:0%
that uh general purpose is gonna tend to
mean<00:10:57.920><c> slow</c>

00:10:58.870 --> 00:10:58.880 align:start position:0%
mean slow
 

00:10:58.880 --> 00:11:01.030 align:start position:0%
mean slow
that<00:10:59.120><c> you</c><00:10:59.279><c> know</c><00:10:59.360><c> it</c><00:10:59.440><c> may</c><00:10:59.600><c> be</c><00:11:00.560><c> good</c><00:11:00.720><c> for</c><00:11:00.880><c> all</c>

00:11:01.030 --> 00:11:01.040 align:start position:0%
that you know it may be good for all
 

00:11:01.040 --> 00:11:02.230 align:start position:0%
that you know it may be good for all
kinds<00:11:01.200><c> of</c><00:11:01.279><c> different</c><00:11:01.519><c> things</c><00:11:01.839><c> but</c>

00:11:02.230 --> 00:11:02.240 align:start position:0%
kinds of different things but
 

00:11:02.240 --> 00:11:04.710 align:start position:0%
kinds of different things but
maybe<00:11:02.560><c> not</c><00:11:02.800><c> optimum</c><00:11:04.000><c> for</c><00:11:04.240><c> anything</c><00:11:04.560><c> in</c>

00:11:04.710 --> 00:11:04.720 align:start position:0%
maybe not optimum for anything in
 

00:11:04.720 --> 00:11:06.630 align:start position:0%
maybe not optimum for anything in
particular

00:11:06.630 --> 00:11:06.640 align:start position:0%
particular
 

00:11:06.640 --> 00:11:08.949 align:start position:0%
particular
so<00:11:06.800><c> it's</c><00:11:06.959><c> very</c><00:11:07.120><c> hard</c><00:11:07.440><c> to</c><00:11:08.560><c> you</c><00:11:08.720><c> know</c><00:11:08.800><c> when</c>

00:11:08.949 --> 00:11:08.959 align:start position:0%
so it's very hard to you know when
 

00:11:08.959 --> 00:11:09.990 align:start position:0%
so it's very hard to you know when
you're<00:11:09.120><c> trying</c><00:11:09.279><c> to</c><00:11:09.360><c> make</c><00:11:09.440><c> something</c><00:11:09.680><c> run</c>

00:11:09.990 --> 00:11:10.000 align:start position:0%
you're trying to make something run
 

00:11:10.000 --> 00:11:10.710 align:start position:0%
you're trying to make something run
really<00:11:10.240><c> fast</c>

00:11:10.710 --> 00:11:10.720 align:start position:0%
really fast
 

00:11:10.720 --> 00:11:13.110 align:start position:0%
really fast
it's<00:11:10.880><c> great</c><00:11:11.440><c> to</c><00:11:11.600><c> have</c><00:11:11.760><c> it</c><00:11:11.920><c> just</c><00:11:12.399><c> only</c><00:11:12.720><c> do</c><00:11:12.880><c> one</c>

00:11:13.110 --> 00:11:13.120 align:start position:0%
it's great to have it just only do one
 

00:11:13.120 --> 00:11:14.710 align:start position:0%
it's great to have it just only do one
or<00:11:13.200><c> two</c><00:11:13.440><c> things</c><00:11:13.760><c> so</c><00:11:13.920><c> you</c><00:11:14.000><c> can</c><00:11:14.160><c> focus</c><00:11:14.480><c> on</c>

00:11:14.710 --> 00:11:14.720 align:start position:0%
or two things so you can focus on
 

00:11:14.720 --> 00:11:17.269 align:start position:0%
or two things so you can focus on
optimizing<00:11:15.360><c> a</c><00:11:15.519><c> single</c><00:11:15.839><c> code</c><00:11:16.160><c> path</c>

00:11:17.269 --> 00:11:17.279 align:start position:0%
optimizing a single code path
 

00:11:17.279 --> 00:11:19.350 align:start position:0%
optimizing a single code path
but<00:11:17.440><c> if</c><00:11:17.519><c> your</c><00:11:17.680><c> software</c><00:11:18.000><c> needs</c><00:11:18.160><c> to</c><00:11:18.320><c> do</c><00:11:18.959><c> any</c><00:11:19.200><c> one</c>

00:11:19.350 --> 00:11:19.360 align:start position:0%
but if your software needs to do any one
 

00:11:19.360 --> 00:11:20.710 align:start position:0%
but if your software needs to do any one
of<00:11:19.440><c> a</c><00:11:19.519><c> thousand</c><00:11:19.839><c> different</c><00:11:20.160><c> things</c><00:11:20.399><c> it's</c><00:11:20.480><c> much</c>

00:11:20.710 --> 00:11:20.720 align:start position:0%
of a thousand different things it's much
 

00:11:20.720 --> 00:11:25.190 align:start position:0%
of a thousand different things it's much
harder<00:11:21.040><c> to</c><00:11:21.279><c> have</c><00:11:21.519><c> focused</c><00:11:22.000><c> optimization</c>

00:11:25.190 --> 00:11:25.200 align:start position:0%
 
 

00:11:25.200 --> 00:11:27.509 align:start position:0%
 
so<00:11:25.360><c> this</c><00:11:25.600><c> is</c><00:11:26.160><c> linux</c><00:11:26.480><c> is</c><00:11:26.560><c> not</c><00:11:26.720><c> necessarily</c><00:11:27.200><c> slow</c>

00:11:27.509 --> 00:11:27.519 align:start position:0%
so this is linux is not necessarily slow
 

00:11:27.519 --> 00:11:29.030 align:start position:0%
so this is linux is not necessarily slow
but<00:11:27.680><c> it's</c><00:11:27.920><c> you</c><00:11:28.079><c> know</c><00:11:28.240><c> you</c><00:11:28.480><c> you</c><00:11:28.640><c> might</c><00:11:28.800><c> wonder</c>

00:11:29.030 --> 00:11:29.040 align:start position:0%
but it's you know you you might wonder
 

00:11:29.040 --> 00:11:30.389 align:start position:0%
but it's you know you you might wonder
if<00:11:29.200><c> it's</c><00:11:29.360><c> really</c><00:11:29.519><c> as</c><00:11:29.680><c> fast</c><00:11:30.000><c> as</c>

00:11:30.389 --> 00:11:30.399 align:start position:0%
if it's really as fast as
 

00:11:30.399 --> 00:11:32.870 align:start position:0%
if it's really as fast as
um<00:11:30.800><c> it</c><00:11:30.959><c> could</c><00:11:31.120><c> possibly</c><00:11:31.600><c> be</c><00:11:31.760><c> for</c><00:11:32.160><c> any</c><00:11:32.480><c> given</c>

00:11:32.870 --> 00:11:32.880 align:start position:0%
um it could possibly be for any given
 

00:11:32.880 --> 00:11:34.310 align:start position:0%
um it could possibly be for any given
situation

00:11:34.310 --> 00:11:34.320 align:start position:0%
situation
 

00:11:34.320 --> 00:11:36.550 align:start position:0%
situation
um<00:11:35.040><c> and</c><00:11:35.200><c> so</c><00:11:35.360><c> if</c><00:11:35.440><c> you</c><00:11:35.600><c> think</c><00:11:35.760><c> about</c><00:11:36.079><c> i</c><00:11:36.160><c> mean</c><00:11:36.399><c> all</c>

00:11:36.550 --> 00:11:36.560 align:start position:0%
um and so if you think about i mean all
 

00:11:36.560 --> 00:11:37.430 align:start position:0%
um and so if you think about i mean all
you<00:11:36.959><c> you</c><00:11:37.120><c> think</c>

00:11:37.430 --> 00:11:37.440 align:start position:0%
you you think
 

00:11:37.440 --> 00:11:39.670 align:start position:0%
you you think
if<00:11:37.600><c> you</c><00:11:37.680><c> think</c><00:11:37.839><c> about</c><00:11:38.480><c> almost</c><00:11:38.800><c> anything</c><00:11:39.279><c> in</c>

00:11:39.670 --> 00:11:39.680 align:start position:0%
if you think about almost anything in
 

00:11:39.680 --> 00:11:41.750 align:start position:0%
if you think about almost anything in
linux<00:11:40.000><c> or</c><00:11:40.160><c> xb6</c>

00:11:41.750 --> 00:11:41.760 align:start position:0%
linux or xb6
 

00:11:41.760 --> 00:11:42.949 align:start position:0%
linux or xb6
you<00:11:41.920><c> know</c><00:11:42.079><c> you</c><00:11:42.240><c> may</c><00:11:42.399><c> wonder</c><00:11:42.720><c> whether</c><00:11:42.880><c> it</c>

00:11:42.949 --> 00:11:42.959 align:start position:0%
you know you may wonder whether it
 

00:11:42.959 --> 00:11:44.550 align:start position:0%
you know you may wonder whether it
really<00:11:43.200><c> needs</c><00:11:43.360><c> to</c><00:11:43.440><c> do</c><00:11:43.600><c> everything</c><00:11:44.000><c> it</c><00:11:44.079><c> does</c><00:11:44.399><c> so</c>

00:11:44.550 --> 00:11:44.560 align:start position:0%
really needs to do everything it does so
 

00:11:44.560 --> 00:11:46.630 align:start position:0%
really needs to do everything it does so
for<00:11:44.720><c> example</c><00:11:45.120><c> if</c><00:11:45.200><c> you</c><00:11:45.360><c> write</c><00:11:45.680><c> a</c><00:11:45.839><c> single</c><00:11:46.240><c> byte</c>

00:11:46.630 --> 00:11:46.640 align:start position:0%
for example if you write a single byte
 

00:11:46.640 --> 00:11:47.590 align:start position:0%
for example if you write a single byte
over<00:11:46.880><c> a</c><00:11:47.040><c> pipe</c>

00:11:47.590 --> 00:11:47.600 align:start position:0%
over a pipe
 

00:11:47.600 --> 00:11:49.829 align:start position:0%
over a pipe
from<00:11:47.760><c> one</c><00:11:48.000><c> process</c><00:11:48.399><c> to</c><00:11:48.560><c> another</c><00:11:49.440><c> boy</c><00:11:49.680><c> there's</c>

00:11:49.829 --> 00:11:49.839 align:start position:0%
from one process to another boy there's
 

00:11:49.839 --> 00:11:51.910 align:start position:0%
from one process to another boy there's
a<00:11:49.920><c> lot</c><00:11:50.079><c> of</c><00:11:50.240><c> instructions</c><00:11:50.800><c> that</c><00:11:50.880><c> get</c><00:11:51.120><c> executed</c>

00:11:51.910 --> 00:11:51.920 align:start position:0%
a lot of instructions that get executed
 

00:11:51.920 --> 00:11:54.470 align:start position:0%
a lot of instructions that get executed
even<00:11:52.160><c> in</c><00:11:52.320><c> xv6</c><00:11:52.959><c> which</c><00:11:53.120><c> is</c><00:11:53.279><c> a</c><00:11:53.360><c> simple</c><00:11:53.760><c> kernel</c>

00:11:54.470 --> 00:11:54.480 align:start position:0%
even in xv6 which is a simple kernel
 

00:11:54.480 --> 00:11:55.350 align:start position:0%
even in xv6 which is a simple kernel
right<00:11:54.639><c> there's</c>

00:11:55.350 --> 00:11:55.360 align:start position:0%
right there's
 

00:11:55.360 --> 00:11:58.150 align:start position:0%
right there's
buffering<00:11:56.320><c> you</c><00:11:56.399><c> know</c><00:11:56.720><c> there's</c><00:11:57.279><c> locking</c>

00:11:58.150 --> 00:11:58.160 align:start position:0%
buffering you know there's locking
 

00:11:58.160 --> 00:12:00.310 align:start position:0%
buffering you know there's locking
there's<00:11:58.560><c> could</c><00:11:58.720><c> be</c><00:11:58.880><c> a</c><00:11:58.959><c> sleep</c><00:11:59.279><c> and</c><00:11:59.440><c> a</c><00:11:59.519><c> wake</c><00:11:59.839><c> up</c>

00:12:00.310 --> 00:12:00.320 align:start position:0%
there's could be a sleep and a wake up
 

00:12:00.320 --> 00:12:01.750 align:start position:0%
there's could be a sleep and a wake up
during<00:12:00.639><c> a</c><00:12:00.720><c> pipe</c><00:12:00.959><c> read</c><00:12:01.279><c> and</c><00:12:01.360><c> write</c><00:12:01.600><c> there's</c>

00:12:01.750 --> 00:12:01.760 align:start position:0%
during a pipe read and write there's
 

00:12:01.760 --> 00:12:03.430 align:start position:0%
during a pipe read and write there's
maybe<00:12:02.079><c> a</c><00:12:02.160><c> scheduling</c><00:12:03.120><c> may</c>

00:12:03.430 --> 00:12:03.440 align:start position:0%
maybe a scheduling may
 

00:12:03.440 --> 00:12:05.670 align:start position:0%
maybe a scheduling may
call<00:12:03.600><c> to</c><00:12:03.760><c> the</c><00:12:03.920><c> scheduler</c><00:12:04.399><c> or</c><00:12:04.560><c> contact</c><00:12:04.959><c> switch</c>

00:12:05.670 --> 00:12:05.680 align:start position:0%
call to the scheduler or contact switch
 

00:12:05.680 --> 00:12:07.509 align:start position:0%
call to the scheduler or contact switch
that's<00:12:06.000><c> a</c><00:12:06.079><c> lot</c><00:12:06.240><c> of</c><00:12:06.320><c> stuff</c><00:12:06.639><c> that's</c>

00:12:07.509 --> 00:12:07.519 align:start position:0%
that's a lot of stuff that's
 

00:12:07.519 --> 00:12:10.870 align:start position:0%
that's a lot of stuff that's
maybe<00:12:07.839><c> not</c><00:12:08.839><c> necessarily</c>

00:12:10.870 --> 00:12:10.880 align:start position:0%
maybe not necessarily
 

00:12:10.880 --> 00:12:12.150 align:start position:0%
maybe not necessarily
the<00:12:11.040><c> absolute</c><00:12:11.440><c> minimum</c><00:12:11.839><c> that</c><00:12:12.000><c> would</c><00:12:12.079><c> be</c>

00:12:12.150 --> 00:12:12.160 align:start position:0%
the absolute minimum that would be
 

00:12:12.160 --> 00:12:13.990 align:start position:0%
the absolute minimum that would be
required<00:12:12.560><c> to</c><00:12:12.639><c> move</c><00:12:12.880><c> a</c><00:12:12.959><c> byte</c><00:12:13.440><c> from</c>

00:12:13.990 --> 00:12:14.000 align:start position:0%
required to move a byte from
 

00:12:14.000 --> 00:12:17.829 align:start position:0%
required to move a byte from
one<00:12:14.240><c> process</c><00:12:14.639><c> to</c><00:12:14.880><c> another</c>

00:12:17.829 --> 00:12:17.839 align:start position:0%
 
 

00:12:17.839 --> 00:12:19.430 align:start position:0%
 
another<00:12:18.160><c> potential</c><00:12:18.639><c> problem</c><00:12:18.959><c> with</c><00:12:19.040><c> these</c><00:12:19.200><c> big</c>

00:12:19.430 --> 00:12:19.440 align:start position:0%
another potential problem with these big
 

00:12:19.440 --> 00:12:21.430 align:start position:0%
another potential problem with these big
kernels<00:12:20.000><c> is</c><00:12:20.160><c> that</c>

00:12:21.430 --> 00:12:21.440 align:start position:0%
kernels is that
 

00:12:21.440 --> 00:12:23.829 align:start position:0%
kernels is that
they<00:12:22.560><c> because</c><00:12:22.800><c> they're</c><00:12:23.040><c> so</c><00:12:23.200><c> big</c><00:12:23.519><c> and</c><00:12:23.600><c> they</c>

00:12:23.829 --> 00:12:23.839 align:start position:0%
they because they're so big and they
 

00:12:23.839 --> 00:12:25.670 align:start position:0%
they because they're so big and they
sort<00:12:24.000><c> of</c><00:12:24.160><c> intentionally</c>

00:12:25.670 --> 00:12:25.680 align:start position:0%
sort of intentionally
 

00:12:25.680 --> 00:12:28.629 align:start position:0%
sort of intentionally
bite<00:12:26.000><c> off</c><00:12:26.560><c> some</c><00:12:26.720><c> very</c><00:12:27.040><c> sophisticated</c>

00:12:28.629 --> 00:12:28.639 align:start position:0%
bite off some very sophisticated
 

00:12:28.639 --> 00:12:29.670 align:start position:0%
bite off some very sophisticated
abstractions

00:12:29.670 --> 00:12:29.680 align:start position:0%
abstractions
 

00:12:29.680 --> 00:12:30.870 align:start position:0%
abstractions
they<00:12:29.839><c> tend</c><00:12:30.000><c> to</c><00:12:30.079><c> have</c><00:12:30.240><c> a</c><00:12:30.240><c> lot</c><00:12:30.399><c> of</c><00:12:30.560><c> design</c>

00:12:30.870 --> 00:12:30.880 align:start position:0%
they tend to have a lot of design
 

00:12:30.880 --> 00:12:33.350 align:start position:0%
they tend to have a lot of design
decisions<00:12:31.360><c> kind</c><00:12:31.519><c> of</c><00:12:31.600><c> baked</c><00:12:32.000><c> into</c><00:12:32.240><c> the</c><00:12:32.320><c> kernel</c>

00:12:33.350 --> 00:12:33.360 align:start position:0%
decisions kind of baked into the kernel
 

00:12:33.360 --> 00:12:37.829 align:start position:0%
decisions kind of baked into the kernel
um<00:12:34.720><c> so</c><00:12:36.160><c> you</c><00:12:36.320><c> know</c><00:12:36.480><c> in</c><00:12:36.639><c> ways</c><00:12:36.880><c> that</c><00:12:37.040><c> you</c><00:12:37.200><c> can't</c>

00:12:37.829 --> 00:12:37.839 align:start position:0%
um so you know in ways that you can't
 

00:12:37.839 --> 00:12:39.190 align:start position:0%
um so you know in ways that you can't
even<00:12:38.079><c> if</c><00:12:38.160><c> you</c><00:12:38.240><c> disagree</c><00:12:38.639><c> with</c><00:12:38.800><c> them</c><00:12:38.880><c> you</c><00:12:39.040><c> can't</c>

00:12:39.190 --> 00:12:39.200 align:start position:0%
even if you disagree with them you can't
 

00:12:39.200 --> 00:12:39.670 align:start position:0%
even if you disagree with them you can't
really

00:12:39.670 --> 00:12:39.680 align:start position:0%
really
 

00:12:39.680 --> 00:12:41.350 align:start position:0%
really
you<00:12:39.839><c> know</c><00:12:39.920><c> tough</c><00:12:40.240><c> luck</c><00:12:40.639><c> like</c><00:12:40.880><c> applications</c>

00:12:41.350 --> 00:12:41.360 align:start position:0%
you know tough luck like applications
 

00:12:41.360 --> 00:12:43.030 align:start position:0%
you know tough luck like applications
just<00:12:41.519><c> have</c><00:12:41.680><c> to</c><00:12:41.920><c> have</c><00:12:42.079><c> to</c><00:12:42.240><c> live</c><00:12:42.399><c> with</c><00:12:42.639><c> it</c>

00:12:43.030 --> 00:12:43.040 align:start position:0%
just have to have to live with it
 

00:12:43.040 --> 00:12:47.509 align:start position:0%
just have to have to live with it
so

00:12:47.509 --> 00:12:47.519 align:start position:0%
 
 

00:12:47.519 --> 00:12:49.110 align:start position:0%
 
you<00:12:47.600><c> know</c><00:12:47.760><c> as</c><00:12:47.920><c> a</c><00:12:48.160><c> as</c><00:12:48.320><c> opposed</c><00:12:48.639><c> to</c><00:12:48.800><c> you</c><00:12:48.880><c> men</c><00:12:49.040><c> in</c>

00:12:49.110 --> 00:12:49.120 align:start position:0%
you know as a as opposed to you men in
 

00:12:49.120 --> 00:12:50.230 align:start position:0%
you know as a as opposed to you men in
some<00:12:49.279><c> fantasy</c><00:12:49.600><c> world</c><00:12:49.839><c> maybe</c><00:12:50.079><c> the</c>

00:12:50.230 --> 00:12:50.240 align:start position:0%
some fantasy world maybe the
 

00:12:50.240 --> 00:12:51.509 align:start position:0%
some fantasy world maybe the
applications<00:12:50.800><c> could</c>

00:12:51.509 --> 00:12:51.519 align:start position:0%
applications could
 

00:12:51.519 --> 00:12:53.590 align:start position:0%
applications could
make<00:12:51.680><c> a</c><00:12:51.760><c> lot</c><00:12:51.920><c> more</c><00:12:52.079><c> of</c><00:12:52.160><c> the</c><00:12:52.320><c> decisions</c><00:12:52.880><c> so</c><00:12:53.519><c> you</c>

00:12:53.590 --> 00:12:53.600 align:start position:0%
make a lot more of the decisions so you
 

00:12:53.600 --> 00:12:57.829 align:start position:0%
make a lot more of the decisions so you
know<00:12:53.839><c> some</c><00:12:54.079><c> examples</c><00:12:54.480><c> of</c><00:12:54.639><c> things</c><00:12:54.959><c> where</c>

00:12:57.829 --> 00:12:57.839 align:start position:0%
 
 

00:12:57.839 --> 00:13:02.069 align:start position:0%
 
you<00:12:58.000><c> may</c><00:12:58.240><c> just</c><00:12:58.560><c> you</c><00:12:58.720><c> may</c><00:12:59.200><c> be</c><00:12:59.760><c> bummed</c><00:13:00.160><c> out</c><00:13:00.399><c> by</c>

00:13:02.069 --> 00:13:02.079 align:start position:0%
you may just you may be bummed out by
 

00:13:02.079 --> 00:13:05.269 align:start position:0%
you may just you may be bummed out by
the<00:13:02.320><c> way</c><00:13:02.560><c> the</c><00:13:02.800><c> api</c><00:13:03.279><c> is</c><00:13:03.360><c> designed</c><00:13:04.000><c> for</c><00:13:04.240><c> example</c>

00:13:05.269 --> 00:13:05.279 align:start position:0%
the way the api is designed for example
 

00:13:05.279 --> 00:13:08.069 align:start position:0%
the way the api is designed for example
in<00:13:05.519><c> uh</c> in<00:13:06.079><c> unix</c><00:13:06.480><c> you</c><00:13:06.639><c> can</c><00:13:06.800><c> wait</c><00:13:07.040><c> for</c><00:13:07.519><c> a</c><00:13:07.600><c> process</c>

00:13:08.069 --> 00:13:08.079 align:start position:0%
in uh in unix you can wait for a process
 

00:13:08.079 --> 00:13:09.509 align:start position:0%
in uh in unix you can wait for a process
your<00:13:08.240><c> own</c><00:13:08.399><c> children</c><00:13:08.800><c> you</c><00:13:08.959><c> know</c><00:13:09.040><c> if</c><00:13:09.120><c> you</c><00:13:09.279><c> fork</c>

00:13:09.509 --> 00:13:09.519 align:start position:0%
your own children you know if you fork
 

00:13:09.519 --> 00:13:10.629 align:start position:0%
your own children you know if you fork
you<00:13:09.680><c> can</c><00:13:09.760><c> then</c><00:13:09.839><c> wait</c><00:13:10.000><c> for</c><00:13:10.079><c> your</c><00:13:10.240><c> children</c><00:13:10.480><c> but</c>

00:13:10.629 --> 00:13:10.639 align:start position:0%
you can then wait for your children but
 

00:13:10.639 --> 00:13:12.150 align:start position:0%
you can then wait for your children but
you<00:13:10.720><c> can't</c><00:13:10.880><c> wait</c><00:13:11.040><c> for</c><00:13:11.200><c> some</c><00:13:11.440><c> other</c><00:13:11.600><c> process</c>

00:13:12.150 --> 00:13:12.160 align:start position:0%
you can't wait for some other process
 

00:13:12.160 --> 00:13:13.509 align:start position:0%
you can't wait for some other process
and<00:13:12.480><c> you</c><00:13:12.560><c> know</c><00:13:12.639><c> maybe</c><00:13:12.880><c> you</c><00:13:12.959><c> want</c><00:13:13.120><c> to</c><00:13:13.200><c> wait</c><00:13:13.360><c> for</c>

00:13:13.509 --> 00:13:13.519 align:start position:0%
and you know maybe you want to wait for
 

00:13:13.519 --> 00:13:15.829 align:start position:0%
and you know maybe you want to wait for
a<00:13:13.600><c> grandchild</c><00:13:14.320><c> or</c><00:13:14.639><c> an</c><00:13:14.800><c> unrelated</c><00:13:15.360><c> process</c><00:13:15.680><c> but</c>

00:13:15.829 --> 00:13:15.839 align:start position:0%
a grandchild or an unrelated process but
 

00:13:15.839 --> 00:13:17.030 align:start position:0%
a grandchild or an unrelated process but
that's<00:13:15.920><c> just</c><00:13:16.079><c> not</c><00:13:16.240><c> an</c><00:13:16.399><c> option</c>

00:13:17.030 --> 00:13:17.040 align:start position:0%
that's just not an option
 

00:13:17.040 --> 00:13:19.110 align:start position:0%
that's just not an option
just<00:13:17.360><c> not</c><00:13:17.519><c> the</c><00:13:17.600><c> way</c><00:13:17.760><c> things</c><00:13:18.000><c> work</c><00:13:18.639><c> even</c><00:13:18.880><c> if</c><00:13:19.040><c> it</c>

00:13:19.110 --> 00:13:19.120 align:start position:0%
just not the way things work even if it
 

00:13:19.120 --> 00:13:21.670 align:start position:0%
just not the way things work even if it
would<00:13:19.200><c> be</c><00:13:19.360><c> convenient</c><00:13:19.760><c> for</c><00:13:20.000><c> you</c>

00:13:21.670 --> 00:13:21.680 align:start position:0%
would be convenient for you
 

00:13:21.680 --> 00:13:24.550 align:start position:0%
would be convenient for you
maybe<00:13:21.920><c> you</c><00:13:22.079><c> want</c><00:13:22.320><c> to</c><00:13:22.800><c> change</c><00:13:23.279><c> the</c><00:13:23.440><c> way</c><00:13:24.240><c> another</c>

00:13:24.550 --> 00:13:24.560 align:start position:0%
maybe you want to change the way another
 

00:13:24.560 --> 00:13:26.550 align:start position:0%
maybe you want to change the way another
processes<00:13:25.120><c> address</c><00:13:25.440><c> space</c><00:13:25.760><c> is</c><00:13:25.920><c> set</c><00:13:26.160><c> up</c><00:13:26.399><c> you</c>

00:13:26.550 --> 00:13:26.560 align:start position:0%
processes address space is set up you
 

00:13:26.560 --> 00:13:27.030 align:start position:0%
processes address space is set up you
know<00:13:26.639><c> maybe</c>

00:13:27.030 --> 00:13:27.040 align:start position:0%
know maybe
 

00:13:27.040 --> 00:13:29.910 align:start position:0%
know maybe
call<00:13:27.279><c> a</c><00:13:27.440><c> map</c><00:13:27.760><c> on</c><00:13:27.839><c> behalf</c><00:13:28.240><c> of</c><00:13:28.399><c> another</c><00:13:28.720><c> process</c>

00:13:29.910 --> 00:13:29.920 align:start position:0%
call a map on behalf of another process
 

00:13:29.920 --> 00:13:31.190 align:start position:0%
call a map on behalf of another process
that<00:13:30.000><c> you're</c><00:13:30.240><c> controlling</c><00:13:30.880><c> but</c>

00:13:31.190 --> 00:13:31.200 align:start position:0%
that you're controlling but
 

00:13:31.200 --> 00:13:33.990 align:start position:0%
that you're controlling but
again<00:13:32.000><c> that's</c><00:13:32.240><c> just</c><00:13:32.399><c> not</c><00:13:32.560><c> an</c><00:13:32.720><c> option</c><00:13:33.040><c> you</c><00:13:33.120><c> can</c>

00:13:33.990 --> 00:13:34.000 align:start position:0%
again that's just not an option you can
 

00:13:34.000 --> 00:13:34.470 align:start position:0%
again that's just not an option you can
map

00:13:34.470 --> 00:13:34.480 align:start position:0%
map
 

00:13:34.480 --> 00:13:35.910 align:start position:0%
map
change<00:13:34.720><c> your</c><00:13:34.800><c> own</c><00:13:34.880><c> address</c><00:13:35.200><c> space</c><00:13:35.519><c> but</c><00:13:35.680><c> not</c>

00:13:35.910 --> 00:13:35.920 align:start position:0%
change your own address space but not
 

00:13:35.920 --> 00:13:37.750 align:start position:0%
change your own address space but not
change<00:13:36.160><c> other</c><00:13:36.639><c> other</c><00:13:36.880><c> processes</c><00:13:37.360><c> address</c>

00:13:37.750 --> 00:13:37.760 align:start position:0%
change other other processes address
 

00:13:37.760 --> 00:13:38.310 align:start position:0%
change other other processes address
space

00:13:38.310 --> 00:13:38.320 align:start position:0%
space
 

00:13:38.320 --> 00:13:40.389 align:start position:0%
space
maybe<00:13:38.560><c> you're</c><00:13:38.720><c> a</c><00:13:38.800><c> database</c><00:13:39.360><c> and</c><00:13:39.839><c> you</c><00:13:39.920><c> know</c><00:13:40.079><c> you</c>

00:13:40.389 --> 00:13:40.399 align:start position:0%
maybe you're a database and you know you
 

00:13:40.399 --> 00:13:43.509 align:start position:0%
maybe you're a database and you know you
have<00:13:40.959><c> b</c><00:13:41.279><c> tree</c><00:13:41.680><c> indexes</c><00:13:42.240><c> on</c><00:13:42.399><c> the</c><00:13:42.560><c> disk</c>

00:13:43.509 --> 00:13:43.519 align:start position:0%
have b tree indexes on the disk
 

00:13:43.519 --> 00:13:45.189 align:start position:0%
have b tree indexes on the disk
and<00:13:43.680><c> you</c><00:13:43.839><c> may</c><00:13:44.000><c> know</c><00:13:44.160><c> a</c><00:13:44.240><c> lot</c><00:13:44.560><c> about</c><00:13:44.800><c> it</c><00:13:45.040><c> the</c>

00:13:45.189 --> 00:13:45.199 align:start position:0%
and you may know a lot about it the
 

00:13:45.199 --> 00:13:46.629 align:start position:0%
and you may know a lot about it the
fastest<00:13:45.680><c> way</c><00:13:45.839><c> to</c><00:13:46.000><c> layout</c><00:13:46.320><c> a</c><00:13:46.399><c> b</c>

00:13:46.629 --> 00:13:46.639 align:start position:0%
fastest way to layout a b
 

00:13:46.639 --> 00:13:48.710 align:start position:0%
fastest way to layout a b
tree<00:13:46.880><c> on</c><00:13:46.959><c> a</c><00:13:47.040><c> disk</c><00:13:47.920><c> but</c><00:13:48.160><c> if</c><00:13:48.320><c> you're</c><00:13:48.399><c> reading</c><00:13:48.639><c> and</c>

00:13:48.710 --> 00:13:48.720 align:start position:0%
tree on a disk but if you're reading and
 

00:13:48.720 --> 00:13:50.310 align:start position:0%
tree on a disk but if you're reading and
writing<00:13:49.040><c> files</c><00:13:49.360><c> with</c><00:13:49.440><c> the</c><00:13:49.519><c> file</c><00:13:49.839><c> system</c>

00:13:50.310 --> 00:13:50.320 align:start position:0%
writing files with the file system
 

00:13:50.320 --> 00:13:52.629 align:start position:0%
writing files with the file system
the<00:13:50.480><c> file</c><00:13:50.720><c> system</c><00:13:51.040><c> has</c><00:13:51.199><c> no</c><00:13:51.519><c> idea</c><00:13:52.240><c> that</c><00:13:52.399><c> you're</c>

00:13:52.629 --> 00:13:52.639 align:start position:0%
the file system has no idea that you're
 

00:13:52.639 --> 00:13:54.550 align:start position:0%
the file system has no idea that you're
actually<00:13:52.959><c> writing</c><00:13:53.279><c> a</c><00:13:53.360><c> b</c><00:13:53.600><c> tree</c><00:13:54.000><c> or</c>

00:13:54.550 --> 00:13:54.560 align:start position:0%
actually writing a b tree or
 

00:13:54.560 --> 00:13:56.230 align:start position:0%
actually writing a b tree or
how<00:13:54.800><c> a</c><00:13:54.880><c> b</c><00:13:55.040><c> tree</c><00:13:55.279><c> ought</c><00:13:55.440><c> to</c><00:13:55.519><c> be</c><00:13:55.600><c> laid</c><00:13:55.839><c> out</c><00:13:56.000><c> on</c><00:13:56.160><c> a</c>

00:13:56.230 --> 00:13:56.240 align:start position:0%
how a b tree ought to be laid out on a
 

00:13:56.240 --> 00:13:59.030 align:start position:0%
how a b tree ought to be laid out on a
disk<00:13:56.560><c> for</c><00:13:56.720><c> fastest</c><00:13:57.199><c> access</c>

00:13:59.030 --> 00:13:59.040 align:start position:0%
disk for fastest access
 

00:13:59.040 --> 00:14:00.230 align:start position:0%
disk for fastest access
and<00:13:59.199><c> so</c><00:13:59.360><c> if</c><00:13:59.440><c> you're</c><00:13:59.519><c> a</c><00:13:59.600><c> database</c><00:14:00.079><c> you're</c><00:14:00.160><c> going</c>

00:14:00.230 --> 00:14:00.240 align:start position:0%
and so if you're a database you're going
 

00:14:00.240 --> 00:14:01.990 align:start position:0%
and so if you're a database you're going
to<00:14:00.320><c> be</c><00:14:00.399><c> kind</c><00:14:00.560><c> of</c><00:14:00.639><c> bummed</c><00:14:01.120><c> you</c><00:14:01.279><c> know</c><00:14:01.760><c> maybe</c>

00:14:01.990 --> 00:14:02.000 align:start position:0%
to be kind of bummed you know maybe
 

00:14:02.000 --> 00:14:03.110 align:start position:0%
to be kind of bummed you know maybe
you're<00:14:02.160><c> happy</c><00:14:02.399><c> that</c><00:14:02.560><c> you</c><00:14:02.639><c> have</c><00:14:02.800><c> this</c><00:14:02.880><c> file</c>

00:14:03.110 --> 00:14:03.120 align:start position:0%
you're happy that you have this file
 

00:14:03.120 --> 00:14:04.550 align:start position:0%
you're happy that you have this file
system<00:14:03.440><c> at</c><00:14:03.600><c> your</c><00:14:03.760><c> disposal</c>

00:14:04.550 --> 00:14:04.560 align:start position:0%
system at your disposal
 

00:14:04.560 --> 00:14:05.910 align:start position:0%
system at your disposal
but<00:14:04.720><c> it</c><00:14:04.800><c> doesn't</c><00:14:05.040><c> really</c><00:14:05.279><c> do</c><00:14:05.440><c> what</c><00:14:05.519><c> you</c><00:14:05.680><c> want</c>

00:14:05.910 --> 00:14:05.920 align:start position:0%
but it doesn't really do what you want
 

00:14:05.920 --> 00:14:07.750 align:start position:0%
but it doesn't really do what you want
it<00:14:06.000><c> to</c><00:14:06.079><c> do</c><00:14:07.279><c> um</c>

00:14:07.750 --> 00:14:07.760 align:start position:0%
it to do um
 

00:14:07.760 --> 00:14:09.910 align:start position:0%
it to do um
and<00:14:07.839><c> that's</c><00:14:08.000><c> the</c><00:14:08.160><c> sense</c><00:14:08.399><c> in</c><00:14:08.480><c> which</c><00:14:08.880><c> uh</c><00:14:09.519><c> design</c>

00:14:09.910 --> 00:14:09.920 align:start position:0%
and that's the sense in which uh design
 

00:14:09.920 --> 00:14:11.430 align:start position:0%
and that's the sense in which uh design
decisions<00:14:10.320><c> are</c><00:14:10.399><c> often</c><00:14:10.720><c> baked</c><00:14:11.040><c> into</c><00:14:11.279><c> big</c>

00:14:11.430 --> 00:14:11.440 align:start position:0%
decisions are often baked into big
 

00:14:11.440 --> 00:14:13.189 align:start position:0%
decisions are often baked into big
kernels

00:14:13.189 --> 00:14:13.199 align:start position:0%
kernels
 

00:14:13.199 --> 00:14:16.550 align:start position:0%
kernels
and<00:14:13.440><c> finally</c><00:14:13.920><c> a</c><00:14:14.079><c> specific</c><00:14:15.360><c> uh</c>

00:14:16.550 --> 00:14:16.560 align:start position:0%
and finally a specific uh
 

00:14:16.560 --> 00:14:20.870 align:start position:0%
and finally a specific uh
sort<00:14:16.720><c> of</c><00:14:16.880><c> issue</c><00:14:17.519><c> that</c><00:14:19.120><c> um</c>

00:14:20.870 --> 00:14:20.880 align:start position:0%
sort of issue that um
 

00:14:20.880 --> 00:14:23.509 align:start position:0%
sort of issue that um
sort<00:14:21.040><c> of</c><00:14:21.120><c> came</c><00:14:21.360><c> up</c><00:14:21.440><c> in</c><00:14:21.600><c> a</c><00:14:21.680><c> big</c><00:14:21.839><c> way</c><00:14:22.320><c> in</c><00:14:23.199><c> the</c>

00:14:23.509 --> 00:14:23.519 align:start position:0%
sort of came up in a big way in the
 

00:14:23.519 --> 00:14:24.949 align:start position:0%
sort of came up in a big way in the
1990s<00:14:24.399><c> probably</c>

00:14:24.949 --> 00:14:24.959 align:start position:0%
1990s probably
 

00:14:24.959 --> 00:14:30.230 align:start position:0%
1990s probably
um<00:14:25.360><c> it's</c><00:14:25.600><c> a</c><00:14:25.680><c> notion</c><00:14:25.920><c> of</c><00:14:28.839><c> extensibility</c><00:14:29.920><c> uh</c>

00:14:30.230 --> 00:14:30.240 align:start position:0%
um it's a notion of extensibility uh
 

00:14:30.240 --> 00:14:31.910 align:start position:0%
um it's a notion of extensibility uh
that<00:14:30.399><c> it</c><00:14:30.480><c> might</c><00:14:30.639><c> be</c><00:14:30.800><c> desirable</c><00:14:31.279><c> for</c><00:14:31.519><c> programs</c>

00:14:31.910 --> 00:14:31.920 align:start position:0%
that it might be desirable for programs
 

00:14:31.920 --> 00:14:33.430 align:start position:0%
that it might be desirable for programs
to<00:14:32.000><c> be</c><00:14:32.160><c> able</c><00:14:32.240><c> to</c><00:14:32.399><c> change</c><00:14:32.720><c> the</c><00:14:32.800><c> kernel</c><00:14:33.199><c> on</c><00:14:33.360><c> the</c>

00:14:33.430 --> 00:14:33.440 align:start position:0%
to be able to change the kernel on the
 

00:14:33.440 --> 00:14:35.189 align:start position:0%
to be able to change the kernel on the
fly<00:14:33.760><c> like</c><00:14:33.920><c> to</c><00:14:34.000><c> be</c><00:14:34.160><c> able</c><00:14:34.240><c> to</c><00:14:34.399><c> download</c><00:14:34.800><c> new</c><00:14:34.959><c> code</c>

00:14:35.189 --> 00:14:35.199 align:start position:0%
fly like to be able to download new code
 

00:14:35.199 --> 00:14:36.389 align:start position:0%
fly like to be able to download new code
into<00:14:35.360><c> the</c><00:14:35.440><c> kernel</c><00:14:35.680><c> or</c><00:14:35.839><c> change</c><00:14:36.000><c> the</c><00:14:36.079><c> way</c><00:14:36.240><c> it</c>

00:14:36.389 --> 00:14:36.399 align:start position:0%
into the kernel or change the way it
 

00:14:36.399 --> 00:14:37.829 align:start position:0%
into the kernel or change the way it
operates<00:14:36.800><c> or</c><00:14:36.959><c> something</c>

00:14:37.829 --> 00:14:37.839 align:start position:0%
operates or something
 

00:14:37.839 --> 00:14:40.150 align:start position:0%
operates or something
um<00:14:38.480><c> in</c><00:14:38.720><c> order</c><00:14:38.959><c> to</c><00:14:39.120><c> do</c><00:14:39.279><c> things</c><00:14:39.600><c> like</c><00:14:39.920><c> have</c>

00:14:40.150 --> 00:14:40.160 align:start position:0%
um in order to do things like have
 

00:14:40.160 --> 00:14:42.389 align:start position:0%
um in order to do things like have
databases<00:14:40.720><c> be</c><00:14:40.880><c> able</c><00:14:40.959><c> to</c><00:14:41.120><c> control</c><00:14:41.600><c> the</c>

00:14:42.389 --> 00:14:42.399 align:start position:0%
databases be able to control the
 

00:14:42.399 --> 00:14:45.910 align:start position:0%
databases be able to control the
layout<00:14:42.880><c> of</c><00:14:43.279><c> data</c><00:14:43.600><c> on</c><00:14:43.760><c> the</c><00:14:43.920><c> disk</c><00:14:45.360><c> um</c>

00:14:45.910 --> 00:14:45.920 align:start position:0%
layout of data on the disk um
 

00:14:45.920 --> 00:14:48.949 align:start position:0%
layout of data on the disk um
and<00:14:46.720><c> uh</c><00:14:47.360><c> at</c><00:14:47.519><c> least</c>

00:14:48.949 --> 00:14:48.959 align:start position:0%
and uh at least
 

00:14:48.959 --> 00:14:51.350 align:start position:0%
and uh at least
in<00:14:49.199><c> in</c><00:14:49.360><c> decades</c><00:14:49.839><c> past</c><00:14:50.399><c> monolithic</c><00:14:50.959><c> kernels</c>

00:14:51.350 --> 00:14:51.360 align:start position:0%
in in decades past monolithic kernels
 

00:14:51.360 --> 00:14:53.110 align:start position:0%
in in decades past monolithic kernels
tended<00:14:51.680><c> not</c>

00:14:53.110 --> 00:14:53.120 align:start position:0%
tended not
 

00:14:53.120 --> 00:14:55.030 align:start position:0%
tended not
to<00:14:53.600><c> have</c><00:14:53.760><c> any</c><00:14:54.079><c> particular</c><00:14:54.560><c> features</c><00:14:54.880><c> that</c>

00:14:55.030 --> 00:14:55.040 align:start position:0%
to have any particular features that
 

00:14:55.040 --> 00:14:56.710 align:start position:0%
to have any particular features that
helped<00:14:55.279><c> with</c><00:14:55.519><c> this</c><00:14:55.680><c> kind</c><00:14:55.839><c> of</c><00:14:55.920><c> extensibility</c>

00:14:56.710 --> 00:14:56.720 align:start position:0%
helped with this kind of extensibility
 

00:14:56.720 --> 00:14:57.430 align:start position:0%
helped with this kind of extensibility
you're<00:14:56.880><c> just</c>

00:14:57.430 --> 00:14:57.440 align:start position:0%
you're just
 

00:14:57.440 --> 00:15:01.430 align:start position:0%
you're just
stuck<00:14:57.680><c> with</c><00:14:57.839><c> whatever</c><00:14:58.079><c> the</c><00:14:58.160><c> kernel</c><00:14:58.480><c> did</c>

00:15:01.430 --> 00:15:01.440 align:start position:0%
 
 

00:15:01.440 --> 00:15:05.189 align:start position:0%
 
okay<00:15:03.440><c> so</c><00:15:03.680><c> these</c><00:15:03.839><c> were</c><00:15:04.000><c> sort</c><00:15:04.160><c> of</c>

00:15:05.189 --> 00:15:05.199 align:start position:0%
okay so these were sort of
 

00:15:05.199 --> 00:15:07.189 align:start position:0%
okay so these were sort of
problems<00:15:05.680><c> in</c><00:15:05.760><c> the</c><00:15:05.839><c> back</c><00:15:06.079><c> of</c><00:15:06.160><c> people's</c><00:15:06.480><c> minds</c>

00:15:07.189 --> 00:15:07.199 align:start position:0%
problems in the back of people's minds
 

00:15:07.199 --> 00:15:08.870 align:start position:0%
problems in the back of people's minds
that

00:15:08.870 --> 00:15:08.880 align:start position:0%
that
 

00:15:08.880 --> 00:15:11.189 align:start position:0%
that
led<00:15:09.120><c> them</c><00:15:09.279><c> to</c><00:15:09.360><c> think</c><00:15:09.519><c> about</c><00:15:10.000><c> other</c><00:15:10.320><c> kinds</c><00:15:10.639><c> of</c>

00:15:11.189 --> 00:15:11.199 align:start position:0%
led them to think about other kinds of
 

00:15:11.199 --> 00:15:12.790 align:start position:0%
led them to think about other kinds of
other<00:15:11.519><c> ways</c><00:15:11.839><c> of</c><00:15:12.079><c> designing</c>

00:15:12.790 --> 00:15:12.800 align:start position:0%
other ways of designing
 

00:15:12.800 --> 00:15:14.150 align:start position:0%
other ways of designing
other<00:15:13.040><c> architectures</c><00:15:13.600><c> for</c><00:15:13.760><c> operating</c>

00:15:14.150 --> 00:15:14.160 align:start position:0%
other architectures for operating
 

00:15:14.160 --> 00:15:16.710 align:start position:0%
other architectures for operating
systems<00:15:15.040><c> um</c><00:15:15.600><c> and</c><00:15:15.920><c> there</c><00:15:16.000><c> were</c><00:15:16.160><c> another</c><00:15:16.480><c> number</c>

00:15:16.710 --> 00:15:16.720 align:start position:0%
systems um and there were another number
 

00:15:16.720 --> 00:15:17.670 align:start position:0%
systems um and there were another number
of

00:15:17.670 --> 00:15:17.680 align:start position:0%
of
 

00:15:17.680 --> 00:15:19.350 align:start position:0%
of
a<00:15:17.760><c> number</c><00:15:18.000><c> of</c><00:15:18.160><c> ideas</c><00:15:18.560><c> some</c><00:15:18.800><c> quite</c><00:15:19.040><c> radically</c>

00:15:19.350 --> 00:15:19.360 align:start position:0%
a number of ideas some quite radically
 

00:15:19.360 --> 00:15:21.030 align:start position:0%
a number of ideas some quite radically
different<00:15:19.600><c> that</c><00:15:19.760><c> people</c><00:15:20.000><c> pursued</c>

00:15:21.030 --> 00:15:21.040 align:start position:0%
different that people pursued
 

00:15:21.040 --> 00:15:23.269 align:start position:0%
different that people pursued
we're<00:15:21.199><c> going</c><00:15:21.279><c> to</c><00:15:21.360><c> talk</c><00:15:21.519><c> about</c><00:15:21.760><c> one</c><00:15:21.920><c> of</c><00:15:22.079><c> them</c><00:15:23.199><c> a</c>

00:15:23.269 --> 00:15:23.279 align:start position:0%
we're going to talk about one of them a
 

00:15:23.279 --> 00:15:24.470 align:start position:0%
we're going to talk about one of them a
particularly

00:15:24.470 --> 00:15:24.480 align:start position:0%
particularly
 

00:15:24.480 --> 00:15:26.470 align:start position:0%
particularly
popular<00:15:24.880><c> one</c><00:15:25.120><c> today</c><00:15:25.760><c> and</c><00:15:25.839><c> that's</c><00:15:26.079><c> the</c><00:15:26.160><c> idea</c><00:15:26.320><c> of</c>

00:15:26.470 --> 00:15:26.480 align:start position:0%
popular one today and that's the idea of
 

00:15:26.480 --> 00:15:31.509 align:start position:0%
popular one today and that's the idea of
microkernels

00:15:31.509 --> 00:15:31.519 align:start position:0%
 
 

00:15:31.519 --> 00:15:33.509 align:start position:0%
 
microkernels<00:15:32.560><c> although</c><00:15:32.800><c> the</c><00:15:33.040><c> many</c><00:15:33.279><c> of</c><00:15:33.360><c> the</c>

00:15:33.509 --> 00:15:33.519 align:start position:0%
microkernels although the many of the
 

00:15:33.519 --> 00:15:34.710 align:start position:0%
microkernels although the many of the
ideas<00:15:34.079><c> are</c>

00:15:34.710 --> 00:15:34.720 align:start position:0%
ideas are
 

00:15:34.720 --> 00:15:37.590 align:start position:0%
ideas are
go<00:15:34.880><c> back</c><00:15:35.040><c> to</c><00:15:35.199><c> the</c><00:15:35.360><c> beginning</c><00:15:35.920><c> of</c><00:15:37.120><c> computer</c>

00:15:37.590 --> 00:15:37.600 align:start position:0%
go back to the beginning of computer
 

00:15:37.600 --> 00:15:39.590 align:start position:0%
go back to the beginning of computer
history

00:15:39.590 --> 00:15:39.600 align:start position:0%
history
 

00:15:39.600 --> 00:15:43.189 align:start position:0%
history
they<00:15:39.920><c> became</c><00:15:40.320><c> a</c><00:15:40.720><c> sort</c><00:15:40.959><c> of</c><00:15:41.040><c> hot</c><00:15:41.360><c> research</c><00:15:41.920><c> topic</c>

00:15:43.189 --> 00:15:43.199 align:start position:0%
they became a sort of hot research topic
 

00:15:43.199 --> 00:15:48.069 align:start position:0%
they became a sort of hot research topic
starting<00:15:43.600><c> in</c><00:15:43.680><c> maybe</c><00:15:43.920><c> the</c><00:15:44.079><c> mid</c><00:15:44.320><c> to</c><00:15:44.480><c> late</c><00:15:44.880><c> 1980s</c>

00:15:48.069 --> 00:15:48.079 align:start position:0%
 
 

00:15:48.079 --> 00:15:52.629 align:start position:0%
 
and<00:15:48.560><c> the</c><00:15:48.720><c> big</c><00:15:48.959><c> idea</c>

00:15:52.629 --> 00:15:52.639 align:start position:0%
 
 

00:15:52.639 --> 00:15:55.910 align:start position:0%
 
so<00:15:52.959><c> a</c><00:15:53.440><c> micro</c><00:15:53.680><c> kernel</c><00:15:54.000><c> this</c><00:15:54.240><c> this</c><00:15:54.480><c> word</c><00:15:55.519><c> uh</c><00:15:55.759><c> by</c>

00:15:55.910 --> 00:15:55.920 align:start position:0%
so a micro kernel this this word uh by
 

00:15:55.920 --> 00:15:57.430 align:start position:0%
so a micro kernel this this word uh by
the<00:15:56.000><c> way</c><00:15:56.240><c> refers</c><00:15:56.560><c> to</c><00:15:56.720><c> a</c><00:15:56.800><c> sort</c><00:15:56.959><c> of</c><00:15:57.040><c> general</c>

00:15:57.430 --> 00:15:57.440 align:start position:0%
the way refers to a sort of general
 

00:15:57.440 --> 00:15:58.710 align:start position:0%
the way refers to a sort of general
approach<00:15:57.839><c> or</c><00:15:58.000><c> concept</c>

00:15:58.710 --> 00:15:58.720 align:start position:0%
approach or concept
 

00:15:58.720 --> 00:16:00.310 align:start position:0%
approach or concept
it<00:15:58.800><c> doesn't</c><00:15:59.040><c> refer</c><00:15:59.279><c> to</c><00:15:59.360><c> any</c><00:15:59.839><c> specific</c>

00:16:00.310 --> 00:16:00.320 align:start position:0%
it doesn't refer to any specific
 

00:16:00.320 --> 00:16:01.829 align:start position:0%
it doesn't refer to any specific
artifact<00:16:00.720><c> there</c><00:16:00.880><c> were</c><00:16:01.040><c> many</c>

00:16:01.829 --> 00:16:01.839 align:start position:0%
artifact there were many
 

00:16:01.839 --> 00:16:04.470 align:start position:0%
artifact there were many
uh<00:16:02.160><c> people</c><00:16:02.399><c> who</c><00:16:02.720><c> who</c><00:16:03.120><c> designed</c><00:16:03.519><c> and</c><00:16:03.600><c> built</c>

00:16:04.470 --> 00:16:04.480 align:start position:0%
uh people who who designed and built
 

00:16:04.480 --> 00:16:05.829 align:start position:0%
uh people who who designed and built
operating<00:16:04.959><c> systems</c><00:16:05.360><c> that</c>

00:16:05.829 --> 00:16:05.839 align:start position:0%
operating systems that
 

00:16:05.839 --> 00:16:08.310 align:start position:0%
operating systems that
followed<00:16:06.240><c> the</c><00:16:06.399><c> general</c><00:16:07.440><c> sort</c><00:16:07.600><c> of</c><00:16:07.839><c> plan</c><00:16:08.160><c> for</c>

00:16:08.310 --> 00:16:08.320 align:start position:0%
followed the general sort of plan for
 

00:16:08.320 --> 00:16:09.910 align:start position:0%
followed the general sort of plan for
micro<00:16:08.639><c> kernels</c><00:16:08.959><c> but</c><00:16:09.199><c> you</c><00:16:09.279><c> know</c><00:16:09.519><c> each</c><00:16:09.680><c> of</c><00:16:09.759><c> these</c>

00:16:09.910 --> 00:16:09.920 align:start position:0%
micro kernels but you know each of these
 

00:16:09.920 --> 00:16:10.710 align:start position:0%
micro kernels but you know each of these
projects

00:16:10.710 --> 00:16:10.720 align:start position:0%
projects
 

00:16:10.720 --> 00:16:12.230 align:start position:0%
projects
ended<00:16:11.040><c> up</c><00:16:11.120><c> designing</c><00:16:11.519><c> an</c><00:16:11.600><c> operating</c><00:16:11.920><c> system</c>

00:16:12.230 --> 00:16:12.240 align:start position:0%
ended up designing an operating system
 

00:16:12.240 --> 00:16:13.430 align:start position:0%
ended up designing an operating system
was<00:16:12.399><c> maybe</c><00:16:12.639><c> quite</c><00:16:12.800><c> different</c><00:16:13.120><c> from</c><00:16:13.279><c> the</c>

00:16:13.430 --> 00:16:13.440 align:start position:0%
was maybe quite different from the
 

00:16:13.440 --> 00:16:13.990 align:start position:0%
was maybe quite different from the
others

00:16:13.990 --> 00:16:14.000 align:start position:0%
others
 

00:16:14.000 --> 00:16:17.670 align:start position:0%
others
so<00:16:14.240><c> the</c><00:16:14.320><c> key</c><00:16:14.560><c> idea</c><00:16:14.880><c> was</c><00:16:16.800><c> the</c>

00:16:17.670 --> 00:16:17.680 align:start position:0%
so the key idea was the
 

00:16:17.680 --> 00:16:22.470 align:start position:0%
so the key idea was the
tiny<00:16:18.079><c> kernel</c><00:16:20.839><c> um</c>

00:16:22.470 --> 00:16:22.480 align:start position:0%
tiny kernel um
 

00:16:22.480 --> 00:16:26.230 align:start position:0%
tiny kernel um
that<00:16:22.639><c> supported</c><00:16:24.480><c> just</c><00:16:24.959><c> ipc</c>

00:16:26.230 --> 00:16:26.240 align:start position:0%
that supported just ipc
 

00:16:26.240 --> 00:16:29.509 align:start position:0%
that supported just ipc
or<00:16:26.560><c> inter-process</c><00:16:27.440><c> communication</c>

00:16:29.509 --> 00:16:29.519 align:start position:0%
or inter-process communication
 

00:16:29.519 --> 00:16:32.550 align:start position:0%
or inter-process communication
and<00:16:30.639><c> some</c><00:16:30.880><c> sort</c><00:16:31.120><c> of</c><00:16:31.440><c> notion</c><00:16:31.839><c> of</c>

00:16:32.550 --> 00:16:32.560 align:start position:0%
and some sort of notion of
 

00:16:32.560 --> 00:16:36.389 align:start position:0%
and some sort of notion of
threads<00:16:32.959><c> or</c><00:16:33.120><c> tasks</c><00:16:35.040><c> um</c><00:16:35.519><c> so</c><00:16:35.680><c> you</c><00:16:35.839><c> have</c><00:16:35.920><c> a</c><00:16:36.000><c> kernel</c>

00:16:36.389 --> 00:16:36.399 align:start position:0%
threads or tasks um so you have a kernel
 

00:16:36.399 --> 00:16:37.110 align:start position:0%
threads or tasks um so you have a kernel
that<00:16:36.639><c> that</c>

00:16:37.110 --> 00:16:37.120 align:start position:0%
that that
 

00:16:37.120 --> 00:16:39.110 align:start position:0%
that that
you<00:16:37.199><c> know</c><00:16:37.440><c> provides</c><00:16:37.839><c> you</c><00:16:37.920><c> a</c><00:16:38.000><c> notion</c><00:16:38.320><c> of</c><00:16:38.959><c> sort</c>

00:16:39.110 --> 00:16:39.120 align:start position:0%
you know provides you a notion of sort
 

00:16:39.120 --> 00:16:40.870 align:start position:0%
you know provides you a notion of sort
of<00:16:39.279><c> process-like</c><00:16:39.920><c> abstraction</c><00:16:40.560><c> and</c><00:16:40.639><c> a</c><00:16:40.720><c> way</c>

00:16:40.870 --> 00:16:40.880 align:start position:0%
of process-like abstraction and a way
 

00:16:40.880 --> 00:16:42.470 align:start position:0%
of process-like abstraction and a way
for<00:16:41.120><c> processes</c><00:16:41.600><c> to</c><00:16:41.759><c> communicate</c><00:16:42.240><c> with</c><00:16:42.320><c> each</c>

00:16:42.470 --> 00:16:42.480 align:start position:0%
for processes to communicate with each
 

00:16:42.480 --> 00:16:43.430 align:start position:0%
for processes to communicate with each
other<00:16:42.720><c> with</c><00:16:42.800><c> this</c>

00:16:43.430 --> 00:16:43.440 align:start position:0%
other with this
 

00:16:43.440 --> 00:16:45.829 align:start position:0%
other with this
inner<00:16:43.680><c> process</c><00:16:44.000><c> communication</c><00:16:44.959><c> and</c><00:16:45.440><c> nothing</c>

00:16:45.829 --> 00:16:45.839 align:start position:0%
inner process communication and nothing
 

00:16:45.839 --> 00:16:46.949 align:start position:0%
inner process communication and nothing
else<00:16:46.399><c> and</c>

00:16:46.949 --> 00:16:46.959 align:start position:0%
else and
 

00:16:46.959 --> 00:16:48.069 align:start position:0%
else and
everything<00:16:47.279><c> else</c><00:16:47.440><c> you</c><00:16:47.519><c> might</c><00:16:47.680><c> want</c><00:16:47.839><c> to</c><00:16:47.920><c> do</c>

00:16:48.069 --> 00:16:48.079 align:start position:0%
everything else you might want to do
 

00:16:48.079 --> 00:16:50.389 align:start position:0%
everything else you might want to do
like<00:16:48.320><c> have</c><00:16:48.480><c> a</c><00:16:48.560><c> file</c><00:16:48.880><c> system</c><00:16:49.360><c> you'd</c><00:16:49.600><c> implement</c>

00:16:50.389 --> 00:16:50.399 align:start position:0%
like have a file system you'd implement
 

00:16:50.399 --> 00:16:52.870 align:start position:0%
like have a file system you'd implement
as<00:16:50.639><c> a</c><00:16:51.040><c> process</c><00:16:51.519><c> as</c><00:16:51.680><c> a</c><00:16:51.759><c> task</c><00:16:52.079><c> as</c><00:16:52.160><c> a</c><00:16:52.320><c> user</c><00:16:52.560><c> level</c>

00:16:52.870 --> 00:16:52.880 align:start position:0%
as a process as a task as a user level
 

00:16:52.880 --> 00:16:53.430 align:start position:0%
as a process as a task as a user level
code

00:16:53.430 --> 00:16:53.440 align:start position:0%
code
 

00:16:53.440 --> 00:16:56.230 align:start position:0%
code
not<00:16:53.680><c> in</c><00:16:53.759><c> the</c><00:16:53.839><c> kernel</c><00:16:54.240><c> at</c><00:16:54.399><c> all</c><00:16:55.759><c> and</c><00:16:56.000><c> so</c><00:16:56.160><c> a</c>

00:16:56.230 --> 00:16:56.240 align:start position:0%
not in the kernel at all and so a
 

00:16:56.240 --> 00:17:01.030 align:start position:0%
not in the kernel at all and so a
picture<00:16:56.560><c> for</c><00:16:56.720><c> that</c>

00:17:01.030 --> 00:17:01.040 align:start position:0%
 
 

00:17:01.040 --> 00:17:03.990 align:start position:0%
 
might<00:17:01.199><c> be</c><00:17:01.440><c> now</c><00:17:01.680><c> we're</c><00:17:01.759><c> going</c><00:17:01.920><c> to</c><00:17:02.000><c> use</c><00:17:03.040><c> mu</c><00:17:03.680><c> for</c>

00:17:03.990 --> 00:17:04.000 align:start position:0%
might be now we're going to use mu for
 

00:17:04.000 --> 00:17:05.909 align:start position:0%
might be now we're going to use mu for
microkernel<00:17:04.880><c> we've</c><00:17:04.959><c> got</c><00:17:05.120><c> the</c><00:17:05.199><c> microkernel</c>

00:17:05.909 --> 00:17:05.919 align:start position:0%
microkernel we've got the microkernel
 

00:17:05.919 --> 00:17:07.189 align:start position:0%
microkernel we've got the microkernel
down<00:17:06.160><c> here</c><00:17:06.400><c> and</c><00:17:06.559><c> we</c><00:17:06.640><c> got</c>

00:17:07.189 --> 00:17:07.199 align:start position:0%
down here and we got
 

00:17:07.199 --> 00:17:09.510 align:start position:0%
down here and we got
user<00:17:07.520><c> space</c><00:17:07.839><c> processes</c><00:17:08.319><c> up</c><00:17:08.480><c> here</c><00:17:08.799><c> and</c><00:17:09.360><c> we</c>

00:17:09.510 --> 00:17:09.520 align:start position:0%
user space processes up here and we
 

00:17:09.520 --> 00:17:10.870 align:start position:0%
user space processes up here and we
might<00:17:09.760><c> have</c><00:17:09.919><c> all</c><00:17:10.000><c> the</c><00:17:10.160><c> kind</c><00:17:10.319><c> of</c><00:17:10.400><c> usual</c>

00:17:10.870 --> 00:17:10.880 align:start position:0%
might have all the kind of usual
 

00:17:10.880 --> 00:17:13.029 align:start position:0%
might have all the kind of usual
processes<00:17:11.600><c> run</c><00:17:11.919><c> maybe</c>

00:17:13.029 --> 00:17:13.039 align:start position:0%
processes run maybe
 

00:17:13.039 --> 00:17:15.829 align:start position:0%
processes run maybe
we're<00:17:13.199><c> going</c><00:17:13.360><c> to</c><00:17:13.439><c> run</c><00:17:14.240><c> vi</c><00:17:14.959><c> my</c><00:17:15.120><c> favorite</c><00:17:15.439><c> text</c>

00:17:15.829 --> 00:17:15.839 align:start position:0%
we're going to run vi my favorite text
 

00:17:15.839 --> 00:17:19.829 align:start position:0%
we're going to run vi my favorite text
editor<00:17:16.319><c> and</c><00:17:16.839><c> my</c><00:17:17.919><c> compiler</c>

00:17:19.829 --> 00:17:19.839 align:start position:0%
editor and my compiler
 

00:17:19.839 --> 00:17:25.350 align:start position:0%
editor and my compiler
my<00:17:20.079><c> windows</c><00:17:20.480><c> system</c>

00:17:25.350 --> 00:17:25.360 align:start position:0%
 
 

00:17:25.360 --> 00:17:27.350 align:start position:0%
 
but<00:17:25.600><c> also</c><00:17:25.919><c> up</c><00:17:26.079><c> here</c><00:17:26.240><c> as</c><00:17:26.400><c> user</c><00:17:26.640><c> level</c><00:17:26.880><c> processes</c>

00:17:27.350 --> 00:17:27.360 align:start position:0%
but also up here as user level processes
 

00:17:27.360 --> 00:17:29.590 align:start position:0%
but also up here as user level processes
we're<00:17:27.520><c> going</c><00:17:27.600><c> to</c><00:17:27.679><c> have</c><00:17:27.839><c> the</c><00:17:28.000><c> file</c><00:17:28.400><c> system</c>

00:17:29.590 --> 00:17:29.600 align:start position:0%
we're going to have the file system
 

00:17:29.600 --> 00:17:32.470 align:start position:0%
we're going to have the file system
just<00:17:29.840><c> as</c><00:17:30.000><c> a</c><00:17:30.799><c> server</c><00:17:31.280><c> process</c><00:17:31.679><c> in</c><00:17:31.840><c> user</c><00:17:32.160><c> space</c>

00:17:32.470 --> 00:17:32.480 align:start position:0%
just as a server process in user space
 

00:17:32.480 --> 00:17:34.150 align:start position:0%
just as a server process in user space
maybe<00:17:32.720><c> we're</c><00:17:32.880><c> going</c><00:17:32.960><c> to</c><00:17:33.120><c> have</c><00:17:33.280><c> a</c>

00:17:34.150 --> 00:17:34.160 align:start position:0%
maybe we're going to have a
 

00:17:34.160 --> 00:17:37.110 align:start position:0%
maybe we're going to have a
disk<00:17:34.559><c> driver</c><00:17:36.080><c> that</c><00:17:36.240><c> knows</c><00:17:36.400><c> how</c><00:17:36.559><c> to</c><00:17:36.640><c> talk</c><00:17:36.799><c> to</c><00:17:36.960><c> my</c>

00:17:37.110 --> 00:17:37.120 align:start position:0%
disk driver that knows how to talk to my
 

00:17:37.120 --> 00:17:38.310 align:start position:0%
disk driver that knows how to talk to my
disk<00:17:37.440><c> hardware</c>

00:17:38.310 --> 00:17:38.320 align:start position:0%
disk hardware
 

00:17:38.320 --> 00:17:42.950 align:start position:0%
disk hardware
maybe<00:17:38.559><c> we'll</c><00:17:38.720><c> have</c><00:17:38.880><c> a</c><00:17:39.039><c> network</c><00:17:39.520><c> stack</c><00:17:40.240><c> that</c>

00:17:42.950 --> 00:17:42.960 align:start position:0%
 
 

00:17:42.960 --> 00:17:46.230 align:start position:0%
 
knows<00:17:43.280><c> how</c><00:17:43.440><c> to</c><00:17:43.520><c> talk</c><00:17:43.919><c> talk</c><00:17:44.320><c> tcp</c><00:17:45.360><c> to</c><00:17:45.520><c> my</c>

00:17:46.230 --> 00:17:46.240 align:start position:0%
knows how to talk talk tcp to my
 

00:17:46.240 --> 00:17:49.270 align:start position:0%
knows how to talk talk tcp to my
network<00:17:46.640><c> interface</c><00:17:47.280><c> card</c><00:17:48.400><c> maybe</c><00:17:48.720><c> we'll</c><00:17:48.880><c> have</c>

00:17:49.270 --> 00:17:49.280 align:start position:0%
network interface card maybe we'll have
 

00:17:49.280 --> 00:17:51.990 align:start position:0%
network interface card maybe we'll have
a<00:17:49.840><c> user</c><00:17:50.160><c> level</c><00:17:50.480><c> process</c><00:17:50.880><c> that's</c><00:17:51.120><c> in</c><00:17:51.280><c> charge</c><00:17:51.600><c> of</c>

00:17:51.990 --> 00:17:52.000 align:start position:0%
a user level process that's in charge of
 

00:17:52.000 --> 00:17:52.710 align:start position:0%
a user level process that's in charge of
doing

00:17:52.710 --> 00:17:52.720 align:start position:0%
doing
 

00:17:52.720 --> 00:17:56.310 align:start position:0%
doing
fancy<00:17:53.280><c> paging</c><00:17:53.919><c> tricks</c><00:17:54.880><c> like</c><00:17:55.520><c> memory</c><00:17:55.919><c> mapped</c>

00:17:56.310 --> 00:17:56.320 align:start position:0%
fancy paging tricks like memory mapped
 

00:17:56.320 --> 00:17:57.430 align:start position:0%
fancy paging tricks like memory mapped
files<00:17:56.960><c> or</c>

00:17:57.430 --> 00:17:57.440 align:start position:0%
files or
 

00:17:57.440 --> 00:17:59.430 align:start position:0%
files or
maybe<00:17:57.840><c> implements</c><00:17:58.240><c> copy</c><00:17:58.559><c> on</c><00:17:58.720><c> right</c><00:17:58.960><c> fork</c><00:17:59.280><c> or</c>

00:17:59.430 --> 00:17:59.440 align:start position:0%
maybe implements copy on right fork or
 

00:17:59.440 --> 00:18:01.510 align:start position:0%
maybe implements copy on right fork or
something

00:18:01.510 --> 00:18:01.520 align:start position:0%
something
 

00:18:01.520 --> 00:18:04.789 align:start position:0%
something
and<00:18:02.080><c> when</c><00:18:02.320><c> my</c><00:18:03.440><c> text</c><00:18:03.760><c> editor</c><00:18:04.160><c> needs</c><00:18:04.320><c> to</c><00:18:04.480><c> read</c><00:18:04.720><c> a</c>

00:18:04.789 --> 00:18:04.799 align:start position:0%
and when my text editor needs to read a
 

00:18:04.799 --> 00:18:05.669 align:start position:0%
and when my text editor needs to read a
file

00:18:05.669 --> 00:18:05.679 align:start position:0%
file
 

00:18:05.679 --> 00:18:07.270 align:start position:0%
file
it<00:18:05.840><c> needs</c><00:18:06.000><c> to</c><00:18:06.160><c> talk</c><00:18:06.320><c> to</c><00:18:06.400><c> the</c><00:18:06.480><c> file</c><00:18:06.799><c> system</c><00:18:07.120><c> and</c>

00:18:07.270 --> 00:18:07.280 align:start position:0%
it needs to talk to the file system and
 

00:18:07.280 --> 00:18:08.789 align:start position:0%
it needs to talk to the file system and
so

00:18:08.789 --> 00:18:08.799 align:start position:0%
so
 

00:18:08.799 --> 00:18:13.350 align:start position:0%
so
it's<00:18:08.960><c> going</c><00:18:09.120><c> to</c><00:18:09.360><c> send</c><00:18:09.840><c> a</c>

00:18:13.350 --> 00:18:13.360 align:start position:0%
 
 

00:18:13.360 --> 00:18:16.870 align:start position:0%
 
um a<00:18:13.840><c> message</c><00:18:15.120><c> via</c><00:18:15.520><c> ipc</c>

00:18:16.870 --> 00:18:16.880 align:start position:0%
um a message via ipc
 

00:18:16.880 --> 00:18:19.990 align:start position:0%
um a message via ipc
in<00:18:16.960><c> our</c><00:18:17.120><c> process</c><00:18:17.520><c> communication</c><00:18:18.960><c> um</c><00:18:19.760><c> to</c><00:18:19.919><c> the</c>

00:18:19.990 --> 00:18:20.000 align:start position:0%
in our process communication um to the
 

00:18:20.000 --> 00:18:21.590 align:start position:0%
in our process communication um to the
file<00:18:20.320><c> system</c><00:18:20.720><c> server</c>

00:18:21.590 --> 00:18:21.600 align:start position:0%
file system server
 

00:18:21.600 --> 00:18:23.190 align:start position:0%
file system server
which<00:18:21.840><c> has</c><00:18:22.000><c> all</c><00:18:22.160><c> the</c><00:18:22.240><c> file</c><00:18:22.480><c> system</c><00:18:22.720><c> code</c><00:18:22.960><c> in</c><00:18:23.120><c> it</c>

00:18:23.190 --> 00:18:23.200 align:start position:0%
which has all the file system code in it
 

00:18:23.200 --> 00:18:24.630 align:start position:0%
which has all the file system code in it
knows<00:18:23.360><c> about</c><00:18:23.600><c> files</c><00:18:23.919><c> and</c><00:18:24.000><c> directories</c><00:18:24.559><c> the</c>

00:18:24.630 --> 00:18:24.640 align:start position:0%
knows about files and directories the
 

00:18:24.640 --> 00:18:26.789 align:start position:0%
knows about files and directories the
file<00:18:24.880><c> system</c><00:18:25.200><c> of</c><00:18:25.280><c> server</c><00:18:25.600><c> code</c><00:18:25.840><c> may</c><00:18:26.000><c> need</c><00:18:26.320><c> to</c>

00:18:26.789 --> 00:18:26.799 align:start position:0%
file system of server code may need to
 

00:18:26.799 --> 00:18:28.390 align:start position:0%
file system of server code may need to
you<00:18:26.960><c> know</c><00:18:27.120><c> talk</c><00:18:27.360><c> to</c><00:18:27.520><c> the</c><00:18:27.600><c> disk</c><00:18:27.919><c> so</c><00:18:28.080><c> it</c><00:18:28.160><c> might</c>

00:18:28.390 --> 00:18:28.400 align:start position:0%
you know talk to the disk so it might
 

00:18:28.400 --> 00:18:30.310 align:start position:0%
you know talk to the disk so it might
send<00:18:28.640><c> another</c><00:18:29.440><c> sort</c><00:18:29.679><c> of</c><00:18:29.840><c> disk</c>

00:18:30.310 --> 00:18:30.320 align:start position:0%
send another sort of disk
 

00:18:30.320 --> 00:18:33.510 align:start position:0%
send another sort of disk
reader<00:18:30.720><c> right</c><00:18:30.960><c> to</c><00:18:31.200><c> the</c><00:18:32.000><c> another</c><00:18:32.320><c> ipc</c><00:18:33.280><c> to</c><00:18:33.440><c> the</c>

00:18:33.510 --> 00:18:33.520 align:start position:0%
reader right to the another ipc to the
 

00:18:33.520 --> 00:18:35.190 align:start position:0%
reader right to the another ipc to the
disk<00:18:33.760><c> driver</c><00:18:34.080><c> which</c><00:18:34.240><c> somehow</c><00:18:34.640><c> talks</c><00:18:34.880><c> to</c><00:18:35.039><c> this</c>

00:18:35.190 --> 00:18:35.200 align:start position:0%
disk driver which somehow talks to this
 

00:18:35.200 --> 00:18:36.230 align:start position:0%
disk driver which somehow talks to this
hardware

00:18:36.230 --> 00:18:36.240 align:start position:0%
hardware
 

00:18:36.240 --> 00:18:39.190 align:start position:0%
hardware
and<00:18:36.400><c> this</c><00:18:36.559><c> driver</c><00:18:36.960><c> may</c><00:18:37.200><c> return</c><00:18:38.799><c> you</c><00:18:38.880><c> know</c><00:18:39.039><c> a</c>

00:18:39.190 --> 00:18:39.200 align:start position:0%
and this driver may return you know a
 

00:18:39.200 --> 00:18:41.190 align:start position:0%
and this driver may return you know a
disk<00:18:39.440><c> block</c><00:18:39.679><c> to</c><00:18:39.840><c> the</c><00:18:39.919><c> file</c><00:18:40.240><c> server</c>

00:18:41.190 --> 00:18:41.200 align:start position:0%
disk block to the file server
 

00:18:41.200 --> 00:18:42.710 align:start position:0%
disk block to the file server
after<00:18:41.440><c> it</c><00:18:41.520><c> does</c><00:18:41.760><c> its</c><00:18:41.919><c> thing</c><00:18:42.160><c> maybe</c><00:18:42.400><c> the</c><00:18:42.480><c> file</c>

00:18:42.710 --> 00:18:42.720 align:start position:0%
after it does its thing maybe the file
 

00:18:42.720 --> 00:18:44.230 align:start position:0%
after it does its thing maybe the file
server<00:18:43.039><c> finally</c><00:18:43.360><c> returns</c><00:18:43.760><c> the</c><00:18:43.840><c> data</c><00:18:44.160><c> you</c>

00:18:44.230 --> 00:18:44.240 align:start position:0%
server finally returns the data you
 

00:18:44.240 --> 00:18:45.830 align:start position:0%
server finally returns the data you
asked<00:18:44.480><c> for</c><00:18:44.720><c> again</c><00:18:45.039><c> by</c><00:18:45.200><c> inner</c><00:18:45.440><c> process</c>

00:18:45.830 --> 00:18:45.840 align:start position:0%
asked for again by inner process
 

00:18:45.840 --> 00:18:48.070 align:start position:0%
asked for again by inner process
communication<00:18:46.400><c> messages</c>

00:18:48.070 --> 00:18:48.080 align:start position:0%
communication messages
 

00:18:48.080 --> 00:18:51.830 align:start position:0%
communication messages
back<00:18:48.240><c> to</c><00:18:48.320><c> my</c><00:18:48.480><c> text</c><00:18:48.799><c> editor</c><00:18:50.320><c> but</c><00:18:50.720><c> you</c><00:18:50.880><c> know</c><00:18:51.120><c> the</c>

00:18:51.830 --> 00:18:51.840 align:start position:0%
back to my text editor but you know the
 

00:18:51.840 --> 00:18:53.510 align:start position:0%
back to my text editor but you know the
the<00:18:52.160><c> critical</c><00:18:52.480><c> thing</c><00:18:52.640><c> to</c><00:18:52.799><c> notice</c><00:18:53.120><c> here</c><00:18:53.360><c> is</c>

00:18:53.510 --> 00:18:53.520 align:start position:0%
the critical thing to notice here is
 

00:18:53.520 --> 00:18:55.909 align:start position:0%
the critical thing to notice here is
that<00:18:54.559><c> the</c><00:18:54.720><c> only</c><00:18:54.960><c> stuff</c><00:18:55.120><c> going</c><00:18:55.360><c> down</c><00:18:55.600><c> here</c><00:18:55.840><c> in</c>

00:18:55.909 --> 00:18:55.919 align:start position:0%
that the only stuff going down here in
 

00:18:55.919 --> 00:18:57.110 align:start position:0%
that the only stuff going down here in
the<00:18:56.000><c> kernel</c><00:18:56.400><c> is</c><00:18:56.559><c> support</c>

00:18:57.110 --> 00:18:57.120 align:start position:0%
the kernel is support
 

00:18:57.120 --> 00:19:00.549 align:start position:0%
the kernel is support
for<00:18:57.440><c> these</c><00:18:57.919><c> these</c><00:18:58.400><c> processes</c><00:18:59.679><c> or</c><00:18:59.919><c> tasks</c><00:19:00.400><c> or</c>

00:19:00.549 --> 00:19:00.559 align:start position:0%
for these these processes or tasks or
 

00:19:00.559 --> 00:19:01.990 align:start position:0%
for these these processes or tasks or
threads<00:19:01.039><c> or</c>

00:19:01.990 --> 00:19:02.000 align:start position:0%
threads or
 

00:19:02.000 --> 00:19:05.029 align:start position:0%
threads or
whatever<00:19:02.320><c> they</c><00:19:02.480><c> might</c><00:19:02.720><c> be</c><00:19:03.200><c> and</c><00:19:03.919><c> um</c><00:19:04.640><c> support</c>

00:19:05.029 --> 00:19:05.039 align:start position:0%
whatever they might be and um support
 

00:19:05.039 --> 00:19:06.710 align:start position:0%
whatever they might be and um support
for<00:19:05.200><c> the</c><00:19:05.360><c> inner</c><00:19:05.600><c> process</c><00:19:06.080><c> communication</c>

00:19:06.710 --> 00:19:06.720 align:start position:0%
for the inner process communication
 

00:19:06.720 --> 00:19:07.669 align:start position:0%
for the inner process communication
message<00:19:07.200><c> passing</c>

00:19:07.669 --> 00:19:07.679 align:start position:0%
message passing
 

00:19:07.679 --> 00:19:09.270 align:start position:0%
message passing
and<00:19:07.760><c> nothing</c><00:19:08.080><c> else</c><00:19:08.320><c> there's</c><00:19:08.480><c> no</c><00:19:08.640><c> file</c><00:19:08.960><c> system</c>

00:19:09.270 --> 00:19:09.280 align:start position:0%
and nothing else there's no file system
 

00:19:09.280 --> 00:19:10.710 align:start position:0%
and nothing else there's no file system
down<00:19:09.440><c> here</c><00:19:09.679><c> there's</c><00:19:09.840><c> no</c>

00:19:10.710 --> 00:19:10.720 align:start position:0%
down here there's no
 

00:19:10.720 --> 00:19:12.710 align:start position:0%
down here there's no
device<00:19:11.200><c> drivers</c><00:19:11.600><c> necessarily</c><00:19:12.160><c> down</c><00:19:12.480><c> here</c><00:19:12.640><c> in</c>

00:19:12.710 --> 00:19:12.720 align:start position:0%
device drivers necessarily down here in
 

00:19:12.720 --> 00:19:14.230 align:start position:0%
device drivers necessarily down here in
the<00:19:12.799><c> kernel</c><00:19:13.360><c> there's</c><00:19:13.600><c> no</c>

00:19:14.230 --> 00:19:14.240 align:start position:0%
the kernel there's no
 

00:19:14.240 --> 00:19:16.950 align:start position:0%
the kernel there's no
network<00:19:14.640><c> stack</c><00:19:15.440><c> all</c><00:19:15.679><c> that</c><00:19:15.840><c> stuff</c><00:19:16.160><c> is</c><00:19:16.480><c> up</c><00:19:16.640><c> here</c>

00:19:16.950 --> 00:19:16.960 align:start position:0%
network stack all that stuff is up here
 

00:19:16.960 --> 00:19:17.750 align:start position:0%
network stack all that stuff is up here
is

00:19:17.750 --> 00:19:17.760 align:start position:0%
is
 

00:19:17.760 --> 00:19:20.150 align:start position:0%
is
more<00:19:17.919><c> or</c><00:19:18.000><c> less</c><00:19:19.039><c> ordinary</c><00:19:19.520><c> user</c><00:19:19.840><c> level</c>

00:19:20.150 --> 00:19:20.160 align:start position:0%
more or less ordinary user level
 

00:19:20.160 --> 00:19:23.350 align:start position:0%
more or less ordinary user level
processes

00:19:23.350 --> 00:19:23.360 align:start position:0%
 
 

00:19:23.360 --> 00:19:26.150 align:start position:0%
 
and<00:19:23.440><c> so</c><00:19:23.600><c> they</c><00:19:23.840><c> lead</c><00:19:24.000><c> you</c><00:19:24.160><c> to</c><00:19:24.320><c> a</c><00:19:25.600><c> very</c><00:19:25.840><c> small</c>

00:19:26.150 --> 00:19:26.160 align:start position:0%
and so they lead you to a very small
 

00:19:26.160 --> 00:19:27.350 align:start position:0%
and so they lead you to a very small
kernel<00:19:26.640><c> with</c>

00:19:27.350 --> 00:19:27.360 align:start position:0%
kernel with
 

00:19:27.360 --> 00:19:30.870 align:start position:0%
kernel with
uh<00:19:28.320><c> relatively</c><00:19:28.799><c> little</c><00:19:29.039><c> code</c><00:19:29.360><c> optimize</c><00:19:30.160><c> like</c>

00:19:30.870 --> 00:19:30.880 align:start position:0%
uh relatively little code optimize like
 

00:19:30.880 --> 00:19:32.470 align:start position:0%
uh relatively little code optimize like
you<00:19:31.039><c> can</c><00:19:31.200><c> optimize</c><00:19:31.679><c> ipc</c><00:19:32.080><c> and</c><00:19:32.240><c> there's</c><00:19:32.320><c> not</c>

00:19:32.470 --> 00:19:32.480 align:start position:0%
you can optimize ipc and there's not
 

00:19:32.480 --> 00:19:34.870 align:start position:0%
you can optimize ipc and there's not
much<00:19:32.640><c> else</c><00:19:32.880><c> going</c><00:19:33.120><c> on</c>

00:19:34.870 --> 00:19:34.880 align:start position:0%
much else going on
 

00:19:34.880 --> 00:19:37.669 align:start position:0%
much else going on
um<00:19:36.480><c> and</c><00:19:36.559><c> so</c><00:19:36.720><c> this</c><00:19:37.039><c> this</c><00:19:37.200><c> is</c><00:19:37.280><c> the</c><00:19:37.440><c> kind</c><00:19:37.600><c> of</c>

00:19:37.669 --> 00:19:37.679 align:start position:0%
um and so this this is the kind of
 

00:19:37.679 --> 00:19:38.950 align:start position:0%
um and so this this is the kind of
picture<00:19:37.919><c> we're</c><00:19:38.080><c> going</c><00:19:38.160><c> to</c><00:19:38.320><c> talk</c><00:19:38.480><c> about</c><00:19:38.799><c> for</c>

00:19:38.950 --> 00:19:38.960 align:start position:0%
picture we're going to talk about for
 

00:19:38.960 --> 00:19:40.549 align:start position:0%
picture we're going to talk about for
the<00:19:39.039><c> rest</c><00:19:39.200><c> of</c><00:19:39.280><c> the</c><00:19:39.360><c> lecture</c><00:19:39.840><c> and</c>

00:19:40.549 --> 00:19:40.559 align:start position:0%
the rest of the lecture and
 

00:19:40.559 --> 00:19:41.590 align:start position:0%
the rest of the lecture and
just<00:19:40.720><c> to</c><00:19:40.799><c> give</c><00:19:40.880><c> you</c><00:19:40.960><c> a</c><00:19:41.039><c> taste</c><00:19:41.360><c> of</c><00:19:41.440><c> kind</c><00:19:41.520><c> of</c>

00:19:41.590 --> 00:19:41.600 align:start position:0%
just to give you a taste of kind of
 

00:19:41.600 --> 00:19:43.669 align:start position:0%
just to give you a taste of kind of
where<00:19:41.760><c> this</c><00:19:42.000><c> ended</c><00:19:42.320><c> up</c><00:19:42.720><c> um</c>

00:19:43.669 --> 00:19:43.679 align:start position:0%
where this ended up um
 

00:19:43.679 --> 00:19:46.470 align:start position:0%
where this ended up um
there<00:19:43.919><c> are</c><00:19:44.080><c> actually</c><00:19:44.400><c> still</c><00:19:45.039><c> uh</c><00:19:45.840><c> microkernels</c>

00:19:46.470 --> 00:19:46.480 align:start position:0%
there are actually still uh microkernels
 

00:19:46.480 --> 00:19:47.270 align:start position:0%
there are actually still uh microkernels
in<00:19:46.559><c> use</c><00:19:46.799><c> today</c>

00:19:47.270 --> 00:19:47.280 align:start position:0%
in use today
 

00:19:47.280 --> 00:19:49.270 align:start position:0%
in use today
and<00:19:47.440><c> indeed</c><00:19:47.760><c> the</c><00:19:47.919><c> l4</c><00:19:48.400><c> microkernel</c><00:19:49.039><c> which</c><00:19:49.200><c> is</c>

00:19:49.270 --> 00:19:49.280 align:start position:0%
and indeed the l4 microkernel which is
 

00:19:49.280 --> 00:19:51.430 align:start position:0%
and indeed the l4 microkernel which is
the<00:19:49.600><c> topic</c><00:19:49.919><c> of</c><00:19:50.000><c> today's</c><00:19:50.400><c> paper</c>

00:19:51.430 --> 00:19:51.440 align:start position:0%
the topic of today's paper
 

00:19:51.440 --> 00:19:54.310 align:start position:0%
the topic of today's paper
turns<00:19:51.679><c> out</c><00:19:51.840><c> to</c><00:19:51.919><c> be</c><00:19:52.160><c> used</c><00:19:52.880><c> um</c><00:19:53.600><c> there's</c><00:19:54.000><c> many</c>

00:19:54.310 --> 00:19:54.320 align:start position:0%
turns out to be used um there's many
 

00:19:54.320 --> 00:19:56.390 align:start position:0%
turns out to be used um there's many
instances<00:19:54.880><c> many</c><00:19:55.120><c> many</c><00:19:55.360><c> instances</c><00:19:55.840><c> of</c><00:19:56.000><c> l4</c>

00:19:56.390 --> 00:19:56.400 align:start position:0%
instances many many instances of l4
 

00:19:56.400 --> 00:19:57.350 align:start position:0%
instances many many instances of l4
running<00:19:56.799><c> because</c>

00:19:57.350 --> 00:19:57.360 align:start position:0%
running because
 

00:19:57.360 --> 00:19:59.510 align:start position:0%
running because
it's<00:19:57.520><c> used</c><00:19:57.760><c> in</c><00:19:57.919><c> a</c><00:19:57.919><c> lot</c><00:19:58.080><c> of</c><00:19:58.240><c> cell</c><00:19:58.480><c> phones</c><00:19:58.880><c> to</c><00:19:59.440><c> in</c>

00:19:59.510 --> 00:19:59.520 align:start position:0%
it's used in a lot of cell phones to in
 

00:19:59.520 --> 00:20:01.190 align:start position:0%
it's used in a lot of cell phones to in
the<00:19:59.679><c> little</c><00:19:59.919><c> microcontrollers</c><00:20:00.799><c> that</c><00:20:00.880><c> control</c>

00:20:01.190 --> 00:20:01.200 align:start position:0%
the little microcontrollers that control
 

00:20:01.200 --> 00:20:03.270 align:start position:0%
the little microcontrollers that control
the<00:20:01.440><c> cell</c><00:20:01.679><c> phone</c><00:20:01.919><c> radios</c>

00:20:03.270 --> 00:20:03.280 align:start position:0%
the cell phone radios
 

00:20:03.280 --> 00:20:05.750 align:start position:0%
the cell phone radios
and<00:20:03.360><c> it's</c><00:20:03.520><c> also</c><00:20:03.919><c> apparently</c><00:20:04.400><c> used</c><00:20:04.640><c> in</c><00:20:05.360><c> recent</c>

00:20:05.750 --> 00:20:05.760 align:start position:0%
and it's also apparently used in recent
 

00:20:05.760 --> 00:20:06.870 align:start position:0%
and it's also apparently used in recent
iphones

00:20:06.870 --> 00:20:06.880 align:start position:0%
iphones
 

00:20:06.880 --> 00:20:09.590 align:start position:0%
iphones
as<00:20:07.120><c> the</c><00:20:07.280><c> operating</c><00:20:07.679><c> system</c><00:20:07.919><c> that</c><00:20:08.080><c> runs</c><00:20:08.480><c> on</c><00:20:08.640><c> the</c>

00:20:09.590 --> 00:20:09.600 align:start position:0%
as the operating system that runs on the
 

00:20:09.600 --> 00:20:10.630 align:start position:0%
as the operating system that runs on the
special

00:20:10.630 --> 00:20:10.640 align:start position:0%
special
 

00:20:10.640 --> 00:20:13.110 align:start position:0%
special
dedicated<00:20:11.919><c> enclave</c><00:20:12.480><c> processor</c><00:20:12.960><c> in</c><00:20:13.039><c> the</c>

00:20:13.110 --> 00:20:13.120 align:start position:0%
dedicated enclave processor in the
 

00:20:13.120 --> 00:20:14.310 align:start position:0%
dedicated enclave processor in the
iphone<00:20:13.520><c> that</c><00:20:13.760><c> hides</c>

00:20:14.310 --> 00:20:14.320 align:start position:0%
iphone that hides
 

00:20:14.320 --> 00:20:17.430 align:start position:0%
iphone that hides
the<00:20:14.880><c> secret</c><00:20:15.200><c> cryptographic</c><00:20:15.919><c> keys</c><00:20:17.120><c> so</c><00:20:17.280><c> there's</c>

00:20:17.430 --> 00:20:17.440 align:start position:0%
the secret cryptographic keys so there's
 

00:20:17.440 --> 00:20:19.270 align:start position:0%
the secret cryptographic keys so there's
a<00:20:17.520><c> bunch</c><00:20:17.679><c> of</c><00:20:17.840><c> embedded</c>

00:20:19.270 --> 00:20:19.280 align:start position:0%
a bunch of embedded
 

00:20:19.280 --> 00:20:21.350 align:start position:0%
a bunch of embedded
where<00:20:19.440><c> these</c><00:20:19.760><c> microkernels</c><00:20:20.400><c> have</c><00:20:20.799><c> won</c><00:20:21.039><c> out</c><00:20:21.200><c> is</c>

00:20:21.350 --> 00:20:21.360 align:start position:0%
where these microkernels have won out is
 

00:20:21.360 --> 00:20:23.510 align:start position:0%
where these microkernels have won out is
in<00:20:21.520><c> little</c><00:20:21.760><c> embedded</c><00:20:22.240><c> specialized</c>

00:20:23.510 --> 00:20:23.520 align:start position:0%
in little embedded specialized
 

00:20:23.520 --> 00:20:25.669 align:start position:0%
in little embedded specialized
computer<00:20:24.000><c> systems</c><00:20:24.880><c> you</c><00:20:24.960><c> know</c><00:20:25.120><c> not</c><00:20:25.440><c> not</c>

00:20:25.669 --> 00:20:25.679 align:start position:0%
computer systems you know not not
 

00:20:25.679 --> 00:20:27.029 align:start position:0%
computer systems you know not not
laptops<00:20:26.320><c> but</c>

00:20:27.029 --> 00:20:27.039 align:start position:0%
laptops but
 

00:20:27.039 --> 00:20:30.789 align:start position:0%
laptops but
um<00:20:27.440><c> computers</c><00:20:28.000><c> are</c><00:20:28.559><c> dedicated</c><00:20:29.120><c> to</c>

00:20:30.789 --> 00:20:30.799 align:start position:0%
um computers are dedicated to
 

00:20:30.799 --> 00:20:33.029 align:start position:0%
um computers are dedicated to
single<00:20:31.120><c> specialized</c><00:20:31.679><c> tasks</c><00:20:32.400><c> where</c><00:20:32.559><c> you</c><00:20:32.880><c> may</c>

00:20:33.029 --> 00:20:33.039 align:start position:0%
single specialized tasks where you may
 

00:20:33.039 --> 00:20:33.990 align:start position:0%
single specialized tasks where you may
not<00:20:33.200><c> need</c><00:20:33.440><c> the</c><00:20:33.520><c> complexity</c>

00:20:33.990 --> 00:20:34.000 align:start position:0%
not need the complexity
 

00:20:34.000 --> 00:20:35.830 align:start position:0%
not need the complexity
of<00:20:34.080><c> linux</c><00:20:34.480><c> but</c><00:20:34.720><c> you</c><00:20:34.880><c> do</c><00:20:35.039><c> need</c><00:20:35.280><c> some</c><00:20:35.520><c> operating</c>

00:20:35.830 --> 00:20:35.840 align:start position:0%
of linux but you do need some operating
 

00:20:35.840 --> 00:20:37.669 align:start position:0%
of linux but you do need some operating
system

00:20:37.669 --> 00:20:37.679 align:start position:0%
system
 

00:20:37.679 --> 00:20:40.230 align:start position:0%
system
and<00:20:37.840><c> the</c><00:20:38.000><c> other</c><00:20:38.159><c> thing</c><00:20:38.320><c> that's</c><00:20:39.120><c> uh</c><00:20:39.840><c> the</c><00:20:40.000><c> other</c>

00:20:40.230 --> 00:20:40.240 align:start position:0%
and the other thing that's uh the other
 

00:20:40.240 --> 00:20:41.990 align:start position:0%
and the other thing that's uh the other
sort<00:20:40.400><c> of</c><00:20:40.480><c> final</c><00:20:40.880><c> result</c>

00:20:41.990 --> 00:20:42.000 align:start position:0%
sort of final result
 

00:20:42.000 --> 00:20:44.149 align:start position:0%
sort of final result
from<00:20:42.159><c> microkernels</c><00:20:42.880><c> is</c><00:20:43.039><c> that</c><00:20:43.440><c> the</c><00:20:43.600><c> idea</c><00:20:44.000><c> of</c>

00:20:44.149 --> 00:20:44.159 align:start position:0%
from microkernels is that the idea of
 

00:20:44.159 --> 00:20:45.990 align:start position:0%
from microkernels is that the idea of
user<00:20:44.480><c> level</c><00:20:44.960><c> services</c><00:20:45.520><c> with</c>

00:20:45.990 --> 00:20:46.000 align:start position:0%
user level services with
 

00:20:46.000 --> 00:20:48.310 align:start position:0%
user level services with
i<00:20:46.400><c> with</c><00:20:47.039><c> other</c><00:20:47.200><c> programs</c><00:20:47.600><c> talking</c><00:20:47.919><c> to</c><00:20:48.080><c> them</c>

00:20:48.310 --> 00:20:48.320 align:start position:0%
i with other programs talking to them
 

00:20:48.320 --> 00:20:49.830 align:start position:0%
i with other programs talking to them
from<00:20:48.559><c> with</c><00:20:48.799><c> ipc</c>

00:20:49.830 --> 00:20:49.840 align:start position:0%
from with ipc
 

00:20:49.840 --> 00:20:52.149 align:start position:0%
from with ipc
that<00:20:50.080><c> also</c><00:20:50.320><c> has</c><00:20:51.120><c> made</c><00:20:51.280><c> its</c><00:20:51.440><c> way</c><00:20:51.600><c> into</c><00:20:51.760><c> a</c><00:20:51.840><c> lot</c><00:20:52.000><c> of</c>

00:20:52.149 --> 00:20:52.159 align:start position:0%
that also has made its way into a lot of
 

00:20:52.159 --> 00:20:53.990 align:start position:0%
that also has made its way into a lot of
operating<00:20:52.480><c> systems</c><00:20:52.799><c> like</c><00:20:52.960><c> mac</c><00:20:53.120><c> os</c><00:20:53.520><c> which</c><00:20:53.679><c> i'm</c>

00:20:53.990 --> 00:20:54.000 align:start position:0%
operating systems like mac os which i'm
 

00:20:54.000 --> 00:20:56.549 align:start position:0%
operating systems like mac os which i'm
running<00:20:54.240><c> right</c><00:20:54.400><c> now</c><00:20:54.559><c> to</c><00:20:54.720><c> talk</c><00:20:54.880><c> to</c><00:20:55.039><c> you</c><00:20:55.600><c> um</c><00:20:56.480><c> you</c>

00:20:56.549 --> 00:20:56.559 align:start position:0%
running right now to talk to you um you
 

00:20:56.559 --> 00:20:57.430 align:start position:0%
running right now to talk to you um you
know<00:20:56.720><c> it's</c><00:20:56.960><c> a</c>

00:20:57.430 --> 00:20:57.440 align:start position:0%
know it's a
 

00:20:57.440 --> 00:20:59.029 align:start position:0%
know it's a
sort<00:20:57.600><c> of</c><00:20:58.000><c> as</c><00:20:58.159><c> well</c><00:20:58.400><c> as</c><00:20:58.559><c> being</c><00:20:58.720><c> a</c><00:20:58.799><c> kind</c><00:20:58.960><c> of</c>

00:20:59.029 --> 00:20:59.039 align:start position:0%
sort of as well as being a kind of
 

00:20:59.039 --> 00:21:00.870 align:start position:0%
sort of as well as being a kind of
ordinary<00:20:59.760><c> monolithic</c><00:21:00.320><c> kernel</c>

00:21:00.870 --> 00:21:00.880 align:start position:0%
ordinary monolithic kernel
 

00:21:00.880 --> 00:21:04.470 align:start position:0%
ordinary monolithic kernel
it<00:21:01.120><c> also</c><00:21:01.360><c> has</c><00:21:01.840><c> good</c><00:21:02.080><c> support</c><00:21:02.720><c> for</c><00:21:03.760><c> user</c><00:21:04.080><c> level</c>

00:21:04.470 --> 00:21:04.480 align:start position:0%
it also has good support for user level
 

00:21:04.480 --> 00:21:05.190 align:start position:0%
it also has good support for user level
services

00:21:05.190 --> 00:21:05.200 align:start position:0%
services
 

00:21:05.200 --> 00:21:08.630 align:start position:0%
services
and<00:21:05.600><c> ipc</c><00:21:06.320><c> between</c><00:21:07.360><c> unix</c><00:21:07.679><c> processes</c><00:21:08.240><c> to</c><00:21:08.480><c> talk</c>

00:21:08.630 --> 00:21:08.640 align:start position:0%
and ipc between unix processes to talk
 

00:21:08.640 --> 00:21:10.470 align:start position:0%
and ipc between unix processes to talk
to<00:21:08.799><c> these</c><00:21:08.960><c> services</c><00:21:09.520><c> so</c>

00:21:10.470 --> 00:21:10.480 align:start position:0%
to these services so
 

00:21:10.480 --> 00:21:14.549 align:start position:0%
to these services so
that<00:21:10.720><c> idea</c><00:21:11.039><c> also</c>

00:21:14.549 --> 00:21:14.559 align:start position:0%
 
 

00:21:14.559 --> 00:21:17.590 align:start position:0%
 
was<00:21:14.799><c> a</c><00:21:14.880><c> successful</c><00:21:15.280><c> idea</c><00:21:15.600><c> and</c><00:21:15.679><c> widely</c><00:21:16.000><c> adopted</c>

00:21:17.590 --> 00:21:17.600 align:start position:0%
was a successful idea and widely adopted
 

00:21:17.600 --> 00:21:19.270 align:start position:0%
was a successful idea and widely adopted
okay<00:21:17.840><c> so</c><00:21:18.480><c> uh</c><00:21:18.640><c> this</c><00:21:18.799><c> is</c><00:21:18.960><c> the</c><00:21:19.039><c> basic</c>

00:21:19.270 --> 00:21:19.280 align:start position:0%
okay so uh this is the basic
 

00:21:19.280 --> 00:21:21.270 align:start position:0%
okay so uh this is the basic
architecture<00:21:20.480><c> um</c>

00:21:21.270 --> 00:21:21.280 align:start position:0%
architecture um
 

00:21:21.280 --> 00:21:23.110 align:start position:0%
architecture um
i'm<00:21:21.520><c> gonna</c><00:21:22.000><c> uh</c><00:21:22.240><c> go</c><00:21:22.400><c> on</c><00:21:22.559><c> and</c><00:21:22.640><c> sort</c><00:21:22.799><c> of</c><00:21:22.880><c> talk</c>

00:21:23.110 --> 00:21:23.120 align:start position:0%
i'm gonna uh go on and sort of talk
 

00:21:23.120 --> 00:21:24.630 align:start position:0%
i'm gonna uh go on and sort of talk
about<00:21:23.840><c> some</c><00:21:24.000><c> ways</c><00:21:24.320><c> and</c>

00:21:24.630 --> 00:21:24.640 align:start position:0%
about some ways and
 

00:21:24.640 --> 00:21:26.710 align:start position:0%
about some ways and
uh<00:21:24.960><c> reasons</c><00:21:25.280><c> why</c><00:21:25.440><c> this</c><00:21:25.600><c> might</c><00:21:25.760><c> be</c><00:21:25.840><c> attractive</c>

00:21:26.710 --> 00:21:26.720 align:start position:0%
uh reasons why this might be attractive
 

00:21:26.720 --> 00:21:27.830 align:start position:0%
uh reasons why this might be attractive
but<00:21:26.880><c> first</c><00:21:27.120><c> are</c><00:21:27.200><c> there</c><00:21:27.360><c> any</c><00:21:27.520><c> just</c>

00:21:27.830 --> 00:21:27.840 align:start position:0%
but first are there any just
 

00:21:27.840 --> 00:21:31.590 align:start position:0%
but first are there any just
kind<00:21:28.000><c> of</c><00:21:28.159><c> high</c><00:21:28.320><c> level</c><00:21:28.640><c> questions</c><00:21:29.039><c> about</c>

00:21:31.590 --> 00:21:31.600 align:start position:0%
kind of high level questions about
 

00:21:31.600 --> 00:21:38.950 align:start position:0%
kind of high level questions about
what<00:21:31.840><c> it</c><00:21:31.919><c> is</c><00:21:32.080><c> i</c><00:21:32.159><c> mean</c><00:21:32.320><c> by</c><00:21:32.480><c> microkernel</c>

00:21:38.950 --> 00:21:38.960 align:start position:0%
 
 

00:21:38.960 --> 00:21:42.830 align:start position:0%
 
okay

00:21:42.830 --> 00:21:42.840 align:start position:0%
 
 

00:21:42.840 --> 00:21:46.310 align:start position:0%
 
so<00:21:44.960><c> what</c><00:21:45.120><c> is</c><00:21:45.280><c> it</c><00:21:45.360><c> that</c><00:21:45.520><c> people</c><00:21:45.760><c> were</c><00:21:45.919><c> hoping</c>

00:21:46.310 --> 00:21:46.320 align:start position:0%
so what is it that people were hoping
 

00:21:46.320 --> 00:21:47.270 align:start position:0%
so what is it that people were hoping
for

00:21:47.270 --> 00:21:47.280 align:start position:0%
for
 

00:21:47.280 --> 00:21:50.470 align:start position:0%
for
um

00:21:50.470 --> 00:21:50.480 align:start position:0%
 
 

00:21:50.480 --> 00:21:53.830 align:start position:0%
 
when<00:21:50.720><c> they</c><00:21:51.039><c> uh</c><00:21:52.960><c> started</c><00:21:53.280><c> building</c><00:21:53.520><c> like</c>

00:21:53.830 --> 00:21:53.840 align:start position:0%
when they uh started building like
 

00:21:53.840 --> 00:21:57.590 align:start position:0%
when they uh started building like
microkernels<00:21:54.559><c> so</c><00:21:56.240><c> one</c><00:21:56.480><c> big</c><00:21:56.640><c> motivation</c>

00:21:57.590 --> 00:21:57.600 align:start position:0%
microkernels so one big motivation
 

00:21:57.600 --> 00:21:58.950 align:start position:0%
microkernels so one big motivation
although<00:21:57.919><c> you</c><00:21:58.000><c> wouldn't</c><00:21:58.240><c> necessarily</c><00:21:58.720><c> see</c><00:21:58.880><c> it</c>

00:21:58.950 --> 00:21:58.960 align:start position:0%
although you wouldn't necessarily see it
 

00:21:58.960 --> 00:22:00.310 align:start position:0%
although you wouldn't necessarily see it
written<00:21:59.200><c> down</c><00:21:59.360><c> much</c><00:21:59.600><c> is</c><00:21:59.760><c> just</c><00:21:59.919><c> a</c><00:22:00.000><c> sense</c><00:22:00.240><c> of</c>

00:22:00.310 --> 00:22:00.320 align:start position:0%
written down much is just a sense of
 

00:22:00.320 --> 00:22:01.430 align:start position:0%
written down much is just a sense of
aesthetics

00:22:01.430 --> 00:22:01.440 align:start position:0%
aesthetics
 

00:22:01.440 --> 00:22:03.669 align:start position:0%
aesthetics
right<00:22:01.840><c> i</c><00:22:01.919><c> think</c><00:22:02.080><c> just</c><00:22:02.320><c> a</c><00:22:02.400><c> lot</c><00:22:02.559><c> of</c><00:22:02.720><c> people</c><00:22:03.440><c> feel</c>

00:22:03.669 --> 00:22:03.679 align:start position:0%
right i think just a lot of people feel
 

00:22:03.679 --> 00:22:05.830 align:start position:0%
right i think just a lot of people feel
that<00:22:04.000><c> huge</c><00:22:04.480><c> complicated</c>

00:22:05.830 --> 00:22:05.840 align:start position:0%
that huge complicated
 

00:22:05.840 --> 00:22:08.950 align:start position:0%
that huge complicated
uh<00:22:06.480><c> single</c><00:22:06.880><c> programs</c><00:22:07.280><c> like</c><00:22:07.840><c> like</c><00:22:08.080><c> a</c><00:22:08.559><c> linux</c>

00:22:08.950 --> 00:22:08.960 align:start position:0%
uh single programs like like a linux
 

00:22:08.960 --> 00:22:09.669 align:start position:0%
uh single programs like like a linux
kernel

00:22:09.669 --> 00:22:09.679 align:start position:0%
kernel
 

00:22:09.679 --> 00:22:12.310 align:start position:0%
kernel
um<00:22:10.159><c> are</c><00:22:10.240><c> just</c><00:22:10.480><c> not</c><00:22:10.640><c> very</c><00:22:10.880><c> elegant</c><00:22:11.600><c> that</c><00:22:11.919><c> surely</c>

00:22:12.310 --> 00:22:12.320 align:start position:0%
um are just not very elegant that surely
 

00:22:12.320 --> 00:22:14.390 align:start position:0%
um are just not very elegant that surely
we<00:22:12.480><c> can</c><00:22:12.640><c> build</c><00:22:12.880><c> something</c><00:22:13.200><c> that's</c>

00:22:14.390 --> 00:22:14.400 align:start position:0%
we can build something that's
 

00:22:14.400 --> 00:22:17.590 align:start position:0%
we can build something that's
much<00:22:14.720><c> more</c><00:22:16.000><c> much</c><00:22:16.320><c> much</c><00:22:16.640><c> smaller</c><00:22:17.200><c> but</c><00:22:17.440><c> it's</c><00:22:17.520><c> a</c>

00:22:17.590 --> 00:22:17.600 align:start position:0%
much more much much smaller but it's a
 

00:22:17.600 --> 00:22:18.789 align:start position:0%
much more much much smaller but it's a
much<00:22:17.760><c> more</c><00:22:18.000><c> focused</c><00:22:18.320><c> design</c>

00:22:18.789 --> 00:22:18.799 align:start position:0%
much more focused design
 

00:22:18.799 --> 00:22:21.990 align:start position:0%
much more focused design
isn't<00:22:19.039><c> such</c><00:22:19.280><c> a</c><00:22:19.360><c> huge</c><00:22:19.679><c> grab</c><00:22:20.080><c> bag</c><00:22:20.559><c> of</c><00:22:21.280><c> uh</c><00:22:21.600><c> random</c>

00:22:21.990 --> 00:22:22.000 align:start position:0%
isn't such a huge grab bag of uh random
 

00:22:22.000 --> 00:22:23.270 align:start position:0%
isn't such a huge grab bag of uh random
different<00:22:22.320><c> features</c>

00:22:23.270 --> 00:22:23.280 align:start position:0%
different features
 

00:22:23.280 --> 00:22:26.549 align:start position:0%
different features
um<00:22:23.600><c> so</c><00:22:23.760><c> i</c><00:22:23.840><c> think</c><00:22:24.000><c> there</c><00:22:24.080><c> was</c><00:22:24.240><c> a</c><00:22:24.320><c> strong</c><00:22:24.799><c> sort</c><00:22:24.960><c> of</c>

00:22:26.549 --> 00:22:26.559 align:start position:0%
um so i think there was a strong sort of
 

00:22:26.559 --> 00:22:29.350 align:start position:0%
um so i think there was a strong sort of
aesthetic<00:22:27.120><c> feeling</c><00:22:27.520><c> that</c><00:22:28.640><c> surely</c><00:22:28.960><c> we</c><00:22:29.120><c> can</c><00:22:29.200><c> do</c>

00:22:29.350 --> 00:22:29.360 align:start position:0%
aesthetic feeling that surely we can do
 

00:22:29.360 --> 00:22:32.870 align:start position:0%
aesthetic feeling that surely we can do
better<00:22:29.600><c> than</c><00:22:29.760><c> big</c><00:22:30.000><c> kernels</c>

00:22:32.870 --> 00:22:32.880 align:start position:0%
 
 

00:22:32.880 --> 00:22:34.390 align:start position:0%
 
but<00:22:33.120><c> other</c><00:22:33.280><c> sort</c><00:22:33.440><c> of</c><00:22:33.520><c> more</c><00:22:33.760><c> specific</c><00:22:34.159><c> things</c>

00:22:34.390 --> 00:22:34.400 align:start position:0%
but other sort of more specific things
 

00:22:34.400 --> 00:22:36.230 align:start position:0%
but other sort of more specific things
that<00:22:34.480><c> you</c><00:22:34.559><c> might</c><00:22:34.799><c> be</c><00:22:34.960><c> able</c><00:22:35.120><c> to</c><00:22:35.360><c> quantify</c>

00:22:36.230 --> 00:22:36.240 align:start position:0%
that you might be able to quantify
 

00:22:36.240 --> 00:22:41.270 align:start position:0%
that you might be able to quantify
are<00:22:37.280><c> something</c><00:22:37.600><c> a</c><00:22:37.760><c> kernel</c><00:22:38.080><c> that's</c><00:22:38.840><c> small</c>

00:22:41.270 --> 00:22:41.280 align:start position:0%
are something a kernel that's small
 

00:22:41.280 --> 00:22:44.789 align:start position:0%
are something a kernel that's small
might<00:22:41.520><c> be</c><00:22:41.760><c> more</c><00:22:42.000><c> secure</c>

00:22:44.789 --> 00:22:44.799 align:start position:0%
 
 

00:22:44.799 --> 00:22:47.190 align:start position:0%
 
all<00:22:44.880><c> right</c><00:22:45.600><c> a</c><00:22:45.840><c> few</c><00:22:46.080><c> lines</c><00:22:46.320><c> of</c><00:22:46.400><c> code</c><00:22:46.720><c> you</c><00:22:46.799><c> have</c>

00:22:47.190 --> 00:22:47.200 align:start position:0%
all right a few lines of code you have
 

00:22:47.200 --> 00:22:49.270 align:start position:0%
all right a few lines of code you have
probably<00:22:47.520><c> fewer</c><00:22:47.760><c> bugs</c><00:22:48.080><c> you</c><00:22:48.159><c> have</c>

00:22:49.270 --> 00:22:49.280 align:start position:0%
probably fewer bugs you have
 

00:22:49.280 --> 00:22:51.510 align:start position:0%
probably fewer bugs you have
less<00:22:49.600><c> chance</c><00:22:49.919><c> of</c><00:22:50.640><c> somebody</c><00:22:50.960><c> to</c><00:22:51.039><c> be</c><00:22:51.200><c> able</c><00:22:51.360><c> to</c>

00:22:51.510 --> 00:22:51.520 align:start position:0%
less chance of somebody to be able to
 

00:22:51.520 --> 00:22:53.190 align:start position:0%
less chance of somebody to be able to
exploit<00:22:51.919><c> one</c><00:22:52.000><c> of</c><00:22:52.080><c> those</c><00:22:52.320><c> bugs</c><00:22:52.720><c> to</c>

00:22:53.190 --> 00:22:53.200 align:start position:0%
exploit one of those bugs to
 

00:22:53.200 --> 00:22:57.029 align:start position:0%
exploit one of those bugs to
break<00:22:53.520><c> security</c><00:22:55.280><c> and</c><00:22:55.520><c> in</c><00:22:55.600><c> the</c><00:22:55.840><c> uh</c>

00:22:57.029 --> 00:22:57.039 align:start position:0%
break security and in the uh
 

00:22:57.039 --> 00:23:01.110 align:start position:0%
break security and in the uh
extreme<00:22:57.600><c> of</c><00:22:57.760><c> that</c><00:22:59.919><c> you</c><00:23:00.080><c> could</c><00:23:00.400><c> imagine</c><00:23:00.880><c> an</c>

00:23:01.110 --> 00:23:01.120 align:start position:0%
extreme of that you could imagine an
 

00:23:01.120 --> 00:23:02.630 align:start position:0%
extreme of that you could imagine an
operating<00:23:01.520><c> system</c><00:23:01.919><c> that's</c><00:23:02.240><c> actually</c>

00:23:02.630 --> 00:23:02.640 align:start position:0%
operating system that's actually
 

00:23:02.640 --> 00:23:07.029 align:start position:0%
operating system that's actually
provable<00:23:03.440><c> provably</c><00:23:03.919><c> correct</c>

00:23:07.029 --> 00:23:07.039 align:start position:0%
 
 

00:23:07.039 --> 00:23:08.470 align:start position:0%
 
where<00:23:07.200><c> somebody</c><00:23:07.520><c> can</c><00:23:07.840><c> sit</c><00:23:08.000><c> down</c><00:23:08.159><c> and</c><00:23:08.240><c> write</c><00:23:08.400><c> a</c>

00:23:08.470 --> 00:23:08.480 align:start position:0%
where somebody can sit down and write a
 

00:23:08.480 --> 00:23:10.470 align:start position:0%
where somebody can sit down and write a
proof<00:23:08.720><c> that</c><00:23:08.960><c> it</c><00:23:09.360><c> the</c><00:23:09.760><c> operating</c><00:23:10.080><c> system</c><00:23:10.320><c> has</c>

00:23:10.470 --> 00:23:10.480 align:start position:0%
proof that it the operating system has
 

00:23:10.480 --> 00:23:11.830 align:start position:0%
proof that it the operating system has
no<00:23:10.640><c> bugs</c><00:23:10.960><c> or</c><00:23:11.120><c> does</c><00:23:11.280><c> exactly</c><00:23:11.600><c> what</c><00:23:11.679><c> it's</c>

00:23:11.830 --> 00:23:11.840 align:start position:0%
no bugs or does exactly what it's
 

00:23:11.840 --> 00:23:13.750 align:start position:0%
no bugs or does exactly what it's
supposed<00:23:12.000><c> to</c><00:23:12.080><c> do</c><00:23:12.240><c> and</c><00:23:12.320><c> nothing</c><00:23:12.640><c> else</c>

00:23:13.750 --> 00:23:13.760 align:start position:0%
supposed to do and nothing else
 

00:23:13.760 --> 00:23:17.909 align:start position:0%
supposed to do and nothing else
and<00:23:14.000><c> indeed</c><00:23:14.320><c> there</c><00:23:14.559><c> is</c><00:23:14.720><c> a</c><00:23:15.760><c> at</c><00:23:15.919><c> least</c><00:23:16.320><c> one</c>

00:23:17.909 --> 00:23:17.919 align:start position:0%
and indeed there is a at least one
 

00:23:17.919 --> 00:23:21.270 align:start position:0%
and indeed there is a at least one
verified<00:23:18.720><c> proved</c><00:23:19.280><c> correct</c><00:23:19.840><c> proved</c><00:23:20.159><c> secure</c>

00:23:21.270 --> 00:23:21.280 align:start position:0%
verified proved correct proved secure
 

00:23:21.280 --> 00:23:23.990 align:start position:0%
verified proved correct proved secure
operating<00:23:21.679><c> system</c><00:23:22.000><c> named</c><00:23:22.320><c> sel4</c><00:23:23.039><c> which</c><00:23:23.280><c> is</c><00:23:23.440><c> a</c>

00:23:23.990 --> 00:23:24.000 align:start position:0%
operating system named sel4 which is a
 

00:23:24.000 --> 00:23:26.549 align:start position:0%
operating system named sel4 which is a
one<00:23:24.159><c> of</c><00:23:24.240><c> the</c><00:23:24.320><c> many</c><00:23:24.640><c> descendants</c><00:23:25.200><c> of</c><00:23:25.360><c> the</c><00:23:25.440><c> l4</c>

00:23:26.549 --> 00:23:26.559 align:start position:0%
one of the many descendants of the l4
 

00:23:26.559 --> 00:23:30.630 align:start position:0%
one of the many descendants of the l4
microkernel<00:23:27.840><c> that</c><00:23:28.080><c> um</c>

00:23:30.630 --> 00:23:30.640 align:start position:0%
 
 

00:23:30.640 --> 00:23:32.870 align:start position:0%
 
today's<00:23:30.960><c> paper</c><00:23:31.600><c> but</c><00:23:32.000><c> you</c><00:23:32.240><c> really</c><00:23:32.480><c> you</c><00:23:32.559><c> know</c>

00:23:32.870 --> 00:23:32.880 align:start position:0%
today's paper but you really you know
 

00:23:32.880 --> 00:23:34.230 align:start position:0%
today's paper but you really you know
people<00:23:33.120><c> know</c><00:23:33.280><c> how</c><00:23:33.360><c> to</c><00:23:33.440><c> verify</c>

00:23:34.230 --> 00:23:34.240 align:start position:0%
people know how to verify
 

00:23:34.240 --> 00:23:36.310 align:start position:0%
people know how to verify
sort<00:23:34.400><c> of</c><00:23:34.880><c> small</c><00:23:35.360><c> the</c><00:23:35.440><c> medium-sized</c><00:23:36.000><c> program</c>

00:23:36.310 --> 00:23:36.320 align:start position:0%
sort of small the medium-sized program
 

00:23:36.320 --> 00:23:37.669 align:start position:0%
sort of small the medium-sized program
so<00:23:36.480><c> they</c><00:23:36.640><c> don't</c><00:23:36.720><c> know</c><00:23:36.799><c> how</c><00:23:36.960><c> to</c><00:23:37.039><c> verify</c><00:23:37.440><c> huge</c>

00:23:37.669 --> 00:23:37.679 align:start position:0%
so they don't know how to verify huge
 

00:23:37.679 --> 00:23:38.789 align:start position:0%
so they don't know how to verify huge
programs<00:23:38.159><c> unless</c><00:23:38.400><c> the</c><00:23:38.559><c> fact</c><00:23:38.720><c> that</c>

00:23:38.789 --> 00:23:38.799 align:start position:0%
programs unless the fact that
 

00:23:38.799 --> 00:23:40.230 align:start position:0%
programs unless the fact that
microkernels<00:23:39.440><c> are</c><00:23:39.600><c> small</c>

00:23:40.230 --> 00:23:40.240 align:start position:0%
microkernels are small
 

00:23:40.240 --> 00:23:42.149 align:start position:0%
microkernels are small
is<00:23:40.480><c> sort</c><00:23:40.640><c> of</c><00:23:40.720><c> a</c><00:23:40.799><c> critical</c><00:23:41.200><c> ingredient</c><00:23:41.760><c> and</c><00:23:42.000><c> be</c>

00:23:42.149 --> 00:23:42.159 align:start position:0%
is sort of a critical ingredient and be
 

00:23:42.159 --> 00:23:45.430 align:start position:0%
is sort of a critical ingredient and be
able<00:23:42.320><c> to</c><00:23:42.400><c> prove</c><00:23:42.640><c> they're</c><00:23:42.799><c> correct</c>

00:23:45.430 --> 00:23:45.440 align:start position:0%
 
 

00:23:45.440 --> 00:23:47.110 align:start position:0%
 
another<00:23:45.760><c> reason</c><00:23:46.000><c> why</c><00:23:46.159><c> you</c><00:23:46.240><c> might</c><00:23:46.400><c> like</c><00:23:46.640><c> small</c>

00:23:47.110 --> 00:23:47.120 align:start position:0%
another reason why you might like small
 

00:23:47.120 --> 00:23:49.669 align:start position:0%
another reason why you might like small
is<00:23:47.279><c> that</c><00:23:47.919><c> a</c><00:23:48.240><c> small</c><00:23:48.559><c> amount</c><00:23:48.799><c> of</c><00:23:48.960><c> code</c><00:23:49.279><c> is</c>

00:23:49.669 --> 00:23:49.679 align:start position:0%
is that a small amount of code is
 

00:23:49.679 --> 00:23:54.470 align:start position:0%
is that a small amount of code is
often<00:23:49.919><c> a</c><00:23:50.000><c> lot</c><00:23:50.159><c> easier</c><00:23:50.480><c> to</c><00:23:50.640><c> optimize</c><00:23:51.520><c> than</c>

00:23:54.470 --> 00:23:54.480 align:start position:0%
 
 

00:23:54.480 --> 00:23:57.669 align:start position:0%
 
than<00:23:54.880><c> a</c><00:23:55.360><c> huge</c><00:23:55.600><c> program</c>

00:23:57.669 --> 00:23:57.679 align:start position:0%
than a huge program
 

00:23:57.679 --> 00:23:59.590 align:start position:0%
than a huge program
another<00:23:58.000><c> reason</c><00:23:58.320><c> why</c><00:23:58.559><c> small</c><00:23:58.880><c> might</c><00:23:59.039><c> result</c><00:23:59.440><c> in</c>

00:23:59.590 --> 00:23:59.600 align:start position:0%
another reason why small might result in
 

00:23:59.600 --> 00:24:03.110 align:start position:0%
another reason why small might result in
fast<00:23:59.919><c> is</c><00:24:00.080><c> that</c><00:24:00.480><c> you</c><00:24:00.640><c> don't</c><00:24:00.799><c> have</c><00:24:00.960><c> to</c><00:24:01.039><c> pay</c><00:24:01.279><c> for</c>

00:24:03.110 --> 00:24:03.120 align:start position:0%
fast is that you don't have to pay for
 

00:24:03.120 --> 00:24:04.789 align:start position:0%
fast is that you don't have to pay for
a<00:24:03.200><c> lot</c><00:24:03.360><c> of</c><00:24:03.440><c> features</c><00:24:03.840><c> that</c><00:24:03.919><c> you</c><00:24:04.080><c> don't</c><00:24:04.240><c> use</c><00:24:04.640><c> if</c>

00:24:04.789 --> 00:24:04.799 align:start position:0%
a lot of features that you don't use if
 

00:24:04.799 --> 00:24:06.310 align:start position:0%
a lot of features that you don't use if
your<00:24:04.880><c> microkernel</c><00:24:05.360><c> does</c><00:24:05.520><c> hardly</c><00:24:05.840><c> anything</c>

00:24:06.310 --> 00:24:06.320 align:start position:0%
your microkernel does hardly anything
 

00:24:06.320 --> 00:24:07.269 align:start position:0%
your microkernel does hardly anything
then

00:24:07.269 --> 00:24:07.279 align:start position:0%
then
 

00:24:07.279 --> 00:24:08.470 align:start position:0%
then
you're<00:24:07.360><c> not</c><00:24:07.520><c> paying</c><00:24:07.760><c> for</c><00:24:07.919><c> a</c><00:24:07.919><c> lot</c><00:24:08.080><c> of</c><00:24:08.159><c> features</c>

00:24:08.470 --> 00:24:08.480 align:start position:0%
you're not paying for a lot of features
 

00:24:08.480 --> 00:24:11.510 align:start position:0%
you're not paying for a lot of features
you're<00:24:08.640><c> not</c><00:24:08.799><c> using</c>

00:24:11.510 --> 00:24:11.520 align:start position:0%
 
 

00:24:11.520 --> 00:24:15.029 align:start position:0%
 
another<00:24:11.840><c> reason</c><00:24:12.080><c> for</c><00:24:12.320><c> small</c><00:24:13.600><c> is</c><00:24:13.760><c> that</c><00:24:14.400><c> a</c><00:24:14.799><c> small</c>

00:24:15.029 --> 00:24:15.039 align:start position:0%
another reason for small is that a small
 

00:24:15.039 --> 00:24:16.310 align:start position:0%
another reason for small is that a small
kernel<00:24:15.440><c> probably</c><00:24:15.679><c> bakes</c><00:24:16.080><c> in</c>

00:24:16.310 --> 00:24:16.320 align:start position:0%
kernel probably bakes in
 

00:24:16.320 --> 00:24:19.190 align:start position:0%
kernel probably bakes in
far<00:24:16.640><c> fewer</c><00:24:17.120><c> design</c><00:24:17.520><c> decisions</c><00:24:18.240><c> forces</c><00:24:18.880><c> fewer</c>

00:24:19.190 --> 00:24:19.200 align:start position:0%
far fewer design decisions forces fewer
 

00:24:19.200 --> 00:24:22.470 align:start position:0%
far fewer design decisions forces fewer
design<00:24:19.520><c> decisions</c><00:24:19.919><c> on</c><00:24:20.080><c> application</c><00:24:20.559><c> writers</c>

00:24:22.470 --> 00:24:22.480 align:start position:0%
design decisions on application writers
 

00:24:22.480 --> 00:24:24.149 align:start position:0%
design decisions on application writers
and<00:24:22.559><c> so</c><00:24:22.720><c> it</c><00:24:22.799><c> leaves</c><00:24:23.039><c> them</c><00:24:23.200><c> more</c><00:24:23.600><c> maybe</c><00:24:23.919><c> leaves</c>

00:24:24.149 --> 00:24:24.159 align:start position:0%
and so it leaves them more maybe leaves
 

00:24:24.159 --> 00:24:26.149 align:start position:0%
and so it leaves them more maybe leaves
them<00:24:24.240><c> more</c><00:24:24.480><c> flexible</c><00:24:25.279><c> flexibility</c><00:24:25.919><c> to</c><00:24:26.000><c> make</c>

00:24:26.149 --> 00:24:26.159 align:start position:0%
them more flexible flexibility to make
 

00:24:26.159 --> 00:24:30.549 align:start position:0%
them more flexible flexibility to make
their<00:24:26.400><c> own</c><00:24:26.640><c> design</c><00:24:27.039><c> decisions</c>

00:24:30.549 --> 00:24:30.559 align:start position:0%
 
 

00:24:30.559 --> 00:24:32.230 align:start position:0%
 
so<00:24:30.720><c> by</c><00:24:30.880><c> the</c><00:24:31.039><c> way</c><00:24:31.200><c> these</c><00:24:31.360><c> are</c><00:24:31.440><c> all</c><00:24:31.600><c> these</c><00:24:31.919><c> are</c>

00:24:32.230 --> 00:24:32.240 align:start position:0%
so by the way these are all these are
 

00:24:32.240 --> 00:24:34.310 align:start position:0%
so by the way these are all these are
not<00:24:33.200><c> uh</c>

00:24:34.310 --> 00:24:34.320 align:start position:0%
not uh
 

00:24:34.320 --> 00:24:35.750 align:start position:0%
not uh
necessary<00:24:34.799><c> consequences</c><00:24:35.520><c> of</c><00:24:35.600><c> the</c>

00:24:35.750 --> 00:24:35.760 align:start position:0%
necessary consequences of the
 

00:24:35.760 --> 00:24:37.430 align:start position:0%
necessary consequences of the
microkernel<00:24:36.320><c> approach</c><00:24:36.960><c> these</c><00:24:37.120><c> are</c><00:24:37.279><c> things</c>

00:24:37.430 --> 00:24:37.440 align:start position:0%
microkernel approach these are things
 

00:24:37.440 --> 00:24:38.870 align:start position:0%
microkernel approach these are things
that<00:24:37.520><c> people</c><00:24:37.760><c> hoped</c><00:24:38.080><c> for</c><00:24:38.320><c> and</c><00:24:38.480><c> tried</c><00:24:38.720><c> to</c>

00:24:38.870 --> 00:24:38.880 align:start position:0%
that people hoped for and tried to
 

00:24:38.880 --> 00:24:39.510 align:start position:0%
that people hoped for and tried to
achieve

00:24:39.510 --> 00:24:39.520 align:start position:0%
achieve
 

00:24:39.520 --> 00:24:42.870 align:start position:0%
achieve
by<00:24:39.679><c> using</c><00:24:39.919><c> microkernels</c><00:24:42.240><c> another</c><00:24:42.559><c> set</c><00:24:42.720><c> of</c>

00:24:42.870 --> 00:24:42.880 align:start position:0%
by using microkernels another set of
 

00:24:42.880 --> 00:24:44.310 align:start position:0%
by using microkernels another set of
reasons<00:24:43.279><c> why</c><00:24:43.520><c> microkernels</c><00:24:44.000><c> seemed</c>

00:24:44.310 --> 00:24:44.320 align:start position:0%
reasons why microkernels seemed
 

00:24:44.320 --> 00:24:45.990 align:start position:0%
reasons why microkernels seemed
attractive<00:24:44.720><c> has</c><00:24:44.880><c> to</c><00:24:44.960><c> do</c><00:24:45.120><c> with</c><00:24:45.279><c> the</c><00:24:45.360><c> fact</c><00:24:45.679><c> that</c>

00:24:45.990 --> 00:24:46.000 align:start position:0%
attractive has to do with the fact that
 

00:24:46.000 --> 00:24:49.110 align:start position:0%
attractive has to do with the fact that
a<00:24:46.400><c> lot</c><00:24:46.559><c> of</c><00:24:46.640><c> the</c><00:24:46.799><c> code</c><00:24:47.039><c> was</c><00:24:47.200><c> at</c><00:24:47.279><c> user</c><00:24:47.679><c> level</c>

00:24:49.110 --> 00:24:49.120 align:start position:0%
a lot of the code was at user level
 

00:24:49.120 --> 00:24:51.830 align:start position:0%
a lot of the code was at user level
um<00:24:50.400><c> that</c><00:24:50.640><c> is</c><00:24:50.799><c> a</c><00:24:50.880><c> lot</c><00:24:51.039><c> of</c><00:24:51.200><c> features</c><00:24:51.679><c> and</c>

00:24:51.830 --> 00:24:51.840 align:start position:0%
um that is a lot of features and
 

00:24:51.840 --> 00:24:52.950 align:start position:0%
um that is a lot of features and
functions<00:24:52.240><c> that</c><00:24:52.320><c> we</c>

00:24:52.950 --> 00:24:52.960 align:start position:0%
functions that we
 

00:24:52.960 --> 00:24:54.950 align:start position:0%
functions that we
sort<00:24:53.120><c> of</c><00:24:53.760><c> have</c><00:24:53.919><c> grown</c><00:24:54.159><c> used</c><00:24:54.400><c> to</c><00:24:54.480><c> being</c><00:24:54.720><c> inside</c>

00:24:54.950 --> 00:24:54.960 align:start position:0%
sort of have grown used to being inside
 

00:24:54.960 --> 00:24:56.549 align:start position:0%
sort of have grown used to being inside
the<00:24:55.039><c> kernel</c><00:24:55.360><c> where</c><00:24:55.679><c> actually</c><00:24:56.000><c> user</c><00:24:56.240><c> level</c>

00:24:56.549 --> 00:24:56.559 align:start position:0%
the kernel where actually user level
 

00:24:56.559 --> 00:24:57.430 align:start position:0%
the kernel where actually user level
services

00:24:57.430 --> 00:24:57.440 align:start position:0%
services
 

00:24:57.440 --> 00:25:00.230 align:start position:0%
services
so<00:24:58.080><c> they</c><00:24:58.240><c> hope</c><00:24:58.480><c> that</c><00:24:58.640><c> by</c><00:24:59.600><c> sort</c><00:24:59.760><c> of</c><00:24:59.919><c> breaking</c>

00:25:00.230 --> 00:25:00.240 align:start position:0%
so they hope that by sort of breaking
 

00:25:00.240 --> 00:25:01.350 align:start position:0%
so they hope that by sort of breaking
the<00:25:00.320><c> kernel</c><00:25:00.559><c> apart</c><00:25:00.880><c> and</c><00:25:00.960><c> running</c><00:25:01.200><c> the</c>

00:25:01.350 --> 00:25:01.360 align:start position:0%
the kernel apart and running the
 

00:25:01.360 --> 00:25:02.710 align:start position:0%
the kernel apart and running the
different<00:25:01.600><c> parts</c><00:25:02.000><c> like</c>

00:25:02.710 --> 00:25:02.720 align:start position:0%
different parts like
 

00:25:02.720 --> 00:25:05.190 align:start position:0%
different parts like
in<00:25:03.600><c> user-level</c><00:25:04.240><c> services</c><00:25:04.640><c> like</c><00:25:04.799><c> a</c><00:25:04.880><c> file</c>

00:25:05.190 --> 00:25:05.200 align:start position:0%
in user-level services like a file
 

00:25:05.200 --> 00:25:05.990 align:start position:0%
in user-level services like a file
service

00:25:05.990 --> 00:25:06.000 align:start position:0%
service
 

00:25:06.000 --> 00:25:09.269 align:start position:0%
service
pro<00:25:06.320><c> fires</c><00:25:06.799><c> file</c><00:25:07.120><c> service</c><00:25:08.240><c> server</c>

00:25:09.269 --> 00:25:09.279 align:start position:0%
pro fires file service server
 

00:25:09.279 --> 00:25:12.630 align:start position:0%
pro fires file service server
it<00:25:09.440><c> might</c><00:25:09.679><c> cause</c><00:25:10.240><c> the</c><00:25:10.559><c> uh</c>

00:25:12.630 --> 00:25:12.640 align:start position:0%
it might cause the uh
 

00:25:12.640 --> 00:25:15.590 align:start position:0%
it might cause the uh
the<00:25:12.799><c> code</c><00:25:13.039><c> to</c><00:25:13.200><c> be</c><00:25:13.360><c> more</c><00:25:13.600><c> modular</c><00:25:15.279><c> might</c><00:25:15.440><c> sort</c>

00:25:15.590 --> 00:25:15.600 align:start position:0%
the code to be more modular might sort
 

00:25:15.600 --> 00:25:16.390 align:start position:0%
the code to be more modular might sort
of

00:25:16.390 --> 00:25:16.400 align:start position:0%
of
 

00:25:16.400 --> 00:25:18.310 align:start position:0%
of
encourage<00:25:17.120><c> operating</c><00:25:17.520><c> system</c><00:25:17.760><c> designers</c><00:25:18.159><c> to</c>

00:25:18.310 --> 00:25:18.320 align:start position:0%
encourage operating system designers to
 

00:25:18.320 --> 00:25:20.549 align:start position:0%
encourage operating system designers to
split<00:25:18.799><c> up</c><00:25:19.039><c> all</c><00:25:19.120><c> these</c><00:25:19.360><c> functions</c><00:25:19.840><c> into</c>

00:25:20.549 --> 00:25:20.559 align:start position:0%
split up all these functions into
 

00:25:20.559 --> 00:25:24.230 align:start position:0%
split up all these functions into
many<00:25:20.960><c> separate</c><00:25:23.279><c> services</c><00:25:23.760><c> and</c><00:25:23.840><c> that</c><00:25:24.000><c> might</c>

00:25:24.230 --> 00:25:24.240 align:start position:0%
many separate services and that might
 

00:25:24.240 --> 00:25:27.269 align:start position:0%
many separate services and that might
that<00:25:24.400><c> might</c><00:25:24.559><c> be</c><00:25:24.720><c> a</c><00:25:24.799><c> good</c><00:25:24.960><c> thing</c>

00:25:27.269 --> 00:25:27.279 align:start position:0%
 
 

00:25:27.279 --> 00:25:30.470 align:start position:0%
 
user<00:25:27.600><c> level</c><00:25:27.919><c> code</c><00:25:28.480><c> is</c><00:25:28.640><c> also</c><00:25:29.039><c> possibly</c><00:25:30.240><c> easier</c>

00:25:30.470 --> 00:25:30.480 align:start position:0%
user level code is also possibly easier
 

00:25:30.480 --> 00:25:32.230 align:start position:0%
user level code is also possibly easier
to<00:25:30.640><c> modify</c><00:25:31.120><c> if</c><00:25:31.200><c> steps</c><00:25:31.440><c> at</c><00:25:31.520><c> user</c><00:25:31.840><c> level</c><00:25:32.080><c> it's</c>

00:25:32.230 --> 00:25:32.240 align:start position:0%
to modify if steps at user level it's
 

00:25:32.240 --> 00:25:33.350 align:start position:0%
to modify if steps at user level it's
usually<00:25:32.559><c> easier</c><00:25:32.880><c> to</c>

00:25:33.350 --> 00:25:33.360 align:start position:0%
usually easier to
 

00:25:33.360 --> 00:25:36.630 align:start position:0%
usually easier to
tweak<00:25:33.679><c> it</c><00:25:33.919><c> or</c><00:25:34.000><c> replace</c><00:25:34.480><c> it</c><00:25:34.720><c> or</c><00:25:34.880><c> modify</c><00:25:35.360><c> it</c><00:25:35.520><c> than</c>

00:25:36.630 --> 00:25:36.640 align:start position:0%
tweak it or replace it or modify it than
 

00:25:36.640 --> 00:25:38.470 align:start position:0%
tweak it or replace it or modify it than
doing<00:25:36.880><c> the</c><00:25:36.960><c> same</c><00:25:37.200><c> stuff</c><00:25:37.440><c> in</c><00:25:37.600><c> the</c><00:25:37.679><c> kernel</c><00:25:38.000><c> so</c>

00:25:38.470 --> 00:25:38.480 align:start position:0%
doing the same stuff in the kernel so
 

00:25:38.480 --> 00:25:43.590 align:start position:0%
doing the same stuff in the kernel so
maybe<00:25:38.720><c> it's</c><00:25:38.880><c> easier</c><00:25:39.120><c> to</c><00:25:40.840><c> customize</c>

00:25:43.590 --> 00:25:43.600 align:start position:0%
maybe it's easier to customize
 

00:25:43.600 --> 00:25:47.029 align:start position:0%
maybe it's easier to customize
um<00:25:44.480><c> putting</c><00:25:44.720><c> the</c><00:25:45.600><c> uh</c><00:25:46.240><c> operating</c><00:25:46.559><c> systems</c><00:25:46.960><c> at</c>

00:25:47.029 --> 00:25:47.039 align:start position:0%
um putting the uh operating systems at
 

00:25:47.039 --> 00:25:48.630 align:start position:0%
um putting the uh operating systems at
user<00:25:47.360><c> level</c><00:25:47.600><c> also</c><00:25:47.919><c> might</c><00:25:48.080><c> make</c><00:25:48.320><c> them</c><00:25:48.480><c> more</c>

00:25:48.630 --> 00:25:48.640 align:start position:0%
user level also might make them more
 

00:25:48.640 --> 00:25:50.230 align:start position:0%
user level also might make them more
robust

00:25:50.230 --> 00:25:50.240 align:start position:0%
robust
 

00:25:50.240 --> 00:25:52.230 align:start position:0%
robust
you<00:25:50.320><c> can</c><00:25:50.880><c> we</c><00:25:51.039><c> can</c><00:25:51.360><c> if</c><00:25:51.440><c> the</c><00:25:51.679><c> kernel</c><00:25:52.000><c> something</c>

00:25:52.230 --> 00:25:52.240 align:start position:0%
you can we can if the kernel something
 

00:25:52.240 --> 00:25:53.669 align:start position:0%
you can we can if the kernel something
goes<00:25:52.320><c> wrong</c><00:25:52.480><c> with</c><00:25:52.559><c> the</c><00:25:52.640><c> kernel</c>

00:25:53.669 --> 00:25:53.679 align:start position:0%
goes wrong with the kernel
 

00:25:53.679 --> 00:25:57.350 align:start position:0%
goes wrong with the kernel
um<00:25:55.120><c> you</c><00:25:55.279><c> know</c><00:25:55.600><c> usually</c><00:25:56.640><c> you</c><00:25:56.799><c> have</c><00:25:56.880><c> to</c><00:25:57.039><c> panic</c>

00:25:57.350 --> 00:25:57.360 align:start position:0%
um you know usually you have to panic
 

00:25:57.360 --> 00:25:58.950 align:start position:0%
um you know usually you have to panic
and<00:25:57.440><c> reboot</c><00:25:58.000><c> because</c>

00:25:58.950 --> 00:25:58.960 align:start position:0%
and reboot because
 

00:25:58.960 --> 00:26:01.750 align:start position:0%
and reboot because
um<00:25:59.600><c> you</c><00:25:59.760><c> know</c><00:26:00.559><c> you</c><00:26:00.720><c> can't</c><00:26:00.880><c> necessarily</c><00:26:01.440><c> trust</c>

00:26:01.750 --> 00:26:01.760 align:start position:0%
um you know you can't necessarily trust
 

00:26:01.760 --> 00:26:03.269 align:start position:0%
um you know you can't necessarily trust
what's<00:26:02.000><c> in</c><00:26:02.080><c> the</c><00:26:02.159><c> kernel</c><00:26:02.480><c> anymore</c><00:26:02.880><c> if</c><00:26:03.039><c> it's</c><00:26:03.120><c> had</c>

00:26:03.269 --> 00:26:03.279 align:start position:0%
what's in the kernel anymore if it's had
 

00:26:03.279 --> 00:26:04.630 align:start position:0%
what's in the kernel anymore if it's had
some<00:26:03.440><c> bug</c><00:26:03.679><c> that</c><00:26:03.840><c> maybe</c><00:26:04.080><c> causes</c><00:26:04.480><c> it</c><00:26:04.559><c> to</c>

00:26:04.630 --> 00:26:04.640 align:start position:0%
some bug that maybe causes it to
 

00:26:04.640 --> 00:26:05.750 align:start position:0%
some bug that maybe causes it to
overwrite

00:26:05.750 --> 00:26:05.760 align:start position:0%
overwrite
 

00:26:05.760 --> 00:26:08.630 align:start position:0%
overwrite
a<00:26:05.919><c> random</c><00:26:06.240><c> part</c><00:26:06.400><c> of</c><00:26:06.480><c> its</c><00:26:06.640><c> data</c><00:26:07.679><c> whereas</c><00:26:08.080><c> if</c><00:26:08.320><c> you</c>

00:26:08.630 --> 00:26:08.640 align:start position:0%
a random part of its data whereas if you
 

00:26:08.640 --> 00:26:10.149 align:start position:0%
a random part of its data whereas if you
have<00:26:08.720><c> a</c><00:26:08.799><c> bunch</c><00:26:09.039><c> of</c><00:26:09.120><c> user</c><00:26:09.360><c> level</c><00:26:09.600><c> services</c><00:26:10.080><c> and</c>

00:26:10.149 --> 00:26:10.159 align:start position:0%
have a bunch of user level services and
 

00:26:10.159 --> 00:26:11.750 align:start position:0%
have a bunch of user level services and
one<00:26:10.240><c> of</c><00:26:10.320><c> them</c><00:26:10.480><c> malfunctions</c><00:26:11.279><c> and</c>

00:26:11.750 --> 00:26:11.760 align:start position:0%
one of them malfunctions and
 

00:26:11.760 --> 00:26:14.710 align:start position:0%
one of them malfunctions and
devise<00:26:12.159><c> by</c><00:26:12.400><c> xero</c><00:26:12.799><c> or</c><00:26:13.360><c> d</c><00:26:13.600><c> references</c><00:26:14.159><c> a</c><00:26:14.320><c> wild</c>

00:26:14.710 --> 00:26:14.720 align:start position:0%
devise by xero or d references a wild
 

00:26:14.720 --> 00:26:15.350 align:start position:0%
devise by xero or d references a wild
pointer

00:26:15.350 --> 00:26:15.360 align:start position:0%
pointer
 

00:26:15.360 --> 00:26:17.350 align:start position:0%
pointer
maybe<00:26:15.679><c> only</c><00:26:15.919><c> that</c><00:26:16.159><c> one</c><00:26:16.400><c> server</c><00:26:16.799><c> will</c><00:26:16.960><c> crash</c>

00:26:17.350 --> 00:26:17.360 align:start position:0%
maybe only that one server will crash
 

00:26:17.360 --> 00:26:18.630 align:start position:0%
maybe only that one server will crash
and<00:26:17.520><c> leaving</c><00:26:17.760><c> the</c><00:26:17.840><c> rest</c><00:26:18.000><c> of</c><00:26:18.080><c> the</c><00:26:18.240><c> operating</c>

00:26:18.630 --> 00:26:18.640 align:start position:0%
and leaving the rest of the operating
 

00:26:18.640 --> 00:26:19.269 align:start position:0%
and leaving the rest of the operating
system

00:26:19.269 --> 00:26:19.279 align:start position:0%
system
 

00:26:19.279 --> 00:26:21.510 align:start position:0%
system
intact<00:26:19.679><c> and</c><00:26:19.760><c> maybe</c><00:26:19.919><c> you</c><00:26:20.000><c> can</c><00:26:20.159><c> restart</c><00:26:20.640><c> it</c><00:26:21.360><c> just</c>

00:26:21.510 --> 00:26:21.520 align:start position:0%
intact and maybe you can restart it just
 

00:26:21.520 --> 00:26:23.430 align:start position:0%
intact and maybe you can restart it just
that<00:26:21.679><c> one</c><00:26:21.919><c> server</c><00:26:22.240><c> so</c><00:26:22.480><c> maybe</c>

00:26:23.430 --> 00:26:23.440 align:start position:0%
that one server so maybe
 

00:26:23.440 --> 00:26:27.430 align:start position:0%
that one server so maybe
user<00:26:23.840><c> level</c><00:26:24.960><c> moving</c><00:26:25.279><c> os</c><00:26:25.600><c> functionality</c>

00:26:27.430 --> 00:26:27.440 align:start position:0%
user level moving os functionality
 

00:26:27.440 --> 00:26:29.029 align:start position:0%
user level moving os functionality
to<00:26:27.600><c> user</c><00:26:27.760><c> level</c><00:26:28.000><c> processors</c><00:26:28.400><c> it</c><00:26:28.480><c> might</c><00:26:28.880><c> lead</c>

00:26:29.029 --> 00:26:29.039 align:start position:0%
to user level processors it might lead
 

00:26:29.039 --> 00:26:31.750 align:start position:0%
to user level processors it might lead
to<00:26:29.200><c> more</c><00:26:29.360><c> robustness</c><00:26:30.320><c> this</c><00:26:30.640><c> is</c><00:26:30.720><c> probably</c>

00:26:31.750 --> 00:26:31.760 align:start position:0%
to more robustness this is probably
 

00:26:31.760 --> 00:26:34.950 align:start position:0%
to more robustness this is probably
particularly<00:26:32.240><c> evident</c><00:26:32.480><c> for</c><00:26:32.640><c> drivers</c><00:26:34.000><c> most</c>

00:26:34.950 --> 00:26:34.960 align:start position:0%
particularly evident for drivers most
 

00:26:34.960 --> 00:26:38.070 align:start position:0%
particularly evident for drivers most
bugs<00:26:35.600><c> in</c><00:26:35.760><c> the</c><00:26:35.840><c> kernel</c><00:26:36.159><c> are</c><00:26:36.320><c> actually</c><00:26:37.679><c> hardware</c>

00:26:38.070 --> 00:26:38.080 align:start position:0%
bugs in the kernel are actually hardware
 

00:26:38.080 --> 00:26:39.269 align:start position:0%
bugs in the kernel are actually hardware
device<00:26:38.480><c> drivers</c>

00:26:39.269 --> 00:26:39.279 align:start position:0%
device drivers
 

00:26:39.279 --> 00:26:40.549 align:start position:0%
device drivers
if<00:26:39.440><c> we</c><00:26:39.520><c> can</c><00:26:39.679><c> manage</c><00:26:39.919><c> to</c><00:26:40.000><c> move</c><00:26:40.159><c> the</c><00:26:40.240><c> device</c>

00:26:40.549 --> 00:26:40.559 align:start position:0%
if we can manage to move the device
 

00:26:40.559 --> 00:26:42.470 align:start position:0%
if we can manage to move the device
drivers<00:26:40.960><c> out</c><00:26:41.120><c> of</c><00:26:41.200><c> the</c><00:26:41.279><c> kernel</c><00:26:41.919><c> then</c><00:26:42.159><c> we</c><00:26:42.320><c> might</c>

00:26:42.470 --> 00:26:42.480 align:start position:0%
drivers out of the kernel then we might
 

00:26:42.480 --> 00:26:43.750 align:start position:0%
drivers out of the kernel then we might
have<00:26:42.720><c> many</c><00:26:42.960><c> fewer</c>

00:26:43.750 --> 00:26:43.760 align:start position:0%
have many fewer
 

00:26:43.760 --> 00:26:46.950 align:start position:0%
have many fewer
bugs<00:26:44.080><c> and</c><00:26:44.240><c> crashes</c><00:26:44.640><c> in</c><00:26:44.720><c> the</c><00:26:44.799><c> kernel</c><00:26:46.720><c> and</c><00:26:46.880><c> a</c>

00:26:46.950 --> 00:26:46.960 align:start position:0%
bugs and crashes in the kernel and a
 

00:26:46.960 --> 00:26:48.390 align:start position:0%
bugs and crashes in the kernel and a
final<00:26:47.360><c> advantage</c><00:26:47.840><c> that</c><00:26:47.919><c> people</c><00:26:48.159><c> were</c>

00:26:48.390 --> 00:26:48.400 align:start position:0%
final advantage that people were
 

00:26:48.400 --> 00:26:50.149 align:start position:0%
final advantage that people were
thinking<00:26:48.640><c> about</c><00:26:48.880><c> back</c><00:26:49.039><c> then</c><00:26:49.279><c> is</c><00:26:49.440><c> that</c>

00:26:50.149 --> 00:26:50.159 align:start position:0%
thinking about back then is that
 

00:26:50.159 --> 00:26:52.070 align:start position:0%
thinking about back then is that
you<00:26:50.400><c> could</c><00:26:50.720><c> emulate</c><00:26:51.200><c> or</c><00:26:51.360><c> run</c><00:26:51.600><c> multiple</c>

00:26:52.070 --> 00:26:52.080 align:start position:0%
you could emulate or run multiple
 

00:26:52.080 --> 00:26:54.070 align:start position:0%
you could emulate or run multiple
operating<00:26:52.480><c> system</c><00:26:52.799><c> personalities</c><00:26:53.600><c> on</c><00:26:53.760><c> top</c><00:26:53.919><c> of</c>

00:26:54.070 --> 00:26:54.080 align:start position:0%
operating system personalities on top of
 

00:26:54.080 --> 00:26:55.110 align:start position:0%
operating system personalities on top of
a<00:26:54.159><c> microkernel</c>

00:26:55.110 --> 00:26:55.120 align:start position:0%
a microkernel
 

00:26:55.120 --> 00:26:56.789 align:start position:0%
a microkernel
so<00:26:55.279><c> even</c><00:26:55.440><c> though</c><00:26:55.520><c> the</c><00:26:55.600><c> microkernel</c><00:26:56.240><c> does</c><00:26:56.559><c> does</c>

00:26:56.789 --> 00:26:56.799 align:start position:0%
so even though the microkernel does does
 

00:26:56.799 --> 00:26:58.390 align:start position:0%
so even though the microkernel does does
hardly<00:26:57.120><c> anything</c><00:26:57.440><c> for</c><00:26:57.600><c> you</c><00:26:57.760><c> directly</c>

00:26:58.390 --> 00:26:58.400 align:start position:0%
hardly anything for you directly
 

00:26:58.400 --> 00:27:00.070 align:start position:0%
hardly anything for you directly
you<00:26:58.480><c> might</c><00:26:58.640><c> be</c><00:26:58.720><c> able</c><00:26:58.880><c> to</c><00:26:58.960><c> run</c><00:26:59.120><c> a</c><00:26:59.200><c> unix</c><00:26:59.679><c> server</c>

00:27:00.070 --> 00:27:00.080 align:start position:0%
you might be able to run a unix server
 

00:27:00.080 --> 00:27:02.070 align:start position:0%
you might be able to run a unix server
or<00:27:00.240><c> something</c><00:27:00.799><c> on</c><00:27:00.960><c> top</c><00:27:01.120><c> of</c><00:27:01.279><c> it</c>

00:27:02.070 --> 00:27:02.080 align:start position:0%
or something on top of it
 

00:27:02.080 --> 00:27:05.350 align:start position:0%
or something on top of it
maybe<00:27:02.320><c> more</c><00:27:02.480><c> than</c><00:27:02.720><c> one</c><00:27:04.240><c> on</c><00:27:04.400><c> the</c><00:27:04.640><c> same</c>

00:27:05.350 --> 00:27:05.360 align:start position:0%
maybe more than one on the same
 

00:27:05.360 --> 00:27:08.710 align:start position:0%
maybe more than one on the same
machine

00:27:08.710 --> 00:27:08.720 align:start position:0%
 
 

00:27:08.720 --> 00:27:10.149 align:start position:0%
 
of<00:27:08.799><c> course</c><00:27:09.039><c> that's</c><00:27:09.200><c> what</c><00:27:09.360><c> today's</c><00:27:09.760><c> paper</c><00:27:10.000><c> is</c>

00:27:10.149 --> 00:27:10.159 align:start position:0%
of course that's what today's paper is
 

00:27:10.159 --> 00:27:13.029 align:start position:0%
of course that's what today's paper is
about<00:27:11.520><c> running</c><00:27:11.760><c> a</c><00:27:11.840><c> unix</c>

00:27:13.029 --> 00:27:13.039 align:start position:0%
about running a unix
 

00:27:13.039 --> 00:27:15.350 align:start position:0%
about running a unix
running<00:27:13.360><c> linux</c><00:27:13.919><c> as</c><00:27:14.159><c> a</c><00:27:14.799><c> service</c><00:27:15.200><c> on</c><00:27:15.279><c> a</c>

00:27:15.350 --> 00:27:15.360 align:start position:0%
running linux as a service on a
 

00:27:15.360 --> 00:27:16.470 align:start position:0%
running linux as a service on a
microkernel

00:27:16.470 --> 00:27:16.480 align:start position:0%
microkernel
 

00:27:16.480 --> 00:27:19.510 align:start position:0%
microkernel
these<00:27:16.640><c> were</c><00:27:16.799><c> all</c><00:27:18.799><c> the</c><00:27:18.960><c> set</c><00:27:19.120><c> of</c><00:27:19.200><c> things</c><00:27:19.440><c> that</c>

00:27:19.510 --> 00:27:19.520 align:start position:0%
these were all the set of things that
 

00:27:19.520 --> 00:27:21.350 align:start position:0%
these were all the set of things that
people<00:27:19.760><c> were</c><00:27:19.919><c> hoping</c><00:27:20.159><c> to</c><00:27:20.320><c> be</c><00:27:20.480><c> able</c><00:27:20.640><c> to</c>

00:27:21.350 --> 00:27:21.360 align:start position:0%
people were hoping to be able to
 

00:27:21.360 --> 00:27:24.630 align:start position:0%
people were hoping to be able to
get<00:27:21.520><c> some</c><00:27:21.679><c> traction</c><00:27:22.159><c> on</c><00:27:22.399><c> by</c><00:27:24.000><c> uh</c><00:27:24.240><c> looking</c><00:27:24.480><c> into</c>

00:27:24.630 --> 00:27:24.640 align:start position:0%
get some traction on by uh looking into
 

00:27:24.640 --> 00:27:27.269 align:start position:0%
get some traction on by uh looking into
microkernel<00:27:25.279><c> signs</c>

00:27:27.269 --> 00:27:27.279 align:start position:0%
microkernel signs
 

00:27:27.279 --> 00:27:30.549 align:start position:0%
microkernel signs
of<00:27:27.360><c> course</c><00:27:27.600><c> there's</c><00:27:27.840><c> some</c><00:27:28.880><c> um</c><00:27:29.600><c> sort</c><00:27:29.760><c> of</c>

00:27:30.549 --> 00:27:30.559 align:start position:0%
of course there's some um sort of
 

00:27:30.559 --> 00:27:33.190 align:start position:0%
of course there's some um sort of
puzzles<00:27:30.960><c> you</c><00:27:31.120><c> have</c><00:27:31.200><c> to</c><00:27:31.279><c> think</c><00:27:31.600><c> through</c><00:27:32.960><c> some</c>

00:27:33.190 --> 00:27:33.200 align:start position:0%
puzzles you have to think through some
 

00:27:33.200 --> 00:27:37.669 align:start position:0%
puzzles you have to think through some
challenges

00:27:37.669 --> 00:27:37.679 align:start position:0%
 
 

00:27:37.679 --> 00:27:40.630 align:start position:0%
 
uh<00:27:38.000><c> one</c><00:27:38.320><c> challenge</c><00:27:39.919><c> if</c><00:27:40.000><c> you</c><00:27:40.080><c> want</c><00:27:40.240><c> to</c><00:27:40.320><c> design</c>

00:27:40.630 --> 00:27:40.640 align:start position:0%
uh one challenge if you want to design
 

00:27:40.640 --> 00:27:42.149 align:start position:0%
uh one challenge if you want to design
your<00:27:40.799><c> own</c><00:27:40.880><c> micro</c><00:27:41.200><c> kernel</c><00:27:41.600><c> is</c>

00:27:42.149 --> 00:27:42.159 align:start position:0%
your own micro kernel is
 

00:27:42.159 --> 00:27:44.070 align:start position:0%
your own micro kernel is
actually<00:27:42.480><c> figuring</c><00:27:42.880><c> out</c><00:27:43.039><c> you</c><00:27:43.200><c> want</c><00:27:43.360><c> the</c><00:27:43.600><c> api</c>

00:27:44.070 --> 00:27:44.080 align:start position:0%
actually figuring out you want the api
 

00:27:44.080 --> 00:27:45.830 align:start position:0%
actually figuring out you want the api
you<00:27:44.159><c> want</c><00:27:44.320><c> the</c><00:27:44.640><c> micro</c><00:27:44.960><c> kernel</c><00:27:45.279><c> system</c><00:27:45.600><c> call</c>

00:27:45.830 --> 00:27:45.840 align:start position:0%
you want the micro kernel system call
 

00:27:45.840 --> 00:27:46.870 align:start position:0%
you want the micro kernel system call
interface<00:27:46.240><c> to</c><00:27:46.320><c> be</c><00:27:46.559><c> as</c>

00:27:46.870 --> 00:27:46.880 align:start position:0%
interface to be as
 

00:27:46.880 --> 00:27:48.630 align:start position:0%
interface to be as
simple<00:27:47.200><c> as</c><00:27:47.360><c> possible</c><00:27:48.159><c> because</c><00:27:48.399><c> the</c><00:27:48.480><c> whole</c>

00:27:48.630 --> 00:27:48.640 align:start position:0%
simple as possible because the whole
 

00:27:48.640 --> 00:27:50.149 align:start position:0%
simple as possible because the whole
point<00:27:48.880><c> was</c><00:27:49.039><c> to</c><00:27:49.120><c> keep</c><00:27:49.279><c> it</c><00:27:49.440><c> small</c>

00:27:50.149 --> 00:27:50.159 align:start position:0%
point was to keep it small
 

00:27:50.159 --> 00:27:52.630 align:start position:0%
point was to keep it small
now<00:27:50.320><c> what</c><00:27:50.559><c> is</c><00:27:50.720><c> the</c><00:27:50.880><c> actual</c><00:27:51.200><c> smallest</c><00:27:51.679><c> set</c><00:27:52.080><c> of</c>

00:27:52.630 --> 00:27:52.640 align:start position:0%
now what is the actual smallest set of
 

00:27:52.640 --> 00:27:53.750 align:start position:0%
now what is the actual smallest set of
useful

00:27:53.750 --> 00:27:53.760 align:start position:0%
useful
 

00:27:53.760 --> 00:27:56.870 align:start position:0%
useful
system<00:27:54.159><c> calls</c><00:27:54.559><c> you</c><00:27:54.720><c> can</c><00:27:54.799><c> get</c><00:27:54.960><c> away</c><00:27:55.200><c> with</c><00:27:56.080><c> um</c>

00:27:56.870 --> 00:27:56.880 align:start position:0%
system calls you can get away with um
 

00:27:56.880 --> 00:27:59.350 align:start position:0%
system calls you can get away with um
you<00:27:56.960><c> know</c><00:27:57.039><c> what</c><00:27:57.200><c> does</c><00:27:57.360><c> it</c><00:27:57.440><c> look</c><00:27:57.600><c> like</c><00:27:59.200><c> so</c>

00:27:59.350 --> 00:27:59.360 align:start position:0%
you know what does it look like so
 

00:27:59.360 --> 00:27:59.909 align:start position:0%
you know what does it look like so
that's<00:27:59.600><c> not</c>

00:27:59.909 --> 00:27:59.919 align:start position:0%
that's not
 

00:27:59.919 --> 00:28:03.110 align:start position:0%
that's not
particularly<00:28:00.840><c> clear</c><00:28:02.559><c> so</c><00:28:02.720><c> we're</c><00:28:02.799><c> looking</c><00:28:03.039><c> at</c>

00:28:03.110 --> 00:28:03.120 align:start position:0%
particularly clear so we're looking at
 

00:28:03.120 --> 00:28:03.750 align:start position:0%
particularly clear so we're looking at
the<00:28:03.200><c> minimum</c>

00:28:03.750 --> 00:28:03.760 align:start position:0%
the minimum
 

00:28:03.760 --> 00:28:07.669 align:start position:0%
the minimum
system<00:28:04.080><c> call</c>

00:28:07.669 --> 00:28:07.679 align:start position:0%
 
 

00:28:07.679 --> 00:28:12.230 align:start position:0%
 
api

00:28:12.230 --> 00:28:12.240 align:start position:0%
 
 

00:28:12.240 --> 00:28:14.230 align:start position:0%
 
you<00:28:12.399><c> need</c><00:28:12.640><c> these</c><00:28:12.960><c> this</c><00:28:13.200><c> minimum</c><00:28:13.520><c> system</c><00:28:14.000><c> call</c>

00:28:14.230 --> 00:28:14.240 align:start position:0%
you need these this minimum system call
 

00:28:14.240 --> 00:28:16.310 align:start position:0%
you need these this minimum system call
api<00:28:14.720><c> it's</c><00:28:14.880><c> great</c><00:28:15.039><c> if</c><00:28:15.200><c> it's</c><00:28:15.360><c> simple</c><00:28:15.840><c> but</c><00:28:16.080><c> you</c>

00:28:16.310 --> 00:28:16.320 align:start position:0%
api it's great if it's simple but you
 

00:28:16.320 --> 00:28:17.990 align:start position:0%
api it's great if it's simple but you
actually<00:28:16.559><c> have</c><00:28:16.720><c> to</c><00:28:16.799><c> be</c><00:28:16.960><c> able</c><00:28:17.039><c> to</c><00:28:17.200><c> build</c>

00:28:17.990 --> 00:28:18.000 align:start position:0%
actually have to be able to build
 

00:28:18.000 --> 00:28:20.230 align:start position:0%
actually have to be able to build
some<00:28:18.159><c> pretty</c><00:28:18.399><c> sophisticated</c><00:28:19.279><c> features</c><00:28:20.080><c> out</c>

00:28:20.230 --> 00:28:20.240 align:start position:0%
some pretty sophisticated features out
 

00:28:20.240 --> 00:28:22.950 align:start position:0%
some pretty sophisticated features out
of<00:28:20.480><c> your</c><00:28:20.640><c> minimum</c><00:28:21.120><c> system</c><00:28:21.440><c> call</c><00:28:21.679><c> api</c><00:28:22.159><c> because</c>

00:28:22.950 --> 00:28:22.960 align:start position:0%
of your minimum system call api because
 

00:28:22.960 --> 00:28:24.470 align:start position:0%
of your minimum system call api because
even<00:28:23.200><c> if</c><00:28:23.279><c> the</c><00:28:23.360><c> kernel</c><00:28:23.679><c> doesn't</c><00:28:24.000><c> do</c><00:28:24.159><c> much</c><00:28:24.399><c> you</c>

00:28:24.470 --> 00:28:24.480 align:start position:0%
even if the kernel doesn't do much you
 

00:28:24.480 --> 00:28:25.830 align:start position:0%
even if the kernel doesn't do much you
know<00:28:24.640><c> in</c><00:28:24.720><c> the</c><00:28:24.880><c> end</c><00:28:25.279><c> you</c><00:28:25.360><c> got</c><00:28:25.440><c> to</c><00:28:25.520><c> be</c><00:28:25.679><c> able</c><00:28:25.760><c> to</c>

00:28:25.830 --> 00:28:25.840 align:start position:0%
know in the end you got to be able to
 

00:28:25.840 --> 00:28:26.149 align:start position:0%
know in the end you got to be able to
run

00:28:26.149 --> 00:28:26.159 align:start position:0%
run
 

00:28:26.159 --> 00:28:28.070 align:start position:0%
run
programs<00:28:26.640><c> you</c><00:28:26.799><c> got</c><00:28:26.960><c> to</c><00:28:27.039><c> maybe</c><00:28:27.679><c> you're</c><00:28:27.840><c> trying</c>

00:28:28.070 --> 00:28:28.080 align:start position:0%
programs you got to maybe you're trying
 

00:28:28.080 --> 00:28:30.389 align:start position:0%
programs you got to maybe you're trying
to<00:28:28.240><c> run</c><00:28:28.480><c> unix</c><00:28:28.960><c> on</c><00:28:29.279><c> top</c><00:28:29.520><c> of</c><00:28:29.679><c> a</c><00:28:29.760><c> micro</c><00:28:30.080><c> chrome</c><00:28:30.320><c> you</c>

00:28:30.389 --> 00:28:30.399 align:start position:0%
to run unix on top of a micro chrome you
 

00:28:30.399 --> 00:28:31.909 align:start position:0%
to run unix on top of a micro chrome you
got<00:28:30.480><c> to</c><00:28:30.559><c> be</c><00:28:30.640><c> able</c><00:28:30.720><c> to</c><00:28:30.799><c> do</c><00:28:30.960><c> things</c><00:28:31.279><c> like</c><00:28:31.600><c> fork</c>

00:28:31.909 --> 00:28:31.919 align:start position:0%
got to be able to do things like fork
 

00:28:31.919 --> 00:28:33.990 align:start position:0%
got to be able to do things like fork
and<00:28:32.080><c> map</c>

00:28:33.990 --> 00:28:34.000 align:start position:0%
and map
 

00:28:34.000 --> 00:28:37.190 align:start position:0%
and map
so<00:28:35.039><c> as</c><00:28:35.200><c> part</c><00:28:35.360><c> of</c><00:28:35.520><c> the</c><00:28:35.600><c> system</c><00:28:35.840><c> call</c><00:28:36.159><c> interface</c>

00:28:37.190 --> 00:28:37.200 align:start position:0%
so as part of the system call interface
 

00:28:37.200 --> 00:28:40.310 align:start position:0%
so as part of the system call interface
simple<00:28:38.559><c> low-level</c><00:28:39.120><c> system</c><00:28:39.360><c> call</c><00:28:39.600><c> interface</c>

00:28:40.310 --> 00:28:40.320 align:start position:0%
simple low-level system call interface
 

00:28:40.320 --> 00:28:45.750 align:start position:0%
simple low-level system call interface
it<00:28:40.480><c> has</c><00:28:40.720><c> to</c><00:28:40.880><c> be</c><00:28:41.120><c> powerful</c><00:28:41.600><c> enough</c><00:28:41.919><c> to</c><00:28:42.080><c> support</c>

00:28:45.750 --> 00:28:45.760 align:start position:0%
 
 

00:28:45.760 --> 00:28:47.590 align:start position:0%
 
all<00:28:45.919><c> the</c><00:28:46.000><c> stuff</c><00:28:46.240><c> people</c><00:28:46.480><c> need</c><00:28:46.720><c> to</c><00:28:46.799><c> do</c><00:28:47.120><c> like</c>

00:28:47.590 --> 00:28:47.600 align:start position:0%
all the stuff people need to do like
 

00:28:47.600 --> 00:28:49.350 align:start position:0%
all the stuff people need to do like
exec

00:28:49.350 --> 00:28:49.360 align:start position:0%
exec
 

00:28:49.360 --> 00:28:52.470 align:start position:0%
exec
and<00:28:50.159><c> fork</c><00:28:51.200><c> and</c><00:28:51.520><c> heck</c><00:28:51.840><c> maybe</c><00:28:52.159><c> even</c>

00:28:52.470 --> 00:28:52.480 align:start position:0%
and fork and heck maybe even
 

00:28:52.480 --> 00:28:55.990 align:start position:0%
and fork and heck maybe even
copy<00:28:52.880><c> on</c><00:28:53.039><c> right</c><00:28:53.360><c> fork</c><00:28:53.760><c> or</c><00:28:54.480><c> memory</c><00:28:54.960><c> mapping</c>

00:28:55.990 --> 00:28:56.000 align:start position:0%
copy on right fork or memory mapping
 

00:28:56.000 --> 00:28:58.470 align:start position:0%
copy on right fork or memory mapping
on<00:28:56.240><c> disk</c><00:28:56.559><c> files</c><00:28:57.200><c> but</c><00:28:57.360><c> all</c><00:28:57.520><c> in</c><00:28:57.600><c> a</c><00:28:57.760><c> kernel</c><00:28:58.080><c> that</c>

00:28:58.470 --> 00:28:58.480 align:start position:0%
on disk files but all in a kernel that
 

00:28:58.480 --> 00:29:00.710 align:start position:0%
on disk files but all in a kernel that
has<00:28:58.640><c> no</c><00:28:58.880><c> idea</c><00:28:59.120><c> about</c><00:28:59.360><c> files</c><00:28:59.760><c> or</c><00:28:59.919><c> a</c><00:29:00.000><c> file</c><00:29:00.320><c> system</c>

00:29:00.710 --> 00:29:00.720 align:start position:0%
has no idea about files or a file system
 

00:29:00.720 --> 00:29:01.190 align:start position:0%
has no idea about files or a file system
right

00:29:01.190 --> 00:29:01.200 align:start position:0%
right
 

00:29:01.200 --> 00:29:02.870 align:start position:0%
right
it<00:29:01.360><c> needs</c><00:29:01.600><c> to</c><00:29:01.679><c> support</c><00:29:02.080><c> exec</c><00:29:02.480><c> but</c><00:29:02.640><c> with</c><00:29:02.799><c> a</c>

00:29:02.870 --> 00:29:02.880 align:start position:0%
it needs to support exec but with a
 

00:29:02.880 --> 00:29:06.470 align:start position:0%
it needs to support exec but with a
kernel<00:29:03.200><c> that</c><00:29:03.600><c> knows</c><00:29:03.840><c> nothing</c><00:29:04.080><c> about</c><00:29:04.320><c> files</c>

00:29:06.470 --> 00:29:06.480 align:start position:0%
kernel that knows nothing about files
 

00:29:06.480 --> 00:29:11.029 align:start position:0%
kernel that knows nothing about files
um<00:29:07.279><c> we</c><00:29:07.440><c> need</c><00:29:07.679><c> the</c><00:29:07.840><c> rest</c><00:29:08.320><c> of</c><00:29:08.399><c> the</c>

00:29:11.029 --> 00:29:11.039 align:start position:0%
 
 

00:29:11.039 --> 00:29:12.789 align:start position:0%
 
of<00:29:11.120><c> the</c><00:29:11.279><c> operating</c><00:29:11.679><c> system</c><00:29:12.000><c> somehow</c><00:29:12.559><c> you</c><00:29:12.640><c> know</c>

00:29:12.789 --> 00:29:12.799 align:start position:0%
of the operating system somehow you know
 

00:29:12.799 --> 00:29:15.029 align:start position:0%
of the operating system somehow you know
sure<00:29:13.039><c> the</c><00:29:13.120><c> micro</c><00:29:13.440><c> kernel</c><00:29:13.679><c> may</c><00:29:13.840><c> be</c>

00:29:15.029 --> 00:29:15.039 align:start position:0%
sure the micro kernel may be
 

00:29:15.039 --> 00:29:17.110 align:start position:0%
sure the micro kernel may be
very<00:29:15.200><c> simple</c><00:29:15.600><c> but</c><00:29:16.000><c> you</c><00:29:16.159><c> know</c><00:29:16.320><c> now</c><00:29:16.720><c> we're</c><00:29:16.880><c> sort</c>

00:29:17.110 --> 00:29:17.120 align:start position:0%
very simple but you know now we're sort
 

00:29:17.120 --> 00:29:19.590 align:start position:0%
very simple but you know now we're sort
of<00:29:17.840><c> requiring</c><00:29:18.399><c> the</c><00:29:18.480><c> development</c><00:29:19.039><c> of</c>

00:29:19.590 --> 00:29:19.600 align:start position:0%
of requiring the development of
 

00:29:19.600 --> 00:29:22.149 align:start position:0%
of requiring the development of
some<00:29:19.840><c> set</c><00:29:20.000><c> of</c><00:29:20.080><c> user</c><00:29:20.399><c> level</c><00:29:20.720><c> servers</c><00:29:21.279><c> that</c>

00:29:22.149 --> 00:29:22.159 align:start position:0%
some set of user level servers that
 

00:29:22.159 --> 00:29:23.350 align:start position:0%
some set of user level servers that
implement<00:29:22.480><c> the</c><00:29:22.559><c> rest</c><00:29:22.799><c> of</c><00:29:22.799><c> the</c><00:29:22.880><c> operating</c>

00:29:23.350 --> 00:29:23.360 align:start position:0%
implement the rest of the operating
 

00:29:23.360 --> 00:29:24.230 align:start position:0%
implement the rest of the operating
system

00:29:24.230 --> 00:29:24.240 align:start position:0%
system
 

00:29:24.240 --> 00:29:26.310 align:start position:0%
system
so<00:29:24.480><c> we</c><00:29:24.559><c> need</c><00:29:24.720><c> to</c><00:29:25.120><c> that</c><00:29:25.440><c> has</c><00:29:25.600><c> to</c><00:29:25.760><c> get</c><00:29:25.919><c> done</c><00:29:26.159><c> at</c>

00:29:26.310 --> 00:29:26.320 align:start position:0%
so we need to that has to get done at
 

00:29:26.320 --> 00:29:27.750 align:start position:0%
so we need to that has to get done at
least<00:29:26.720><c> and</c><00:29:26.799><c> may</c><00:29:27.039><c> require</c><00:29:27.360><c> some</c>

00:29:27.750 --> 00:29:27.760 align:start position:0%
least and may require some
 

00:29:27.760 --> 00:29:30.950 align:start position:0%
least and may require some
uh<00:29:28.000><c> just</c><00:29:28.399><c> solving</c><00:29:28.720><c> design</c><00:29:29.039><c> puzzles</c><00:29:29.919><c> um</c>

00:29:30.950 --> 00:29:30.960 align:start position:0%
uh just solving design puzzles um
 

00:29:30.960 --> 00:29:33.269 align:start position:0%
uh just solving design puzzles um
and<00:29:31.120><c> finally</c><00:29:31.679><c> the</c><00:29:32.720><c> you</c><00:29:32.880><c> know</c><00:29:33.039><c> this</c>

00:29:33.269 --> 00:29:33.279 align:start position:0%
and finally the you know this
 

00:29:33.279 --> 00:29:35.190 align:start position:0%
and finally the you know this
arrangement<00:29:33.919><c> requires</c><00:29:34.320><c> a</c><00:29:34.399><c> lot</c><00:29:34.559><c> of</c><00:29:34.640><c> chit</c><00:29:34.880><c> chat</c>

00:29:35.190 --> 00:29:35.200 align:start position:0%
arrangement requires a lot of chit chat
 

00:29:35.200 --> 00:29:35.830 align:start position:0%
arrangement requires a lot of chit chat
over

00:29:35.830 --> 00:29:35.840 align:start position:0%
over
 

00:29:35.840 --> 00:29:39.269 align:start position:0%
over
interprocessor<00:29:36.640><c> communication</c><00:29:37.279><c> over</c><00:29:37.520><c> ipc</c><00:29:38.640><c> um</c>

00:29:39.269 --> 00:29:39.279 align:start position:0%
interprocessor communication over ipc um
 

00:29:39.279 --> 00:29:41.750 align:start position:0%
interprocessor communication over ipc um
so<00:29:40.159><c> there's</c><00:29:40.399><c> going</c><00:29:40.480><c> to</c><00:29:40.559><c> be</c><00:29:40.799><c> great</c><00:29:41.039><c> pressure</c><00:29:41.600><c> to</c>

00:29:41.750 --> 00:29:41.760 align:start position:0%
so there's going to be great pressure to
 

00:29:41.760 --> 00:29:43.510 align:start position:0%
so there's going to be great pressure to
make<00:29:42.000><c> the</c>

00:29:43.510 --> 00:29:43.520 align:start position:0%
make the
 

00:29:43.520 --> 00:29:47.269 align:start position:0%
make the
you<00:29:43.679><c> know</c><00:29:45.919><c> ipc</c><00:29:46.480><c> very</c><00:29:46.720><c> fast</c>

00:29:47.269 --> 00:29:47.279 align:start position:0%
you know ipc very fast
 

00:29:47.279 --> 00:29:50.870 align:start position:0%
you know ipc very fast
so<00:29:47.440><c> we're</c><00:29:47.679><c> going</c><00:29:47.840><c> to</c><00:29:47.919><c> wonder</c><00:29:48.320><c> whether</c><00:29:49.919><c> ipc</c><00:29:50.480><c> can</c>

00:29:50.870 --> 00:29:50.880 align:start position:0%
so we're going to wonder whether ipc can
 

00:29:50.880 --> 00:29:54.070 align:start position:0%
so we're going to wonder whether ipc can
be<00:29:51.039><c> made</c><00:29:51.279><c> fast</c><00:29:51.600><c> enough</c><00:29:53.440><c> uh</c>

00:29:54.070 --> 00:29:54.080 align:start position:0%
be made fast enough uh
 

00:29:54.080 --> 00:29:57.669 align:start position:0%
be made fast enough uh
to<00:29:54.240><c> keep</c><00:29:54.399><c> microkernels</c><00:29:55.039><c> competitive</c>

00:29:57.669 --> 00:29:57.679 align:start position:0%
 
 

00:29:57.679 --> 00:30:00.149 align:start position:0%
 
all<00:29:57.840><c> right</c><00:29:58.799><c> um</c><00:29:59.360><c> and</c><00:29:59.520><c> just</c><00:29:59.760><c> in</c><00:29:59.840><c> general</c>

00:30:00.149 --> 00:30:00.159 align:start position:0%
all right um and just in general
 

00:30:00.159 --> 00:30:01.190 align:start position:0%
all right um and just in general
actually<00:30:00.559><c> the</c>

00:30:01.190 --> 00:30:01.200 align:start position:0%
actually the
 

00:30:01.200 --> 00:30:04.710 align:start position:0%
actually the
not<00:30:01.440><c> just</c><00:30:02.000><c> ipc</c><00:30:02.480><c> speed</c><00:30:02.799><c> but</c><00:30:03.200><c> in</c><00:30:03.360><c> general</c><00:30:03.840><c> the</c>

00:30:04.710 --> 00:30:04.720 align:start position:0%
not just ipc speed but in general the
 

00:30:04.720 --> 00:30:06.149 align:start position:0%
not just ipc speed but in general the
um<00:30:05.039><c> there's</c><00:30:05.200><c> a</c><00:30:05.279><c> lot</c><00:30:05.360><c> of</c><00:30:05.440><c> reason</c><00:30:05.679><c> to</c><00:30:05.840><c> believe</c>

00:30:06.149 --> 00:30:06.159 align:start position:0%
um there's a lot of reason to believe
 

00:30:06.159 --> 00:30:08.070 align:start position:0%
um there's a lot of reason to believe
that<00:30:06.480><c> monolithic</c><00:30:07.039><c> kernels</c><00:30:07.520><c> derive</c>

00:30:08.070 --> 00:30:08.080 align:start position:0%
that monolithic kernels derive
 

00:30:08.080 --> 00:30:10.149 align:start position:0%
that monolithic kernels derive
some<00:30:08.320><c> performance</c><00:30:09.120><c> out</c><00:30:09.279><c> of</c><00:30:09.679><c> the</c><00:30:09.840><c> fact</c><00:30:10.000><c> that</c>

00:30:10.149 --> 00:30:10.159 align:start position:0%
some performance out of the fact that
 

00:30:10.159 --> 00:30:11.669 align:start position:0%
some performance out of the fact that
they're<00:30:10.320><c> integrated</c><00:30:10.799><c> that</c><00:30:10.960><c> the</c><00:30:11.039><c> file</c><00:30:11.360><c> system</c>

00:30:11.669 --> 00:30:11.679 align:start position:0%
they're integrated that the file system
 

00:30:11.679 --> 00:30:12.470 align:start position:0%
they're integrated that the file system
code<00:30:12.000><c> can</c>

00:30:12.470 --> 00:30:12.480 align:start position:0%
code can
 

00:30:12.480 --> 00:30:14.070 align:start position:0%
code can
talk<00:30:12.720><c> to</c><00:30:12.880><c> the</c><00:30:12.960><c> virtual</c><00:30:13.360><c> memory</c><00:30:13.679><c> code</c><00:30:13.919><c> in</c><00:30:14.000><c> the</c>

00:30:14.070 --> 00:30:14.080 align:start position:0%
talk to the virtual memory code in the
 

00:30:14.080 --> 00:30:15.669 align:start position:0%
talk to the virtual memory code in the
memory<00:30:14.399><c> allocation</c><00:30:14.880><c> code</c><00:30:15.279><c> and</c>

00:30:15.669 --> 00:30:15.679 align:start position:0%
memory allocation code and
 

00:30:15.679 --> 00:30:17.590 align:start position:0%
memory allocation code and
it's<00:30:15.919><c> all</c><00:30:16.000><c> sort</c><00:30:16.159><c> of</c><00:30:16.240><c> one</c><00:30:16.480><c> big</c><00:30:16.720><c> happy</c><00:30:17.200><c> giant</c>

00:30:17.590 --> 00:30:17.600 align:start position:0%
it's all sort of one big happy giant
 

00:30:17.600 --> 00:30:19.590 align:start position:0%
it's all sort of one big happy giant
program

00:30:19.590 --> 00:30:19.600 align:start position:0%
program
 

00:30:19.600 --> 00:30:21.909 align:start position:0%
program
and<00:30:19.840><c> if</c><00:30:20.000><c> you</c><00:30:20.080><c> require</c><00:30:21.360><c> all</c><00:30:21.440><c> those</c><00:30:21.600><c> things</c><00:30:21.840><c> to</c>

00:30:21.909 --> 00:30:21.919 align:start position:0%
and if you require all those things to
 

00:30:21.919 --> 00:30:23.669 align:start position:0%
and if you require all those things to
be<00:30:22.080><c> split</c><00:30:22.399><c> out</c><00:30:22.559><c> into</c><00:30:22.799><c> separate</c><00:30:23.120><c> servers</c><00:30:23.520><c> or</c>

00:30:23.669 --> 00:30:23.679 align:start position:0%
be split out into separate servers or
 

00:30:23.679 --> 00:30:25.110 align:start position:0%
be split out into separate servers or
maybe<00:30:23.919><c> split</c><00:30:24.159><c> between</c><00:30:24.480><c> a</c><00:30:24.559><c> kernel</c>

00:30:25.110 --> 00:30:25.120 align:start position:0%
maybe split between a kernel
 

00:30:25.120 --> 00:30:27.269 align:start position:0%
maybe split between a kernel
and<00:30:25.840><c> user</c><00:30:26.159><c> level</c><00:30:26.480><c> there</c><00:30:26.640><c> may</c><00:30:26.799><c> be</c><00:30:26.960><c> fewer</c>

00:30:27.269 --> 00:30:27.279 align:start position:0%
and user level there may be fewer
 

00:30:27.279 --> 00:30:29.669 align:start position:0%
and user level there may be fewer
opportunities<00:30:27.919><c> for</c><00:30:28.080><c> optimization</c><00:30:28.880><c> by</c><00:30:29.039><c> way</c><00:30:29.279><c> of</c>

00:30:29.669 --> 00:30:29.679 align:start position:0%
opportunities for optimization by way of
 

00:30:29.679 --> 00:30:32.789 align:start position:0%
opportunities for optimization by way of
integration<00:30:30.720><c> and</c><00:30:30.799><c> that</c><00:30:30.960><c> may</c><00:30:31.120><c> or</c><00:30:31.360><c> may</c><00:30:31.520><c> not</c>

00:30:32.789 --> 00:30:32.799 align:start position:0%
integration and that may or may not
 

00:30:32.799 --> 00:30:37.190 align:start position:0%
integration and that may or may not
end<00:30:32.960><c> up</c><00:30:33.039><c> hurting</c><00:30:34.840><c> performance</c>

00:30:37.190 --> 00:30:37.200 align:start position:0%
end up hurting performance
 

00:30:37.200 --> 00:30:40.710 align:start position:0%
end up hurting performance
all<00:30:37.360><c> right</c><00:30:38.640><c> um</c><00:30:39.919><c> so</c><00:30:40.080><c> these</c><00:30:40.240><c> are</c><00:30:40.399><c> sort</c><00:30:40.559><c> of</c>

00:30:40.710 --> 00:30:40.720 align:start position:0%
all right um so these are sort of
 

00:30:40.720 --> 00:30:41.510 align:start position:0%
all right um so these are sort of
cross-cutting

00:30:41.510 --> 00:30:41.520 align:start position:0%
cross-cutting
 

00:30:41.520 --> 00:30:44.789 align:start position:0%
cross-cutting
and<00:30:42.960><c> hoped-for</c><00:30:43.520><c> wins</c><00:30:44.240><c> and</c>

00:30:44.789 --> 00:30:44.799 align:start position:0%
and hoped-for wins and
 

00:30:44.799 --> 00:30:47.750 align:start position:0%
and hoped-for wins and
sort<00:30:44.960><c> of</c><00:30:45.120><c> challenges</c><00:30:45.520><c> that</c><00:30:45.760><c> all</c><00:30:46.880><c> the</c><00:30:47.039><c> many</c>

00:30:47.750 --> 00:30:47.760 align:start position:0%
sort of challenges that all the many
 

00:30:47.760 --> 00:30:52.950 align:start position:0%
sort of challenges that all the many
micro-kernel<00:30:48.480><c> projects</c><00:30:49.039><c> faced</c>

00:30:52.950 --> 00:30:52.960 align:start position:0%
 
 

00:30:52.960 --> 00:30:55.909 align:start position:0%
 
because<00:30:53.200><c> of</c><00:30:53.279><c> today's</c><00:30:53.679><c> paper</c><00:30:54.080><c> i'm</c><00:30:54.159><c> going</c><00:30:54.320><c> to</c>

00:30:55.909 --> 00:30:55.919 align:start position:0%
because of today's paper i'm going to
 

00:30:55.919 --> 00:30:56.870 align:start position:0%
because of today's paper i'm going to
tell<00:30:56.080><c> you</c><00:30:56.240><c> a</c><00:30:56.320><c> bunch</c><00:30:56.480><c> about</c>

00:30:56.870 --> 00:30:56.880 align:start position:0%
tell you a bunch about
 

00:30:56.880 --> 00:31:00.310 align:start position:0%
tell you a bunch about
l4<00:30:57.519><c> specifically</c><00:30:58.159><c> which</c><00:30:58.399><c> is</c>

00:31:00.310 --> 00:31:00.320 align:start position:0%
l4 specifically which is
 

00:31:00.320 --> 00:31:03.590 align:start position:0%
l4 specifically which is
the<00:31:00.480><c> microkernel</c><00:31:02.559><c> that</c><00:31:03.039><c> the</c><00:31:03.200><c> authors</c><00:31:03.519><c> of</c>

00:31:03.590 --> 00:31:03.600 align:start position:0%
the microkernel that the authors of
 

00:31:03.600 --> 00:31:06.070 align:start position:0%
the microkernel that the authors of
today's<00:31:04.000><c> paper</c><00:31:04.320><c> developed</c><00:31:04.720><c> and</c><00:31:04.880><c> used</c>

00:31:06.070 --> 00:31:06.080 align:start position:0%
today's paper developed and used
 

00:31:06.080 --> 00:31:09.590 align:start position:0%
today's paper developed and used
um<00:31:08.240><c> l4</c><00:31:08.640><c> is</c><00:31:08.720><c> not</c>

00:31:09.590 --> 00:31:09.600 align:start position:0%
um l4 is not
 

00:31:09.600 --> 00:31:11.990 align:start position:0%
um l4 is not
um<00:31:10.880><c> it's</c><00:31:10.960><c> certainly</c><00:31:11.279><c> not</c><00:31:11.360><c> the</c><00:31:11.519><c> earliest</c>

00:31:11.990 --> 00:31:12.000 align:start position:0%
um it's certainly not the earliest
 

00:31:12.000 --> 00:31:13.750 align:start position:0%
um it's certainly not the earliest
microkernel<00:31:12.559><c> ever</c><00:31:12.720><c> made</c><00:31:12.960><c> but</c><00:31:13.120><c> it's</c>

00:31:13.750 --> 00:31:13.760 align:start position:0%
microkernel ever made but it's
 

00:31:13.760 --> 00:31:15.990 align:start position:0%
microkernel ever made but it's
one<00:31:13.919><c> of</c><00:31:14.000><c> the</c><00:31:14.159><c> sort</c><00:31:14.320><c> of</c><00:31:14.480><c> early</c><00:31:14.799><c> microkernels</c>

00:31:15.990 --> 00:31:16.000 align:start position:0%
one of the sort of early microkernels
 

00:31:16.000 --> 00:31:17.990 align:start position:0%
one of the sort of early microkernels
that<00:31:16.080><c> came</c><00:31:16.320><c> out</c><00:31:16.480><c> of</c><00:31:16.559><c> all</c><00:31:16.720><c> the</c><00:31:16.799><c> work</c><00:31:17.120><c> in</c><00:31:17.200><c> this</c>

00:31:17.990 --> 00:31:18.000 align:start position:0%
that came out of all the work in this
 

00:31:18.000 --> 00:31:20.950 align:start position:0%
that came out of all the work in this
uh<00:31:18.240><c> starting</c><00:31:18.559><c> in</c><00:31:18.640><c> the</c><00:31:18.720><c> 1980s</c><00:31:20.240><c> and</c><00:31:20.399><c> it's</c><00:31:20.640><c> fairly</c>

00:31:20.950 --> 00:31:20.960 align:start position:0%
uh starting in the 1980s and it's fairly
 

00:31:20.960 --> 00:31:22.389 align:start position:0%
uh starting in the 1980s and it's fairly
representative<00:31:21.679><c> as</c><00:31:21.840><c> far</c><00:31:22.080><c> as</c>

00:31:22.389 --> 00:31:22.399 align:start position:0%
representative as far as
 

00:31:22.399 --> 00:31:26.549 align:start position:0%
representative as far as
uh<00:31:22.880><c> how</c><00:31:23.120><c> it</c><00:31:23.279><c> works</c><00:31:25.120><c> there's</c><00:31:25.440><c> been</c>

00:31:26.549 --> 00:31:26.559 align:start position:0%
uh how it works there's been
 

00:31:26.559 --> 00:31:28.630 align:start position:0%
uh how it works there's been
it's<00:31:26.799><c> it's</c><00:31:26.960><c> a</c><00:31:27.039><c> bit</c><00:31:27.120><c> of</c><00:31:27.279><c> a</c><00:31:27.360><c> moving</c><00:31:27.679><c> target</c><00:31:28.480><c> it</c>

00:31:28.630 --> 00:31:28.640 align:start position:0%
it's it's a bit of a moving target it
 

00:31:28.640 --> 00:31:29.590 align:start position:0%
it's it's a bit of a moving target it
was<00:31:28.720><c> the</c>

00:31:29.590 --> 00:31:29.600 align:start position:0%
was the
 

00:31:29.600 --> 00:31:31.190 align:start position:0%
was the
subject<00:31:30.000><c> of</c><00:31:30.159><c> intense</c><00:31:30.640><c> development</c><00:31:31.039><c> and</c>

00:31:31.190 --> 00:31:31.200 align:start position:0%
subject of intense development and
 

00:31:31.200 --> 00:31:33.190 align:start position:0%
subject of intense development and
evolution<00:31:31.600><c> for</c><00:31:31.760><c> many</c><00:31:32.080><c> years</c><00:31:32.480><c> and</c><00:31:32.799><c> it's</c><00:31:33.039><c> still</c>

00:31:33.190 --> 00:31:33.200 align:start position:0%
evolution for many years and it's still
 

00:31:33.200 --> 00:31:34.549 align:start position:0%
evolution for many years and it's still
going<00:31:33.519><c> strong</c>

00:31:34.549 --> 00:31:34.559 align:start position:0%
going strong
 

00:31:34.559 --> 00:31:36.070 align:start position:0%
going strong
if<00:31:34.640><c> you</c><00:31:34.799><c> look</c><00:31:34.960><c> at</c><00:31:35.039><c> up</c><00:31:35.200><c> on</c><00:31:35.279><c> wikipedia</c><00:31:35.919><c> you'll</c>

00:31:36.070 --> 00:31:36.080 align:start position:0%
if you look at up on wikipedia you'll
 

00:31:36.080 --> 00:31:38.470 align:start position:0%
if you look at up on wikipedia you'll
see<00:31:36.320><c> that</c><00:31:36.480><c> there's</c><00:31:37.360><c> maybe</c><00:31:37.679><c> 15</c><00:31:38.000><c> or</c><00:31:38.159><c> 20</c>

00:31:38.470 --> 00:31:38.480 align:start position:0%
see that there's maybe 15 or 20
 

00:31:38.480 --> 00:31:40.070 align:start position:0%
see that there's maybe 15 or 20
different<00:31:38.720><c> variants</c><00:31:39.120><c> of</c><00:31:39.279><c> l4</c><00:31:39.679><c> that</c><00:31:39.840><c> have</c><00:31:39.919><c> kind</c>

00:31:40.070 --> 00:31:40.080 align:start position:0%
different variants of l4 that have kind
 

00:31:40.080 --> 00:31:42.870 align:start position:0%
different variants of l4 that have kind
of<00:31:40.159><c> come</c><00:31:40.399><c> and</c><00:31:40.480><c> gone</c><00:31:40.799><c> and</c><00:31:40.960><c> some</c><00:31:41.200><c> are</c><00:31:41.279><c> still</c><00:31:41.519><c> here</c>

00:31:42.870 --> 00:31:42.880 align:start position:0%
of come and gone and some are still here
 

00:31:42.880 --> 00:31:46.149 align:start position:0%
of come and gone and some are still here
starting<00:31:43.360><c> i</c><00:31:43.440><c> think</c><00:31:43.600><c> in</c><00:31:43.760><c> the</c><00:31:43.840><c> late</c><00:31:44.080><c> 1980s</c><00:31:45.679><c> and</c>

00:31:46.149 --> 00:31:46.159 align:start position:0%
starting i think in the late 1980s and
 

00:31:46.159 --> 00:31:48.470 align:start position:0%
starting i think in the late 1980s and
i<00:31:46.320><c> know</c><00:31:46.480><c> what</c><00:31:46.559><c> i'm</c><00:31:46.799><c> going</c><00:31:46.960><c> to</c><00:31:47.600><c> try</c><00:31:47.840><c> to</c><00:31:48.159><c> explain</c>

00:31:48.470 --> 00:31:48.480 align:start position:0%
i know what i'm going to try to explain
 

00:31:48.480 --> 00:31:50.549 align:start position:0%
i know what i'm going to try to explain
to<00:31:48.640><c> you</c><00:31:48.799><c> is</c><00:31:48.880><c> my</c><00:31:49.120><c> understanding</c><00:31:49.679><c> of</c><00:31:49.760><c> how</c><00:31:50.080><c> l4</c>

00:31:50.549 --> 00:31:50.559 align:start position:0%
to you is my understanding of how l4
 

00:31:50.559 --> 00:31:51.190 align:start position:0%
to you is my understanding of how l4
worked

00:31:51.190 --> 00:31:51.200 align:start position:0%
worked
 

00:31:51.200 --> 00:31:54.230 align:start position:0%
worked
at<00:31:51.360><c> about</c><00:31:51.679><c> the</c><00:31:51.840><c> time</c><00:31:52.240><c> that</c><00:31:52.880><c> today's</c><00:31:53.360><c> paper</c>

00:31:54.230 --> 00:31:54.240 align:start position:0%
at about the time that today's paper
 

00:31:54.240 --> 00:31:58.950 align:start position:0%
at about the time that today's paper
came<00:31:54.480><c> out</c>

00:31:58.950 --> 00:31:58.960 align:start position:0%
 
 

00:31:58.960 --> 00:32:02.389 align:start position:0%
 
all<00:31:59.120><c> right</c><00:31:59.519><c> so</c><00:32:00.240><c> um</c>

00:32:02.389 --> 00:32:02.399 align:start position:0%
all right so um
 

00:32:02.399 --> 00:32:05.830 align:start position:0%
all right so um
just<00:32:02.640><c> at</c><00:32:02.720><c> a</c><00:32:02.960><c> a</c><00:32:03.440><c> it's</c><00:32:03.600><c> a</c><00:32:04.080><c> high</c><00:32:04.240><c> level</c><00:32:04.799><c> um</c>

00:32:05.830 --> 00:32:05.840 align:start position:0%
just at a a it's a high level um
 

00:32:05.840 --> 00:32:08.789 align:start position:0%
just at a a it's a high level um
the<00:32:06.480><c> l4</c><00:32:06.960><c> was</c><00:32:07.279><c> certainly</c><00:32:07.679><c> micro</c><00:32:08.159><c> in</c><00:32:08.240><c> the</c><00:32:08.559><c> sense</c>

00:32:08.789 --> 00:32:08.799 align:start position:0%
the l4 was certainly micro in the sense
 

00:32:08.799 --> 00:32:10.389 align:start position:0%
the l4 was certainly micro in the sense
that<00:32:08.960><c> it</c><00:32:09.279><c> was</c><00:32:09.600><c> actually</c>

00:32:10.389 --> 00:32:10.399 align:start position:0%
that it was actually
 

00:32:10.399 --> 00:32:13.990 align:start position:0%
that it was actually
is<00:32:11.039><c> a</c><00:32:11.360><c> a</c><00:32:11.679><c> small</c><00:32:12.000><c> kernel</c><00:32:12.559><c> it</c><00:32:12.720><c> has</c><00:32:13.200><c> only</c><00:32:13.600><c> seven</c>

00:32:13.990 --> 00:32:14.000 align:start position:0%
is a a small kernel it has only seven
 

00:32:14.000 --> 00:32:16.310 align:start position:0%
is a a small kernel it has only seven
system<00:32:14.399><c> calls</c><00:32:15.760><c> some</c><00:32:15.919><c> of</c><00:32:16.000><c> them</c><00:32:16.080><c> are</c><00:32:16.159><c> a</c><00:32:16.159><c> little</c>

00:32:16.310 --> 00:32:16.320 align:start position:0%
system calls some of them are a little
 

00:32:16.320 --> 00:32:18.070 align:start position:0%
system calls some of them are a little
bit<00:32:16.480><c> complex</c><00:32:16.960><c> but</c><00:32:17.120><c> still</c><00:32:17.279><c> it</c><00:32:17.440><c> only</c><00:32:17.600><c> has</c><00:32:17.760><c> seven</c>

00:32:18.070 --> 00:32:18.080 align:start position:0%
bit complex but still it only has seven
 

00:32:18.080 --> 00:32:19.029 align:start position:0%
bit complex but still it only has seven
system<00:32:18.399><c> calls</c>

00:32:19.029 --> 00:32:19.039 align:start position:0%
system calls
 

00:32:19.039 --> 00:32:20.630 align:start position:0%
system calls
whereas<00:32:19.360><c> today's</c><00:32:19.760><c> linux</c><00:32:20.080><c> the</c><00:32:20.159><c> last</c><00:32:20.320><c> time</c><00:32:20.559><c> i</c>

00:32:20.630 --> 00:32:20.640 align:start position:0%
whereas today's linux the last time i
 

00:32:20.640 --> 00:32:23.750 align:start position:0%
whereas today's linux the last time i
counted<00:32:20.960><c> had</c><00:32:21.360><c> in</c><00:32:21.519><c> the</c><00:32:21.600><c> mid</c><00:32:21.840><c> 300s</c>

00:32:23.750 --> 00:32:23.760 align:start position:0%
counted had in the mid 300s
 

00:32:23.760 --> 00:32:25.669 align:start position:0%
counted had in the mid 300s
and<00:32:23.919><c> even</c><00:32:24.159><c> xv6</c><00:32:24.799><c> which</c><00:32:24.960><c> is</c><00:32:25.039><c> an</c><00:32:25.200><c> extremely</c>

00:32:25.669 --> 00:32:25.679 align:start position:0%
and even xv6 which is an extremely
 

00:32:25.679 --> 00:32:27.669 align:start position:0%
and even xv6 which is an extremely
simple<00:32:26.000><c> kernel</c><00:32:26.320><c> even</c><00:32:26.559><c> xc6</c><00:32:27.039><c> has</c><00:32:27.200><c> 21</c>

00:32:27.669 --> 00:32:27.679 align:start position:0%
simple kernel even xc6 has 21
 

00:32:27.679 --> 00:32:33.350 align:start position:0%
simple kernel even xc6 has 21
system<00:32:28.000><c> calls</c><00:32:29.200><c> so</c><00:32:29.440><c> l4</c>

00:32:33.350 --> 00:32:33.360 align:start position:0%
 
 

00:32:33.360 --> 00:32:36.070 align:start position:0%
 
is<00:32:33.519><c> only</c><00:32:33.760><c> 7.</c><00:32:34.320><c> so</c><00:32:34.480><c> by</c><00:32:34.640><c> that</c><00:32:34.799><c> metric</c><00:32:35.120><c> it's</c><00:32:35.279><c> simple</c>

00:32:36.070 --> 00:32:36.080 align:start position:0%
is only 7. so by that metric it's simple
 

00:32:36.080 --> 00:32:38.389 align:start position:0%
is only 7. so by that metric it's simple
it's<00:32:36.240><c> also</c><00:32:36.480><c> not</c><00:32:36.640><c> very</c><00:32:36.880><c> big</c>

00:32:38.389 --> 00:32:38.399 align:start position:0%
it's also not very big
 

00:32:38.399 --> 00:32:41.269 align:start position:0%
it's also not very big
i<00:32:38.480><c> think</c><00:32:40.159><c> as</c><00:32:40.320><c> of</c><00:32:40.480><c> the</c><00:32:40.559><c> time</c><00:32:40.720><c> this</c><00:32:40.880><c> paper</c><00:32:41.120><c> was</c>

00:32:41.269 --> 00:32:41.279 align:start position:0%
i think as of the time this paper was
 

00:32:41.279 --> 00:32:42.549 align:start position:0%
i think as of the time this paper was
written<00:32:41.519><c> at</c><00:32:41.760><c> about</c>

00:32:42.549 --> 00:32:42.559 align:start position:0%
written at about
 

00:32:42.559 --> 00:32:45.590 align:start position:0%
written at about
13<00:32:43.440><c> 000</c><00:32:43.760><c> lines</c><00:32:44.080><c> of</c><00:32:44.240><c> code</c><00:32:45.039><c> um</c>

00:32:45.590 --> 00:32:45.600 align:start position:0%
13 000 lines of code um
 

00:32:45.600 --> 00:32:47.750 align:start position:0%
13 000 lines of code um
which<00:32:45.840><c> is</c><00:32:45.919><c> not</c><00:32:46.080><c> too</c><00:32:46.240><c> much</c><00:32:46.559><c> uh</c><00:32:46.799><c> xv6</c><00:32:47.360><c> is</c><00:32:47.440><c> smaller</c>

00:32:47.750 --> 00:32:47.760 align:start position:0%
which is not too much uh xv6 is smaller
 

00:32:47.760 --> 00:32:49.750 align:start position:0%
which is not too much uh xv6 is smaller
than<00:32:48.000><c> that</c><00:32:48.559><c> um</c>

00:32:49.750 --> 00:32:49.760 align:start position:0%
than that um
 

00:32:49.760 --> 00:32:51.430 align:start position:0%
than that um
i<00:32:49.840><c> think</c><00:32:50.080><c> xv6</c><00:32:50.559><c> is</c><00:32:50.640><c> maybe</c><00:32:50.880><c> six</c><00:32:51.120><c> or</c><00:32:51.200><c> seven</c>

00:32:51.430 --> 00:32:51.440 align:start position:0%
i think xv6 is maybe six or seven
 

00:32:51.440 --> 00:32:52.950 align:start position:0%
i think xv6 is maybe six or seven
thousand<00:32:51.760><c> lines</c><00:32:52.000><c> of</c><00:32:52.080><c> code</c><00:32:52.320><c> in</c><00:32:52.399><c> the</c><00:32:52.480><c> kernel</c>

00:32:52.950 --> 00:32:52.960 align:start position:0%
thousand lines of code in the kernel
 

00:32:52.960 --> 00:32:55.029 align:start position:0%
thousand lines of code in the kernel
but<00:32:53.120><c> still</c><00:32:53.440><c> xp6</c><00:32:53.919><c> is</c><00:32:54.000><c> very</c><00:32:54.240><c> simple</c><00:32:54.559><c> as</c><00:32:54.640><c> kernels</c>

00:32:55.029 --> 00:32:55.039 align:start position:0%
but still xp6 is very simple as kernels
 

00:32:55.039 --> 00:32:56.870 align:start position:0%
but still xp6 is very simple as kernels
go<00:32:55.360><c> it's</c><00:32:55.519><c> a</c><00:32:55.919><c> l4</c><00:32:56.320><c> not</c><00:32:56.480><c> much</c>

00:32:56.870 --> 00:32:56.880 align:start position:0%
go it's a l4 not much
 

00:32:56.880 --> 00:32:58.310 align:start position:0%
go it's a l4 not much
more<00:32:57.039><c> complex</c><00:32:57.519><c> than</c><00:32:57.600><c> that</c><00:32:57.760><c> and</c><00:32:57.840><c> this</c><00:32:58.000><c> is</c><00:32:58.240><c> you</c>

00:32:58.310 --> 00:32:58.320 align:start position:0%
more complex than that and this is you
 

00:32:58.320 --> 00:32:59.990 align:start position:0%
more complex than that and this is you
know<00:32:58.960><c> a</c><00:32:59.200><c> tenth</c><00:32:59.679><c> or</c>

00:32:59.990 --> 00:33:00.000 align:start position:0%
know a tenth or
 

00:33:00.000 --> 00:33:03.110 align:start position:0%
know a tenth or
a<00:33:00.159><c> 20th</c><00:33:00.640><c> or</c><00:33:00.720><c> a</c><00:33:00.799><c> 30th</c><00:33:01.360><c> as</c><00:33:01.440><c> big</c><00:33:01.679><c> as</c><00:33:02.159><c> uh</c><00:33:02.559><c> as</c><00:33:02.720><c> linux</c>

00:33:03.110 --> 00:33:03.120 align:start position:0%
a 20th or a 30th as big as uh as linux
 

00:33:03.120 --> 00:33:03.509 align:start position:0%
a 20th or a 30th as big as uh as linux
is

00:33:03.509 --> 00:33:03.519 align:start position:0%
is
 

00:33:03.519 --> 00:33:07.590 align:start position:0%
is
this<00:33:03.760><c> is</c><00:33:03.919><c> pretty</c><00:33:04.080><c> small</c><00:33:06.320><c> it</c><00:33:06.480><c> had</c><00:33:06.720><c> only</c><00:33:06.960><c> a</c><00:33:07.120><c> few</c>

00:33:07.590 --> 00:33:07.600 align:start position:0%
this is pretty small it had only a few
 

00:33:07.600 --> 00:33:10.950 align:start position:0%
this is pretty small it had only a few
basic<00:33:08.000><c> abstractions</c>

00:33:10.950 --> 00:33:10.960 align:start position:0%
 
 

00:33:10.960 --> 00:33:15.110 align:start position:0%
 
it<00:33:11.200><c> had</c><00:33:13.039><c> a</c><00:33:13.200><c> notion</c><00:33:13.600><c> of</c>

00:33:15.110 --> 00:33:15.120 align:start position:0%
it had a notion of
 

00:33:15.120 --> 00:33:20.389 align:start position:0%
it had a notion of
what<00:33:15.279><c> they</c><00:33:15.440><c> called</c><00:33:15.760><c> tasks</c><00:33:17.120><c> or</c><00:33:17.360><c> address</c><00:33:17.840><c> spaces</c>

00:33:20.389 --> 00:33:20.399 align:start position:0%
what they called tasks or address spaces
 

00:33:20.399 --> 00:33:23.509 align:start position:0%
what they called tasks or address spaces
um<00:33:22.080><c> and</c><00:33:22.240><c> these</c><00:33:22.480><c> more</c><00:33:22.640><c> or</c><00:33:22.720><c> less</c><00:33:22.960><c> correspond</c><00:33:23.360><c> to</c>

00:33:23.509 --> 00:33:23.519 align:start position:0%
um and these more or less correspond to
 

00:33:23.519 --> 00:33:25.669 align:start position:0%
um and these more or less correspond to
what<00:33:23.919><c> we</c><00:33:24.080><c> would</c><00:33:24.240><c> call</c><00:33:24.480><c> a</c><00:33:24.640><c> process</c><00:33:25.039><c> in</c><00:33:25.120><c> unix</c>

00:33:25.669 --> 00:33:25.679 align:start position:0%
what we would call a process in unix
 

00:33:25.679 --> 00:33:27.190 align:start position:0%
what we would call a process in unix
it's<00:33:25.919><c> a</c>

00:33:27.190 --> 00:33:27.200 align:start position:0%
it's a
 

00:33:27.200 --> 00:33:29.509 align:start position:0%
it's a
bunch<00:33:27.440><c> of</c><00:33:27.519><c> memories</c><00:33:28.240><c> um</c><00:33:28.720><c> maps</c><00:33:29.120><c> starting</c><00:33:29.360><c> at</c>

00:33:29.509 --> 00:33:29.519 align:start position:0%
bunch of memories um maps starting at
 

00:33:29.519 --> 00:33:31.190 align:start position:0%
bunch of memories um maps starting at
zero<00:33:30.159><c> and</c>

00:33:31.190 --> 00:33:31.200 align:start position:0%
zero and
 

00:33:31.200 --> 00:33:34.549 align:start position:0%
zero and
um<00:33:32.399><c> and</c><00:33:32.799><c> you're</c><00:33:32.960><c> able</c><00:33:33.120><c> to</c><00:33:33.279><c> execute</c><00:33:33.679><c> in</c><00:33:33.840><c> here</c>

00:33:34.549 --> 00:33:34.559 align:start position:0%
um and you're able to execute in here
 

00:33:34.559 --> 00:33:36.950 align:start position:0%
um and you're able to execute in here
uh<00:33:35.200><c> just</c><00:33:35.360><c> like</c><00:33:35.600><c> in</c><00:33:35.679><c> a</c><00:33:35.760><c> process</c><00:33:36.320><c> one</c><00:33:36.559><c> difference</c>

00:33:36.950 --> 00:33:36.960 align:start position:0%
uh just like in a process one difference
 

00:33:36.960 --> 00:33:37.990 align:start position:0%
uh just like in a process one difference
from

00:33:37.990 --> 00:33:38.000 align:start position:0%
from
 

00:33:38.000 --> 00:33:40.549 align:start position:0%
from
xv6<00:33:39.200><c> is</c><00:33:39.360><c> that</c><00:33:39.600><c> there</c><00:33:39.760><c> can</c><00:33:39.919><c> be</c><00:33:40.080><c> multiple</c>

00:33:40.549 --> 00:33:40.559 align:start position:0%
xv6 is that there can be multiple
 

00:33:40.559 --> 00:33:42.710 align:start position:0%
xv6 is that there can be multiple
threads

00:33:42.710 --> 00:33:42.720 align:start position:0%
threads
 

00:33:42.720 --> 00:33:48.549 align:start position:0%
threads
per<00:33:43.039><c> task</c><00:33:45.039><c> and</c><00:33:45.279><c> l4</c><00:33:46.000><c> was</c><00:33:46.240><c> in</c><00:33:46.399><c> charge</c><00:33:46.880><c> of</c>

00:33:48.549 --> 00:33:48.559 align:start position:0%
per task and l4 was in charge of
 

00:33:48.559 --> 00:33:50.230 align:start position:0%
per task and l4 was in charge of
scheduling<00:33:49.120><c> the</c><00:33:49.360><c> multiple</c><00:33:49.760><c> threads</c><00:33:50.080><c> of</c>

00:33:50.230 --> 00:33:50.240 align:start position:0%
scheduling the multiple threads of
 

00:33:50.240 --> 00:33:54.389 align:start position:0%
scheduling the multiple threads of
execution<00:33:51.039><c> within</c><00:33:51.440><c> each</c><00:33:51.679><c> task</c>

00:33:54.389 --> 00:33:54.399 align:start position:0%
 
 

00:33:54.399 --> 00:33:56.549 align:start position:0%
 
and<00:33:55.440><c> part</c><00:33:55.600><c> of</c><00:33:55.679><c> the</c><00:33:55.760><c> reason</c><00:33:55.919><c> for</c><00:33:56.080><c> this</c><00:33:56.240><c> is</c><00:33:56.399><c> just</c>

00:33:56.549 --> 00:33:56.559 align:start position:0%
and part of the reason for this is just
 

00:33:56.559 --> 00:33:57.909 align:start position:0%
and part of the reason for this is just
that<00:33:56.799><c> it's</c><00:33:57.120><c> very</c><00:33:57.279><c> convenient</c><00:33:57.679><c> to</c><00:33:57.760><c> have</c>

00:33:57.909 --> 00:33:57.919 align:start position:0%
that it's very convenient to have
 

00:33:57.919 --> 00:33:59.830 align:start position:0%
that it's very convenient to have
threads<00:33:58.240><c> as</c><00:33:58.399><c> a</c><00:33:58.480><c> programming</c><00:33:58.960><c> structuring</c>

00:33:59.830 --> 00:33:59.840 align:start position:0%
threads as a programming structuring
 

00:33:59.840 --> 00:34:01.750 align:start position:0%
threads as a programming structuring
program<00:34:00.159><c> structuring</c><00:34:00.720><c> tool</c>

00:34:01.750 --> 00:34:01.760 align:start position:0%
program structuring tool
 

00:34:01.760 --> 00:34:04.789 align:start position:0%
program structuring tool
and<00:34:01.919><c> it</c><00:34:02.000><c> was</c><00:34:02.240><c> also</c>

00:34:04.789 --> 00:34:04.799 align:start position:0%
 
 

00:34:04.799 --> 00:34:06.310 align:start position:0%
 
i<00:34:04.880><c> don't</c><00:34:05.039><c> know</c><00:34:05.200><c> if</c><00:34:05.279><c> they</c><00:34:05.440><c> actually</c><00:34:05.679><c> supported</c>

00:34:06.310 --> 00:34:06.320 align:start position:0%
i don't know if they actually supported
 

00:34:06.320 --> 00:34:08.470 align:start position:0%
i don't know if they actually supported
multi-core<00:34:06.880><c> or</c><00:34:06.960><c> multi-processor</c><00:34:07.760><c> machines</c>

00:34:08.470 --> 00:34:08.480 align:start position:0%
multi-core or multi-processor machines
 

00:34:08.480 --> 00:34:10.310 align:start position:0%
multi-core or multi-processor machines
at<00:34:08.560><c> the</c><00:34:08.720><c> time</c><00:34:08.879><c> the</c><00:34:08.960><c> paper</c><00:34:09.200><c> was</c><00:34:09.359><c> written</c><00:34:09.599><c> but</c><00:34:09.839><c> it</c>

00:34:10.310 --> 00:34:10.320 align:start position:0%
at the time the paper was written but it
 

00:34:10.320 --> 00:34:12.230 align:start position:0%
at the time the paper was written but it
um<00:34:11.200><c> they</c><00:34:11.359><c> may</c><00:34:11.599><c> well</c><00:34:11.839><c> have</c>

00:34:12.230 --> 00:34:12.240 align:start position:0%
um they may well have
 

00:34:12.240 --> 00:34:14.470 align:start position:0%
um they may well have
and<00:34:13.119><c> uh</c><00:34:13.520><c> threads</c><00:34:13.839><c> are</c><00:34:13.919><c> of</c><00:34:14.000><c> course</c><00:34:14.159><c> just</c><00:34:14.320><c> what</c>

00:34:14.470 --> 00:34:14.480 align:start position:0%
and uh threads are of course just what
 

00:34:14.480 --> 00:34:16.149 align:start position:0%
and uh threads are of course just what
you<00:34:14.560><c> need</c><00:34:14.800><c> to</c><00:34:14.879><c> be</c><00:34:14.960><c> able</c><00:34:15.119><c> to</c><00:34:15.200><c> harness</c>

00:34:16.149 --> 00:34:16.159 align:start position:0%
you need to be able to harness
 

00:34:16.159 --> 00:34:18.389 align:start position:0%
you need to be able to harness
multiple<00:34:16.560><c> cores</c><00:34:17.440><c> you</c><00:34:17.599><c> know</c><00:34:17.760><c> executing</c><00:34:18.240><c> in</c><00:34:18.320><c> the</c>

00:34:18.389 --> 00:34:18.399 align:start position:0%
multiple cores you know executing in the
 

00:34:18.399 --> 00:34:19.270 align:start position:0%
multiple cores you know executing in the
same<00:34:18.560><c> program</c>

00:34:19.270 --> 00:34:19.280 align:start position:0%
same program
 

00:34:19.280 --> 00:34:20.710 align:start position:0%
same program
so<00:34:19.440><c> whether</c><00:34:19.839><c> there</c><00:34:20.000><c> were</c><00:34:20.079><c> threads</c><00:34:20.399><c> supported</c>

00:34:20.710 --> 00:34:20.720 align:start position:0%
so whether there were threads supported
 

00:34:20.720 --> 00:34:22.389 align:start position:0%
so whether there were threads supported
by<00:34:20.879><c> it</c><00:34:21.119><c> by</c>

00:34:22.389 --> 00:34:22.399 align:start position:0%
by it by
 

00:34:22.399 --> 00:34:26.629 align:start position:0%
by it by
the<00:34:22.480><c> l4</c><00:34:22.960><c> kernel</c>

00:34:26.629 --> 00:34:26.639 align:start position:0%
 
 

00:34:26.639 --> 00:34:29.669 align:start position:0%
 
so<00:34:27.440><c> so</c><00:34:27.679><c> l</c><00:34:27.839><c> source</c><00:34:28.240><c> l4</c><00:34:28.639><c> supported</c><00:34:29.200><c> tasks</c>

00:34:29.669 --> 00:34:29.679 align:start position:0%
so so l source l4 supported tasks
 

00:34:29.679 --> 00:34:32.790 align:start position:0%
so so l source l4 supported tasks
it<00:34:30.079><c> knew</c><00:34:30.240><c> about</c><00:34:30.560><c> tasks</c><00:34:31.440><c> i</c><00:34:31.520><c> knew</c><00:34:31.679><c> about</c><00:34:32.000><c> threads</c>

00:34:32.790 --> 00:34:32.800 align:start position:0%
it knew about tasks i knew about threads
 

00:34:32.800 --> 00:34:36.149 align:start position:0%
it knew about tasks i knew about threads
and<00:34:33.359><c> it</c><00:34:33.520><c> also</c><00:34:33.919><c> knew</c><00:34:34.159><c> about</c><00:34:35.359><c> address</c><00:34:35.679><c> spaces</c><00:34:36.079><c> in</c>

00:34:36.149 --> 00:34:36.159 align:start position:0%
and it also knew about address spaces in
 

00:34:36.159 --> 00:34:37.750 align:start position:0%
and it also knew about address spaces in
the<00:34:36.240><c> sense</c><00:34:36.560><c> that</c><00:34:36.720><c> you</c><00:34:36.879><c> could</c>

00:34:37.750 --> 00:34:37.760 align:start position:0%
the sense that you could
 

00:34:37.760 --> 00:34:39.909 align:start position:0%
the sense that you could
you<00:34:37.919><c> could</c><00:34:38.159><c> ask</c><00:34:38.399><c> tell</c><00:34:38.720><c> l4</c><00:34:39.119><c> look</c><00:34:39.280><c> here's</c><00:34:39.760><c> you</c>

00:34:39.909 --> 00:34:39.919 align:start position:0%
you could ask tell l4 look here's you
 

00:34:39.919 --> 00:34:41.270 align:start position:0%
you could ask tell l4 look here's you
know<00:34:40.000><c> how</c><00:34:40.159><c> i</c><00:34:40.240><c> want</c><00:34:40.480><c> pages</c><00:34:40.800><c> mapped</c><00:34:41.040><c> in</c><00:34:41.119><c> my</c>

00:34:41.270 --> 00:34:41.280 align:start position:0%
know how i want pages mapped in my
 

00:34:41.280 --> 00:34:43.109 align:start position:0%
know how i want pages mapped in my
address<00:34:41.520><c> space</c>

00:34:43.109 --> 00:34:43.119 align:start position:0%
address space
 

00:34:43.119 --> 00:34:46.230 align:start position:0%
address space
um<00:34:43.599><c> and</c><00:34:44.079><c> the</c><00:34:44.320><c> other</c><00:34:44.560><c> main</c><00:34:44.879><c> thing</c><00:34:45.440><c> that</c><00:34:45.679><c> l4</c><00:34:46.079><c> knew</c>

00:34:46.230 --> 00:34:46.240 align:start position:0%
um and the other main thing that l4 knew
 

00:34:46.240 --> 00:34:47.430 align:start position:0%
um and the other main thing that l4 knew
about

00:34:47.430 --> 00:34:47.440 align:start position:0%
about
 

00:34:47.440 --> 00:34:50.470 align:start position:0%
about
uh<00:34:48.639><c> process</c><00:34:49.200><c> communication</c><00:34:50.000><c> so</c>

00:34:50.470 --> 00:34:50.480 align:start position:0%
uh process communication so
 

00:34:50.480 --> 00:34:53.430 align:start position:0%
uh process communication so
that<00:34:50.639><c> was</c><00:34:51.440><c> every</c><00:34:51.679><c> thread</c><00:34:51.919><c> had</c><00:34:52.159><c> an</c><00:34:52.320><c> identifier</c>

00:34:53.430 --> 00:34:53.440 align:start position:0%
that was every thread had an identifier
 

00:34:53.440 --> 00:34:54.869 align:start position:0%
that was every thread had an identifier
and<00:34:53.599><c> one</c><00:34:53.760><c> thread</c><00:34:54.000><c> could</c><00:34:54.159><c> say</c><00:34:54.320><c> look</c><00:34:54.480><c> i</c><00:34:54.639><c> want</c><00:34:54.720><c> to</c>

00:34:54.869 --> 00:34:54.879 align:start position:0%
and one thread could say look i want to
 

00:34:54.879 --> 00:34:56.389 align:start position:0%
and one thread could say look i want to
send<00:34:55.200><c> a</c><00:34:55.359><c> message</c>

00:34:56.389 --> 00:34:56.399 align:start position:0%
send a message
 

00:34:56.399 --> 00:34:59.589 align:start position:0%
send a message
just<00:34:56.560><c> some</c><00:34:56.720><c> bytes</c><00:34:58.160><c> to</c><00:34:58.480><c> another</c><00:34:58.800><c> thread</c><00:34:59.119><c> and</c>

00:34:59.589 --> 00:34:59.599 align:start position:0%
just some bytes to another thread and
 

00:34:59.599 --> 00:35:03.430 align:start position:0%
just some bytes to another thread and
here's<00:34:59.920><c> this</c><00:35:00.160><c> identifier</c><00:35:00.839><c> please</c>

00:35:03.430 --> 00:35:03.440 align:start position:0%
here's this identifier please
 

00:35:03.440 --> 00:35:05.030 align:start position:0%
here's this identifier please
please<00:35:03.680><c> send</c><00:35:03.839><c> a</c><00:35:03.920><c> message</c><00:35:04.320><c> to</c><00:35:04.480><c> that</c><00:35:04.800><c> other</c>

00:35:05.030 --> 00:35:05.040 align:start position:0%
please send a message to that other
 

00:35:05.040 --> 00:35:07.750 align:start position:0%
please send a message to that other
thread

00:35:07.750 --> 00:35:07.760 align:start position:0%
 
 

00:35:07.760 --> 00:35:12.230 align:start position:0%
 
so<00:35:07.920><c> these</c><00:35:08.160><c> are</c><00:35:08.240><c> really</c><00:35:08.480><c> the</c><00:35:08.560><c> only</c>

00:35:12.230 --> 00:35:12.240 align:start position:0%
 
 

00:35:12.240 --> 00:35:15.430 align:start position:0%
 
task<00:35:12.560><c> threads</c><00:35:13.280><c> address</c><00:35:13.599><c> spaces</c><00:35:14.640><c> and</c><00:35:14.800><c> ipc</c><00:35:15.280><c> were</c>

00:35:15.430 --> 00:35:15.440 align:start position:0%
task threads address spaces and ipc were
 

00:35:15.440 --> 00:35:16.950 align:start position:0%
task threads address spaces and ipc were
really<00:35:15.599><c> the</c><00:35:15.680><c> only</c><00:35:15.920><c> abstractions</c>

00:35:16.950 --> 00:35:16.960 align:start position:0%
really the only abstractions
 

00:35:16.960 --> 00:35:20.470 align:start position:0%
really the only abstractions
the<00:35:17.119><c> system</c><00:35:17.520><c> calls</c><00:35:19.839><c> i</c><00:35:20.000><c> don't</c><00:35:20.160><c> know</c><00:35:20.240><c> if</c><00:35:20.320><c> i</c><00:35:20.400><c> can</c>

00:35:20.470 --> 00:35:20.480 align:start position:0%
the system calls i don't know if i can
 

00:35:20.480 --> 00:35:26.069 align:start position:0%
the system calls i don't know if i can
be<00:35:20.560><c> able</c><00:35:20.720><c> to</c><00:35:20.800><c> list</c><00:35:20.960><c> them</c><00:35:21.200><c> all</c><00:35:21.359><c> but</c>

00:35:26.069 --> 00:35:26.079 align:start position:0%
 
 

00:35:26.079 --> 00:35:30.230 align:start position:0%
 
the<00:35:26.240><c> system</c><00:35:26.560><c> calls</c><00:35:26.960><c> were</c><00:35:27.839><c> there</c><00:35:28.079><c> was</c><00:35:28.240><c> a</c><00:35:28.839><c> thread</c>

00:35:30.230 --> 00:35:30.240 align:start position:0%
the system calls were there was a thread
 

00:35:30.240 --> 00:35:34.870 align:start position:0%
the system calls were there was a thread
create<00:35:32.560><c> system</c><00:35:32.960><c> call</c><00:35:33.200><c> which</c><00:35:33.440><c> also</c>

00:35:34.870 --> 00:35:34.880 align:start position:0%
create system call which also
 

00:35:34.880 --> 00:35:37.910 align:start position:0%
create system call which also
you<00:35:35.040><c> gave</c><00:35:35.280><c> it</c><00:35:35.440><c> a</c><00:35:35.839><c> address</c><00:35:36.240><c> space</c><00:35:36.480><c> id</c><00:35:36.800><c> and</c><00:35:36.960><c> a</c><00:35:37.599><c> ask</c>

00:35:37.910 --> 00:35:37.920 align:start position:0%
you gave it a address space id and a ask
 

00:35:37.920 --> 00:35:39.510 align:start position:0%
you gave it a address space id and a ask
to<00:35:38.000><c> create</c><00:35:38.160><c> a</c><00:35:38.240><c> new</c><00:35:38.400><c> thread</c><00:35:38.640><c> and</c>

00:35:39.510 --> 00:35:39.520 align:start position:0%
to create a new thread and
 

00:35:39.520 --> 00:35:40.950 align:start position:0%
to create a new thread and
if<00:35:39.680><c> the</c><00:35:39.839><c> address</c><00:35:40.160><c> space</c><00:35:40.400><c> or</c><00:35:40.480><c> task</c><00:35:40.720><c> didn't</c>

00:35:40.950 --> 00:35:40.960 align:start position:0%
if the address space or task didn't
 

00:35:40.960 --> 00:35:42.710 align:start position:0%
if the address space or task didn't
already<00:35:41.200><c> exist</c><00:35:41.520><c> it</c><00:35:41.599><c> would</c><00:35:41.839><c> create</c><00:35:42.079><c> a</c><00:35:42.160><c> new</c><00:35:42.400><c> task</c>

00:35:42.710 --> 00:35:42.720 align:start position:0%
already exist it would create a new task
 

00:35:42.720 --> 00:35:43.190 align:start position:0%
already exist it would create a new task
for<00:35:42.880><c> you</c>

00:35:43.190 --> 00:35:43.200 align:start position:0%
for you
 

00:35:43.200 --> 00:35:45.190 align:start position:0%
for you
so<00:35:43.440><c> to</c><00:35:43.520><c> sort</c><00:35:43.680><c> of</c><00:35:43.760><c> combine</c><00:35:44.320><c> thread</c><00:35:44.640><c> and</c><00:35:44.880><c> task</c>

00:35:45.190 --> 00:35:45.200 align:start position:0%
so to sort of combine thread and task
 

00:35:45.200 --> 00:35:48.150 align:start position:0%
so to sort of combine thread and task
creation

00:35:48.150 --> 00:35:48.160 align:start position:0%
 
 

00:35:48.160 --> 00:35:53.190 align:start position:0%
 
there's<00:35:50.800><c> send</c><00:35:51.040><c> and</c><00:35:51.200><c> receive</c>

00:35:53.190 --> 00:35:53.200 align:start position:0%
there's send and receive
 

00:35:53.200 --> 00:35:56.150 align:start position:0%
there's send and receive
various<00:35:53.599><c> flavors</c><00:35:54.000><c> of</c><00:35:54.160><c> send</c><00:35:54.400><c> and</c><00:35:54.560><c> receive</c><00:35:55.599><c> ipc</c>

00:35:56.150 --> 00:35:56.160 align:start position:0%
various flavors of send and receive ipc
 

00:35:56.160 --> 00:35:59.750 align:start position:0%
various flavors of send and receive ipc
system<00:35:56.839><c> calls</c><00:35:57.920><c> um</c>

00:35:59.750 --> 00:35:59.760 align:start position:0%
system calls um
 

00:35:59.760 --> 00:36:03.349 align:start position:0%
system calls um
there's<00:36:00.000><c> a</c><00:36:00.079><c> way</c><00:36:00.240><c> to</c><00:36:01.200><c> map</c><00:36:01.520><c> pages</c><00:36:02.160><c> into</c><00:36:02.480><c> your</c><00:36:02.960><c> or</c>

00:36:03.349 --> 00:36:03.359 align:start position:0%
there's a way to map pages into your or
 

00:36:03.359 --> 00:36:07.829 align:start position:0%
there's a way to map pages into your or
other<00:36:04.640><c> address</c><00:36:04.960><c> spaces</c><00:36:05.440><c> so</c><00:36:06.079><c> um</c>

00:36:07.829 --> 00:36:07.839 align:start position:0%
other address spaces so um
 

00:36:07.839 --> 00:36:09.910 align:start position:0%
other address spaces so um
you<00:36:08.000><c> could</c><00:36:08.160><c> ask</c><00:36:08.400><c> the</c><00:36:08.640><c> l4</c><00:36:09.119><c> to</c><00:36:09.280><c> change</c><00:36:09.599><c> the</c><00:36:09.760><c> way</c>

00:36:09.910 --> 00:36:09.920 align:start position:0%
you could ask the l4 to change the way
 

00:36:09.920 --> 00:36:11.349 align:start position:0%
you could ask the l4 to change the way
your<00:36:10.079><c> address</c><00:36:10.400><c> space</c><00:36:10.640><c> was</c><00:36:10.800><c> set</c><00:36:11.040><c> up</c><00:36:11.119><c> the</c><00:36:11.200><c> way</c>

00:36:11.349 --> 00:36:11.359 align:start position:0%
your address space was set up the way
 

00:36:11.359 --> 00:36:12.069 align:start position:0%
your address space was set up the way
your

00:36:12.069 --> 00:36:12.079 align:start position:0%
your
 

00:36:12.079 --> 00:36:13.750 align:start position:0%
your
page<00:36:12.320><c> table</c><00:36:12.560><c> mappings</c><00:36:12.960><c> were</c><00:36:13.119><c> set</c><00:36:13.280><c> up</c><00:36:13.520><c> but</c><00:36:13.680><c> you</c>

00:36:13.750 --> 00:36:13.760 align:start position:0%
page table mappings were set up but you
 

00:36:13.760 --> 00:36:16.790 align:start position:0%
page table mappings were set up but you
could<00:36:13.920><c> also</c><00:36:14.320><c> ask</c><00:36:14.880><c> lford</c><00:36:15.520><c> if</c><00:36:15.680><c> you</c><00:36:15.839><c> had</c>

00:36:16.790 --> 00:36:16.800 align:start position:0%
could also ask lford if you had
 

00:36:16.800 --> 00:36:18.069 align:start position:0%
could also ask lford if you had
the<00:36:16.880><c> right</c><00:36:17.040><c> permissions</c><00:36:17.520><c> to</c><00:36:17.599><c> go</c><00:36:17.760><c> and</c><00:36:17.839><c> change</c>

00:36:18.069 --> 00:36:18.079 align:start position:0%
the right permissions to go and change
 

00:36:18.079 --> 00:36:20.069 align:start position:0%
the right permissions to go and change
the<00:36:18.240><c> way</c><00:36:18.400><c> another</c><00:36:19.040><c> tasks</c>

00:36:20.069 --> 00:36:20.079 align:start position:0%
the way another tasks
 

00:36:20.079 --> 00:36:23.430 align:start position:0%
the way another tasks
address<00:36:20.400><c> space</c><00:36:20.720><c> was</c><00:36:20.880><c> set</c><00:36:21.119><c> up</c><00:36:22.400><c> so</c>

00:36:23.430 --> 00:36:23.440 align:start position:0%
address space was set up so
 

00:36:23.440 --> 00:36:27.430 align:start position:0%
address space was set up so
and<00:36:25.359><c> um</c>

00:36:27.430 --> 00:36:27.440 align:start position:0%
and um
 

00:36:27.440 --> 00:36:28.870 align:start position:0%
and um
this<00:36:27.599><c> was</c><00:36:27.760><c> actually</c><00:36:28.000><c> done</c><00:36:28.160><c> through</c><00:36:28.320><c> the</c><00:36:28.480><c> ipc</c>

00:36:28.870 --> 00:36:28.880 align:start position:0%
this was actually done through the ipc
 

00:36:28.880 --> 00:36:30.710 align:start position:0%
this was actually done through the ipc
with<00:36:29.040><c> spent</c><00:36:29.440><c> through</c><00:36:29.599><c> the</c><00:36:29.760><c> ipc</c><00:36:30.240><c> interface</c><00:36:30.640><c> you</c>

00:36:30.710 --> 00:36:30.720 align:start position:0%
with spent through the ipc interface you
 

00:36:30.720 --> 00:36:33.109 align:start position:0%
with spent through the ipc interface you
would<00:36:30.880><c> send</c><00:36:31.119><c> a</c><00:36:31.200><c> kind</c><00:36:31.359><c> of</c><00:36:31.520><c> special</c><00:36:31.839><c> ipc</c><00:36:32.400><c> message</c>

00:36:33.109 --> 00:36:33.119 align:start position:0%
would send a kind of special ipc message
 

00:36:33.119 --> 00:36:35.349 align:start position:0%
would send a kind of special ipc message
that<00:36:33.280><c> the</c><00:36:33.440><c> kernel</c><00:36:33.680><c> knew</c><00:36:33.920><c> about</c><00:36:34.720><c> to</c><00:36:34.880><c> the</c><00:36:35.040><c> target</c>

00:36:35.349 --> 00:36:35.359 align:start position:0%
that the kernel knew about to the target
 

00:36:35.359 --> 00:36:37.670 align:start position:0%
that the kernel knew about to the target
thread<00:36:35.680><c> and</c><00:36:35.760><c> the</c><00:36:36.000><c> kernel</c><00:36:36.320><c> would</c>

00:36:37.670 --> 00:36:37.680 align:start position:0%
thread and the kernel would
 

00:36:37.680 --> 00:36:41.349 align:start position:0%
thread and the kernel would
modify<00:36:38.079><c> the</c><00:36:38.240><c> target</c><00:36:38.480><c> threads</c><00:36:38.800><c> address</c><00:36:39.040><c> space</c>

00:36:41.349 --> 00:36:41.359 align:start position:0%
modify the target threads address space
 

00:36:41.359 --> 00:36:42.710 align:start position:0%
modify the target threads address space
and<00:36:41.520><c> this</c><00:36:41.680><c> is</c><00:36:41.839><c> if</c><00:36:42.000><c> you</c><00:36:42.079><c> were</c><00:36:42.160><c> creating</c><00:36:42.480><c> a</c><00:36:42.560><c> new</c>

00:36:42.710 --> 00:36:42.720 align:start position:0%
and this is if you were creating a new
 

00:36:42.720 --> 00:36:44.069 align:start position:0%
and this is if you were creating a new
thread<00:36:42.960><c> this</c><00:36:43.119><c> is</c><00:36:43.280><c> actually</c><00:36:43.520><c> new</c><00:36:43.680><c> threads</c><00:36:44.000><c> are</c>

00:36:44.069 --> 00:36:44.079 align:start position:0%
thread this is actually new threads are
 

00:36:44.079 --> 00:36:46.630 align:start position:0%
thread this is actually new threads are
created<00:36:44.400><c> with</c><00:36:44.560><c> no</c><00:36:44.720><c> memory</c><00:36:45.040><c> at</c><00:36:45.200><c> all</c>

00:36:46.630 --> 00:36:46.640 align:start position:0%
created with no memory at all
 

00:36:46.640 --> 00:36:47.750 align:start position:0%
created with no memory at all
so<00:36:46.800><c> if</c><00:36:46.880><c> you</c><00:36:46.960><c> want</c><00:36:47.040><c> to</c><00:36:47.119><c> create</c><00:36:47.280><c> a</c><00:36:47.359><c> thread</c><00:36:47.680><c> you</c>

00:36:47.750 --> 00:36:47.760 align:start position:0%
so if you want to create a thread you
 

00:36:47.760 --> 00:36:49.670 align:start position:0%
so if you want to create a thread you
first<00:36:48.160><c> call</c><00:36:48.400><c> the</c><00:36:48.560><c> thread</c><00:36:48.880><c> create</c><00:36:49.200><c> system</c><00:36:49.440><c> call</c>

00:36:49.670 --> 00:36:49.680 align:start position:0%
first call the thread create system call
 

00:36:49.680 --> 00:36:51.829 align:start position:0%
first call the thread create system call
to<00:36:49.839><c> create</c><00:36:50.079><c> the</c><00:36:50.160><c> new</c><00:36:50.400><c> thread</c><00:36:50.720><c> and</c><00:36:50.880><c> a</c><00:36:51.359><c> task</c><00:36:51.760><c> an</c>

00:36:51.829 --> 00:36:51.839 align:start position:0%
to create the new thread and a task an
 

00:36:51.839 --> 00:36:52.950 align:start position:0%
to create the new thread and a task an
address<00:36:52.240><c> space</c>

00:36:52.950 --> 00:36:52.960 align:start position:0%
address space
 

00:36:52.960 --> 00:36:55.190 align:start position:0%
address space
and<00:36:53.119><c> then</c><00:36:53.280><c> you</c><00:36:53.440><c> send</c><00:36:53.760><c> it</c><00:36:54.720><c> you</c><00:36:54.800><c> make</c><00:36:54.960><c> one</c><00:36:55.119><c> of</c>

00:36:55.190 --> 00:36:55.200 align:start position:0%
and then you send it you make one of
 

00:36:55.200 --> 00:36:57.109 align:start position:0%
and then you send it you make one of
these<00:36:55.280><c> magic</c><00:36:55.599><c> ipc's</c><00:36:56.160><c> to</c><00:36:56.320><c> send</c><00:36:56.560><c> it</c><00:36:56.800><c> some</c><00:36:56.960><c> of</c>

00:36:57.109 --> 00:36:57.119 align:start position:0%
these magic ipc's to send it some of
 

00:36:57.119 --> 00:36:58.710 align:start position:0%
these magic ipc's to send it some of
your<00:36:57.359><c> own</c><00:36:57.680><c> memory</c>

00:36:58.710 --> 00:36:58.720 align:start position:0%
your own memory
 

00:36:58.720 --> 00:37:00.150 align:start position:0%
your own memory
to<00:36:58.880><c> map</c><00:36:59.119><c> some</c><00:36:59.280><c> of</c><00:36:59.359><c> your</c><00:36:59.520><c> own</c><00:36:59.680><c> memory</c><00:37:00.000><c> that</c>

00:37:00.150 --> 00:37:00.160 align:start position:0%
to map some of your own memory that
 

00:37:00.160 --> 00:37:01.750 align:start position:0%
to map some of your own memory that
you've<00:37:00.400><c> prepared</c><00:37:00.880><c> with</c><00:37:01.119><c> instructions</c><00:37:01.599><c> or</c>

00:37:01.750 --> 00:37:01.760 align:start position:0%
you've prepared with instructions or
 

00:37:01.760 --> 00:37:02.710 align:start position:0%
you've prepared with instructions or
data

00:37:02.710 --> 00:37:02.720 align:start position:0%
data
 

00:37:02.720 --> 00:37:05.829 align:start position:0%
data
to<00:37:02.880><c> map</c><00:37:03.119><c> that</c><00:37:03.359><c> memory</c><00:37:03.680><c> into</c><00:37:03.920><c> the</c><00:37:04.000><c> new</c><00:37:04.480><c> uh</c><00:37:05.520><c> into</c>

00:37:05.829 --> 00:37:05.839 align:start position:0%
to map that memory into the new uh into
 

00:37:05.839 --> 00:37:06.230 align:start position:0%
to map that memory into the new uh into
the

00:37:06.230 --> 00:37:06.240 align:start position:0%
the
 

00:37:06.240 --> 00:37:08.470 align:start position:0%
the
new<00:37:06.480><c> task</c><00:37:06.720><c> address</c><00:37:07.040><c> space</c><00:37:07.839><c> and</c><00:37:07.920><c> then</c><00:37:08.079><c> you</c><00:37:08.240><c> send</c>

00:37:08.470 --> 00:37:08.480 align:start position:0%
new task address space and then you send
 

00:37:08.480 --> 00:37:10.230 align:start position:0%
new task address space and then you send
a<00:37:08.560><c> special</c><00:37:08.880><c> start</c><00:37:09.280><c> ipc</c>

00:37:10.230 --> 00:37:10.240 align:start position:0%
a special start ipc
 

00:37:10.240 --> 00:37:12.150 align:start position:0%
a special start ipc
to<00:37:10.400><c> this</c><00:37:10.560><c> new</c><00:37:10.800><c> task</c><00:37:11.119><c> with</c><00:37:11.359><c> the</c><00:37:11.760><c> program</c>

00:37:12.150 --> 00:37:12.160 align:start position:0%
to this new task with the program
 

00:37:12.160 --> 00:37:13.510 align:start position:0%
to this new task with the program
counter<00:37:12.400><c> and</c><00:37:12.560><c> the</c><00:37:12.640><c> stack</c><00:37:12.960><c> pointer</c><00:37:13.280><c> you</c><00:37:13.359><c> want</c>

00:37:13.510 --> 00:37:13.520 align:start position:0%
counter and the stack pointer you want
 

00:37:13.520 --> 00:37:15.030 align:start position:0%
counter and the stack pointer you want
it<00:37:13.599><c> to</c><00:37:13.760><c> start</c><00:37:14.000><c> executing</c><00:37:14.480><c> with</c>

00:37:15.030 --> 00:37:15.040 align:start position:0%
it to start executing with
 

00:37:15.040 --> 00:37:16.550 align:start position:0%
it to start executing with
it'll<00:37:15.280><c> start</c><00:37:15.520><c> executing</c><00:37:16.000><c> and</c><00:37:16.079><c> that</c><00:37:16.240><c> memory</c>

00:37:16.550 --> 00:37:16.560 align:start position:0%
it'll start executing and that memory
 

00:37:16.560 --> 00:37:18.470 align:start position:0%
it'll start executing and that memory
you've<00:37:16.720><c> set</c><00:37:16.960><c> up</c><00:37:17.520><c> at</c><00:37:17.680><c> the</c><00:37:17.839><c> program</c><00:37:18.160><c> calendar</c>

00:37:18.470 --> 00:37:18.480 align:start position:0%
you've set up at the program calendar
 

00:37:18.480 --> 00:37:20.829 align:start position:0%
you've set up at the program calendar
that<00:37:18.560><c> you</c><00:37:18.720><c> asked</c><00:37:18.880><c> it</c><00:37:18.960><c> to</c><00:37:19.119><c> start</c><00:37:19.359><c> at</c>

00:37:20.829 --> 00:37:20.839 align:start position:0%
that you asked it to start at
 

00:37:20.839 --> 00:37:23.430 align:start position:0%
that you asked it to start at
um<00:37:21.920><c> there's</c><00:37:22.240><c> a</c><00:37:22.320><c> way</c><00:37:22.720><c> not</c><00:37:22.880><c> through</c><00:37:23.040><c> system</c>

00:37:23.430 --> 00:37:23.440 align:start position:0%
um there's a way not through system
 

00:37:23.440 --> 00:37:24.230 align:start position:0%
um there's a way not through system
calls

00:37:24.230 --> 00:37:24.240 align:start position:0%
calls
 

00:37:24.240 --> 00:37:26.230 align:start position:0%
calls
in<00:37:24.400><c> fact</c><00:37:24.720><c> i</c><00:37:24.800><c> don't</c><00:37:24.960><c> know</c><00:37:25.040><c> how</c><00:37:25.200><c> it</c><00:37:25.280><c> worked</c><00:37:25.599><c> but</c>

00:37:26.230 --> 00:37:26.240 align:start position:0%
in fact i don't know how it worked but
 

00:37:26.240 --> 00:37:27.349 align:start position:0%
in fact i don't know how it worked but
um

00:37:27.349 --> 00:37:27.359 align:start position:0%
um
 

00:37:27.359 --> 00:37:29.829 align:start position:0%
um
privileged<00:37:27.839><c> tasks</c><00:37:28.560><c> could</c><00:37:28.880><c> map</c><00:37:29.359><c> device</c>

00:37:29.829 --> 00:37:29.839 align:start position:0%
privileged tasks could map device
 

00:37:29.839 --> 00:37:31.670 align:start position:0%
privileged tasks could map device
hardware

00:37:31.670 --> 00:37:31.680 align:start position:0%
hardware
 

00:37:31.680 --> 00:37:35.109 align:start position:0%
hardware
um<00:37:32.880><c> you</c><00:37:32.960><c> know</c><00:37:33.119><c> device</c><00:37:34.079><c> control</c><00:37:34.480><c> registers</c>

00:37:35.109 --> 00:37:35.119 align:start position:0%
um you know device control registers
 

00:37:35.119 --> 00:37:35.990 align:start position:0%
um you know device control registers
into<00:37:35.359><c> their</c><00:37:35.520><c> own</c><00:37:35.680><c> address</c>

00:37:35.990 --> 00:37:36.000 align:start position:0%
into their own address
 

00:37:36.000 --> 00:37:39.910 align:start position:0%
into their own address
spaces

00:37:39.910 --> 00:37:39.920 align:start position:0%
 
 

00:37:39.920 --> 00:37:41.510 align:start position:0%
 
so<00:37:40.240><c> l4</c><00:37:40.640><c> didn't</c><00:37:40.800><c> really</c><00:37:40.960><c> know</c><00:37:41.119><c> much</c><00:37:41.280><c> about</c>

00:37:41.510 --> 00:37:41.520 align:start position:0%
so l4 didn't really know much about
 

00:37:41.520 --> 00:37:43.510 align:start position:0%
so l4 didn't really know much about
devices<00:37:41.920><c> like</c><00:37:42.160><c> disks</c><00:37:42.560><c> or</c><00:37:42.800><c> network</c><00:37:43.119><c> interface</c>

00:37:43.510 --> 00:37:43.520 align:start position:0%
devices like disks or network interface
 

00:37:43.520 --> 00:37:44.790 align:start position:0%
devices like disks or network interface
cards<00:37:44.000><c> but</c>

00:37:44.790 --> 00:37:44.800 align:start position:0%
cards but
 

00:37:44.800 --> 00:37:48.829 align:start position:0%
cards but
user<00:37:45.200><c> level</c><00:37:46.880><c> software</c><00:37:47.440><c> could</c><00:37:47.599><c> get</c><00:37:47.839><c> directly</c>

00:37:48.829 --> 00:37:48.839 align:start position:0%
user level software could get directly
 

00:37:48.839 --> 00:37:51.030 align:start position:0%
user level software could get directly
at

00:37:51.030 --> 00:37:51.040 align:start position:0%
at
 

00:37:51.040 --> 00:37:52.150 align:start position:0%
at
you<00:37:51.280><c> use</c><00:37:51.440><c> a</c><00:37:51.440><c> level</c><00:37:51.680><c> software</c><00:37:52.000><c> that</c>

00:37:52.150 --> 00:37:52.160 align:start position:0%
you use a level software that
 

00:37:52.160 --> 00:37:53.670 align:start position:0%
you use a level software that
implemented<00:37:52.640><c> device</c><00:37:52.960><c> drivers</c><00:37:53.280><c> that</c><00:37:53.440><c> user</c>

00:37:53.670 --> 00:37:53.680 align:start position:0%
implemented device drivers that user
 

00:37:53.680 --> 00:37:55.270 align:start position:0%
implemented device drivers that user
level<00:37:54.000><c> could</c><00:37:54.160><c> get</c><00:37:54.320><c> directly</c><00:37:54.720><c> at</c><00:37:54.880><c> device</c>

00:37:55.270 --> 00:37:55.280 align:start position:0%
level could get directly at device
 

00:37:55.280 --> 00:37:57.430 align:start position:0%
level could get directly at device
hardware

00:37:57.430 --> 00:37:57.440 align:start position:0%
hardware
 

00:37:57.440 --> 00:38:01.670 align:start position:0%
hardware
there<00:37:57.599><c> was</c><00:37:57.760><c> a</c><00:37:57.839><c> way</c><00:37:58.160><c> to</c><00:38:00.079><c> you</c><00:38:00.160><c> could</c><00:38:00.400><c> tell</c><00:38:00.720><c> l4</c>

00:38:01.670 --> 00:38:01.680 align:start position:0%
there was a way to you could tell l4
 

00:38:01.680 --> 00:38:05.750 align:start position:0%
there was a way to you could tell l4
to<00:38:01.839><c> turn</c><00:38:02.160><c> and</c><00:38:02.839><c> interrupt</c><00:38:04.640><c> um</c>

00:38:05.750 --> 00:38:05.760 align:start position:0%
to turn and interrupt um
 

00:38:05.760 --> 00:38:07.670 align:start position:0%
to turn and interrupt um
any<00:38:06.000><c> interrupt</c><00:38:06.400><c> from</c><00:38:06.560><c> any</c><00:38:06.720><c> device</c><00:38:07.280><c> l4</c><00:38:07.520><c> didn't</c>

00:38:07.670 --> 00:38:07.680 align:start position:0%
any interrupt from any device l4 didn't
 

00:38:07.680 --> 00:38:10.310 align:start position:0%
any interrupt from any device l4 didn't
really<00:38:08.400><c> know</c><00:38:08.560><c> which</c><00:38:08.800><c> device</c><00:38:09.200><c> just</c><00:38:09.440><c> turned</c>

00:38:10.310 --> 00:38:10.320 align:start position:0%
really know which device just turned
 

00:38:10.320 --> 00:38:13.990 align:start position:0%
really know which device just turned
a<00:38:10.400><c> given</c><00:38:10.720><c> interrupt</c><00:38:11.280><c> into</c><00:38:12.000><c> an</c><00:38:12.160><c> ipc</c><00:38:12.800><c> message</c>

00:38:13.990 --> 00:38:14.000 align:start position:0%
a given interrupt into an ipc message
 

00:38:14.000 --> 00:38:18.630 align:start position:0%
a given interrupt into an ipc message
so<00:38:14.160><c> a</c><00:38:14.320><c> device</c><00:38:14.720><c> driver</c><00:38:16.000><c> tasks</c><00:38:16.839><c> could</c>

00:38:18.630 --> 00:38:18.640 align:start position:0%
so a device driver tasks could
 

00:38:18.640 --> 00:38:19.750 align:start position:0%
so a device driver tasks could
not<00:38:18.800><c> just</c><00:38:18.960><c> read</c><00:38:19.119><c> and</c><00:38:19.200><c> write</c><00:38:19.440><c> the</c><00:38:19.520><c> device</c>

00:38:19.750 --> 00:38:19.760 align:start position:0%
not just read and write the device
 

00:38:19.760 --> 00:38:21.589 align:start position:0%
not just read and write the device
harder<00:38:20.000><c> but</c><00:38:20.160><c> also</c><00:38:20.400><c> tell</c><00:38:20.720><c> l4</c><00:38:21.119><c> well</c><00:38:21.280><c> anytime</c>

00:38:21.589 --> 00:38:21.599 align:start position:0%
harder but also tell l4 well anytime
 

00:38:21.599 --> 00:38:22.710 align:start position:0%
harder but also tell l4 well anytime
that<00:38:21.839><c> device</c><00:38:22.160><c> interrupts</c>

00:38:22.710 --> 00:38:22.720 align:start position:0%
that device interrupts
 

00:38:22.720 --> 00:38:25.750 align:start position:0%
that device interrupts
please<00:38:23.040><c> send</c><00:38:23.200><c> me</c><00:38:23.359><c> an</c><00:38:23.520><c> ipc</c><00:38:24.000><c> message</c><00:38:25.200><c> to</c><00:38:25.359><c> notify</c>

00:38:25.750 --> 00:38:25.760 align:start position:0%
please send me an ipc message to notify
 

00:38:25.760 --> 00:38:28.630 align:start position:0%
please send me an ipc message to notify
me<00:38:25.920><c> at</c><00:38:26.000><c> the</c><00:38:26.160><c> interrupt</c>

00:38:28.630 --> 00:38:28.640 align:start position:0%
 
 

00:38:28.640 --> 00:38:31.670 align:start position:0%
 
and<00:38:28.960><c> finally</c><00:38:29.920><c> one</c><00:38:30.400><c> task</c><00:38:30.800><c> could</c><00:38:31.040><c> tell</c><00:38:31.520><c> the</c>

00:38:31.670 --> 00:38:31.680 align:start position:0%
and finally one task could tell the
 

00:38:31.680 --> 00:38:32.390 align:start position:0%
and finally one task could tell the
kernel

00:38:32.390 --> 00:38:32.400 align:start position:0%
kernel
 

00:38:32.400 --> 00:38:36.310 align:start position:0%
kernel
to<00:38:34.000><c> give</c><00:38:34.320><c> it</c><00:38:34.800><c> notifications</c><00:38:35.440><c> of</c><00:38:35.599><c> another</c><00:38:35.920><c> task</c>

00:38:36.310 --> 00:38:36.320 align:start position:0%
to give it notifications of another task
 

00:38:36.320 --> 00:38:38.470 align:start position:0%
to give it notifications of another task
page<00:38:36.720><c> faults</c>

00:38:38.470 --> 00:38:38.480 align:start position:0%
page faults
 

00:38:38.480 --> 00:38:42.150 align:start position:0%
page faults
so<00:38:38.800><c> if</c><00:38:38.960><c> this</c><00:38:39.359><c> task</c><00:38:39.599><c> page</c><00:38:39.839><c> faults</c><00:38:41.200><c> l4</c><00:38:41.760><c> would</c>

00:38:42.150 --> 00:38:42.160 align:start position:0%
so if this task page faults l4 would
 

00:38:42.160 --> 00:38:45.670 align:start position:0%
so if this task page faults l4 would
turn<00:38:42.400><c> that</c><00:38:42.720><c> into</c><00:38:43.200><c> a</c><00:38:43.520><c> ipc</c><00:38:44.000><c> message</c>

00:38:45.670 --> 00:38:45.680 align:start position:0%
turn that into a ipc message
 

00:38:45.680 --> 00:38:48.310 align:start position:0%
turn that into a ipc message
and<00:38:46.079><c> send</c><00:38:46.400><c> it</c><00:38:46.480><c> to</c><00:38:46.640><c> another</c><00:38:46.960><c> designated</c><00:38:47.760><c> pager</c>

00:38:48.310 --> 00:38:48.320 align:start position:0%
and send it to another designated pager
 

00:38:48.320 --> 00:38:49.510 align:start position:0%
and send it to another designated pager
task

00:38:49.510 --> 00:38:49.520 align:start position:0%
task
 

00:38:49.520 --> 00:38:51.349 align:start position:0%
task
uh<00:38:49.920><c> send</c><00:38:50.160><c> the</c><00:38:50.240><c> notification</c><00:38:50.800><c> the</c><00:38:50.880><c> page</c><00:38:51.119><c> fault</c>

00:38:51.349 --> 00:38:51.359 align:start position:0%
uh send the notification the page fault
 

00:38:51.359 --> 00:38:53.990 align:start position:0%
uh send the notification the page fault
to<00:38:51.520><c> a</c><00:38:51.599><c> designated</c><00:38:52.160><c> pager</c><00:38:52.560><c> task</c><00:38:52.880><c> so</c><00:38:53.040><c> every</c><00:38:53.280><c> task</c>

00:38:53.990 --> 00:38:54.000 align:start position:0%
to a designated pager task so every task
 

00:38:54.000 --> 00:38:55.990 align:start position:0%
to a designated pager task so every task
had<00:38:54.160><c> an</c><00:38:54.320><c> associated</c><00:38:55.040><c> pager</c><00:38:55.440><c> task</c><00:38:55.760><c> that</c>

00:38:55.990 --> 00:38:56.000 align:start position:0%
had an associated pager task that
 

00:38:56.000 --> 00:38:57.349 align:start position:0%
had an associated pager task that
handled<00:38:56.320><c> its</c><00:38:56.480><c> page</c><00:38:56.800><c> faults</c>

00:38:57.349 --> 00:38:57.359 align:start position:0%
handled its page faults
 

00:38:57.359 --> 00:38:59.829 align:start position:0%
handled its page faults
and<00:38:57.520><c> that's</c><00:38:57.760><c> the</c><00:38:57.839><c> way</c><00:38:58.960><c> you</c><00:38:59.040><c> know</c><00:38:59.200><c> you</c><00:38:59.440><c> get</c>

00:38:59.829 --> 00:38:59.839 align:start position:0%
and that's the way you know you get
 

00:38:59.839 --> 00:39:01.030 align:start position:0%
and that's the way you know you get
hooks<00:39:00.160><c> into</c><00:39:00.400><c> the</c>

00:39:01.030 --> 00:39:01.040 align:start position:0%
hooks into the
 

00:39:01.040 --> 00:39:02.550 align:start position:0%
hooks into the
page<00:39:01.280><c> faults</c><00:39:01.520><c> in</c><00:39:01.599><c> order</c><00:39:01.839><c> to</c><00:39:01.920><c> implement</c><00:39:02.320><c> things</c>

00:39:02.550 --> 00:39:02.560 align:start position:0%
page faults in order to implement things
 

00:39:02.560 --> 00:39:04.870 align:start position:0%
page faults in order to implement things
like<00:39:03.119><c> copy</c><00:39:03.440><c> on</c><00:39:03.599><c> write</c><00:39:03.920><c> fork</c><00:39:04.320><c> or</c><00:39:04.480><c> lazy</c>

00:39:04.870 --> 00:39:04.880 align:start position:0%
like copy on write fork or lazy
 

00:39:04.880 --> 00:39:08.950 align:start position:0%
like copy on write fork or lazy
allocation

00:39:08.950 --> 00:39:08.960 align:start position:0%
 
 

00:39:08.960 --> 00:39:10.470 align:start position:0%
 
and<00:39:09.040><c> that's</c><00:39:09.280><c> it</c><00:39:09.440><c> for</c><00:39:09.520><c> the</c><00:39:09.599><c> kernel</c><00:39:09.920><c> there's</c><00:39:10.160><c> no</c>

00:39:10.470 --> 00:39:10.480 align:start position:0%
and that's it for the kernel there's no
 

00:39:10.480 --> 00:39:12.150 align:start position:0%
and that's it for the kernel there's no
nothing<00:39:10.800><c> else</c><00:39:10.960><c> in</c><00:39:11.119><c> l4</c><00:39:11.440><c> there's</c><00:39:11.599><c> no</c><00:39:11.839><c> file</c>

00:39:12.150 --> 00:39:12.160 align:start position:0%
nothing else in l4 there's no file
 

00:39:12.160 --> 00:39:13.190 align:start position:0%
nothing else in l4 there's no file
system

00:39:13.190 --> 00:39:13.200 align:start position:0%
system
 

00:39:13.200 --> 00:39:15.030 align:start position:0%
system
l4<00:39:13.520><c> didn't</c><00:39:13.760><c> itself</c><00:39:14.160><c> have</c><00:39:14.400><c> support</c><00:39:14.720><c> for</c><00:39:14.880><c> things</c>

00:39:15.030 --> 00:39:15.040 align:start position:0%
l4 didn't itself have support for things
 

00:39:15.040 --> 00:39:16.790 align:start position:0%
l4 didn't itself have support for things
like<00:39:15.280><c> fork</c><00:39:15.599><c> or</c><00:39:15.839><c> exec</c>

00:39:16.790 --> 00:39:16.800 align:start position:0%
like fork or exec
 

00:39:16.800 --> 00:39:19.109 align:start position:0%
like fork or exec
um<00:39:17.760><c> it</c><00:39:17.839><c> didn't</c><00:39:18.079><c> have</c><00:39:18.240><c> any</c><00:39:18.400><c> communication</c>

00:39:19.109 --> 00:39:19.119 align:start position:0%
um it didn't have any communication
 

00:39:19.119 --> 00:39:21.270 align:start position:0%
um it didn't have any communication
beyond<00:39:19.760><c> these</c><00:39:20.000><c> very</c><00:39:20.240><c> simple</c><00:39:20.560><c> ipc</c>

00:39:21.270 --> 00:39:21.280 align:start position:0%
beyond these very simple ipc
 

00:39:21.280 --> 00:39:23.910 align:start position:0%
beyond these very simple ipc
like<00:39:21.680><c> did</c><00:39:21.839><c> not</c><00:39:22.079><c> pipes</c><00:39:22.480><c> enough</c><00:39:23.040><c> device</c><00:39:23.440><c> drivers</c>

00:39:23.910 --> 00:39:23.920 align:start position:0%
like did not pipes enough device drivers
 

00:39:23.920 --> 00:39:26.390 align:start position:0%
like did not pipes enough device drivers
no<00:39:24.079><c> networking</c><00:39:24.480><c> support</c><00:39:24.800><c> nothing</c>

00:39:26.390 --> 00:39:26.400 align:start position:0%
no networking support nothing
 

00:39:26.400 --> 00:39:28.550 align:start position:0%
no networking support nothing
everything<00:39:26.720><c> else</c><00:39:26.960><c> if</c><00:39:27.040><c> you</c><00:39:27.119><c> wanted</c><00:39:27.520><c> it</c><00:39:28.400><c> you</c>

00:39:28.550 --> 00:39:28.560 align:start position:0%
everything else if you wanted it you
 

00:39:28.560 --> 00:39:30.550 align:start position:0%
everything else if you wanted it you
need<00:39:28.720><c> to</c><00:39:28.800><c> supply</c><00:39:29.520><c> as</c>

00:39:30.550 --> 00:39:30.560 align:start position:0%
need to supply as
 

00:39:30.560 --> 00:39:37.030 align:start position:0%
need to supply as
user<00:39:30.800><c> level</c><00:39:31.119><c> services</c>

00:39:37.030 --> 00:39:37.040 align:start position:0%
 
 

00:39:37.040 --> 00:39:41.589 align:start position:0%
 
okay<00:39:37.280><c> so</c><00:39:38.240><c> one</c><00:39:38.480><c> thing</c><00:39:39.839><c> that</c><00:39:40.160><c> uh</c>

00:39:41.589 --> 00:39:41.599 align:start position:0%
okay so one thing that uh
 

00:39:41.599 --> 00:39:45.430 align:start position:0%
okay so one thing that uh
l4<00:39:42.000><c> does</c><00:39:42.160><c> supply</c><00:39:42.800><c> is</c><00:39:43.599><c> switching</c><00:39:44.160><c> among</c>

00:39:45.430 --> 00:39:45.440 align:start position:0%
l4 does supply is switching among
 

00:39:45.440 --> 00:39:48.710 align:start position:0%
l4 does supply is switching among
threads<00:39:46.480><c> l4</c><00:39:46.880><c> would</c><00:39:47.040><c> actually</c><00:39:47.280><c> do</c><00:39:47.520><c> the</c>

00:39:48.710 --> 00:39:48.720 align:start position:0%
threads l4 would actually do the
 

00:39:48.720 --> 00:39:51.750 align:start position:0%
threads l4 would actually do the
scheduling<00:39:49.359><c> and</c><00:39:49.520><c> context</c><00:39:49.920><c> switches</c><00:39:51.280><c> in</c><00:39:51.440><c> order</c>

00:39:51.750 --> 00:39:51.760 align:start position:0%
scheduling and context switches in order
 

00:39:51.760 --> 00:39:53.990 align:start position:0%
scheduling and context switches in order
to<00:39:52.000><c> multiplex</c><00:39:52.560><c> a</c><00:39:52.640><c> single</c><00:39:52.880><c> cpu</c><00:39:53.359><c> among</c><00:39:53.680><c> multiple</c>

00:39:53.990 --> 00:39:54.000 align:start position:0%
to multiplex a single cpu among multiple
 

00:39:54.000 --> 00:39:54.630 align:start position:0%
to multiplex a single cpu among multiple
threads

00:39:54.630 --> 00:39:54.640 align:start position:0%
threads
 

00:39:54.640 --> 00:39:56.390 align:start position:0%
threads
and<00:39:54.720><c> the</c><00:39:54.800><c> way</c><00:39:54.960><c> it</c><00:39:55.119><c> did</c><00:39:55.280><c> it</c><00:39:55.760><c> you</c><00:39:56.000><c> would</c><00:39:56.160><c> find</c>

00:39:56.390 --> 00:39:56.400 align:start position:0%
and the way it did it you would find
 

00:39:56.400 --> 00:39:58.790 align:start position:0%
and the way it did it you would find
completely<00:39:56.880><c> unsurprising</c>

00:39:58.790 --> 00:39:58.800 align:start position:0%
completely unsurprising
 

00:39:58.800 --> 00:40:01.829 align:start position:0%
completely unsurprising
l4<00:39:59.520><c> basically</c><00:39:59.920><c> had</c><00:40:00.160><c> saved</c><00:40:00.480><c> registers</c>

00:40:01.829 --> 00:40:01.839 align:start position:0%
l4 basically had saved registers
 

00:40:01.839 --> 00:40:05.109 align:start position:0%
l4 basically had saved registers
for<00:40:02.079><c> every</c><00:40:02.400><c> task</c><00:40:02.800><c> for</c><00:40:02.960><c> every</c><00:40:03.200><c> thread</c><00:40:04.720><c> when</c><00:40:04.960><c> it</c>

00:40:05.109 --> 00:40:05.119 align:start position:0%
for every task for every thread when it
 

00:40:05.119 --> 00:40:06.790 align:start position:0%
for every task for every thread when it
executed<00:40:05.520><c> a</c><00:40:05.599><c> thread</c><00:40:05.839><c> the</c><00:40:06.000><c> executed</c>

00:40:06.790 --> 00:40:06.800 align:start position:0%
executed a thread the executed
 

00:40:06.800 --> 00:40:08.630 align:start position:0%
executed a thread the executed
thread<00:40:07.119><c> you</c><00:40:07.200><c> know</c><00:40:07.359><c> would</c><00:40:07.920><c> jump</c><00:40:08.160><c> into</c><00:40:08.400><c> user</c>

00:40:08.630 --> 00:40:08.640 align:start position:0%
thread you know would jump into user
 

00:40:08.640 --> 00:40:10.230 align:start position:0%
thread you know would jump into user
space<00:40:08.960><c> and</c><00:40:09.119><c> switch</c><00:40:09.359><c> page</c><00:40:09.680><c> tables</c><00:40:10.000><c> to</c><00:40:10.079><c> that</c>

00:40:10.230 --> 00:40:10.240 align:start position:0%
space and switch page tables to that
 

00:40:10.240 --> 00:40:11.829 align:start position:0%
space and switch page tables to that
thread<00:40:10.640><c> and</c><00:40:10.800><c> that</c><00:40:10.960><c> thread</c><00:40:11.200><c> will</c><00:40:11.440><c> execute</c><00:40:11.760><c> for</c>

00:40:11.829 --> 00:40:11.839 align:start position:0%
thread and that thread will execute for
 

00:40:11.839 --> 00:40:12.950 align:start position:0%
thread and that thread will execute for
a while<00:40:12.000><c> in</c><00:40:12.079><c> user</c><00:40:12.400><c> space</c>

00:40:12.950 --> 00:40:12.960 align:start position:0%
a while in user space
 

00:40:12.960 --> 00:40:14.950 align:start position:0%
a while in user space
then<00:40:13.119><c> maybe</c><00:40:13.359><c> the</c><00:40:13.520><c> timer</c><00:40:14.240><c> interrupt</c><00:40:14.640><c> would</c><00:40:14.720><c> go</c>

00:40:14.950 --> 00:40:14.960 align:start position:0%
then maybe the timer interrupt would go
 

00:40:14.960 --> 00:40:16.309 align:start position:0%
then maybe the timer interrupt would go
off<00:40:15.119><c> and</c><00:40:15.200><c> that</c><00:40:15.359><c> was</c><00:40:15.599><c> actually</c><00:40:15.839><c> a</c><00:40:15.920><c> device</c>

00:40:16.309 --> 00:40:16.319 align:start position:0%
off and that was actually a device
 

00:40:16.319 --> 00:40:18.630 align:start position:0%
off and that was actually a device
l4<00:40:16.720><c> knew</c><00:40:16.880><c> about</c><00:40:17.520><c> the</c><00:40:17.680><c> timer</c><00:40:18.000><c> internet</c><00:40:18.400><c> might</c>

00:40:18.630 --> 00:40:18.640 align:start position:0%
l4 knew about the timer internet might
 

00:40:18.640 --> 00:40:20.150 align:start position:0%
l4 knew about the timer internet might
go<00:40:18.800><c> off</c><00:40:19.040><c> after</c><00:40:19.280><c> a</c><00:40:19.440><c> while</c>

00:40:20.150 --> 00:40:20.160 align:start position:0%
go off after a while
 

00:40:20.160 --> 00:40:22.390 align:start position:0%
go off after a while
interrupt<00:40:20.560><c> into</c><00:40:20.800><c> l4</c><00:40:21.280><c> l4</c><00:40:21.599><c> would</c><00:40:21.839><c> save</c><00:40:22.160><c> this</c>

00:40:22.390 --> 00:40:22.400 align:start position:0%
interrupt into l4 l4 would save this
 

00:40:22.400 --> 00:40:24.630 align:start position:0%
interrupt into l4 l4 would save this
tasks<00:40:22.880><c> user</c><00:40:23.119><c> registers</c><00:40:23.760><c> in</c><00:40:23.920><c> a</c>

00:40:24.630 --> 00:40:24.640 align:start position:0%
tasks user registers in a
 

00:40:24.640 --> 00:40:28.069 align:start position:0%
tasks user registers in a
per<00:40:25.040><c> task</c><00:40:26.240><c> an</c><00:40:26.560><c> array</c><00:40:26.880><c> of</c><00:40:27.119><c> like</c><00:40:27.359><c> tasks</c>

00:40:28.069 --> 00:40:28.079 align:start position:0%
per task an array of like tasks
 

00:40:28.079 --> 00:40:30.309 align:start position:0%
per task an array of like tasks
or<00:40:28.319><c> thread</c><00:40:28.640><c> structures</c><00:40:29.520><c> would</c><00:40:29.760><c> save</c><00:40:30.079><c> this</c>

00:40:30.309 --> 00:40:30.319 align:start position:0%
or thread structures would save this
 

00:40:30.319 --> 00:40:31.750 align:start position:0%
or thread structures would save this
threads

00:40:31.750 --> 00:40:31.760 align:start position:0%
threads
 

00:40:31.760 --> 00:40:34.710 align:start position:0%
threads
registers<00:40:32.400><c> away</c><00:40:33.520><c> pick</c><00:40:33.680><c> a</c><00:40:33.760><c> new</c><00:40:34.000><c> task</c><00:40:34.240><c> to</c><00:40:34.400><c> run</c><00:40:34.640><c> in</c>

00:40:34.710 --> 00:40:34.720 align:start position:0%
registers away pick a new task to run in
 

00:40:34.720 --> 00:40:35.190 align:start position:0%
registers away pick a new task to run in
a<00:40:34.800><c> loop</c>

00:40:35.190 --> 00:40:35.200 align:start position:0%
a loop
 

00:40:35.200 --> 00:40:38.069 align:start position:0%
a loop
much<00:40:35.440><c> like</c><00:40:35.680><c> the</c><00:40:35.760><c> scheduling</c><00:40:36.240><c> loop</c><00:40:36.480><c> in</c><00:40:36.560><c> xv6</c>

00:40:38.069 --> 00:40:38.079 align:start position:0%
much like the scheduling loop in xv6
 

00:40:38.079 --> 00:40:39.510 align:start position:0%
much like the scheduling loop in xv6
restore

00:40:39.510 --> 00:40:39.520 align:start position:0%
restore
 

00:40:39.520 --> 00:40:42.230 align:start position:0%
restore
this<00:40:39.839><c> task's</c><00:40:40.960><c> registers</c><00:40:41.599><c> out</c><00:40:41.839><c> from</c><00:40:42.079><c> its</c>

00:40:42.230 --> 00:40:42.240 align:start position:0%
this task's registers out from its
 

00:40:42.240 --> 00:40:44.150 align:start position:0%
this task's registers out from its
previously<00:40:42.720><c> saved</c><00:40:43.040><c> registers</c>

00:40:44.150 --> 00:40:44.160 align:start position:0%
previously saved registers
 

00:40:44.160 --> 00:40:46.230 align:start position:0%
previously saved registers
switch<00:40:44.480><c> page</c><00:40:44.800><c> tables</c><00:40:45.119><c> and</c><00:40:45.200><c> then</c><00:40:45.760><c> jump</c><00:40:46.000><c> into</c>

00:40:46.230 --> 00:40:46.240 align:start position:0%
switch page tables and then jump into
 

00:40:46.240 --> 00:40:48.790 align:start position:0%
switch page tables and then jump into
this<00:40:46.400><c> task</c><00:40:46.720><c> and</c><00:40:46.800><c> execute</c><00:40:47.280><c> it</c><00:40:47.359><c> for</c><00:40:47.440><c> a</c><00:40:47.520><c> while</c>

00:40:48.790 --> 00:40:48.800 align:start position:0%
this task and execute it for a while
 

00:40:48.800 --> 00:40:50.870 align:start position:0%
this task and execute it for a while
until<00:40:49.119><c> the</c><00:40:49.200><c> timer</c><00:40:49.520><c> interrupt</c><00:40:49.760><c> went</c><00:40:50.000><c> off</c><00:40:50.240><c> or</c>

00:40:50.870 --> 00:40:50.880 align:start position:0%
until the timer interrupt went off or
 

00:40:50.880 --> 00:40:53.190 align:start position:0%
until the timer interrupt went off or
until<00:40:51.280><c> this</c>

00:40:53.190 --> 00:40:53.200 align:start position:0%
until this
 

00:40:53.200 --> 00:40:55.589 align:start position:0%
until this
task<00:40:53.599><c> either</c><00:40:53.920><c> yielded</c><00:40:54.720><c> i</c><00:40:54.800><c> think</c><00:40:54.960><c> there's</c><00:40:55.280><c> also</c>

00:40:55.589 --> 00:40:55.599 align:start position:0%
task either yielded i think there's also
 

00:40:55.599 --> 00:40:57.349 align:start position:0%
task either yielded i think there's also
probably<00:40:55.920><c> a</c><00:40:56.000><c> yield</c><00:40:56.560><c> system</c><00:40:56.960><c> call</c><00:40:57.200><c> or</c>

00:40:57.349 --> 00:40:57.359 align:start position:0%
probably a yield system call or
 

00:40:57.359 --> 00:40:59.430 align:start position:0%
probably a yield system call or
something<00:40:57.599><c> like</c><00:40:57.839><c> it</c>

00:40:59.430 --> 00:40:59.440 align:start position:0%
something like it
 

00:40:59.440 --> 00:41:02.710 align:start position:0%
something like it
a<00:40:59.599><c> task</c><00:40:59.839><c> could</c><00:41:00.000><c> yield</c><00:41:00.240><c> a</c><00:41:00.319><c> cpu</c><00:41:00.880><c> or</c><00:41:01.359><c> a</c><00:41:01.520><c> task</c><00:41:01.920><c> could</c>

00:41:02.710 --> 00:41:02.720 align:start position:0%
a task could yield a cpu or a task could
 

00:41:02.720 --> 00:41:06.069 align:start position:0%
a task could yield a cpu or a task could
wait<00:41:02.960><c> to</c><00:41:03.119><c> receive</c><00:41:03.440><c> an</c><00:41:03.520><c> ipc</c><00:41:04.079><c> in</c><00:41:04.240><c> that</c><00:41:04.400><c> case</c>

00:41:06.069 --> 00:41:06.079 align:start position:0%
wait to receive an ipc in that case
 

00:41:06.079 --> 00:41:08.390 align:start position:0%
wait to receive an ipc in that case
l4<00:41:06.480><c> would</c><00:41:06.880><c> jump</c><00:41:07.119><c> back</c><00:41:07.280><c> into</c><00:41:07.440><c> l4</c><00:41:07.920><c> and</c><00:41:08.160><c> alpha</c>

00:41:08.390 --> 00:41:08.400 align:start position:0%
l4 would jump back into l4 and alpha
 

00:41:08.400 --> 00:41:10.069 align:start position:0%
l4 would jump back into l4 and alpha
would<00:41:08.800><c> save</c><00:41:09.040><c> us</c><00:41:09.200><c> registers</c>

00:41:10.069 --> 00:41:10.079 align:start position:0%
would save us registers
 

00:41:10.079 --> 00:41:12.550 align:start position:0%
would save us registers
switch<00:41:10.400><c> to</c><00:41:10.560><c> a</c><00:41:10.640><c> new</c><00:41:10.800><c> task</c><00:41:11.520><c> and</c><00:41:11.680><c> run</c><00:41:11.839><c> that</c><00:41:12.000><c> task</c>

00:41:12.550 --> 00:41:12.560 align:start position:0%
switch to a new task and run that task
 

00:41:12.560 --> 00:41:13.190 align:start position:0%
switch to a new task and run that task
so<00:41:12.720><c> that</c>

00:41:13.190 --> 00:41:13.200 align:start position:0%
so that
 

00:41:13.200 --> 00:41:18.069 align:start position:0%
so that
thread<00:41:13.440><c> switching</c><00:41:13.839><c> part</c><00:41:14.079><c> of</c><00:41:14.240><c> l4</c><00:41:14.640><c> is</c><00:41:14.880><c> very</c><00:41:15.280><c> um</c>

00:41:18.069 --> 00:41:18.079 align:start position:0%
 
 

00:41:18.079 --> 00:41:25.349 align:start position:0%
 
be<00:41:18.240><c> very</c><00:41:18.839><c> familiar</c><00:41:20.800><c> um</c>

00:41:25.349 --> 00:41:25.359 align:start position:0%
 
 

00:41:25.359 --> 00:41:30.470 align:start position:0%
 
the<00:41:26.400><c> um</c>

00:41:30.470 --> 00:41:30.480 align:start position:0%
 
 

00:41:30.480 --> 00:41:32.309 align:start position:0%
 
i<00:41:30.800><c> mentioned</c><00:41:31.040><c> this</c><00:41:31.280><c> before</c><00:41:31.520><c> but</c><00:41:31.760><c> i</c><00:41:31.839><c> just</c><00:41:32.160><c> i</c>

00:41:32.309 --> 00:41:32.319 align:start position:0%
i mentioned this before but i just i
 

00:41:32.319 --> 00:41:34.870 align:start position:0%
i mentioned this before but i just i
want<00:41:32.480><c> to</c><00:41:32.720><c> uh</c><00:41:33.280><c> because</c><00:41:33.520><c> it</c><00:41:33.680><c> comes</c><00:41:33.920><c> up</c>

00:41:34.870 --> 00:41:34.880 align:start position:0%
want to uh because it comes up
 

00:41:34.880 --> 00:41:39.829 align:start position:0%
want to uh because it comes up
i<00:41:35.040><c> want</c><00:41:35.200><c> to</c><00:41:35.520><c> um</c><00:41:36.160><c> just</c><00:41:36.480><c> write</c><00:41:37.359><c> here</c>

00:41:39.829 --> 00:41:39.839 align:start position:0%
 
 

00:41:39.839 --> 00:41:44.710 align:start position:0%
 
this<00:41:40.000><c> notion</c><00:41:40.319><c> of</c><00:41:40.480><c> a</c><00:41:40.560><c> pager</c><00:41:41.440><c> um</c><00:41:42.160><c> the</c><00:41:42.480><c> uh</c>

00:41:44.710 --> 00:41:44.720 align:start position:0%
this notion of a pager um the uh
 

00:41:44.720 --> 00:41:48.630 align:start position:0%
this notion of a pager um the uh
repeat<00:41:45.440><c> if</c><00:41:45.599><c> a</c><00:41:45.920><c> process</c><00:41:46.240><c> takes</c><00:41:46.480><c> a</c><00:41:46.560><c> page</c><00:41:46.880><c> fault</c>

00:41:48.630 --> 00:41:48.640 align:start position:0%
repeat if a process takes a page fault
 

00:41:48.640 --> 00:41:50.230 align:start position:0%
repeat if a process takes a page fault
traps<00:41:48.960><c> into</c><00:41:49.119><c> the</c><00:41:49.200><c> kernel</c><00:41:49.760><c> and</c><00:41:49.920><c> the</c><00:41:50.000><c> kernel</c>

00:41:50.230 --> 00:41:50.240 align:start position:0%
traps into the kernel and the kernel
 

00:41:50.240 --> 00:41:51.910 align:start position:0%
traps into the kernel and the kernel
turns<00:41:50.480><c> that</c><00:41:50.640><c> page</c><00:41:50.880><c> fault</c><00:41:51.119><c> into</c><00:41:51.359><c> an</c><00:41:51.520><c> ipc</c>

00:41:51.910 --> 00:41:51.920 align:start position:0%
turns that page fault into an ipc
 

00:41:51.920 --> 00:41:52.790 align:start position:0%
turns that page fault into an ipc
message<00:41:52.319><c> to</c>

00:41:52.790 --> 00:41:52.800 align:start position:0%
message to
 

00:41:52.800 --> 00:41:55.430 align:start position:0%
message to
a<00:41:52.960><c> designated</c><00:41:53.599><c> pager</c><00:41:54.000><c> task</c><00:41:54.800><c> and</c><00:41:54.960><c> tells</c><00:41:55.280><c> it</c><00:41:55.359><c> the</c>

00:41:55.430 --> 00:41:55.440 align:start position:0%
a designated pager task and tells it the
 

00:41:55.440 --> 00:41:56.470 align:start position:0%
a designated pager task and tells it the
address

00:41:56.470 --> 00:41:56.480 align:start position:0%
address
 

00:41:56.480 --> 00:41:58.950 align:start position:0%
address
you<00:41:56.640><c> know</c><00:41:56.800><c> that</c><00:41:57.599><c> tells</c><00:41:57.839><c> it</c><00:41:58.240><c> tells</c><00:41:58.480><c> this</c><00:41:58.640><c> pager</c>

00:41:58.950 --> 00:41:58.960 align:start position:0%
you know that tells it tells this pager
 

00:41:58.960 --> 00:42:00.550 align:start position:0%
you know that tells it tells this pager
task

00:42:00.550 --> 00:42:00.560 align:start position:0%
task
 

00:42:00.560 --> 00:42:02.710 align:start position:0%
task
which<00:42:01.040><c> thread</c><00:42:01.520><c> faulted</c><00:42:02.000><c> and</c><00:42:02.160><c> the</c><00:42:02.240><c> address</c><00:42:02.560><c> it</c>

00:42:02.710 --> 00:42:02.720 align:start position:0%
which thread faulted and the address it
 

00:42:02.720 --> 00:42:03.829 align:start position:0%
which thread faulted and the address it
faulted<00:42:03.119><c> on</c>

00:42:03.829 --> 00:42:03.839 align:start position:0%
faulted on
 

00:42:03.839 --> 00:42:06.790 align:start position:0%
faulted on
um<00:42:04.960><c> and</c><00:42:05.040><c> then</c><00:42:05.280><c> the</c><00:42:05.359><c> pager</c><00:42:05.760><c> task</c><00:42:06.400><c> if</c><00:42:06.560><c> it</c><00:42:06.640><c> wants</c>

00:42:06.790 --> 00:42:06.800 align:start position:0%
um and then the pager task if it wants
 

00:42:06.800 --> 00:42:07.990 align:start position:0%
um and then the pager task if it wants
to<00:42:06.960><c> say</c><00:42:07.200><c> implement</c>

00:42:07.990 --> 00:42:08.000 align:start position:0%
to say implement
 

00:42:08.000 --> 00:42:10.150 align:start position:0%
to say implement
lazy<00:42:08.400><c> allocation</c><00:42:09.440><c> you</c><00:42:09.599><c> know</c><00:42:09.680><c> maybe</c><00:42:09.920><c> this</c>

00:42:10.150 --> 00:42:10.160 align:start position:0%
lazy allocation you know maybe this
 

00:42:10.160 --> 00:42:11.109 align:start position:0%
lazy allocation you know maybe this
thread

00:42:11.109 --> 00:42:11.119 align:start position:0%
thread
 

00:42:11.119 --> 00:42:12.630 align:start position:0%
thread
wrote<00:42:11.599><c> read</c><00:42:11.760><c> or</c><00:42:11.920><c> write</c><00:42:12.079><c> some</c><00:42:12.240><c> memory</c><00:42:12.560><c> that</c>

00:42:12.630 --> 00:42:12.640 align:start position:0%
wrote read or write some memory that
 

00:42:12.640 --> 00:42:14.230 align:start position:0%
wrote read or write some memory that
wasn't<00:42:12.880><c> allocated</c><00:42:13.359><c> yet</c><00:42:13.599><c> but</c><00:42:13.760><c> it</c>

00:42:14.230 --> 00:42:14.240 align:start position:0%
wasn't allocated yet but it
 

00:42:14.240 --> 00:42:16.550 align:start position:0%
wasn't allocated yet but it
think<00:42:14.560><c> that</c><00:42:14.800><c> it</c><00:42:14.960><c> sort</c><00:42:15.119><c> of</c><00:42:15.280><c> has</c><00:42:15.599><c> to</c><00:42:15.680><c> be</c><00:42:16.079><c> lazily</c>

00:42:16.550 --> 00:42:16.560 align:start position:0%
think that it sort of has to be lazily
 

00:42:16.560 --> 00:42:17.430 align:start position:0%
think that it sort of has to be lazily
allocated

00:42:17.430 --> 00:42:17.440 align:start position:0%
allocated
 

00:42:17.440 --> 00:42:19.270 align:start position:0%
allocated
its<00:42:17.760><c> pager</c><00:42:18.079><c> task</c><00:42:18.400><c> would</c><00:42:18.480><c> then</c><00:42:18.640><c> be</c><00:42:18.800><c> in</c><00:42:18.960><c> charge</c>

00:42:19.270 --> 00:42:19.280 align:start position:0%
its pager task would then be in charge
 

00:42:19.280 --> 00:42:20.950 align:start position:0%
its pager task would then be in charge
of<00:42:19.520><c> allocating</c><00:42:20.000><c> some</c><00:42:20.160><c> memory</c><00:42:20.640><c> from</c>

00:42:20.950 --> 00:42:20.960 align:start position:0%
of allocating some memory from
 

00:42:20.960 --> 00:42:24.630 align:start position:0%
of allocating some memory from
l4<00:42:22.000><c> um</c><00:42:22.800><c> sending</c><00:42:23.119><c> one</c><00:42:23.280><c> of</c><00:42:23.359><c> these</c><00:42:23.599><c> special</c>

00:42:24.630 --> 00:42:24.640 align:start position:0%
l4 um sending one of these special
 

00:42:24.640 --> 00:42:27.990 align:start position:0%
l4 um sending one of these special
ipc's<00:42:26.160><c> uh</c><00:42:26.720><c> the</c><00:42:26.960><c> cause</c>

00:42:27.990 --> 00:42:28.000 align:start position:0%
ipc's uh the cause
 

00:42:28.000 --> 00:42:31.109 align:start position:0%
ipc's uh the cause
mem<00:42:28.480><c> that</c><00:42:28.640><c> caused</c><00:42:29.040><c> the</c><00:42:29.920><c> memory</c><00:42:30.319><c> to</c><00:42:30.400><c> be</c><00:42:30.640><c> mapped</c>

00:42:31.109 --> 00:42:31.119 align:start position:0%
mem that caused the memory to be mapped
 

00:42:31.119 --> 00:42:32.790 align:start position:0%
mem that caused the memory to be mapped
into<00:42:31.359><c> this</c><00:42:31.520><c> task</c><00:42:32.000><c> and</c><00:42:32.160><c> then</c>

00:42:32.790 --> 00:42:32.800 align:start position:0%
into this task and then
 

00:42:32.800 --> 00:42:35.589 align:start position:0%
into this task and then
sending<00:42:33.040><c> an</c><00:42:33.200><c> ipc</c><00:42:33.599><c> to</c><00:42:33.680><c> resume</c><00:42:34.560><c> execution</c>

00:42:35.589 --> 00:42:35.599 align:start position:0%
sending an ipc to resume execution
 

00:42:35.599 --> 00:42:37.190 align:start position:0%
sending an ipc to resume execution
inside<00:42:35.920><c> this</c><00:42:36.160><c> thread</c>

00:42:37.190 --> 00:42:37.200 align:start position:0%
inside this thread
 

00:42:37.200 --> 00:42:39.670 align:start position:0%
inside this thread
um<00:42:38.319><c> so</c><00:42:38.480><c> there</c><00:42:38.640><c> was</c><00:42:38.800><c> this</c><00:42:38.960><c> notion</c><00:42:39.280><c> of</c><00:42:39.359><c> page</c><00:42:39.599><c> or</c>

00:42:39.670 --> 00:42:39.680 align:start position:0%
um so there was this notion of page or
 

00:42:39.680 --> 00:42:40.950 align:start position:0%
um so there was this notion of page or
task<00:42:39.920><c> to</c><00:42:40.079><c> implement</c><00:42:40.480><c> all</c><00:42:40.560><c> this</c>

00:42:40.950 --> 00:42:40.960 align:start position:0%
task to implement all this
 

00:42:40.960 --> 00:42:43.270 align:start position:0%
task to implement all this
all<00:42:41.119><c> the</c><00:42:41.280><c> stuff</c><00:42:41.680><c> that</c><00:42:42.160><c> xv6</c><00:42:42.800><c> or</c><00:42:42.880><c> linux</c>

00:42:43.270 --> 00:42:43.280 align:start position:0%
all the stuff that xv6 or linux
 

00:42:43.280 --> 00:42:43.990 align:start position:0%
all the stuff that xv6 or linux
implements<00:42:43.760><c> in</c>

00:42:43.990 --> 00:42:44.000 align:start position:0%
implements in
 

00:42:44.000 --> 00:42:45.829 align:start position:0%
implements in
page<00:42:44.240><c> fault</c><00:42:44.480><c> handlers</c><00:42:44.960><c> like</c><00:42:45.359><c> you</c><00:42:45.520><c> could</c>

00:42:45.829 --> 00:42:45.839 align:start position:0%
page fault handlers like you could
 

00:42:45.839 --> 00:42:47.589 align:start position:0%
page fault handlers like you could
implement<00:42:46.240><c> copy</c><00:42:46.560><c> on</c><00:42:46.720><c> the</c><00:42:46.800><c> right</c><00:42:47.119><c> fork</c><00:42:47.440><c> with</c>

00:42:47.589 --> 00:42:47.599 align:start position:0%
implement copy on the right fork with
 

00:42:47.599 --> 00:42:47.990 align:start position:0%
implement copy on the right fork with
this

00:42:47.990 --> 00:42:48.000 align:start position:0%
this
 

00:42:48.000 --> 00:42:52.069 align:start position:0%
this
if<00:42:48.079><c> you</c><00:42:48.240><c> liked</c><00:42:48.640><c> or</c><00:42:49.599><c> memory</c><00:42:50.000><c> mapped</c><00:42:50.400><c> files</c><00:42:50.880><c> all</c>

00:42:52.069 --> 00:42:52.079 align:start position:0%
if you liked or memory mapped files all
 

00:42:52.079 --> 00:42:53.670 align:start position:0%
if you liked or memory mapped files all
using<00:42:52.240><c> one</c><00:42:52.400><c> of</c><00:42:52.480><c> these</c><00:42:52.720><c> pager</c><00:42:53.040><c> tags</c><00:42:53.359><c> so</c><00:42:53.520><c> they</c>

00:42:53.670 --> 00:42:53.680 align:start position:0%
using one of these pager tags so they
 

00:42:53.680 --> 00:42:56.069 align:start position:0%
using one of these pager tags so they
were<00:42:54.560><c> sort</c><00:42:54.800><c> of</c>

00:42:56.069 --> 00:42:56.079 align:start position:0%
were sort of
 

00:42:56.079 --> 00:42:59.190 align:start position:0%
were sort of
powerful<00:42:56.640><c> user</c><00:42:57.119><c> level</c><00:42:57.440><c> way</c><00:42:58.800><c> to</c>

00:42:59.190 --> 00:42:59.200 align:start position:0%
powerful user level way to
 

00:42:59.200 --> 00:43:01.829 align:start position:0%
powerful user level way to
play<00:42:59.599><c> tricks</c><00:43:00.000><c> with</c><00:43:00.240><c> uh</c><00:43:01.040><c> driven</c><00:43:01.359><c> by</c><00:43:01.599><c> page</c>

00:43:01.829 --> 00:43:01.839 align:start position:0%
play tricks with uh driven by page
 

00:43:01.839 --> 00:43:03.589 align:start position:0%
play tricks with uh driven by page
faults

00:43:03.589 --> 00:43:03.599 align:start position:0%
faults
 

00:43:03.599 --> 00:43:05.430 align:start position:0%
faults
and<00:43:03.760><c> so</c><00:43:03.920><c> this</c><00:43:04.079><c> is</c><00:43:04.160><c> an</c><00:43:04.319><c> example</c><00:43:05.040><c> and</c><00:43:05.200><c> one</c><00:43:05.359><c> of</c>

00:43:05.430 --> 00:43:05.440 align:start position:0%
and so this is an example and one of
 

00:43:05.440 --> 00:43:07.190 align:start position:0%
and so this is an example and one of
many<00:43:05.680><c> examples</c><00:43:06.079><c> in</c><00:43:06.240><c> which</c>

00:43:07.190 --> 00:43:07.200 align:start position:0%
many examples in which
 

00:43:07.200 --> 00:43:09.270 align:start position:0%
many examples in which
a<00:43:07.359><c> micro</c><00:43:07.680><c> kernel</c><00:43:08.000><c> like</c><00:43:08.240><c> l4</c><00:43:08.800><c> might</c><00:43:09.040><c> have</c><00:43:09.119><c> been</c>

00:43:09.270 --> 00:43:09.280 align:start position:0%
a micro kernel like l4 might have been
 

00:43:09.280 --> 00:43:10.470 align:start position:0%
a micro kernel like l4 might have been
quite<00:43:09.440><c> a</c><00:43:09.520><c> bit</c><00:43:09.760><c> more</c>

00:43:10.470 --> 00:43:10.480 align:start position:0%
quite a bit more
 

00:43:10.480 --> 00:43:12.309 align:start position:0%
quite a bit more
flexible<00:43:11.040><c> for</c><00:43:11.200><c> user</c><00:43:11.520><c> programs</c><00:43:12.079><c> than</c><00:43:12.240><c> a</c>

00:43:12.309 --> 00:43:12.319 align:start position:0%
flexible for user programs than a
 

00:43:12.319 --> 00:43:14.230 align:start position:0%
flexible for user programs than a
conventional<00:43:12.880><c> kernel</c><00:43:13.440><c> like</c><00:43:13.680><c> if</c><00:43:13.760><c> you</c><00:43:13.920><c> just</c>

00:43:14.230 --> 00:43:14.240 align:start position:0%
conventional kernel like if you just
 

00:43:14.240 --> 00:43:15.670 align:start position:0%
conventional kernel like if you just
if<00:43:14.400><c> you</c><00:43:14.480><c> think</c><00:43:14.640><c> linux</c><00:43:15.040><c> ought</c><00:43:15.200><c> to</c><00:43:15.280><c> do</c><00:43:15.440><c> some</c>

00:43:15.670 --> 00:43:15.680 align:start position:0%
if you think linux ought to do some
 

00:43:15.680 --> 00:43:18.390 align:start position:0%
if you think linux ought to do some
extra<00:43:16.000><c> thing</c><00:43:16.400><c> like</c><00:43:17.040><c> maybe</c>

00:43:18.390 --> 00:43:18.400 align:start position:0%
extra thing like maybe
 

00:43:18.400 --> 00:43:20.870 align:start position:0%
extra thing like maybe
you<00:43:18.560><c> know</c><00:43:18.800><c> some</c><00:43:19.839><c> you</c><00:43:19.920><c> know</c><00:43:20.079><c> if</c><00:43:20.319><c> linux</c><00:43:20.640><c> didn't</c>

00:43:20.870 --> 00:43:20.880 align:start position:0%
you know some you know if linux didn't
 

00:43:20.880 --> 00:43:22.550 align:start position:0%
you know some you know if linux didn't
already<00:43:21.200><c> have</c><00:43:21.359><c> copy</c><00:43:21.680><c> on</c><00:43:21.839><c> right</c><00:43:22.079><c> fork</c><00:43:22.319><c> and</c><00:43:22.400><c> you</c>

00:43:22.550 --> 00:43:22.560 align:start position:0%
already have copy on right fork and you
 

00:43:22.560 --> 00:43:24.470 align:start position:0%
already have copy on right fork and you
wanted<00:43:22.880><c> to</c><00:43:22.960><c> have</c><00:43:23.119><c> copy</c><00:43:23.520><c> on</c><00:43:23.599><c> right</c><00:43:23.839><c> fork</c>

00:43:24.470 --> 00:43:24.480 align:start position:0%
wanted to have copy on right fork
 

00:43:24.480 --> 00:43:25.910 align:start position:0%
wanted to have copy on right fork
you<00:43:24.640><c> know</c><00:43:24.800><c> you</c><00:43:24.880><c> really</c><00:43:25.119><c> can't</c><00:43:25.359><c> implement</c><00:43:25.680><c> that</c>

00:43:25.910 --> 00:43:25.920 align:start position:0%
you know you really can't implement that
 

00:43:25.920 --> 00:43:28.069 align:start position:0%
you know you really can't implement that
in<00:43:26.000><c> linux</c><00:43:26.319><c> without</c><00:43:26.640><c> modifying</c><00:43:27.119><c> the</c><00:43:27.200><c> kernel</c>

00:43:28.069 --> 00:43:28.079 align:start position:0%
in linux without modifying the kernel
 

00:43:28.079 --> 00:43:30.069 align:start position:0%
in linux without modifying the kernel
there's<00:43:28.240><c> no</c><00:43:28.319><c> way</c><00:43:28.480><c> to</c><00:43:28.560><c> write</c><00:43:28.800><c> portable</c><00:43:29.200><c> code</c>

00:43:30.069 --> 00:43:30.079 align:start position:0%
there's no way to write portable code
 

00:43:30.079 --> 00:43:31.829 align:start position:0%
there's no way to write portable code
portable<00:43:30.480><c> user</c><00:43:30.800><c> level</c><00:43:31.119><c> code</c>

00:43:31.829 --> 00:43:31.839 align:start position:0%
portable user level code
 

00:43:31.839 --> 00:43:33.589 align:start position:0%
portable user level code
for<00:43:32.000><c> linux</c><00:43:32.560><c> that</c><00:43:32.720><c> could</c><00:43:32.960><c> implement</c><00:43:33.359><c> something</c>

00:43:33.589 --> 00:43:33.599 align:start position:0%
for linux that could implement something
 

00:43:33.599 --> 00:43:35.990 align:start position:0%
for linux that could implement something
like<00:43:33.760><c> copy</c><00:43:34.079><c> on</c><00:43:34.160><c> right</c><00:43:34.400><c> fork</c>

00:43:35.990 --> 00:43:36.000 align:start position:0%
like copy on right fork
 

00:43:36.000 --> 00:43:38.870 align:start position:0%
like copy on right fork
um<00:43:37.040><c> so</c><00:43:37.280><c> i'm</c><00:43:37.359><c> not</c><00:43:37.920><c> that's</c><00:43:38.079><c> not</c><00:43:38.319><c> quite</c><00:43:38.480><c> true</c><00:43:38.640><c> but</c>

00:43:38.870 --> 00:43:38.880 align:start position:0%
um so i'm not that's not quite true but
 

00:43:38.880 --> 00:43:40.950 align:start position:0%
um so i'm not that's not quite true but
it<00:43:38.960><c> will</c><00:43:39.119><c> be</c><00:43:39.280><c> very</c><00:43:39.440><c> difficult</c><00:43:39.920><c> whereas</c>

00:43:40.950 --> 00:43:40.960 align:start position:0%
it will be very difficult whereas
 

00:43:40.960 --> 00:43:43.270 align:start position:0%
it will be very difficult whereas
um<00:43:41.599><c> in</c><00:43:41.760><c> l4</c><00:43:42.079><c> it's</c><00:43:42.240><c> relatively</c><00:43:42.640><c> straightforward</c>

00:43:43.270 --> 00:43:43.280 align:start position:0%
um in l4 it's relatively straightforward
 

00:43:43.280 --> 00:43:45.270 align:start position:0%
um in l4 it's relatively straightforward
l4<00:43:43.599><c> is</c><00:43:43.760><c> like</c><00:43:43.839><c> completely</c><00:43:44.319><c> set</c><00:43:44.560><c> up</c><00:43:44.800><c> for</c><00:43:45.040><c> you</c><00:43:45.200><c> to</c>

00:43:45.270 --> 00:43:45.280 align:start position:0%
l4 is like completely set up for you to
 

00:43:45.280 --> 00:43:46.950 align:start position:0%
l4 is like completely set up for you to
be<00:43:45.359><c> able</c><00:43:45.520><c> to</c><00:43:45.599><c> write</c><00:43:45.839><c> user</c><00:43:46.160><c> level</c><00:43:46.400><c> code</c>

00:43:46.950 --> 00:43:46.960 align:start position:0%
be able to write user level code
 

00:43:46.960 --> 00:43:48.790 align:start position:0%
be able to write user level code
that<00:43:47.119><c> gets</c><00:43:47.359><c> the</c><00:43:47.520><c> page</c><00:43:47.839><c> faults</c><00:43:48.560><c> that</c><00:43:48.720><c> are</c>

00:43:48.790 --> 00:43:48.800 align:start position:0%
that gets the page faults that are
 

00:43:48.800 --> 00:43:50.150 align:start position:0%
that gets the page faults that are
required<00:43:49.280><c> to</c><00:43:49.440><c> drive</c>

00:43:50.150 --> 00:43:50.160 align:start position:0%
required to drive
 

00:43:50.160 --> 00:43:53.270 align:start position:0%
required to drive
copy<00:43:50.560><c> on</c><00:43:50.640><c> right</c><00:43:50.880><c> fork</c><00:43:51.920><c> all</c><00:43:52.560><c> in</c><00:43:52.720><c> user</c><00:43:52.960><c> space</c>

00:43:53.270 --> 00:43:53.280 align:start position:0%
copy on right fork all in user space
 

00:43:53.280 --> 00:43:54.309 align:start position:0%
copy on right fork all in user space
without<00:43:53.520><c> having</c><00:43:53.760><c> to</c>

00:43:54.309 --> 00:43:54.319 align:start position:0%
without having to
 

00:43:54.319 --> 00:43:58.069 align:start position:0%
without having to
mess<00:43:54.560><c> with</c><00:43:54.720><c> the</c><00:43:54.800><c> kernel</c>

00:43:58.069 --> 00:43:58.079 align:start position:0%
 
 

00:43:58.079 --> 00:44:02.470 align:start position:0%
 
okay<00:44:00.480><c> so</c><00:44:00.720><c> any</c><00:44:00.880><c> questions</c><00:44:01.200><c> so</c><00:44:01.359><c> far</c><00:44:01.520><c> about</c>

00:44:02.470 --> 00:44:02.480 align:start position:0%
okay so any questions so far about
 

00:44:02.480 --> 00:44:05.510 align:start position:0%
okay so any questions so far about
how<00:44:02.720><c> l4</c><00:44:03.119><c> works</c>

00:44:05.510 --> 00:44:05.520 align:start position:0%
 
 

00:44:05.520 --> 00:44:07.190 align:start position:0%
 
oh<00:44:05.680><c> sorry</c><00:44:05.920><c> can</c><00:44:06.079><c> you</c><00:44:06.240><c> just</c><00:44:06.480><c> clarify</c><00:44:07.119><c> the</c>

00:44:07.190 --> 00:44:07.200 align:start position:0%
oh sorry can you just clarify the
 

00:44:07.200 --> 00:44:10.069 align:start position:0%
oh sorry can you just clarify the
difference<00:44:07.599><c> between</c><00:44:08.079><c> a</c><00:44:08.240><c> thread</c><00:44:08.560><c> and</c><00:44:08.720><c> a</c><00:44:08.880><c> task</c>

00:44:10.069 --> 00:44:10.079 align:start position:0%
difference between a thread and a task
 

00:44:10.079 --> 00:44:14.630 align:start position:0%
difference between a thread and a task
um<00:44:10.640><c> yes</c><00:44:11.200><c> a</c><00:44:11.839><c> a</c><00:44:12.880><c> a</c><00:44:13.040><c> task</c>

00:44:14.630 --> 00:44:14.640 align:start position:0%
um yes a a a task
 

00:44:14.640 --> 00:44:17.750 align:start position:0%
um yes a a a task
corresponds<00:44:15.359><c> to</c><00:44:15.599><c> a</c><00:44:15.920><c> it's</c><00:44:16.079><c> like</c><00:44:16.240><c> a</c><00:44:16.400><c> process</c>

00:44:17.750 --> 00:44:17.760 align:start position:0%
corresponds to a it's like a process
 

00:44:17.760 --> 00:44:20.550 align:start position:0%
corresponds to a it's like a process
in<00:44:18.720><c> xv6</c><00:44:19.200><c> it</c><00:44:19.359><c> has</c><00:44:19.520><c> a</c><00:44:19.599><c> bunch</c><00:44:19.839><c> of</c><00:44:19.920><c> memory</c><00:44:20.319><c> and</c><00:44:20.480><c> an</c>

00:44:20.550 --> 00:44:20.560 align:start position:0%
in xv6 it has a bunch of memory and an
 

00:44:20.560 --> 00:44:21.829 align:start position:0%
in xv6 it has a bunch of memory and an
address<00:44:20.880><c> space</c>

00:44:21.829 --> 00:44:21.839 align:start position:0%
address space
 

00:44:21.839 --> 00:44:26.790 align:start position:0%
address space
and<00:44:22.000><c> you</c><00:44:22.079><c> can</c><00:44:22.560><c> execute</c><00:44:22.960><c> user</c><00:44:23.200><c> code</c><00:44:23.520><c> in</c><00:44:23.680><c> it</c><00:44:24.560><c> xv6</c>

00:44:26.790 --> 00:44:26.800 align:start position:0%
and you can execute user code in it xv6
 

00:44:26.800 --> 00:44:28.710 align:start position:0%
and you can execute user code in it xv6
if<00:44:26.880><c> you</c><00:44:26.960><c> have</c><00:44:27.040><c> a</c><00:44:27.119><c> process</c><00:44:27.520><c> in</c><00:44:27.599><c> xv6</c><00:44:28.240><c> it</c><00:44:28.400><c> can</c><00:44:28.560><c> only</c>

00:44:28.710 --> 00:44:28.720 align:start position:0%
if you have a process in xv6 it can only
 

00:44:28.720 --> 00:44:30.790 align:start position:0%
if you have a process in xv6 it can only
there<00:44:28.880><c> can</c><00:44:29.040><c> only</c><00:44:29.200><c> be</c><00:44:29.359><c> one</c><00:44:29.599><c> thread</c><00:44:29.920><c> of</c><00:44:30.000><c> control</c>

00:44:30.790 --> 00:44:30.800 align:start position:0%
there can only be one thread of control
 

00:44:30.800 --> 00:44:32.870 align:start position:0%
there can only be one thread of control
on<00:44:30.960><c> a</c><00:44:31.040><c> single</c><00:44:31.359><c> on</c><00:44:31.760><c> you</c><00:44:31.839><c> know</c><00:44:32.000><c> executing</c><00:44:32.560><c> inside</c>

00:44:32.870 --> 00:44:32.880 align:start position:0%
on a single on you know executing inside
 

00:44:32.880 --> 00:44:34.309 align:start position:0%
on a single on you know executing inside
a<00:44:33.680><c> process</c>

00:44:34.309 --> 00:44:34.319 align:start position:0%
a process
 

00:44:34.319 --> 00:44:37.510 align:start position:0%
a process
in<00:44:34.480><c> xv6</c><00:44:35.520><c> but</c><00:44:35.760><c> in</c><00:44:36.400><c> modern</c><00:44:36.800><c> operating</c><00:44:37.200><c> systems</c>

00:44:37.510 --> 00:44:37.520 align:start position:0%
in xv6 but in modern operating systems
 

00:44:37.520 --> 00:44:39.990 align:start position:0%
in xv6 but in modern operating systems
and<00:44:37.680><c> in</c><00:44:37.839><c> l4</c>

00:44:39.990 --> 00:44:40.000 align:start position:0%
and in l4
 

00:44:40.000 --> 00:44:41.990 align:start position:0%
and in l4
in<00:44:40.160><c> a</c><00:44:40.319><c> single</c><00:44:40.880><c> process</c><00:44:41.280><c> in</c><00:44:41.359><c> a</c><00:44:41.440><c> single</c><00:44:41.760><c> address</c>

00:44:41.990 --> 00:44:42.000 align:start position:0%
in a single process in a single address
 

00:44:42.000 --> 00:44:43.270 align:start position:0%
in a single process in a single address
space<00:44:42.319><c> you</c><00:44:42.400><c> could</c><00:44:42.560><c> have</c><00:44:42.880><c> mult</c>

00:44:43.270 --> 00:44:43.280 align:start position:0%
space you could have mult
 

00:44:43.280 --> 00:44:45.990 align:start position:0%
space you could have mult
if<00:44:43.359><c> you</c><00:44:43.440><c> have</c><00:44:43.599><c> multiple</c><00:44:44.079><c> cores</c><00:44:45.359><c> you</c><00:44:45.520><c> can</c><00:44:45.680><c> have</c>

00:44:45.990 --> 00:44:46.000 align:start position:0%
if you have multiple cores you can have
 

00:44:46.000 --> 00:44:47.030 align:start position:0%
if you have multiple cores you can have
multiple<00:44:46.560><c> cores</c>

00:44:47.030 --> 00:44:47.040 align:start position:0%
multiple cores
 

00:44:47.040 --> 00:44:51.670 align:start position:0%
multiple cores
executing<00:44:49.200><c> in</c><00:44:49.359><c> a</c><00:44:49.440><c> single</c><00:44:49.920><c> task</c>

00:44:51.670 --> 00:44:51.680 align:start position:0%
executing in a single task
 

00:44:51.680 --> 00:44:54.150 align:start position:0%
executing in a single task
each<00:44:52.160><c> you</c><00:44:52.240><c> know</c><00:44:52.400><c> typically</c><00:44:53.359><c> always</c><00:44:53.760><c> each</c><00:44:54.000><c> set</c>

00:44:54.150 --> 00:44:54.160 align:start position:0%
each you know typically always each set
 

00:44:54.160 --> 00:44:55.430 align:start position:0%
each you know typically always each set
up<00:44:54.319><c> with</c><00:44:54.480><c> its</c><00:44:54.640><c> own</c><00:44:54.880><c> stack</c>

00:44:55.430 --> 00:44:55.440 align:start position:0%
up with its own stack
 

00:44:55.440 --> 00:44:58.790 align:start position:0%
up with its own stack
inside<00:44:55.839><c> that</c><00:44:56.079><c> tasks</c><00:44:56.640><c> address</c><00:44:56.960><c> space</c><00:44:58.400><c> and</c><00:44:58.560><c> so</c>

00:44:58.790 --> 00:44:58.800 align:start position:0%
inside that tasks address space and so
 

00:44:58.800 --> 00:44:59.270 align:start position:0%
inside that tasks address space and so
if<00:44:58.960><c> you</c>

00:44:59.270 --> 00:44:59.280 align:start position:0%
if you
 

00:44:59.280 --> 00:45:00.630 align:start position:0%
if you
that<00:44:59.440><c> means</c><00:44:59.599><c> you</c><00:44:59.760><c> can</c><00:44:59.839><c> for</c><00:45:00.000><c> example</c><00:45:00.319><c> write</c><00:45:00.560><c> a</c>

00:45:00.630 --> 00:45:00.640 align:start position:0%
that means you can for example write a
 

00:45:00.640 --> 00:45:02.950 align:start position:0%
that means you can for example write a
single<00:45:00.960><c> program</c><00:45:01.920><c> that</c><00:45:02.079><c> can</c><00:45:02.240><c> get</c>

00:45:02.950 --> 00:45:02.960 align:start position:0%
single program that can get
 

00:45:02.960 --> 00:45:05.750 align:start position:0%
single program that can get
parallel<00:45:03.520><c> speed</c><00:45:03.760><c> up</c><00:45:04.000><c> improved</c><00:45:04.400><c> performance</c>

00:45:05.750 --> 00:45:05.760 align:start position:0%
parallel speed up improved performance
 

00:45:05.760 --> 00:45:08.150 align:start position:0%
parallel speed up improved performance
from<00:45:06.000><c> multi-core</c><00:45:06.640><c> hardware</c><00:45:07.119><c> by</c><00:45:07.359><c> running</c>

00:45:08.150 --> 00:45:08.160 align:start position:0%
from multi-core hardware by running
 

00:45:08.160 --> 00:45:10.470 align:start position:0%
from multi-core hardware by running
one<00:45:08.480><c> thread</c><00:45:08.880><c> on</c><00:45:09.599><c> having</c><00:45:09.839><c> multiple</c><00:45:10.160><c> threads</c>

00:45:10.470 --> 00:45:10.480 align:start position:0%
one thread on having multiple threads
 

00:45:10.480 --> 00:45:11.910 align:start position:0%
one thread on having multiple threads
each<00:45:10.640><c> running</c><00:45:10.880><c> on</c><00:45:11.040><c> a</c><00:45:11.119><c> different</c><00:45:11.359><c> core</c>

00:45:11.910 --> 00:45:11.920 align:start position:0%
each running on a different core
 

00:45:11.920 --> 00:45:15.270 align:start position:0%
each running on a different core
thereby<00:45:12.240><c> getting</c><00:45:12.480><c> more</c><00:45:12.640><c> work</c><00:45:12.880><c> done</c>

00:45:15.270 --> 00:45:15.280 align:start position:0%
 
 

00:45:15.280 --> 00:45:21.910 align:start position:0%
 
okay<00:45:15.599><c> i</c><00:45:15.680><c> see</c><00:45:15.920><c> thank</c><00:45:16.160><c> you</c><00:45:16.960><c> yes</c>

00:45:21.910 --> 00:45:21.920 align:start position:0%
 
 

00:45:21.920 --> 00:45:25.510 align:start position:0%
 
okay<00:45:22.640><c> um</c><00:45:24.560><c> so</c><00:45:24.720><c> as</c><00:45:24.880><c> you</c><00:45:25.040><c> can</c><00:45:25.119><c> see</c><00:45:25.280><c> this</c><00:45:25.359><c> is</c><00:45:25.440><c> a</c>

00:45:25.510 --> 00:45:25.520 align:start position:0%
okay um so as you can see this is a
 

00:45:25.520 --> 00:45:27.589 align:start position:0%
okay um so as you can see this is a
design<00:45:25.839><c> that</c><00:45:26.000><c> relies</c><00:45:26.400><c> heavily</c><00:45:26.880><c> on</c>

00:45:27.589 --> 00:45:27.599 align:start position:0%
design that relies heavily on
 

00:45:27.599 --> 00:45:30.630 align:start position:0%
design that relies heavily on
on<00:45:28.720><c> ipc</c><00:45:29.920><c> because</c><00:45:30.079><c> you're</c><00:45:30.160><c> going</c><00:45:30.240><c> to</c><00:45:30.400><c> want</c><00:45:30.560><c> to</c>

00:45:30.630 --> 00:45:30.640 align:start position:0%
on ipc because you're going to want to
 

00:45:30.640 --> 00:45:32.230 align:start position:0%
on ipc because you're going to want to
talk<00:45:30.800><c> to</c><00:45:30.880><c> your</c><00:45:31.040><c> file</c><00:45:31.280><c> server</c><00:45:31.680><c> the</c><00:45:31.760><c> file</c><00:45:32.000><c> server</c>

00:45:32.230 --> 00:45:32.240 align:start position:0%
talk to your file server the file server
 

00:45:32.240 --> 00:45:33.589 align:start position:0%
talk to your file server the file server
is<00:45:32.319><c> going</c><00:45:32.400><c> to</c><00:45:32.480><c> want</c><00:45:32.640><c> to</c><00:45:32.720><c> talk</c><00:45:32.880><c> to</c><00:45:33.040><c> the</c><00:45:33.119><c> device</c>

00:45:33.589 --> 00:45:33.599 align:start position:0%
is going to want to talk to the device
 

00:45:33.599 --> 00:45:34.069 align:start position:0%
is going to want to talk to the device
driver

00:45:34.069 --> 00:45:34.079 align:start position:0%
driver
 

00:45:34.079 --> 00:45:36.150 align:start position:0%
driver
server<00:45:34.880><c> and</c><00:45:35.040><c> you're</c><00:45:35.200><c> going</c><00:45:35.359><c> to</c><00:45:35.440><c> have</c><00:45:35.680><c> ipc</c>

00:45:36.150 --> 00:45:36.160 align:start position:0%
server and you're going to have ipc
 

00:45:36.160 --> 00:45:37.750 align:start position:0%
server and you're going to have ipc
messages<00:45:36.560><c> flying</c><00:45:36.800><c> back</c><00:45:37.040><c> and</c><00:45:37.119><c> forth</c>

00:45:37.750 --> 00:45:37.760 align:start position:0%
messages flying back and forth
 

00:45:37.760 --> 00:45:39.829 align:start position:0%
messages flying back and forth
for<00:45:37.920><c> every</c><00:45:38.160><c> system</c><00:45:38.560><c> call</c><00:45:39.119><c> for</c><00:45:39.280><c> every</c><00:45:39.520><c> page</c>

00:45:39.829 --> 00:45:39.839 align:start position:0%
for every system call for every page
 

00:45:39.839 --> 00:45:41.430 align:start position:0%
for every system call for every page
fault<00:45:40.160><c> for</c><00:45:40.240><c> every</c><00:45:40.480><c> device</c><00:45:40.800><c> interrupt</c>

00:45:41.430 --> 00:45:41.440 align:start position:0%
fault for every device interrupt
 

00:45:41.440 --> 00:45:44.829 align:start position:0%
fault for every device interrupt
the<00:45:41.599><c> ibc</c><00:45:42.000><c> system</c><00:45:42.400><c> just</c><00:45:42.560><c> has</c><00:45:42.720><c> to</c><00:45:42.880><c> be</c><00:45:43.040><c> fast</c>

00:45:44.829 --> 00:45:44.839 align:start position:0%
the ibc system just has to be fast
 

00:45:44.839 --> 00:45:47.190 align:start position:0%
the ibc system just has to be fast
however

00:45:47.190 --> 00:45:47.200 align:start position:0%
however
 

00:45:47.200 --> 00:45:50.390 align:start position:0%
however
and<00:45:47.280><c> now</c><00:45:47.520><c> we're</c><00:45:47.680><c> starting</c><00:45:48.000><c> to</c>

00:45:50.390 --> 00:45:50.400 align:start position:0%
 
 

00:45:50.400 --> 00:45:52.950 align:start position:0%
 
sort<00:45:50.560><c> of</c><00:45:51.440><c> talk</c><00:45:51.599><c> about</c><00:45:51.839><c> a</c><00:45:52.079><c> serious</c><00:45:52.480><c> potential</c>

00:45:52.950 --> 00:45:52.960 align:start position:0%
sort of talk about a serious potential
 

00:45:52.960 --> 00:45:54.710 align:start position:0%
sort of talk about a serious potential
defect<00:45:53.520><c> in</c><00:45:53.680><c> the</c>

00:45:54.710 --> 00:45:54.720 align:start position:0%
defect in the
 

00:45:54.720 --> 00:46:04.630 align:start position:0%
defect in the
microkernel<00:45:58.839><c> story</c>

00:46:04.630 --> 00:46:04.640 align:start position:0%
 
 

00:46:04.640 --> 00:46:07.589 align:start position:0%
 
so<00:46:04.800><c> first</c><00:46:05.040><c> let</c><00:46:05.200><c> me</c><00:46:05.359><c> show</c><00:46:05.520><c> you</c><00:46:05.839><c> um</c><00:46:07.359><c> a</c>

00:46:07.589 --> 00:46:07.599 align:start position:0%
so first let me show you um a
 

00:46:07.599 --> 00:46:10.950 align:start position:0%
so first let me show you um a
straightforward<00:46:08.319><c> but</c><00:46:08.640><c> very</c><00:46:08.960><c> slow</c><00:46:09.280><c> design</c>

00:46:10.950 --> 00:46:10.960 align:start position:0%
straightforward but very slow design
 

00:46:10.960 --> 00:46:14.309 align:start position:0%
straightforward but very slow design
for<00:46:12.400><c> ipc</c><00:46:13.040><c> patterned</c><00:46:13.440><c> off</c><00:46:13.599><c> of</c>

00:46:14.309 --> 00:46:14.319 align:start position:0%
for ipc patterned off of
 

00:46:14.319 --> 00:46:16.150 align:start position:0%
for ipc patterned off of
unix<00:46:14.800><c> pipes</c><00:46:15.280><c> and</c><00:46:15.440><c> i'm</c><00:46:15.520><c> bringing</c><00:46:15.760><c> this</c><00:46:16.000><c> up</c>

00:46:16.150 --> 00:46:16.160 align:start position:0%
unix pipes and i'm bringing this up
 

00:46:16.160 --> 00:46:20.470 align:start position:0%
unix pipes and i'm bringing this up
because<00:46:16.800><c> some</c><00:46:17.119><c> early</c><00:46:17.440><c> microkernels</c>

00:46:20.470 --> 00:46:20.480 align:start position:0%
 
 

00:46:20.480 --> 00:46:22.069 align:start position:0%
 
worked<00:46:20.800><c> in</c><00:46:20.960><c> sort</c><00:46:21.119><c> of</c><00:46:21.280><c> a</c><00:46:21.359><c> similar</c><00:46:21.680><c> way</c><00:46:21.839><c> to</c><00:46:21.920><c> what</c>

00:46:22.069 --> 00:46:22.079 align:start position:0%
worked in sort of a similar way to what
 

00:46:22.079 --> 00:46:23.589 align:start position:0%
worked in sort of a similar way to what
i'm<00:46:22.240><c> about</c><00:46:22.480><c> to</c><00:46:22.560><c> show</c><00:46:22.720><c> you</c><00:46:23.040><c> which</c><00:46:23.280><c> turned</c><00:46:23.520><c> out</c>

00:46:23.589 --> 00:46:23.599 align:start position:0%
i'm about to show you which turned out
 

00:46:23.599 --> 00:46:25.349 align:start position:0%
i'm about to show you which turned out
to<00:46:23.760><c> be</c><00:46:23.839><c> slow</c>

00:46:25.349 --> 00:46:25.359 align:start position:0%
to be slow
 

00:46:25.359 --> 00:46:29.910 align:start position:0%
to be slow
okay<00:46:25.599><c> so</c><00:46:26.839><c> um</c><00:46:28.160><c> let's</c><00:46:28.319><c> suppose</c><00:46:28.800><c> you</c><00:46:28.960><c> have</c>

00:46:29.910 --> 00:46:29.920 align:start position:0%
okay so um let's suppose you have
 

00:46:29.920 --> 00:46:32.630 align:start position:0%
okay so um let's suppose you have
uh<00:46:31.119><c> you</c><00:46:31.200><c> know</c><00:46:31.359><c> you</c><00:46:31.520><c> have</c><00:46:31.839><c> two</c><00:46:32.000><c> processes</c><00:46:32.480><c> we</c>

00:46:32.630 --> 00:46:32.640 align:start position:0%
uh you know you have two processes we
 

00:46:32.640 --> 00:46:34.630 align:start position:0%
uh you know you have two processes we
got<00:46:32.880><c> p1</c>

00:46:34.630 --> 00:46:34.640 align:start position:0%
got p1
 

00:46:34.640 --> 00:46:39.910 align:start position:0%
got p1
p1<00:46:35.119><c> wants</c><00:46:35.440><c> to</c><00:46:35.599><c> send</c><00:46:35.839><c> a</c><00:46:35.920><c> message</c><00:46:36.160><c> to</c><00:46:36.319><c> p2</c>

00:46:39.910 --> 00:46:39.920 align:start position:0%
 
 

00:46:39.920 --> 00:46:41.670 align:start position:0%
 
so<00:46:40.079><c> how</c><00:46:40.240><c> should</c><00:46:40.400><c> that</c><00:46:40.560><c> actually</c><00:46:40.880><c> work</c><00:46:41.119><c> well</c>

00:46:41.670 --> 00:46:41.680 align:start position:0%
so how should that actually work well
 

00:46:41.680 --> 00:46:43.589 align:start position:0%
so how should that actually work well
one<00:46:41.920><c> possibility</c><00:46:42.800><c> is</c><00:46:42.960><c> to</c><00:46:43.119><c> have</c>

00:46:43.589 --> 00:46:43.599 align:start position:0%
one possibility is to have
 

00:46:43.599 --> 00:46:47.030 align:start position:0%
one possibility is to have
a<00:46:43.839><c> send</c><00:46:44.480><c> system</c><00:46:44.960><c> call</c><00:46:46.240><c> and</c><00:46:46.480><c> you</c><00:46:46.560><c> give</c><00:46:46.800><c> send</c>

00:46:47.030 --> 00:46:47.040 align:start position:0%
a send system call and you give send
 

00:46:47.040 --> 00:46:48.470 align:start position:0%
a send system call and you give send
system<00:46:47.359><c> call</c><00:46:47.599><c> the</c><00:46:47.760><c> id</c>

00:46:48.470 --> 00:46:48.480 align:start position:0%
system call the id
 

00:46:48.480 --> 00:46:50.630 align:start position:0%
system call the id
of<00:46:48.560><c> the</c><00:46:49.839><c> thread</c><00:46:50.079><c> you</c><00:46:50.240><c> want</c><00:46:50.319><c> to</c><00:46:50.400><c> send</c><00:46:50.560><c> the</c>

00:46:50.630 --> 00:46:50.640 align:start position:0%
of the thread you want to send the
 

00:46:50.640 --> 00:46:52.710 align:start position:0%
of the thread you want to send the
message<00:46:51.040><c> to</c><00:46:51.440><c> and</c>

00:46:52.710 --> 00:46:52.720 align:start position:0%
message to and
 

00:46:52.720 --> 00:46:56.470 align:start position:0%
message to and
a<00:46:52.960><c> pointer</c><00:46:54.480><c> to</c><00:46:54.720><c> the</c><00:46:54.960><c> message</c><00:46:55.680><c> to</c><00:46:55.839><c> the</c><00:46:56.000><c> bytes</c>

00:46:56.470 --> 00:46:56.480 align:start position:0%
a pointer to the message to the bytes
 

00:46:56.480 --> 00:46:57.510 align:start position:0%
a pointer to the message to the bytes
maybe

00:46:57.510 --> 00:46:57.520 align:start position:0%
maybe
 

00:46:57.520 --> 00:46:58.870 align:start position:0%
maybe
that<00:46:57.680><c> you</c><00:46:57.839><c> actually</c><00:46:58.079><c> want</c><00:46:58.240><c> to</c><00:46:58.319><c> send</c><00:46:58.560><c> to</c><00:46:58.640><c> that</c>

00:46:58.870 --> 00:46:58.880 align:start position:0%
that you actually want to send to that
 

00:46:58.880 --> 00:47:00.550 align:start position:0%
that you actually want to send to that
process<00:46:59.280><c> so</c><00:46:59.680><c> this</c><00:46:59.839><c> is</c><00:46:59.920><c> a</c><00:47:00.000><c> system</c><00:47:00.240><c> call</c><00:47:00.480><c> so</c>

00:47:00.550 --> 00:47:00.560 align:start position:0%
process so this is a system call so
 

00:47:00.560 --> 00:47:02.230 align:start position:0%
process so this is a system call so
you're<00:47:00.640><c> going</c><00:47:00.720><c> to</c><00:47:00.800><c> jump</c><00:47:01.040><c> into</c><00:47:01.280><c> the</c><00:47:01.359><c> kernel</c>

00:47:02.230 --> 00:47:02.240 align:start position:0%
you're going to jump into the kernel
 

00:47:02.240 --> 00:47:04.470 align:start position:0%
you're going to jump into the kernel
um<00:47:03.119><c> you</c><00:47:03.200><c> know</c><00:47:03.359><c> maybe</c><00:47:03.599><c> we</c><00:47:03.760><c> designed</c><00:47:04.160><c> this</c>

00:47:04.470 --> 00:47:04.480 align:start position:0%
um you know maybe we designed this
 

00:47:04.480 --> 00:47:05.829 align:start position:0%
um you know maybe we designed this
patterned<00:47:04.880><c> after</c><00:47:05.359><c> uh</c>

00:47:05.829 --> 00:47:05.839 align:start position:0%
patterned after uh
 

00:47:05.839 --> 00:47:08.069 align:start position:0%
patterned after uh
pipes<00:47:06.160><c> and</c><00:47:06.319><c> xv6</c><00:47:07.040><c> and</c><00:47:07.440><c> so</c><00:47:07.520><c> you</c><00:47:07.599><c> can</c><00:47:07.760><c> imagine</c>

00:47:08.069 --> 00:47:08.079 align:start position:0%
pipes and xv6 and so you can imagine
 

00:47:08.079 --> 00:47:09.270 align:start position:0%
pipes and xv6 and so you can imagine
there<00:47:08.240><c> being</c><00:47:08.480><c> a</c>

00:47:09.270 --> 00:47:09.280 align:start position:0%
there being a
 

00:47:09.280 --> 00:47:11.589 align:start position:0%
there being a
buffer<00:47:09.680><c> of</c><00:47:10.240><c> messages</c><00:47:10.800><c> waiting</c><00:47:11.359><c> you</c><00:47:11.520><c> know</c>

00:47:11.589 --> 00:47:11.599 align:start position:0%
buffer of messages waiting you know
 

00:47:11.599 --> 00:47:13.270 align:start position:0%
buffer of messages waiting you know
maybe<00:47:12.000><c> p2</c><00:47:12.400><c> is</c><00:47:12.480><c> doing</c><00:47:12.640><c> something</c><00:47:12.880><c> else</c><00:47:13.119><c> right</c>

00:47:13.270 --> 00:47:13.280 align:start position:0%
maybe p2 is doing something else right
 

00:47:13.280 --> 00:47:13.910 align:start position:0%
maybe p2 is doing something else right
now

00:47:13.910 --> 00:47:13.920 align:start position:0%
now
 

00:47:13.920 --> 00:47:15.109 align:start position:0%
now
maybe<00:47:14.160><c> it's</c><00:47:14.319><c> a</c><00:47:14.400><c> server</c><00:47:14.720><c> it's</c><00:47:14.800><c> serving</c>

00:47:15.109 --> 00:47:15.119 align:start position:0%
maybe it's a server it's serving
 

00:47:15.119 --> 00:47:16.710 align:start position:0%
maybe it's a server it's serving
somebody<00:47:15.440><c> else's</c><00:47:15.680><c> request</c><00:47:16.160><c> so</c><00:47:16.400><c> it's</c><00:47:16.560><c> not</c>

00:47:16.710 --> 00:47:16.720 align:start position:0%
somebody else's request so it's not
 

00:47:16.720 --> 00:47:18.870 align:start position:0%
somebody else's request so it's not
ready<00:47:16.960><c> to</c><00:47:17.040><c> handle</c><00:47:17.280><c> your</c><00:47:17.520><c> request</c>

00:47:18.870 --> 00:47:18.880 align:start position:0%
ready to handle your request
 

00:47:18.880 --> 00:47:20.549 align:start position:0%
ready to handle your request
you<00:47:18.960><c> can</c><00:47:19.119><c> imagine</c><00:47:19.520><c> maybe</c><00:47:19.839><c> a</c><00:47:20.000><c> buffer</c><00:47:20.400><c> of</c>

00:47:20.549 --> 00:47:20.559 align:start position:0%
you can imagine maybe a buffer of
 

00:47:20.559 --> 00:47:23.190 align:start position:0%
you can imagine maybe a buffer of
waiting<00:47:20.960><c> messages</c>

00:47:23.190 --> 00:47:23.200 align:start position:0%
waiting messages
 

00:47:23.200 --> 00:47:25.109 align:start position:0%
waiting messages
in<00:47:23.280><c> the</c><00:47:23.440><c> kernel</c><00:47:23.839><c> like</c><00:47:24.000><c> a</c><00:47:24.079><c> pipe</c><00:47:24.319><c> buffer</c><00:47:25.040><c> and</c>

00:47:25.109 --> 00:47:25.119 align:start position:0%
in the kernel like a pipe buffer and
 

00:47:25.119 --> 00:47:27.270 align:start position:0%
in the kernel like a pipe buffer and
when<00:47:25.280><c> you</c><00:47:25.359><c> call</c><00:47:25.599><c> send</c>

00:47:27.270 --> 00:47:27.280 align:start position:0%
when you call send
 

00:47:27.280 --> 00:47:30.069 align:start position:0%
when you call send
it<00:47:28.319><c> appends</c><00:47:28.720><c> your</c><00:47:28.960><c> message</c><00:47:29.359><c> to</c><00:47:29.520><c> this</c><00:47:29.680><c> buffer</c>

00:47:30.069 --> 00:47:30.079 align:start position:0%
it appends your message to this buffer
 

00:47:30.079 --> 00:47:32.069 align:start position:0%
it appends your message to this buffer
waiting<00:47:30.400><c> for</c><00:47:30.640><c> pdu</c><00:47:30.960><c> to</c><00:47:31.040><c> receive</c><00:47:31.440><c> it</c>

00:47:32.069 --> 00:47:32.079 align:start position:0%
waiting for pdu to receive it
 

00:47:32.079 --> 00:47:35.990 align:start position:0%
waiting for pdu to receive it
now<00:47:32.559><c> in</c><00:47:32.640><c> fact</c><00:47:32.960><c> almost</c><00:47:33.359><c> always</c>

00:47:35.990 --> 00:47:36.000 align:start position:0%
 
 

00:47:36.000 --> 00:47:38.549 align:start position:0%
 
in<00:47:36.160><c> these</c><00:47:36.400><c> systems</c><00:47:37.520><c> you</c><00:47:37.680><c> rarely</c><00:47:38.000><c> just</c><00:47:38.240><c> wanted</c>

00:47:38.549 --> 00:47:38.559 align:start position:0%
in these systems you rarely just wanted
 

00:47:38.559 --> 00:47:39.750 align:start position:0%
in these systems you rarely just wanted
to<00:47:38.640><c> send</c><00:47:38.880><c> a</c><00:47:38.960><c> message</c>

00:47:39.750 --> 00:47:39.760 align:start position:0%
to send a message
 

00:47:39.760 --> 00:47:41.030 align:start position:0%
to send a message
you<00:47:39.920><c> almost</c><00:47:40.240><c> always</c><00:47:40.480><c> wanted</c><00:47:40.800><c> to</c><00:47:40.880><c> get</c><00:47:40.960><c> a</c>

00:47:41.030 --> 00:47:41.040 align:start position:0%
you almost always wanted to get a
 

00:47:41.040 --> 00:47:43.510 align:start position:0%
you almost always wanted to get a
response<00:47:41.599><c> to</c><00:47:41.839><c> you</c><00:47:41.920><c> wanted</c><00:47:42.319><c> an</c><00:47:42.480><c> rpc</c><00:47:43.040><c> or</c><00:47:43.200><c> remote</c>

00:47:43.510 --> 00:47:43.520 align:start position:0%
response to you wanted an rpc or remote
 

00:47:43.520 --> 00:47:45.430 align:start position:0%
response to you wanted an rpc or remote
procedure<00:47:44.079><c> call</c>

00:47:45.430 --> 00:47:45.440 align:start position:0%
procedure call
 

00:47:45.440 --> 00:47:47.750 align:start position:0%
procedure call
operation<00:47:46.000><c> so</c><00:47:46.400><c> in</c><00:47:46.559><c> fact</c><00:47:46.960><c> p1</c><00:47:47.280><c> would</c><00:47:47.440><c> probably</c>

00:47:47.750 --> 00:47:47.760 align:start position:0%
operation so in fact p1 would probably
 

00:47:47.760 --> 00:47:49.829 align:start position:0%
operation so in fact p1 would probably
follow<00:47:48.000><c> this</c><00:47:48.240><c> immediately</c><00:47:48.720><c> by</c><00:47:48.960><c> a</c><00:47:49.040><c> receive</c><00:47:49.680><c> to</c>

00:47:49.829 --> 00:47:49.839 align:start position:0%
follow this immediately by a receive to
 

00:47:49.839 --> 00:47:52.150 align:start position:0%
follow this immediately by a receive to
try<00:47:50.000><c> to</c><00:47:50.079><c> get</c><00:47:50.240><c> the</c><00:47:50.400><c> response</c><00:47:50.880><c> back</c>

00:47:52.150 --> 00:47:52.160 align:start position:0%
try to get the response back
 

00:47:52.160 --> 00:47:54.710 align:start position:0%
try to get the response back
but<00:47:52.400><c> in</c><00:47:52.480><c> general</c><00:47:53.520><c> let's</c><00:47:53.680><c> just</c><00:47:53.839><c> imagine</c><00:47:54.559><c> we're</c>

00:47:54.710 --> 00:47:54.720 align:start position:0%
but in general let's just imagine we're
 

00:47:54.720 --> 00:47:56.549 align:start position:0%
but in general let's just imagine we're
doing<00:47:54.960><c> a</c><00:47:55.040><c> one-way</c><00:47:55.440><c> ipc</c><00:47:55.839><c> for</c><00:47:56.000><c> the</c><00:47:56.079><c> moment</c><00:47:56.319><c> so</c>

00:47:56.549 --> 00:47:56.559 align:start position:0%
doing a one-way ipc for the moment so
 

00:47:56.559 --> 00:47:57.430 align:start position:0%
doing a one-way ipc for the moment so
send<00:47:56.880><c> would</c>

00:47:57.430 --> 00:47:57.440 align:start position:0%
send would
 

00:47:57.440 --> 00:48:00.630 align:start position:0%
send would
append<00:47:57.839><c> your</c><00:47:58.079><c> message</c><00:47:59.119><c> uh</c><00:47:59.440><c> to</c><00:47:59.599><c> the</c><00:48:00.079><c> in</c><00:48:00.319><c> kernel</c>

00:48:00.630 --> 00:48:00.640 align:start position:0%
append your message uh to the in kernel
 

00:48:00.640 --> 00:48:01.829 align:start position:0%
append your message uh to the in kernel
buffer

00:48:01.829 --> 00:48:01.839 align:start position:0%
buffer
 

00:48:01.839 --> 00:48:04.150 align:start position:0%
buffer
we<00:48:02.000><c> would</c><00:48:02.160><c> have</c><00:48:02.240><c> to</c><00:48:02.400><c> copy</c><00:48:03.359><c> the</c><00:48:03.440><c> message</c><00:48:03.839><c> bytes</c>

00:48:04.150 --> 00:48:04.160 align:start position:0%
we would have to copy the message bytes
 

00:48:04.160 --> 00:48:06.150 align:start position:0%
we would have to copy the message bytes
from<00:48:04.319><c> user</c><00:48:04.640><c> space</c><00:48:04.960><c> into</c><00:48:05.119><c> this</c><00:48:05.280><c> buffer</c>

00:48:06.150 --> 00:48:06.160 align:start position:0%
from user space into this buffer
 

00:48:06.160 --> 00:48:08.150 align:start position:0%
from user space into this buffer
and<00:48:06.319><c> then</c><00:48:06.480><c> return</c><00:48:07.040><c> and</c><00:48:07.280><c> process</c><00:48:07.680><c> one</c><00:48:07.839><c> can</c><00:48:08.000><c> do</c>

00:48:08.150 --> 00:48:08.160 align:start position:0%
and then return and process one can do
 

00:48:08.160 --> 00:48:09.589 align:start position:0%
and then return and process one can do
something<00:48:08.480><c> else</c><00:48:08.720><c> like</c>

00:48:09.589 --> 00:48:09.599 align:start position:0%
something else like
 

00:48:09.599 --> 00:48:12.630 align:start position:0%
something else like
maybe<00:48:10.000><c> prepare</c><00:48:10.319><c> to</c><00:48:10.480><c> receive</c><00:48:10.800><c> the</c><00:48:10.880><c> response</c>

00:48:12.630 --> 00:48:12.640 align:start position:0%
maybe prepare to receive the response
 

00:48:12.640 --> 00:48:16.069 align:start position:0%
maybe prepare to receive the response
after<00:48:12.960><c> a</c><00:48:12.960><c> while</c><00:48:13.200><c> p2</c>

00:48:16.069 --> 00:48:16.079 align:start position:0%
 
 

00:48:16.079 --> 00:48:17.589 align:start position:0%
 
is<00:48:16.240><c> going</c><00:48:16.319><c> to</c><00:48:16.720><c> want</c><00:48:16.880><c> to</c><00:48:16.960><c> receive</c><00:48:17.280><c> the</c><00:48:17.359><c> next</c>

00:48:17.589 --> 00:48:17.599 align:start position:0%
is going to want to receive the next
 

00:48:17.599 --> 00:48:19.190 align:start position:0%
is going to want to receive the next
message<00:48:18.000><c> just</c><00:48:18.240><c> going</c><00:48:18.319><c> to</c><00:48:18.480><c> make</c><00:48:18.640><c> the</c><00:48:18.800><c> receive</c>

00:48:19.190 --> 00:48:19.200 align:start position:0%
message just going to make the receive
 

00:48:19.200 --> 00:48:22.390 align:start position:0%
message just going to make the receive
system<00:48:19.599><c> call</c>

00:48:22.390 --> 00:48:22.400 align:start position:0%
 
 

00:48:22.400 --> 00:48:25.430 align:start position:0%
 
and<00:48:23.359><c> that's</c><00:48:23.680><c> going</c><00:48:23.760><c> to</c><00:48:23.920><c> return</c><00:48:24.559><c> the</c><00:48:24.800><c> id</c><00:48:25.200><c> of</c><00:48:25.280><c> the</c>

00:48:25.430 --> 00:48:25.440 align:start position:0%
and that's going to return the id of the
 

00:48:25.440 --> 00:48:27.109 align:start position:0%
and that's going to return the id of the
sender

00:48:27.109 --> 00:48:27.119 align:start position:0%
sender
 

00:48:27.119 --> 00:48:31.190 align:start position:0%
sender
and<00:48:27.359><c> copy</c><00:48:27.680><c> the</c><00:48:27.839><c> message</c><00:48:28.880><c> into</c><00:48:29.119><c> p2's</c><00:48:29.599><c> memory</c>

00:48:31.190 --> 00:48:31.200 align:start position:0%
and copy the message into p2's memory
 

00:48:31.200 --> 00:48:32.790 align:start position:0%
and copy the message into p2's memory
that's<00:48:31.440><c> going</c><00:48:31.520><c> to</c><00:48:31.599><c> take</c><00:48:31.760><c> the</c><00:48:32.240><c> front</c><00:48:32.480><c> message</c>

00:48:32.790 --> 00:48:32.800 align:start position:0%
that's going to take the front message
 

00:48:32.800 --> 00:48:36.470 align:start position:0%
that's going to take the front message
off<00:48:32.960><c> the</c><00:48:33.040><c> queue</c><00:48:33.359><c> copying</c><00:48:33.680><c> the</c><00:48:33.760><c> p2's</c><00:48:34.160><c> memory</c>

00:48:36.470 --> 00:48:36.480 align:start position:0%
off the queue copying the p2's memory
 

00:48:36.480 --> 00:48:40.790 align:start position:0%
off the queue copying the p2's memory
and<00:48:36.640><c> then</c><00:48:36.800><c> return</c>

00:48:40.790 --> 00:48:40.800 align:start position:0%
 
 

00:48:40.800 --> 00:48:46.950 align:start position:0%
 
so<00:48:41.920><c> um</c>

00:48:46.950 --> 00:48:46.960 align:start position:0%
 
 

00:48:46.960 --> 00:48:50.150 align:start position:0%
 
this<00:48:47.200><c> is</c><00:48:47.359><c> called</c><00:48:47.760><c> uh</c>

00:48:50.150 --> 00:48:50.160 align:start position:0%
 
 

00:48:50.160 --> 00:48:52.790 align:start position:0%
 
there's<00:48:50.400><c> some</c><00:48:51.200><c> words</c><00:48:51.520><c> for</c><00:48:51.680><c> this</c><00:48:52.240><c> uh</c><00:48:52.480><c> whose</c>

00:48:52.790 --> 00:48:52.800 align:start position:0%
there's some words for this uh whose
 

00:48:52.800 --> 00:48:54.309 align:start position:0%
there's some words for this uh whose
opposites<00:48:53.200><c> you'll</c><00:48:53.359><c> see</c><00:48:53.599><c> and</c>

00:48:54.309 --> 00:48:54.319 align:start position:0%
opposites you'll see and
 

00:48:54.319 --> 00:48:56.150 align:start position:0%
opposites you'll see and
you<00:48:54.480><c> saw</c><00:48:54.640><c> in</c><00:48:54.720><c> today's</c><00:48:55.119><c> paper</c><00:48:55.599><c> this</c><00:48:55.839><c> is</c><00:48:55.920><c> called</c>

00:48:56.150 --> 00:48:56.160 align:start position:0%
you saw in today's paper this is called
 

00:48:56.160 --> 00:48:58.790 align:start position:0%
you saw in today's paper this is called
an<00:48:56.319><c> asynchronous</c>

00:48:58.790 --> 00:48:58.800 align:start position:0%
an asynchronous
 

00:48:58.800 --> 00:49:01.990 align:start position:0%
an asynchronous
scheme<00:49:01.359><c> because</c>

00:49:01.990 --> 00:49:02.000 align:start position:0%
scheme because
 

00:49:02.000 --> 00:49:03.589 align:start position:0%
scheme because
p1<00:49:02.480><c> sends</c><00:49:02.720><c> a</c><00:49:02.800><c> message</c><00:49:03.119><c> without</c><00:49:03.359><c> having</c><00:49:03.520><c> to</c>

00:49:03.589 --> 00:49:03.599 align:start position:0%
p1 sends a message without having to
 

00:49:03.599 --> 00:49:04.950 align:start position:0%
p1 sends a message without having to
wait<00:49:03.760><c> for</c><00:49:04.000><c> anything</c><00:49:04.240><c> it</c><00:49:04.319><c> just</c><00:49:04.400><c> appends</c><00:49:04.880><c> to</c>

00:49:04.950 --> 00:49:04.960 align:start position:0%
wait for anything it just appends to
 

00:49:04.960 --> 00:49:07.190 align:start position:0%
wait for anything it just appends to
this<00:49:05.200><c> queue</c><00:49:05.440><c> and</c><00:49:05.520><c> returns</c>

00:49:07.190 --> 00:49:07.200 align:start position:0%
this queue and returns
 

00:49:07.200 --> 00:49:12.549 align:start position:0%
this queue and returns
and<00:49:07.359><c> it's</c><00:49:07.599><c> called</c><00:49:08.000><c> a</c><00:49:08.319><c> buffered</c><00:49:08.800><c> system</c>

00:49:12.549 --> 00:49:12.559 align:start position:0%
 
 

00:49:12.559 --> 00:49:16.069 align:start position:0%
 
because<00:49:14.079><c> the</c><00:49:14.240><c> kernel</c><00:49:15.119><c> copies</c><00:49:15.520><c> each</c><00:49:15.760><c> message</c>

00:49:16.069 --> 00:49:16.079 align:start position:0%
because the kernel copies each message
 

00:49:16.079 --> 00:49:18.150 align:start position:0%
because the kernel copies each message
into<00:49:16.240><c> the</c><00:49:16.319><c> buffer</c><00:49:16.720><c> into</c><00:49:16.880><c> its</c><00:49:17.119><c> internal</c><00:49:17.440><c> buffer</c>

00:49:18.150 --> 00:49:18.160 align:start position:0%
into the buffer into its internal buffer
 

00:49:18.160 --> 00:49:20.309 align:start position:0%
into the buffer into its internal buffer
on<00:49:18.400><c> ascend</c><00:49:18.800><c> and</c><00:49:18.880><c> then</c><00:49:19.040><c> later</c><00:49:20.079><c> when</c><00:49:20.240><c> the</c>

00:49:20.309 --> 00:49:20.319 align:start position:0%
on ascend and then later when the
 

00:49:20.319 --> 00:49:21.829 align:start position:0%
on ascend and then later when the
receive<00:49:20.640><c> happens</c><00:49:20.960><c> it</c><00:49:21.119><c> copies</c><00:49:21.440><c> the</c><00:49:21.520><c> message</c>

00:49:21.829 --> 00:49:21.839 align:start position:0%
receive happens it copies the message
 

00:49:21.839 --> 00:49:22.630 align:start position:0%
receive happens it copies the message
out<00:49:22.000><c> of</c><00:49:22.079><c> the</c><00:49:22.160><c> buffer</c>

00:49:22.630 --> 00:49:22.640 align:start position:0%
out of the buffer
 

00:49:22.640 --> 00:49:24.630 align:start position:0%
out of the buffer
into<00:49:22.880><c> the</c><00:49:22.960><c> target</c><00:49:23.280><c> so</c><00:49:23.440><c> this</c><00:49:23.599><c> is</c><00:49:23.920><c> asynchronous</c>

00:49:24.630 --> 00:49:24.640 align:start position:0%
into the target so this is asynchronous
 

00:49:24.640 --> 00:49:27.030 align:start position:0%
into the target so this is asynchronous
and<00:49:24.720><c> buffered</c>

00:49:27.030 --> 00:49:27.040 align:start position:0%
and buffered
 

00:49:27.040 --> 00:49:29.190 align:start position:0%
and buffered
if<00:49:27.200><c> you're</c><00:49:27.280><c> doing</c><00:49:27.520><c> a</c><00:49:27.599><c> full</c><00:49:27.839><c> request</c><00:49:28.319><c> response</c>

00:49:29.190 --> 00:49:29.200 align:start position:0%
if you're doing a full request response
 

00:49:29.200 --> 00:49:31.430 align:start position:0%
if you're doing a full request response
pair<00:49:29.839><c> then</c><00:49:30.079><c> p1</c><00:49:30.400><c> is</c><00:49:30.480><c> going</c><00:49:30.559><c> to</c><00:49:30.640><c> call</c><00:49:30.880><c> send</c><00:49:31.200><c> sends</c>

00:49:31.430 --> 00:49:31.440 align:start position:0%
pair then p1 is going to call send sends
 

00:49:31.440 --> 00:49:32.309 align:start position:0%
pair then p1 is going to call send sends
going<00:49:31.599><c> to</c><00:49:31.680><c> return</c>

00:49:32.309 --> 00:49:32.319 align:start position:0%
going to return
 

00:49:32.319 --> 00:49:34.790 align:start position:0%
going to return
p1<00:49:32.640><c> is</c><00:49:32.800><c> then</c><00:49:32.960><c> immediately</c><00:49:34.000><c> let's</c><00:49:34.240><c> assume</c>

00:49:34.790 --> 00:49:34.800 align:start position:0%
p1 is then immediately let's assume
 

00:49:34.800 --> 00:49:35.589 align:start position:0%
p1 is then immediately let's assume
we're<00:49:34.960><c> going</c><00:49:34.960><c> to</c><00:49:35.040><c> assume</c><00:49:35.280><c> that</c><00:49:35.440><c> there's</c>

00:49:35.589 --> 00:49:35.599 align:start position:0%
we're going to assume that there's
 

00:49:35.599 --> 00:49:35.990 align:start position:0%
we're going to assume that there's
really

00:49:35.990 --> 00:49:36.000 align:start position:0%
really
 

00:49:36.000 --> 00:49:37.829 align:start position:0%
really
sort<00:49:36.160><c> of</c><00:49:36.319><c> two</c><00:49:36.640><c> sets</c><00:49:36.880><c> of</c><00:49:36.960><c> buffers</c><00:49:37.280><c> one</c><00:49:37.520><c> for</c><00:49:37.599><c> each</c>

00:49:37.829 --> 00:49:37.839 align:start position:0%
sort of two sets of buffers one for each
 

00:49:37.839 --> 00:49:39.990 align:start position:0%
sort of two sets of buffers one for each
direction<00:49:38.880><c> p1</c><00:49:39.200><c> is</c><00:49:39.280><c> immediately</c><00:49:39.760><c> going</c><00:49:39.920><c> to</c>

00:49:39.990 --> 00:49:40.000 align:start position:0%
direction p1 is immediately going to
 

00:49:40.000 --> 00:49:42.790 align:start position:0%
direction p1 is immediately going to
call<00:49:40.240><c> receive</c>

00:49:42.790 --> 00:49:42.800 align:start position:0%
call receive
 

00:49:42.800 --> 00:49:44.950 align:start position:0%
call receive
um<00:49:43.040><c> receives</c><00:49:43.440><c> gonna</c><00:49:43.680><c> wait</c><00:49:44.480><c> gonna</c><00:49:44.720><c> need</c><00:49:44.880><c> to</c>

00:49:44.950 --> 00:49:44.960 align:start position:0%
um receives gonna wait gonna need to
 

00:49:44.960 --> 00:49:46.549 align:start position:0%
um receives gonna wait gonna need to
wait<00:49:45.200><c> for</c><00:49:45.359><c> something</c><00:49:45.680><c> to</c><00:49:45.839><c> appear</c><00:49:46.319><c> in</c><00:49:46.400><c> the</c>

00:49:46.549 --> 00:49:46.559 align:start position:0%
wait for something to appear in the
 

00:49:46.559 --> 00:49:47.829 align:start position:0%
wait for something to appear in the
reply

00:49:47.829 --> 00:49:47.839 align:start position:0%
reply
 

00:49:47.839 --> 00:49:49.829 align:start position:0%
reply
buffer<00:49:48.640><c> so</c><00:49:48.800><c> it's</c><00:49:48.880><c> gonna</c><00:49:49.119><c> have</c><00:49:49.200><c> to</c><00:49:49.359><c> yield</c><00:49:49.680><c> the</c>

00:49:49.829 --> 00:49:49.839 align:start position:0%
buffer so it's gonna have to yield the
 

00:49:49.839 --> 00:49:51.349 align:start position:0%
buffer so it's gonna have to yield the
cpu<00:49:50.400><c> it's</c><00:49:50.559><c> gonna</c><00:49:50.720><c> have</c><00:49:50.800><c> to</c><00:49:50.880><c> do</c><00:49:50.960><c> something</c><00:49:51.200><c> i</c>

00:49:51.349 --> 00:49:51.359 align:start position:0%
cpu it's gonna have to do something i
 

00:49:51.359 --> 00:49:54.309 align:start position:0%
cpu it's gonna have to do something i
call<00:49:51.599><c> sleep</c><00:49:52.000><c> in</c><00:49:52.240><c> xv6</c><00:49:52.720><c> to</c><00:49:52.880><c> yield</c><00:49:53.119><c> the</c><00:49:53.200><c> cpu</c>

00:49:54.309 --> 00:49:54.319 align:start position:0%
call sleep in xv6 to yield the cpu
 

00:49:54.319 --> 00:49:56.870 align:start position:0%
call sleep in xv6 to yield the cpu
um<00:49:54.960><c> and</c><00:49:55.119><c> on</c><00:49:55.280><c> a</c><00:49:55.760><c> single</c><00:49:56.000><c> cpu</c><00:49:56.480><c> system</c><00:49:56.720><c> it</c><00:49:56.880><c> may</c>

00:49:56.870 --> 00:49:56.880 align:start position:0%
um and on a single cpu system it may
 

00:49:56.880 --> 00:49:58.710 align:start position:0%
um and on a single cpu system it may
maybe<00:49:57.200><c> only</c><00:49:57.520><c> at</c><00:49:57.599><c> this</c><00:49:57.920><c> point</c>

00:49:58.710 --> 00:49:58.720 align:start position:0%
maybe only at this point
 

00:49:58.720 --> 00:50:01.589 align:start position:0%
maybe only at this point
that<00:49:58.960><c> p1</c><00:49:59.599><c> gives</c><00:49:59.920><c> up</c><00:50:00.000><c> the</c><00:50:00.160><c> cpu</c><00:50:00.640><c> and</c><00:50:00.720><c> now</c><00:50:00.960><c> p2</c><00:50:01.440><c> can</c>

00:50:01.589 --> 00:50:01.599 align:start position:0%
that p1 gives up the cpu and now p2 can
 

00:50:01.599 --> 00:50:02.549 align:start position:0%
that p1 gives up the cpu and now p2 can
run

00:50:02.549 --> 00:50:02.559 align:start position:0%
run
 

00:50:02.559 --> 00:50:04.870 align:start position:0%
run
and<00:50:02.800><c> indeed</c><00:50:03.119><c> um</c><00:50:03.680><c> the</c><00:50:03.839><c> hardware</c><00:50:04.319><c> in</c><00:50:04.400><c> this</c><00:50:04.640><c> era</c>

00:50:04.870 --> 00:50:04.880 align:start position:0%
and indeed um the hardware in this era
 

00:50:04.880 --> 00:50:05.910 align:start position:0%
and indeed um the hardware in this era
was<00:50:05.119><c> almost</c><00:50:05.359><c> always</c>

00:50:05.910 --> 00:50:05.920 align:start position:0%
was almost always
 

00:50:05.920 --> 00:50:09.670 align:start position:0%
was almost always
single<00:50:06.319><c> core</c><00:50:07.920><c> certainly</c><00:50:08.240><c> this</c><00:50:08.480><c> paper</c>

00:50:09.670 --> 00:50:09.680 align:start position:0%
single core certainly this paper
 

00:50:09.680 --> 00:50:12.230 align:start position:0%
single core certainly this paper
is<00:50:09.760><c> running</c><00:50:10.079><c> on</c><00:50:10.240><c> single</c><00:50:10.480><c> core</c><00:50:10.720><c> hardware</c><00:50:11.119><c> so</c><00:50:11.920><c> p1</c>

00:50:12.230 --> 00:50:12.240 align:start position:0%
is running on single core hardware so p1
 

00:50:12.240 --> 00:50:12.790 align:start position:0%
is running on single core hardware so p1
is<00:50:12.400><c> going</c><00:50:12.480><c> to</c>

00:50:12.790 --> 00:50:12.800 align:start position:0%
is going to
 

00:50:12.800 --> 00:50:14.790 align:start position:0%
is going to
it's<00:50:12.960><c> going</c><00:50:13.040><c> to</c><00:50:13.119><c> be</c><00:50:13.280><c> v1</c><00:50:13.680><c> executing</c><00:50:14.160><c> and</c><00:50:14.240><c> p1</c><00:50:14.640><c> not</c>

00:50:14.790 --> 00:50:14.800 align:start position:0%
it's going to be v1 executing and p1 not
 

00:50:14.800 --> 00:50:16.870 align:start position:0%
it's going to be v1 executing and p1 not
executing<00:50:15.359><c> until</c><00:50:15.680><c> p1</c><00:50:16.000><c> finally</c><00:50:16.319><c> gives</c><00:50:16.559><c> up</c><00:50:16.720><c> the</c>

00:50:16.870 --> 00:50:16.880 align:start position:0%
executing until p1 finally gives up the
 

00:50:16.880 --> 00:50:18.470 align:start position:0%
executing until p1 finally gives up the
cpu<00:50:17.440><c> and</c><00:50:17.599><c> receive</c>

00:50:18.470 --> 00:50:18.480 align:start position:0%
cpu and receive
 

00:50:18.480 --> 00:50:20.630 align:start position:0%
cpu and receive
waiting<00:50:18.720><c> for</c><00:50:18.880><c> a</c><00:50:18.960><c> message</c><00:50:19.280><c> to</c><00:50:19.440><c> appear</c><00:50:19.839><c> here</c><00:50:20.480><c> and</c>

00:50:20.630 --> 00:50:20.640 align:start position:0%
waiting for a message to appear here and
 

00:50:20.640 --> 00:50:22.549 align:start position:0%
waiting for a message to appear here and
only<00:50:20.880><c> then</c><00:50:21.119><c> will</c><00:50:21.280><c> p2</c><00:50:21.680><c> be</c><00:50:21.839><c> scheduled</c><00:50:22.319><c> maybe</c>

00:50:22.549 --> 00:50:22.559 align:start position:0%
only then will p2 be scheduled maybe
 

00:50:22.559 --> 00:50:24.150 align:start position:0%
only then will p2 be scheduled maybe
it'll<00:50:22.720><c> call</c><00:50:22.960><c> receive</c>

00:50:24.150 --> 00:50:24.160 align:start position:0%
it'll call receive
 

00:50:24.160 --> 00:50:26.309 align:start position:0%
it'll call receive
there's<00:50:24.319><c> people</c><00:50:24.640><c> copy</c><00:50:24.960><c> the</c><00:50:25.040><c> message</c><00:50:26.000><c> and</c><00:50:26.079><c> then</c>

00:50:26.309 --> 00:50:26.319 align:start position:0%
there's people copy the message and then
 

00:50:26.319 --> 00:50:27.270 align:start position:0%
there's people copy the message and then
p2

00:50:27.270 --> 00:50:27.280 align:start position:0%
p2
 

00:50:27.280 --> 00:50:31.190 align:start position:0%
p2
will<00:50:27.440><c> make</c><00:50:27.680><c> its</c><00:50:27.839><c> call</c><00:50:28.079><c> to</c><00:50:28.240><c> send</c>

00:50:31.190 --> 00:50:31.200 align:start position:0%
 
 

00:50:31.200 --> 00:50:34.790 align:start position:0%
 
um<00:50:32.640><c> to</c><00:50:32.800><c> append</c><00:50:33.119><c> its</c><00:50:33.280><c> reply</c>

00:50:34.790 --> 00:50:34.800 align:start position:0%
um to append its reply
 

00:50:34.800 --> 00:50:37.589 align:start position:0%
um to append its reply
um<00:50:36.000><c> and</c><00:50:36.160><c> then</c><00:50:36.400><c> the</c><00:50:36.559><c> send</c><00:50:36.800><c> system</c><00:50:37.119><c> call</c><00:50:37.280><c> would</c>

00:50:37.589 --> 00:50:37.599 align:start position:0%
um and then the send system call would
 

00:50:37.599 --> 00:50:39.270 align:start position:0%
um and then the send system call would
return<00:50:37.839><c> to</c><00:50:38.000><c> p2</c><00:50:38.559><c> and</c><00:50:38.800><c> at</c><00:50:38.960><c> some</c><00:50:39.119><c> point</c>

00:50:39.270 --> 00:50:39.280 align:start position:0%
return to p2 and at some point
 

00:50:39.280 --> 00:50:41.109 align:start position:0%
return to p2 and at some point
presumably<00:50:39.680><c> p2</c><00:50:40.000><c> will</c><00:50:40.160><c> give</c><00:50:40.319><c> up</c><00:50:40.400><c> the</c><00:50:40.559><c> cpu</c>

00:50:41.109 --> 00:50:41.119 align:start position:0%
presumably p2 will give up the cpu
 

00:50:41.119 --> 00:50:44.069 align:start position:0%
presumably p2 will give up the cpu
maybe<00:50:41.359><c> the</c><00:50:41.440><c> timer</c><00:50:41.839><c> will</c><00:50:41.920><c> go</c><00:50:42.160><c> off</c><00:50:42.880><c> then</c><00:50:43.119><c> p1</c><00:50:43.839><c> 1</c>

00:50:44.069 --> 00:50:44.079 align:start position:0%
maybe the timer will go off then p1 1
 

00:50:44.079 --> 00:50:46.470 align:start position:0%
maybe the timer will go off then p1 1
will<00:50:44.240><c> resume</c><00:50:44.640><c> execution</c><00:50:45.119><c> in</c><00:50:45.200><c> the</c><00:50:45.280><c> kernel</c>

00:50:46.470 --> 00:50:46.480 align:start position:0%
will resume execution in the kernel
 

00:50:46.480 --> 00:50:47.750 align:start position:0%
will resume execution in the kernel
see<00:50:46.640><c> that</c><00:50:46.800><c> there's</c><00:50:46.960><c> a</c><00:50:47.040><c> message</c><00:50:47.359><c> there</c><00:50:47.680><c> and</c>

00:50:47.750 --> 00:50:47.760 align:start position:0%
see that there's a message there and
 

00:50:47.760 --> 00:50:50.309 align:start position:0%
see that there's a message there and
return<00:50:48.079><c> it</c><00:50:48.160><c> back</c><00:50:48.319><c> to</c><00:50:48.400><c> user</c><00:50:48.720><c> space</c>

00:50:50.309 --> 00:50:50.319 align:start position:0%
return it back to user space
 

00:50:50.319 --> 00:50:52.870 align:start position:0%
return it back to user space
and<00:50:50.640><c> so</c><00:50:50.880><c> that</c><00:50:51.040><c> means</c><00:50:51.280><c> that</c><00:50:51.440><c> in</c><00:50:51.599><c> this</c><00:50:52.079><c> design</c>

00:50:52.870 --> 00:50:52.880 align:start position:0%
and so that means that in this design
 

00:50:52.880 --> 00:50:55.349 align:start position:0%
and so that means that in this design
this<00:50:53.040><c> slow</c><00:50:53.440><c> design</c>

00:50:55.349 --> 00:50:55.359 align:start position:0%
this slow design
 

00:50:55.359 --> 00:50:57.910 align:start position:0%
this slow design
there's<00:50:55.920><c> in</c><00:50:56.000><c> order</c><00:50:56.319><c> to</c><00:50:56.400><c> have</c><00:50:56.800><c> a</c><00:50:56.880><c> request</c><00:50:57.680><c> and</c><00:50:57.839><c> a</c>

00:50:57.910 --> 00:50:57.920 align:start position:0%
there's in order to have a request and a
 

00:50:57.920 --> 00:51:01.910 align:start position:0%
there's in order to have a request and a
response

00:51:01.910 --> 00:51:01.920 align:start position:0%
 
 

00:51:01.920 --> 00:51:05.349 align:start position:0%
 
there's<00:51:02.160><c> four</c><00:51:02.480><c> system</c><00:51:02.880><c> calls</c><00:51:03.920><c> two</c><00:51:04.160><c> sends</c>

00:51:05.349 --> 00:51:05.359 align:start position:0%
there's four system calls two sends
 

00:51:05.359 --> 00:51:08.069 align:start position:0%
there's four system calls two sends
and<00:51:05.520><c> two</c><00:51:05.680><c> receives</c><00:51:06.319><c> and</c><00:51:06.559><c> you</c><00:51:06.720><c> know</c><00:51:06.880><c> eight</c><00:51:07.760><c> user</c>

00:51:08.069 --> 00:51:08.079 align:start position:0%
and two receives and you know eight user
 

00:51:08.079 --> 00:51:09.670 align:start position:0%
and two receives and you know eight user
kernel<00:51:08.400><c> crossings</c><00:51:08.880><c> each</c><00:51:09.040><c> one</c><00:51:09.200><c> of</c><00:51:09.280><c> which</c><00:51:09.520><c> is</c>

00:51:09.670 --> 00:51:09.680 align:start position:0%
kernel crossings each one of which is
 

00:51:09.680 --> 00:51:12.309 align:start position:0%
kernel crossings each one of which is
like<00:51:09.920><c> reasonably</c><00:51:10.400><c> expensive</c>

00:51:12.309 --> 00:51:12.319 align:start position:0%
like reasonably expensive
 

00:51:12.319 --> 00:51:14.870 align:start position:0%
like reasonably expensive
there's<00:51:12.559><c> a</c><00:51:12.720><c> need</c><00:51:12.960><c> to</c><00:51:13.119><c> sleep</c><00:51:14.000><c> this</c><00:51:14.240><c> receive</c><00:51:14.720><c> has</c>

00:51:14.870 --> 00:51:14.880 align:start position:0%
there's a need to sleep this receive has
 

00:51:14.880 --> 00:51:15.589 align:start position:0%
there's a need to sleep this receive has
to

00:51:15.589 --> 00:51:15.599 align:start position:0%
to
 

00:51:15.599 --> 00:51:18.870 align:start position:0%
to
sleep<00:51:15.920><c> waiting</c><00:51:16.240><c> for</c><00:51:16.720><c> data</c><00:51:17.040><c> to</c><00:51:17.200><c> appear</c>

00:51:18.870 --> 00:51:18.880 align:start position:0%
sleep waiting for data to appear
 

00:51:18.880 --> 00:51:20.710 align:start position:0%
sleep waiting for data to appear
and<00:51:19.040><c> there's</c><00:51:19.280><c> a</c><00:51:19.359><c> full</c><00:51:19.680><c> call</c><00:51:19.920><c> to</c><00:51:20.079><c> the</c><00:51:20.240><c> scheduler</c>

00:51:20.710 --> 00:51:20.720 align:start position:0%
and there's a full call to the scheduler
 

00:51:20.720 --> 00:51:22.630 align:start position:0%
and there's a full call to the scheduler
loop<00:51:21.040><c> and</c><00:51:21.200><c> a</c><00:51:21.280><c> context</c><00:51:21.680><c> switch</c><00:51:22.160><c> from</c>

00:51:22.630 --> 00:51:22.640 align:start position:0%
loop and a context switch from
 

00:51:22.640 --> 00:51:25.750 align:start position:0%
loop and a context switch from
p1<00:51:22.960><c> to</c><00:51:23.119><c> p2</c><00:51:23.920><c> i'm</c><00:51:24.160><c> in</c><00:51:24.319><c> order</c><00:51:24.480><c> to</c><00:51:24.559><c> make</c><00:51:24.800><c> this</c><00:51:25.119><c> and</c>

00:51:25.750 --> 00:51:25.760 align:start position:0%
p1 to p2 i'm in order to make this and
 

00:51:25.760 --> 00:51:27.589 align:start position:0%
p1 to p2 i'm in order to make this and
you<00:51:25.920><c> know</c><00:51:26.160><c> each</c><00:51:26.400><c> of</c><00:51:26.480><c> these</c><00:51:26.720><c> kernel</c><00:51:27.040><c> crossings</c>

00:51:27.589 --> 00:51:27.599 align:start position:0%
you know each of these kernel crossings
 

00:51:27.599 --> 00:51:29.190 align:start position:0%
you know each of these kernel crossings
and<00:51:27.760><c> context</c><00:51:28.160><c> switches</c><00:51:28.559><c> is</c><00:51:28.720><c> potentially</c>

00:51:29.190 --> 00:51:29.200 align:start position:0%
and context switches is potentially
 

00:51:29.200 --> 00:51:30.390 align:start position:0%
and context switches is potentially
expensive<00:51:29.760><c> because</c>

00:51:30.390 --> 00:51:30.400 align:start position:0%
expensive because
 

00:51:30.400 --> 00:51:32.069 align:start position:0%
expensive because
you<00:51:30.559><c> know</c><00:51:30.720><c> every</c><00:51:30.880><c> time</c><00:51:31.040><c> you</c><00:51:31.359><c> cross</c><00:51:31.680><c> the</c><00:51:31.760><c> kernel</c>

00:51:32.069 --> 00:51:32.079 align:start position:0%
you know every time you cross the kernel
 

00:51:32.079 --> 00:51:35.190 align:start position:0%
you know every time you cross the kernel
user<00:51:32.319><c> boundary</c><00:51:32.720><c> you</c><00:51:32.880><c> switch</c><00:51:33.200><c> page</c><00:51:33.599><c> tables</c>

00:51:35.190 --> 00:51:35.200 align:start position:0%
user boundary you switch page tables
 

00:51:35.200 --> 00:51:40.549 align:start position:0%
user boundary you switch page tables
and<00:51:35.359><c> that</c><00:51:36.960><c> is</c><00:51:37.119><c> a</c><00:51:38.079><c> has</c><00:51:38.240><c> a</c><00:51:38.319><c> near</c><00:51:38.640><c> certainty</c><00:51:39.280><c> of</c><00:51:39.520><c> um</c>

00:51:40.549 --> 00:51:40.559 align:start position:0%
and that is a has a near certainty of um
 

00:51:40.559 --> 00:51:43.589 align:start position:0%
and that is a has a near certainty of um
disturbing<00:51:41.280><c> the</c><00:51:41.599><c> cpu</c><00:51:42.160><c> caches</c><00:51:42.559><c> like</c><00:51:43.280><c> changing</c>

00:51:43.589 --> 00:51:43.599 align:start position:0%
disturbing the cpu caches like changing
 

00:51:43.599 --> 00:51:44.470 align:start position:0%
disturbing the cpu caches like changing
the<00:51:43.680><c> page</c><00:51:44.000><c> table</c>

00:51:44.470 --> 00:51:44.480 align:start position:0%
the page table
 

00:51:44.480 --> 00:51:47.670 align:start position:0%
the page table
probably<00:51:44.880><c> flushes</c><00:51:45.359><c> the</c><00:51:46.400><c> ver</c><00:51:46.720><c> the</c><00:51:46.960><c> tlb</c>

00:51:47.670 --> 00:51:47.680 align:start position:0%
probably flushes the ver the tlb
 

00:51:47.680 --> 00:51:49.430 align:start position:0%
probably flushes the ver the tlb
the<00:51:47.839><c> virtual</c><00:51:48.160><c> memory</c><00:51:48.480><c> lookup</c><00:51:48.800><c> cache</c><00:51:49.119><c> which</c><00:51:49.359><c> is</c>

00:51:49.430 --> 00:51:49.440 align:start position:0%
the virtual memory lookup cache which is
 

00:51:49.440 --> 00:51:52.309 align:start position:0%
the virtual memory lookup cache which is
going<00:51:49.520><c> to</c><00:51:49.599><c> slow</c><00:51:49.839><c> things</c><00:51:50.160><c> down</c>

00:51:52.309 --> 00:51:52.319 align:start position:0%
going to slow things down
 

00:51:52.319 --> 00:51:55.990 align:start position:0%
going to slow things down
so<00:51:54.480><c> this</c><00:51:54.640><c> is</c><00:51:54.720><c> a</c><00:51:54.800><c> pretty</c><00:51:55.040><c> slow</c><00:51:55.359><c> way</c><00:51:55.520><c> to</c><00:51:55.599><c> go</c>

00:51:55.990 --> 00:51:56.000 align:start position:0%
so this is a pretty slow way to go
 

00:51:56.000 --> 00:51:58.390 align:start position:0%
so this is a pretty slow way to go
it<00:51:56.079><c> involves</c><00:51:56.400><c> a</c><00:51:56.480><c> lot</c><00:51:56.559><c> of</c><00:51:56.640><c> kernel</c><00:51:56.960><c> crossings</c>

00:51:58.390 --> 00:51:58.400 align:start position:0%
it involves a lot of kernel crossings
 

00:51:58.400 --> 00:52:00.470 align:start position:0%
it involves a lot of kernel crossings
message<00:51:58.880><c> copying</c><00:51:59.280><c> of</c><00:51:59.359><c> messages</c><00:51:59.839><c> between</c><00:52:00.079><c> user</c>

00:52:00.470 --> 00:52:00.480 align:start position:0%
message copying of messages between user
 

00:52:00.480 --> 00:52:01.109 align:start position:0%
message copying of messages between user
and<00:52:00.559><c> kernel</c>

00:52:01.109 --> 00:52:01.119 align:start position:0%
and kernel
 

00:52:01.119 --> 00:52:04.950 align:start position:0%
and kernel
maybe<00:52:01.520><c> allocation</c><00:52:02.079><c> of</c><00:52:02.240><c> buffers</c><00:52:03.119><c> etc</c>

00:52:04.950 --> 00:52:04.960 align:start position:0%
maybe allocation of buffers etc
 

00:52:04.960 --> 00:52:07.510 align:start position:0%
maybe allocation of buffers etc
but<00:52:05.119><c> it</c><00:52:05.200><c> turns</c><00:52:05.520><c> out</c><00:52:05.680><c> that</c><00:52:06.160><c> for</c><00:52:06.400><c> the</c><00:52:07.119><c> for</c><00:52:07.359><c> this</c>

00:52:07.510 --> 00:52:07.520 align:start position:0%
but it turns out that for the for this
 

00:52:07.520 --> 00:52:09.190 align:start position:0%
but it turns out that for the for this
stylized<00:52:08.160><c> case</c><00:52:08.400><c> in</c><00:52:08.480><c> which</c><00:52:08.640><c> you're</c><00:52:08.800><c> sending</c><00:52:09.040><c> a</c>

00:52:09.190 --> 00:52:09.200 align:start position:0%
stylized case in which you're sending a
 

00:52:09.200 --> 00:52:10.790 align:start position:0%
stylized case in which you're sending a
request<00:52:09.680><c> and</c><00:52:09.839><c> you</c><00:52:09.920><c> want</c><00:52:10.079><c> to</c><00:52:10.160><c> get</c><00:52:10.240><c> a</c><00:52:10.319><c> response</c>

00:52:10.790 --> 00:52:10.800 align:start position:0%
request and you want to get a response
 

00:52:10.800 --> 00:52:13.030 align:start position:0%
request and you want to get a response
back

00:52:13.030 --> 00:52:13.040 align:start position:0%
back
 

00:52:13.040 --> 00:52:15.109 align:start position:0%
back
you<00:52:13.200><c> can</c><00:52:13.599><c> strip</c><00:52:13.920><c> this</c><00:52:14.079><c> down</c><00:52:14.400><c> to</c><00:52:15.040><c> a</c>

00:52:15.109 --> 00:52:15.119 align:start position:0%
you can strip this down to a
 

00:52:15.119 --> 00:52:16.069 align:start position:0%
you can strip this down to a
considerably

00:52:16.069 --> 00:52:16.079 align:start position:0%
considerably
 

00:52:16.079 --> 00:52:19.109 align:start position:0%
considerably
simpler<00:52:16.880><c> design</c><00:52:18.000><c> i</c><00:52:18.160><c> mean</c><00:52:18.559><c> in</c><00:52:18.640><c> fact</c><00:52:18.880><c> this</c><00:52:19.040><c> is</c>

00:52:19.109 --> 00:52:19.119 align:start position:0%
simpler design i mean in fact this is
 

00:52:19.119 --> 00:52:21.829 align:start position:0%
simpler design i mean in fact this is
the<00:52:19.200><c> way</c><00:52:19.440><c> l4</c><00:52:19.839><c> worked</c>

00:52:21.829 --> 00:52:21.839 align:start position:0%
the way l4 worked
 

00:52:21.839 --> 00:52:25.190 align:start position:0%
the way l4 worked
and<00:52:22.079><c> this</c><00:52:22.240><c> was</c><00:52:22.400><c> laid</c><00:52:22.559><c> out</c><00:52:22.720><c> in</c><00:52:22.880><c> a</c><00:52:22.960><c> famous</c><00:52:23.280><c> paper</c>

00:52:25.190 --> 00:52:25.200 align:start position:0%
and this was laid out in a famous paper
 

00:52:25.200 --> 00:52:27.990 align:start position:0%
and this was laid out in a famous paper
called<00:52:25.520><c> improving</c><00:52:25.920><c> ipc</c><00:52:26.400><c> by</c><00:52:26.559><c> kernel</c><00:52:26.880><c> design</c>

00:52:27.990 --> 00:52:28.000 align:start position:0%
called improving ipc by kernel design
 

00:52:28.000 --> 00:52:30.829 align:start position:0%
called improving ipc by kernel design
published<00:52:28.400><c> a</c><00:52:28.480><c> few</c><00:52:28.720><c> years</c><00:52:29.040><c> before</c><00:52:29.520><c> today's</c>

00:52:30.829 --> 00:52:30.839 align:start position:0%
published a few years before today's
 

00:52:30.839 --> 00:52:34.790 align:start position:0%
published a few years before today's
paper

00:52:34.790 --> 00:52:34.800 align:start position:0%
 
 

00:52:34.800 --> 00:52:37.030 align:start position:0%
 
so<00:52:35.040><c> it</c><00:52:35.200><c> does</c><00:52:35.359><c> a</c><00:52:35.440><c> couple</c><00:52:35.680><c> things</c><00:52:36.319><c> differently</c>

00:52:37.030 --> 00:52:37.040 align:start position:0%
so it does a couple things differently
 

00:52:37.040 --> 00:52:39.190 align:start position:0%
so it does a couple things differently
for<00:52:37.200><c> one</c><00:52:37.440><c> thing</c>

00:52:39.190 --> 00:52:39.200 align:start position:0%
for one thing
 

00:52:39.200 --> 00:52:42.390 align:start position:0%
for one thing
it's<00:52:39.359><c> synchronous</c>

00:52:42.390 --> 00:52:42.400 align:start position:0%
 
 

00:52:42.400 --> 00:52:46.470 align:start position:0%
 
that<00:52:43.559><c> is</c><00:52:44.839><c> um</c>

00:52:46.470 --> 00:52:46.480 align:start position:0%
that is um
 

00:52:46.480 --> 00:52:50.150 align:start position:0%
that is um
there's<00:52:46.720><c> none</c><00:52:46.960><c> of</c><00:52:47.040><c> this</c><00:52:47.200><c> there's</c><00:52:47.440><c> no</c><00:52:47.760><c> uh</c>

00:52:50.150 --> 00:52:50.160 align:start position:0%
 
 

00:52:50.160 --> 00:52:51.990 align:start position:0%
 
dropping<00:52:50.559><c> something</c><00:52:50.880><c> off</c><00:52:51.200><c> and</c><00:52:51.359><c> returning</c><00:52:51.839><c> and</c>

00:52:51.990 --> 00:52:52.000 align:start position:0%
dropping something off and returning and
 

00:52:52.000 --> 00:52:54.390 align:start position:0%
dropping something off and returning and
waiting<00:52:52.720><c> letting</c><00:52:53.040><c> the</c><00:52:53.200><c> other</c><00:52:53.440><c> guy</c>

00:52:54.390 --> 00:52:54.400 align:start position:0%
waiting letting the other guy
 

00:52:54.400 --> 00:52:55.750 align:start position:0%
waiting letting the other guy
letting<00:52:54.640><c> the</c><00:52:54.720><c> other</c><00:52:54.880><c> process</c><00:52:55.280><c> pick</c><00:52:55.520><c> up</c><00:52:55.599><c> the</c>

00:52:55.750 --> 00:52:55.760 align:start position:0%
letting the other process pick up the
 

00:52:55.760 --> 00:52:59.030 align:start position:0%
letting the other process pick up the
data<00:52:56.400><c> uh</c><00:52:56.559><c> when</c><00:52:56.800><c> it</c><00:52:56.880><c> feels</c><00:52:57.119><c> like</c><00:52:57.359><c> it</c><00:52:57.520><c> instead</c>

00:52:59.030 --> 00:52:59.040 align:start position:0%
data uh when it feels like it instead
 

00:52:59.040 --> 00:53:02.150 align:start position:0%
data uh when it feels like it instead
send<00:52:59.920><c> waits</c><00:53:00.240><c> for</c><00:53:00.400><c> receive</c><00:53:01.200><c> and</c><00:53:01.359><c> receive</c><00:53:01.839><c> waits</c>

00:53:02.150 --> 00:53:02.160 align:start position:0%
send waits for receive and receive waits
 

00:53:02.160 --> 00:53:04.390 align:start position:0%
send waits for receive and receive waits
for<00:53:02.319><c> sand</c><00:53:02.720><c> so</c>

00:53:04.390 --> 00:53:04.400 align:start position:0%
for sand so
 

00:53:04.400 --> 00:53:05.990 align:start position:0%
for sand so
if<00:53:04.559><c> i'm</c><00:53:04.720><c> process</c><00:53:05.040><c> one</c><00:53:05.200><c> and</c><00:53:05.359><c> i</c><00:53:05.440><c> want</c><00:53:05.520><c> to</c><00:53:05.680><c> send</c>

00:53:05.990 --> 00:53:06.000 align:start position:0%
if i'm process one and i want to send
 

00:53:06.000 --> 00:53:11.190 align:start position:0%
if i'm process one and i want to send
and<00:53:06.160><c> i</c><00:53:06.400><c> call</c><00:53:06.720><c> send</c>

00:53:11.190 --> 00:53:11.200 align:start position:0%
 
 

00:53:11.200 --> 00:53:14.069 align:start position:0%
 
it<00:53:11.440><c> it</c><00:53:11.680><c> doesn't</c><00:53:12.240><c> copy</c><00:53:12.720><c> my</c><00:53:12.880><c> message</c><00:53:13.760><c> into</c><00:53:14.000><c> a</c>

00:53:14.069 --> 00:53:14.079 align:start position:0%
it it doesn't copy my message into a
 

00:53:14.079 --> 00:53:14.549 align:start position:0%
it it doesn't copy my message into a
buffer

00:53:14.549 --> 00:53:14.559 align:start position:0%
buffer
 

00:53:14.559 --> 00:53:19.430 align:start position:0%
buffer
it<00:53:14.720><c> actually</c><00:53:16.160><c> p1</c><00:53:16.480><c> will</c><00:53:16.640><c> now</c><00:53:17.040><c> immediately</c><00:53:17.760><c> if</c>

00:53:19.430 --> 00:53:19.440 align:start position:0%
it actually p1 will now immediately if
 

00:53:19.440 --> 00:53:22.630 align:start position:0%
it actually p1 will now immediately if
the<00:53:19.599><c> p1</c><00:53:20.000><c> send</c><00:53:20.319><c> in</c><00:53:20.480><c> the</c><00:53:20.960><c> l4</c><00:53:21.359><c> kernel</c><00:53:21.760><c> waits</c><00:53:22.400><c> for</c>

00:53:22.630 --> 00:53:22.640 align:start position:0%
the p1 send in the l4 kernel waits for
 

00:53:22.640 --> 00:53:24.470 align:start position:0%
the p1 send in the l4 kernel waits for
p2<00:53:23.200><c> to</c><00:53:23.359><c> call</c><00:53:23.599><c> receive</c>

00:53:24.470 --> 00:53:24.480 align:start position:0%
p2 to call receive
 

00:53:24.480 --> 00:53:26.870 align:start position:0%
p2 to call receive
and<00:53:24.720><c> if</c><00:53:24.880><c> p2</c><00:53:25.280><c> is</c><00:53:25.440><c> already</c><00:53:25.839><c> in</c><00:53:26.000><c> the</c><00:53:26.079><c> kernel</c>

00:53:26.870 --> 00:53:26.880 align:start position:0%
and if p2 is already in the kernel
 

00:53:26.880 --> 00:53:28.549 align:start position:0%
and if p2 is already in the kernel
waiting<00:53:27.200><c> on</c><00:53:27.280><c> a</c><00:53:27.359><c> call</c><00:53:27.520><c> to</c><00:53:27.680><c> receive</c>

00:53:28.549 --> 00:53:28.559 align:start position:0%
waiting on a call to receive
 

00:53:28.559 --> 00:53:32.230 align:start position:0%
waiting on a call to receive
well<00:53:29.040><c> p2</c><00:53:29.440><c> is</c><00:53:29.520><c> either</c><00:53:29.839><c> already</c><00:53:30.160><c> in</c><00:53:30.240><c> the</c><00:53:30.319><c> kernel</c>

00:53:32.230 --> 00:53:32.240 align:start position:0%
well p2 is either already in the kernel
 

00:53:32.240 --> 00:53:35.910 align:start position:0%
well p2 is either already in the kernel
waiting<00:53:32.559><c> on</c><00:53:32.720><c> a</c><00:53:32.800><c> call</c><00:53:32.960><c> to</c><00:53:33.119><c> receive</c><00:53:34.240><c> or</c>

00:53:35.910 --> 00:53:35.920 align:start position:0%
waiting on a call to receive or
 

00:53:35.920 --> 00:53:38.470 align:start position:0%
waiting on a call to receive or
p1<00:53:36.400><c> send</c><00:53:36.640><c> wait</c><00:53:36.880><c> for</c><00:53:37.040><c> it</c><00:53:37.280><c> waits</c><00:53:37.599><c> for</c><00:53:37.760><c> p2's</c><00:53:38.240><c> next</c>

00:53:38.470 --> 00:53:38.480 align:start position:0%
p1 send wait for it waits for p2's next
 

00:53:38.480 --> 00:53:39.910 align:start position:0%
p1 send wait for it waits for p2's next
call<00:53:38.640><c> to</c><00:53:38.800><c> receive</c>

00:53:39.910 --> 00:53:39.920 align:start position:0%
call to receive
 

00:53:39.920 --> 00:53:44.870 align:start position:0%
call to receive
when<00:53:40.559><c> both</c><00:53:40.880><c> have</c><00:53:41.040><c> arrived</c><00:53:41.680><c> here</c><00:53:42.319><c> when</c><00:53:42.559><c> p1</c><00:53:43.040><c> is</c>

00:53:44.870 --> 00:53:44.880 align:start position:0%
when both have arrived here when p1 is
 

00:53:44.880 --> 00:53:46.069 align:start position:0%
when both have arrived here when p1 is
in<00:53:44.960><c> the</c><00:53:45.040><c> kernel</c><00:53:45.280><c> and</c><00:53:45.359><c> it's</c><00:53:45.520><c> called</c><00:53:45.760><c> the</c><00:53:45.839><c> send</c>

00:53:46.069 --> 00:53:46.079 align:start position:0%
in the kernel and it's called the send
 

00:53:46.079 --> 00:53:47.510 align:start position:0%
in the kernel and it's called the send
and<00:53:46.160><c> p2's</c><00:53:46.559><c> in</c><00:53:46.640><c> the</c><00:53:46.720><c> kernel</c><00:53:47.040><c> is</c><00:53:47.200><c> called</c><00:53:47.440><c> to</c>

00:53:47.510 --> 00:53:47.520 align:start position:0%
and p2's in the kernel is called to
 

00:53:47.520 --> 00:53:48.150 align:start position:0%
and p2's in the kernel is called to
receive

00:53:48.150 --> 00:53:48.160 align:start position:0%
receive
 

00:53:48.160 --> 00:53:52.630 align:start position:0%
receive
only<00:53:48.400><c> then</c><00:53:48.640><c> does</c><00:53:48.880><c> anything</c><00:53:49.200><c> happen</c><00:53:50.960><c> and</c>

00:53:52.630 --> 00:53:52.640 align:start position:0%
only then does anything happen and
 

00:53:52.640 --> 00:53:55.670 align:start position:0%
only then does anything happen and
one<00:53:52.880><c> reason</c><00:53:53.119><c> this</c><00:53:53.359><c> is</c><00:53:53.440><c> fast</c><00:53:54.960><c> is</c><00:53:55.119><c> that</c>

00:53:55.670 --> 00:53:55.680 align:start position:0%
one reason this is fast is that
 

00:53:55.680 --> 00:53:59.990 align:start position:0%
one reason this is fast is that
if<00:53:56.160><c> p2</c><00:53:56.480><c> is</c><00:53:56.640><c> already</c><00:53:56.960><c> in</c><00:53:57.040><c> receive</c><00:53:57.520><c> then</c><00:53:58.400><c> p1</c>

00:53:59.990 --> 00:54:00.000 align:start position:0%
if p2 is already in receive then p1
 

00:54:00.000 --> 00:54:01.990 align:start position:0%
if p2 is already in receive then p1
when<00:54:00.160><c> it's</c><00:54:00.319><c> executing</c><00:54:00.880><c> send</c><00:54:01.200><c> in</c><00:54:01.280><c> the</c><00:54:01.440><c> kernel</c>

00:54:01.990 --> 00:54:02.000 align:start position:0%
when it's executing send in the kernel
 

00:54:02.000 --> 00:54:03.349 align:start position:0%
when it's executing send in the kernel
can<00:54:02.240><c> just</c>

00:54:03.349 --> 00:54:03.359 align:start position:0%
can just
 

00:54:03.359 --> 00:54:06.549 align:start position:0%
can just
without<00:54:03.760><c> a</c><00:54:03.920><c> context</c><00:54:04.400><c> switch</c><00:54:05.280><c> or</c><00:54:06.079><c> a</c><00:54:06.240><c> general</c>

00:54:06.549 --> 00:54:06.559 align:start position:0%
without a context switch or a general
 

00:54:06.559 --> 00:54:07.670 align:start position:0%
without a context switch or a general
purpose<00:54:06.960><c> scheduling</c>

00:54:07.670 --> 00:54:07.680 align:start position:0%
purpose scheduling
 

00:54:07.680 --> 00:54:10.950 align:start position:0%
purpose scheduling
can<00:54:07.839><c> just</c><00:54:09.200><c> jump</c><00:54:09.680><c> back</c><00:54:09.920><c> into</c><00:54:10.079><c> user</c><00:54:10.400><c> space</c><00:54:10.720><c> into</c>

00:54:10.950 --> 00:54:10.960 align:start position:0%
can just jump back into user space into
 

00:54:10.960 --> 00:54:11.990 align:start position:0%
can just jump back into user space into
p2

00:54:11.990 --> 00:54:12.000 align:start position:0%
p2
 

00:54:12.000 --> 00:54:14.950 align:start position:0%
p2
as<00:54:12.240><c> if</c><00:54:12.400><c> it</c><00:54:12.480><c> was</c><00:54:12.720><c> returning</c><00:54:13.200><c> from</c><00:54:13.359><c> this</c><00:54:13.599><c> receive</c>

00:54:14.950 --> 00:54:14.960 align:start position:0%
as if it was returning from this receive
 

00:54:14.960 --> 00:54:16.790 align:start position:0%
as if it was returning from this receive
right<00:54:15.119><c> and</c><00:54:15.280><c> that's</c><00:54:15.440><c> a</c><00:54:15.599><c> much</c><00:54:15.920><c> faster</c><00:54:16.319><c> path</c><00:54:16.640><c> to</c>

00:54:16.790 --> 00:54:16.800 align:start position:0%
right and that's a much faster path to
 

00:54:16.800 --> 00:54:17.990 align:start position:0%
right and that's a much faster path to
the<00:54:16.880><c> kernel</c>

00:54:17.990 --> 00:54:18.000 align:start position:0%
the kernel
 

00:54:18.000 --> 00:54:20.549 align:start position:0%
the kernel
than<00:54:18.960><c> you</c><00:54:19.040><c> know</c><00:54:19.359><c> saving</c><00:54:19.680><c> registers</c><00:54:20.160><c> giving</c><00:54:20.480><c> up</c>

00:54:20.549 --> 00:54:20.559 align:start position:0%
than you know saving registers giving up
 

00:54:20.559 --> 00:54:21.270 align:start position:0%
than you know saving registers giving up
the<00:54:20.720><c> cpu</c>

00:54:21.270 --> 00:54:21.280 align:start position:0%
the cpu
 

00:54:21.280 --> 00:54:24.309 align:start position:0%
the cpu
calling<00:54:21.520><c> the</c><00:54:21.680><c> scheduler</c><00:54:23.520><c> and</c><00:54:23.760><c> finding</c><00:54:24.000><c> a</c><00:54:24.079><c> new</c>

00:54:24.309 --> 00:54:24.319 align:start position:0%
calling the scheduler and finding a new
 

00:54:24.319 --> 00:54:25.190 align:start position:0%
calling the scheduler and finding a new
process<00:54:24.640><c> to</c><00:54:24.800><c> run</c>

00:54:25.190 --> 00:54:25.200 align:start position:0%
process to run
 

00:54:25.200 --> 00:54:28.630 align:start position:0%
process to run
instead<00:54:25.920><c> p1</c><00:54:26.480><c> send</c><00:54:26.800><c> knows</c><00:54:28.000><c> that</c><00:54:28.319><c> there's</c><00:54:28.559><c> a</c>

00:54:28.630 --> 00:54:28.640 align:start position:0%
instead p1 send knows that there's a
 

00:54:28.640 --> 00:54:30.470 align:start position:0%
instead p1 send knows that there's a
waiting<00:54:28.960><c> receive</c>

00:54:30.470 --> 00:54:30.480 align:start position:0%
waiting receive
 

00:54:30.480 --> 00:54:34.150 align:start position:0%
waiting receive
and<00:54:30.640><c> just</c><00:54:32.720><c> sort</c><00:54:32.960><c> of</c><00:54:33.280><c> immediately</c>

00:54:34.150 --> 00:54:34.160 align:start position:0%
and just sort of immediately
 

00:54:34.160 --> 00:54:36.789 align:start position:0%
and just sort of immediately
jumps<00:54:34.480><c> into</c><00:54:34.720><c> p2</c><00:54:35.920><c> as</c><00:54:36.079><c> if</c><00:54:36.240><c> it</c><00:54:36.319><c> was</c><00:54:36.480><c> returning</c>

00:54:36.789 --> 00:54:36.799 align:start position:0%
jumps into p2 as if it was returning
 

00:54:36.799 --> 00:54:40.789 align:start position:0%
jumps into p2 as if it was returning
from<00:54:36.960><c> receive</c>

00:54:40.789 --> 00:54:40.799 align:start position:0%
 
 

00:54:40.799 --> 00:54:42.630 align:start position:0%
 
the<00:54:41.040><c> scheme</c><00:54:41.520><c> that</c><00:54:41.680><c> they</c><00:54:41.839><c> developed</c><00:54:42.240><c> is</c><00:54:42.319><c> also</c>

00:54:42.630 --> 00:54:42.640 align:start position:0%
the scheme that they developed is also
 

00:54:42.640 --> 00:54:47.510 align:start position:0%
the scheme that they developed is also
unbuffered

00:54:47.510 --> 00:54:47.520 align:start position:0%
 
 

00:54:47.520 --> 00:54:49.109 align:start position:0%
 
and<00:54:47.839><c> it</c><00:54:47.920><c> can</c><00:54:48.079><c> do</c><00:54:48.240><c> that</c><00:54:48.480><c> partially</c><00:54:48.880><c> because</c>

00:54:49.109 --> 00:54:49.119 align:start position:0%
and it can do that partially because
 

00:54:49.119 --> 00:54:52.150 align:start position:0%
and it can do that partially because
it's<00:54:50.200><c> synchronous</c>

00:54:52.150 --> 00:54:52.160 align:start position:0%
it's synchronous
 

00:54:52.160 --> 00:54:54.390 align:start position:0%
it's synchronous
when<00:54:52.559><c> both</c><00:54:52.799><c> the</c><00:54:52.960><c> send</c><00:54:53.200><c> and</c><00:54:53.359><c> the</c><00:54:53.440><c> receive</c><00:54:54.160><c> are</c>

00:54:54.390 --> 00:54:54.400 align:start position:0%
when both the send and the receive are
 

00:54:54.400 --> 00:54:56.069 align:start position:0%
when both the send and the receive are
in<00:54:54.480><c> the</c><00:54:54.640><c> kernel</c>

00:54:56.069 --> 00:54:56.079 align:start position:0%
in the kernel
 

00:54:56.079 --> 00:54:58.549 align:start position:0%
in the kernel
the<00:54:56.319><c> message</c><00:54:57.119><c> can</c><00:54:57.280><c> be</c><00:54:57.920><c> you</c><00:54:58.079><c> know</c><00:54:58.240><c> send</c><00:54:58.480><c> is</c>

00:54:58.549 --> 00:54:58.559 align:start position:0%
the message can be you know send is
 

00:54:58.559 --> 00:55:00.630 align:start position:0%
the message can be you know send is
sending<00:54:58.880><c> some</c><00:54:59.119><c> message</c>

00:55:00.630 --> 00:55:00.640 align:start position:0%
sending some message
 

00:55:00.640 --> 00:55:02.470 align:start position:0%
sending some message
the<00:55:00.799><c> kernel</c><00:55:01.119><c> can</c><00:55:01.359><c> directly</c><00:55:01.760><c> copy</c><00:55:02.079><c> the</c><00:55:02.160><c> message</c>

00:55:02.470 --> 00:55:02.480 align:start position:0%
the kernel can directly copy the message
 

00:55:02.480 --> 00:55:03.910 align:start position:0%
the kernel can directly copy the message
from<00:55:02.720><c> user</c><00:55:03.040><c> space</c>

00:55:03.910 --> 00:55:03.920 align:start position:0%
from user space
 

00:55:03.920 --> 00:55:05.829 align:start position:0%
from user space
to<00:55:04.079><c> user</c><00:55:04.400><c> space</c><00:55:04.880><c> without</c><00:55:05.200><c> having</c><00:55:05.520><c> to</c><00:55:05.599><c> first</c>

00:55:05.829 --> 00:55:05.839 align:start position:0%
to user space without having to first
 

00:55:05.839 --> 00:55:07.430 align:start position:0%
to user space without having to first
copy<00:55:06.160><c> it</c><00:55:06.240><c> into</c><00:55:06.480><c> the</c><00:55:06.559><c> kernel</c><00:55:06.880><c> and</c><00:55:07.040><c> then</c><00:55:07.200><c> back</c>

00:55:07.430 --> 00:55:07.440 align:start position:0%
copy it into the kernel and then back
 

00:55:07.440 --> 00:55:08.470 align:start position:0%
copy it into the kernel and then back
out<00:55:07.599><c> of</c><00:55:07.680><c> the</c><00:55:07.760><c> kernel</c>

00:55:08.470 --> 00:55:08.480 align:start position:0%
out of the kernel
 

00:55:08.480 --> 00:55:11.109 align:start position:0%
out of the kernel
because<00:55:09.280><c> because</c><00:55:09.599><c> since</c><00:55:10.640><c> you</c><00:55:10.720><c> know</c><00:55:10.880><c> both</c>

00:55:11.109 --> 00:55:11.119 align:start position:0%
because because since you know both
 

00:55:11.119 --> 00:55:12.390 align:start position:0%
because because since you know both
sides<00:55:11.359><c> wait</c><00:55:11.680><c> for</c><00:55:11.839><c> the</c><00:55:11.920><c> other</c>

00:55:12.390 --> 00:55:12.400 align:start position:0%
sides wait for the other
 

00:55:12.400 --> 00:55:15.349 align:start position:0%
sides wait for the other
system<00:55:12.720><c> call</c><00:55:12.880><c> to</c><00:55:13.440><c> happen</c><00:55:14.079><c> that</c><00:55:14.319><c> means</c><00:55:14.720><c> that</c>

00:55:15.349 --> 00:55:15.359 align:start position:0%
system call to happen that means that
 

00:55:15.359 --> 00:55:16.630 align:start position:0%
system call to happen that means that
they've<00:55:15.599><c> waited</c><00:55:16.000><c> for</c><00:55:16.240><c> both</c>

00:55:16.630 --> 00:55:16.640 align:start position:0%
they've waited for both
 

00:55:16.640 --> 00:55:19.030 align:start position:0%
they've waited for both
pointers<00:55:17.119><c> to</c><00:55:17.200><c> be</c><00:55:17.359><c> known</c><00:55:17.839><c> receive</c><00:55:18.240><c> specifies</c>

00:55:19.030 --> 00:55:19.040 align:start position:0%
pointers to be known receive specifies
 

00:55:19.040 --> 00:55:20.630 align:start position:0%
pointers to be known receive specifies
where<00:55:19.280><c> it</c><00:55:19.359><c> wants</c><00:55:19.680><c> the</c>

00:55:20.630 --> 00:55:20.640 align:start position:0%
where it wants the
 

00:55:20.640 --> 00:55:23.349 align:start position:0%
where it wants the
message<00:55:20.960><c> to</c><00:55:21.119><c> be</c><00:55:21.200><c> deposited</c><00:55:22.000><c> so</c><00:55:22.240><c> at</c><00:55:22.319><c> this</c><00:55:22.559><c> point</c>

00:55:23.349 --> 00:55:23.359 align:start position:0%
message to be deposited so at this point
 

00:55:23.359 --> 00:55:24.870 align:start position:0%
message to be deposited so at this point
we<00:55:23.520><c> know</c><00:55:23.680><c> both</c><00:55:23.920><c> addresses</c><00:55:24.319><c> then</c><00:55:24.480><c> colonel</c><00:55:24.720><c> can</c>

00:55:24.870 --> 00:55:24.880 align:start position:0%
we know both addresses then colonel can
 

00:55:24.880 --> 00:55:26.230 align:start position:0%
we know both addresses then colonel can
just<00:55:25.040><c> do</c><00:55:25.200><c> the</c><00:55:25.280><c> copy</c><00:55:25.599><c> directly</c>

00:55:26.230 --> 00:55:26.240 align:start position:0%
just do the copy directly
 

00:55:26.240 --> 00:55:31.030 align:start position:0%
just do the copy directly
instead<00:55:26.559><c> of</c><00:55:27.280><c> through</c><00:55:27.440><c> the</c><00:55:27.599><c> kernel</c>

00:55:31.030 --> 00:55:31.040 align:start position:0%
 
 

00:55:31.040 --> 00:55:34.710 align:start position:0%
 
for<00:55:31.599><c> and</c><00:55:33.280><c> if</c><00:55:33.440><c> the</c><00:55:33.520><c> message</c><00:55:34.000><c> is</c>

00:55:34.710 --> 00:55:34.720 align:start position:0%
for and if the message is
 

00:55:34.720 --> 00:55:36.630 align:start position:0%
for and if the message is
super<00:55:35.040><c> small</c><00:55:35.359><c> like</c><00:55:35.599><c> maybe</c><00:55:35.839><c> only</c><00:55:36.000><c> a</c><00:55:36.079><c> few</c><00:55:36.319><c> dozen</c>

00:55:36.630 --> 00:55:36.640 align:start position:0%
super small like maybe only a few dozen
 

00:55:36.640 --> 00:55:38.549 align:start position:0%
super small like maybe only a few dozen
bytes<00:55:37.680><c> then</c>

00:55:38.549 --> 00:55:38.559 align:start position:0%
bytes then
 

00:55:38.559 --> 00:55:40.870 align:start position:0%
bytes then
uh<00:55:38.880><c> it</c><00:55:38.960><c> can</c><00:55:39.119><c> be</c><00:55:39.280><c> passed</c><00:55:39.760><c> in</c><00:55:39.920><c> registers</c><00:55:40.400><c> without</c>

00:55:40.870 --> 00:55:40.880 align:start position:0%
uh it can be passed in registers without
 

00:55:40.880 --> 00:55:43.349 align:start position:0%
uh it can be passed in registers without
any<00:55:41.119><c> copy</c><00:55:41.599><c> at</c><00:55:41.760><c> all</c>

00:55:43.349 --> 00:55:43.359 align:start position:0%
any copy at all
 

00:55:43.359 --> 00:55:49.910 align:start position:0%
any copy at all
um<00:55:45.200><c> what</c><00:55:45.359><c> you</c><00:55:45.520><c> might</c><00:55:45.680><c> call</c><00:55:45.920><c> zero</c><00:55:46.839><c> copy</c>

00:55:49.910 --> 00:55:49.920 align:start position:0%
 
 

00:55:49.920 --> 00:55:52.789 align:start position:0%
 
remember<00:55:50.319><c> the</c><00:55:50.480><c> send</c><00:55:50.799><c> only</c><00:55:50.960><c> proceeds</c><00:55:51.520><c> if</c><00:55:52.319><c> p2</c><00:55:52.720><c> is</c>

00:55:52.789 --> 00:55:52.799 align:start position:0%
remember the send only proceeds if p2 is
 

00:55:52.799 --> 00:55:54.470 align:start position:0%
remember the send only proceeds if p2 is
already<00:55:53.119><c> in</c><00:55:53.200><c> receive</c><00:55:53.680><c> and</c><00:55:53.839><c> it</c>

00:55:54.470 --> 00:55:54.480 align:start position:0%
already in receive and it
 

00:55:54.480 --> 00:55:56.789 align:start position:0%
already in receive and it
the<00:55:54.640><c> send</c><00:55:54.960><c> basically</c><00:55:55.280><c> jumps</c><00:55:55.599><c> directly</c><00:55:55.920><c> to</c><00:55:56.079><c> p2</c>

00:55:56.789 --> 00:55:56.799 align:start position:0%
the send basically jumps directly to p2
 

00:55:56.799 --> 00:55:59.510 align:start position:0%
the send basically jumps directly to p2
well<00:55:57.359><c> this</c><00:55:57.680><c> code</c><00:55:58.079><c> path</c><00:55:58.319><c> through</c><00:55:58.480><c> the</c><00:55:58.640><c> kernel</c>

00:55:59.510 --> 00:55:59.520 align:start position:0%
well this code path through the kernel
 

00:55:59.520 --> 00:56:02.549 align:start position:0%
well this code path through the kernel
takes<00:55:59.920><c> care</c><00:56:00.640><c> to</c><00:56:00.960><c> not</c><00:56:01.280><c> disturb</c><00:56:02.000><c> a</c><00:56:02.079><c> bunch</c><00:56:02.319><c> of</c><00:56:02.400><c> the</c>

00:56:02.549 --> 00:56:02.559 align:start position:0%
takes care to not disturb a bunch of the
 

00:56:02.559 --> 00:56:04.150 align:start position:0%
takes care to not disturb a bunch of the
registers

00:56:04.150 --> 00:56:04.160 align:start position:0%
registers
 

00:56:04.160 --> 00:56:05.670 align:start position:0%
registers
and<00:56:04.240><c> that</c><00:56:04.400><c> means</c><00:56:04.640><c> that</c><00:56:04.799><c> p1</c><00:56:05.200><c> can</c><00:56:05.359><c> put</c><00:56:05.599><c> its</c>

00:56:05.670 --> 00:56:05.680 align:start position:0%
and that means that p1 can put its
 

00:56:05.680 --> 00:56:07.510 align:start position:0%
and that means that p1 can put its
system<00:56:06.079><c> call</c><00:56:06.319><c> if</c><00:56:06.480><c> it's</c><00:56:06.720><c> if</c><00:56:06.880><c> the</c><00:56:06.960><c> message</c><00:56:07.359><c> is</c>

00:56:07.510 --> 00:56:07.520 align:start position:0%
system call if it's if the message is
 

00:56:07.520 --> 00:56:07.990 align:start position:0%
system call if it's if the message is
short

00:56:07.990 --> 00:56:08.000 align:start position:0%
short
 

00:56:08.000 --> 00:56:10.390 align:start position:0%
short
it<00:56:08.079><c> can</c><00:56:08.240><c> put</c><00:56:08.400><c> the</c><00:56:08.559><c> message</c><00:56:09.040><c> in</c><00:56:09.359><c> certain</c>

00:56:10.390 --> 00:56:10.400 align:start position:0%
it can put the message in certain
 

00:56:10.400 --> 00:56:11.990 align:start position:0%
it can put the message in certain
designated<00:56:11.040><c> registers</c><00:56:11.599><c> the</c><00:56:11.680><c> kernel</c>

00:56:11.990 --> 00:56:12.000 align:start position:0%
designated registers the kernel
 

00:56:12.000 --> 00:56:14.950 align:start position:0%
designated registers the kernel
guarantees<00:56:12.480><c> to</c><00:56:12.640><c> preserve</c><00:56:13.040><c> those</c><00:56:13.280><c> registers</c>

00:56:14.950 --> 00:56:14.960 align:start position:0%
guarantees to preserve those registers
 

00:56:14.960 --> 00:56:18.390 align:start position:0%
guarantees to preserve those registers
on<00:56:15.119><c> its</c><00:56:15.280><c> way</c><00:56:15.440><c> up</c><00:56:15.520><c> to</c><00:56:15.680><c> p2</c><00:56:16.160><c> and</c><00:56:16.240><c> that</c><00:56:16.400><c> means</c><00:56:16.720><c> that</c>

00:56:18.390 --> 00:56:18.400 align:start position:0%
on its way up to p2 and that means that
 

00:56:18.400 --> 00:56:21.109 align:start position:0%
on its way up to p2 and that means that
when<00:56:18.640><c> the</c><00:56:18.720><c> kernel</c><00:56:19.760><c> returns</c><00:56:20.400><c> from</c><00:56:20.559><c> the</c><00:56:20.640><c> receive</c>

00:56:21.109 --> 00:56:21.119 align:start position:0%
when the kernel returns from the receive
 

00:56:21.119 --> 00:56:22.230 align:start position:0%
when the kernel returns from the receive
system<00:56:21.440><c> call</c><00:56:21.760><c> but</c>

00:56:22.230 --> 00:56:22.240 align:start position:0%
system call but
 

00:56:22.240 --> 00:56:24.470 align:start position:0%
system call but
as<00:56:22.400><c> a</c><00:56:22.480><c> result</c><00:56:22.799><c> of</c><00:56:22.960><c> send</c><00:56:23.680><c> the</c><00:56:23.920><c> contents</c><00:56:24.400><c> of</c>

00:56:24.470 --> 00:56:24.480 align:start position:0%
as a result of send the contents of
 

00:56:24.480 --> 00:56:25.270 align:start position:0%
as a result of send the contents of
those

00:56:25.270 --> 00:56:25.280 align:start position:0%
those
 

00:56:25.280 --> 00:56:28.549 align:start position:0%
those
designated<00:56:25.920><c> registers</c><00:56:26.640><c> hold</c><00:56:26.880><c> the</c><00:56:27.040><c> message</c>

00:56:28.549 --> 00:56:28.559 align:start position:0%
designated registers hold the message
 

00:56:28.559 --> 00:56:30.150 align:start position:0%
designated registers hold the message
and<00:56:28.640><c> therefore</c><00:56:29.040><c> never</c><00:56:29.200><c> had</c><00:56:29.359><c> to</c><00:56:29.440><c> be</c><00:56:29.599><c> copied</c><00:56:30.000><c> at</c>

00:56:30.150 --> 00:56:30.160 align:start position:0%
and therefore never had to be copied at
 

00:56:30.160 --> 00:56:31.829 align:start position:0%
and therefore never had to be copied at
all<00:56:30.319><c> from</c><00:56:30.480><c> memory</c><00:56:30.799><c> to</c><00:56:30.960><c> memory</c>

00:56:31.829 --> 00:56:31.839 align:start position:0%
all from memory to memory
 

00:56:31.839 --> 00:56:33.270 align:start position:0%
all from memory to memory
um<00:56:32.079><c> never</c><00:56:32.319><c> had</c><00:56:32.480><c> to</c><00:56:32.559><c> be</c><00:56:32.640><c> moved</c><00:56:32.880><c> at</c><00:56:33.040><c> all</c><00:56:33.119><c> they're</c>

00:56:33.270 --> 00:56:33.280 align:start position:0%
um never had to be moved at all they're
 

00:56:33.280 --> 00:56:34.549 align:start position:0%
um never had to be moved at all they're
just<00:56:33.359><c> sitting</c><00:56:33.680><c> right</c><00:56:33.920><c> in</c><00:56:34.000><c> the</c><00:56:34.079><c> registers</c>

00:56:34.549 --> 00:56:34.559 align:start position:0%
just sitting right in the registers
 

00:56:34.559 --> 00:56:35.589 align:start position:0%
just sitting right in the registers
where<00:56:34.720><c> they</c><00:56:34.880><c> can</c><00:56:34.960><c> be</c><00:56:35.119><c> accessed</c>

00:56:35.589 --> 00:56:35.599 align:start position:0%
where they can be accessed
 

00:56:35.599 --> 00:56:39.030 align:start position:0%
where they can be accessed
very<00:56:35.839><c> quickly</c><00:56:37.200><c> um</c>

00:56:39.030 --> 00:56:39.040 align:start position:0%
very quickly um
 

00:56:39.040 --> 00:56:40.069 align:start position:0%
very quickly um
and<00:56:39.200><c> this</c><00:56:39.359><c> you</c><00:56:39.440><c> know</c><00:56:39.599><c> of</c><00:56:39.599><c> course</c><00:56:39.760><c> this</c><00:56:39.920><c> only</c>

00:56:40.069 --> 00:56:40.079 align:start position:0%
and this you know of course this only
 

00:56:40.079 --> 00:56:42.549 align:start position:0%
and this you know of course this only
works<00:56:40.319><c> for</c><00:56:40.400><c> small</c><00:56:40.720><c> messages</c>

00:56:42.549 --> 00:56:42.559 align:start position:0%
works for small messages
 

00:56:42.559 --> 00:56:45.670 align:start position:0%
works for small messages
for<00:56:42.799><c> very</c><00:56:43.040><c> large</c><00:56:43.359><c> messages</c><00:56:45.119><c> l4</c>

00:56:45.670 --> 00:56:45.680 align:start position:0%
for very large messages l4
 

00:56:45.680 --> 00:56:48.630 align:start position:0%
for very large messages l4
could<00:56:45.920><c> carry</c><00:56:46.400><c> a</c><00:56:46.640><c> page</c><00:56:47.119><c> mapping</c><00:56:47.839><c> in</c><00:56:48.000><c> an</c><00:56:48.160><c> ipc</c>

00:56:48.630 --> 00:56:48.640 align:start position:0%
could carry a page mapping in an ipc
 

00:56:48.640 --> 00:56:49.589 align:start position:0%
could carry a page mapping in an ipc
message<00:56:49.119><c> so</c><00:56:49.280><c> for</c>

00:56:49.589 --> 00:56:49.599 align:start position:0%
message so for
 

00:56:49.599 --> 00:56:53.510 align:start position:0%
message so for
for<00:56:49.760><c> huge</c><00:56:50.079><c> messages</c><00:56:52.079><c> um</c>

00:56:53.510 --> 00:56:53.520 align:start position:0%
for huge messages um
 

00:56:53.520 --> 00:56:54.950 align:start position:0%
for huge messages um
you<00:56:53.599><c> know</c><00:56:53.760><c> like</c><00:56:53.920><c> the</c><00:56:54.079><c> result</c><00:56:54.480><c> of</c><00:56:54.559><c> reading</c><00:56:54.880><c> a</c>

00:56:54.950 --> 00:56:54.960 align:start position:0%
you know like the result of reading a
 

00:56:54.960 --> 00:56:56.829 align:start position:0%
you know like the result of reading a
block<00:56:55.280><c> from</c><00:56:55.440><c> a</c><00:56:55.520><c> file</c><00:56:55.839><c> or</c><00:56:56.000><c> something</c>

00:56:56.829 --> 00:56:56.839 align:start position:0%
block from a file or something
 

00:56:56.839 --> 00:57:00.630 align:start position:0%
block from a file or something
um<00:56:59.760><c> you</c><00:56:59.839><c> could</c><00:57:00.000><c> just</c>

00:57:00.630 --> 00:57:00.640 align:start position:0%
um you could just
 

00:57:00.640 --> 00:57:02.150 align:start position:0%
um you could just
send<00:57:00.880><c> the</c><00:57:00.960><c> page</c><00:57:01.200><c> and</c><00:57:01.359><c> it'll</c><00:57:01.440><c> be</c><00:57:01.599><c> mapped</c><00:57:01.920><c> into</c>

00:57:02.150 --> 00:57:02.160 align:start position:0%
send the page and it'll be mapped into
 

00:57:02.160 --> 00:57:04.150 align:start position:0%
send the page and it'll be mapped into
the<00:57:02.240><c> target's</c><00:57:02.559><c> address</c><00:57:02.880><c> space</c><00:57:03.280><c> again</c>

00:57:04.150 --> 00:57:04.160 align:start position:0%
the target's address space again
 

00:57:04.160 --> 00:57:08.069 align:start position:0%
the target's address space again
without<00:57:04.559><c> any</c><00:57:04.799><c> copy</c><00:57:06.480><c> so</c><00:57:06.640><c> this</c><00:57:06.799><c> is</c><00:57:06.880><c> done</c><00:57:07.119><c> through</c>

00:57:08.069 --> 00:57:08.079 align:start position:0%
without any copy so this is done through
 

00:57:08.079 --> 00:57:11.430 align:start position:0%
without any copy so this is done through
page<00:57:08.319><c> mapping</c><00:57:09.440><c> give</c><00:57:09.599><c> away</c><00:57:09.920><c> the</c><00:57:10.079><c> page</c>

00:57:11.430 --> 00:57:11.440 align:start position:0%
page mapping give away the page
 

00:57:11.440 --> 00:57:14.630 align:start position:0%
page mapping give away the page
or<00:57:11.920><c> access</c><00:57:12.240><c> to</c><00:57:12.400><c> a</c><00:57:12.480><c> copy</c><00:57:12.880><c> to</c>

00:57:14.630 --> 00:57:14.640 align:start position:0%
or access to a copy to
 

00:57:14.640 --> 00:57:18.230 align:start position:0%
or access to a copy to
access<00:57:15.040><c> to</c><00:57:15.839><c> permission</c><00:57:16.240><c> to</c><00:57:16.400><c> share</c><00:57:16.640><c> the</c><00:57:16.720><c> page</c>

00:57:18.230 --> 00:57:18.240 align:start position:0%
access to permission to share the page
 

00:57:18.240 --> 00:57:20.789 align:start position:0%
access to permission to share the page
and<00:57:18.400><c> so</c><00:57:18.559><c> if</c><00:57:18.720><c> small</c><00:57:19.040><c> messages</c><00:57:19.520><c> are</c><00:57:19.599><c> fast</c><00:57:20.480><c> uh</c>

00:57:20.789 --> 00:57:20.799 align:start position:0%
and so if small messages are fast uh
 

00:57:20.799 --> 00:57:22.470 align:start position:0%
and so if small messages are fast uh
huge<00:57:21.040><c> messages</c><00:57:21.520><c> are</c><00:57:21.599><c> pretty</c><00:57:21.839><c> fast</c><00:57:22.240><c> you</c><00:57:22.319><c> know</c>

00:57:22.470 --> 00:57:22.480 align:start position:0%
huge messages are pretty fast you know
 

00:57:22.480 --> 00:57:23.829 align:start position:0%
huge messages are pretty fast you know
you<00:57:22.559><c> still</c><00:57:22.720><c> have</c><00:57:22.799><c> to</c><00:57:22.960><c> adjust</c><00:57:23.280><c> the</c><00:57:23.359><c> page</c><00:57:23.599><c> table</c>

00:57:23.829 --> 00:57:23.839 align:start position:0%
you still have to adjust the page table
 

00:57:23.839 --> 00:57:24.870 align:start position:0%
you still have to adjust the page table
of<00:57:23.920><c> the</c><00:57:24.000><c> target</c><00:57:24.400><c> but</c>

00:57:24.870 --> 00:57:24.880 align:start position:0%
of the target but
 

00:57:24.880 --> 00:57:27.349 align:start position:0%
of the target but
that's<00:57:25.040><c> much</c><00:57:25.280><c> faster</c><00:57:25.599><c> than</c><00:57:25.760><c> copying</c><00:57:27.119><c> and</c><00:57:27.280><c> a</c>

00:57:27.349 --> 00:57:27.359 align:start position:0%
that's much faster than copying and a
 

00:57:27.359 --> 00:57:28.390 align:start position:0%
that's much faster than copying and a
final<00:57:27.760><c> trick</c><00:57:28.079><c> that</c>

00:57:28.390 --> 00:57:28.400 align:start position:0%
final trick that
 

00:57:28.400 --> 00:57:32.470 align:start position:0%
final trick that
l4<00:57:28.799><c> played</c><00:57:29.440><c> was</c><00:57:30.400><c> noticing</c><00:57:31.040><c> that</c>

00:57:32.470 --> 00:57:32.480 align:start position:0%
l4 played was noticing that
 

00:57:32.480 --> 00:57:34.069 align:start position:0%
l4 played was noticing that
if<00:57:32.640><c> you're</c><00:57:32.799><c> doing</c><00:57:33.040><c> an</c><00:57:33.119><c> rpc</c><00:57:33.520><c> with</c><00:57:33.680><c> a</c><00:57:33.760><c> request</c>

00:57:34.069 --> 00:57:34.079 align:start position:0%
if you're doing an rpc with a request
 

00:57:34.079 --> 00:57:36.230 align:start position:0%
if you're doing an rpc with a request
and<00:57:34.240><c> a</c><00:57:34.319><c> response</c><00:57:34.880><c> there's</c><00:57:35.040><c> a</c><00:57:35.119><c> very</c><00:57:35.440><c> stylized</c>

00:57:36.230 --> 00:57:36.240 align:start position:0%
and a response there's a very stylized
 

00:57:36.240 --> 00:57:37.109 align:start position:0%
and a response there's a very stylized
pairs

00:57:37.109 --> 00:57:37.119 align:start position:0%
pairs
 

00:57:37.119 --> 00:57:40.309 align:start position:0%
pairs
of<00:57:38.839><c> um</c>

00:57:40.309 --> 00:57:40.319 align:start position:0%
of um
 

00:57:40.319 --> 00:57:42.950 align:start position:0%
of um
uh<00:57:41.599><c> system</c><00:57:42.000><c> calls</c><00:57:42.319><c> and</c><00:57:42.400><c> you</c><00:57:42.559><c> may</c><00:57:42.720><c> as</c><00:57:42.799><c> well</c>

00:57:42.950 --> 00:57:42.960 align:start position:0%
uh system calls and you may as well
 

00:57:42.960 --> 00:57:43.829 align:start position:0%
uh system calls and you may as well
combine

00:57:43.829 --> 00:57:43.839 align:start position:0%
combine
 

00:57:43.839 --> 00:57:45.910 align:start position:0%
combine
system<00:57:44.240><c> calls</c><00:57:44.880><c> send</c><00:57:45.119><c> and</c><00:57:45.280><c> receive</c><00:57:45.599><c> system</c>

00:57:45.910 --> 00:57:45.920 align:start position:0%
system calls send and receive system
 

00:57:45.920 --> 00:57:47.349 align:start position:0%
system calls send and receive system
calls<00:57:46.240><c> in</c><00:57:46.319><c> order</c><00:57:46.640><c> to</c>

00:57:47.349 --> 00:57:47.359 align:start position:0%
calls in order to
 

00:57:47.359 --> 00:57:50.069 align:start position:0%
calls in order to
reduce<00:57:47.760><c> kernel</c><00:57:48.160><c> crossings</c><00:57:48.720><c> so</c><00:57:49.520><c> um</c><00:57:49.760><c> for</c><00:57:49.920><c> the</c>

00:57:50.069 --> 00:57:50.079 align:start position:0%
reduce kernel crossings so um for the
 

00:57:50.079 --> 00:57:52.230 align:start position:0%
reduce kernel crossings so um for the
special<00:57:50.400><c> case</c><00:57:50.559><c> of</c><00:57:50.720><c> rpc</c><00:57:51.200><c> which</c><00:57:51.440><c> is</c>

00:57:52.230 --> 00:57:52.240 align:start position:0%
special case of rpc which is
 

00:57:52.240 --> 00:57:55.510 align:start position:0%
special case of rpc which is
almost<00:57:52.720><c> always</c><00:57:53.119><c> what</c><00:57:53.839><c> people</c><00:57:54.079><c> are</c><00:57:54.400><c> doing</c>

00:57:55.510 --> 00:57:55.520 align:start position:0%
almost always what people are doing
 

00:57:55.520 --> 00:57:57.750 align:start position:0%
almost always what people are doing
when<00:57:55.680><c> they're</c><00:57:55.839><c> using</c><00:57:56.079><c> ipc</c><00:57:56.480><c> there</c><00:57:56.640><c> was</c><00:57:56.799><c> a</c><00:57:57.040><c> call</c>

00:57:57.750 --> 00:57:57.760 align:start position:0%
when they're using ipc there was a call
 

00:57:57.760 --> 00:58:00.710 align:start position:0%
when they're using ipc there was a call
system<00:57:58.160><c> call</c>

00:58:00.710 --> 00:58:00.720 align:start position:0%
 
 

00:58:00.720 --> 00:58:05.109 align:start position:0%
 
and<00:58:00.960><c> a</c><00:58:01.040><c> call</c><00:58:01.359><c> was</c><00:58:01.520><c> basically</c><00:58:02.000><c> a</c><00:58:02.079><c> combined</c><00:58:03.440><c> send</c>

00:58:05.109 --> 00:58:05.119 align:start position:0%
and a call was basically a combined send
 

00:58:05.119 --> 00:58:08.470 align:start position:0%
and a call was basically a combined send
plus<00:58:06.839><c> receive</c>

00:58:08.470 --> 00:58:08.480 align:start position:0%
plus receive
 

00:58:08.480 --> 00:58:09.990 align:start position:0%
plus receive
you<00:58:08.559><c> know</c><00:58:08.720><c> but</c><00:58:08.880><c> without</c><00:58:09.200><c> the</c><00:58:09.280><c> return</c><00:58:09.599><c> to</c><00:58:09.680><c> user</c>

00:58:09.990 --> 00:58:10.000 align:start position:0%
you know but without the return to user
 

00:58:10.000 --> 00:58:11.750 align:start position:0%
you know but without the return to user
space<00:58:10.559><c> and</c><00:58:10.720><c> then</c>

00:58:11.750 --> 00:58:11.760 align:start position:0%
space and then
 

00:58:11.760 --> 00:58:13.670 align:start position:0%
space and then
re-entry<00:58:12.319><c> into</c><00:58:12.480><c> kernel</c><00:58:12.799><c> space</c><00:58:13.200><c> that</c><00:58:13.440><c> a</c><00:58:13.520><c> pair</c>

00:58:13.670 --> 00:58:13.680 align:start position:0%
re-entry into kernel space that a pair
 

00:58:13.680 --> 00:58:15.670 align:start position:0%
re-entry into kernel space that a pair
of<00:58:13.839><c> system</c>

00:58:15.670 --> 00:58:15.680 align:start position:0%
of system
 

00:58:15.680 --> 00:58:18.630 align:start position:0%
of system
calls<00:58:16.400><c> would</c><00:58:16.559><c> take</c><00:58:17.359><c> um</c><00:58:17.920><c> and</c><00:58:18.079><c> on</c><00:58:18.160><c> the</c><00:58:18.319><c> server</c>

00:58:18.630 --> 00:58:18.640 align:start position:0%
calls would take um and on the server
 

00:58:18.640 --> 00:58:21.430 align:start position:0%
calls would take um and on the server
side<00:58:18.960><c> there</c><00:58:19.119><c> was</c><00:58:19.359><c> a</c><00:58:19.599><c> um</c>

00:58:21.430 --> 00:58:21.440 align:start position:0%
side there was a um
 

00:58:21.440 --> 00:58:24.470 align:start position:0%
side there was a um
a<00:58:21.599><c> single</c><00:58:21.920><c> call</c><00:58:22.160><c> that</c><00:58:22.319><c> would</c><00:58:22.880><c> send</c><00:58:23.280><c> the</c><00:58:23.440><c> reply</c>

00:58:24.470 --> 00:58:24.480 align:start position:0%
a single call that would send the reply
 

00:58:24.480 --> 00:58:28.390 align:start position:0%
a single call that would send the reply
um<00:58:25.280><c> from</c><00:58:26.079><c> one</c><00:58:26.400><c> system</c><00:58:26.799><c> call</c><00:58:27.200><c> and</c><00:58:27.280><c> then</c>

00:58:28.390 --> 00:58:28.400 align:start position:0%
um from one system call and then
 

00:58:28.400 --> 00:58:31.829 align:start position:0%
um from one system call and then
wait<00:58:28.720><c> for</c><00:58:30.160><c> uh</c><00:58:30.319><c> the</c><00:58:30.480><c> request</c><00:58:30.960><c> message</c>

00:58:31.829 --> 00:58:31.839 align:start position:0%
wait for uh the request message
 

00:58:31.839 --> 00:58:34.710 align:start position:0%
wait for uh the request message
from<00:58:32.079><c> anyone</c><00:58:32.559><c> for</c><00:58:32.720><c> the</c><00:58:32.799><c> next</c><00:58:33.119><c> system</c><00:58:33.520><c> call</c><00:58:34.559><c> and</c>

00:58:34.710 --> 00:58:34.720 align:start position:0%
from anyone for the next system call and
 

00:58:34.720 --> 00:58:36.630 align:start position:0%
from anyone for the next system call and
this<00:58:34.880><c> is</c><00:58:34.960><c> basically</c><00:58:35.359><c> ascend</c><00:58:35.920><c> of</c>

00:58:36.630 --> 00:58:36.640 align:start position:0%
this is basically ascend of
 

00:58:36.640 --> 00:58:39.430 align:start position:0%
this is basically ascend of
one<00:58:36.880><c> response</c><00:58:37.520><c> plus</c><00:58:38.079><c> a</c><00:58:38.400><c> wait</c><00:58:38.640><c> to</c><00:58:38.799><c> receive</c><00:58:39.359><c> the</c>

00:58:39.430 --> 00:58:39.440 align:start position:0%
one response plus a wait to receive the
 

00:58:39.440 --> 00:58:40.549 align:start position:0%
one response plus a wait to receive the
next<00:58:39.680><c> request</c>

00:58:40.549 --> 00:58:40.559 align:start position:0%
next request
 

00:58:40.559 --> 00:58:42.150 align:start position:0%
next request
and<00:58:40.720><c> this</c><00:58:40.880><c> again</c><00:58:41.200><c> cut</c><00:58:41.440><c> in</c><00:58:41.520><c> half</c><00:58:41.760><c> the</c><00:58:41.839><c> number</c><00:58:42.079><c> of</c>

00:58:42.150 --> 00:58:42.160 align:start position:0%
and this again cut in half the number of
 

00:58:42.160 --> 00:58:44.549 align:start position:0%
and this again cut in half the number of
kernel<00:58:42.480><c> crossings</c>

00:58:44.549 --> 00:58:44.559 align:start position:0%
kernel crossings
 

00:58:44.559 --> 00:58:47.270 align:start position:0%
kernel crossings
and<00:58:44.880><c> it</c><00:58:45.040><c> turned</c><00:58:45.359><c> out</c><00:58:45.520><c> that</c><00:58:46.000><c> uh</c><00:58:46.319><c> the</c><00:58:46.640><c> sum</c><00:58:46.880><c> of</c><00:58:47.119><c> all</c>

00:58:47.270 --> 00:58:47.280 align:start position:0%
and it turned out that uh the sum of all
 

00:58:47.280 --> 00:58:48.829 align:start position:0%
and it turned out that uh the sum of all
of<00:58:47.440><c> these</c>

00:58:48.829 --> 00:58:48.839 align:start position:0%
of these
 

00:58:48.839 --> 00:58:51.670 align:start position:0%
of these
optimizations<00:58:49.920><c> now</c><00:58:50.160><c> for</c><00:58:50.319><c> the</c><00:58:50.480><c> kind</c><00:58:50.799><c> of</c><00:58:51.359><c> short</c>

00:58:51.670 --> 00:58:51.680 align:start position:0%
optimizations now for the kind of short
 

00:58:51.680 --> 00:58:55.030 align:start position:0%
optimizations now for the kind of short
rpcs<00:58:52.400><c> which</c>

00:58:55.030 --> 00:58:55.040 align:start position:0%
 
 

00:58:55.040 --> 00:58:57.670 align:start position:0%
 
are<00:58:55.599><c> you</c><00:58:55.680><c> know</c><00:58:55.839><c> one</c><00:58:56.079><c> typical</c><00:58:56.400><c> workload</c><00:58:57.520><c> all</c>

00:58:57.670 --> 00:58:57.680 align:start position:0%
are you know one typical workload all
 

00:58:57.680 --> 00:59:00.870 align:start position:0%
are you know one typical workload all
this<00:58:58.000><c> led</c><00:58:58.319><c> to</c><00:58:58.640><c> a</c>

00:59:00.870 --> 00:59:00.880 align:start position:0%
this led to a
 

00:59:00.880 --> 00:59:04.150 align:start position:0%
this led to a
20x<00:59:01.440><c> speed</c><00:59:01.839><c> up</c><00:59:02.960><c> this</c><00:59:03.200><c> is</c><00:59:03.280><c> what</c><00:59:03.520><c> their</c><00:59:03.839><c> paper</c>

00:59:04.150 --> 00:59:04.160 align:start position:0%
20x speed up this is what their paper
 

00:59:04.160 --> 00:59:05.750 align:start position:0%
20x speed up this is what their paper
reported<00:59:04.559><c> 20</c><00:59:04.799><c> x</c><00:59:04.960><c> speed</c><00:59:05.200><c> up</c><00:59:05.359><c> over</c><00:59:05.520><c> their</c>

00:59:05.750 --> 00:59:05.760 align:start position:0%
reported 20 x speed up over their
 

00:59:05.760 --> 00:59:07.589 align:start position:0%
reported 20 x speed up over their
previous<00:59:06.160><c> system</c><00:59:06.480><c> which</c><00:59:06.640><c> was</c>

00:59:07.589 --> 00:59:07.599 align:start position:0%
previous system which was
 

00:59:07.599 --> 00:59:09.030 align:start position:0%
previous system which was
presumably<00:59:08.000><c> a</c><00:59:08.079><c> little</c><00:59:08.240><c> bit</c><00:59:08.319><c> more</c><00:59:08.559><c> like</c><00:59:08.720><c> what</c><00:59:08.960><c> i</c>

00:59:09.030 --> 00:59:09.040 align:start position:0%
presumably a little bit more like what i
 

00:59:09.040 --> 00:59:12.710 align:start position:0%
presumably a little bit more like what i
showed<00:59:09.359><c> in</c><00:59:09.440><c> the</c><00:59:09.920><c> previous</c><00:59:10.319><c> design</c>

00:59:12.710 --> 00:59:12.720 align:start position:0%
showed in the previous design
 

00:59:12.720 --> 00:59:16.150 align:start position:0%
showed in the previous design
and<00:59:12.960><c> so</c><00:59:13.119><c> this</c><00:59:13.200><c> was</c><00:59:13.359><c> an</c><00:59:13.520><c> impressive</c>

00:59:16.150 --> 00:59:16.160 align:start position:0%
 
 

00:59:16.160 --> 00:59:17.990 align:start position:0%
 
this<00:59:16.400><c> paper</c><00:59:16.720><c> came</c><00:59:16.880><c> out</c><00:59:17.040><c> a</c><00:59:17.200><c> few</c><00:59:17.359><c> years</c><00:59:17.599><c> before</c>

00:59:17.990 --> 00:59:18.000 align:start position:0%
this paper came out a few years before
 

00:59:18.000 --> 00:59:19.829 align:start position:0%
this paper came out a few years before
the<00:59:18.400><c> by</c><00:59:18.559><c> the</c><00:59:18.799><c> some</c><00:59:18.960><c> of</c><00:59:19.040><c> the</c><00:59:19.119><c> same</c><00:59:19.359><c> authors</c>

00:59:19.829 --> 00:59:19.839 align:start position:0%
the by the some of the same authors
 

00:59:19.839 --> 00:59:21.109 align:start position:0%
the by the some of the same authors
but<00:59:20.000><c> a</c><00:59:20.079><c> few</c><00:59:20.240><c> years</c><00:59:20.400><c> before</c><00:59:20.640><c> the</c><00:59:20.720><c> people</c><00:59:20.960><c> were</c>

00:59:21.109 --> 00:59:21.119 align:start position:0%
but a few years before the people were
 

00:59:21.119 --> 00:59:23.510 align:start position:0%
but a few years before the people were
reading<00:59:21.760><c> and</c><00:59:21.920><c> this</c><00:59:22.160><c> caused</c><00:59:22.480><c> people</c><00:59:22.799><c> to</c>

00:59:23.510 --> 00:59:23.520 align:start position:0%
reading and this caused people to
 

00:59:23.520 --> 00:59:26.309 align:start position:0%
reading and this caused people to
um<00:59:25.040><c> view</c><00:59:25.280><c> microkernels</c><00:59:25.839><c> a</c><00:59:25.920><c> little</c><00:59:26.079><c> bit</c><00:59:26.160><c> more</c>

00:59:26.309 --> 00:59:26.319 align:start position:0%
um view microkernels a little bit more
 

00:59:26.319 --> 00:59:27.829 align:start position:0%
um view microkernels a little bit more
favorably

00:59:27.829 --> 00:59:27.839 align:start position:0%
favorably
 

00:59:27.839 --> 00:59:29.349 align:start position:0%
favorably
that<00:59:28.000><c> the</c><00:59:28.079><c> ipc</c><00:59:28.559><c> could</c><00:59:28.799><c> actually</c><00:59:29.040><c> be</c><00:59:29.200><c> made</c>

00:59:29.349 --> 00:59:29.359 align:start position:0%
that the ipc could actually be made
 

00:59:29.359 --> 00:59:32.069 align:start position:0%
that the ipc could actually be made
quite<00:59:30.839><c> fast</c>

00:59:32.069 --> 00:59:32.079 align:start position:0%
quite fast
 

00:59:32.079 --> 00:59:35.670 align:start position:0%
quite fast
any<00:59:32.400><c> questions</c><00:59:32.799><c> about</c><00:59:33.119><c> um</c><00:59:34.400><c> these</c><00:59:34.720><c> ipc</c><00:59:35.200><c> tricks</c>

00:59:35.670 --> 00:59:35.680 align:start position:0%
any questions about um these ipc tricks
 

00:59:35.680 --> 00:59:36.390 align:start position:0%
any questions about um these ipc tricks
that

00:59:36.390 --> 00:59:36.400 align:start position:0%
that
 

00:59:36.400 --> 00:59:39.829 align:start position:0%
that
l4<00:59:36.799><c> plays</c><00:59:39.280><c> yeah</c><00:59:39.599><c> i</c>

00:59:39.829 --> 00:59:39.839 align:start position:0%
l4 plays yeah i
 

00:59:39.839 --> 00:59:42.150 align:start position:0%
l4 plays yeah i
i<00:59:40.000><c> think</c><00:59:40.240><c> i</c><00:59:40.319><c> missed</c><00:59:40.640><c> this</c><00:59:40.960><c> but</c><00:59:41.200><c> um</c><00:59:41.680><c> when</c><00:59:41.920><c> is</c><00:59:42.000><c> the</c>

00:59:42.150 --> 00:59:42.160 align:start position:0%
i think i missed this but um when is the
 

00:59:42.160 --> 00:59:42.950 align:start position:0%
i think i missed this but um when is the
process

00:59:42.950 --> 00:59:42.960 align:start position:0%
process
 

00:59:42.960 --> 00:59:45.829 align:start position:0%
process
uh<00:59:43.680><c> sending</c><00:59:44.079><c> the</c><00:59:44.240><c> or</c><00:59:44.400><c> like</c><00:59:44.640><c> receiving</c><00:59:45.680><c> uh</c>

00:59:45.829 --> 00:59:45.839 align:start position:0%
uh sending the or like receiving uh
 

00:59:45.839 --> 00:59:46.789 align:start position:0%
uh sending the or like receiving uh
messages

00:59:46.789 --> 00:59:46.799 align:start position:0%
messages
 

00:59:46.799 --> 00:59:50.150 align:start position:0%
messages
like<00:59:46.960><c> when</c><00:59:47.200><c> is</c><00:59:47.280><c> it</c><00:59:47.440><c> using</c><00:59:47.680><c> that</c><00:59:47.920><c> system</c><00:59:48.240><c> call</c>

00:59:50.150 --> 00:59:50.160 align:start position:0%
like when is it using that system call
 

00:59:50.160 --> 00:59:52.870 align:start position:0%
like when is it using that system call
okay<00:59:50.480><c> actually</c><00:59:50.799><c> so</c><00:59:51.359><c> for</c><00:59:51.599><c> rpcs</c><00:59:52.319><c> for</c><00:59:52.480><c> request</c>

00:59:52.870 --> 00:59:52.880 align:start position:0%
okay actually so for rpcs for request
 

00:59:52.880 --> 00:59:53.990 align:start position:0%
okay actually so for rpcs for request
response

00:59:53.990 --> 00:59:54.000 align:start position:0%
response
 

00:59:54.000 --> 00:59:57.670 align:start position:0%
response
in<00:59:54.079><c> fact</c><00:59:56.079><c> in</c><00:59:56.240><c> fact</c><00:59:56.720><c> the</c><00:59:56.960><c> the</c>

00:59:57.670 --> 00:59:57.680 align:start position:0%
in fact in fact the the
 

00:59:57.680 --> 01:00:00.870 align:start position:0%
in fact in fact the the
processes<00:59:58.240><c> use</c><00:59:58.400><c> this</c><00:59:58.640><c> pair</c><00:59:59.040><c> of</c><01:00:00.400><c> of</c><01:00:00.559><c> system</c>

01:00:00.870 --> 01:00:00.880 align:start position:0%
processes use this pair of of system
 

01:00:00.880 --> 01:00:01.430 align:start position:0%
processes use this pair of of system
calls

01:00:01.430 --> 01:00:01.440 align:start position:0%
calls
 

01:00:01.440 --> 01:00:04.710 align:start position:0%
calls
rather<01:00:01.760><c> than</c><01:00:01.920><c> send</c><01:00:02.160><c> and</c><01:00:02.319><c> receive</c><01:00:04.240><c> so</c><01:00:04.480><c> yeah</c>

01:00:04.710 --> 01:00:04.720 align:start position:0%
rather than send and receive so yeah
 

01:00:04.720 --> 01:00:06.150 align:start position:0%
rather than send and receive so yeah
call

01:00:06.150 --> 01:00:06.160 align:start position:0%
call
 

01:00:06.160 --> 01:00:07.270 align:start position:0%
call
you<01:00:06.240><c> really</c><01:00:06.480><c> give</c><01:00:06.559><c> it</c><01:00:06.640><c> two</c><01:00:06.799><c> arguments</c><01:00:07.200><c> a</c>

01:00:07.270 --> 01:00:07.280 align:start position:0%
you really give it two arguments a
 

01:00:07.280 --> 01:00:09.670 align:start position:0%
you really give it two arguments a
message<01:00:07.599><c> you</c><01:00:07.680><c> want</c><01:00:07.839><c> to</c><01:00:08.000><c> send</c><01:00:08.880><c> and</c><01:00:09.119><c> a</c><01:00:09.280><c> place</c><01:00:09.520><c> to</c>

01:00:09.670 --> 01:00:09.680 align:start position:0%
message you want to send and a place to
 

01:00:09.680 --> 01:00:11.190 align:start position:0%
message you want to send and a place to
put<01:00:10.000><c> the</c><01:00:10.240><c> response</c>

01:00:11.190 --> 01:00:11.200 align:start position:0%
put the response
 

01:00:11.200 --> 01:00:12.870 align:start position:0%
put the response
and<01:00:11.599><c> inside</c><01:00:11.920><c> the</c><01:00:12.000><c> kernel</c><01:00:12.240><c> it</c><01:00:12.319><c> just</c><01:00:12.480><c> combines</c>

01:00:12.870 --> 01:00:12.880 align:start position:0%
and inside the kernel it just combines
 

01:00:12.880 --> 01:00:14.710 align:start position:0%
and inside the kernel it just combines
these<01:00:13.119><c> two</c><01:00:13.680><c> now</c><01:00:14.000><c> you</c><01:00:14.079><c> could</c><01:00:14.240><c> view</c><01:00:14.400><c> this</c><01:00:14.559><c> as</c><01:00:14.640><c> a</c>

01:00:14.710 --> 01:00:14.720 align:start position:0%
these two now you could view this as a
 

01:00:14.720 --> 01:00:15.349 align:start position:0%
these two now you could view this as a
bit<01:00:14.799><c> of</c><01:00:14.880><c> a</c><01:00:14.960><c> hack</c>

01:00:15.349 --> 01:00:15.359 align:start position:0%
bit of a hack
 

01:00:15.359 --> 01:00:19.910 align:start position:0%
bit of a hack
but<01:00:16.079><c> um</c><01:00:17.760><c> because</c><01:00:18.079><c> ipc</c><01:00:18.480><c> is</c><01:00:18.640><c> so</c><01:00:18.880><c> frequent</c>

01:00:19.910 --> 01:00:19.920 align:start position:0%
but um because ipc is so frequent
 

01:00:19.920 --> 01:00:22.230 align:start position:0%
but um because ipc is so frequent
it's<01:00:20.400><c> worth</c><01:00:21.040><c> a</c><01:00:21.280><c> little</c><01:00:21.440><c> bit</c><01:00:21.599><c> of</c><01:00:21.680><c> hackery</c><01:00:22.079><c> in</c>

01:00:22.230 --> 01:00:22.240 align:start position:0%
it's worth a little bit of hackery in
 

01:00:22.240 --> 01:00:23.510 align:start position:0%
it's worth a little bit of hackery in
order

01:00:23.510 --> 01:00:23.520 align:start position:0%
order
 

01:00:23.520 --> 01:00:26.870 align:start position:0%
order
to<01:00:23.680><c> make</c><01:00:23.839><c> it</c><01:00:23.920><c> be</c><01:00:24.079><c> fast</c><01:00:25.280><c> and</c><01:00:25.440><c> in</c><01:00:25.599><c> the</c><01:00:25.760><c> diagram</c><01:00:26.400><c> um</c>

01:00:26.870 --> 01:00:26.880 align:start position:0%
to make it be fast and in the diagram um
 

01:00:26.880 --> 01:00:29.589 align:start position:0%
to make it be fast and in the diagram um
up<01:00:27.040><c> there</c><01:00:27.359><c> in</c><01:00:27.520><c> the</c><01:00:27.599><c> box</c><01:00:28.079><c> where</c><01:00:28.480><c> um</c><01:00:28.720><c> you</c><01:00:28.880><c> have</c><01:00:29.040><c> p2</c>

01:00:29.589 --> 01:00:29.599 align:start position:0%
up there in the box where um you have p2
 

01:00:29.599 --> 01:00:30.710 align:start position:0%
up there in the box where um you have p2
sending<01:00:29.920><c> that</c><01:00:30.160><c> or</c><01:00:30.319><c> like</c>

01:00:30.710 --> 01:00:30.720 align:start position:0%
sending that or like
 

01:00:30.720 --> 01:00:33.750 align:start position:0%
sending that or like
running<01:00:30.960><c> the</c><01:00:31.119><c> receive</c><01:00:31.599><c> system</c><01:00:32.000><c> call</c><01:00:32.559><c> why</c><01:00:32.960><c> what</c>

01:00:33.750 --> 01:00:33.760 align:start position:0%
running the receive system call why what
 

01:00:33.760 --> 01:00:37.589 align:start position:0%
running the receive system call why what
what<01:00:34.000><c> prompted</c><01:00:34.480><c> p2</c><01:00:35.040><c> to</c><01:00:35.839><c> okay</c>

01:00:37.589 --> 01:00:37.599 align:start position:0%
what prompted p2 to okay
 

01:00:37.599 --> 01:00:40.870 align:start position:0%
what prompted p2 to okay
in<01:00:37.839><c> in</c><01:00:38.079><c> uh</c><01:00:38.480><c> in</c><01:00:38.640><c> my</c><01:00:38.880><c> rbc</c><01:00:39.440><c> world</c><01:00:40.079><c> uh</c><01:00:40.240><c> we</c><01:00:40.400><c> got</c><01:00:40.559><c> a</c><01:00:40.720><c> we</c>

01:00:40.870 --> 01:00:40.880 align:start position:0%
in in uh in my rbc world uh we got a we
 

01:00:40.880 --> 01:00:43.750 align:start position:0%
in in uh in my rbc world uh we got a we
have<01:00:41.040><c> clients</c>

01:00:43.750 --> 01:00:43.760 align:start position:0%
have clients
 

01:00:43.760 --> 01:00:47.510 align:start position:0%
have clients
and<01:00:43.920><c> they're</c><01:00:44.160><c> sending</c><01:00:44.480><c> requests</c><01:00:45.040><c> to</c><01:00:45.280><c> servers</c>

01:00:47.510 --> 01:00:47.520 align:start position:0%
and they're sending requests to servers
 

01:00:47.520 --> 01:00:50.950 align:start position:0%
and they're sending requests to servers
um<01:00:49.839><c> and</c><01:00:49.920><c> the</c><01:00:50.079><c> server</c><01:00:50.319><c> is</c><01:00:50.400><c> gonna</c><01:00:50.559><c> do</c><01:00:50.720><c> something</c>

01:00:50.950 --> 01:00:50.960 align:start position:0%
um and the server is gonna do something
 

01:00:50.960 --> 01:00:52.470 align:start position:0%
um and the server is gonna do something
and<01:00:51.200><c> reply</c><01:00:51.680><c> so</c>

01:00:52.470 --> 01:00:52.480 align:start position:0%
and reply so
 

01:00:52.480 --> 01:00:54.789 align:start position:0%
and reply so
since<01:00:52.799><c> p2</c><01:00:53.119><c> is</c><01:00:53.200><c> a</c><01:00:53.280><c> server</c><01:00:53.680><c> we</c><01:00:53.839><c> imagine</c><01:00:54.160><c> that</c><01:00:54.319><c> p2</c>

01:00:54.789 --> 01:00:54.799 align:start position:0%
since p2 is a server we imagine that p2
 

01:00:54.799 --> 01:00:56.150 align:start position:0%
since p2 is a server we imagine that p2
is<01:00:54.880><c> sitting</c><01:00:55.119><c> on</c><01:00:55.280><c> a</c><01:00:55.359><c> while</c><01:00:55.680><c> loop</c>

01:00:56.150 --> 01:00:56.160 align:start position:0%
is sitting on a while loop
 

01:00:56.160 --> 01:00:57.910 align:start position:0%
is sitting on a while loop
in<01:00:56.240><c> which</c><01:00:56.480><c> it</c><01:00:57.040><c> in</c><01:00:57.119><c> which</c><01:00:57.440><c> it's</c><01:00:57.680><c> going</c><01:00:57.839><c> to</c>

01:00:57.910 --> 01:00:57.920 align:start position:0%
in which it in which it's going to
 

01:00:57.920 --> 01:00:59.990 align:start position:0%
in which it in which it's going to
receive<01:00:58.240><c> the</c><01:00:58.319><c> next</c><01:00:58.559><c> message</c><01:00:58.880><c> from</c><01:00:59.040><c> any</c><01:00:59.359><c> client</c>

01:00:59.990 --> 01:01:00.000 align:start position:0%
receive the next message from any client
 

01:01:00.000 --> 01:01:01.430 align:start position:0%
receive the next message from any client
do<01:01:00.160><c> a</c><01:01:00.240><c> little</c><01:01:00.400><c> bit</c><01:01:00.559><c> of</c><01:01:00.640><c> work</c><01:01:00.880><c> to</c><01:01:00.960><c> process</c><01:01:01.359><c> it</c>

01:01:01.430 --> 01:01:01.440 align:start position:0%
do a little bit of work to process it
 

01:01:01.440 --> 01:01:02.950 align:start position:0%
do a little bit of work to process it
you<01:01:01.520><c> know</c><01:01:01.680><c> look</c><01:01:01.920><c> up</c><01:01:02.000><c> some</c><01:01:02.160><c> data</c><01:01:02.319><c> in</c><01:01:02.400><c> a</c><01:01:02.480><c> database</c>

01:01:02.950 --> 01:01:02.960 align:start position:0%
you know look up some data in a database
 

01:01:02.960 --> 01:01:04.390 align:start position:0%
you know look up some data in a database
or<01:01:03.040><c> something</c><01:01:03.280><c> and</c><01:01:03.359><c> then</c><01:01:03.520><c> send</c><01:01:03.680><c> a</c><01:01:03.760><c> reply</c>

01:01:04.390 --> 01:01:04.400 align:start position:0%
or something and then send a reply
 

01:01:04.400 --> 01:01:05.829 align:start position:0%
or something and then send a reply
and<01:01:04.559><c> go</c><01:01:04.720><c> back</c><01:01:04.880><c> to</c><01:01:04.960><c> the</c><01:01:05.040><c> top</c><01:01:05.280><c> of</c><01:01:05.359><c> the</c><01:01:05.520><c> loop</c><01:01:05.760><c> and</c>

01:01:05.829 --> 01:01:05.839 align:start position:0%
and go back to the top of the loop and
 

01:01:05.839 --> 01:01:08.630 align:start position:0%
and go back to the top of the loop and
wait<01:01:06.079><c> again</c><01:01:06.799><c> so</c><01:01:07.200><c> to</c><01:01:07.359><c> a</c><01:01:07.440><c> first</c><01:01:07.599><c> approximation</c>

01:01:08.630 --> 01:01:08.640 align:start position:0%
wait again so to a first approximation
 

01:01:08.640 --> 01:01:12.230 align:start position:0%
wait again so to a first approximation
we<01:01:08.880><c> expect</c><01:01:09.520><c> p2</c><01:01:10.319><c> to</c><01:01:10.480><c> spend</c><01:01:10.880><c> all</c><01:01:11.119><c> its</c><01:01:11.359><c> time</c>

01:01:12.230 --> 01:01:12.240 align:start position:0%
we expect p2 to spend all its time
 

01:01:12.240 --> 01:01:15.030 align:start position:0%
we expect p2 to spend all its time
uh<01:01:12.720><c> waiting</c><01:01:13.920><c> for</c><01:01:14.079><c> the</c><01:01:14.160><c> next</c><01:01:14.400><c> message</c><01:01:14.799><c> from</c>

01:01:15.030 --> 01:01:15.040 align:start position:0%
uh waiting for the next message from
 

01:01:15.040 --> 01:01:15.750 align:start position:0%
uh waiting for the next message from
anyone

01:01:15.750 --> 01:01:15.760 align:start position:0%
anyone
 

01:01:15.760 --> 01:01:19.030 align:start position:0%
anyone
next<01:01:16.079><c> request</c><01:01:16.480><c> from</c><01:01:16.720><c> anyone</c>

01:01:19.030 --> 01:01:19.040 align:start position:0%
next request from anyone
 

01:01:19.040 --> 01:01:22.230 align:start position:0%
next request from anyone
and<01:01:19.839><c> this</c><01:01:20.079><c> design</c><01:01:20.480><c> really</c>

01:01:22.230 --> 01:01:22.240 align:start position:0%
and this design really
 

01:01:22.240 --> 01:01:26.309 align:start position:0%
and this design really
um<01:01:23.680><c> it</c><01:01:23.839><c> does</c><01:01:24.160><c> kind</c><01:01:24.319><c> of</c><01:01:24.400><c> rely</c><01:01:24.799><c> on</c><01:01:25.040><c> p2</c><01:01:25.440><c> always</c>

01:01:26.309 --> 01:01:26.319 align:start position:0%
um it does kind of rely on p2 always
 

01:01:26.319 --> 01:01:28.230 align:start position:0%
um it does kind of rely on p2 always
at<01:01:26.559><c> when</c><01:01:26.799><c> it's</c><01:01:26.960><c> at</c><01:01:27.119><c> rest</c><01:01:27.520><c> basically</c><01:01:27.920><c> sitting</c>

01:01:28.230 --> 01:01:28.240 align:start position:0%
at when it's at rest basically sitting
 

01:01:28.240 --> 01:01:30.870 align:start position:0%
at when it's at rest basically sitting
in<01:01:28.319><c> the</c><01:01:28.480><c> kernel</c><01:01:28.960><c> in</c><01:01:29.119><c> a</c><01:01:29.200><c> receive</c><01:01:29.599><c> system</c><01:01:29.920><c> call</c>

01:01:30.870 --> 01:01:30.880 align:start position:0%
in the kernel in a receive system call
 

01:01:30.880 --> 01:01:33.750 align:start position:0%
in the kernel in a receive system call
waiting<01:01:32.400><c> for</c><01:01:32.559><c> the</c><01:01:32.640><c> next</c><01:01:32.880><c> request</c><01:01:33.359><c> so</c><01:01:33.520><c> that</c><01:01:33.599><c> the</c>

01:01:33.750 --> 01:01:33.760 align:start position:0%
waiting for the next request so that the
 

01:01:33.760 --> 01:01:35.349 align:start position:0%
waiting for the next request so that the
next<01:01:34.079><c> request</c>

01:01:35.349 --> 01:01:35.359 align:start position:0%
next request
 

01:01:35.359 --> 01:01:39.190 align:start position:0%
next request
can<01:01:36.400><c> directly</c><01:01:37.680><c> basically</c><01:01:38.160><c> return</c><01:01:38.720><c> from</c><01:01:38.960><c> that</c>

01:01:39.190 --> 01:01:39.200 align:start position:0%
can directly basically return from that
 

01:01:39.200 --> 01:01:40.390 align:start position:0%
can directly basically return from that
system<01:01:39.599><c> call</c>

01:01:40.390 --> 01:01:40.400 align:start position:0%
system call
 

01:01:40.400 --> 01:01:42.870 align:start position:0%
system call
right<01:01:40.559><c> and</c><01:01:40.720><c> that's</c><01:01:40.880><c> the</c><01:01:41.040><c> fast</c><01:01:41.440><c> path</c><01:01:42.160><c> that's</c>

01:01:42.870 --> 01:01:42.880 align:start position:0%
right and that's the fast path that's
 

01:01:42.880 --> 01:01:43.750 align:start position:0%
right and that's the fast path that's
super<01:01:43.200><c> efficient</c>

01:01:43.750 --> 01:01:43.760 align:start position:0%
super efficient
 

01:01:43.760 --> 01:01:48.470 align:start position:0%
super efficient
in<01:01:43.839><c> this</c><01:01:44.000><c> design</c><01:01:45.280><c> cool</c><01:01:45.599><c> thank</c><01:01:45.760><c> you</c>

01:01:48.470 --> 01:01:48.480 align:start position:0%
 
 

01:01:48.480 --> 01:01:50.710 align:start position:0%
 
sorry<01:01:48.720><c> just</c><01:01:48.960><c> to</c><01:01:49.119><c> follow</c><01:01:49.359><c> up</c><01:01:49.520><c> on</c><01:01:49.599><c> that</c><01:01:50.559><c> that</c>

01:01:50.710 --> 01:01:50.720 align:start position:0%
sorry just to follow up on that that
 

01:01:50.720 --> 01:01:52.150 align:start position:0%
sorry just to follow up on that that
means<01:01:50.960><c> that</c><01:01:51.760><c> um</c>

01:01:52.150 --> 01:01:52.160 align:start position:0%
means that um
 

01:01:52.160 --> 01:01:54.069 align:start position:0%
means that um
you<01:01:52.319><c> said</c><01:01:52.480><c> that</c><01:01:52.720><c> it</c><01:01:52.799><c> goes</c><01:01:53.040><c> from</c><01:01:53.200><c> p1</c><01:01:53.760><c> it</c><01:01:53.839><c> like</c>

01:01:54.069 --> 01:01:54.079 align:start position:0%
you said that it goes from p1 it like
 

01:01:54.079 --> 01:01:55.910 align:start position:0%
you said that it goes from p1 it like
returns<01:01:54.480><c> to</c><01:01:54.640><c> p2</c>

01:01:55.910 --> 01:01:55.920 align:start position:0%
returns to p2
 

01:01:55.920 --> 01:01:58.309 align:start position:0%
returns to p2
so<01:01:56.079><c> like</c><01:01:56.319><c> to</c><01:01:56.480><c> come</c><01:01:56.720><c> back</c><01:01:57.280><c> you</c><01:01:57.440><c> would</c><01:01:57.599><c> need</c><01:01:57.839><c> to</c>

01:01:58.309 --> 01:01:58.319 align:start position:0%
so like to come back you would need to
 

01:01:58.319 --> 01:01:59.750 align:start position:0%
so like to come back you would need to
send<01:01:58.559><c> the</c><01:01:58.720><c> response</c>

01:01:59.750 --> 01:01:59.760 align:start position:0%
send the response
 

01:01:59.760 --> 01:02:03.109 align:start position:0%
send the response
so<01:02:00.720><c> that's</c><01:02:00.960><c> right</c><01:02:01.119><c> we</c><01:02:01.280><c> expect</c><01:02:01.599><c> p2</c><01:02:02.240><c> to</c>

01:02:03.109 --> 01:02:03.119 align:start position:0%
so that's right we expect p2 to
 

01:02:03.119 --> 01:02:06.630 align:start position:0%
so that's right we expect p2 to
um<01:02:03.839><c> send</c><01:02:04.079><c> a</c><01:02:04.160><c> response</c><01:02:05.440><c> and</c><01:02:05.599><c> and</c><01:02:06.079><c> that</c><01:02:06.319><c> sending</c>

01:02:06.630 --> 01:02:06.640 align:start position:0%
um send a response and and that sending
 

01:02:06.640 --> 01:02:07.589 align:start position:0%
um send a response and and that sending
of<01:02:06.720><c> the</c><01:02:06.880><c> response</c><01:02:07.200><c> actually</c>

01:02:07.589 --> 01:02:07.599 align:start position:0%
of the response actually
 

01:02:07.599 --> 01:02:09.670 align:start position:0%
of the response actually
follows<01:02:08.079><c> basically</c><01:02:08.400><c> the</c><01:02:08.559><c> same</c><01:02:08.799><c> code</c><01:02:09.039><c> path</c><01:02:09.599><c> in</c>

01:02:09.670 --> 01:02:09.680 align:start position:0%
follows basically the same code path in
 

01:02:09.680 --> 01:02:12.470 align:start position:0%
follows basically the same code path in
reverse<01:02:10.079><c> so</c><01:02:10.240><c> that</c><01:02:10.319><c> when</c><01:02:10.559><c> p2</c><01:02:10.880><c> sends</c><01:02:11.119><c> a</c><01:02:11.200><c> response</c>

01:02:12.470 --> 01:02:12.480 align:start position:0%
reverse so that when p2 sends a response
 

01:02:12.480 --> 01:02:16.230 align:start position:0%
reverse so that when p2 sends a response
um<01:02:14.240><c> that</c><01:02:14.480><c> that</c><01:02:14.720><c> effectively</c><01:02:15.280><c> causes</c><01:02:15.680><c> p1</c><01:02:16.079><c> to</c>

01:02:16.230 --> 01:02:16.240 align:start position:0%
um that that effectively causes p1 to
 

01:02:16.240 --> 01:02:16.950 align:start position:0%
um that that effectively causes p1 to
return

01:02:16.950 --> 01:02:16.960 align:start position:0%
return
 

01:02:16.960 --> 01:02:19.990 align:start position:0%
return
from<01:02:18.319><c> i</c><01:02:18.480><c> mean</c><01:02:18.799><c> p1</c><01:02:19.119><c> is</c><01:02:19.200><c> actually</c><01:02:19.359><c> making</c><01:02:19.599><c> this</c>

01:02:19.990 --> 01:02:20.000 align:start position:0%
from i mean p1 is actually making this
 

01:02:20.000 --> 01:02:23.109 align:start position:0%
from i mean p1 is actually making this
call<01:02:20.319><c> system</c><01:02:20.640><c> call</c><01:02:21.200><c> so</c><01:02:21.920><c> the</c><01:02:22.079><c> delivery</c><01:02:22.559><c> of</c><01:02:22.640><c> p2's</c>

01:02:23.109 --> 01:02:23.119 align:start position:0%
call system call so the delivery of p2's
 

01:02:23.119 --> 01:02:24.470 align:start position:0%
call system call so the delivery of p2's
response

01:02:24.470 --> 01:02:24.480 align:start position:0%
response
 

01:02:24.480 --> 01:02:26.630 align:start position:0%
response
causes<01:02:24.880><c> the</c><01:02:25.039><c> call</c><01:02:25.359><c> the</c><01:02:25.520><c> return</c><01:02:25.920><c> from</c><01:02:26.079><c> this</c>

01:02:26.630 --> 01:02:26.640 align:start position:0%
causes the call the return from this
 

01:02:26.640 --> 01:02:29.510 align:start position:0%
causes the call the return from this
from<01:02:26.799><c> this</c><01:02:27.039><c> system</c><01:02:27.359><c> call</c><01:02:27.520><c> back</c><01:02:27.760><c> into</c><01:02:27.920><c> p1</c>

01:02:29.510 --> 01:02:29.520 align:start position:0%
from this system call back into p1
 

01:02:29.520 --> 01:02:32.710 align:start position:0%
from this system call back into p1
okay<01:02:29.839><c> i</c><01:02:30.000><c> see</c><01:02:30.880><c> thank</c><01:02:31.119><c> you</c><01:02:32.240><c> you</c><01:02:32.319><c> know</c><01:02:32.480><c> this</c><01:02:32.559><c> is</c><01:02:32.640><c> a</c>

01:02:32.710 --> 01:02:32.720 align:start position:0%
okay i see thank you you know this is a
 

01:02:32.720 --> 01:02:33.829 align:start position:0%
okay i see thank you you know this is a
little<01:02:32.880><c> bit</c><01:02:32.960><c> different</c><01:02:33.200><c> from</c><01:02:33.359><c> the</c><01:02:33.440><c> usual</c>

01:02:33.829 --> 01:02:33.839 align:start position:0%
little bit different from the usual
 

01:02:33.839 --> 01:02:35.029 align:start position:0%
little bit different from the usual
setup<01:02:34.079><c> where</c><01:02:34.240><c> you</c><01:02:34.400><c> think</c><01:02:34.640><c> of</c>

01:02:35.029 --> 01:02:35.039 align:start position:0%
setup where you think of
 

01:02:35.039 --> 01:02:36.789 align:start position:0%
setup where you think of
you<01:02:35.200><c> know</c><01:02:35.280><c> you</c><01:02:35.440><c> jump</c><01:02:35.680><c> into</c><01:02:35.839><c> the</c><01:02:36.319><c> kernel</c><01:02:36.640><c> on</c><01:02:36.720><c> a</c>

01:02:36.789 --> 01:02:36.799 align:start position:0%
you know you jump into the kernel on a
 

01:02:36.799 --> 01:02:38.230 align:start position:0%
you know you jump into the kernel on a
system<01:02:37.039><c> call</c><01:02:37.280><c> and</c><01:02:37.440><c> you</c><01:02:37.520><c> execute</c><01:02:37.839><c> that</c><01:02:37.920><c> system</c>

01:02:38.230 --> 01:02:38.240 align:start position:0%
system call and you execute that system
 

01:02:38.240 --> 01:02:39.430 align:start position:0%
system call and you execute that system
call<01:02:38.480><c> and</c><01:02:38.559><c> it</c><01:02:38.720><c> returns</c>

01:02:39.430 --> 01:02:39.440 align:start position:0%
call and it returns
 

01:02:39.440 --> 01:02:41.430 align:start position:0%
call and it returns
sort<01:02:39.599><c> of</c><01:02:39.760><c> all</c><01:02:39.920><c> working</c><01:02:40.240><c> on</c><01:02:40.319><c> behalf</c><01:02:40.640><c> of</c><01:02:40.799><c> p1</c>

01:02:41.430 --> 01:02:41.440 align:start position:0%
sort of all working on behalf of p1
 

01:02:41.440 --> 01:02:42.470 align:start position:0%
sort of all working on behalf of p1
which<01:02:41.599><c> is</c><01:02:41.680><c> the</c><01:02:41.760><c> way</c><01:02:42.000><c> pipe</c>

01:02:42.470 --> 01:02:42.480 align:start position:0%
which is the way pipe
 

01:02:42.480 --> 01:02:45.029 align:start position:0%
which is the way pipe
read<01:02:42.720><c> and</c><01:02:42.799><c> write</c><01:02:43.039><c> work</c><01:02:43.680><c> here</c><01:02:44.079><c> you</c><01:02:44.160><c> know</c><01:02:44.319><c> p1</c><01:02:44.880><c> is</c>

01:02:45.029 --> 01:02:45.039 align:start position:0%
read and write work here you know p1 is
 

01:02:45.039 --> 01:02:46.309 align:start position:0%
read and write work here you know p1 is
entering<01:02:45.359><c> the</c><01:02:45.440><c> kernel</c>

01:02:46.309 --> 01:02:46.319 align:start position:0%
entering the kernel
 

01:02:46.319 --> 01:02:49.589 align:start position:0%
entering the kernel
you<01:02:46.400><c> know</c><01:02:46.559><c> it's</c><01:02:46.720><c> p1</c><01:02:47.119><c> entering</c><01:02:47.359><c> the</c><01:02:47.520><c> kernel</c>

01:02:49.589 --> 01:02:49.599 align:start position:0%
you know it's p1 entering the kernel
 

01:02:49.599 --> 01:02:51.670 align:start position:0%
you know it's p1 entering the kernel
you<01:02:49.680><c> know</c><01:02:50.079><c> but</c><01:02:50.240><c> the</c><01:02:50.319><c> return</c><01:02:50.640><c> goes</c><01:02:50.799><c> to</c><01:02:50.960><c> p2</c><01:02:51.520><c> so</c>

01:02:51.670 --> 01:02:51.680 align:start position:0%
you know but the return goes to p2 so
 

01:02:51.680 --> 01:02:53.589 align:start position:0%
you know but the return goes to p2 so
it's

01:02:53.589 --> 01:02:53.599 align:start position:0%
it's
 

01:02:53.599 --> 01:03:02.549 align:start position:0%
it's
kind<01:02:53.680><c> of</c><01:02:53.839><c> odd</c><01:02:54.160><c> but</c><01:02:55.039><c> very</c><01:03:00.839><c> fast</c>

01:03:02.549 --> 01:03:02.559 align:start position:0%
kind of odd but very fast
 

01:03:02.559 --> 01:03:06.309 align:start position:0%
kind of odd but very fast
okay<01:03:03.119><c> um</c><01:03:05.119><c> so</c><01:03:05.280><c> this</c><01:03:05.440><c> was</c><01:03:05.599><c> a</c><01:03:05.680><c> big</c>

01:03:06.309 --> 01:03:06.319 align:start position:0%
okay um so this was a big
 

01:03:06.319 --> 01:03:10.069 align:start position:0%
okay um so this was a big
uh<01:03:06.799><c> big</c><01:03:07.039><c> sort</c><01:03:07.200><c> of</c><01:03:08.160><c> uh</c><01:03:08.640><c> contribution</c><01:03:09.200><c> to</c><01:03:09.359><c> people</c>

01:03:10.069 --> 01:03:10.079 align:start position:0%
uh big sort of uh contribution to people
 

01:03:10.079 --> 01:03:13.670 align:start position:0%
uh big sort of uh contribution to people
uh<01:03:10.319><c> taking</c><01:03:10.559><c> microkernels</c><01:03:11.359><c> um</c>

01:03:13.670 --> 01:03:13.680 align:start position:0%
 
 

01:03:13.680 --> 01:03:14.710 align:start position:0%
 
people's<01:03:14.000><c> willingness</c><01:03:14.480><c> to</c><01:03:14.559><c> take</c>

01:03:14.710 --> 01:03:14.720 align:start position:0%
people's willingness to take
 

01:03:14.720 --> 01:03:17.270 align:start position:0%
people's willingness to take
microkernels<01:03:15.280><c> seriously</c><01:03:16.400><c> as</c><01:03:16.720><c> potentially</c><01:03:17.200><c> a</c>

01:03:17.270 --> 01:03:17.280 align:start position:0%
microkernels seriously as potentially a
 

01:03:17.280 --> 01:03:18.950 align:start position:0%
microkernels seriously as potentially a
replacement<01:03:17.839><c> for</c><01:03:18.160><c> uh</c>

01:03:18.950 --> 01:03:18.960 align:start position:0%
replacement for uh
 

01:03:18.960 --> 01:03:21.910 align:start position:0%
replacement for uh
monolithic<01:03:19.440><c> kernels</c><01:03:20.319><c> um</c><01:03:20.559><c> however</c><01:03:21.039><c> you</c><01:03:21.200><c> know</c>

01:03:21.910 --> 01:03:21.920 align:start position:0%
monolithic kernels um however you know
 

01:03:21.920 --> 01:03:22.950 align:start position:0%
monolithic kernels um however you know
you<01:03:22.079><c> still</c><01:03:22.319><c> have</c><01:03:22.480><c> to</c>

01:03:22.950 --> 01:03:22.960 align:start position:0%
you still have to
 

01:03:22.960 --> 01:03:24.549 align:start position:0%
you still have to
still<01:03:23.359><c> leave</c><01:03:23.599><c> open</c><01:03:23.839><c> the</c><01:03:23.920><c> question</c><01:03:24.240><c> even</c><01:03:24.400><c> if</c>

01:03:24.549 --> 01:03:24.559 align:start position:0%
still leave open the question even if
 

01:03:24.559 --> 01:03:26.309 align:start position:0%
still leave open the question even if
rpc's<01:03:25.039><c> fast</c><01:03:25.359><c> like</c><01:03:25.760><c> where</c><01:03:25.920><c> do</c><01:03:26.079><c> you</c><01:03:26.160><c> get</c><01:03:26.240><c> the</c>

01:03:26.309 --> 01:03:26.319 align:start position:0%
rpc's fast like where do you get the
 

01:03:26.319 --> 01:03:27.670 align:start position:0%
rpc's fast like where do you get the
rest<01:03:26.559><c> of</c><01:03:26.640><c> the</c><01:03:26.720><c> operating</c><01:03:27.119><c> system</c>

01:03:27.670 --> 01:03:27.680 align:start position:0%
rest of the operating system
 

01:03:27.680 --> 01:03:29.670 align:start position:0%
rest of the operating system
right<01:03:27.920><c> you</c><01:03:28.000><c> know</c><01:03:28.559><c> this</c><01:03:28.720><c> kernel</c><01:03:29.119><c> only</c><01:03:29.359><c> has</c><01:03:29.599><c> like</c>

01:03:29.670 --> 01:03:29.680 align:start position:0%
right you know this kernel only has like
 

01:03:29.680 --> 01:03:31.829 align:start position:0%
right you know this kernel only has like
a<01:03:29.760><c> few</c><01:03:30.000><c> percent</c><01:03:30.480><c> of</c><01:03:30.640><c> all</c><01:03:30.799><c> the</c><01:03:30.880><c> stuff</c><01:03:31.280><c> like</c><01:03:31.520><c> file</c>

01:03:31.829 --> 01:03:31.839 align:start position:0%
a few percent of all the stuff like file
 

01:03:31.839 --> 01:03:33.430 align:start position:0%
a few percent of all the stuff like file
systems<01:03:32.160><c> and</c><01:03:32.240><c> network</c><01:03:32.480><c> stacks</c><01:03:32.880><c> we</c><01:03:32.960><c> expect</c><01:03:33.280><c> to</c>

01:03:33.430 --> 01:03:33.440 align:start position:0%
systems and network stacks we expect to
 

01:03:33.440 --> 01:03:33.990 align:start position:0%
systems and network stacks we expect to
be

01:03:33.990 --> 01:03:34.000 align:start position:0%
be
 

01:03:34.000 --> 01:03:36.069 align:start position:0%
be
in<01:03:34.160><c> a</c><01:03:34.240><c> full</c><01:03:34.480><c> operating</c><01:03:34.799><c> system</c><01:03:35.520><c> what</c><01:03:35.680><c> do</c><01:03:35.839><c> we</c><01:03:35.920><c> do</c>

01:03:36.069 --> 01:03:36.079 align:start position:0%
in a full operating system what do we do
 

01:03:36.079 --> 01:03:37.190 align:start position:0%
in a full operating system what do we do
about<01:03:36.240><c> the</c><01:03:36.319><c> rest</c>

01:03:37.190 --> 01:03:37.200 align:start position:0%
about the rest
 

01:03:37.200 --> 01:03:39.109 align:start position:0%
about the rest
um<01:03:37.599><c> and</c><01:03:37.760><c> this</c><01:03:38.000><c> question</c><01:03:38.240><c> is</c><01:03:38.400><c> usually</c><01:03:38.640><c> being</c>

01:03:39.109 --> 01:03:39.119 align:start position:0%
um and this question is usually being
 

01:03:39.119 --> 01:03:41.190 align:start position:0%
um and this question is usually being
asked<01:03:40.079><c> in</c><01:03:40.240><c> the</c><01:03:40.319><c> context</c><01:03:40.720><c> of</c><01:03:40.799><c> some</c>

01:03:41.190 --> 01:03:41.200 align:start position:0%
asked in the context of some
 

01:03:41.200 --> 01:03:42.789 align:start position:0%
asked in the context of some
university<01:03:41.760><c> research</c><01:03:42.160><c> project</c><01:03:42.559><c> with</c>

01:03:42.789 --> 01:03:42.799 align:start position:0%
university research project with
 

01:03:42.799 --> 01:03:46.870 align:start position:0%
university research project with
relatively<01:03:43.520><c> limited</c><01:03:43.920><c> resources</c>

01:03:46.870 --> 01:03:46.880 align:start position:0%
 
 

01:03:46.880 --> 01:03:49.510 align:start position:0%
 
we<01:03:47.039><c> need</c><01:03:47.280><c> to</c><01:03:47.359><c> get</c><01:03:47.520><c> all</c><01:03:47.599><c> those</c><01:03:47.839><c> user</c><01:03:48.160><c> level</c>

01:03:49.510 --> 01:03:49.520 align:start position:0%
we need to get all those user level
 

01:03:49.520 --> 01:03:51.990 align:start position:0%
we need to get all those user level
services<01:03:50.000><c> from</c><01:03:50.160><c> somewhere</c>

01:03:51.990 --> 01:03:52.000 align:start position:0%
services from somewhere
 

01:03:52.000 --> 01:03:54.150 align:start position:0%
services from somewhere
now<01:03:52.319><c> actually</c><01:03:52.559><c> there</c><01:03:52.799><c> are</c><01:03:53.599><c> specialized</c>

01:03:54.150 --> 01:03:54.160 align:start position:0%
now actually there are specialized
 

01:03:54.160 --> 01:03:55.589 align:start position:0%
now actually there are specialized
applications<01:03:54.640><c> for</c><01:03:54.799><c> which</c><01:03:54.960><c> that's</c><01:03:55.200><c> not</c><01:03:55.440><c> too</c>

01:03:55.589 --> 01:03:55.599 align:start position:0%
applications for which that's not too
 

01:03:55.599 --> 01:03:57.190 align:start position:0%
applications for which that's not too
much<01:03:55.760><c> of</c><01:03:55.920><c> a</c><01:03:56.000><c> problem</c><01:03:56.400><c> if</c><01:03:56.559><c> we're</c>

01:03:57.190 --> 01:03:57.200 align:start position:0%
much of a problem if we're
 

01:03:57.200 --> 01:03:59.670 align:start position:0%
much of a problem if we're
you<01:03:57.280><c> know</c><01:03:57.440><c> running</c><01:03:57.839><c> a</c><01:03:58.640><c> you</c><01:03:58.720><c> know</c><01:03:58.960><c> some</c><01:03:59.200><c> sort</c><01:03:59.359><c> of</c>

01:03:59.670 --> 01:03:59.680 align:start position:0%
you know running a you know some sort of
 

01:03:59.680 --> 01:04:01.109 align:start position:0%
you know running a you know some sort of
device<01:04:00.079><c> you</c><01:04:00.160><c> know</c><01:04:00.400><c> controller</c>

01:04:01.109 --> 01:04:01.119 align:start position:0%
device you know controller
 

01:04:01.119 --> 01:04:04.309 align:start position:0%
device you know controller
maybe<01:04:01.359><c> the</c><01:04:01.920><c> you</c><01:04:02.000><c> know</c><01:04:03.520><c> ignition</c>

01:04:04.309 --> 01:04:04.319 align:start position:0%
maybe the you know ignition
 

01:04:04.319 --> 01:04:07.270 align:start position:0%
maybe the you know ignition
control<01:04:04.799><c> system</c><01:04:05.039><c> for</c><01:04:05.200><c> your</c><01:04:05.440><c> car</c><01:04:05.920><c> that</c><01:04:06.880><c> is</c><01:04:07.119><c> you</c>

01:04:07.270 --> 01:04:07.280 align:start position:0%
control system for your car that is you
 

01:04:07.280 --> 01:04:08.630 align:start position:0%
control system for your car that is you
know<01:04:07.359><c> only</c><01:04:07.599><c> running</c><01:04:07.839><c> a</c><01:04:08.000><c> few</c><01:04:08.160><c> thousand</c><01:04:08.400><c> lines</c>

01:04:08.630 --> 01:04:08.640 align:start position:0%
know only running a few thousand lines
 

01:04:08.640 --> 01:04:10.390 align:start position:0%
know only running a few thousand lines
of<01:04:08.720><c> code</c><01:04:08.960><c> anyway</c><01:04:09.359><c> maybe</c><01:04:09.599><c> doesn't</c><01:04:09.839><c> need</c><01:04:10.000><c> a</c><01:04:10.079><c> file</c>

01:04:10.390 --> 01:04:10.400 align:start position:0%
of code anyway maybe doesn't need a file
 

01:04:10.400 --> 01:04:12.230 align:start position:0%
of code anyway maybe doesn't need a file
system

01:04:12.230 --> 01:04:12.240 align:start position:0%
system
 

01:04:12.240 --> 01:04:13.589 align:start position:0%
system
then<01:04:12.480><c> we</c><01:04:12.559><c> can</c><01:04:12.640><c> get</c><01:04:12.799><c> away</c><01:04:13.039><c> with</c><01:04:13.200><c> like</c><01:04:13.359><c> very</c>

01:04:13.589 --> 01:04:13.599 align:start position:0%
then we can get away with like very
 

01:04:13.599 --> 01:04:15.109 align:start position:0%
then we can get away with like very
little<01:04:13.839><c> stuff</c><01:04:14.079><c> at</c><01:04:14.160><c> user</c><01:04:14.400><c> level</c><01:04:14.799><c> and</c>

01:04:15.109 --> 01:04:15.119 align:start position:0%
little stuff at user level and
 

01:04:15.119 --> 01:04:16.470 align:start position:0%
little stuff at user level and
microkernels

01:04:16.470 --> 01:04:16.480 align:start position:0%
microkernels
 

01:04:16.480 --> 01:04:17.910 align:start position:0%
microkernels
totally<01:04:16.799><c> make</c><01:04:17.039><c> sense</c><01:04:17.359><c> for</c><01:04:17.520><c> that</c><01:04:17.599><c> kind</c><01:04:17.760><c> of</c>

01:04:17.910 --> 01:04:17.920 align:start position:0%
totally make sense for that kind of
 

01:04:17.920 --> 01:04:19.990 align:start position:0%
totally make sense for that kind of
application<01:04:18.799><c> um</c><01:04:19.440><c> but</c><01:04:19.599><c> the</c>

01:04:19.990 --> 01:04:20.000 align:start position:0%
application um but the
 

01:04:20.000 --> 01:04:22.309 align:start position:0%
application um but the
people<01:04:21.119><c> you</c><01:04:21.200><c> know</c><01:04:21.359><c> in</c><01:04:21.520><c> these</c><01:04:21.680><c> projects</c><01:04:22.079><c> really</c>

01:04:22.309 --> 01:04:22.319 align:start position:0%
people you know in these projects really
 

01:04:22.319 --> 01:04:24.069 align:start position:0%
people you know in these projects really
they<01:04:22.480><c> had</c><01:04:22.640><c> ambitions</c><01:04:23.200><c> that</c><01:04:23.440><c> oh</c><01:04:23.680><c> gosh</c>

01:04:24.069 --> 01:04:24.079 align:start position:0%
they had ambitions that oh gosh
 

01:04:24.079 --> 01:04:26.390 align:start position:0%
they had ambitions that oh gosh
we<01:04:24.240><c> can</c><01:04:24.480><c> totally</c><01:04:24.799><c> replace</c><01:04:25.280><c> existing</c>

01:04:26.390 --> 01:04:26.400 align:start position:0%
we can totally replace existing
 

01:04:26.400 --> 01:04:27.750 align:start position:0%
we can totally replace existing
operating<01:04:26.799><c> systems</c><01:04:27.280><c> and</c>

01:04:27.750 --> 01:04:27.760 align:start position:0%
operating systems and
 

01:04:27.760 --> 01:04:28.950 align:start position:0%
operating systems and
they<01:04:28.000><c> hoped</c><01:04:28.319><c> that</c><01:04:28.480><c> they</c><01:04:28.640><c> could</c><01:04:28.720><c> build</c>

01:04:28.950 --> 01:04:28.960 align:start position:0%
they hoped that they could build
 

01:04:28.960 --> 01:04:30.309 align:start position:0%
they hoped that they could build
something<01:04:29.200><c> that</c><01:04:29.359><c> people</c><01:04:29.599><c> would</c><01:04:29.760><c> want</c><01:04:29.920><c> to</c><01:04:30.079><c> run</c>

01:04:30.309 --> 01:04:30.319 align:start position:0%
something that people would want to run
 

01:04:30.319 --> 01:04:30.870 align:start position:0%
something that people would want to run
on<01:04:30.480><c> their</c>

01:04:30.870 --> 01:04:30.880 align:start position:0%
on their
 

01:04:30.880 --> 01:04:32.789 align:start position:0%
on their
on<01:04:30.960><c> their</c><01:04:31.440><c> workstations</c><01:04:32.240><c> and</c><01:04:32.319><c> run</c><01:04:32.559><c> on</c><01:04:32.640><c> their</c>

01:04:32.789 --> 01:04:32.799 align:start position:0%
on their workstations and run on their
 

01:04:32.799 --> 01:04:34.390 align:start position:0%
on their workstations and run on their
servers<01:04:33.200><c> and</c><01:04:33.359><c> everywhere</c><01:04:33.760><c> and</c><01:04:33.839><c> just</c>

01:04:34.390 --> 01:04:34.400 align:start position:0%
servers and everywhere and just
 

01:04:34.400 --> 01:04:36.150 align:start position:0%
servers and everywhere and just
replace<01:04:34.960><c> big</c><01:04:35.200><c> monolithic</c><01:04:35.680><c> kernels</c><01:04:36.000><c> all</c>

01:04:36.150 --> 01:04:36.160 align:start position:0%
replace big monolithic kernels all
 

01:04:36.160 --> 01:04:38.549 align:start position:0%
replace big monolithic kernels all
together<01:04:37.280><c> i'm</c><01:04:37.520><c> but</c><01:04:37.680><c> for</c><01:04:37.839><c> that</c><01:04:38.079><c> you</c><01:04:38.240><c> know</c><01:04:38.400><c> you</c>

01:04:38.549 --> 01:04:38.559 align:start position:0%
together i'm but for that you know you
 

01:04:38.559 --> 01:04:40.230 align:start position:0%
together i'm but for that you know you
need<01:04:38.799><c> a</c><01:04:38.960><c> real</c><01:04:39.200><c> you</c><01:04:39.280><c> need</c><01:04:39.520><c> all</c><01:04:39.680><c> the</c><01:04:39.839><c> stuff</c><01:04:40.079><c> that</c>

01:04:40.230 --> 01:04:40.240 align:start position:0%
need a real you need all the stuff that
 

01:04:40.240 --> 01:04:42.150 align:start position:0%
need a real you need all the stuff that
an<01:04:40.400><c> operating</c><01:04:40.799><c> system</c><01:04:41.119><c> does</c>

01:04:42.150 --> 01:04:42.160 align:start position:0%
an operating system does
 

01:04:42.160 --> 01:04:45.349 align:start position:0%
an operating system does
um<01:04:43.280><c> one</c><01:04:43.520><c> possibility</c><01:04:44.160><c> the</c><01:04:44.319><c> most</c><01:04:44.640><c> maybe</c>

01:04:45.349 --> 01:04:45.359 align:start position:0%
um one possibility the most maybe
 

01:04:45.359 --> 01:04:48.789 align:start position:0%
um one possibility the most maybe
sort<01:04:45.520><c> of</c><01:04:45.680><c> philosophically</c><01:04:47.599><c> consistent</c>

01:04:48.789 --> 01:04:48.799 align:start position:0%
sort of philosophically consistent
 

01:04:48.799 --> 01:04:51.430 align:start position:0%
sort of philosophically consistent
possibility<01:04:49.599><c> would</c><01:04:49.760><c> be</c><01:04:50.000><c> to</c><01:04:51.119><c> you</c><01:04:51.200><c> know</c>

01:04:51.430 --> 01:04:51.440 align:start position:0%
possibility would be to you know
 

01:04:51.440 --> 01:04:52.390 align:start position:0%
possibility would be to you know
reimplement

01:04:52.390 --> 01:04:52.400 align:start position:0%
reimplement
 

01:04:52.400 --> 01:04:54.470 align:start position:0%
reimplement
everything<01:04:52.799><c> you</c><01:04:52.960><c> need</c><01:04:53.440><c> but</c><01:04:53.680><c> in</c><01:04:53.839><c> a</c><01:04:54.160><c> sort</c><01:04:54.319><c> of</c>

01:04:54.470 --> 01:04:54.480 align:start position:0%
everything you need but in a sort of
 

01:04:54.480 --> 01:04:55.829 align:start position:0%
everything you need but in a sort of
microkernel

01:04:55.829 --> 01:04:55.839 align:start position:0%
microkernel
 

01:04:55.839 --> 01:04:57.990 align:start position:0%
microkernel
way<01:04:56.160><c> as</c><01:04:56.480><c> lots</c><01:04:56.720><c> and</c><01:04:56.799><c> lots</c><01:04:57.039><c> of</c><01:04:57.200><c> different</c><01:04:57.680><c> user</c>

01:04:57.990 --> 01:04:58.000 align:start position:0%
way as lots and lots of different user
 

01:04:58.000 --> 01:04:59.349 align:start position:0%
way as lots and lots of different user
level<01:04:58.240><c> processes</c>

01:04:59.349 --> 01:04:59.359 align:start position:0%
level processes
 

01:04:59.359 --> 01:05:03.029 align:start position:0%
level processes
um<01:05:00.160><c> but</c><01:05:00.319><c> that's</c><01:05:00.559><c> just</c><01:05:02.000><c> actually</c><01:05:02.319><c> people</c>

01:05:03.029 --> 01:05:03.039 align:start position:0%
um but that's just actually people
 

01:05:03.039 --> 01:05:04.630 align:start position:0%
um but that's just actually people
you<01:05:03.119><c> know</c><01:05:03.280><c> there</c><01:05:03.359><c> were</c><01:05:04.000><c> projects</c><01:05:04.400><c> that</c><01:05:04.480><c> did</c>

01:05:04.630 --> 01:05:04.640 align:start position:0%
you know there were projects that did
 

01:05:04.640 --> 01:05:07.750 align:start position:0%
you know there were projects that did
that<01:05:04.799><c> but</c><01:05:04.960><c> it's</c><01:05:05.200><c> a</c><01:05:05.359><c> vast</c><01:05:05.680><c> amount</c><01:05:06.000><c> of</c><01:05:06.160><c> work</c>

01:05:07.750 --> 01:05:07.760 align:start position:0%
that but it's a vast amount of work
 

01:05:07.760 --> 01:05:10.549 align:start position:0%
that but it's a vast amount of work
and<01:05:07.920><c> more</c><01:05:08.160><c> specifically</c><01:05:09.920><c> people</c><01:05:10.240><c> really</c><01:05:10.400><c> want</c>

01:05:10.549 --> 01:05:10.559 align:start position:0%
and more specifically people really want
 

01:05:10.559 --> 01:05:11.109 align:start position:0%
and more specifically people really want
to<01:05:10.640><c> run</c>

01:05:11.109 --> 01:05:11.119 align:start position:0%
to run
 

01:05:11.119 --> 01:05:13.510 align:start position:0%
to run
you<01:05:11.200><c> know</c><01:05:12.160><c> in</c><01:05:12.240><c> order</c><01:05:12.480><c> for</c><01:05:12.559><c> me</c><01:05:12.720><c> to</c><01:05:12.799><c> use</c><01:05:12.960><c> a</c><01:05:13.039><c> laptop</c>

01:05:13.510 --> 01:05:13.520 align:start position:0%
you know in order for me to use a laptop
 

01:05:13.520 --> 01:05:14.630 align:start position:0%
you know in order for me to use a laptop
it<01:05:13.680><c> just</c><01:05:13.920><c> has</c><01:05:14.160><c> to</c><01:05:14.319><c> run</c>

01:05:14.630 --> 01:05:14.640 align:start position:0%
it just has to run
 

01:05:14.640 --> 01:05:17.270 align:start position:0%
it just has to run
emacs<01:05:15.839><c> right</c><01:05:16.079><c> and</c><01:05:16.240><c> it</c><01:05:16.400><c> has</c><01:05:16.640><c> to</c><01:05:16.799><c> run</c><01:05:17.039><c> my</c>

01:05:17.270 --> 01:05:17.280 align:start position:0%
emacs right and it has to run my
 

01:05:17.280 --> 01:05:18.390 align:start position:0%
emacs right and it has to run my
favorite<01:05:17.599><c> c</c><01:05:17.760><c> compiler</c>

01:05:18.390 --> 01:05:18.400 align:start position:0%
favorite c compiler
 

01:05:18.400 --> 01:05:20.069 align:start position:0%
favorite c compiler
otherwise<01:05:18.799><c> i'm</c><01:05:18.960><c> just</c><01:05:19.359><c> definitely</c><01:05:19.760><c> not</c><01:05:19.920><c> going</c>

01:05:20.069 --> 01:05:20.079 align:start position:0%
otherwise i'm just definitely not going
 

01:05:20.079 --> 01:05:22.549 align:start position:0%
otherwise i'm just definitely not going
to<01:05:20.160><c> switch</c><01:05:20.400><c> to</c><01:05:20.559><c> your</c><01:05:20.640><c> operating</c><01:05:21.039><c> system</c>

01:05:22.549 --> 01:05:22.559 align:start position:0%
to switch to your operating system
 

01:05:22.559 --> 01:05:24.470 align:start position:0%
to switch to your operating system
and<01:05:22.720><c> what</c><01:05:22.880><c> that</c><01:05:23.039><c> meant</c><01:05:23.359><c> is</c><01:05:23.440><c> that</c><01:05:23.839><c> microkernels</c>

01:05:24.470 --> 01:05:24.480 align:start position:0%
and what that meant is that microkernels
 

01:05:24.480 --> 01:05:25.910 align:start position:0%
and what that meant is that microkernels
in<01:05:24.640><c> order</c><01:05:24.799><c> for</c><01:05:25.039><c> to</c><01:05:25.200><c> gain</c><01:05:25.440><c> any</c><01:05:25.599><c> kind</c><01:05:25.760><c> of</c>

01:05:25.910 --> 01:05:25.920 align:start position:0%
in order for to gain any kind of
 

01:05:25.920 --> 01:05:27.750 align:start position:0%
in order for to gain any kind of
adoption<01:05:26.319><c> they</c><01:05:26.559><c> had</c><01:05:26.799><c> to</c><01:05:26.960><c> be</c><01:05:27.119><c> able</c><01:05:27.200><c> to</c><01:05:27.359><c> support</c>

01:05:27.750 --> 01:05:27.760 align:start position:0%
adoption they had to be able to support
 

01:05:27.760 --> 01:05:29.510 align:start position:0%
adoption they had to be able to support
existing<01:05:28.160><c> applications</c>

01:05:29.510 --> 01:05:29.520 align:start position:0%
existing applications
 

01:05:29.520 --> 01:05:31.270 align:start position:0%
existing applications
they<01:05:29.599><c> had</c><01:05:29.760><c> to</c><01:05:29.839><c> be</c><01:05:30.000><c> able</c><01:05:30.160><c> to</c><01:05:30.240><c> be</c><01:05:30.400><c> compatible</c>

01:05:31.270 --> 01:05:31.280 align:start position:0%
they had to be able to be compatible
 

01:05:31.280 --> 01:05:33.589 align:start position:0%
they had to be able to be compatible
provide<01:05:31.680><c> an</c><01:05:32.240><c> identical</c>

01:05:33.589 --> 01:05:33.599 align:start position:0%
provide an identical
 

01:05:33.599 --> 01:05:36.150 align:start position:0%
provide an identical
at<01:05:33.760><c> least</c><01:05:34.000><c> at</c><01:05:34.079><c> the</c><01:05:34.240><c> system</c><01:05:34.559><c> called</c><01:05:35.119><c> at</c><01:05:35.200><c> the</c>

01:05:36.150 --> 01:05:36.160 align:start position:0%
at least at the system called at the
 

01:05:36.160 --> 01:05:37.670 align:start position:0%
at least at the system called at the
higher<01:05:36.480><c> level</c>

01:05:37.670 --> 01:05:37.680 align:start position:0%
higher level
 

01:05:37.680 --> 01:05:40.950 align:start position:0%
higher level
service<01:05:38.079><c> api</c><01:05:39.359><c> level</c><01:05:39.680><c> they</c><01:05:39.839><c> had</c><01:05:40.000><c> to</c><01:05:40.480><c> be</c><01:05:40.640><c> totally</c>

01:05:40.950 --> 01:05:40.960 align:start position:0%
service api level they had to be totally
 

01:05:40.960 --> 01:05:42.630 align:start position:0%
service api level they had to be totally
compatible<01:05:41.440><c> with</c><01:05:41.520><c> some</c><01:05:41.680><c> exist</c><01:05:42.079><c> on</c><01:05:42.240><c> operating</c>

01:05:42.630 --> 01:05:42.640 align:start position:0%
compatible with some exist on operating
 

01:05:42.640 --> 01:05:44.549 align:start position:0%
compatible with some exist on operating
system<01:05:42.960><c> like</c><01:05:43.119><c> unix</c><01:05:43.520><c> like</c><01:05:43.680><c> linux</c>

01:05:44.549 --> 01:05:44.559 align:start position:0%
system like unix like linux
 

01:05:44.559 --> 01:05:46.470 align:start position:0%
system like unix like linux
in<01:05:44.720><c> order</c><01:05:45.200><c> for</c><01:05:45.440><c> anybody</c><01:05:45.839><c> to</c><01:05:46.000><c> be</c><01:05:46.079><c> willing</c><01:05:46.319><c> to</c>

01:05:46.470 --> 01:05:46.480 align:start position:0%
in order for anybody to be willing to
 

01:05:46.480 --> 01:05:48.470 align:start position:0%
in order for anybody to be willing to
switch

01:05:48.470 --> 01:05:48.480 align:start position:0%
switch
 

01:05:48.480 --> 01:05:50.870 align:start position:0%
switch
so<01:05:48.640><c> these</c><01:05:49.440><c> projects</c><01:05:49.839><c> faced</c><01:05:50.079><c> a</c><01:05:50.240><c> more</c><01:05:50.400><c> specific</c>

01:05:50.870 --> 01:05:50.880 align:start position:0%
so these projects faced a more specific
 

01:05:50.880 --> 01:05:52.870 align:start position:0%
so these projects faced a more specific
problem<01:05:51.119><c> of</c><01:05:51.280><c> how</c><01:05:51.440><c> they</c><01:05:51.520><c> were</c><01:05:51.680><c> going</c><01:05:51.839><c> to</c><01:05:52.000><c> get</c>

01:05:52.870 --> 01:05:52.880 align:start position:0%
problem of how they were going to get
 

01:05:52.880 --> 01:05:54.470 align:start position:0%
problem of how they were going to get
uh<01:05:53.039><c> how</c><01:05:53.280><c> are</c><01:05:53.359><c> they</c><01:05:53.440><c> going</c><01:05:53.520><c> to</c><01:05:53.680><c> attain</c>

01:05:54.470 --> 01:05:54.480 align:start position:0%
uh how are they going to attain
 

01:05:54.480 --> 01:05:56.549 align:start position:0%
uh how are they going to attain
compatibility<01:05:55.760><c> with</c>

01:05:56.549 --> 01:05:56.559 align:start position:0%
compatibility with
 

01:05:56.559 --> 01:05:58.069 align:start position:0%
compatibility with
you<01:05:56.640><c> know</c><01:05:56.799><c> existing</c><01:05:57.280><c> applications</c><01:05:57.839><c> written</c>

01:05:58.069 --> 01:05:58.079 align:start position:0%
you know existing applications written
 

01:05:58.079 --> 01:05:59.670 align:start position:0%
you know existing applications written
for<01:05:58.240><c> linux</c><01:05:58.559><c> or</c><01:05:58.720><c> maybe</c><01:05:58.960><c> windows</c><01:05:59.440><c> or</c>

01:05:59.670 --> 01:05:59.680 align:start position:0%
for linux or maybe windows or
 

01:05:59.680 --> 01:06:02.829 align:start position:0%
for linux or maybe windows or
something<01:06:00.160><c> but</c><01:06:01.280><c> for</c><01:06:01.440><c> this</c><01:06:01.599><c> project</c><01:06:02.000><c> it</c><01:06:02.079><c> was</c>

01:06:02.829 --> 01:06:02.839 align:start position:0%
something but for this project it was
 

01:06:02.839 --> 01:06:04.309 align:start position:0%
something but for this project it was
linux

01:06:04.309 --> 01:06:04.319 align:start position:0%
linux
 

01:06:04.319 --> 01:06:07.349 align:start position:0%
linux
and<01:06:04.480><c> rather</c><01:06:04.720><c> than</c><01:06:04.960><c> write</c><01:06:05.200><c> their</c><01:06:05.440><c> own</c><01:06:06.960><c> totally</c>

01:06:07.349 --> 01:06:07.359 align:start position:0%
and rather than write their own totally
 

01:06:07.359 --> 01:06:09.109 align:start position:0%
and rather than write their own totally
new<01:06:07.520><c> set</c><01:06:07.680><c> of</c><01:06:07.760><c> user</c><01:06:08.000><c> level</c><01:06:08.240><c> servers</c><01:06:08.640><c> that</c><01:06:08.799><c> mimic</c>

01:06:09.109 --> 01:06:09.119 align:start position:0%
new set of user level servers that mimic
 

01:06:09.119 --> 01:06:09.829 align:start position:0%
new set of user level servers that mimic
linux

01:06:09.829 --> 01:06:09.839 align:start position:0%
linux
 

01:06:09.839 --> 01:06:12.470 align:start position:0%
linux
they<01:06:10.000><c> decided</c><01:06:10.319><c> to</c><01:06:10.400><c> take</c><01:06:10.640><c> the</c><01:06:10.880><c> far</c><01:06:11.280><c> easier</c><01:06:11.760><c> path</c>

01:06:12.470 --> 01:06:12.480 align:start position:0%
they decided to take the far easier path
 

01:06:12.480 --> 01:06:13.990 align:start position:0%
they decided to take the far easier path
and<01:06:12.640><c> many</c><01:06:12.880><c> projects</c><01:06:13.280><c> did</c><01:06:13.440><c> this</c><01:06:13.680><c> of</c>

01:06:13.990 --> 01:06:14.000 align:start position:0%
and many projects did this of
 

01:06:14.000 --> 01:06:18.150 align:start position:0%
and many projects did this of
simply<01:06:14.960><c> directly</c><01:06:15.599><c> running</c><01:06:16.000><c> an</c><01:06:16.839><c> existing</c>

01:06:18.150 --> 01:06:18.160 align:start position:0%
simply directly running an existing
 

01:06:18.160 --> 01:06:21.270 align:start position:0%
simply directly running an existing
monolithic<01:06:18.880><c> kernel</c><01:06:20.240><c> as</c>

01:06:21.270 --> 01:06:21.280 align:start position:0%
monolithic kernel as
 

01:06:21.280 --> 01:06:24.309 align:start position:0%
monolithic kernel as
on<01:06:21.520><c> top</c><01:06:21.839><c> of</c><01:06:21.920><c> their</c><01:06:22.079><c> microkernel</c><01:06:23.920><c> instead</c><01:06:24.240><c> of</c>

01:06:24.309 --> 01:06:24.319 align:start position:0%
on top of their microkernel instead of
 

01:06:24.319 --> 01:06:25.829 align:start position:0%
on top of their microkernel instead of
re-implementing<01:06:24.960><c> some</c><01:06:25.119><c> new</c><01:06:25.359><c> thing</c>

01:06:25.829 --> 01:06:25.839 align:start position:0%
re-implementing some new thing
 

01:06:25.839 --> 01:06:27.349 align:start position:0%
re-implementing some new thing
and<01:06:26.000><c> so</c><01:06:26.240><c> that's</c><01:06:26.559><c> that's</c><01:06:26.799><c> exactly</c><01:06:27.200><c> what</c>

01:06:27.349 --> 01:06:27.359 align:start position:0%
and so that's that's exactly what
 

01:06:27.359 --> 01:06:31.349 align:start position:0%
and so that's that's exactly what
today's<01:06:27.760><c> paper</c><01:06:28.079><c> is</c><01:06:28.240><c> about</c>

01:06:31.349 --> 01:06:31.359 align:start position:0%
 
 

01:06:31.359 --> 01:06:35.430 align:start position:0%
 
it<01:06:31.520><c> has</c><01:06:32.640><c> uh</c>

01:06:35.430 --> 01:06:35.440 align:start position:0%
 
 

01:06:35.440 --> 01:06:37.750 align:start position:0%
 
indeed<01:06:35.839><c> you</c><01:06:35.920><c> know</c><01:06:36.160><c> l4</c><01:06:36.880><c> microkernel</c><01:06:37.440><c> down</c><01:06:37.680><c> at</c>

01:06:37.750 --> 01:06:37.760 align:start position:0%
indeed you know l4 microkernel down at
 

01:06:37.760 --> 01:06:39.029 align:start position:0%
indeed you know l4 microkernel down at
the<01:06:37.839><c> bottom</c>

01:06:39.029 --> 01:06:39.039 align:start position:0%
the bottom
 

01:06:39.039 --> 01:06:42.789 align:start position:0%
the bottom
um

01:06:42.789 --> 01:06:42.799 align:start position:0%
 
 

01:06:42.799 --> 01:06:46.549 align:start position:0%
 
but<01:06:43.119><c> also</c><01:06:43.680><c> as</c><01:06:43.920><c> like</c><01:06:44.480><c> a</c><01:06:44.799><c> pretty</c><01:06:45.119><c> big</c><01:06:45.440><c> server</c>

01:06:46.549 --> 01:06:46.559 align:start position:0%
but also as like a pretty big server
 

01:06:46.559 --> 01:06:49.829 align:start position:0%
but also as like a pretty big server
they<01:06:46.799><c> run</c><01:06:48.559><c> a</c><01:06:48.960><c> pretty</c><01:06:49.359><c> full</c>

01:06:49.829 --> 01:06:49.839 align:start position:0%
they run a pretty full
 

01:06:49.839 --> 01:06:54.789 align:start position:0%
they run a pretty full
linux<01:06:50.720><c> kernel</c><01:06:51.839><c> as</c><01:06:52.079><c> a</c><01:06:52.160><c> user</c><01:06:52.480><c> level</c><01:06:52.799><c> process</c>

01:06:54.789 --> 01:06:54.799 align:start position:0%
linux kernel as a user level process
 

01:06:54.799 --> 01:06:56.710 align:start position:0%
linux kernel as a user level process
and<01:06:54.880><c> so</c><01:06:55.920><c> they</c><01:06:56.079><c> may</c><01:06:56.240><c> sound</c><01:06:56.400><c> a</c><01:06:56.480><c> little</c>

01:06:56.710 --> 01:06:56.720 align:start position:0%
and so they may sound a little
 

01:06:56.720 --> 01:06:58.390 align:start position:0%
and so they may sound a little
surprising<01:06:57.119><c> the</c><01:06:57.200><c> kernels</c><01:06:57.599><c> not</c><01:06:57.839><c> use</c><01:06:58.000><c> a</c><01:06:58.160><c> level</c>

01:06:58.390 --> 01:06:58.400 align:start position:0%
surprising the kernels not use a level
 

01:06:58.400 --> 01:07:01.109 align:start position:0%
surprising the kernels not use a level
process<01:06:58.799><c> right</c><01:06:58.960><c> the</c><01:06:59.039><c> kernel's</c><01:06:59.359><c> the</c><01:06:59.440><c> kernel</c>

01:07:01.109 --> 01:07:01.119 align:start position:0%
process right the kernel's the kernel
 

01:07:01.119 --> 01:07:02.150 align:start position:0%
process right the kernel's the kernel
you<01:07:01.200><c> think</c><01:07:01.359><c> of</c><01:07:01.520><c> it</c><01:07:01.599><c> as</c><01:07:01.680><c> running</c><01:07:01.920><c> on</c><01:07:02.000><c> the</c>

01:07:02.150 --> 01:07:02.160 align:start position:0%
you think of it as running on the
 

01:07:02.160 --> 01:07:04.630 align:start position:0%
you think of it as running on the
hardware<01:07:02.559><c> but</c><01:07:03.359><c> in</c><01:07:03.440><c> fact</c><01:07:03.920><c> you</c><01:07:04.000><c> know</c><01:07:04.240><c> linux</c>

01:07:04.630 --> 01:07:04.640 align:start position:0%
hardware but in fact you know linux
 

01:07:04.640 --> 01:07:05.349 align:start position:0%
hardware but in fact you know linux
kernel

01:07:05.349 --> 01:07:05.359 align:start position:0%
kernel
 

01:07:05.359 --> 01:07:08.630 align:start position:0%
kernel
as<01:07:05.520><c> you</c><01:07:05.599><c> can</c><01:07:05.760><c> see</c><01:07:05.920><c> from</c><01:07:06.960><c> running</c><01:07:07.280><c> xv6</c><01:07:07.920><c> and</c><01:07:08.000><c> qmu</c>

01:07:08.630 --> 01:07:08.640 align:start position:0%
as you can see from running xv6 and qmu
 

01:07:08.640 --> 01:07:09.029 align:start position:0%
as you can see from running xv6 and qmu
which<01:07:08.799><c> is</c>

01:07:09.029 --> 01:07:09.039 align:start position:0%
which is
 

01:07:09.039 --> 01:07:11.910 align:start position:0%
which is
running<01:07:09.280><c> in</c><01:07:09.359><c> user</c><01:07:09.599><c> space</c><01:07:09.920><c> after</c><01:07:10.240><c> all</c><01:07:11.200><c> a</c><01:07:11.520><c> kernel</c>

01:07:11.910 --> 01:07:11.920 align:start position:0%
running in user space after all a kernel
 

01:07:11.920 --> 01:07:12.870 align:start position:0%
running in user space after all a kernel
is<01:07:12.000><c> just</c><01:07:12.160><c> a</c><01:07:12.319><c> program</c>

01:07:12.870 --> 01:07:12.880 align:start position:0%
is just a program
 

01:07:12.880 --> 01:07:15.349 align:start position:0%
is just a program
and<01:07:13.039><c> so</c><01:07:13.280><c> with</c><01:07:13.440><c> some</c><01:07:13.599><c> modifications</c><01:07:14.960><c> it</c><01:07:15.039><c> can</c><01:07:15.200><c> be</c>

01:07:15.349 --> 01:07:15.359 align:start position:0%
and so with some modifications it can be
 

01:07:15.359 --> 01:07:16.710 align:start position:0%
and so with some modifications it can be
made<01:07:15.680><c> to</c><01:07:15.839><c> run</c>

01:07:16.710 --> 01:07:16.720 align:start position:0%
made to run
 

01:07:16.720 --> 01:07:20.069 align:start position:0%
made to run
um<01:07:18.000><c> at</c><01:07:18.160><c> user</c><01:07:18.559><c> level</c><01:07:19.280><c> and</c><01:07:19.359><c> so</c><01:07:19.599><c> they</c><01:07:19.760><c> had</c><01:07:19.920><c> to</c>

01:07:20.069 --> 01:07:20.079 align:start position:0%
um at user level and so they had to
 

01:07:20.079 --> 01:07:21.589 align:start position:0%
um at user level and so they had to
modify<01:07:20.559><c> linux</c><01:07:20.960><c> and</c>

01:07:21.589 --> 01:07:21.599 align:start position:0%
modify linux and
 

01:07:21.599 --> 01:07:23.910 align:start position:0%
modify linux and
they<01:07:21.760><c> took</c><01:07:22.319><c> a</c><01:07:22.720><c> lot</c><01:07:22.880><c> of</c><01:07:22.960><c> the</c><01:07:23.119><c> low-level</c><01:07:23.680><c> stuff</c>

01:07:23.910 --> 01:07:23.920 align:start position:0%
they took a lot of the low-level stuff
 

01:07:23.920 --> 01:07:25.829 align:start position:0%
they took a lot of the low-level stuff
in<01:07:24.000><c> linux</c><01:07:24.400><c> for</c><01:07:24.559><c> example</c><01:07:24.960><c> the</c><01:07:25.200><c> code</c><01:07:25.440><c> in</c><01:07:25.520><c> linux</c>

01:07:25.829 --> 01:07:25.839 align:start position:0%
in linux for example the code in linux
 

01:07:25.839 --> 01:07:27.190 align:start position:0%
in linux for example the code in linux
that<01:07:25.920><c> expects</c><01:07:26.319><c> to</c><01:07:26.400><c> be</c><01:07:26.480><c> able</c><01:07:26.640><c> to</c><01:07:26.799><c> directly</c>

01:07:27.190 --> 01:07:27.200 align:start position:0%
that expects to be able to directly
 

01:07:27.200 --> 01:07:28.069 align:start position:0%
that expects to be able to directly
modify<01:07:27.680><c> page</c>

01:07:28.069 --> 01:07:28.079 align:start position:0%
modify page
 

01:07:28.079 --> 01:07:30.390 align:start position:0%
modify page
tables<01:07:28.480><c> or</c><01:07:29.119><c> read</c><01:07:29.359><c> and</c><01:07:29.520><c> write</c><01:07:29.839><c> processor</c>

01:07:30.390 --> 01:07:30.400 align:start position:0%
tables or read and write processor
 

01:07:30.400 --> 01:07:31.670 align:start position:0%
tables or read and write processor
registers

01:07:31.670 --> 01:07:31.680 align:start position:0%
registers
 

01:07:31.680 --> 01:07:33.029 align:start position:0%
registers
there<01:07:31.839><c> was</c><01:07:32.000><c> some</c><01:07:32.160><c> low-level</c><01:07:32.559><c> stuff</c><01:07:32.799><c> they</c><01:07:32.960><c> had</c>

01:07:33.029 --> 01:07:33.039 align:start position:0%
there was some low-level stuff they had
 

01:07:33.039 --> 01:07:35.270 align:start position:0%
there was some low-level stuff they had
to<01:07:33.200><c> modify</c><01:07:33.599><c> so</c><01:07:34.240><c> some</c><01:07:34.400><c> parts</c><01:07:34.640><c> of</c><01:07:34.720><c> linux</c><01:07:35.039><c> i</c><01:07:35.200><c> had</c>

01:07:35.270 --> 01:07:35.280 align:start position:0%
to modify so some parts of linux i had
 

01:07:35.280 --> 01:07:37.750 align:start position:0%
to modify so some parts of linux i had
to<01:07:35.440><c> change</c>

01:07:37.750 --> 01:07:37.760 align:start position:0%
to change
 

01:07:37.760 --> 01:07:40.069 align:start position:0%
to change
in<01:07:37.920><c> order</c><01:07:38.160><c> to</c><01:07:39.119><c> convert</c><01:07:39.440><c> them</c><01:07:39.599><c> to</c><01:07:39.760><c> basically</c>

01:07:40.069 --> 01:07:40.079 align:start position:0%
in order to convert them to basically
 

01:07:40.079 --> 01:07:42.470 align:start position:0%
in order to convert them to basically
make<01:07:40.319><c> system</c><01:07:40.720><c> calls</c><01:07:41.119><c> or</c><01:07:41.359><c> send</c><01:07:41.599><c> ipc</c><01:07:42.000><c> messages</c>

01:07:42.470 --> 01:07:42.480 align:start position:0%
make system calls or send ipc messages
 

01:07:42.480 --> 01:07:45.029 align:start position:0%
make system calls or send ipc messages
through<01:07:42.720><c> l4</c><01:07:43.200><c> instead</c><01:07:43.520><c> of</c><01:07:43.599><c> directly</c><01:07:44.079><c> get</c><01:07:44.319><c> at</c>

01:07:45.029 --> 01:07:45.039 align:start position:0%
through l4 instead of directly get at
 

01:07:45.039 --> 01:07:47.510 align:start position:0%
through l4 instead of directly get at
hardware<01:07:45.920><c> but</c><01:07:46.079><c> for</c><01:07:46.240><c> the</c><01:07:46.319><c> most</c><01:07:46.640><c> part</c><01:07:47.200><c> they</c><01:07:47.359><c> were</c>

01:07:47.510 --> 01:07:47.520 align:start position:0%
hardware but for the most part they were
 

01:07:47.520 --> 01:07:49.910 align:start position:0%
hardware but for the most part they were
able<01:07:47.680><c> to</c><01:07:47.760><c> directly</c><01:07:48.160><c> run</c><01:07:48.400><c> without</c><01:07:48.799><c> change</c>

01:07:49.910 --> 01:07:49.920 align:start position:0%
able to directly run without change
 

01:07:49.920 --> 01:07:51.750 align:start position:0%
able to directly run without change
almost<01:07:50.240><c> all</c><01:07:50.400><c> of</c><01:07:50.480><c> linux</c><01:07:50.880><c> so</c><01:07:51.200><c> that</c><01:07:51.359><c> means</c><01:07:51.599><c> they</c>

01:07:51.750 --> 01:07:51.760 align:start position:0%
almost all of linux so that means they
 

01:07:51.760 --> 01:07:53.349 align:start position:0%
almost all of linux so that means they
got<01:07:52.000><c> as</c><01:07:52.240><c> part</c><01:07:52.480><c> of</c><01:07:52.640><c> linux</c>

01:07:53.349 --> 01:07:53.359 align:start position:0%
got as part of linux
 

01:07:53.359 --> 01:07:55.910 align:start position:0%
got as part of linux
you<01:07:53.520><c> know</c><01:07:53.680><c> a</c><01:07:53.839><c> file</c><01:07:54.319><c> system</c><01:07:54.880><c> and</c><01:07:55.039><c> a</c><01:07:55.520><c> network</c>

01:07:55.910 --> 01:07:55.920 align:start position:0%
you know a file system and a network
 

01:07:55.920 --> 01:07:57.589 align:start position:0%
you know a file system and a network
support<01:07:56.480><c> and</c><01:07:56.720><c> all</c><01:07:56.880><c> kinds</c><01:07:57.119><c> of</c>

01:07:57.589 --> 01:07:57.599 align:start position:0%
support and all kinds of
 

01:07:57.599 --> 01:08:00.789 align:start position:0%
support and all kinds of
device<01:07:58.160><c> drivers</c><01:07:59.039><c> and</c>

01:08:00.789 --> 01:08:00.799 align:start position:0%
device drivers and
 

01:08:00.799 --> 01:08:03.349 align:start position:0%
device drivers and
who<01:08:00.960><c> knows</c><01:08:01.200><c> what</c><01:08:01.440><c> that</c><01:08:01.599><c> comes</c><01:08:01.839><c> with</c><01:08:01.920><c> linux</c>

01:08:03.349 --> 01:08:03.359 align:start position:0%
who knows what that comes with linux
 

01:08:03.359 --> 01:08:04.789 align:start position:0%
who knows what that comes with linux
without<01:08:03.680><c> having</c><01:08:03.920><c> to</c>

01:08:04.789 --> 01:08:04.799 align:start position:0%
without having to
 

01:08:04.799 --> 01:08:08.390 align:start position:0%
without having to
write<01:08:05.039><c> their</c><01:08:05.280><c> own</c><01:08:05.839><c> version</c><01:08:06.160><c> of</c><01:08:06.240><c> this</c><01:08:07.119><c> um</c>

01:08:08.390 --> 01:08:08.400 align:start position:0%
write their own version of this um
 

01:08:08.400 --> 01:08:11.349 align:start position:0%
write their own version of this um
now<01:08:09.039><c> um</c><01:08:10.079><c> in</c><01:08:10.240><c> fact</c><01:08:10.400><c> the</c><01:08:10.480><c> way</c><01:08:10.640><c> this</c><01:08:10.799><c> was</c><01:08:10.960><c> set</c><01:08:11.200><c> up</c>

01:08:11.349 --> 01:08:11.359 align:start position:0%
now um in fact the way this was set up
 

01:08:11.359 --> 01:08:12.309 align:start position:0%
now um in fact the way this was set up
was<01:08:11.520><c> that</c>

01:08:12.309 --> 01:08:12.319 align:start position:0%
was that
 

01:08:12.319 --> 01:08:15.829 align:start position:0%
was that
linux<01:08:12.720><c> the</c><01:08:12.880><c> linux</c><01:08:13.760><c> kernel</c><01:08:14.960><c> ran</c><01:08:15.200><c> as</c><01:08:15.440><c> one</c>

01:08:15.829 --> 01:08:15.839 align:start position:0%
linux the linux kernel ran as one
 

01:08:15.839 --> 01:08:18.950 align:start position:0%
linux the linux kernel ran as one
l4<01:08:16.719><c> task</c><01:08:17.759><c> and</c><01:08:18.480><c> but</c>

01:08:18.950 --> 01:08:18.960 align:start position:0%
l4 task and but
 

01:08:18.960 --> 01:08:22.070 align:start position:0%
l4 task and but
each<01:08:19.279><c> linux</c><01:08:19.839><c> process</c><01:08:20.560><c> ran</c><01:08:20.880><c> as</c><01:08:21.040><c> a</c><01:08:21.199><c> separate</c>

01:08:22.070 --> 01:08:22.080 align:start position:0%
each linux process ran as a separate
 

01:08:22.080 --> 01:08:25.269 align:start position:0%
each linux process ran as a separate
l4<01:08:22.640><c> task</c><01:08:22.880><c> so</c><01:08:23.040><c> when</c><01:08:24.000><c> you</c><01:08:24.239><c> log</c><01:08:24.480><c> into</c><01:08:24.640><c> this</c><01:08:24.880><c> linux</c>

01:08:25.269 --> 01:08:25.279 align:start position:0%
l4 task so when you log into this linux
 

01:08:25.279 --> 01:08:26.309 align:start position:0%
l4 task so when you log into this linux
and<01:08:25.359><c> you</c><01:08:25.520><c> ask</c><01:08:25.679><c> it</c><01:08:25.759><c> to</c><01:08:25.920><c> run</c>

01:08:26.309 --> 01:08:26.319 align:start position:0%
and you ask it to run
 

01:08:26.319 --> 01:08:28.149 align:start position:0%
and you ask it to run
a<01:08:26.480><c> shell</c><01:08:26.880><c> for</c><01:08:27.040><c> you</c><01:08:27.199><c> a</c><01:08:27.359><c> terminal</c><01:08:27.759><c> window</c><01:08:28.080><c> or</c>

01:08:28.149 --> 01:08:28.159 align:start position:0%
a shell for you a terminal window or
 

01:08:28.159 --> 01:08:29.910 align:start position:0%
a shell for you a terminal window or
something<01:08:28.880><c> it's</c><01:08:29.040><c> going</c><01:08:29.120><c> to</c><01:08:29.279><c> fire</c><01:08:29.520><c> up</c><01:08:29.679><c> an</c>

01:08:29.910 --> 01:08:29.920 align:start position:0%
something it's going to fire up an
 

01:08:29.920 --> 01:08:33.669 align:start position:0%
something it's going to fire up an
l4<01:08:30.719><c> task</c><01:08:32.239><c> that's</c><01:08:32.480><c> going</c><01:08:32.640><c> to</c><01:08:32.719><c> run</c><01:08:32.960><c> that</c><01:08:33.199><c> linux</c>

01:08:33.669 --> 01:08:33.679 align:start position:0%
l4 task that's going to run that linux
 

01:08:33.679 --> 01:08:34.550 align:start position:0%
l4 task that's going to run that linux
program

01:08:34.550 --> 01:08:34.560 align:start position:0%
program
 

01:08:34.560 --> 01:08:37.910 align:start position:0%
program
at<01:08:34.719><c> user</c><01:08:35.040><c> level</c><01:08:36.640><c> so</c><01:08:36.799><c> there</c><01:08:36.960><c> were</c><01:08:37.199><c> one</c><01:08:37.440><c> task</c><01:08:37.759><c> for</c>

01:08:37.910 --> 01:08:37.920 align:start position:0%
at user level so there were one task for
 

01:08:37.920 --> 01:08:39.189 align:start position:0%
at user level so there were one task for
linux<01:08:38.319><c> and</c><01:08:38.480><c> one</c><01:08:38.719><c> task</c>

01:08:39.189 --> 01:08:39.199 align:start position:0%
linux and one task
 

01:08:39.199 --> 01:08:43.189 align:start position:0%
linux and one task
for<01:08:39.440><c> each</c><01:08:40.239><c> linux</c><01:08:40.799><c> process</c><01:08:41.279><c> that</c><01:08:41.440><c> you</c><01:08:41.679><c> fire</c><01:08:42.080><c> up</c>

01:08:43.189 --> 01:08:43.199 align:start position:0%
for each linux process that you fire up
 

01:08:43.199 --> 01:08:46.390 align:start position:0%
for each linux process that you fire up
um<01:08:43.920><c> under</c><01:08:44.239><c> linux</c><01:08:44.640><c> and</c><01:08:45.440><c> linux</c><01:08:45.839><c> and</c><01:08:46.000><c> instead</c><01:08:46.319><c> of</c>

01:08:46.390 --> 01:08:46.400 align:start position:0%
um under linux and linux and instead of
 

01:08:46.400 --> 01:08:48.229 align:start position:0%
um under linux and linux and instead of
directly<01:08:46.880><c> you</c><01:08:46.960><c> know</c><01:08:47.120><c> modifying</c><01:08:47.600><c> the</c>

01:08:48.229 --> 01:08:48.239 align:start position:0%
directly you know modifying the
 

01:08:48.239 --> 01:08:51.990 align:start position:0%
directly you know modifying the
page<01:08:48.640><c> table</c><01:08:49.199><c> that</c><01:08:50.400><c> uh</c><01:08:50.880><c> that</c><01:08:51.120><c> vi</c>

01:08:51.990 --> 01:08:52.000 align:start position:0%
page table that uh that vi
 

01:08:52.000 --> 01:08:54.309 align:start position:0%
page table that uh that vi
that<01:08:52.159><c> the</c><01:08:52.319><c> vi</c><01:08:52.719><c> process</c><01:08:53.120><c> uses</c><01:08:53.679><c> linux</c><01:08:54.080><c> is</c><01:08:54.239><c> going</c>

01:08:54.309 --> 01:08:54.319 align:start position:0%
that the vi process uses linux is going
 

01:08:54.319 --> 01:08:55.030 align:start position:0%
that the vi process uses linux is going
to<01:08:54.640><c> ask</c>

01:08:55.030 --> 01:08:55.040 align:start position:0%
to ask
 

01:08:55.040 --> 01:08:58.229 align:start position:0%
to ask
i'll<01:08:55.759><c> send</c><01:08:56.000><c> the</c><01:08:56.159><c> right</c><01:08:56.480><c> ipc's</c><01:08:57.199><c> to</c><01:08:57.359><c> l4</c><01:08:57.759><c> to</c><01:08:57.920><c> cause</c>

01:08:58.229 --> 01:08:58.239 align:start position:0%
i'll send the right ipc's to l4 to cause
 

01:08:58.239 --> 01:08:59.430 align:start position:0%
i'll send the right ipc's to l4 to cause
l4<01:08:58.880><c> to</c>

01:08:59.430 --> 01:08:59.440 align:start position:0%
l4 to
 

01:08:59.440 --> 01:09:05.189 align:start position:0%
l4 to
change<01:08:59.839><c> vi's</c><01:09:00.319><c> page</c><01:09:00.719><c> table</c>

01:09:05.189 --> 01:09:05.199 align:start position:0%
 
 

01:09:05.199 --> 01:09:08.229 align:start position:0%
 
any<01:09:05.440><c> questions</c><01:09:05.759><c> about</c><01:09:06.000><c> the</c><01:09:07.679><c> about</c><01:09:07.839><c> the</c><01:09:07.920><c> basic</c>

01:09:08.229 --> 01:09:08.239 align:start position:0%
any questions about the about the basic
 

01:09:08.239 --> 01:09:14.149 align:start position:0%
any questions about the about the basic
scheme<01:09:08.640><c> here</c>

01:09:14.149 --> 01:09:14.159 align:start position:0%
 
 

01:09:14.159 --> 01:09:17.189 align:start position:0%
 
um<01:09:15.040><c> another</c><01:09:15.359><c> thing</c><01:09:15.520><c> to</c><01:09:16.000><c> uh</c><01:09:16.799><c> another</c><01:09:17.120><c> thing</c>

01:09:17.189 --> 01:09:17.199 align:start position:0%
um another thing to uh another thing
 

01:09:17.199 --> 01:09:18.789 align:start position:0%
um another thing to uh another thing
that<01:09:17.359><c> was</c><01:09:17.520><c> changed</c>

01:09:18.789 --> 01:09:18.799 align:start position:0%
that was changed
 

01:09:18.799 --> 01:09:22.229 align:start position:0%
that was changed
many<01:09:19.040><c> small</c><01:09:19.279><c> things</c><01:09:19.520><c> were</c><01:09:19.679><c> changed</c><01:09:20.000><c> but</c><01:09:20.480><c> um</c><01:09:21.520><c> a</c>

01:09:22.229 --> 01:09:22.239 align:start position:0%
many small things were changed but um a
 

01:09:22.239 --> 01:09:24.070 align:start position:0%
many small things were changed but um a
specific<01:09:22.640><c> thing</c><01:09:22.799><c> of</c><01:09:22.880><c> interest</c><01:09:23.279><c> is</c><01:09:23.359><c> that</c>

01:09:24.070 --> 01:09:24.080 align:start position:0%
specific thing of interest is that
 

01:09:24.080 --> 01:09:26.870 align:start position:0%
specific thing of interest is that
when<01:09:24.319><c> vi</c><01:09:24.719><c> wants</c><01:09:24.960><c> to</c><01:09:25.040><c> make</c><01:09:25.199><c> a</c><01:09:25.359><c> system</c><01:09:25.679><c> call</c><01:09:26.000><c> so</c>

01:09:26.870 --> 01:09:26.880 align:start position:0%
when vi wants to make a system call so
 

01:09:26.880 --> 01:09:31.669 align:start position:0%
when vi wants to make a system call so
if<01:09:27.040><c> vi</c><01:09:27.440><c> doesn't</c><01:09:27.679><c> know</c><01:09:27.839><c> it's</c><01:09:28.000><c> running</c><01:09:28.319><c> on</c><01:09:28.480><c> l4</c>

01:09:31.669 --> 01:09:31.679 align:start position:0%
 
 

01:09:31.679 --> 01:09:34.149 align:start position:0%
 
in<01:09:31.839><c> this</c><01:09:32.000><c> scheme</c><01:09:32.400><c> it's</c><01:09:33.279><c> it's</c><01:09:33.440><c> really</c><01:09:34.000><c> all</c>

01:09:34.149 --> 01:09:34.159 align:start position:0%
in this scheme it's it's really all
 

01:09:34.159 --> 01:09:35.669 align:start position:0%
in this scheme it's it's really all
these<01:09:34.319><c> programs</c><01:09:34.880><c> just</c><01:09:35.040><c> think</c><01:09:35.279><c> of</c><01:09:35.359><c> themselves</c>

01:09:35.669 --> 01:09:35.679 align:start position:0%
these programs just think of themselves
 

01:09:35.679 --> 01:09:36.789 align:start position:0%
these programs just think of themselves
as<01:09:35.839><c> running</c><01:09:36.080><c> on</c><01:09:36.159><c> linux</c>

01:09:36.789 --> 01:09:36.799 align:start position:0%
as running on linux
 

01:09:36.799 --> 01:09:39.590 align:start position:0%
as running on linux
when<01:09:37.040><c> vi</c><01:09:37.359><c> wants</c><01:09:37.520><c> to</c><01:09:37.600><c> make</c><01:09:37.759><c> a</c><01:09:37.839><c> system</c><01:09:38.239><c> call</c><01:09:38.880><c> um</c>

01:09:39.590 --> 01:09:39.600 align:start position:0%
when vi wants to make a system call um
 

01:09:39.600 --> 01:09:41.269 align:start position:0%
when vi wants to make a system call um
you<01:09:39.679><c> know</c><01:09:39.839><c> l4</c><01:09:40.239><c> does</c><01:09:40.480><c> not</c>

01:09:41.269 --> 01:09:41.279 align:start position:0%
you know l4 does not
 

01:09:41.279 --> 01:09:44.390 align:start position:0%
you know l4 does not
support<01:09:42.640><c> it</c><01:09:42.880><c> it's</c><01:09:43.040><c> not</c><01:09:43.440><c> making</c><01:09:43.679><c> an</c><01:09:43.839><c> l4</c><01:09:44.159><c> system</c>

01:09:44.390 --> 01:09:44.400 align:start position:0%
support it it's not making an l4 system
 

01:09:44.400 --> 01:09:45.990 align:start position:0%
support it it's not making an l4 system
called<01:09:44.560><c> it's</c><01:09:44.719><c> making</c><01:09:44.880><c> a</c><01:09:44.960><c> linux</c><01:09:45.199><c> system</c><01:09:45.520><c> call</c>

01:09:45.990 --> 01:09:46.000 align:start position:0%
called it's making a linux system call
 

01:09:46.000 --> 01:09:48.789 align:start position:0%
called it's making a linux system call
so<01:09:46.319><c> vi</c><01:09:46.719><c> system</c><01:09:47.120><c> calls</c><01:09:47.359><c> like</c><01:09:47.679><c> fork</c><01:09:48.560><c> there's</c><01:09:48.719><c> a</c>

01:09:48.789 --> 01:09:48.799 align:start position:0%
so vi system calls like fork there's a
 

01:09:48.799 --> 01:09:50.229 align:start position:0%
so vi system calls like fork there's a
little<01:09:49.199><c> library</c>

01:09:50.229 --> 01:09:50.239 align:start position:0%
little library
 

01:09:50.239 --> 01:09:56.550 align:start position:0%
little library
basically<01:09:50.719><c> that</c><01:09:52.080><c> was</c><01:09:52.400><c> linked</c><01:09:52.719><c> into</c><01:09:53.040><c> these</c>

01:09:56.550 --> 01:09:56.560 align:start position:0%
 
 

01:09:56.560 --> 01:09:59.590 align:start position:0%
 
linux<01:09:56.880><c> processes</c><01:09:57.280><c> that</c><01:09:57.440><c> would</c><01:09:57.679><c> turn</c><01:09:59.120><c> calls</c><01:09:59.440><c> to</c>

01:09:59.590 --> 01:09:59.600 align:start position:0%
linux processes that would turn calls to
 

01:09:59.600 --> 01:10:01.270 align:start position:0%
linux processes that would turn calls to
things<01:09:59.840><c> like</c><01:10:00.080><c> fork</c><01:10:00.480><c> or</c><01:10:00.719><c> exec</c>

01:10:01.270 --> 01:10:01.280 align:start position:0%
things like fork or exec
 

01:10:01.280 --> 01:10:03.910 align:start position:0%
things like fork or exec
or<01:10:01.440><c> pipe</c><01:10:01.760><c> or</c><01:10:01.840><c> read</c><01:10:02.080><c> or</c><01:10:02.239><c> write</c><01:10:02.880><c> into</c><01:10:03.199><c> ipc</c>

01:10:03.910 --> 01:10:03.920 align:start position:0%
or pipe or read or write into ipc
 

01:10:03.920 --> 01:10:05.510 align:start position:0%
or pipe or read or write into ipc
messages

01:10:05.510 --> 01:10:05.520 align:start position:0%
messages
 

01:10:05.520 --> 01:10:09.830 align:start position:0%
messages
that<01:10:05.679><c> it</c><01:10:05.760><c> would</c><01:10:05.920><c> send</c><01:10:07.600><c> to</c><01:10:07.760><c> the</c><01:10:07.920><c> linux</c><01:10:08.480><c> task</c>

01:10:09.830 --> 01:10:09.840 align:start position:0%
that it would send to the linux task
 

01:10:09.840 --> 01:10:11.669 align:start position:0%
that it would send to the linux task
and<01:10:10.000><c> wait</c><01:10:10.239><c> for</c><01:10:10.320><c> the</c><01:10:10.400><c> response</c><01:10:10.800><c> to</c><01:10:10.960><c> linux</c><01:10:11.360><c> task</c>

01:10:11.669 --> 01:10:11.679 align:start position:0%
and wait for the response to linux task
 

01:10:11.679 --> 01:10:13.030 align:start position:0%
and wait for the response to linux task
and<01:10:11.760><c> then</c><01:10:12.000><c> return</c><01:10:12.480><c> as</c><01:10:12.719><c> if</c>

01:10:13.030 --> 01:10:13.040 align:start position:0%
and then return as if
 

01:10:13.040 --> 01:10:16.149 align:start position:0%
and then return as if
the<01:10:13.199><c> system</c><01:10:13.520><c> call</c><01:10:13.679><c> it</c><01:10:13.840><c> returned</c><01:10:15.840><c> so</c>

01:10:16.149 --> 01:10:16.159 align:start position:0%
the system call it returned so
 

01:10:16.159 --> 01:10:17.510 align:start position:0%
the system call it returned so
so<01:10:16.320><c> these</c><01:10:16.480><c> little</c><01:10:16.719><c> libraries</c><01:10:17.120><c> would</c><01:10:17.280><c> turn</c>

01:10:17.510 --> 01:10:17.520 align:start position:0%
so these little libraries would turn
 

01:10:17.520 --> 01:10:20.229 align:start position:0%
so these little libraries would turn
system<01:10:17.760><c> calls</c><01:10:18.080><c> into</c>

01:10:20.229 --> 01:10:20.239 align:start position:0%
system calls into
 

01:10:20.239 --> 01:10:22.390 align:start position:0%
system calls into
ipc<01:10:20.719><c> messages</c><01:10:21.199><c> to</c><01:10:21.360><c> linux</c><01:10:22.000><c> and</c><01:10:22.080><c> what</c><01:10:22.239><c> that</c>

01:10:22.390 --> 01:10:22.400 align:start position:0%
ipc messages to linux and what that
 

01:10:22.400 --> 01:10:24.390 align:start position:0%
ipc messages to linux and what that
meant<01:10:22.640><c> is</c><01:10:22.800><c> that</c><01:10:23.199><c> if</c><01:10:23.360><c> the</c><01:10:23.520><c> linux</c><01:10:23.840><c> kernel</c><01:10:24.159><c> task</c>

01:10:24.390 --> 01:10:24.400 align:start position:0%
meant is that if the linux kernel task
 

01:10:24.400 --> 01:10:25.590 align:start position:0%
meant is that if the linux kernel task
doesn't<01:10:24.640><c> do</c><01:10:24.800><c> anything</c><01:10:25.199><c> it</c>

01:10:25.590 --> 01:10:25.600 align:start position:0%
doesn't do anything it
 

01:10:25.600 --> 01:10:27.830 align:start position:0%
doesn't do anything it
isn't<01:10:25.840><c> doing</c><01:10:26.080><c> anything</c><01:10:26.480><c> else</c><01:10:27.360><c> it's</c><01:10:27.520><c> sitting</c>

01:10:27.830 --> 01:10:27.840 align:start position:0%
isn't doing anything else it's sitting
 

01:10:27.840 --> 01:10:29.350 align:start position:0%
isn't doing anything else it's sitting
on<01:10:28.000><c> a</c><01:10:28.080><c> call</c><01:10:28.239><c> to</c><01:10:28.400><c> receive</c><01:10:28.800><c> waiting</c><01:10:29.120><c> for</c><01:10:29.280><c> the</c>

01:10:29.350 --> 01:10:29.360 align:start position:0%
on a call to receive waiting for the
 

01:10:29.360 --> 01:10:31.030 align:start position:0%
on a call to receive waiting for the
next<01:10:29.679><c> system</c><01:10:30.000><c> call</c><01:10:30.239><c> request</c>

01:10:31.030 --> 01:10:31.040 align:start position:0%
next system call request
 

01:10:31.040 --> 01:10:38.950 align:start position:0%
next system call request
ipc<01:10:31.679><c> from</c><01:10:32.320><c> any</c><01:10:32.560><c> one</c><01:10:32.719><c> of</c><01:10:32.880><c> these</c><01:10:33.440><c> processes</c>

01:10:38.950 --> 01:10:38.960 align:start position:0%
 
 

01:10:38.960 --> 01:10:42.790 align:start position:0%
 
and<01:10:39.040><c> that</c><01:10:39.199><c> led</c><01:10:39.360><c> to</c><01:10:39.520><c> a</c><01:10:41.679><c> that</c><01:10:41.840><c> leads</c><01:10:42.080><c> to</c><01:10:42.320><c> a</c>

01:10:42.790 --> 01:10:42.800 align:start position:0%
and that led to a that leads to a
 

01:10:42.800 --> 01:10:45.990 align:start position:0%
and that led to a that leads to a
significant<01:10:43.360><c> difference</c><01:10:43.760><c> between</c><01:10:44.080><c> how</c><01:10:45.600><c> this</c>

01:10:45.990 --> 01:10:46.000 align:start position:0%
significant difference between how this
 

01:10:46.000 --> 01:10:48.790 align:start position:0%
significant difference between how this
linux<01:10:46.400><c> works</c><01:10:46.880><c> and</c><01:10:46.960><c> how</c><01:10:47.199><c> ordinary</c><01:10:47.679><c> linux</c><01:10:48.000><c> works</c>

01:10:48.790 --> 01:10:48.800 align:start position:0%
linux works and how ordinary linux works
 

01:10:48.800 --> 01:10:49.189 align:start position:0%
linux works and how ordinary linux works
um

01:10:49.189 --> 01:10:49.199 align:start position:0%
um
 

01:10:49.199 --> 01:10:51.270 align:start position:0%
um
in<01:10:49.360><c> ordinary</c><01:10:49.679><c> linux</c><01:10:50.000><c> just</c><01:10:50.159><c> like</c><01:10:50.320><c> xv6</c><01:10:51.040><c> there's</c>

01:10:51.270 --> 01:10:51.280 align:start position:0%
in ordinary linux just like xv6 there's
 

01:10:51.280 --> 01:10:52.630 align:start position:0%
in ordinary linux just like xv6 there's
a<01:10:51.840><c> basically</c><01:10:52.239><c> a</c>

01:10:52.630 --> 01:10:52.640 align:start position:0%
a basically a
 

01:10:52.640 --> 01:10:55.510 align:start position:0%
a basically a
kernel<01:10:52.960><c> thread</c><01:10:53.280><c> that</c><01:10:53.360><c> corresponds</c><01:10:54.159><c> to</c><01:10:54.400><c> every</c>

01:10:55.510 --> 01:10:55.520 align:start position:0%
kernel thread that corresponds to every
 

01:10:55.520 --> 01:10:57.110 align:start position:0%
kernel thread that corresponds to every
user-level<01:10:56.159><c> process</c><01:10:56.640><c> and</c>

01:10:57.110 --> 01:10:57.120 align:start position:0%
user-level process and
 

01:10:57.120 --> 01:11:00.149 align:start position:0%
user-level process and
when<01:10:57.360><c> a</c><01:10:58.000><c> program</c><01:10:58.239><c> makes</c><01:10:58.480><c> a</c><01:10:58.560><c> system</c><01:10:58.880><c> call</c><01:10:59.120><c> it</c>

01:11:00.149 --> 01:11:00.159 align:start position:0%
when a program makes a system call it
 

01:11:00.159 --> 01:11:02.229 align:start position:0%
when a program makes a system call it
the<01:11:00.880><c> kernel</c><01:11:01.199><c> runs</c><01:11:01.440><c> a</c><01:11:01.520><c> thread</c><01:11:01.760><c> on</c><01:11:01.840><c> behalf</c><01:11:02.159><c> of</c>

01:11:02.229 --> 01:11:02.239 align:start position:0%
the kernel runs a thread on behalf of
 

01:11:02.239 --> 01:11:04.709 align:start position:0%
the kernel runs a thread on behalf of
that<01:11:02.400><c> system</c><01:11:02.719><c> call</c>

01:11:04.709 --> 01:11:04.719 align:start position:0%
that system call
 

01:11:04.719 --> 01:11:07.750 align:start position:0%
that system call
and<01:11:05.199><c> when</c><01:11:06.000><c> in</c><01:11:06.239><c> ordinary</c><01:11:06.640><c> linux</c><01:11:07.040><c> when</c><01:11:07.360><c> linux</c>

01:11:07.750 --> 01:11:07.760 align:start position:0%
and when in ordinary linux when linux
 

01:11:07.760 --> 01:11:09.350 align:start position:0%
and when in ordinary linux when linux
switches<01:11:08.400><c> between</c>

01:11:09.350 --> 01:11:09.360 align:start position:0%
switches between
 

01:11:09.360 --> 01:11:12.149 align:start position:0%
switches between
kernel<01:11:09.840><c> threads</c><01:11:10.719><c> that</c><01:11:11.040><c> basically</c><01:11:11.520><c> implies</c><01:11:12.080><c> a</c>

01:11:12.149 --> 01:11:12.159 align:start position:0%
kernel threads that basically implies a
 

01:11:12.159 --> 01:11:14.950 align:start position:0%
kernel threads that basically implies a
switch<01:11:12.560><c> from</c><01:11:12.719><c> one</c><01:11:13.040><c> process</c><01:11:13.520><c> to</c><01:11:13.679><c> another</c>

01:11:14.950 --> 01:11:14.960 align:start position:0%
switch from one process to another
 

01:11:14.960 --> 01:11:15.990 align:start position:0%
switch from one process to another
so<01:11:15.120><c> there's</c><01:11:15.360><c> kind</c><01:11:15.440><c> of</c><01:11:15.520><c> one-to-one</c>

01:11:15.990 --> 01:11:16.000 align:start position:0%
so there's kind of one-to-one
 

01:11:16.000 --> 01:11:19.669 align:start position:0%
so there's kind of one-to-one
correspondence<01:11:16.719><c> between</c>

01:11:19.669 --> 01:11:19.679 align:start position:0%
 
 

01:11:19.679 --> 01:11:21.270 align:start position:0%
 
what<01:11:19.920><c> kernel</c><01:11:20.239><c> thread</c><01:11:20.480><c> linux</c><01:11:20.880><c> kernel</c><01:11:21.199><c> is</c>

01:11:21.270 --> 01:11:21.280 align:start position:0%
what kernel thread linux kernel is
 

01:11:21.280 --> 01:11:23.750 align:start position:0%
what kernel thread linux kernel is
running<01:11:22.320><c> and</c><01:11:22.480><c> what</c><01:11:22.800><c> process</c><01:11:23.199><c> is</c><01:11:23.280><c> going</c><01:11:23.440><c> to</c><01:11:23.520><c> run</c>

01:11:23.750 --> 01:11:23.760 align:start position:0%
running and what process is going to run
 

01:11:23.760 --> 01:11:25.270 align:start position:0%
running and what process is going to run
when<01:11:23.920><c> linux</c><01:11:24.320><c> is</c><01:11:24.400><c> done</c>

01:11:25.270 --> 01:11:25.280 align:start position:0%
when linux is done
 

01:11:25.280 --> 01:11:26.950 align:start position:0%
when linux is done
here<01:11:25.440><c> that</c><01:11:25.679><c> connection's</c><01:11:26.159><c> broken</c><01:11:26.560><c> they</c><01:11:26.719><c> were</c>

01:11:26.950 --> 01:11:26.960 align:start position:0%
here that connection's broken they were
 

01:11:26.960 --> 01:11:28.550 align:start position:0%
here that connection's broken they were
indeed

01:11:28.550 --> 01:11:28.560 align:start position:0%
indeed
 

01:11:28.560 --> 01:11:31.430 align:start position:0%
indeed
in<01:11:28.719><c> this</c><01:11:29.040><c> linux</c><01:11:29.440><c> server</c><01:11:30.239><c> a</c><01:11:30.640><c> kernel</c><01:11:31.040><c> thread</c>

01:11:31.430 --> 01:11:31.440 align:start position:0%
in this linux server a kernel thread
 

01:11:31.440 --> 01:11:34.149 align:start position:0%
in this linux server a kernel thread
corresponding<01:11:32.080><c> to</c><01:11:32.239><c> each</c>

01:11:34.149 --> 01:11:34.159 align:start position:0%
corresponding to each
 

01:11:34.159 --> 01:11:37.350 align:start position:0%
corresponding to each
i'm<01:11:34.400><c> sorry</c><01:11:35.120><c> let</c><01:11:35.280><c> me</c><01:11:35.360><c> start</c><01:11:35.520><c> again</c><01:11:35.840><c> the</c>

01:11:37.350 --> 01:11:37.360 align:start position:0%
i'm sorry let me start again the
 

01:11:37.360 --> 01:11:40.229 align:start position:0%
i'm sorry let me start again the
linux<01:11:37.760><c> kernel</c><01:11:38.159><c> server</c><01:11:38.880><c> was</c><01:11:39.120><c> running</c><01:11:39.760><c> in</c><01:11:40.000><c> a</c>

01:11:40.229 --> 01:11:40.239 align:start position:0%
linux kernel server was running in a
 

01:11:40.239 --> 01:11:41.669 align:start position:0%
linux kernel server was running in a
single<01:11:40.640><c> l4</c><01:11:41.199><c> thread</c>

01:11:41.669 --> 01:11:41.679 align:start position:0%
single l4 thread
 

01:11:41.679 --> 01:11:44.550 align:start position:0%
single l4 thread
so<01:11:41.840><c> there</c><01:11:42.000><c> was</c><01:11:42.159><c> only</c><01:11:42.400><c> a</c><01:11:42.560><c> single</c><01:11:44.239><c> sort</c><01:11:44.400><c> of</c>

01:11:44.550 --> 01:11:44.560 align:start position:0%
so there was only a single sort of
 

01:11:44.560 --> 01:11:46.630 align:start position:0%
so there was only a single sort of
thread<01:11:44.880><c> of</c><01:11:44.960><c> control</c><01:11:45.440><c> executing</c><01:11:45.920><c> in</c><01:11:46.000><c> linux</c>

01:11:46.630 --> 01:11:46.640 align:start position:0%
thread of control executing in linux
 

01:11:46.640 --> 01:11:52.470 align:start position:0%
thread of control executing in linux
at<01:11:46.800><c> a</c><01:11:46.960><c> time</c><01:11:48.320><c> however</c><01:11:49.199><c> just</c><01:11:49.440><c> as</c><01:11:49.600><c> an</c><01:11:49.760><c> xv6</c>

01:11:52.470 --> 01:11:52.480 align:start position:0%
at a time however just as an xv6
 

01:11:52.480 --> 01:11:55.350 align:start position:0%
at a time however just as an xv6
this<01:11:52.640><c> one</c><01:11:52.880><c> thread</c><01:11:53.120><c> of</c><01:11:53.199><c> control</c><01:11:54.239><c> would</c><01:11:54.640><c> switch</c>

01:11:55.350 --> 01:11:55.360 align:start position:0%
this one thread of control would switch
 

01:11:55.360 --> 01:11:56.790 align:start position:0%
this one thread of control would switch
you<01:11:55.440><c> know</c><01:11:55.600><c> using</c><01:11:55.840><c> a</c><01:11:56.000><c> technique</c><01:11:56.400><c> very</c><01:11:56.560><c> much</c>

01:11:56.790 --> 01:11:56.800 align:start position:0%
you know using a technique very much
 

01:11:56.800 --> 01:11:58.149 align:start position:0%
you know using a technique very much
like

01:11:58.149 --> 01:11:58.159 align:start position:0%
like
 

01:11:58.159 --> 01:12:01.510 align:start position:0%
like
uh<01:11:59.440><c> xp6's</c><01:12:00.080><c> context</c><01:12:00.400><c> switch</c>

01:12:01.510 --> 01:12:01.520 align:start position:0%
uh xp6's context switch
 

01:12:01.520 --> 01:12:05.110 align:start position:0%
uh xp6's context switch
could<01:12:01.840><c> switch</c><01:12:02.400><c> between</c><01:12:03.280><c> um</c><01:12:04.000><c> a</c><01:12:04.159><c> kernel</c><01:12:04.560><c> thread</c>

01:12:05.110 --> 01:12:05.120 align:start position:0%
could switch between um a kernel thread
 

01:12:05.120 --> 01:12:07.270 align:start position:0%
could switch between um a kernel thread
corresponding<01:12:05.760><c> to</c><01:12:05.920><c> each</c><01:12:06.159><c> user</c><01:12:06.480><c> process</c>

01:12:07.270 --> 01:12:07.280 align:start position:0%
corresponding to each user process
 

01:12:07.280 --> 01:12:08.550 align:start position:0%
corresponding to each user process
however

01:12:08.550 --> 01:12:08.560 align:start position:0%
however
 

01:12:08.560 --> 01:12:11.590 align:start position:0%
however
now<01:12:08.880><c> which</c><01:12:10.000><c> of</c><01:12:10.159><c> these</c><01:12:10.960><c> these</c>

01:12:11.590 --> 01:12:11.600 align:start position:0%
now which of these these
 

01:12:11.600 --> 01:12:13.030 align:start position:0%
now which of these these
kernel<01:12:11.920><c> threads</c><01:12:12.159><c> were</c><01:12:12.239><c> implemented</c><01:12:12.719><c> purely</c>

01:12:13.030 --> 01:12:13.040 align:start position:0%
kernel threads were implemented purely
 

01:12:13.040 --> 01:12:15.110 align:start position:0%
kernel threads were implemented purely
within<01:12:13.360><c> linux</c><01:12:13.760><c> and</c><01:12:13.920><c> nothing</c><01:12:14.159><c> to</c><01:12:14.239><c> do</c><01:12:14.400><c> with</c><01:12:14.640><c> l4</c>

01:12:15.110 --> 01:12:15.120 align:start position:0%
within linux and nothing to do with l4
 

01:12:15.120 --> 01:12:15.669 align:start position:0%
within linux and nothing to do with l4
threads

01:12:15.669 --> 01:12:15.679 align:start position:0%
threads
 

01:12:15.679 --> 01:12:18.709 align:start position:0%
threads
there's<01:12:15.920><c> only</c><01:12:16.080><c> one</c><01:12:16.320><c> l4</c><01:12:16.800><c> thread</c><01:12:17.120><c> here</c>

01:12:18.709 --> 01:12:18.719 align:start position:0%
there's only one l4 thread here
 

01:12:18.719 --> 01:12:20.950 align:start position:0%
there's only one l4 thread here
but<01:12:18.960><c> which</c><01:12:19.199><c> user</c><01:12:19.600><c> process</c><01:12:20.000><c> was</c><01:12:20.239><c> running</c><01:12:20.800><c> was</c>

01:12:20.950 --> 01:12:20.960 align:start position:0%
but which user process was running was
 

01:12:20.960 --> 01:12:23.030 align:start position:0%
but which user process was running was
determined<01:12:21.440><c> by</c><01:12:21.679><c> l4</c>

01:12:23.030 --> 01:12:23.040 align:start position:0%
determined by l4
 

01:12:23.040 --> 01:12:26.070 align:start position:0%
determined by l4
so<01:12:23.360><c> in</c><01:12:23.520><c> this</c><01:12:23.760><c> setup</c><01:12:24.640><c> uh</c><01:12:25.280><c> linux</c><01:12:25.679><c> might</c><01:12:25.840><c> be</c>

01:12:26.070 --> 01:12:26.080 align:start position:0%
so in this setup uh linux might be
 

01:12:26.080 --> 01:12:27.270 align:start position:0%
so in this setup uh linux might be
serving<01:12:26.480><c> a</c><01:12:26.560><c> request</c>

01:12:27.270 --> 01:12:27.280 align:start position:0%
serving a request
 

01:12:27.280 --> 01:12:31.430 align:start position:0%
serving a request
from<01:12:28.800><c> executing</c><01:12:29.440><c> the</c><01:12:30.159><c> kernel</c><01:12:30.480><c> thread</c><01:12:30.719><c> for</c><01:12:30.880><c> vi</c>

01:12:31.430 --> 01:12:31.440 align:start position:0%
from executing the kernel thread for vi
 

01:12:31.440 --> 01:12:33.910 align:start position:0%
from executing the kernel thread for vi
serving<01:12:31.840><c> a</c><01:12:32.000><c> vi</c><01:12:32.400><c> system</c><01:12:32.719><c> call</c><01:12:33.360><c> at</c><01:12:33.520><c> the</c><01:12:33.679><c> same</c>

01:12:33.910 --> 01:12:33.920 align:start position:0%
serving a vi system call at the same
 

01:12:33.920 --> 01:12:36.070 align:start position:0%
serving a vi system call at the same
time<01:12:34.080><c> that</c><01:12:34.320><c> l4</c><01:12:34.880><c> is</c><01:12:35.040><c> causing</c><01:12:35.440><c> this</c><01:12:35.600><c> shell</c><01:12:35.920><c> to</c>

01:12:36.070 --> 01:12:36.080 align:start position:0%
time that l4 is causing this shell to
 

01:12:36.080 --> 01:12:37.910 align:start position:0%
time that l4 is causing this shell to
run<01:12:36.320><c> in</c><01:12:36.480><c> user</c><01:12:36.800><c> space</c>

01:12:37.910 --> 01:12:37.920 align:start position:0%
run in user space
 

01:12:37.920 --> 01:12:41.189 align:start position:0%
run in user space
which<01:12:38.159><c> is</c><01:12:38.320><c> very</c><01:12:38.640><c> unlike</c><01:12:40.080><c> what</c><01:12:40.239><c> happens</c><01:12:40.560><c> in</c><01:12:40.719><c> xv6</c>

01:12:41.189 --> 01:12:41.199 align:start position:0%
which is very unlike what happens in xv6
 

01:12:41.199 --> 01:12:42.790 align:start position:0%
which is very unlike what happens in xv6
or<01:12:41.280><c> linux</c><01:12:41.760><c> where</c>

01:12:42.790 --> 01:12:42.800 align:start position:0%
or linux where
 

01:12:42.800 --> 01:12:45.270 align:start position:0%
or linux where
there's<01:12:43.040><c> a</c><01:12:43.199><c> direct</c><01:12:43.520><c> correspondence</c><01:12:44.320><c> between</c>

01:12:45.270 --> 01:12:45.280 align:start position:0%
there's a direct correspondence between
 

01:12:45.280 --> 01:12:46.470 align:start position:0%
there's a direct correspondence between
the<01:12:45.440><c> sort</c><01:12:45.600><c> of</c><01:12:45.760><c> active</c>

01:12:46.470 --> 01:12:46.480 align:start position:0%
the sort of active
 

01:12:46.480 --> 01:12:49.590 align:start position:0%
the sort of active
kernel<01:12:46.880><c> thread</c><01:12:47.280><c> and</c><01:12:47.440><c> the</c><01:12:48.000><c> corresponding</c>

01:12:49.590 --> 01:12:49.600 align:start position:0%
kernel thread and the corresponding
 

01:12:49.600 --> 01:12:51.350 align:start position:0%
kernel thread and the corresponding
use<01:12:49.760><c> a</c><01:12:49.840><c> level</c><01:12:50.080><c> thread</c><01:12:50.400><c> here</c><01:12:50.640><c> l4</c><01:12:51.040><c> is</c><01:12:51.199><c> off</c>

01:12:51.350 --> 01:12:51.360 align:start position:0%
use a level thread here l4 is off
 

01:12:51.360 --> 01:12:53.430 align:start position:0%
use a level thread here l4 is off
running<01:12:51.600><c> whatever</c><01:12:51.920><c> it</c><01:12:52.000><c> feels</c><01:12:52.320><c> like</c>

01:12:53.430 --> 01:12:53.440 align:start position:0%
running whatever it feels like
 

01:12:53.440 --> 01:12:55.270 align:start position:0%
running whatever it feels like
and<01:12:53.920><c> these</c><01:12:54.159><c> threads</c><01:12:54.480><c> in</c><01:12:54.560><c> the</c><01:12:54.640><c> linux</c><01:12:54.960><c> kernel</c>

01:12:55.270 --> 01:12:55.280 align:start position:0%
and these threads in the linux kernel
 

01:12:55.280 --> 01:12:56.950 align:start position:0%
and these threads in the linux kernel
are<01:12:55.440><c> really</c><01:12:55.840><c> much</c><01:12:56.000><c> more</c><01:12:56.239><c> private</c><01:12:56.719><c> and</c><01:12:56.880><c> are</c>

01:12:56.950 --> 01:12:56.960 align:start position:0%
are really much more private and are
 

01:12:56.960 --> 01:12:57.910 align:start position:0%
are really much more private and are
just<01:12:57.199><c> about</c>

01:12:57.910 --> 01:12:57.920 align:start position:0%
just about
 

01:12:57.920 --> 01:13:00.310 align:start position:0%
just about
linux<01:12:58.320><c> being</c><01:12:58.480><c> able</c><01:12:58.719><c> to</c><01:12:59.040><c> um</c><01:12:59.679><c> concurrently</c>

01:13:00.310 --> 01:13:00.320 align:start position:0%
linux being able to um concurrently
 

01:13:00.320 --> 01:13:01.030 align:start position:0%
linux being able to um concurrently
execute

01:13:01.030 --> 01:13:01.040 align:start position:0%
execute
 

01:13:01.040 --> 01:13:02.790 align:start position:0%
execute
system<01:13:01.440><c> calls</c><01:13:01.760><c> in</c><01:13:01.920><c> different</c><01:13:02.159><c> stages</c><01:13:02.640><c> of</c>

01:13:02.790 --> 01:13:02.800 align:start position:0%
system calls in different stages of
 

01:13:02.800 --> 01:13:04.950 align:start position:0%
system calls in different stages of
execution<01:13:03.520><c> where</c><01:13:03.760><c> maybe</c>

01:13:04.950 --> 01:13:04.960 align:start position:0%
execution where maybe
 

01:13:04.960 --> 01:13:07.030 align:start position:0%
execution where maybe
one<01:13:05.199><c> process</c><01:13:05.760><c> is</c><01:13:05.920><c> waiting</c><01:13:06.239><c> for</c><01:13:06.400><c> the</c><01:13:06.480><c> disk</c><01:13:06.960><c> it</c>

01:13:07.030 --> 01:13:07.040 align:start position:0%
one process is waiting for the disk it
 

01:13:07.040 --> 01:13:08.550 align:start position:0%
one process is waiting for the disk it
needs<01:13:07.440><c> thread</c>

01:13:08.550 --> 01:13:08.560 align:start position:0%
needs thread
 

01:13:08.560 --> 01:13:11.270 align:start position:0%
needs thread
linux<01:13:09.040><c> can</c><01:13:09.600><c> run</c><01:13:09.840><c> a</c><01:13:10.000><c> different</c><01:13:10.800><c> processes</c>

01:13:11.270 --> 01:13:11.280 align:start position:0%
linux can run a different processes
 

01:13:11.280 --> 01:13:12.390 align:start position:0%
linux can run a different processes
kernel<01:13:11.600><c> thread</c><01:13:11.920><c> to</c>

01:13:12.390 --> 01:13:12.400 align:start position:0%
kernel thread to
 

01:13:12.400 --> 01:13:20.550 align:start position:0%
kernel thread to
serve<01:13:13.199><c> that</c><01:13:13.440><c> process</c><01:13:13.920><c> system</c><01:13:15.480><c> call</c><01:13:16.840><c> um</c>

01:13:20.550 --> 01:13:20.560 align:start position:0%
 
 

01:13:20.560 --> 01:13:23.669 align:start position:0%
 
so<01:13:21.520><c> you</c><01:13:21.679><c> might</c><01:13:21.840><c> wonder</c><01:13:22.800><c> uh</c><01:13:23.280><c> why</c>

01:13:23.669 --> 01:13:23.679 align:start position:0%
so you might wonder uh why
 

01:13:23.679 --> 01:13:26.070 align:start position:0%
so you might wonder uh why
the<01:13:24.000><c> this</c><01:13:24.239><c> design</c><01:13:24.560><c> didn't</c><01:13:24.880><c> directly</c><01:13:25.280><c> use</c><01:13:25.600><c> l4</c>

01:13:26.070 --> 01:13:26.080 align:start position:0%
the this design didn't directly use l4
 

01:13:26.080 --> 01:13:27.110 align:start position:0%
the this design didn't directly use l4
threads

01:13:27.110 --> 01:13:27.120 align:start position:0%
threads
 

01:13:27.120 --> 01:13:30.830 align:start position:0%
threads
uh<01:13:27.360><c> to</c><01:13:27.600><c> implement</c><01:13:28.239><c> the</c><01:13:29.120><c> various</c><01:13:29.600><c> different</c>

01:13:30.830 --> 01:13:30.840 align:start position:0%
uh to implement the various different
 

01:13:30.840 --> 01:13:35.030 align:start position:0%
uh to implement the various different
um<01:13:32.640><c> uh</c><01:13:33.040><c> kernel</c><01:13:33.360><c> threads</c><01:13:33.600><c> inside</c><01:13:33.920><c> linux</c>

01:13:35.030 --> 01:13:35.040 align:start position:0%
um uh kernel threads inside linux
 

01:13:35.040 --> 01:13:37.030 align:start position:0%
um uh kernel threads inside linux
why<01:13:35.280><c> you</c><01:13:35.360><c> know</c><01:13:35.600><c> why</c><01:13:35.760><c> did</c><01:13:35.920><c> linux</c><01:13:36.480><c> implement</c><01:13:36.880><c> its</c>

01:13:37.030 --> 01:13:37.040 align:start position:0%
why you know why did linux implement its
 

01:13:37.040 --> 01:13:39.110 align:start position:0%
why you know why did linux implement its
own<01:13:37.360><c> sort</c><01:13:37.520><c> of</c><01:13:37.840><c> internal</c><01:13:38.400><c> threads</c><01:13:38.719><c> package</c>

01:13:39.110 --> 01:13:39.120 align:start position:0%
own sort of internal threads package
 

01:13:39.120 --> 01:13:40.790 align:start position:0%
own sort of internal threads package
instead<01:13:39.360><c> of</c><01:13:39.440><c> using</c><01:13:39.679><c> l4</c><01:13:40.080><c> threads</c>

01:13:40.790 --> 01:13:40.800 align:start position:0%
instead of using l4 threads
 

01:13:40.800 --> 01:13:43.910 align:start position:0%
instead of using l4 threads
and<01:13:40.960><c> the</c><01:13:41.040><c> answer</c><01:13:41.360><c> was</c><01:13:41.520><c> that</c><01:13:41.760><c> in</c><01:13:41.840><c> those</c><01:13:42.159><c> days</c><01:13:43.199><c> um</c>

01:13:43.910 --> 01:13:43.920 align:start position:0%
and the answer was that in those days um
 

01:13:43.920 --> 01:13:46.709 align:start position:0%
and the answer was that in those days um
a<01:13:44.560><c> they</c><01:13:44.719><c> didn't</c><01:13:44.960><c> have</c><01:13:45.120><c> access</c><01:13:45.360><c> to</c><01:13:45.520><c> multi-core</c>

01:13:46.709 --> 01:13:46.719 align:start position:0%
a they didn't have access to multi-core
 

01:13:46.719 --> 01:13:48.229 align:start position:0%
a they didn't have access to multi-core
hardware<01:13:47.360><c> they</c><01:13:47.520><c> were</c><01:13:47.760><c> using</c>

01:13:48.229 --> 01:13:48.239 align:start position:0%
hardware they were using
 

01:13:48.239 --> 01:13:49.830 align:start position:0%
hardware they were using
single<01:13:48.560><c> core</c><01:13:48.719><c> hardware</c><01:13:49.120><c> so</c><01:13:49.280><c> there</c><01:13:49.360><c> would</c><01:13:49.520><c> no</c>

01:13:49.830 --> 01:13:49.840 align:start position:0%
single core hardware so there would no
 

01:13:49.840 --> 01:13:51.830 align:start position:0%
single core hardware so there would no
performance<01:13:50.640><c> advantage</c>

01:13:51.830 --> 01:13:51.840 align:start position:0%
performance advantage
 

01:13:51.840 --> 01:13:54.390 align:start position:0%
performance advantage
um<01:13:52.800><c> to</c><01:13:52.960><c> be</c><01:13:53.120><c> able</c><01:13:53.360><c> to</c><01:13:53.600><c> execute</c><01:13:54.080><c> multiple</c>

01:13:54.390 --> 01:13:54.400 align:start position:0%
um to be able to execute multiple
 

01:13:54.400 --> 01:13:55.990 align:start position:0%
um to be able to execute multiple
threads<01:13:54.719><c> in</c><01:13:54.800><c> the</c><01:13:54.880><c> kernel</c><01:13:55.199><c> at</c><01:13:55.280><c> the</c><01:13:55.440><c> same</c><01:13:55.679><c> time</c>

01:13:55.990 --> 01:13:56.000 align:start position:0%
threads in the kernel at the same time
 

01:13:56.000 --> 01:13:58.390 align:start position:0%
threads in the kernel at the same time
because<01:13:56.159><c> it</c><01:13:56.239><c> was</c><01:13:56.400><c> only</c><01:13:56.560><c> one</c><01:13:56.880><c> core</c>

01:13:58.390 --> 01:13:58.400 align:start position:0%
because it was only one core
 

01:13:58.400 --> 01:14:00.390 align:start position:0%
because it was only one core
so<01:13:58.640><c> a</c><01:13:58.719><c> second</c><01:13:58.960><c> thread</c><01:13:59.199><c> couldn't</c><01:13:59.360><c> be</c><01:13:59.520><c> executing</c>

01:14:00.390 --> 01:14:00.400 align:start position:0%
so a second thread couldn't be executing
 

01:14:00.400 --> 01:14:01.830 align:start position:0%
so a second thread couldn't be executing
only<01:14:00.640><c> one</c><01:14:00.880><c> thread</c><01:14:01.120><c> could</c><01:14:01.280><c> execute</c><01:14:01.600><c> it</c><01:14:01.679><c> at</c><01:14:01.760><c> a</c>

01:14:01.830 --> 01:14:01.840 align:start position:0%
only one thread could execute it at a
 

01:14:01.840 --> 01:14:03.750 align:start position:0%
only one thread could execute it at a
time<01:14:02.080><c> due</c><01:14:02.239><c> to</c><01:14:02.320><c> the</c><01:14:02.400><c> hardware</c>

01:14:03.750 --> 01:14:03.760 align:start position:0%
time due to the hardware
 

01:14:03.760 --> 01:14:05.590 align:start position:0%
time due to the hardware
and<01:14:04.000><c> the</c><01:14:04.159><c> other</c><01:14:04.400><c> maybe</c><01:14:04.719><c> even</c><01:14:04.960><c> more</c><01:14:05.199><c> powerful</c>

01:14:05.590 --> 01:14:05.600 align:start position:0%
and the other maybe even more powerful
 

01:14:05.600 --> 01:14:07.430 align:start position:0%
and the other maybe even more powerful
reason<01:14:06.000><c> is</c><01:14:06.080><c> that</c><01:14:06.320><c> in</c><01:14:06.400><c> those</c><01:14:06.719><c> days</c>

01:14:07.430 --> 01:14:07.440 align:start position:0%
reason is that in those days
 

01:14:07.440 --> 01:14:10.390 align:start position:0%
reason is that in those days
the<01:14:07.600><c> version</c><01:14:07.920><c> of</c><01:14:08.000><c> linux</c><01:14:08.400><c> they</c><01:14:08.480><c> were</c><01:14:08.640><c> using</c><01:14:10.239><c> did</c>

01:14:10.390 --> 01:14:10.400 align:start position:0%
the version of linux they were using did
 

01:14:10.400 --> 01:14:10.709 align:start position:0%
the version of linux they were using did
not

01:14:10.709 --> 01:14:10.719 align:start position:0%
not
 

01:14:10.719 --> 01:14:13.590 align:start position:0%
not
did<01:14:10.960><c> not</c><01:14:11.280><c> have</c><01:14:11.520><c> the</c><01:14:11.679><c> support</c><01:14:12.400><c> that's</c><01:14:12.640><c> required</c>

01:14:13.590 --> 01:14:13.600 align:start position:0%
did not have the support that's required
 

01:14:13.600 --> 01:14:14.229 align:start position:0%
did not have the support that's required
to<01:14:13.760><c> have</c>

01:14:14.229 --> 01:14:14.239 align:start position:0%
to have
 

01:14:14.239 --> 01:14:16.070 align:start position:0%
to have
multiple<01:14:14.640><c> threads</c><01:14:15.040><c> multiple</c><01:14:15.600><c> cores</c>

01:14:16.070 --> 01:14:16.080 align:start position:0%
multiple threads multiple cores
 

01:14:16.080 --> 01:14:17.830 align:start position:0%
multiple threads multiple cores
executing<01:14:16.640><c> inside</c><01:14:16.960><c> the</c><01:14:17.040><c> kernel</c><01:14:17.360><c> at</c><01:14:17.440><c> the</c><01:14:17.520><c> same</c>

01:14:17.830 --> 01:14:17.840 align:start position:0%
executing inside the kernel at the same
 

01:14:17.840 --> 01:14:18.470 align:start position:0%
executing inside the kernel at the same
time

01:14:18.470 --> 01:14:18.480 align:start position:0%
time
 

01:14:18.480 --> 01:14:21.270 align:start position:0%
time
they<01:14:18.640><c> were</c><01:14:18.800><c> using</c><01:14:19.120><c> a</c><01:14:19.440><c> uniprocessor</c><01:14:20.719><c> linux</c>

01:14:21.270 --> 01:14:21.280 align:start position:0%
they were using a uniprocessor linux
 

01:14:21.280 --> 01:14:23.350 align:start position:0%
they were using a uniprocessor linux
said<01:14:21.520><c> old</c><01:14:21.760><c> enough</c><01:14:21.920><c> linux</c><01:14:22.320><c> that</c>

01:14:23.350 --> 01:14:23.360 align:start position:0%
said old enough linux that
 

01:14:23.360 --> 01:14:25.030 align:start position:0%
said old enough linux that
expected<01:14:23.840><c> only</c><01:14:24.000><c> one</c><01:14:24.239><c> core</c><01:14:24.400><c> in</c><01:14:24.480><c> the</c><01:14:24.560><c> kernel</c><01:14:24.960><c> at</c>

01:14:25.030 --> 01:14:25.040 align:start position:0%
expected only one core in the kernel at
 

01:14:25.040 --> 01:14:27.350 align:start position:0%
expected only one core in the kernel at
a<01:14:25.120><c> time</c>

01:14:27.350 --> 01:14:27.360 align:start position:0%
a time
 

01:14:27.360 --> 01:14:28.870 align:start position:0%
a time
it<01:14:27.520><c> didn't</c><01:14:27.760><c> have</c><01:14:28.000><c> things</c><01:14:28.239><c> like</c><01:14:28.480><c> the</c><01:14:28.560><c> spin</c>

01:14:28.870 --> 01:14:28.880 align:start position:0%
it didn't have things like the spin
 

01:14:28.880 --> 01:14:30.709 align:start position:0%
it didn't have things like the spin
locks<01:14:29.360><c> that</c><01:14:29.600><c> xv6</c><01:14:30.239><c> has</c>

01:14:30.709 --> 01:14:30.719 align:start position:0%
locks that xv6 has
 

01:14:30.719 --> 01:14:34.229 align:start position:0%
locks that xv6 has
that<01:14:30.880><c> would</c><01:14:31.040><c> allow</c><01:14:31.360><c> it</c><01:14:31.520><c> to</c><01:14:32.960><c> correctly</c>

01:14:34.229 --> 01:14:34.239 align:start position:0%
that would allow it to correctly
 

01:14:34.239 --> 01:14:36.390 align:start position:0%
that would allow it to correctly
execute<01:14:34.719><c> multiple</c><01:14:35.440><c> multiple</c><01:14:35.840><c> cores</c><01:14:36.080><c> inside</c>

01:14:36.390 --> 01:14:36.400 align:start position:0%
execute multiple multiple cores inside
 

01:14:36.400 --> 01:14:37.750 align:start position:0%
execute multiple multiple cores inside
the<01:14:36.480><c> kernel</c><01:14:36.880><c> so</c><01:14:37.040><c> there</c><01:14:37.199><c> would</c><01:14:37.360><c> have</c><01:14:37.440><c> been</c><01:14:37.600><c> no</c>

01:14:37.750 --> 01:14:37.760 align:start position:0%
the kernel so there would have been no
 

01:14:37.760 --> 01:14:40.070 align:start position:0%
the kernel so there would have been no
performance<01:14:38.320><c> advantage</c>

01:14:40.070 --> 01:14:40.080 align:start position:0%
performance advantage
 

01:14:40.080 --> 01:14:42.470 align:start position:0%
performance advantage
in<01:14:40.239><c> having</c><01:14:40.640><c> multiple</c><01:14:41.280><c> l4</c><01:14:41.679><c> threads</c><01:14:42.080><c> active</c>

01:14:42.470 --> 01:14:42.480 align:start position:0%
in having multiple l4 threads active
 

01:14:42.480 --> 01:14:43.750 align:start position:0%
in having multiple l4 threads active
inside<01:14:42.800><c> the</c><01:14:42.960><c> kernel</c>

01:14:43.750 --> 01:14:43.760 align:start position:0%
inside the kernel
 

01:14:43.760 --> 01:14:47.430 align:start position:0%
inside the kernel
um<01:14:44.400><c> but</c><01:14:44.640><c> it</c><01:14:44.719><c> would</c><01:14:44.880><c> have</c><01:14:45.040><c> required</c><01:14:46.400><c> adding</c><01:14:46.800><c> in</c>

01:14:47.430 --> 01:14:47.440 align:start position:0%
um but it would have required adding in
 

01:14:47.440 --> 01:14:49.830 align:start position:0%
um but it would have required adding in
you<01:14:47.600><c> know</c><01:14:47.679><c> for</c><01:14:47.840><c> no</c><01:14:48.080><c> performance</c><01:14:48.800><c> when</c><01:14:49.440><c> adding</c>

01:14:49.830 --> 01:14:49.840 align:start position:0%
you know for no performance when adding
 

01:14:49.840 --> 01:14:50.470 align:start position:0%
you know for no performance when adding
in<01:14:50.000><c> all</c><01:14:50.159><c> the</c>

01:14:50.470 --> 01:14:50.480 align:start position:0%
in all the
 

01:14:50.480 --> 01:14:52.149 align:start position:0%
in all the
spin<01:14:50.800><c> locks</c><01:14:51.040><c> and</c><01:14:51.199><c> other</c><01:14:51.360><c> stuff</c><01:14:51.679><c> is</c><01:14:51.760><c> required</c>

01:14:52.149 --> 01:14:52.159 align:start position:0%
spin locks and other stuff is required
 

01:14:52.159 --> 01:14:53.910 align:start position:0%
spin locks and other stuff is required
to<01:14:52.320><c> support</c><01:14:53.120><c> concurrency</c>

01:14:53.910 --> 01:14:53.920 align:start position:0%
to support concurrency
 

01:14:53.920 --> 01:14:57.990 align:start position:0%
to support concurrency
so<01:14:54.080><c> they</c><01:14:55.199><c> didn't</c><01:14:55.440><c> do</c><01:14:55.600><c> it</c>

01:14:57.990 --> 01:14:58.000 align:start position:0%
 
 

01:14:58.000 --> 01:15:01.189 align:start position:0%
 
a<01:14:58.159><c> drawback</c><01:14:58.719><c> of</c><01:14:58.800><c> this</c><01:14:58.960><c> arrangement</c><01:15:00.480><c> is</c><01:15:00.640><c> that</c>

01:15:01.189 --> 01:15:01.199 align:start position:0%
a drawback of this arrangement is that
 

01:15:01.199 --> 01:15:03.669 align:start position:0%
a drawback of this arrangement is that
um<01:15:01.600><c> in</c><01:15:01.840><c> ordinary</c><01:15:02.239><c> linux</c><01:15:02.560><c> in</c><01:15:02.719><c> native</c><01:15:03.120><c> linux</c>

01:15:03.669 --> 01:15:03.679 align:start position:0%
um in ordinary linux in native linux
 

01:15:03.679 --> 01:15:05.030 align:start position:0%
um in ordinary linux in native linux
like<01:15:03.920><c> you</c><01:15:04.000><c> would</c><01:15:04.159><c> run</c><01:15:04.400><c> directly</c><01:15:04.800><c> on</c><01:15:04.880><c> your</c>

01:15:05.030 --> 01:15:05.040 align:start position:0%
like you would run directly on your
 

01:15:05.040 --> 01:15:05.750 align:start position:0%
like you would run directly on your
laptop

01:15:05.750 --> 01:15:05.760 align:start position:0%
laptop
 

01:15:05.760 --> 01:15:07.990 align:start position:0%
laptop
linux<01:15:06.080><c> has</c><01:15:06.239><c> a</c><01:15:06.320><c> lot</c><01:15:06.480><c> of</c><01:15:06.640><c> sophisticated</c>

01:15:07.990 --> 01:15:08.000 align:start position:0%
linux has a lot of sophisticated
 

01:15:08.000 --> 01:15:08.950 align:start position:0%
linux has a lot of sophisticated
scheduling

01:15:08.950 --> 01:15:08.960 align:start position:0%
scheduling
 

01:15:08.960 --> 01:15:11.270 align:start position:0%
scheduling
machinery<01:15:09.520><c> that</c><01:15:09.679><c> can</c><01:15:10.239><c> do</c><01:15:10.480><c> things</c><01:15:10.640><c> like</c><01:15:10.880><c> impose</c>

01:15:11.270 --> 01:15:11.280 align:start position:0%
machinery that can do things like impose
 

01:15:11.280 --> 01:15:13.110 align:start position:0%
machinery that can do things like impose
priorities<01:15:11.840><c> on</c><01:15:12.000><c> different</c><01:15:12.239><c> processes</c><01:15:12.880><c> or</c>

01:15:13.110 --> 01:15:13.120 align:start position:0%
priorities on different processes or
 

01:15:13.120 --> 01:15:13.750 align:start position:0%
priorities on different processes or
ensure

01:15:13.750 --> 01:15:13.760 align:start position:0%
ensure
 

01:15:13.760 --> 01:15:17.030 align:start position:0%
ensure
various<01:15:14.159><c> kinds</c><01:15:14.400><c> of</c><01:15:14.480><c> fairness</c><01:15:15.440><c> um</c>

01:15:17.030 --> 01:15:17.040 align:start position:0%
various kinds of fairness um
 

01:15:17.040 --> 01:15:19.270 align:start position:0%
various kinds of fairness um
and<01:15:17.120><c> that</c><01:15:17.280><c> works</c><01:15:17.600><c> fine</c><01:15:18.000><c> because</c><01:15:18.320><c> in</c><01:15:18.560><c> a</c><01:15:18.960><c> on</c><01:15:19.120><c> your</c>

01:15:19.270 --> 01:15:19.280 align:start position:0%
and that works fine because in a on your
 

01:15:19.280 --> 01:15:20.470 align:start position:0%
and that works fine because in a on your
laptop<01:15:19.600><c> because</c><01:15:19.840><c> linux</c><01:15:20.159><c> is</c>

01:15:20.470 --> 01:15:20.480 align:start position:0%
laptop because linux is
 

01:15:20.480 --> 01:15:23.750 align:start position:0%
laptop because linux is
in<01:15:20.640><c> control</c><01:15:21.199><c> of</c><01:15:21.840><c> what</c><01:15:22.080><c> process</c><01:15:22.560><c> is</c><01:15:22.640><c> running</c><01:15:23.120><c> on</c>

01:15:23.750 --> 01:15:23.760 align:start position:0%
in control of what process is running on
 

01:15:23.760 --> 01:15:23.990 align:start position:0%
in control of what process is running on
each

01:15:23.990 --> 01:15:24.000 align:start position:0%
each
 

01:15:24.000 --> 01:15:25.830 align:start position:0%
each
core<01:15:24.640><c> but</c><01:15:24.800><c> in</c><01:15:24.880><c> this</c><01:15:25.040><c> setup</c><01:15:25.280><c> linux</c><01:15:25.600><c> is</c><01:15:25.679><c> not</c>

01:15:25.830 --> 01:15:25.840 align:start position:0%
core but in this setup linux is not
 

01:15:25.840 --> 01:15:27.270 align:start position:0%
core but in this setup linux is not
controlling<01:15:26.159><c> that</c><01:15:26.320><c> at</c><01:15:26.480><c> all</c>

01:15:27.270 --> 01:15:27.280 align:start position:0%
controlling that at all
 

01:15:27.280 --> 01:15:30.310 align:start position:0%
controlling that at all
linux<01:15:27.600><c> has</c><01:15:27.760><c> no</c><01:15:27.920><c> control</c><01:15:28.320><c> over</c><01:15:29.520><c> what</c><01:15:30.080><c> what</c>

01:15:30.310 --> 01:15:30.320 align:start position:0%
linux has no control over what what
 

01:15:30.320 --> 01:15:31.830 align:start position:0%
linux has no control over what what
process<01:15:30.719><c> is</c><01:15:30.880><c> running</c>

01:15:31.830 --> 01:15:31.840 align:start position:0%
process is running
 

01:15:31.840 --> 01:15:33.669 align:start position:0%
process is running
because<01:15:32.080><c> it's</c><01:15:32.320><c> l4</c><01:15:32.960><c> that</c><01:15:33.199><c> does</c><01:15:33.440><c> this</c>

01:15:33.669 --> 01:15:33.679 align:start position:0%
because it's l4 that does this
 

01:15:33.679 --> 01:15:35.590 align:start position:0%
because it's l4 that does this
scheduling<01:15:34.320><c> not</c><01:15:34.560><c> linux</c>

01:15:35.590 --> 01:15:35.600 align:start position:0%
scheduling not linux
 

01:15:35.600 --> 01:15:37.830 align:start position:0%
scheduling not linux
these<01:15:36.239><c> processes</c><01:15:36.719><c> are</c><01:15:36.800><c> scheduled</c><01:15:37.120><c> by</c><01:15:37.280><c> l4</c><01:15:37.679><c> so</c>

01:15:37.830 --> 01:15:37.840 align:start position:0%
these processes are scheduled by l4 so
 

01:15:37.840 --> 01:15:39.910 align:start position:0%
these processes are scheduled by l4 so
they<01:15:38.000><c> kind</c><01:15:38.080><c> of</c><01:15:38.239><c> lost</c><01:15:38.480><c> the</c><01:15:38.640><c> ability</c><01:15:39.120><c> to</c>

01:15:39.910 --> 01:15:39.920 align:start position:0%
they kind of lost the ability to
 

01:15:39.920 --> 01:15:43.270 align:start position:0%
they kind of lost the ability to
have<01:15:40.239><c> linux</c><01:15:40.719><c> be</c><01:15:40.880><c> in</c><01:15:41.120><c> charge</c><01:15:41.520><c> of</c><01:15:41.679><c> uh</c><01:15:42.000><c> scheduling</c>

01:15:43.270 --> 01:15:43.280 align:start position:0%
have linux be in charge of uh scheduling
 

01:15:43.280 --> 01:15:45.750 align:start position:0%
have linux be in charge of uh scheduling
um<01:15:44.480><c> you</c><01:15:44.640><c> know</c><01:15:44.719><c> that's</c><01:15:44.880><c> a</c><01:15:44.960><c> bit</c><01:15:45.040><c> of</c><01:15:45.120><c> a</c><01:15:45.199><c> defect</c><01:15:45.679><c> of</c>

01:15:45.750 --> 01:15:45.760 align:start position:0%
um you know that's a bit of a defect of
 

01:15:45.760 --> 01:15:46.870 align:start position:0%
um you know that's a bit of a defect of
this<01:15:46.080><c> the</c>

01:15:46.870 --> 01:15:46.880 align:start position:0%
this the
 

01:15:46.880 --> 01:15:50.149 align:start position:0%
this the
although<01:15:48.000><c> i'm</c><01:15:48.159><c> sure</c><01:15:48.400><c> later</c><01:15:48.640><c> versions</c><01:15:49.040><c> of</c><01:15:49.199><c> l4</c>

01:15:50.149 --> 01:15:50.159 align:start position:0%
although i'm sure later versions of l4
 

01:15:50.159 --> 01:15:53.669 align:start position:0%
although i'm sure later versions of l4
had<01:15:50.960><c> some</c><01:15:51.280><c> way</c><01:15:51.679><c> for</c><01:15:52.560><c> linux</c><01:15:52.960><c> or</c><01:15:53.199><c> something</c><01:15:53.440><c> like</c>

01:15:53.669 --> 01:15:53.679 align:start position:0%
had some way for linux or something like
 

01:15:53.679 --> 01:15:55.270 align:start position:0%
had some way for linux or something like
it<01:15:53.760><c> to</c><01:15:53.840><c> be</c><01:15:53.920><c> able</c><01:15:54.080><c> to</c><01:15:54.159><c> tell</c><01:15:54.320><c> the</c><01:15:54.480><c> l4</c><01:15:54.800><c> scheduler</c>

01:15:55.270 --> 01:15:55.280 align:start position:0%
it to be able to tell the l4 scheduler
 

01:15:55.280 --> 01:15:57.430 align:start position:0%
it to be able to tell the l4 scheduler
oh<01:15:55.440><c> look</c><01:15:55.679><c> please</c>

01:15:57.430 --> 01:15:57.440 align:start position:0%
oh look please
 

01:15:57.440 --> 01:15:59.030 align:start position:0%
oh look please
give<01:15:57.600><c> this</c><01:15:57.840><c> process</c><01:15:58.239><c> higher</c><01:15:58.480><c> priority</c><01:15:58.960><c> or</c>

01:15:59.030 --> 01:15:59.040 align:start position:0%
give this process higher priority or
 

01:15:59.040 --> 01:16:00.550 align:start position:0%
give this process higher priority or
whatever

01:16:00.550 --> 01:16:00.560 align:start position:0%
whatever
 

01:16:00.560 --> 01:16:06.870 align:start position:0%
whatever
so<01:16:00.719><c> it's</c><01:16:00.800><c> a</c><01:16:00.880><c> bit</c><01:16:04.840><c> awkward</c>

01:16:06.870 --> 01:16:06.880 align:start position:0%
so it's a bit awkward
 

01:16:06.880 --> 01:16:11.510 align:start position:0%
so it's a bit awkward
all<01:16:07.040><c> right</c><01:16:08.080><c> um</c>

01:16:11.510 --> 01:16:11.520 align:start position:0%
 
 

01:16:11.520 --> 01:16:14.790 align:start position:0%
 
so<01:16:13.120><c> so</c><01:16:13.280><c> they</c><01:16:13.440><c> went</c><01:16:13.600><c> to</c><01:16:13.760><c> all</c><01:16:13.920><c> this</c><01:16:14.080><c> work</c>

01:16:14.790 --> 01:16:14.800 align:start position:0%
so so they went to all this work
 

01:16:14.800 --> 01:16:19.110 align:start position:0%
so so they went to all this work
um<01:16:15.520><c> to</c><01:16:15.679><c> get</c><01:16:15.840><c> this</c><01:16:16.000><c> going</c><01:16:17.760><c> and</c>

01:16:19.110 --> 01:16:19.120 align:start position:0%
um to get this going and
 

01:16:19.120 --> 01:16:21.590 align:start position:0%
um to get this going and
um<01:16:20.159><c> you</c><01:16:20.239><c> should</c><01:16:20.480><c> ask</c><01:16:20.640><c> yourself</c><01:16:21.120><c> you</c><01:16:21.199><c> know</c><01:16:21.360><c> what</c>

01:16:21.590 --> 01:16:21.600 align:start position:0%
um you should ask yourself you know what
 

01:16:21.600 --> 01:16:22.149 align:start position:0%
um you should ask yourself you know what
is<01:16:21.760><c> the</c>

01:16:22.149 --> 01:16:22.159 align:start position:0%
is the
 

01:16:22.159 --> 01:16:24.310 align:start position:0%
is the
what's<01:16:22.400><c> the</c><01:16:22.560><c> takeaway</c><01:16:23.280><c> lesson</c><01:16:23.679><c> from</c><01:16:24.080><c> from</c>

01:16:24.310 --> 01:16:24.320 align:start position:0%
what's the takeaway lesson from from
 

01:16:24.320 --> 01:16:25.750 align:start position:0%
what's the takeaway lesson from from
this<01:16:24.560><c> paper</c>

01:16:25.750 --> 01:16:25.760 align:start position:0%
this paper
 

01:16:25.760 --> 01:16:30.149 align:start position:0%
this paper
about<01:16:26.880><c> microkernels</c><01:16:28.239><c> um</c>

01:16:30.149 --> 01:16:30.159 align:start position:0%
about microkernels um
 

01:16:30.159 --> 01:16:32.070 align:start position:0%
about microkernels um
now<01:16:30.320><c> one</c><01:16:30.480><c> thing</c><01:16:30.640><c> this</c><01:16:31.280><c> so</c><01:16:31.520><c> for</c><01:16:31.679><c> us</c><01:16:31.920><c> you</c><01:16:32.000><c> know</c>

01:16:32.070 --> 01:16:32.080 align:start position:0%
now one thing this so for us you know
 

01:16:32.080 --> 01:16:33.350 align:start position:0%
now one thing this so for us you know
this<01:16:32.239><c> paper</c><01:16:32.560><c> has</c><01:16:32.719><c> a</c><01:16:32.800><c> lot</c><01:16:32.880><c> of</c>

01:16:33.350 --> 01:16:33.360 align:start position:0%
this paper has a lot of
 

01:16:33.360 --> 01:16:34.870 align:start position:0%
this paper has a lot of
interesting<01:16:33.760><c> tidbits</c><01:16:34.159><c> about</c><01:16:34.400><c> how</c><01:16:34.640><c> micro</c>

01:16:34.870 --> 01:16:34.880 align:start position:0%
interesting tidbits about how micro
 

01:16:34.880 --> 01:16:36.550 align:start position:0%
interesting tidbits about how micro
kernels<01:16:35.199><c> work</c><01:16:35.440><c> and</c><01:16:35.520><c> about</c><01:16:35.679><c> how</c><01:16:35.920><c> linux</c><01:16:36.239><c> works</c>

01:16:36.550 --> 01:16:36.560 align:start position:0%
kernels work and about how linux works
 

01:16:36.560 --> 01:16:37.350 align:start position:0%
kernels work and about how linux works
and<01:16:36.719><c> how</c>

01:16:37.350 --> 01:16:37.360 align:start position:0%
and how
 

01:16:37.360 --> 01:16:39.270 align:start position:0%
and how
you<01:16:37.520><c> know</c><01:16:37.679><c> you</c><01:16:37.840><c> set</c><01:16:38.080><c> up</c><01:16:38.320><c> how</c><01:16:38.560><c> you</c><01:16:38.640><c> can</c><01:16:38.719><c> design</c><01:16:39.199><c> a</c>

01:16:39.270 --> 01:16:39.280 align:start position:0%
you know you set up how you can design a
 

01:16:39.280 --> 01:16:40.790 align:start position:0%
you know you set up how you can design a
system<01:16:39.520><c> like</c><01:16:39.679><c> this</c><01:16:39.920><c> which</c>

01:16:40.790 --> 01:16:40.800 align:start position:0%
system like this which
 

01:16:40.800 --> 01:16:43.990 align:start position:0%
system like this which
may<01:16:40.960><c> be</c><01:16:41.120><c> interesting</c><01:16:42.800><c> but</c><01:16:43.360><c> um</c>

01:16:43.990 --> 01:16:44.000 align:start position:0%
may be interesting but um
 

01:16:44.000 --> 01:16:45.430 align:start position:0%
may be interesting but um
in<01:16:44.159><c> the</c><01:16:44.239><c> larger</c><01:16:44.560><c> world</c><01:16:44.800><c> you</c><01:16:44.880><c> know</c><01:16:45.040><c> people</c><01:16:45.280><c> want</c>

01:16:45.430 --> 01:16:45.440 align:start position:0%
in the larger world you know people want
 

01:16:45.440 --> 01:16:47.830 align:start position:0%
in the larger world you know people want
to<01:16:45.840><c> want</c><01:16:46.000><c> to</c><01:16:46.080><c> draw</c><01:16:46.239><c> some</c><01:16:46.480><c> lessons</c>

01:16:47.830 --> 01:16:47.840 align:start position:0%
to want to draw some lessons
 

01:16:47.840 --> 01:16:50.229 align:start position:0%
to want to draw some lessons
they<01:16:48.000><c> need</c><01:16:48.159><c> to</c><01:16:48.320><c> be</c><01:16:48.400><c> able</c><01:16:48.560><c> to</c><01:16:49.840><c> present</c><01:16:50.080><c> some</c>

01:16:50.229 --> 01:16:50.239 align:start position:0%
they need to be able to present some
 

01:16:50.239 --> 01:16:53.270 align:start position:0%
they need to be able to present some
lessons<01:16:50.640><c> in</c><01:16:50.719><c> this</c><01:16:50.880><c> paper</c>

01:16:53.270 --> 01:16:53.280 align:start position:0%
 
 

01:16:53.280 --> 01:16:55.270 align:start position:0%
 
the<01:16:53.440><c> paper</c><01:16:53.840><c> is</c><01:16:54.000><c> not</c><01:16:54.320><c> really</c><01:16:54.719><c> answering</c><01:16:55.040><c> the</c>

01:16:55.270 --> 01:16:55.280 align:start position:0%
the paper is not really answering the
 

01:16:55.280 --> 01:16:57.990 align:start position:0%
the paper is not really answering the
question<01:16:55.840><c> are</c><01:16:56.000><c> microkernels</c><01:16:56.719><c> a</c><01:16:56.800><c> good</c><01:16:57.040><c> idea</c>

01:16:57.990 --> 01:16:58.000 align:start position:0%
question are microkernels a good idea
 

01:16:58.000 --> 01:17:00.630 align:start position:0%
question are microkernels a good idea
that's<01:16:58.239><c> not</c><01:16:58.400><c> really</c><01:16:58.640><c> what's</c><01:16:58.880><c> going</c><01:16:59.120><c> on</c><01:16:59.280><c> here</c>

01:17:00.630 --> 01:17:00.640 align:start position:0%
that's not really what's going on here
 

01:17:00.640 --> 01:17:01.590 align:start position:0%
that's not really what's going on here
the<01:17:00.880><c> paper</c>

01:17:01.590 --> 01:17:01.600 align:start position:0%
the paper
 

01:17:01.600 --> 01:17:03.830 align:start position:0%
the paper
what<01:17:01.760><c> the</c><01:17:01.920><c> paper</c><01:17:02.239><c> is</c><01:17:02.480><c> is</c><01:17:02.560><c> part</c><01:17:02.800><c> of</c><01:17:02.960><c> a</c><01:17:03.280><c> argument</c>

01:17:03.830 --> 01:17:03.840 align:start position:0%
what the paper is is part of a argument
 

01:17:03.840 --> 01:17:04.950 align:start position:0%
what the paper is is part of a argument
about<01:17:04.480><c> whether</c>

01:17:04.950 --> 01:17:04.960 align:start position:0%
about whether
 

01:17:04.960 --> 01:17:07.990 align:start position:0%
about whether
microkernels<01:17:06.239><c> have</c><01:17:06.480><c> enough</c><01:17:06.800><c> performance</c>

01:17:07.990 --> 01:17:08.000 align:start position:0%
microkernels have enough performance
 

01:17:08.000 --> 01:17:11.830 align:start position:0%
microkernels have enough performance
to<01:17:08.719><c> um</c><01:17:10.560><c> to</c><01:17:10.719><c> be</c><01:17:10.800><c> worth</c><01:17:11.120><c> using</c>

01:17:11.830 --> 01:17:11.840 align:start position:0%
to um to be worth using
 

01:17:11.840 --> 01:17:15.189 align:start position:0%
to um to be worth using
and<01:17:12.159><c> the</c><01:17:12.320><c> reason</c><01:17:12.640><c> is</c><01:17:12.800><c> that</c><01:17:13.600><c> in</c>

01:17:15.189 --> 01:17:15.199 align:start position:0%
and the reason is that in
 

01:17:15.199 --> 01:17:17.189 align:start position:0%
and the reason is that in
maybe<01:17:15.600><c> sort</c><01:17:15.679><c> of</c><01:17:15.840><c> five</c><01:17:16.080><c> years</c><01:17:16.400><c> or</c><01:17:16.800><c> five</c><01:17:16.960><c> or</c><01:17:17.040><c> ten</c>

01:17:17.189 --> 01:17:17.199 align:start position:0%
maybe sort of five years or five or ten
 

01:17:17.199 --> 01:17:18.950 align:start position:0%
maybe sort of five years or five or ten
years<01:17:17.440><c> before</c><01:17:17.760><c> this</c><01:17:17.920><c> paper</c><01:17:18.159><c> came</c><01:17:18.400><c> out</c>

01:17:18.950 --> 01:17:18.960 align:start position:0%
years before this paper came out
 

01:17:18.960 --> 01:17:20.550 align:start position:0%
years before this paper came out
um<01:17:19.520><c> there</c><01:17:19.679><c> was</c><01:17:19.840><c> a</c><01:17:19.920><c> famous</c><01:17:20.320><c> set</c><01:17:20.480><c> of</c>

01:17:20.550 --> 01:17:20.560 align:start position:0%
um there was a famous set of
 

01:17:20.560 --> 01:17:22.149 align:start position:0%
um there was a famous set of
measurements<01:17:21.120><c> on</c><01:17:21.280><c> one</c><01:17:21.440><c> of</c><01:17:21.520><c> the</c><01:17:21.600><c> predecessor</c>

01:17:22.149 --> 01:17:22.159 align:start position:0%
measurements on one of the predecessor
 

01:17:22.159 --> 01:17:23.669 align:start position:0%
measurements on one of the predecessor
microkernels<01:17:22.719><c> an</c><01:17:22.880><c> earlier</c><01:17:23.120><c> microkernel</c>

01:17:23.669 --> 01:17:23.679 align:start position:0%
microkernels an earlier microkernel
 

01:17:23.679 --> 01:17:25.030 align:start position:0%
microkernels an earlier microkernel
called<01:17:23.920><c> mock</c>

01:17:25.030 --> 01:17:25.040 align:start position:0%
called mock
 

01:17:25.040 --> 01:17:27.510 align:start position:0%
called mock
basically<01:17:25.440><c> running</c><01:17:25.760><c> in</c><01:17:26.000><c> very</c><01:17:26.239><c> much</c><01:17:26.560><c> this</c><01:17:27.040><c> uh</c>

01:17:27.510 --> 01:17:27.520 align:start position:0%
basically running in very much this uh
 

01:17:27.520 --> 01:17:29.030 align:start position:0%
basically running in very much this uh
configuration

01:17:29.030 --> 01:17:29.040 align:start position:0%
configuration
 

01:17:29.040 --> 01:17:30.790 align:start position:0%
configuration
but<01:17:29.199><c> a</c><01:17:29.360><c> different</c><01:17:29.600><c> you</c><01:17:29.760><c> know</c><01:17:30.480><c> totally</c>

01:17:30.790 --> 01:17:30.800 align:start position:0%
but a different you know totally
 

01:17:30.800 --> 01:17:32.709 align:start position:0%
but a different you know totally
different<01:17:31.040><c> design</c><01:17:31.600><c> internally</c><01:17:32.159><c> but</c>

01:17:32.709 --> 01:17:32.719 align:start position:0%
different design internally but
 

01:17:32.719 --> 01:17:35.750 align:start position:0%
different design internally but
kind<01:17:32.880><c> of</c><01:17:32.960><c> the</c><01:17:33.120><c> same</c><01:17:33.360><c> architecture</c><01:17:34.320><c> um</c><01:17:35.199><c> this</c>

01:17:35.750 --> 01:17:35.760 align:start position:0%
kind of the same architecture um this
 

01:17:35.760 --> 01:17:38.709 align:start position:0%
kind of the same architecture um this
um<01:17:37.120><c> the</c><01:17:37.280><c> name</c><01:17:37.520><c> of</c><01:17:37.600><c> this</c><01:17:37.760><c> earlier</c><01:17:38.080><c> micro</c><01:17:38.400><c> kernel</c>

01:17:38.709 --> 01:17:38.719 align:start position:0%
um the name of this earlier micro kernel
 

01:17:38.719 --> 01:17:40.550 align:start position:0%
um the name of this earlier micro kernel
project<01:17:39.120><c> is</c><01:17:39.280><c> mock</c>

01:17:40.550 --> 01:17:40.560 align:start position:0%
project is mock
 

01:17:40.560 --> 01:17:41.910 align:start position:0%
project is mock
there<01:17:40.719><c> was</c><01:17:40.960><c> measurements</c><01:17:41.440><c> on</c><01:17:41.520><c> mach</c><01:17:41.840><c> that</c>

01:17:41.910 --> 01:17:41.920 align:start position:0%
there was measurements on mach that
 

01:17:41.920 --> 01:17:43.590 align:start position:0%
there was measurements on mach that
showed<01:17:42.239><c> that</c><01:17:42.400><c> mach</c><01:17:42.960><c> was</c>

01:17:43.590 --> 01:17:43.600 align:start position:0%
showed that mach was
 

01:17:43.600 --> 01:17:46.310 align:start position:0%
showed that mach was
dramatically<01:17:44.320><c> slower</c><01:17:44.800><c> than</c><01:17:45.280><c> just</c><01:17:45.760><c> ordinary</c>

01:17:46.310 --> 01:17:46.320 align:start position:0%
dramatically slower than just ordinary
 

01:17:46.320 --> 01:17:47.590 align:start position:0%
dramatically slower than just ordinary
unix

01:17:47.590 --> 01:17:47.600 align:start position:0%
unix
 

01:17:47.600 --> 01:17:49.750 align:start position:0%
unix
when<01:17:47.840><c> it</c><01:17:47.920><c> was</c><01:17:48.159><c> run</c><01:17:48.480><c> in</c><01:17:48.719><c> this</c><01:17:48.880><c> configuration</c>

01:17:49.750 --> 01:17:49.760 align:start position:0%
when it was run in this configuration
 

01:17:49.760 --> 01:17:50.709 align:start position:0%
when it was run in this configuration
and

01:17:50.709 --> 01:17:50.719 align:start position:0%
and
 

01:17:50.719 --> 01:17:52.310 align:start position:0%
and
you<01:17:50.800><c> know</c><01:17:51.040><c> there</c><01:17:51.199><c> are</c><01:17:51.520><c> a</c><01:17:51.600><c> lot</c><01:17:51.760><c> of</c><01:17:51.840><c> reasons</c><01:17:52.159><c> for</c>

01:17:52.310 --> 01:17:52.320 align:start position:0%
you know there are a lot of reasons for
 

01:17:52.320 --> 01:17:54.870 align:start position:0%
you know there are a lot of reasons for
that<01:17:52.480><c> having</c><01:17:52.719><c> to</c><01:17:52.800><c> do</c><01:17:53.040><c> with</c><01:17:53.679><c> the</c><01:17:54.000><c> ipc</c><01:17:54.480><c> system</c>

01:17:54.870 --> 01:17:54.880 align:start position:0%
that having to do with the ipc system
 

01:17:54.880 --> 01:17:57.110 align:start position:0%
that having to do with the ipc system
not<01:17:55.040><c> being</c><01:17:55.280><c> as</c><01:17:55.440><c> optimized</c><01:17:55.920><c> as</c><01:17:56.080><c> you</c><01:17:56.159><c> might</c><01:17:56.400><c> hope</c>

01:17:57.110 --> 01:17:57.120 align:start position:0%
not being as optimized as you might hope
 

01:17:57.120 --> 01:17:59.110 align:start position:0%
not being as optimized as you might hope
there<01:17:57.280><c> being</c><01:17:57.520><c> just</c><01:17:57.679><c> sort</c><01:17:57.840><c> of</c><01:17:58.080><c> more</c><01:17:58.640><c> context</c>

01:17:59.110 --> 01:17:59.120 align:start position:0%
there being just sort of more context
 

01:17:59.120 --> 01:18:00.950 align:start position:0%
there being just sort of more context
switches<01:17:59.679><c> and</c>

01:18:00.950 --> 01:18:00.960 align:start position:0%
switches and
 

01:18:00.960 --> 01:18:04.310 align:start position:0%
switches and
um<01:18:02.000><c> you</c><01:18:02.080><c> know</c><01:18:02.400><c> user</c><01:18:02.719><c> kernel</c><01:18:03.040><c> crossings</c><01:18:03.840><c> and</c>

01:18:04.310 --> 01:18:04.320 align:start position:0%
um you know user kernel crossings and
 

01:18:04.320 --> 01:18:05.590 align:start position:0%
um you know user kernel crossings and
cache<01:18:04.640><c> misses</c><01:18:04.960><c> and</c><01:18:05.040><c> whatever</c><01:18:05.440><c> you</c><01:18:05.520><c> know</c>

01:18:05.590 --> 01:18:05.600 align:start position:0%
cache misses and whatever you know
 

01:18:05.600 --> 01:18:07.590 align:start position:0%
cache misses and whatever you know
there's<01:18:05.760><c> a</c><01:18:05.760><c> whole</c><01:18:05.920><c> lot</c><01:18:06.080><c> of</c><01:18:06.159><c> reasons</c><01:18:06.560><c> why</c><01:18:06.800><c> mock</c>

01:18:07.590 --> 01:18:07.600 align:start position:0%
there's a whole lot of reasons why mock
 

01:18:07.600 --> 01:18:10.709 align:start position:0%
there's a whole lot of reasons why mock
uh<01:18:07.840><c> was</c><01:18:08.080><c> slow</c><01:18:08.560><c> but</c><01:18:09.040><c> many</c><01:18:09.360><c> people</c><01:18:10.239><c> saw</c><01:18:10.480><c> those</c>

01:18:10.709 --> 01:18:10.719 align:start position:0%
uh was slow but many people saw those
 

01:18:10.719 --> 01:18:12.149 align:start position:0%
uh was slow but many people saw those
benchmark<01:18:11.120><c> results</c><01:18:11.440><c> showing</c><01:18:11.679><c> that</c><01:18:11.840><c> mock</c><01:18:12.000><c> was</c>

01:18:12.149 --> 01:18:12.159 align:start position:0%
benchmark results showing that mock was
 

01:18:12.159 --> 01:18:13.270 align:start position:0%
benchmark results showing that mock was
much<01:18:12.320><c> slower</c><01:18:12.719><c> than</c>

01:18:13.270 --> 01:18:13.280 align:start position:0%
much slower than
 

01:18:13.280 --> 01:18:14.870 align:start position:0%
much slower than
native<01:18:13.600><c> operating</c><01:18:14.000><c> systems</c><01:18:14.320><c> and</c><01:18:14.480><c> decided</c>

01:18:14.870 --> 01:18:14.880 align:start position:0%
native operating systems and decided
 

01:18:14.880 --> 01:18:16.709 align:start position:0%
native operating systems and decided
that<01:18:15.040><c> microkernels</c><01:18:15.679><c> were</c><01:18:15.840><c> just</c>

01:18:16.709 --> 01:18:16.719 align:start position:0%
that microkernels were just
 

01:18:16.719 --> 01:18:19.270 align:start position:0%
that microkernels were just
uh<01:18:17.120><c> hopeless</c><01:18:17.679><c> hopelessly</c><01:18:18.159><c> inefficient</c><01:18:19.040><c> were</c>

01:18:19.270 --> 01:18:19.280 align:start position:0%
uh hopeless hopelessly inefficient were
 

01:18:19.280 --> 01:18:20.950 align:start position:0%
uh hopeless hopelessly inefficient were
unlikely<01:18:19.760><c> ever</c><01:18:19.920><c> to</c><01:18:20.080><c> be</c><01:18:20.159><c> fast</c><01:18:20.480><c> enough</c><01:18:20.719><c> to</c><01:18:20.880><c> be</c>

01:18:20.950 --> 01:18:20.960 align:start position:0%
unlikely ever to be fast enough to be
 

01:18:20.960 --> 01:18:22.390 align:start position:0%
unlikely ever to be fast enough to be
competitive<01:18:21.679><c> and</c>

01:18:22.390 --> 01:18:22.400 align:start position:0%
competitive and
 

01:18:22.400 --> 01:18:24.310 align:start position:0%
competitive and
you<01:18:22.480><c> know</c><01:18:23.040><c> we</c><01:18:23.120><c> should</c><01:18:23.280><c> just</c><01:18:23.520><c> all</c><01:18:23.760><c> use</c>

01:18:24.310 --> 01:18:24.320 align:start position:0%
you know we should just all use
 

01:18:24.320 --> 01:18:26.470 align:start position:0%
you know we should just all use
monolithic<01:18:24.880><c> kernels</c>

01:18:26.470 --> 01:18:26.480 align:start position:0%
monolithic kernels
 

01:18:26.480 --> 01:18:29.350 align:start position:0%
monolithic kernels
today's<01:18:27.120><c> paper</c><01:18:27.520><c> is</c><01:18:27.760><c> like</c><01:18:28.400><c> an</c><01:18:28.719><c> answer</c>

01:18:29.350 --> 01:18:29.360 align:start position:0%
today's paper is like an answer
 

01:18:29.360 --> 01:18:30.229 align:start position:0%
today's paper is like an answer
basically

01:18:30.229 --> 01:18:30.239 align:start position:0%
basically
 

01:18:30.239 --> 01:18:33.189 align:start position:0%
basically
um<01:18:30.719><c> to</c><01:18:30.880><c> that</c><01:18:31.120><c> argument</c><01:18:31.600><c> it's</c><01:18:32.320><c> sort</c><01:18:32.560><c> of</c><01:18:33.040><c> the</c>

01:18:33.189 --> 01:18:33.199 align:start position:0%
um to that argument it's sort of the
 

01:18:33.199 --> 01:18:34.470 align:start position:0%
um to that argument it's sort of the
rebuttal<01:18:33.600><c> to</c><01:18:33.760><c> that</c><01:18:33.920><c> argument</c>

01:18:34.470 --> 01:18:34.480 align:start position:0%
rebuttal to that argument
 

01:18:34.480 --> 01:18:36.149 align:start position:0%
rebuttal to that argument
and<01:18:34.640><c> the</c><01:18:34.800><c> point</c><01:18:34.960><c> of</c><01:18:35.040><c> this</c><01:18:35.199><c> paper</c><01:18:35.520><c> is</c><01:18:35.679><c> to</c><01:18:35.840><c> show</c>

01:18:36.149 --> 01:18:36.159 align:start position:0%
and the point of this paper is to show
 

01:18:36.159 --> 01:18:38.390 align:start position:0%
and the point of this paper is to show
that<01:18:36.320><c> you</c><01:18:36.400><c> can</c><01:18:36.719><c> build</c><01:18:37.120><c> this</c><01:18:37.360><c> architecture</c>

01:18:38.390 --> 01:18:38.400 align:start position:0%
that you can build this architecture
 

01:18:38.400 --> 01:18:40.229 align:start position:0%
that you can build this architecture
and<01:18:38.560><c> if</c><01:18:38.640><c> you</c><01:18:38.800><c> pay</c><01:18:38.960><c> enough</c><01:18:38.960><c> attention</c><01:18:40.000><c> to</c>

01:18:40.229 --> 01:18:40.239 align:start position:0%
and if you pay enough attention to
 

01:18:40.239 --> 01:18:41.669 align:start position:0%
and if you pay enough attention to
optimizing<01:18:40.800><c> performance</c>

01:18:41.669 --> 01:18:41.679 align:start position:0%
optimizing performance
 

01:18:41.679 --> 01:18:45.350 align:start position:0%
optimizing performance
you<01:18:41.840><c> can</c><01:18:42.000><c> get</c><01:18:43.199><c> competitive</c><01:18:43.760><c> performance</c><01:18:44.640><c> with</c>

01:18:45.350 --> 01:18:45.360 align:start position:0%
you can get competitive performance with
 

01:18:45.360 --> 01:18:47.189 align:start position:0%
you can get competitive performance with
native<01:18:45.760><c> operating</c><01:18:46.159><c> systems</c><01:18:46.480><c> so</c><01:18:46.719><c> it's</c><01:18:46.800><c> just</c>

01:18:47.189 --> 01:18:47.199 align:start position:0%
native operating systems so it's just
 

01:18:47.199 --> 01:18:48.950 align:start position:0%
native operating systems so it's just
directly<01:18:47.600><c> running</c><01:18:47.920><c> unix</c>

01:18:48.950 --> 01:18:48.960 align:start position:0%
directly running unix
 

01:18:48.960 --> 01:18:51.590 align:start position:0%
directly running unix
and<01:18:49.120><c> therefore</c><01:18:50.560><c> you</c><01:18:50.800><c> can't</c><01:18:51.120><c> dismiss</c>

01:18:51.590 --> 01:18:51.600 align:start position:0%
and therefore you can't dismiss
 

01:18:51.600 --> 01:18:53.270 align:start position:0%
and therefore you can't dismiss
microkernels<01:18:52.320><c> simply</c><01:18:52.640><c> on</c><01:18:52.719><c> the</c><01:18:52.800><c> basis</c><01:18:53.199><c> of</c>

01:18:53.270 --> 01:18:53.280 align:start position:0%
microkernels simply on the basis of
 

01:18:53.280 --> 01:18:54.390 align:start position:0%
microkernels simply on the basis of
performance

01:18:54.390 --> 01:18:54.400 align:start position:0%
performance
 

01:18:54.400 --> 01:18:55.669 align:start position:0%
performance
you<01:18:54.480><c> know</c><01:18:54.640><c> you</c><01:18:54.800><c> may</c><01:18:54.960><c> not</c><01:18:55.120><c> want</c><01:18:55.280><c> them</c><01:18:55.360><c> for</c><01:18:55.520><c> other</c>

01:18:55.669 --> 01:18:55.679 align:start position:0%
you know you may not want them for other
 

01:18:55.679 --> 01:18:59.110 align:start position:0%
you know you may not want them for other
reasons<01:18:56.159><c> but</c><01:18:57.280><c> you</c><01:18:57.360><c> can't</c><01:18:57.679><c> use</c><01:18:58.000><c> performance</c>

01:18:59.110 --> 01:18:59.120 align:start position:0%
reasons but you can't use performance
 

01:18:59.120 --> 01:19:02.390 align:start position:0%
reasons but you can't use performance
as<01:18:59.360><c> the</c><01:18:59.440><c> reason</c><01:18:59.760><c> to</c><01:18:59.840><c> reject</c><01:19:00.239><c> them</c>

01:19:02.390 --> 01:19:02.400 align:start position:0%
as the reason to reject them
 

01:19:02.400 --> 01:19:03.750 align:start position:0%
as the reason to reject them
part<01:19:02.640><c> of</c><01:19:02.719><c> the</c><01:19:03.040><c> a</c><01:19:03.120><c> huge</c><01:19:03.360><c> part</c><01:19:03.600><c> of</c><01:19:03.679><c> the</c>

01:19:03.750 --> 01:19:03.760 align:start position:0%
part of the a huge part of the
 

01:19:03.760 --> 01:19:06.229 align:start position:0%
part of the a huge part of the
ingredient<01:19:04.400><c> in</c>

01:19:06.229 --> 01:19:06.239 align:start position:0%
ingredient in
 

01:19:06.239 --> 01:19:07.510 align:start position:0%
ingredient in
making<01:19:06.480><c> that</c><01:19:06.640><c> argument</c><01:19:07.040><c> is</c><01:19:07.120><c> that</c><01:19:07.199><c> they</c><01:19:07.360><c> made</c>

01:19:07.510 --> 01:19:07.520 align:start position:0%
making that argument is that they made
 

01:19:07.520 --> 01:19:09.430 align:start position:0%
making that argument is that they made
the<01:19:07.600><c> ibc</c><01:19:08.080><c> much</c><01:19:08.320><c> faster</c><01:19:08.640><c> with</c><01:19:08.880><c> the</c><01:19:09.040><c> techniques</c>

01:19:09.430 --> 01:19:09.440 align:start position:0%
the ibc much faster with the techniques
 

01:19:09.440 --> 01:19:11.430 align:start position:0%
the ibc much faster with the techniques
that<01:19:09.600><c> i</c><01:19:09.760><c> outlined</c><01:19:10.320><c> a</c><01:19:10.400><c> few</c><01:19:10.560><c> minutes</c><01:19:10.880><c> ago</c>

01:19:11.430 --> 01:19:11.440 align:start position:0%
that i outlined a few minutes ago
 

01:19:11.440 --> 01:19:14.470 align:start position:0%
that i outlined a few minutes ago
and<01:19:11.679><c> you</c><01:19:11.760><c> can</c><01:19:12.000><c> see</c><01:19:12.239><c> this</c><01:19:12.480><c> i</c><01:19:12.560><c> think</c><01:19:12.880><c> in</c><01:19:13.120><c> um</c>

01:19:14.470 --> 01:19:14.480 align:start position:0%
and you can see this i think in um
 

01:19:14.480 --> 01:19:17.110 align:start position:0%
and you can see this i think in um
in<01:19:14.640><c> a</c><01:19:14.800><c> very</c><01:19:15.199><c> simple</c><01:19:15.520><c> benchmark</c><01:19:16.080><c> in</c><01:19:16.400><c> table</c><01:19:16.800><c> two</c>

01:19:17.110 --> 01:19:17.120 align:start position:0%
in a very simple benchmark in table two
 

01:19:17.120 --> 01:19:19.030 align:start position:0%
in a very simple benchmark in table two
if<01:19:17.199><c> you</c><01:19:17.280><c> have</c><01:19:17.360><c> a</c><01:19:17.440><c> copy</c><01:19:17.840><c> of</c><01:19:17.920><c> the</c><01:19:18.000><c> paper</c><01:19:18.320><c> with</c><01:19:18.400><c> you</c>

01:19:19.030 --> 01:19:19.040 align:start position:0%
if you have a copy of the paper with you
 

01:19:19.040 --> 01:19:22.550 align:start position:0%
if you have a copy of the paper with you
um<01:19:20.480><c> table</c><01:19:20.800><c> two</c><01:19:21.040><c> has</c><01:19:21.199><c> measurements</c><01:19:21.920><c> of</c>

01:19:22.550 --> 01:19:22.560 align:start position:0%
um table two has measurements of
 

01:19:22.560 --> 01:19:24.229 align:start position:0%
um table two has measurements of
just<01:19:22.960><c> native</c><01:19:23.360><c> linux</c><01:19:23.760><c> running</c><01:19:24.000><c> in</c><01:19:24.080><c> the</c>

01:19:24.229 --> 01:19:24.239 align:start position:0%
just native linux running in the
 

01:19:24.239 --> 01:19:25.990 align:start position:0%
just native linux running in the
ordinary<01:19:24.640><c> way</c><01:19:24.880><c> on</c><01:19:25.040><c> hardware</c>

01:19:25.990 --> 01:19:26.000 align:start position:0%
ordinary way on hardware
 

01:19:26.000 --> 01:19:28.550 align:start position:0%
ordinary way on hardware
um<01:19:26.239><c> and</c><01:19:26.400><c> on</c><01:19:26.480><c> native</c><01:19:26.800><c> linux</c><01:19:27.360><c> they</c><01:19:27.520><c> show</c><01:19:27.760><c> that</c><01:19:28.000><c> uh</c>

01:19:28.550 --> 01:19:28.560 align:start position:0%
um and on native linux they show that uh
 

01:19:28.560 --> 01:19:29.750 align:start position:0%
um and on native linux they show that uh
you<01:19:28.640><c> know</c><01:19:28.800><c> on</c><01:19:28.960><c> their</c><01:19:29.120><c> hardware</c><01:19:29.520><c> and</c><01:19:29.600><c> their</c>

01:19:29.750 --> 01:19:29.760 align:start position:0%
you know on their hardware and their
 

01:19:29.760 --> 01:19:30.950 align:start position:0%
you know on their hardware and their
version<01:19:30.080><c> of</c><01:19:30.159><c> linux</c>

01:19:30.950 --> 01:19:30.960 align:start position:0%
version of linux
 

01:19:30.960 --> 01:19:33.669 align:start position:0%
version of linux
that<01:19:31.199><c> um</c><01:19:32.080><c> a</c><01:19:32.239><c> single</c><01:19:32.640><c> simple</c><01:19:32.960><c> system</c><01:19:33.280><c> called</c>

01:19:33.669 --> 01:19:33.679 align:start position:0%
that um a single simple system called
 

01:19:33.679 --> 01:19:34.550 align:start position:0%
that um a single simple system called
get<01:19:33.920><c> pid</c>

01:19:34.550 --> 01:19:34.560 align:start position:0%
get pid
 

01:19:34.560 --> 01:19:38.470 align:start position:0%
get pid
took<01:19:34.960><c> 1.7</c><01:19:35.840><c> microseconds</c>

01:19:38.470 --> 01:19:38.480 align:start position:0%
took 1.7 microseconds
 

01:19:38.480 --> 01:19:41.750 align:start position:0%
took 1.7 microseconds
and<01:19:38.640><c> they</c><01:19:38.800><c> also</c><01:19:39.199><c> show</c><01:19:39.520><c> that</c><01:19:40.320><c> the</c>

01:19:41.750 --> 01:19:41.760 align:start position:0%
and they also show that the
 

01:19:41.760 --> 01:19:44.470 align:start position:0%
and they also show that the
sort<01:19:41.920><c> of</c><01:19:42.080><c> equivalent</c><01:19:42.640><c> thing</c><01:19:42.880><c> in</c><01:19:43.040><c> their</c><01:19:43.679><c> in</c><01:19:43.920><c> l4</c>

01:19:44.470 --> 01:19:44.480 align:start position:0%
sort of equivalent thing in their in l4
 

01:19:44.480 --> 01:19:45.110 align:start position:0%
sort of equivalent thing in their in l4
setup

01:19:45.110 --> 01:19:45.120 align:start position:0%
setup
 

01:19:45.120 --> 01:19:46.790 align:start position:0%
setup
where<01:19:45.360><c> you</c><01:19:45.440><c> have</c><01:19:45.520><c> to</c><01:19:45.679><c> send</c><01:19:45.920><c> an</c><01:19:46.000><c> ipc</c><01:19:46.400><c> request</c>

01:19:46.790 --> 01:19:46.800 align:start position:0%
where you have to send an ipc request
 

01:19:46.800 --> 01:19:48.229 align:start position:0%
where you have to send an ipc request
and<01:19:46.880><c> get</c><01:19:46.960><c> an</c><01:19:47.120><c> ipc</c><01:19:47.520><c> response</c>

01:19:48.229 --> 01:19:48.239 align:start position:0%
and get an ipc response
 

01:19:48.239 --> 01:19:51.110 align:start position:0%
and get an ipc response
just<01:19:48.480><c> for</c><01:19:48.640><c> this</c><01:19:49.040><c> get</c><01:19:49.280><c> process</c><01:19:49.679><c> id</c><01:19:50.000><c> system</c><01:19:50.320><c> call</c>

01:19:51.110 --> 01:19:51.120 align:start position:0%
just for this get process id system call
 

01:19:51.120 --> 01:19:54.070 align:start position:0%
just for this get process id system call
that<01:19:51.360><c> that</c>

01:19:54.070 --> 01:19:54.080 align:start position:0%
 
 

01:19:54.080 --> 01:19:57.750 align:start position:0%
 
that<01:19:54.640><c> took</c><01:19:55.360><c> uh</c><01:19:55.760><c> four</c><01:19:56.080><c> microseconds</c><01:19:57.040><c> under</c><01:19:57.280><c> l4</c>

01:19:57.750 --> 01:19:57.760 align:start position:0%
that took uh four microseconds under l4
 

01:19:57.760 --> 01:20:00.229 align:start position:0%
that took uh four microseconds under l4
linux<01:19:58.239><c> which</c><01:19:58.480><c> is</c><01:19:58.560><c> to</c><01:19:58.719><c> say</c><01:19:58.960><c> twice</c><01:19:59.199><c> as</c><01:19:59.360><c> long</c><01:19:59.760><c> but</c>

01:20:00.229 --> 01:20:00.239 align:start position:0%
linux which is to say twice as long but
 

01:20:00.239 --> 01:20:02.390 align:start position:0%
linux which is to say twice as long but
there's<01:20:00.880><c> sort</c><01:20:01.040><c> of</c><01:20:01.199><c> twice</c><01:20:01.520><c> as</c><01:20:01.679><c> much</c><01:20:01.840><c> work</c><01:20:02.159><c> going</c>

01:20:02.390 --> 01:20:02.400 align:start position:0%
there's sort of twice as much work going
 

01:20:02.400 --> 01:20:03.590 align:start position:0%
there's sort of twice as much work going
on<01:20:02.640><c> because</c><01:20:02.880><c> you're</c><01:20:03.040><c> doing</c>

01:20:03.590 --> 01:20:03.600 align:start position:0%
on because you're doing
 

01:20:03.600 --> 01:20:05.669 align:start position:0%
on because you're doing
two<01:20:03.920><c> sets</c><01:20:04.159><c> of</c><01:20:04.320><c> user</c><01:20:04.560><c> kernel</c><01:20:04.880><c> crossings</c>

01:20:05.669 --> 01:20:05.679 align:start position:0%
two sets of user kernel crossings
 

01:20:05.679 --> 01:20:06.790 align:start position:0%
two sets of user kernel crossings
instead<01:20:06.080><c> of</c>

01:20:06.790 --> 01:20:06.800 align:start position:0%
instead of
 

01:20:06.800 --> 01:20:10.310 align:start position:0%
instead of
just<01:20:07.040><c> a</c><01:20:07.199><c> single</c><01:20:07.679><c> simple</c><01:20:08.400><c> system</c><01:20:08.800><c> call</c><01:20:09.440><c> that</c><01:20:09.679><c> is</c>

01:20:10.310 --> 01:20:10.320 align:start position:0%
just a single simple system call that is
 

01:20:10.320 --> 01:20:11.669 align:start position:0%
just a single simple system call that is
they<01:20:10.480><c> could</c><01:20:10.639><c> claim</c><01:20:10.960><c> that</c><01:20:11.040><c> they</c><01:20:11.199><c> had</c><01:20:11.360><c> paired</c>

01:20:11.669 --> 01:20:11.679 align:start position:0%
they could claim that they had paired
 

01:20:11.679 --> 01:20:14.629 align:start position:0%
they could claim that they had paired
the<01:20:11.840><c> expense</c><01:20:13.199><c> of</c><01:20:13.360><c> these</c><01:20:13.600><c> ipc</c><01:20:14.080><c> based</c><01:20:14.320><c> system</c>

01:20:14.629 --> 01:20:14.639 align:start position:0%
the expense of these ipc based system
 

01:20:14.639 --> 01:20:15.110 align:start position:0%
the expense of these ipc based system
calls

01:20:15.110 --> 01:20:15.120 align:start position:0%
calls
 

01:20:15.120 --> 01:20:17.510 align:start position:0%
calls
down<01:20:15.440><c> to</c><01:20:15.600><c> basically</c><01:20:15.920><c> the</c><01:20:16.080><c> minimum</c><01:20:16.639><c> that</c><01:20:16.880><c> is</c>

01:20:17.510 --> 01:20:17.520 align:start position:0%
down to basically the minimum that is
 

01:20:17.520 --> 01:20:19.510 align:start position:0%
down to basically the minimum that is
twice<01:20:17.840><c> the</c><01:20:18.000><c> cost</c><01:20:18.480><c> of</c><01:20:18.639><c> a</c>

01:20:19.510 --> 01:20:19.520 align:start position:0%
twice the cost of a
 

01:20:19.520 --> 01:20:21.510 align:start position:0%
twice the cost of a
system<01:20:19.840><c> called</c><01:20:20.080><c> native</c><01:20:20.400><c> linux</c><01:20:21.040><c> and</c><01:20:21.120><c> therefore</c>

01:20:21.510 --> 01:20:21.520 align:start position:0%
system called native linux and therefore
 

01:20:21.520 --> 01:20:22.950 align:start position:0%
system called native linux and therefore
they<01:20:21.600><c> were</c><01:20:21.760><c> doing</c><01:20:21.920><c> roughly</c><01:20:22.320><c> as</c><01:20:22.480><c> good</c><01:20:22.639><c> as</c>

01:20:22.950 --> 01:20:22.960 align:start position:0%
they were doing roughly as good as
 

01:20:22.960 --> 01:20:26.390 align:start position:0%
they were doing roughly as good as
as<01:20:23.199><c> you</c><01:20:23.280><c> could</c><01:20:23.440><c> possibly</c><01:20:23.840><c> expect</c>

01:20:26.390 --> 01:20:26.400 align:start position:0%
 
 

01:20:26.400 --> 01:20:28.790 align:start position:0%
 
now<01:20:26.560><c> of</c><01:20:26.639><c> course</c><01:20:26.800><c> that's</c><01:20:27.040><c> still</c><01:20:28.080><c> their</c><01:20:28.560><c> system</c>

01:20:28.790 --> 01:20:28.800 align:start position:0%
now of course that's still their system
 

01:20:28.800 --> 01:20:30.310 align:start position:0%
now of course that's still their system
goals<01:20:28.960><c> are</c><01:20:29.120><c> still</c><01:20:29.280><c> half</c><01:20:29.520><c> as</c><01:20:29.600><c> fast</c><01:20:29.920><c> as</c><01:20:30.000><c> native</c>

01:20:30.310 --> 01:20:30.320 align:start position:0%
goals are still half as fast as native
 

01:20:30.320 --> 01:20:33.189 align:start position:0%
goals are still half as fast as native
linux

01:20:33.189 --> 01:20:33.199 align:start position:0%
 
 

01:20:33.199 --> 01:20:35.590 align:start position:0%
 
and<01:20:33.360><c> you</c><01:20:33.520><c> know</c><01:20:33.679><c> it's</c><01:20:34.000><c> not</c><01:20:34.320><c> clear</c><01:20:34.719><c> unless</c><01:20:35.440><c> you</c>

01:20:35.590 --> 01:20:35.600 align:start position:0%
and you know it's not clear unless you
 

01:20:35.600 --> 01:20:37.189 align:start position:0%
and you know it's not clear unless you
did<01:20:35.840><c> some</c><01:20:36.000><c> measurements</c><01:20:36.480><c> whether</c>

01:20:37.189 --> 01:20:37.199 align:start position:0%
did some measurements whether
 

01:20:37.199 --> 01:20:39.110 align:start position:0%
did some measurements whether
system<01:20:37.520><c> calls</c><01:20:37.840><c> taking</c><01:20:38.159><c> twice</c><01:20:38.560><c> or</c><01:20:38.800><c> simple</c>

01:20:39.110 --> 01:20:39.120 align:start position:0%
system calls taking twice or simple
 

01:20:39.120 --> 01:20:40.629 align:start position:0%
system calls taking twice or simple
system<01:20:39.440><c> calls</c><01:20:39.600><c> taking</c><01:20:39.840><c> twice</c><01:20:40.159><c> as</c><01:20:40.239><c> long</c><01:20:40.400><c> as</c><01:20:40.560><c> a</c>

01:20:40.629 --> 01:20:40.639 align:start position:0%
system calls taking twice as long as a
 

01:20:40.639 --> 01:20:41.830 align:start position:0%
system calls taking twice as long as a
disaster<01:20:41.360><c> or</c>

01:20:41.830 --> 01:20:41.840 align:start position:0%
disaster or
 

01:20:41.840 --> 01:20:44.550 align:start position:0%
disaster or
not<01:20:42.000><c> a</c><01:20:42.159><c> problem</c><01:20:43.199><c> and</c><01:20:43.360><c> in</c><01:20:43.520><c> order</c><01:20:43.760><c> to</c><01:20:43.920><c> show</c><01:20:44.159><c> that</c>

01:20:44.550 --> 01:20:44.560 align:start position:0%
not a problem and in order to show that
 

01:20:44.560 --> 01:20:46.070 align:start position:0%
not a problem and in order to show that
and<01:20:44.800><c> you</c><01:20:44.880><c> know</c><01:20:45.040><c> it</c><01:20:45.120><c> might</c><01:20:45.280><c> be</c><01:20:45.440><c> a</c><01:20:45.520><c> disaster</c>

01:20:46.070 --> 01:20:46.080 align:start position:0%
and you know it might be a disaster
 

01:20:46.080 --> 01:20:47.750 align:start position:0%
and you know it might be a disaster
if<01:20:46.320><c> you</c><01:20:46.480><c> do</c><01:20:46.560><c> a</c><01:20:46.639><c> lot</c><01:20:46.800><c> of</c><01:20:46.880><c> system</c><01:20:47.120><c> calls</c><01:20:47.360><c> or</c><01:20:47.600><c> might</c>

01:20:47.750 --> 01:20:47.760 align:start position:0%
if you do a lot of system calls or might
 

01:20:47.760 --> 01:20:49.830 align:start position:0%
if you do a lot of system calls or might
be<01:20:48.000><c> not</c><01:20:48.159><c> a</c><01:20:48.320><c> problem</c><01:20:48.800><c> if</c>

01:20:49.830 --> 01:20:49.840 align:start position:0%
be not a problem if
 

01:20:49.840 --> 01:20:51.910 align:start position:0%
be not a problem if
uh<01:20:50.000><c> you</c><01:20:50.159><c> do</c><01:20:50.400><c> relatively</c><01:20:50.880><c> few</c><01:20:51.120><c> system</c><01:20:51.440><c> calls</c><01:20:51.679><c> or</c>

01:20:51.910 --> 01:20:51.920 align:start position:0%
uh you do relatively few system calls or
 

01:20:51.920 --> 01:20:53.270 align:start position:0%
uh you do relatively few system calls or
there's<01:20:52.080><c> a</c><01:20:52.159><c> lot</c><01:20:52.320><c> of</c><01:20:52.480><c> work</c>

01:20:53.270 --> 01:20:53.280 align:start position:0%
there's a lot of work
 

01:20:53.280 --> 01:20:55.350 align:start position:0%
there's a lot of work
per<01:20:53.600><c> system</c><01:20:53.920><c> call</c><01:20:54.239><c> because</c><01:20:55.040><c> maybe</c><01:20:55.280><c> your</c>

01:20:55.350 --> 01:20:55.360 align:start position:0%
per system call because maybe your
 

01:20:55.360 --> 01:20:56.709 align:start position:0%
per system call because maybe your
system<01:20:55.600><c> calls</c><01:20:55.840><c> it</c><01:20:55.920><c> more</c><01:20:56.080><c> complicated</c><01:20:56.560><c> than</c>

01:20:56.709 --> 01:20:56.719 align:start position:0%
system calls it more complicated than
 

01:20:56.719 --> 01:20:59.030 align:start position:0%
system calls it more complicated than
get<01:20:56.880><c> pid</c>

01:20:59.030 --> 01:20:59.040 align:start position:0%
get pid
 

01:20:59.040 --> 01:21:01.430 align:start position:0%
get pid
and<01:20:59.120><c> their</c><01:20:59.360><c> answer</c><01:20:59.600><c> to</c><01:20:59.920><c> that</c><01:21:00.159><c> in</c><01:21:00.320><c> the</c><01:21:00.400><c> paper</c><01:21:01.040><c> is</c>

01:21:01.430 --> 01:21:01.440 align:start position:0%
and their answer to that in the paper is
 

01:21:01.440 --> 01:21:02.629 align:start position:0%
and their answer to that in the paper is
the<01:21:01.679><c> figure</c><01:21:02.080><c> eight</c>

01:21:02.629 --> 01:21:02.639 align:start position:0%
the figure eight
 

01:21:02.639 --> 01:21:05.510 align:start position:0%
the figure eight
benchmark<01:21:04.000><c> using</c><01:21:04.239><c> this</c><01:21:04.639><c> benchmark</c><01:21:05.120><c> called</c>

01:21:05.510 --> 01:21:05.520 align:start position:0%
benchmark using this benchmark called
 

01:21:05.520 --> 01:21:06.709 align:start position:0%
benchmark using this benchmark called
aim

01:21:06.709 --> 01:21:06.719 align:start position:0%
aim
 

01:21:06.719 --> 01:21:08.950 align:start position:0%
aim
which<01:21:06.960><c> is</c><01:21:07.040><c> just</c><01:21:07.280><c> a</c><01:21:07.440><c> more</c><01:21:08.320><c> it's</c><01:21:08.480><c> a</c><01:21:08.560><c> benchmark</c>

01:21:08.950 --> 01:21:08.960 align:start position:0%
which is just a more it's a benchmark
 

01:21:08.960 --> 01:21:10.550 align:start position:0%
which is just a more it's a benchmark
that<01:21:09.040><c> does</c><01:21:09.280><c> all</c><01:21:09.440><c> kinds</c><01:21:09.760><c> of</c><01:21:10.000><c> different</c><01:21:10.320><c> system</c>

01:21:10.550 --> 01:21:10.560 align:start position:0%
that does all kinds of different system
 

01:21:10.560 --> 01:21:11.990 align:start position:0%
that does all kinds of different system
calls<01:21:10.800><c> it</c><01:21:10.960><c> reads</c><01:21:11.120><c> and</c><01:21:11.199><c> writes</c><01:21:11.520><c> files</c><01:21:11.840><c> and</c>

01:21:11.990 --> 01:21:12.000 align:start position:0%
calls it reads and writes files and
 

01:21:12.000 --> 01:21:13.510 align:start position:0%
calls it reads and writes files and
creates<01:21:12.320><c> processes</c><01:21:12.800><c> or</c><01:21:12.960><c> it</c><01:21:13.040><c> does</c><01:21:13.199><c> all</c><01:21:13.360><c> the</c>

01:21:13.510 --> 01:21:13.520 align:start position:0%
creates processes or it does all the
 

01:21:13.520 --> 01:21:15.350 align:start position:0%
creates processes or it does all the
things<01:21:13.840><c> with</c><01:21:14.000><c> the</c><01:21:14.080><c> kernel</c><01:21:14.480><c> that</c>

01:21:15.350 --> 01:21:15.360 align:start position:0%
things with the kernel that
 

01:21:15.360 --> 01:21:17.830 align:start position:0%
things with the kernel that
processes<01:21:15.920><c> do</c><01:21:16.800><c> and</c><01:21:16.880><c> they</c><01:21:17.040><c> basically</c><01:21:17.520><c> showed</c>

01:21:17.830 --> 01:21:17.840 align:start position:0%
processes do and they basically showed
 

01:21:17.840 --> 01:21:18.629 align:start position:0%
processes do and they basically showed
in<01:21:17.920><c> figure</c><01:21:18.239><c> eight</c>

01:21:18.629 --> 01:21:18.639 align:start position:0%
in figure eight
 

01:21:18.639 --> 01:21:21.669 align:start position:0%
in figure eight
that<01:21:19.520><c> their</c><01:21:20.000><c> setup</c><01:21:20.719><c> running</c><01:21:21.120><c> a</c><01:21:21.280><c> much</c><01:21:21.440><c> more</c>

01:21:21.669 --> 01:21:21.679 align:start position:0%
that their setup running a much more
 

01:21:21.679 --> 01:21:23.750 align:start position:0%
that their setup running a much more
full<01:21:21.920><c> application</c><01:21:22.560><c> that</c><01:21:22.719><c> does</c>

01:21:23.750 --> 01:21:23.760 align:start position:0%
full application that does
 

01:21:23.760 --> 01:21:26.470 align:start position:0%
full application that does
you<01:21:23.840><c> know</c><01:21:24.320><c> much</c><01:21:24.560><c> more</c><01:21:24.719><c> than</c><01:21:24.880><c> just</c><01:21:25.040><c> get</c><01:21:25.199><c> pid</c>

01:21:26.470 --> 01:21:26.480 align:start position:0%
you know much more than just get pid
 

01:21:26.480 --> 01:21:26.870 align:start position:0%
you know much more than just get pid
runs

01:21:26.870 --> 01:21:26.880 align:start position:0%
runs
 

01:21:26.880 --> 01:21:28.950 align:start position:0%
runs
only<01:21:27.199><c> a</c><01:21:27.280><c> few</c><01:21:27.440><c> percent</c><01:21:27.920><c> slower</c><01:21:28.400><c> than</c><01:21:28.639><c> native</c>

01:21:28.950 --> 01:21:28.960 align:start position:0%
only a few percent slower than native
 

01:21:28.960 --> 01:21:29.910 align:start position:0%
only a few percent slower than native
linux

01:21:29.910 --> 01:21:29.920 align:start position:0%
linux
 

01:21:29.920 --> 01:21:31.750 align:start position:0%
linux
um<01:21:30.239><c> and</c><01:21:30.400><c> that</c><01:21:30.560><c> therefore</c><01:21:31.199><c> hopefully</c><01:21:31.600><c> you</c>

01:21:31.750 --> 01:21:31.760 align:start position:0%
um and that therefore hopefully you
 

01:21:31.760 --> 01:21:33.270 align:start position:0%
um and that therefore hopefully you
could<01:21:31.920><c> expect</c><01:21:32.239><c> that</c><01:21:32.400><c> whatever</c><01:21:32.800><c> it</c><01:21:32.880><c> is</c><01:21:33.120><c> you</c>

01:21:33.270 --> 01:21:33.280 align:start position:0%
could expect that whatever it is you
 

01:21:33.280 --> 01:21:34.790 align:start position:0%
could expect that whatever it is you
wanted<01:21:33.520><c> to</c><01:21:33.600><c> run</c><01:21:33.840><c> on</c><01:21:33.920><c> a</c><01:21:34.000><c> computer</c>

01:21:34.790 --> 01:21:34.800 align:start position:0%
wanted to run on a computer
 

01:21:34.800 --> 01:21:37.669 align:start position:0%
wanted to run on a computer
would<01:21:35.040><c> run</c><01:21:35.280><c> almost</c><01:21:35.600><c> as</c><01:21:35.760><c> fast</c><01:21:36.239><c> under</c><01:21:36.960><c> l4</c><01:21:37.440><c> plus</c>

01:21:37.669 --> 01:21:37.679 align:start position:0%
would run almost as fast under l4 plus
 

01:21:37.679 --> 01:21:39.430 align:start position:0%
would run almost as fast under l4 plus
linux<01:21:38.159><c> as</c><01:21:38.320><c> it</c><01:21:38.400><c> does</c><01:21:38.719><c> under</c>

01:21:39.430 --> 01:21:39.440 align:start position:0%
linux as it does under
 

01:21:39.440 --> 01:21:41.510 align:start position:0%
linux as it does under
a<01:21:39.520><c> straight</c><01:21:39.840><c> operating</c><01:21:40.239><c> system</c><01:21:40.960><c> under</c><01:21:41.199><c> native</c>

01:21:41.510 --> 01:21:41.520 align:start position:0%
a straight operating system under native
 

01:21:41.520 --> 01:21:42.470 align:start position:0%
a straight operating system under native
operating<01:21:41.920><c> system</c>

01:21:42.470 --> 01:21:42.480 align:start position:0%
operating system
 

01:21:42.480 --> 01:21:44.790 align:start position:0%
operating system
now<01:21:42.800><c> therefore</c><01:21:43.600><c> you</c><01:21:43.760><c> know</c><01:21:43.920><c> they</c><01:21:44.080><c> were</c>

01:21:44.790 --> 01:21:44.800 align:start position:0%
now therefore you know they were
 

01:21:44.800 --> 01:21:46.790 align:start position:0%
now therefore you know they were
basically<01:21:45.440><c> to</c><01:21:45.600><c> a</c><01:21:45.679><c> first</c><01:21:45.920><c> approximation</c><01:21:46.639><c> as</c>

01:21:46.790 --> 01:21:46.800 align:start position:0%
basically to a first approximation as
 

01:21:46.800 --> 01:21:49.030 align:start position:0%
basically to a first approximation as
fast

01:21:49.030 --> 01:21:49.040 align:start position:0%
fast
 

01:21:49.040 --> 01:21:52.070 align:start position:0%
fast
as<01:21:49.280><c> just</c><01:21:49.440><c> running</c><01:21:49.679><c> straight</c><01:21:50.000><c> linux</c><01:21:50.639><c> and</c>

01:21:52.070 --> 01:21:52.080 align:start position:0%
as just running straight linux and
 

01:21:52.080 --> 01:21:55.590 align:start position:0%
as just running straight linux and
therefore<01:21:52.480><c> you</c><01:21:52.560><c> should</c><01:21:52.719><c> take</c><01:21:52.880><c> them</c><01:21:53.040><c> seriously</c>

01:21:55.590 --> 01:21:55.600 align:start position:0%
 
 

01:21:55.600 --> 01:21:57.669 align:start position:0%
 
okay<01:21:55.920><c> so</c><01:21:56.560><c> that</c><01:21:56.719><c> was</c><01:21:56.800><c> an</c><01:21:56.960><c> impressive</c><01:21:57.280><c> result</c><01:21:57.520><c> by</c>

01:21:57.669 --> 01:21:57.679 align:start position:0%
okay so that was an impressive result by
 

01:21:57.679 --> 01:21:58.870 align:start position:0%
okay so that was an impressive result by
the<01:21:57.760><c> way</c><01:21:58.080><c> this</c><01:21:58.320><c> is</c>

01:21:58.870 --> 01:21:58.880 align:start position:0%
the way this is
 

01:21:58.880 --> 01:22:01.750 align:start position:0%
the way this is
like<01:21:59.520><c> like</c><01:21:59.679><c> somewhat</c><01:22:00.000><c> unexpected</c><01:22:00.639><c> and</c><01:22:01.280><c> um</c>

01:22:01.750 --> 01:22:01.760 align:start position:0%
like like somewhat unexpected and um
 

01:22:01.760 --> 01:22:03.189 align:start position:0%
like like somewhat unexpected and um
cool

01:22:03.189 --> 01:22:03.199 align:start position:0%
cool
 

01:22:03.199 --> 01:22:06.870 align:start position:0%
cool
just<01:22:03.520><c> fast</c><01:22:03.840><c> forwarding</c><01:22:04.480><c> 20</c><01:22:04.800><c> years</c><01:22:05.679><c> um</c>

01:22:06.870 --> 01:22:06.880 align:start position:0%
just fast forwarding 20 years um
 

01:22:06.880 --> 01:22:08.229 align:start position:0%
just fast forwarding 20 years um
where<01:22:07.120><c> this</c><01:22:07.360><c> ended</c><01:22:07.600><c> up</c><01:22:07.760><c> as</c><01:22:07.920><c> i</c><01:22:08.000><c> mentioned</c>

01:22:08.229 --> 01:22:08.239 align:start position:0%
where this ended up as i mentioned
 

01:22:08.239 --> 01:22:10.870 align:start position:0%
where this ended up as i mentioned
before<01:22:08.719><c> people</c><01:22:08.960><c> actually</c><01:22:09.199><c> use</c><01:22:09.520><c> l4</c>

01:22:10.870 --> 01:22:10.880 align:start position:0%
before people actually use l4
 

01:22:10.880 --> 01:22:12.390 align:start position:0%
before people actually use l4
in<01:22:11.040><c> a</c><01:22:11.120><c> bunch</c><01:22:11.360><c> of</c><01:22:11.520><c> embedded</c><01:22:11.840><c> situations</c>

01:22:12.390 --> 01:22:12.400 align:start position:0%
in a bunch of embedded situations
 

01:22:12.400 --> 01:22:14.149 align:start position:0%
in a bunch of embedded situations
particularly<01:22:12.960><c> it's</c><01:22:13.120><c> used</c><01:22:13.440><c> a</c><01:22:13.520><c> lot</c>

01:22:14.149 --> 01:22:14.159 align:start position:0%
particularly it's used a lot
 

01:22:14.159 --> 01:22:17.030 align:start position:0%
particularly it's used a lot
there's<01:22:14.320><c> many</c><01:22:14.639><c> instances</c><01:22:15.120><c> of</c><01:22:15.280><c> l4</c><01:22:15.679><c> running</c><01:22:16.080><c> in</c>

01:22:17.030 --> 01:22:17.040 align:start position:0%
there's many instances of l4 running in
 

01:22:17.040 --> 01:22:18.550 align:start position:0%
there's many instances of l4 running in
in<01:22:17.199><c> smartphones</c>

01:22:18.550 --> 01:22:18.560 align:start position:0%
in smartphones
 

01:22:18.560 --> 01:22:21.990 align:start position:0%
in smartphones
um<01:22:19.840><c> hidden</c><01:22:20.080><c> from</c><01:22:20.239><c> view</c><01:22:20.480><c> but</c><01:22:20.639><c> nevertheless</c>

01:22:21.990 --> 01:22:22.000 align:start position:0%
um hidden from view but nevertheless
 

01:22:22.000 --> 01:22:23.590 align:start position:0%
um hidden from view but nevertheless
and<01:22:22.239><c> all</c><01:22:22.400><c> running</c><01:22:22.719><c> various</c><01:22:23.040><c> kinds</c><01:22:23.199><c> of</c><01:22:23.280><c> custom</c>

01:22:23.590 --> 01:22:23.600 align:start position:0%
and all running various kinds of custom
 

01:22:23.600 --> 01:22:25.350 align:start position:0%
and all running various kinds of custom
software<01:22:24.080><c> not</c><01:22:24.400><c> not</c><01:22:24.639><c> running</c>

01:22:25.350 --> 01:22:25.360 align:start position:0%
software not not running
 

01:22:25.360 --> 01:22:26.470 align:start position:0%
software not not running
you<01:22:25.440><c> know</c><01:22:25.600><c> they</c><01:22:25.679><c> don't</c><01:22:25.840><c> have</c><01:22:25.920><c> to</c><01:22:26.239><c> have</c>

01:22:26.470 --> 01:22:26.480 align:start position:0%
you know they don't have to have
 

01:22:26.480 --> 01:22:29.189 align:start position:0%
you know they don't have to have
compatibility<01:22:27.199><c> with</c><01:22:28.000><c> unix</c>

01:22:29.189 --> 01:22:29.199 align:start position:0%
compatibility with unix
 

01:22:29.199 --> 01:22:32.070 align:start position:0%
compatibility with unix
in<01:22:29.360><c> these</c><01:22:29.520><c> situations</c><01:22:30.880><c> microkernels</c><01:22:31.679><c> in</c>

01:22:32.070 --> 01:22:32.080 align:start position:0%
in these situations microkernels in
 

01:22:32.080 --> 01:22:32.470 align:start position:0%
in these situations microkernels in
other

01:22:32.470 --> 01:22:32.480 align:start position:0%
other
 

01:22:32.480 --> 01:22:33.750 align:start position:0%
other
more<01:22:32.719><c> general</c><01:22:33.040><c> situations</c><01:22:33.600><c> like</c>

01:22:33.750 --> 01:22:33.760 align:start position:0%
more general situations like
 

01:22:33.760 --> 01:22:36.070 align:start position:0%
more general situations like
workstations<01:22:34.400><c> or</c><01:22:34.560><c> servers</c><01:22:35.040><c> never</c>

01:22:36.070 --> 01:22:36.080 align:start position:0%
workstations or servers never
 

01:22:36.080 --> 01:22:38.310 align:start position:0%
workstations or servers never
really<01:22:36.480><c> caught</c><01:22:36.880><c> on</c><01:22:37.280><c> and</c><01:22:37.760><c> it's</c><01:22:37.920><c> not</c><01:22:38.080><c> because</c>

01:22:38.310 --> 01:22:38.320 align:start position:0%
really caught on and it's not because
 

01:22:38.320 --> 01:22:39.910 align:start position:0%
really caught on and it's not because
there's<01:22:38.639><c> necessarily</c><01:22:39.280><c> anything</c><01:22:39.600><c> wrong</c><01:22:39.760><c> with</c>

01:22:39.910 --> 01:22:39.920 align:start position:0%
there's necessarily anything wrong with
 

01:22:39.920 --> 01:22:40.950 align:start position:0%
there's necessarily anything wrong with
that<01:22:40.080><c> design</c>

01:22:40.950 --> 01:22:40.960 align:start position:0%
that design
 

01:22:40.960 --> 01:22:42.790 align:start position:0%
that design
it's<01:22:41.199><c> just</c><01:22:41.520><c> they</c><01:22:41.679><c> would</c><01:22:41.840><c> have</c><01:22:42.239><c> in</c><01:22:42.320><c> order</c><01:22:42.560><c> to</c>

01:22:42.790 --> 01:22:42.800 align:start position:0%
it's just they would have in order to
 

01:22:42.800 --> 01:22:45.110 align:start position:0%
it's just they would have in order to
displace<01:22:43.360><c> some</c><01:22:43.600><c> existing</c>

01:22:45.110 --> 01:22:45.120 align:start position:0%
displace some existing
 

01:22:45.120 --> 01:22:47.830 align:start position:0%
displace some existing
software<01:22:46.159><c> your</c><01:22:46.480><c> new</c><01:22:46.800><c> thing</c><01:22:47.120><c> has</c><01:22:47.360><c> to</c><01:22:47.440><c> be</c><01:22:47.679><c> you</c>

01:22:47.830 --> 01:22:47.840 align:start position:0%
software your new thing has to be you
 

01:22:47.840 --> 01:22:48.470 align:start position:0%
software your new thing has to be you
know<01:22:48.000><c> like</c>

01:22:48.470 --> 01:22:48.480 align:start position:0%
know like
 

01:22:48.480 --> 01:22:50.310 align:start position:0%
know like
better<01:22:48.880><c> so</c><01:22:49.120><c> people</c><01:22:49.360><c> will</c><01:22:49.440><c> be</c><01:22:49.600><c> motivated</c><01:22:50.159><c> to</c>

01:22:50.310 --> 01:22:50.320 align:start position:0%
better so people will be motivated to
 

01:22:50.320 --> 01:22:52.550 align:start position:0%
better so people will be motivated to
switch<01:22:51.440><c> and</c><01:22:51.600><c> these</c><01:22:51.840><c> micro</c><01:22:52.080><c> kernels</c><01:22:52.400><c> were</c>

01:22:52.550 --> 01:22:52.560 align:start position:0%
switch and these micro kernels were
 

01:22:52.560 --> 01:22:53.910 align:start position:0%
switch and these micro kernels were
perfectly<01:22:53.040><c> good</c>

01:22:53.910 --> 01:22:53.920 align:start position:0%
perfectly good
 

01:22:53.920 --> 01:22:56.950 align:start position:0%
perfectly good
not<01:22:54.080><c> certainly</c><01:22:54.400><c> elegant</c><01:22:55.840><c> um</c><01:22:56.159><c> but</c><01:22:56.400><c> it</c><01:22:56.480><c> was</c><01:22:56.639><c> hard</c>

01:22:56.950 --> 01:22:56.960 align:start position:0%
not certainly elegant um but it was hard
 

01:22:56.960 --> 01:22:58.550 align:start position:0%
not certainly elegant um but it was hard
to<01:22:57.040><c> put</c><01:22:57.360><c> for</c><01:22:57.520><c> people</c><01:22:57.760><c> to</c><01:22:57.840><c> put</c><01:22:58.000><c> their</c><01:22:58.159><c> finger</c><01:22:58.480><c> on</c>

01:22:58.550 --> 01:22:58.560 align:start position:0%
to put for people to put their finger on
 

01:22:58.560 --> 01:22:59.350 align:start position:0%
to put for people to put their finger on
why<01:22:58.800><c> it</c><01:22:58.880><c> was</c>

01:22:59.350 --> 01:22:59.360 align:start position:0%
why it was
 

01:22:59.360 --> 01:23:00.870 align:start position:0%
why it was
so<01:22:59.520><c> much</c><01:22:59.760><c> better</c><01:23:00.080><c> that</c><01:23:00.239><c> they</c><01:23:00.400><c> should</c><01:23:00.560><c> like</c><01:23:00.719><c> go</c>

01:23:00.870 --> 01:23:00.880 align:start position:0%
so much better that they should like go
 

01:23:00.880 --> 01:23:03.110 align:start position:0%
so much better that they should like go
to<01:23:01.040><c> the</c><01:23:01.199><c> trouble</c><01:23:02.000><c> of</c><01:23:02.159><c> switching</c><01:23:02.560><c> from</c><01:23:02.719><c> linux</c>

01:23:03.110 --> 01:23:03.120 align:start position:0%
to the trouble of switching from linux
 

01:23:03.120 --> 01:23:05.510 align:start position:0%
to the trouble of switching from linux
or<01:23:03.280><c> whatever</c><01:23:03.520><c> they</c><01:23:03.679><c> were</c><01:23:03.840><c> running</c>

01:23:05.510 --> 01:23:05.520 align:start position:0%
or whatever they were running
 

01:23:05.520 --> 01:23:08.149 align:start position:0%
or whatever they were running
this<01:23:05.840><c> and</c><01:23:05.920><c> so</c><01:23:06.960><c> it</c><01:23:07.199><c> never</c><01:23:07.520><c> really</c><01:23:07.760><c> caught</c><01:23:08.000><c> on</c>

01:23:08.149 --> 01:23:08.159 align:start position:0%
this and so it never really caught on
 

01:23:08.159 --> 01:23:09.750 align:start position:0%
this and so it never really caught on
not<01:23:08.320><c> necessarily</c><01:23:08.880><c> for</c><01:23:09.040><c> good</c><01:23:09.199><c> reasons</c>

01:23:09.750 --> 01:23:09.760 align:start position:0%
not necessarily for good reasons
 

01:23:09.760 --> 01:23:11.910 align:start position:0%
not necessarily for good reasons
but<01:23:10.960><c> because</c><01:23:11.199><c> they</c><01:23:11.280><c> weren't</c><01:23:11.679><c> like</c>

01:23:11.910 --> 01:23:11.920 align:start position:0%
but because they weren't like
 

01:23:11.920 --> 01:23:13.590 align:start position:0%
but because they weren't like
dramatically<01:23:12.560><c> better</c>

01:23:13.590 --> 01:23:13.600 align:start position:0%
dramatically better
 

01:23:13.600 --> 01:23:15.750 align:start position:0%
dramatically better
on<01:23:13.760><c> the</c><01:23:13.840><c> other</c><01:23:14.000><c> hand</c><01:23:14.639><c> many</c><01:23:14.960><c> ideas</c><01:23:15.360><c> from</c><01:23:15.520><c> this</c>

01:23:15.750 --> 01:23:15.760 align:start position:0%
on the other hand many ideas from this
 

01:23:15.760 --> 01:23:16.870 align:start position:0%
on the other hand many ideas from this
architecture

01:23:16.870 --> 01:23:16.880 align:start position:0%
architecture
 

01:23:16.880 --> 01:23:20.390 align:start position:0%
architecture
had<01:23:17.040><c> a</c><01:23:17.199><c> lasting</c><01:23:17.679><c> impact</c><01:23:18.560><c> um</c><01:23:19.760><c> the</c>

01:23:20.390 --> 01:23:20.400 align:start position:0%
had a lasting impact um the
 

01:23:20.400 --> 01:23:23.510 align:start position:0%
had a lasting impact um the
the<01:23:21.040><c> people</c><01:23:21.280><c> had</c><01:23:21.440><c> to</c><01:23:21.520><c> work</c><01:23:21.840><c> out</c><01:23:23.040><c> much</c><01:23:23.280><c> more</c>

01:23:23.510 --> 01:23:23.520 align:start position:0%
the people had to work out much more
 

01:23:23.520 --> 01:23:25.590 align:start position:0%
the people had to work out much more
interesting<01:23:24.000><c> and</c><01:23:24.080><c> flexible</c><01:23:24.560><c> ways</c><01:23:24.880><c> of</c><01:23:24.960><c> using</c>

01:23:25.590 --> 01:23:25.600 align:start position:0%
interesting and flexible ways of using
 

01:23:25.600 --> 01:23:28.229 align:start position:0%
interesting and flexible ways of using
virtual<01:23:26.000><c> memory</c><01:23:26.480><c> in</c><01:23:26.560><c> order</c><01:23:26.880><c> to</c><01:23:27.760><c> support</c>

01:23:28.229 --> 01:23:28.239 align:start position:0%
virtual memory in order to support
 

01:23:28.239 --> 01:23:30.709 align:start position:0%
virtual memory in order to support
operating<01:23:28.639><c> systems</c><01:23:29.040><c> on</c><01:23:29.120><c> their</c><01:23:29.360><c> microkernels</c>

01:23:30.709 --> 01:23:30.719 align:start position:0%
operating systems on their microkernels
 

01:23:30.719 --> 01:23:33.189 align:start position:0%
operating systems on their microkernels
and<01:23:30.880><c> those</c><01:23:31.280><c> more</c><01:23:31.520><c> sophisticated</c><01:23:32.239><c> interfaces</c>

01:23:33.189 --> 01:23:33.199 align:start position:0%
and those more sophisticated interfaces
 

01:23:33.199 --> 01:23:36.070 align:start position:0%
and those more sophisticated interfaces
made<01:23:33.360><c> their</c><01:23:33.520><c> way</c><01:23:33.840><c> through</c><01:23:34.080><c> things</c><01:23:34.239><c> like</c><01:23:34.480><c> mmap</c>

01:23:36.070 --> 01:23:36.080 align:start position:0%
made their way through things like mmap
 

01:23:36.080 --> 01:23:37.910 align:start position:0%
made their way through things like mmap
into<01:23:36.320><c> mainstream</c><01:23:36.880><c> operating</c><01:23:37.280><c> systems</c><01:23:37.679><c> like</c>

01:23:37.910 --> 01:23:37.920 align:start position:0%
into mainstream operating systems like
 

01:23:37.920 --> 01:23:39.830 align:start position:0%
into mainstream operating systems like
linux

01:23:39.830 --> 01:23:39.840 align:start position:0%
linux
 

01:23:39.840 --> 01:23:41.750 align:start position:0%
linux
this<01:23:40.080><c> idea</c><01:23:40.320><c> of</c><01:23:40.480><c> running</c><01:23:40.880><c> an</c><01:23:41.120><c> operating</c><01:23:41.440><c> system</c>

01:23:41.750 --> 01:23:41.760 align:start position:0%
this idea of running an operating system
 

01:23:41.760 --> 01:23:43.510 align:start position:0%
this idea of running an operating system
kind<01:23:41.920><c> of</c><01:23:42.080><c> on</c><01:23:42.320><c> top</c>

01:23:43.510 --> 01:23:43.520 align:start position:0%
kind of on top
 

01:23:43.520 --> 01:23:46.709 align:start position:0%
kind of on top
as<01:23:43.679><c> a</c><01:23:44.000><c> as</c><01:23:44.159><c> a</c><01:23:45.199><c> server</c><01:23:45.760><c> on</c><01:23:45.920><c> top</c><01:23:46.239><c> of</c><01:23:46.400><c> a</c>

01:23:46.709 --> 01:23:46.719 align:start position:0%
as a as a server on top of a
 

01:23:46.719 --> 01:23:48.550 align:start position:0%
as a as a server on top of a
lower<01:23:46.960><c> level</c><01:23:47.280><c> operating</c><01:23:47.600><c> system</c><01:23:48.400><c> is</c>

01:23:48.550 --> 01:23:48.560 align:start position:0%
lower level operating system is
 

01:23:48.560 --> 01:23:50.950 align:start position:0%
lower level operating system is
extremely<01:23:49.199><c> popular</c><01:23:49.600><c> today</c><01:23:50.000><c> in</c><01:23:50.080><c> the</c><01:23:50.159><c> form</c><01:23:50.480><c> of</c>

01:23:50.950 --> 01:23:50.960 align:start position:0%
extremely popular today in the form of
 

01:23:50.960 --> 01:23:53.110 align:start position:0%
extremely popular today in the form of
virtual<01:23:51.360><c> machine</c><01:23:51.840><c> monitors</c><01:23:52.400><c> which</c><01:23:52.639><c> use</c><01:23:52.880><c> all</c>

01:23:53.110 --> 01:23:53.120 align:start position:0%
virtual machine monitors which use all
 

01:23:53.120 --> 01:23:54.310 align:start position:0%
virtual machine monitors which use all
over<01:23:53.280><c> the</c><01:23:53.440><c> place</c><01:23:53.840><c> in</c>

01:23:54.310 --> 01:23:54.320 align:start position:0%
over the place in
 

01:23:54.320 --> 01:23:57.510 align:start position:0%
over the place in
sort<01:23:54.480><c> of</c><01:23:54.560><c> cloud</c><01:23:54.960><c> hosting</c><01:23:55.360><c> services</c>

01:23:57.510 --> 01:23:57.520 align:start position:0%
sort of cloud hosting services
 

01:23:57.520 --> 01:24:00.830 align:start position:0%
sort of cloud hosting services
the<01:23:57.679><c> desire</c><01:23:58.159><c> for</c><01:23:58.320><c> extensibility</c><01:23:59.600><c> you</c><01:23:59.760><c> could</c>

01:24:00.830 --> 01:24:00.840 align:start position:0%
the desire for extensibility you could
 

01:24:00.840 --> 01:24:02.470 align:start position:0%
the desire for extensibility you could
modify

01:24:02.470 --> 01:24:02.480 align:start position:0%
modify
 

01:24:02.480 --> 01:24:05.030 align:start position:0%
modify
a<01:24:02.560><c> user</c><01:24:02.880><c> level</c><01:24:03.120><c> service</c><01:24:04.080><c> the</c><01:24:04.159><c> way</c><01:24:04.400><c> that</c><01:24:04.639><c> played</c>

01:24:05.030 --> 01:24:05.040 align:start position:0%
a user level service the way that played
 

01:24:05.040 --> 01:24:05.669 align:start position:0%
a user level service the way that played
out<01:24:05.280><c> in</c>

01:24:05.669 --> 01:24:05.679 align:start position:0%
out in
 

01:24:05.679 --> 01:24:07.510 align:start position:0%
out in
things<01:24:05.920><c> like</c><01:24:06.159><c> linux</c><01:24:06.560><c> was</c><01:24:06.719><c> loadable</c><01:24:07.199><c> kernel</c>

01:24:07.510 --> 01:24:07.520 align:start position:0%
things like linux was loadable kernel
 

01:24:07.520 --> 01:24:09.189 align:start position:0%
things like linux was loadable kernel
modules<01:24:08.159><c> which</c><01:24:08.400><c> allow</c><01:24:08.639><c> you</c><01:24:08.719><c> to</c>

01:24:09.189 --> 01:24:09.199 align:start position:0%
modules which allow you to
 

01:24:09.199 --> 01:24:11.430 align:start position:0%
modules which allow you to
load<01:24:09.760><c> you</c><01:24:09.840><c> know</c><01:24:10.080><c> modify</c><01:24:10.480><c> the</c><01:24:10.560><c> way</c><01:24:10.719><c> the</c><01:24:11.120><c> linux</c>

01:24:11.430 --> 01:24:11.440 align:start position:0%
load you know modify the way the linux
 

01:24:11.440 --> 01:24:13.270 align:start position:0%
load you know modify the way the linux
kernel<01:24:11.760><c> works</c><01:24:12.000><c> on</c><01:24:12.159><c> the</c><01:24:12.239><c> fly</c>

01:24:13.270 --> 01:24:13.280 align:start position:0%
kernel works on the fly
 

01:24:13.280 --> 01:24:15.830 align:start position:0%
kernel works on the fly
um<01:24:13.920><c> and</c><01:24:14.159><c> of</c><01:24:14.239><c> course</c><01:24:14.480><c> the</c><01:24:15.040><c> sort</c><01:24:15.199><c> of</c><01:24:15.360><c> client</c>

01:24:15.830 --> 01:24:15.840 align:start position:0%
um and of course the sort of client
 

01:24:15.840 --> 01:24:17.510 align:start position:0%
um and of course the sort of client
server<01:24:16.239><c> good</c><01:24:16.480><c> support</c><01:24:16.880><c> for</c><01:24:17.040><c> this</c><01:24:17.280><c> client</c>

01:24:17.510 --> 01:24:17.520 align:start position:0%
server good support for this client
 

01:24:17.520 --> 01:24:19.110 align:start position:0%
server good support for this client
server<01:24:17.840><c> architecture</c>

01:24:19.110 --> 01:24:19.120 align:start position:0%
server architecture
 

01:24:19.120 --> 01:24:20.790 align:start position:0%
server architecture
also<01:24:19.360><c> made</c><01:24:19.600><c> its</c><01:24:19.679><c> way</c><01:24:19.840><c> into</c><01:24:20.000><c> kernels</c><01:24:20.320><c> like</c><01:24:20.560><c> mac</c>

01:24:20.790 --> 01:24:20.800 align:start position:0%
also made its way into kernels like mac
 

01:24:20.800 --> 01:24:23.110 align:start position:0%
also made its way into kernels like mac
os<01:24:21.360><c> which</c><01:24:21.679><c> has</c><01:24:21.840><c> good</c><01:24:22.000><c> ipc</c><01:24:22.639><c> and</c>

01:24:23.110 --> 01:24:23.120 align:start position:0%
os which has good ipc and
 

01:24:23.120 --> 01:24:26.149 align:start position:0%
os which has good ipc and
good<01:24:23.360><c> client</c><01:24:23.600><c> server</c><01:24:25.520><c> and</c><01:24:25.679><c> that's</c><01:24:25.840><c> all</c><01:24:26.000><c> i</c><01:24:26.080><c> have</c>

01:24:26.149 --> 01:24:26.159 align:start position:0%
good client server and that's all i have
 

01:24:26.159 --> 01:24:27.350 align:start position:0%
good client server and that's all i have
to<01:24:26.239><c> say</c><01:24:26.400><c> for</c><01:24:26.560><c> this</c><01:24:26.719><c> lecture</c>

01:24:27.350 --> 01:24:27.360 align:start position:0%
to say for this lecture
 

01:24:27.360 --> 01:24:30.229 align:start position:0%
to say for this lecture
um<01:24:28.080><c> and</c><01:24:28.320><c> i'm</c><01:24:28.560><c> happy</c><01:24:28.880><c> to</c><01:24:29.040><c> stick</c><01:24:29.199><c> around</c><01:24:30.000><c> for</c>

01:24:30.229 --> 01:24:30.239 align:start position:0%
um and i'm happy to stick around for
 

01:24:30.239 --> 01:24:31.270 align:start position:0%
um and i'm happy to stick around for
questions

01:24:31.270 --> 01:24:31.280 align:start position:0%
questions
 

01:24:31.280 --> 01:24:36.629 align:start position:0%
questions
thank<01:24:31.440><c> you</c>

01:24:36.629 --> 01:24:36.639 align:start position:0%
 
 

01:24:36.639 --> 01:24:40.149 align:start position:0%
 
thank<01:24:36.880><c> you</c><01:24:37.840><c> you're</c><01:24:38.000><c> welcome</c>

01:24:40.149 --> 01:24:40.159 align:start position:0%
thank you you're welcome
 

01:24:40.159 --> 01:24:42.470 align:start position:0%
thank you you're welcome
oh<01:24:40.480><c> i</c><01:24:40.560><c> wanted</c><01:24:40.960><c> to</c><01:24:41.120><c> ask</c><01:24:41.440><c> so</c><01:24:41.679><c> the</c><01:24:41.760><c> paper</c><01:24:42.159><c> was</c>

01:24:42.470 --> 01:24:42.480 align:start position:0%
oh i wanted to ask so the paper was
 

01:24:42.480 --> 01:24:43.430 align:start position:0%
oh i wanted to ask so the paper was
talking

01:24:43.430 --> 01:24:43.440 align:start position:0%
talking
 

01:24:43.440 --> 01:24:47.990 align:start position:0%
talking
about<01:24:44.400><c> virtual</c><01:24:46.239><c> about</c><01:24:46.560><c> page</c><01:24:46.800><c> tables</c>

01:24:47.990 --> 01:24:48.000 align:start position:0%
about virtual about page tables
 

01:24:48.000 --> 01:24:51.110 align:start position:0%
about virtual about page tables
at<01:24:48.560><c> i</c><01:24:48.639><c> think</c><01:24:48.960><c> 4.2</c><01:24:50.639><c> um</c>

01:24:51.110 --> 01:24:51.120 align:start position:0%
at i think 4.2 um
 

01:24:51.120 --> 01:24:54.950 align:start position:0%
at i think 4.2 um
and<01:24:51.520><c> it</c><01:24:51.679><c> was</c><01:24:52.000><c> seeing</c><01:24:52.320><c> how</c>

01:24:54.950 --> 01:24:54.960 align:start position:0%
 
 

01:24:54.960 --> 01:24:56.709 align:start position:0%
 
i<01:24:55.040><c> think</c><01:24:55.280><c> it</c><01:24:55.360><c> was</c><01:24:55.679><c> kind</c><01:24:55.840><c> of</c><01:24:55.920><c> what</c><01:24:56.080><c> we</c><01:24:56.400><c> what</c><01:24:56.560><c> you</c>

01:24:56.709 --> 01:24:56.719 align:start position:0%
i think it was kind of what we what you
 

01:24:56.719 --> 01:24:58.070 align:start position:0%
i think it was kind of what we what you
mentioned<01:24:57.280><c> before</c>

01:24:58.070 --> 01:24:58.080 align:start position:0%
mentioned before
 

01:24:58.080 --> 01:25:01.430 align:start position:0%
mentioned before
where<01:24:58.480><c> you</c><01:24:58.639><c> said</c><01:24:58.800><c> that</c><01:24:59.760><c> there</c><01:25:00.639><c> is</c><01:25:00.880><c> a</c><01:25:01.040><c> wrong</c><01:25:01.280><c> way</c>

01:25:01.430 --> 01:25:01.440 align:start position:0%
where you said that there is a wrong way
 

01:25:01.440 --> 01:25:02.629 align:start position:0%
where you said that there is a wrong way
to<01:25:01.600><c> do</c><01:25:01.760><c> that</c>

01:25:02.629 --> 01:25:02.639 align:start position:0%
to do that
 

01:25:02.639 --> 01:25:05.510 align:start position:0%
to do that
i<01:25:03.199><c> think</c><01:25:03.679><c> might</c><01:25:03.840><c> be</c><01:25:04.159><c> kind</c><01:25:04.320><c> of</c><01:25:04.480><c> similar</c><01:25:04.800><c> to</c><01:25:04.960><c> that</c>

01:25:05.510 --> 01:25:05.520 align:start position:0%
i think might be kind of similar to that
 

01:25:05.520 --> 01:25:05.990 align:start position:0%
i think might be kind of similar to that
but

01:25:05.990 --> 01:25:06.000 align:start position:0%
but
 

01:25:06.000 --> 01:25:09.430 align:start position:0%
but
um<01:25:07.679><c> if</c><01:25:07.840><c> you</c><01:25:08.000><c> do</c><01:25:08.320><c> this</c><01:25:08.960><c> this</c>

01:25:09.430 --> 01:25:09.440 align:start position:0%
um if you do this this
 

01:25:09.440 --> 01:25:12.709 align:start position:0%
um if you do this this
thing<01:25:09.600><c> that</c><01:25:09.760><c> you</c><01:25:09.840><c> explain</c><01:25:10.320><c> in</c><01:25:10.480><c> this</c><01:25:12.080><c> in</c><01:25:12.480><c> your</c>

01:25:12.709 --> 01:25:12.719 align:start position:0%
thing that you explain in this in your
 

01:25:12.719 --> 01:25:14.390 align:start position:0%
thing that you explain in this in your
picture<01:25:13.120><c> now</c>

01:25:14.390 --> 01:25:14.400 align:start position:0%
picture now
 

01:25:14.400 --> 01:25:17.990 align:start position:0%
picture now
uh<01:25:14.639><c> would</c><01:25:14.880><c> it</c><01:25:15.040><c> be</c><01:25:16.480><c> i</c><01:25:16.560><c> guess</c><01:25:16.880><c> how</c><01:25:17.120><c> how</c><01:25:17.280><c> would</c><01:25:17.440><c> the</c>

01:25:17.990 --> 01:25:18.000 align:start position:0%
uh would it be i guess how how would the
 

01:25:18.000 --> 01:25:22.149 align:start position:0%
uh would it be i guess how how would the
page<01:25:18.239><c> tables</c><01:25:18.960><c> work</c><01:25:19.520><c> in</c><01:25:19.600><c> this</c><01:25:19.840><c> case</c><01:25:20.800><c> well</c>

01:25:22.149 --> 01:25:22.159 align:start position:0%
page tables work in this case well
 

01:25:22.159 --> 01:25:23.910 align:start position:0%
page tables work in this case well
are<01:25:22.320><c> you</c><01:25:22.480><c> uh</c><01:25:22.880><c> you</c><01:25:22.960><c> may</c><01:25:23.120><c> be</c><01:25:23.199><c> referring</c><01:25:23.520><c> to</c>

01:25:23.910 --> 01:25:23.920 align:start position:0%
are you uh you may be referring to
 

01:25:23.920 --> 01:25:26.390 align:start position:0%
are you uh you may be referring to
section<01:25:24.239><c> 4.3</c><01:25:24.880><c> the</c><01:25:25.040><c> dual</c><01:25:25.360><c> space</c><01:25:25.760><c> mistake</c><01:25:26.239><c> oh</c>

01:25:26.390 --> 01:25:26.400 align:start position:0%
section 4.3 the dual space mistake oh
 

01:25:26.400 --> 01:25:28.629 align:start position:0%
section 4.3 the dual space mistake oh
yes<01:25:26.719><c> sorry</c><01:25:27.040><c> 4.3</c>

01:25:28.629 --> 01:25:28.639 align:start position:0%
yes sorry 4.3
 

01:25:28.639 --> 01:25:30.550 align:start position:0%
yes sorry 4.3
yeah<01:25:28.800><c> that's</c><01:25:28.960><c> a</c><01:25:29.040><c> bit</c><01:25:29.199><c> of</c><01:25:29.280><c> a</c><01:25:29.360><c> complicated</c><01:25:30.239><c> story</c>

01:25:30.550 --> 01:25:30.560 align:start position:0%
yeah that's a bit of a complicated story
 

01:25:30.560 --> 01:25:33.030 align:start position:0%
yeah that's a bit of a complicated story
but<01:25:31.120><c> the</c><01:25:31.360><c> um</c>

01:25:33.030 --> 01:25:33.040 align:start position:0%
but the um
 

01:25:33.040 --> 01:25:36.149 align:start position:0%
but the um
uh<01:25:33.360><c> let's</c><01:25:33.600><c> see</c><01:25:35.040><c> the</c><01:25:35.280><c> the</c><01:25:35.760><c> part</c><01:25:36.000><c> of</c><01:25:36.080><c> the</c>

01:25:36.149 --> 01:25:36.159 align:start position:0%
uh let's see the the part of the
 

01:25:36.159 --> 01:25:38.070 align:start position:0%
uh let's see the the part of the
background<01:25:36.639><c> is</c><01:25:36.800><c> the</c><01:25:36.880><c> way</c><01:25:37.040><c> that</c><01:25:37.280><c> linux</c><01:25:37.760><c> worked</c>

01:25:38.070 --> 01:25:38.080 align:start position:0%
background is the way that linux worked
 

01:25:38.080 --> 01:25:40.790 align:start position:0%
background is the way that linux worked
in<01:25:38.159><c> those</c><01:25:38.400><c> days</c><01:25:38.800><c> and</c><01:25:38.960><c> indeed</c><01:25:39.679><c> until</c><01:25:40.000><c> recently</c>

01:25:40.790 --> 01:25:40.800 align:start position:0%
in those days and indeed until recently
 

01:25:40.800 --> 01:25:43.910 align:start position:0%
in those days and indeed until recently
is<01:25:40.960><c> that</c><01:25:41.840><c> the</c><01:25:42.800><c> when</c><01:25:42.960><c> you're</c><01:25:43.120><c> running</c><01:25:43.440><c> at</c><01:25:43.600><c> user</c>

01:25:43.910 --> 01:25:43.920 align:start position:0%
is that the when you're running at user
 

01:25:43.920 --> 01:25:44.870 align:start position:0%
is that the when you're running at user
level

01:25:44.870 --> 01:25:44.880 align:start position:0%
level
 

01:25:44.880 --> 01:25:47.350 align:start position:0%
level
um<01:25:45.199><c> the</c><01:25:45.440><c> page</c><01:25:45.760><c> table</c><01:25:46.000><c> that's</c><01:25:46.239><c> active</c><01:25:46.560><c> has</c><01:25:46.800><c> both</c>

01:25:47.350 --> 01:25:47.360 align:start position:0%
um the page table that's active has both
 

01:25:47.360 --> 01:25:48.550 align:start position:0%
um the page table that's active has both
the<01:25:47.520><c> processes</c><01:25:48.080><c> pages</c>

01:25:48.550 --> 01:25:48.560 align:start position:0%
the processes pages
 

01:25:48.560 --> 01:25:50.550 align:start position:0%
the processes pages
user<01:25:48.800><c> level</c><01:25:48.960><c> pages</c><01:25:49.360><c> mapped</c><01:25:49.679><c> in</c><01:25:49.920><c> and</c><01:25:50.239><c> all</c><01:25:50.400><c> of</c>

01:25:50.550 --> 01:25:50.560 align:start position:0%
user level pages mapped in and all of
 

01:25:50.560 --> 01:25:52.149 align:start position:0%
user level pages mapped in and all of
the<01:25:50.639><c> kernel</c><01:25:50.960><c> mapped</c><01:25:51.280><c> into</c><01:25:51.440><c> that</c><01:25:51.600><c> one</c><01:25:51.840><c> page</c>

01:25:52.149 --> 01:25:52.159 align:start position:0%
the kernel mapped into that one page
 

01:25:52.159 --> 01:25:53.430 align:start position:0%
the kernel mapped into that one page
table

01:25:53.430 --> 01:25:53.440 align:start position:0%
table
 

01:25:53.440 --> 01:25:56.390 align:start position:0%
table
on<01:25:53.600><c> the</c><01:25:53.679><c> x86</c><01:25:54.480><c> anyway</c><01:25:54.960><c> so</c><01:25:55.520><c> when</c><01:25:55.679><c> you</c><01:25:55.760><c> made</c><01:25:56.000><c> a</c>

01:25:56.390 --> 01:25:56.400 align:start position:0%
on the x86 anyway so when you made a
 

01:25:56.400 --> 01:25:58.149 align:start position:0%
on the x86 anyway so when you made a
system<01:25:56.800><c> call</c>

01:25:58.149 --> 01:25:58.159 align:start position:0%
system call
 

01:25:58.159 --> 01:26:00.550 align:start position:0%
system call
and<01:25:58.480><c> jumped</c><01:25:58.719><c> into</c><01:25:58.960><c> the</c><01:25:59.040><c> kernel</c><01:26:00.080><c> the</c><01:26:00.239><c> kernel</c>

01:26:00.550 --> 01:26:00.560 align:start position:0%
and jumped into the kernel the kernel
 

01:26:00.560 --> 01:26:02.629 align:start position:0%
and jumped into the kernel the kernel
was<01:26:00.800><c> already</c><01:26:01.120><c> mapped</c><01:26:01.440><c> into</c><01:26:01.600><c> the</c><01:26:01.679><c> page</c><01:26:02.000><c> table</c>

01:26:02.629 --> 01:26:02.639 align:start position:0%
was already mapped into the page table
 

01:26:02.639 --> 01:26:04.390 align:start position:0%
was already mapped into the page table
and<01:26:02.800><c> therefore</c><01:26:03.199><c> no</c><01:26:03.360><c> page</c><01:26:03.679><c> table</c><01:26:03.920><c> switch</c><01:26:04.239><c> was</c>

01:26:04.390 --> 01:26:04.400 align:start position:0%
and therefore no page table switch was
 

01:26:04.400 --> 01:26:06.550 align:start position:0%
and therefore no page table switch was
required<01:26:05.280><c> so</c><01:26:05.440><c> when</c><01:26:05.600><c> you</c><01:26:05.679><c> make</c><01:26:05.840><c> a</c><01:26:05.920><c> system</c><01:26:06.239><c> call</c>

01:26:06.550 --> 01:26:06.560 align:start position:0%
required so when you make a system call
 

01:26:06.560 --> 01:26:06.950 align:start position:0%
required so when you make a system call
it's

01:26:06.950 --> 01:26:06.960 align:start position:0%
it's
 

01:26:06.960 --> 01:26:08.310 align:start position:0%
it's
that<01:26:07.120><c> much</c><01:26:07.280><c> more</c><01:26:07.440><c> expensive</c><01:26:07.840><c> and</c><01:26:07.920><c> much</c><01:26:08.080><c> more</c>

01:26:08.310 --> 01:26:08.320 align:start position:0%
that much more expensive and much more
 

01:26:08.320 --> 01:26:10.470 align:start position:0%
that much more expensive and much more
cheaper<01:26:09.360><c> because</c><01:26:09.600><c> there</c><01:26:09.679><c> was</c><01:26:09.760><c> no</c><01:26:09.920><c> page</c><01:26:10.159><c> table</c>

01:26:10.470 --> 01:26:10.480 align:start position:0%
cheaper because there was no page table
 

01:26:10.480 --> 01:26:11.910 align:start position:0%
cheaper because there was no page table
switch<01:26:10.719><c> if</c><01:26:10.880><c> you're</c><01:26:10.960><c> calling</c><01:26:11.280><c> xv6</c>

01:26:11.910 --> 01:26:11.920 align:start position:0%
switch if you're calling xv6
 

01:26:11.920 --> 01:26:13.430 align:start position:0%
switch if you're calling xv6
you<01:26:12.000><c> know</c><01:26:12.159><c> the</c><01:26:12.480><c> trampoline</c><01:26:12.960><c> code</c><01:26:13.120><c> switches</c>

01:26:13.430 --> 01:26:13.440 align:start position:0%
you know the trampoline code switches
 

01:26:13.440 --> 01:26:15.830 align:start position:0%
you know the trampoline code switches
page<01:26:13.760><c> tables</c><01:26:14.080><c> which</c>

01:26:15.830 --> 01:26:15.840 align:start position:0%
page tables which
 

01:26:15.840 --> 01:26:17.990 align:start position:0%
page tables which
is<01:26:16.000><c> an</c><01:26:16.159><c> expensive</c><01:26:16.560><c> thing</c><01:26:16.719><c> to</c><01:26:16.800><c> do</c><01:26:17.040><c> because</c><01:26:17.280><c> it</c>

01:26:17.990 --> 01:26:18.000 align:start position:0%
is an expensive thing to do because it
 

01:26:18.000 --> 01:26:19.669 align:start position:0%
is an expensive thing to do because it
flushes<01:26:18.480><c> the</c><01:26:18.800><c> tlb</c>

01:26:19.669 --> 01:26:19.679 align:start position:0%
flushes the tlb
 

01:26:19.679 --> 01:26:22.709 align:start position:0%
flushes the tlb
cache<01:26:20.159><c> of</c><01:26:20.719><c> virtual</c><01:26:21.040><c> to</c><01:26:21.120><c> physical</c><01:26:21.520><c> mappings</c>

01:26:22.709 --> 01:26:22.719 align:start position:0%
cache of virtual to physical mappings
 

01:26:22.719 --> 01:26:25.350 align:start position:0%
cache of virtual to physical mappings
anyway<01:26:23.040><c> so</c><01:26:23.199><c> for</c><01:26:23.360><c> efficiency</c><01:26:24.000><c> linux</c><01:26:24.400><c> used</c><01:26:24.560><c> to</c>

01:26:25.350 --> 01:26:25.360 align:start position:0%
anyway so for efficiency linux used to
 

01:26:25.360 --> 01:26:26.950 align:start position:0%
anyway so for efficiency linux used to
map<01:26:25.600><c> kernel</c><01:26:25.920><c> and</c><01:26:26.000><c> user</c><01:26:26.239><c> space</c><01:26:26.560><c> in</c><01:26:26.639><c> the</c><01:26:26.719><c> same</c>

01:26:26.950 --> 01:26:26.960 align:start position:0%
map kernel and user space in the same
 

01:26:26.960 --> 01:26:27.990 align:start position:0%
map kernel and user space in the same
page<01:26:27.199><c> table</c><01:26:27.520><c> and</c>

01:26:27.990 --> 01:26:28.000 align:start position:0%
page table and
 

01:26:28.000 --> 01:26:32.470 align:start position:0%
page table and
had<01:26:28.239><c> fast</c><01:26:29.280><c> system</c><01:26:29.600><c> calls</c><01:26:29.840><c> as</c><01:26:29.920><c> a</c><01:26:30.000><c> result</c>

01:26:32.470 --> 01:26:32.480 align:start position:0%
 
 

01:26:32.480 --> 01:26:36.790 align:start position:0%
 
so<01:26:32.719><c> they</c><01:26:34.840><c> um</c><01:26:35.920><c> for</c><01:26:36.080><c> reasons</c><01:26:36.400><c> that</c><01:26:36.480><c> aren't</c><01:26:36.639><c> very</c>

01:26:36.790 --> 01:26:36.800 align:start position:0%
so they um for reasons that aren't very
 

01:26:36.800 --> 01:26:38.390 align:start position:0%
so they um for reasons that aren't very
clear<01:26:37.199><c> decided</c><01:26:37.600><c> to</c>

01:26:38.390 --> 01:26:38.400 align:start position:0%
clear decided to
 

01:26:38.400 --> 01:26:40.709 align:start position:0%
clear decided to
do<01:26:38.560><c> this</c><01:26:39.600><c> same</c><01:26:40.000><c> thing</c><01:26:40.159><c> to</c><01:26:40.320><c> set</c><01:26:40.560><c> up</c><01:26:40.639><c> the</c>

01:26:40.709 --> 01:26:40.719 align:start position:0%
do this same thing to set up the
 

01:26:40.719 --> 01:26:43.990 align:start position:0%
do this same thing to set up the
mappings<01:26:41.120><c> in</c><01:26:41.199><c> the</c><01:26:41.280><c> unix</c><01:26:41.679><c> server</c>

01:26:43.990 --> 01:26:44.000 align:start position:0%
mappings in the unix server
 

01:26:44.000 --> 01:26:48.070 align:start position:0%
mappings in the unix server
well<01:26:45.520><c> what</c><01:26:45.679><c> they</c><01:26:45.840><c> wanted</c><01:26:46.159><c> was</c><01:26:46.400><c> that</c><01:26:46.639><c> when</c>

01:26:48.070 --> 01:26:48.080 align:start position:0%
well what they wanted was that when
 

01:26:48.080 --> 01:26:50.550 align:start position:0%
well what they wanted was that when
vi<01:26:48.719><c> when</c><01:26:48.880><c> a</c><01:26:49.120><c> process</c><01:26:49.600><c> sent</c><01:26:49.840><c> a</c><01:26:50.000><c> system</c><01:26:50.320><c> call</c>

01:26:50.550 --> 01:26:50.560 align:start position:0%
vi when a process sent a system call
 

01:26:50.560 --> 01:26:51.430 align:start position:0%
vi when a process sent a system call
over<01:26:50.800><c> here</c>

01:26:51.430 --> 01:26:51.440 align:start position:0%
over here
 

01:26:51.440 --> 01:26:53.110 align:start position:0%
over here
they<01:26:51.600><c> wanted</c><01:26:51.920><c> to</c><01:26:52.080><c> have</c><01:26:52.239><c> the</c><01:26:52.400><c> page</c><01:26:52.719><c> table</c><01:26:52.960><c> that</c>

01:26:53.110 --> 01:26:53.120 align:start position:0%
they wanted to have the page table that
 

01:26:53.120 --> 01:26:54.790 align:start position:0%
they wanted to have the page table that
was<01:26:53.280><c> active</c><01:26:53.679><c> while</c>

01:26:54.790 --> 01:26:54.800 align:start position:0%
was active while
 

01:26:54.800 --> 01:26:57.590 align:start position:0%
was active while
in<01:26:54.960><c> the</c><01:26:56.560><c> linux</c><01:26:56.800><c> server</c><01:26:57.120><c> while</c><01:26:57.280><c> processing</c>

01:26:57.590 --> 01:26:57.600 align:start position:0%
in the linux server while processing
 

01:26:57.600 --> 01:26:58.629 align:start position:0%
in the linux server while processing
that<01:26:57.760><c> system</c><01:26:58.080><c> call</c>

01:26:58.629 --> 01:26:58.639 align:start position:0%
that system call
 

01:26:58.639 --> 01:27:01.350 align:start position:0%
that system call
include<01:26:59.440><c> all</c><01:26:59.520><c> the</c><01:26:59.679><c> virtual</c><01:27:00.159><c> memory</c><01:27:00.560><c> mappings</c>

01:27:01.350 --> 01:27:01.360 align:start position:0%
include all the virtual memory mappings
 

01:27:01.360 --> 01:27:02.790 align:start position:0%
include all the virtual memory mappings
mappings<01:27:01.840><c> for</c><01:27:02.000><c> the</c>

01:27:02.790 --> 01:27:02.800 align:start position:0%
mappings for the
 

01:27:02.800 --> 01:27:06.870 align:start position:0%
mappings for the
process<01:27:03.199><c> that</c><01:27:03.440><c> sent</c><01:27:03.679><c> the</c><01:27:04.000><c> system</c><01:27:04.400><c> call</c>

01:27:06.870 --> 01:27:06.880 align:start position:0%
 
 

01:27:06.880 --> 01:27:09.750 align:start position:0%
 
and<01:27:06.960><c> that</c><01:27:07.120><c> at</c><01:27:07.199><c> least</c><01:27:07.360><c> would</c><01:27:07.520><c> make</c><01:27:07.760><c> it</c><01:27:09.280><c> simpler</c>

01:27:09.750 --> 01:27:09.760 align:start position:0%
and that at least would make it simpler
 

01:27:09.760 --> 01:27:10.790 align:start position:0%
and that at least would make it simpler
to<01:27:09.920><c> look</c><01:27:10.159><c> up</c>

01:27:10.790 --> 01:27:10.800 align:start position:0%
to look up
 

01:27:10.800 --> 01:27:13.270 align:start position:0%
to look up
virtual<01:27:11.120><c> addresses</c><01:27:12.400><c> passed</c><01:27:12.719><c> as</c><01:27:12.800><c> system</c><01:27:13.120><c> call</c>

01:27:13.270 --> 01:27:13.280 align:start position:0%
virtual addresses passed as system call
 

01:27:13.280 --> 01:27:14.070 align:start position:0%
virtual addresses passed as system call
arguments<01:27:13.679><c> like</c>

01:27:14.070 --> 01:27:14.080 align:start position:0%
arguments like
 

01:27:14.080 --> 01:27:17.189 align:start position:0%
arguments like
past<01:27:14.400><c> or</c><01:27:14.480><c> bead</c><01:27:15.760><c> the</c><01:27:15.920><c> reason</c><01:27:16.159><c> why</c><01:27:16.320><c> this</c>

01:27:17.189 --> 01:27:17.199 align:start position:0%
past or bead the reason why this
 

01:27:17.199 --> 01:27:18.629 align:start position:0%
past or bead the reason why this
worked<01:27:17.440><c> out</c><01:27:17.679><c> poorly</c><01:27:18.080><c> there</c><01:27:18.159><c> were</c><01:27:18.320><c> a</c><01:27:18.320><c> bunch</c><01:27:18.560><c> of</c>

01:27:18.629 --> 01:27:18.639 align:start position:0%
worked out poorly there were a bunch of
 

01:27:18.639 --> 01:27:20.390 align:start position:0%
worked out poorly there were a bunch of
reasons<01:27:19.120><c> one</c><01:27:19.360><c> is</c><01:27:19.679><c> that</c>

01:27:20.390 --> 01:27:20.400 align:start position:0%
reasons one is that
 

01:27:20.400 --> 01:27:23.990 align:start position:0%
reasons one is that
um<01:27:21.920><c> l4</c><01:27:22.800><c> which</c><01:27:23.040><c> doesn't</c><01:27:23.280><c> know</c><01:27:23.440><c> anything</c><01:27:23.760><c> about</c>

01:27:23.990 --> 01:27:24.000 align:start position:0%
um l4 which doesn't know anything about
 

01:27:24.000 --> 01:27:25.110 align:start position:0%
um l4 which doesn't know anything about
any<01:27:24.159><c> of</c><01:27:24.239><c> this</c><01:27:24.480><c> stuff</c>

01:27:25.110 --> 01:27:25.120 align:start position:0%
any of this stuff
 

01:27:25.120 --> 01:27:27.510 align:start position:0%
any of this stuff
l4<01:27:25.600><c> just</c><01:27:25.760><c> knows</c><01:27:26.000><c> there's</c><01:27:26.159><c> two</c><01:27:26.320><c> processes</c><01:27:27.120><c> and</c>

01:27:27.510 --> 01:27:27.520 align:start position:0%
l4 just knows there's two processes and
 

01:27:27.520 --> 01:27:28.550 align:start position:0%
l4 just knows there's two processes and
so<01:27:28.000><c> when</c><01:27:28.159><c> you</c>

01:27:28.550 --> 01:27:28.560 align:start position:0%
so when you
 

01:27:28.560 --> 01:27:30.470 align:start position:0%
so when you
send<01:27:28.719><c> an</c><01:27:28.880><c> ipc</c><01:27:29.280><c> from</c><01:27:29.440><c> one</c><01:27:29.600><c> press</c><01:27:29.840><c> to</c><01:27:29.920><c> another</c><01:27:30.159><c> l4</c>

01:27:30.470 --> 01:27:30.480 align:start position:0%
send an ipc from one press to another l4
 

01:27:30.480 --> 01:27:32.310 align:start position:0%
send an ipc from one press to another l4
just<01:27:30.639><c> switches</c><01:27:31.040><c> page</c><01:27:31.360><c> tables</c>

01:27:32.310 --> 01:27:32.320 align:start position:0%
just switches page tables
 

01:27:32.320 --> 01:27:33.830 align:start position:0%
just switches page tables
it<01:27:32.480><c> always</c><01:27:32.719><c> just</c><01:27:32.880><c> switches</c><01:27:33.280><c> page</c><01:27:33.440><c> tables</c><01:27:33.760><c> this</c>

01:27:33.830 --> 01:27:33.840 align:start position:0%
it always just switches page tables this
 

01:27:33.840 --> 01:27:36.790 align:start position:0%
it always just switches page tables this
guy<01:27:34.000><c> had</c><01:27:34.080><c> a</c><01:27:34.159><c> page</c><01:27:34.639><c> the</c><01:27:34.800><c> vi</c><01:27:35.120><c> at</c><01:27:35.199><c> a</c><01:27:35.280><c> page</c><01:27:35.520><c> table</c>

01:27:36.790 --> 01:27:36.800 align:start position:0%
guy had a page the vi at a page table
 

01:27:36.800 --> 01:27:38.709 align:start position:0%
guy had a page the vi at a page table
l4<01:27:37.280><c> associates</c><01:27:37.679><c> a</c><01:27:37.760><c> page</c><01:27:38.000><c> table</c><01:27:38.239><c> with</c><01:27:38.320><c> a</c><01:27:38.400><c> linux</c>

01:27:38.709 --> 01:27:38.719 align:start position:0%
l4 associates a page table with a linux
 

01:27:38.719 --> 01:27:40.149 align:start position:0%
l4 associates a page table with a linux
kernel<01:27:38.960><c> it</c><01:27:39.040><c> just</c><01:27:39.280><c> always</c><01:27:39.520><c> switches</c><01:27:39.920><c> page</c>

01:27:40.149 --> 01:27:40.159 align:start position:0%
kernel it just always switches page
 

01:27:40.159 --> 01:27:40.709 align:start position:0%
kernel it just always switches page
tables

01:27:40.709 --> 01:27:40.719 align:start position:0%
tables
 

01:27:40.719 --> 01:27:44.310 align:start position:0%
tables
so<01:27:41.360><c> you</c><01:27:41.600><c> couldn't</c><01:27:41.920><c> even</c><01:27:42.320><c> due</c><01:27:42.480><c> to</c><01:27:42.560><c> l4</c><01:27:43.520><c> due</c><01:27:43.679><c> to</c>

01:27:44.310 --> 01:27:44.320 align:start position:0%
so you couldn't even due to l4 due to
 

01:27:44.320 --> 01:27:45.430 align:start position:0%
so you couldn't even due to l4 due to
the<01:27:44.480><c> different</c><01:27:44.719><c> way</c><01:27:44.880><c> system</c><01:27:45.120><c> calls</c><01:27:45.360><c> were</c>

01:27:45.430 --> 01:27:45.440 align:start position:0%
the different way system calls were
 

01:27:45.440 --> 01:27:47.590 align:start position:0%
the different way system calls were
implemented<01:27:46.000><c> and</c><01:27:46.239><c> the</c><01:27:46.400><c> fact</c><01:27:46.560><c> that</c><01:27:47.040><c> l4</c><01:27:47.440><c> was</c>

01:27:47.590 --> 01:27:47.600 align:start position:0%
implemented and the fact that l4 was
 

01:27:47.600 --> 01:27:48.149 align:start position:0%
implemented and the fact that l4 was
involved

01:27:48.149 --> 01:27:48.159 align:start position:0%
involved
 

01:27:48.159 --> 01:27:49.990 align:start position:0%
involved
there<01:27:48.320><c> was</c><01:27:48.560><c> no</c><01:27:48.800><c> way</c><01:27:49.040><c> to</c><01:27:49.199><c> preserve</c><01:27:49.600><c> the</c><01:27:49.679><c> page</c>

01:27:49.990 --> 01:27:50.000 align:start position:0%
there was no way to preserve the page
 

01:27:50.000 --> 01:27:52.070 align:start position:0%
there was no way to preserve the page
table<01:27:50.560><c> during</c><01:27:50.880><c> a</c><01:27:50.960><c> system</c><01:27:51.280><c> call</c>

01:27:52.070 --> 01:27:52.080 align:start position:0%
table during a system call
 

01:27:52.080 --> 01:27:54.870 align:start position:0%
table during a system call
that<01:27:52.320><c> just</c><01:27:52.480><c> wasn't</c><01:27:52.800><c> possible</c><01:27:53.840><c> because</c><01:27:54.080><c> it</c><01:27:54.239><c> o4</c>

01:27:54.870 --> 01:27:54.880 align:start position:0%
that just wasn't possible because it o4
 

01:27:54.880 --> 01:27:56.790 align:start position:0%
that just wasn't possible because it o4
always<01:27:55.280><c> switched</c><01:27:55.600><c> page</c><01:27:55.920><c> tables</c>

01:27:56.790 --> 01:27:56.800 align:start position:0%
always switched page tables
 

01:27:56.800 --> 01:27:58.229 align:start position:0%
always switched page tables
when<01:27:57.040><c> it</c><01:27:57.120><c> switched</c><01:27:57.440><c> from</c><01:27:57.600><c> one</c><01:27:57.760><c> process</c><01:27:58.159><c> to</c>

01:27:58.229 --> 01:27:58.239 align:start position:0%
when it switched from one process to
 

01:27:58.239 --> 01:27:59.830 align:start position:0%
when it switched from one process to
another<01:27:58.639><c> so</c><01:27:58.800><c> they</c><01:27:58.880><c> were</c><01:27:59.040><c> never</c><01:27:59.280><c> going</c><01:27:59.440><c> to</c><01:27:59.520><c> get</c>

01:27:59.830 --> 01:27:59.840 align:start position:0%
another so they were never going to get
 

01:27:59.840 --> 01:28:01.110 align:start position:0%
another so they were never going to get
the<01:28:00.080><c> efficiency</c><01:28:00.719><c> win</c>

01:28:01.110 --> 01:28:01.120 align:start position:0%
the efficiency win
 

01:28:01.120 --> 01:28:04.390 align:start position:0%
the efficiency win
of<01:28:01.199><c> not</c><01:28:01.440><c> having</c><01:28:01.679><c> to</c><01:28:01.760><c> switch</c><01:28:02.080><c> page</c><01:28:02.320><c> tables</c><01:28:03.440><c> when</c>

01:28:04.390 --> 01:28:04.400 align:start position:0%
of not having to switch page tables when
 

01:28:04.400 --> 01:28:06.310 align:start position:0%
of not having to switch page tables when
uh<01:28:04.719><c> did</c><01:28:05.120><c> when</c><01:28:05.360><c> sort</c><01:28:05.520><c> of</c><01:28:05.600><c> crossing</c><01:28:06.080><c> from</c>

01:28:06.310 --> 01:28:06.320 align:start position:0%
uh did when sort of crossing from
 

01:28:06.320 --> 01:28:07.590 align:start position:0%
uh did when sort of crossing from
process<01:28:06.719><c> from</c><01:28:06.960><c> user</c><01:28:07.280><c> to</c>

01:28:07.590 --> 01:28:07.600 align:start position:0%
process from user to
 

01:28:07.600 --> 01:28:11.110 align:start position:0%
process from user to
kernel<01:28:10.080><c> but</c><01:28:10.400><c> i</c><01:28:10.480><c> think</c><01:28:10.639><c> they</c>

01:28:11.110 --> 01:28:11.120 align:start position:0%
kernel but i think they
 

01:28:11.120 --> 01:28:13.270 align:start position:0%
kernel but i think they
wanted<01:28:11.440><c> the</c><01:28:11.520><c> convenience</c><01:28:12.320><c> of</c><01:28:12.800><c> being</c><01:28:12.960><c> able</c><01:28:13.120><c> to</c>

01:28:13.270 --> 01:28:13.280 align:start position:0%
wanted the convenience of being able to
 

01:28:13.280 --> 01:28:15.110 align:start position:0%
wanted the convenience of being able to
directly<01:28:13.679><c> use</c>

01:28:15.110 --> 01:28:15.120 align:start position:0%
directly use
 

01:28:15.120 --> 01:28:17.910 align:start position:0%
directly use
users<01:28:15.440><c> applied</c><01:28:15.760><c> virtual</c><01:28:16.000><c> addresses</c><01:28:17.520><c> but</c><01:28:17.679><c> that</c>

01:28:17.910 --> 01:28:17.920 align:start position:0%
users applied virtual addresses but that
 

01:28:17.920 --> 01:28:19.270 align:start position:0%
users applied virtual addresses but that
meant<01:28:18.159><c> that</c>

01:28:19.270 --> 01:28:19.280 align:start position:0%
meant that
 

01:28:19.280 --> 01:28:21.830 align:start position:0%
meant that
the<01:28:19.760><c> mappings</c><01:28:20.239><c> they</c><01:28:20.560><c> needed</c><01:28:20.800><c> to</c><01:28:20.960><c> be</c><01:28:21.120><c> active</c>

01:28:21.830 --> 01:28:21.840 align:start position:0%
the mappings they needed to be active
 

01:28:21.840 --> 01:28:23.030 align:start position:0%
the mappings they needed to be active
depended<01:28:22.400><c> on</c><01:28:22.639><c> which</c>

01:28:23.030 --> 01:28:23.040 align:start position:0%
depended on which
 

01:28:23.040 --> 01:28:25.910 align:start position:0%
depended on which
process<01:28:24.080><c> they</c><01:28:24.239><c> were</c><01:28:24.400><c> executing</c><01:28:25.040><c> a</c><01:28:25.440><c> a</c><01:28:25.600><c> system</c>

01:28:25.910 --> 01:28:25.920 align:start position:0%
process they were executing a a system
 

01:28:25.920 --> 01:28:27.030 align:start position:0%
process they were executing a a system
call<01:28:26.159><c> on</c><01:28:26.239><c> behalf</c><01:28:26.639><c> of</c>

01:28:27.030 --> 01:28:27.040 align:start position:0%
call on behalf of
 

01:28:27.040 --> 01:28:29.030 align:start position:0%
call on behalf of
so<01:28:27.199><c> there</c><01:28:27.360><c> couldn't</c><01:28:27.600><c> be</c><01:28:27.760><c> any</c><01:28:28.000><c> one</c><01:28:28.320><c> page</c><01:28:28.639><c> table</c>

01:28:29.030 --> 01:28:29.040 align:start position:0%
so there couldn't be any one page table
 

01:28:29.040 --> 01:28:30.550 align:start position:0%
so there couldn't be any one page table
for<01:28:29.199><c> linux</c>

01:28:30.550 --> 01:28:30.560 align:start position:0%
for linux
 

01:28:30.560 --> 01:28:31.669 align:start position:0%
for linux
they<01:28:30.719><c> would</c><01:28:30.800><c> have</c><01:28:30.960><c> you</c><01:28:31.040><c> know</c><01:28:31.120><c> the</c><01:28:31.199><c> page</c><01:28:31.440><c> table</c>

01:28:31.669 --> 01:28:31.679 align:start position:0%
they would have you know the page table
 

01:28:31.679 --> 01:28:33.350 align:start position:0%
they would have you know the page table
linux<01:28:32.080><c> server</c><01:28:32.320><c> wanted</c><01:28:32.639><c> to</c><01:28:32.719><c> use</c><01:28:32.880><c> depend</c><01:28:33.280><c> on</c>

01:28:33.350 --> 01:28:33.360 align:start position:0%
linux server wanted to use depend on
 

01:28:33.360 --> 01:28:34.070 align:start position:0%
linux server wanted to use depend on
what<01:28:33.520><c> process</c>

01:28:34.070 --> 01:28:34.080 align:start position:0%
what process
 

01:28:34.080 --> 01:28:38.149 align:start position:0%
what process
sent<01:28:34.400><c> the</c><01:28:35.360><c> system</c><01:28:35.679><c> call</c><01:28:35.920><c> rpc</c><01:28:36.560><c> but</c><01:28:36.800><c> l4</c>

01:28:38.149 --> 01:28:38.159 align:start position:0%
sent the system call rpc but l4
 

01:28:38.159 --> 01:28:40.149 align:start position:0%
sent the system call rpc but l4
did<01:28:38.320><c> not</c><01:28:38.480><c> know</c><01:28:38.639><c> how</c><01:28:38.800><c> to</c><01:28:38.880><c> play</c><01:28:39.040><c> that</c><01:28:39.199><c> game</c><01:28:39.760><c> l4</c>

01:28:40.149 --> 01:28:40.159 align:start position:0%
did not know how to play that game l4
 

01:28:40.159 --> 01:28:41.430 align:start position:0%
did not know how to play that game l4
associated<01:28:40.719><c> a</c><01:28:40.880><c> single</c>

01:28:41.430 --> 01:28:41.440 align:start position:0%
associated a single
 

01:28:41.440 --> 01:28:43.830 align:start position:0%
associated a single
page<01:28:41.760><c> table</c><01:28:42.080><c> with</c><01:28:42.239><c> each</c><01:28:42.480><c> process</c><01:28:43.360><c> with</c><01:28:43.600><c> each</c>

01:28:43.830 --> 01:28:43.840 align:start position:0%
page table with each process with each
 

01:28:43.840 --> 01:28:44.709 align:start position:0%
page table with each process with each
task

01:28:44.709 --> 01:28:44.719 align:start position:0%
task
 

01:28:44.719 --> 01:28:47.110 align:start position:0%
task
and<01:28:44.880><c> so</c><01:28:45.520><c> in</c><01:28:45.679><c> order</c><01:28:46.320><c> and</c><01:28:46.560><c> it</c><01:28:46.639><c> would</c><01:28:46.719><c> just</c><01:28:46.880><c> switch</c>

01:28:47.110 --> 01:28:47.120 align:start position:0%
and so in order and it would just switch
 

01:28:47.120 --> 01:28:48.629 align:start position:0%
and so in order and it would just switch
to<01:28:47.199><c> that</c><01:28:47.360><c> page</c><01:28:47.600><c> table</c><01:28:47.840><c> so</c><01:28:48.000><c> tough</c><01:28:48.239><c> luck</c>

01:28:48.629 --> 01:28:48.639 align:start position:0%
to that page table so tough luck
 

01:28:48.639 --> 01:28:51.830 align:start position:0%
to that page table so tough luck
linux<01:28:49.040><c> didn't</c><01:28:49.199><c> have</c><01:28:49.360><c> any</c><01:28:49.520><c> way</c><01:28:49.760><c> to</c><01:28:51.520><c> cause</c><01:28:51.760><c> the</c>

01:28:51.830 --> 01:28:51.840 align:start position:0%
linux didn't have any way to cause the
 

01:28:51.840 --> 01:28:53.430 align:start position:0%
linux didn't have any way to cause the
page<01:28:52.080><c> table</c><01:28:52.320><c> to</c><01:28:52.480><c> differ</c><01:28:52.800><c> depending</c><01:28:53.120><c> on</c><01:28:53.199><c> who</c>

01:28:53.430 --> 01:28:53.440 align:start position:0%
page table to differ depending on who
 

01:28:53.440 --> 01:28:54.310 align:start position:0%
page table to differ depending on who
had<01:28:53.600><c> sent</c>

01:28:54.310 --> 01:28:54.320 align:start position:0%
had sent
 

01:28:54.320 --> 01:28:57.030 align:start position:0%
had sent
the<01:28:55.040><c> system</c><01:28:55.360><c> call</c><01:28:56.239><c> in</c><01:28:56.400><c> order</c><01:28:56.639><c> to</c><01:28:56.719><c> deal</c><01:28:56.880><c> with</c>

01:28:57.030 --> 01:28:57.040 align:start position:0%
the system call in order to deal with
 

01:28:57.040 --> 01:28:57.830 align:start position:0%
the system call in order to deal with
that

01:28:57.830 --> 01:28:57.840 align:start position:0%
that
 

01:28:57.840 --> 01:29:00.950 align:start position:0%
that
apparently<01:28:59.600><c> they</c><01:28:59.840><c> made</c><01:29:00.080><c> a</c><01:29:00.159><c> bunch</c><01:29:00.400><c> of</c>

01:29:00.950 --> 01:29:00.960 align:start position:0%
apparently they made a bunch of
 

01:29:00.960 --> 01:29:04.709 align:start position:0%
apparently they made a bunch of
shared<01:29:01.280><c> memory</c><01:29:01.840><c> copies</c><01:29:02.320><c> of</c><01:29:02.400><c> the</c><01:29:02.560><c> kernel</c><01:29:03.840><c> one</c>

01:29:04.709 --> 01:29:04.719 align:start position:0%
shared memory copies of the kernel one
 

01:29:04.719 --> 01:29:07.030 align:start position:0%
shared memory copies of the kernel one
for<01:29:04.960><c> each</c><01:29:05.440><c> process</c><01:29:06.239><c> and</c><01:29:06.320><c> so</c><01:29:06.560><c> each</c><01:29:06.800><c> of</c><01:29:06.880><c> these</c>

01:29:07.030 --> 01:29:07.040 align:start position:0%
for each process and so each of these
 

01:29:07.040 --> 01:29:09.350 align:start position:0%
for each process and so each of these
shared<01:29:07.360><c> memory</c><01:29:07.679><c> copies</c><01:29:08.000><c> of</c><01:29:08.080><c> the</c><01:29:08.159><c> kernel</c>

01:29:09.350 --> 01:29:09.360 align:start position:0%
shared memory copies of the kernel
 

01:29:09.360 --> 01:29:11.990 align:start position:0%
shared memory copies of the kernel
had<01:29:09.600><c> exact</c><01:29:10.000><c> had</c><01:29:10.480><c> all</c><01:29:10.719><c> of</c><01:29:10.800><c> the</c><01:29:10.960><c> kernel</c><01:29:11.600><c> memory</c>

01:29:11.990 --> 01:29:12.000 align:start position:0%
had exact had all of the kernel memory
 

01:29:12.000 --> 01:29:14.070 align:start position:0%
had exact had all of the kernel memory
mapped<01:29:12.400><c> into</c><01:29:12.639><c> it</c><01:29:12.800><c> so</c><01:29:12.960><c> they</c><01:29:13.040><c> were</c><01:29:13.199><c> all</c>

01:29:14.070 --> 01:29:14.080 align:start position:0%
mapped into it so they were all
 

01:29:14.080 --> 01:29:16.629 align:start position:0%
mapped into it so they were all
the<01:29:14.159><c> same</c><01:29:14.400><c> kernel</c><01:29:14.719><c> data</c><01:29:14.960><c> structures</c><01:29:15.760><c> but</c><01:29:16.239><c> each</c>

01:29:16.629 --> 01:29:16.639 align:start position:0%
the same kernel data structures but each
 

01:29:16.639 --> 01:29:17.430 align:start position:0%
the same kernel data structures but each
process

01:29:17.430 --> 01:29:17.440 align:start position:0%
process
 

01:29:17.440 --> 01:29:21.110 align:start position:0%
process
had<01:29:17.679><c> a</c><01:29:17.920><c> dedicated</c><01:29:19.440><c> uh</c>

01:29:21.110 --> 01:29:21.120 align:start position:0%
had a dedicated uh
 

01:29:21.120 --> 01:29:22.830 align:start position:0%
had a dedicated uh
kernel<01:29:21.520><c> task</c><01:29:21.840><c> associated</c><01:29:22.400><c> with</c><01:29:22.560><c> it</c><01:29:22.719><c> and</c>

01:29:22.830 --> 01:29:22.840 align:start position:0%
kernel task associated with it and
 

01:29:22.840 --> 01:29:24.950 align:start position:0%
kernel task associated with it and
therefore<01:29:24.080><c> that</c><01:29:24.320><c> basically</c>

01:29:24.950 --> 01:29:24.960 align:start position:0%
therefore that basically
 

01:29:24.960 --> 01:29:26.629 align:start position:0%
therefore that basically
allowed<01:29:25.280><c> them</c><01:29:25.360><c> to</c><01:29:25.520><c> trick</c><01:29:25.760><c> l4</c><01:29:26.159><c> and</c><01:29:26.239><c> to</c><01:29:26.400><c> switch</c>

01:29:26.629 --> 01:29:26.639 align:start position:0%
allowed them to trick l4 and to switch
 

01:29:26.639 --> 01:29:28.229 align:start position:0%
allowed them to trick l4 and to switch
into<01:29:26.880><c> the</c><01:29:26.960><c> appropriate</c><01:29:27.440><c> page</c><01:29:27.760><c> table</c><01:29:28.080><c> that</c>

01:29:28.229 --> 01:29:28.239 align:start position:0%
into the appropriate page table that
 

01:29:28.239 --> 01:29:29.030 align:start position:0%
into the appropriate page table that
included

01:29:29.030 --> 01:29:29.040 align:start position:0%
included
 

01:29:29.040 --> 01:29:31.590 align:start position:0%
included
that<01:29:29.360><c> process</c><01:29:30.000><c> plus</c><01:29:30.320><c> the</c><01:29:30.480><c> kernel</c><01:29:31.360><c> you</c><01:29:31.440><c> know</c>

01:29:31.590 --> 01:29:31.600 align:start position:0%
that process plus the kernel you know
 

01:29:31.600 --> 01:29:32.950 align:start position:0%
that process plus the kernel you know
depending<01:29:32.000><c> on</c><01:29:32.159><c> which</c><01:29:32.320><c> process</c><01:29:32.639><c> sent</c><01:29:32.880><c> the</c>

01:29:32.950 --> 01:29:32.960 align:start position:0%
depending on which process sent the
 

01:29:32.960 --> 01:29:34.709 align:start position:0%
depending on which process sent the
system<01:29:33.199><c> call</c><01:29:33.440><c> request</c>

01:29:34.709 --> 01:29:34.719 align:start position:0%
system call request
 

01:29:34.719 --> 01:29:37.669 align:start position:0%
system call request
and<01:29:35.840><c> you</c><01:29:35.920><c> know</c><01:29:36.080><c> i</c><01:29:36.400><c> think</c><01:29:36.800><c> that</c><01:29:37.040><c> kind</c><01:29:37.199><c> of</c><01:29:37.280><c> worked</c>

01:29:37.669 --> 01:29:37.679 align:start position:0%
and you know i think that kind of worked
 

01:29:37.679 --> 01:29:38.470 align:start position:0%
and you know i think that kind of worked
but

01:29:38.470 --> 01:29:38.480 align:start position:0%
but
 

01:29:38.480 --> 01:29:39.750 align:start position:0%
but
or<01:29:38.639><c> i</c><01:29:38.800><c> don't</c><01:29:38.960><c> forget</c><01:29:39.199><c> what</c><01:29:39.280><c> they</c><01:29:39.440><c> said</c><01:29:39.600><c> that</c>

01:29:39.750 --> 01:29:39.760 align:start position:0%
or i don't forget what they said that
 

01:29:39.760 --> 01:29:42.310 align:start position:0%
or i don't forget what they said that
worked<01:29:39.920><c> but</c><01:29:40.000><c> it</c><01:29:40.080><c> was</c><01:29:40.239><c> slow</c><01:29:40.639><c> or</c><01:29:40.800><c> something</c>

01:29:42.310 --> 01:29:42.320 align:start position:0%
worked but it was slow or something
 

01:29:42.320 --> 01:29:45.030 align:start position:0%
worked but it was slow or something
because<01:29:42.480><c> it</c><01:29:42.560><c> had</c><01:29:42.800><c> there</c><01:29:42.880><c> were</c><01:29:43.040><c> a</c><01:29:43.120><c> lot</c><01:29:43.199><c> of</c><01:29:43.360><c> tasks</c>

01:29:45.030 --> 01:29:45.040 align:start position:0%
because it had there were a lot of tasks
 

01:29:45.040 --> 01:29:46.709 align:start position:0%
because it had there were a lot of tasks
um

01:29:46.709 --> 01:29:46.719 align:start position:0%
um
 

01:29:46.719 --> 01:29:48.310 align:start position:0%
um
anyway<01:29:47.040><c> it's</c><01:29:47.199><c> like</c><01:29:47.360><c> a</c><01:29:47.440><c> complicated</c><01:29:47.920><c> story</c><01:29:48.159><c> and</c>

01:29:48.310 --> 01:29:48.320 align:start position:0%
anyway it's like a complicated story and
 

01:29:48.320 --> 01:29:49.510 align:start position:0%
anyway it's like a complicated story and
i<01:29:48.400><c> think</c><01:29:48.480><c> it</c><01:29:48.560><c> didn't</c><01:29:48.719><c> work</c><01:29:48.960><c> out</c><01:29:49.040><c> very</c><01:29:49.199><c> well</c><01:29:49.360><c> for</c>

01:29:49.510 --> 01:29:49.520 align:start position:0%
i think it didn't work out very well for
 

01:29:49.520 --> 01:29:50.790 align:start position:0%
i think it didn't work out very well for
them

01:29:50.790 --> 01:29:50.800 align:start position:0%
them
 

01:29:50.800 --> 01:29:53.350 align:start position:0%
them
okay<01:29:51.679><c> okay</c><01:29:51.920><c> i</c><01:29:52.080><c> see</c><01:29:52.320><c> i</c><01:29:52.400><c> think</c><01:29:52.800><c> i</c><01:29:52.960><c> think</c><01:29:53.120><c> that</c>

01:29:53.350 --> 01:29:53.360 align:start position:0%
okay okay i see i think i think that
 

01:29:53.360 --> 01:29:54.149 align:start position:0%
okay okay i see i think i think that
explains

01:29:54.149 --> 01:29:54.159 align:start position:0%
explains
 

01:29:54.159 --> 01:29:57.189 align:start position:0%
explains
oh<01:29:54.560><c> well</c><01:29:54.960><c> why</c><01:29:55.360><c> this</c><01:29:55.920><c> thing</c><01:29:56.159><c> is</c><01:29:56.400><c> harder</c><01:29:56.800><c> to</c><01:29:56.960><c> do</c>

01:29:57.189 --> 01:29:57.199 align:start position:0%
oh well why this thing is harder to do
 

01:29:57.199 --> 01:29:58.070 align:start position:0%
oh well why this thing is harder to do
than

01:29:58.070 --> 01:29:58.080 align:start position:0%
than
 

01:29:58.080 --> 01:30:01.430 align:start position:0%
than
oh<01:29:58.400><c> what</c><01:29:58.560><c> we</c><01:29:58.719><c> do</c><01:29:58.880><c> in</c><01:29:59.040><c> xv6</c><01:29:59.679><c> okay</c><01:30:00.880><c> yeah</c><01:30:01.120><c> yeah</c><01:30:01.280><c> this</c>

01:30:01.430 --> 01:30:01.440 align:start position:0%
oh what we do in xv6 okay yeah yeah this
 

01:30:01.440 --> 01:30:01.830 align:start position:0%
oh what we do in xv6 okay yeah yeah this
would<01:30:01.520><c> be</c>

01:30:01.830 --> 01:30:01.840 align:start position:0%
would be
 

01:30:01.840 --> 01:30:04.149 align:start position:0%
would be
because<01:30:02.159><c> there's</c><01:30:02.400><c> not</c><01:30:03.360><c> yet</c><01:30:03.600><c> this</c><01:30:03.840><c> picture</c><01:30:04.080><c> in</c>

01:30:04.149 --> 01:30:04.159 align:start position:0%
because there's not yet this picture in
 

01:30:04.159 --> 01:30:05.990 align:start position:0%
because there's not yet this picture in
xv6<01:30:04.719><c> or</c><01:30:04.800><c> even</c><01:30:05.040><c> standard</c><01:30:05.360><c> linux</c><01:30:05.760><c> is</c>

01:30:05.990 --> 01:30:06.000 align:start position:0%
xv6 or even standard linux is
 

01:30:06.000 --> 01:30:07.750 align:start position:0%
xv6 or even standard linux is
much<01:30:06.239><c> simpler</c><01:30:06.639><c> than</c><01:30:06.800><c> this</c><01:30:07.040><c> because</c><01:30:07.600><c> you're</c>

01:30:07.750 --> 01:30:07.760 align:start position:0%
much simpler than this because you're
 

01:30:07.760 --> 01:30:09.669 align:start position:0%
much simpler than this because you're
just<01:30:08.000><c> jumping</c><01:30:08.400><c> directly</c>

01:30:09.669 --> 01:30:09.679 align:start position:0%
just jumping directly
 

01:30:09.679 --> 01:30:11.110 align:start position:0%
just jumping directly
into<01:30:09.920><c> the</c><01:30:10.000><c> kernel</c><01:30:10.400><c> and</c><01:30:10.560><c> the</c><01:30:10.639><c> kernel</c><01:30:10.960><c> has</c>

01:30:11.110 --> 01:30:11.120 align:start position:0%
into the kernel and the kernel has
 

01:30:11.120 --> 01:30:13.030 align:start position:0%
into the kernel and the kernel has
control<01:30:11.520><c> over</c><01:30:11.760><c> direct</c><01:30:12.080><c> control</c><01:30:12.560><c> over</c><01:30:12.800><c> all</c><01:30:12.880><c> the</c>

01:30:13.030 --> 01:30:13.040 align:start position:0%
control over direct control over all the
 

01:30:13.040 --> 01:30:14.070 align:start position:0%
control over direct control over all the
paging<01:30:13.360><c> hardware</c>

01:30:14.070 --> 01:30:14.080 align:start position:0%
paging hardware
 

01:30:14.080 --> 01:30:15.990 align:start position:0%
paging hardware
which<01:30:14.320><c> it</c><01:30:14.800><c> doesn't</c><01:30:15.120><c> have</c><01:30:15.360><c> when</c><01:30:15.600><c> it</c><01:30:15.679><c> runs</c><01:30:15.920><c> that</c>

01:30:15.990 --> 01:30:16.000 align:start position:0%
which it doesn't have when it runs that
 

01:30:16.000 --> 01:30:17.590 align:start position:0%
which it doesn't have when it runs that
note<01:30:17.040><c> right</c>

01:30:17.590 --> 01:30:17.600 align:start position:0%
note right
 

01:30:17.600 --> 01:30:21.110 align:start position:0%
note right
okay<01:30:17.840><c> i</c><01:30:18.000><c> see</c><01:30:18.560><c> thank</c><01:30:18.800><c> you</c><01:30:19.040><c> thank</c><01:30:19.280><c> you</c>

01:30:21.110 --> 01:30:21.120 align:start position:0%
okay i see thank you thank you
 

01:30:21.120 --> 01:30:24.709 align:start position:0%
okay i see thank you thank you
we're<01:30:21.280><c> going</c><01:30:21.360><c> to</c><01:30:21.520><c> ask</c><01:30:21.840><c> um</c><01:30:23.199><c> why</c><01:30:23.679><c> um</c>

01:30:24.709 --> 01:30:24.719 align:start position:0%
we're going to ask um why um
 

01:30:24.719 --> 01:30:27.590 align:start position:0%
we're going to ask um why um
it<01:30:24.880><c> seems</c><01:30:25.120><c> like</c><01:30:25.440><c> um</c><01:30:26.400><c> some</c><01:30:26.800><c> some</c><01:30:27.040><c> tasks</c><01:30:27.440><c> are</c>

01:30:27.590 --> 01:30:27.600 align:start position:0%
it seems like um some some tasks are
 

01:30:27.600 --> 01:30:29.110 align:start position:0%
it seems like um some some tasks are
more<01:30:27.840><c> appropriate</c><01:30:28.480><c> to</c><01:30:28.639><c> be</c>

01:30:29.110 --> 01:30:29.120 align:start position:0%
more appropriate to be
 

01:30:29.120 --> 01:30:31.590 align:start position:0%
more appropriate to be
put<01:30:29.440><c> outside</c><01:30:29.840><c> the</c><01:30:30.000><c> kernel</c><01:30:30.320><c> than</c><01:30:30.560><c> others</c><01:30:31.360><c> but</c>

01:30:31.590 --> 01:30:31.600 align:start position:0%
put outside the kernel than others but
 

01:30:31.600 --> 01:30:32.310 align:start position:0%
put outside the kernel than others but
this

01:30:32.310 --> 01:30:32.320 align:start position:0%
this
 

01:30:32.320 --> 01:30:34.470 align:start position:0%
this
elf<01:30:32.719><c> like</c><01:30:33.040><c> the</c><01:30:33.199><c> approach</c><01:30:33.520><c> with</c><01:30:33.679><c> micro</c><01:30:34.000><c> kernels</c>

01:30:34.470 --> 01:30:34.480 align:start position:0%
elf like the approach with micro kernels
 

01:30:34.480 --> 01:30:36.310 align:start position:0%
elf like the approach with micro kernels
always<01:30:34.719><c> seems</c><01:30:34.960><c> to</c><01:30:35.120><c> be</c><01:30:35.280><c> either</c><01:30:35.679><c> everything</c><01:30:36.159><c> or</c>

01:30:36.310 --> 01:30:36.320 align:start position:0%
always seems to be either everything or
 

01:30:36.320 --> 01:30:37.910 align:start position:0%
always seems to be either everything or
nothing<01:30:36.800><c> or</c><01:30:37.040><c> like</c><01:30:37.199><c> either</c>

01:30:37.910 --> 01:30:37.920 align:start position:0%
nothing or like either
 

01:30:37.920 --> 01:30:39.750 align:start position:0%
nothing or like either
you<01:30:38.080><c> have</c><01:30:38.239><c> a</c><01:30:38.320><c> monolithic</c><01:30:38.960><c> kernel</c><01:30:39.280><c> doing</c>

01:30:39.750 --> 01:30:39.760 align:start position:0%
you have a monolithic kernel doing
 

01:30:39.760 --> 01:30:41.270 align:start position:0%
you have a monolithic kernel doing
everything<01:30:40.239><c> or</c><01:30:40.719><c> nothing</c>

01:30:41.270 --> 01:30:41.280 align:start position:0%
everything or nothing
 

01:30:41.280 --> 01:30:44.310 align:start position:0%
everything or nothing
just<01:30:41.520><c> like</c><01:30:42.159><c> i</c><01:30:42.320><c> feel</c><01:30:42.480><c> like</c><01:30:42.880><c> paging</c><01:30:43.679><c> and</c><01:30:44.080><c> some</c>

01:30:44.310 --> 01:30:44.320 align:start position:0%
just like i feel like paging and some
 

01:30:44.320 --> 01:30:46.070 align:start position:0%
just like i feel like paging and some
other<01:30:44.639><c> things</c><01:30:44.960><c> could</c><01:30:45.199><c> be</c><01:30:45.360><c> very</c><01:30:45.600><c> efficient</c>

01:30:46.070 --> 01:30:46.080 align:start position:0%
other things could be very efficient
 

01:30:46.080 --> 01:30:47.590 align:start position:0%
other things could be very efficient
inside<01:30:46.400><c> the</c><01:30:46.560><c> kernel</c><01:30:46.960><c> and</c><01:30:47.120><c> then</c>

01:30:47.590 --> 01:30:47.600 align:start position:0%
inside the kernel and then
 

01:30:47.600 --> 01:30:49.669 align:start position:0%
inside the kernel and then
maybe<01:30:47.840><c> like</c><01:30:48.080><c> file</c><01:30:48.400><c> systems</c><01:30:48.880><c> that</c><01:30:49.280><c> things</c><01:30:49.520><c> that</c>

01:30:49.669 --> 01:30:49.679 align:start position:0%
maybe like file systems that things that
 

01:30:49.679 --> 01:30:52.390 align:start position:0%
maybe like file systems that things that
need<01:30:49.920><c> to</c><01:30:50.000><c> be</c><01:30:50.159><c> swappable</c><01:30:50.800><c> could</c><01:30:50.960><c> be</c><01:30:51.120><c> outside</c>

01:30:52.390 --> 01:30:52.400 align:start position:0%
need to be swappable could be outside
 

01:30:52.400 --> 01:30:54.470 align:start position:0%
need to be swappable could be outside
uh<01:30:52.719><c> and</c><01:30:52.800><c> then</c><01:30:53.040><c> even</c><01:30:53.600><c> like</c><01:30:53.920><c> you</c><01:30:54.080><c> could</c><01:30:54.239><c> maybe</c>

01:30:54.470 --> 01:30:54.480 align:start position:0%
uh and then even like you could maybe
 

01:30:54.480 --> 01:30:55.990 align:start position:0%
uh and then even like you could maybe
even<01:30:54.719><c> have</c><01:30:54.960><c> a</c><01:30:55.040><c> kernel</c><01:30:55.360><c> that</c><01:30:55.600><c> has</c><01:30:55.760><c> some</c>

01:30:55.990 --> 01:30:56.000 align:start position:0%
even have a kernel that has some
 

01:30:56.000 --> 01:30:57.750 align:start position:0%
even have a kernel that has some
functionality<01:30:56.639><c> but</c><01:30:56.880><c> you</c><01:30:57.040><c> can</c><01:30:57.280><c> opt</c>

01:30:57.750 --> 01:30:57.760 align:start position:0%
functionality but you can opt
 

01:30:57.760 --> 01:31:00.629 align:start position:0%
functionality but you can opt
to<01:30:58.159><c> not</c><01:30:58.400><c> use</c><01:30:58.719><c> it</c><01:30:58.880><c> and</c><01:30:59.040><c> provide</c><01:30:59.440><c> your</c><01:30:59.600><c> own</c><01:31:00.480><c> is</c>

01:31:00.629 --> 01:31:00.639 align:start position:0%
to not use it and provide your own is
 

01:31:00.639 --> 01:31:02.709 align:start position:0%
to not use it and provide your own is
there<01:31:00.840><c> any</c><01:31:01.840><c> everything</c><01:31:02.239><c> you</c><01:31:02.400><c> say</c>

01:31:02.709 --> 01:31:02.719 align:start position:0%
there any everything you say
 

01:31:02.719 --> 01:31:05.910 align:start position:0%
there any everything you say
is<01:31:02.960><c> absolutely</c><01:31:04.560><c> well</c><01:31:04.800><c> taken</c><01:31:05.280><c> and</c>

01:31:05.910 --> 01:31:05.920 align:start position:0%
is absolutely well taken and
 

01:31:05.920 --> 01:31:08.390 align:start position:0%
is absolutely well taken and
indeed<01:31:06.400><c> there</c><01:31:06.480><c> were</c><01:31:07.199><c> a</c><01:31:07.280><c> lot</c><01:31:07.440><c> of</c><01:31:07.600><c> micro</c><01:31:08.000><c> kernel</c>

01:31:08.390 --> 01:31:08.400 align:start position:0%
indeed there were a lot of micro kernel
 

01:31:08.400 --> 01:31:10.390 align:start position:0%
indeed there were a lot of micro kernel
or<01:31:08.480><c> micro</c><01:31:08.800><c> kernel</c><01:31:09.120><c> related</c><01:31:09.520><c> projects</c>

01:31:10.390 --> 01:31:10.400 align:start position:0%
or micro kernel related projects
 

01:31:10.400 --> 01:31:13.110 align:start position:0%
or micro kernel related projects
um<01:31:11.280><c> and</c><01:31:11.520><c> many</c><01:31:11.760><c> of</c><01:31:11.840><c> them</c><01:31:12.320><c> built</c><01:31:12.560><c> various</c><01:31:12.880><c> kinds</c>

01:31:13.110 --> 01:31:13.120 align:start position:0%
um and many of them built various kinds
 

01:31:13.120 --> 01:31:14.070 align:start position:0%
um and many of them built various kinds
of<01:31:13.199><c> hybrids</c>

01:31:14.070 --> 01:31:14.080 align:start position:0%
of hybrids
 

01:31:14.080 --> 01:31:15.590 align:start position:0%
of hybrids
um<01:31:14.719><c> like</c><01:31:14.880><c> there</c><01:31:15.040><c> were</c><01:31:15.120><c> actually</c><01:31:15.360><c> a</c><01:31:15.360><c> couple</c>

01:31:15.590 --> 01:31:15.600 align:start position:0%
um like there were actually a couple
 

01:31:15.600 --> 01:31:17.189 align:start position:0%
um like there were actually a couple
different<01:31:15.920><c> versions</c><01:31:16.239><c> of</c><01:31:16.320><c> mock</c><01:31:16.639><c> and</c><01:31:16.880><c> some</c><01:31:17.040><c> of</c>

01:31:17.189 --> 01:31:17.199 align:start position:0%
different versions of mock and some of
 

01:31:17.199 --> 01:31:18.470 align:start position:0%
different versions of mock and some of
them

01:31:18.470 --> 01:31:18.480 align:start position:0%
them
 

01:31:18.480 --> 01:31:19.990 align:start position:0%
them
were<01:31:18.719><c> sort</c><01:31:18.880><c> of</c><01:31:18.960><c> hybrid</c><01:31:19.360><c> kernels</c><01:31:19.679><c> in</c><01:31:19.760><c> which</c>

01:31:19.990 --> 01:31:20.000 align:start position:0%
were sort of hybrid kernels in which
 

01:31:20.000 --> 01:31:21.270 align:start position:0%
were sort of hybrid kernels in which
yeah<01:31:20.159><c> there</c><01:31:20.320><c> was</c><01:31:20.480><c> this</c><01:31:20.639><c> micro</c><01:31:20.960><c> kernel</c><01:31:21.199><c> that</c>

01:31:21.270 --> 01:31:21.280 align:start position:0%
yeah there was this micro kernel that
 

01:31:21.280 --> 01:31:21.830 align:start position:0%
yeah there was this micro kernel that
knew<01:31:21.440><c> about</c>

01:31:21.830 --> 01:31:21.840 align:start position:0%
knew about
 

01:31:21.840 --> 01:31:24.870 align:start position:0%
knew about
ipc<01:31:22.480><c> but</c><01:31:22.719><c> also</c><01:31:23.199><c> in</c><01:31:23.360><c> the</c><01:31:23.520><c> kernel</c><01:31:24.560><c> was</c><01:31:24.800><c> a</c>

01:31:24.870 --> 01:31:24.880 align:start position:0%
ipc but also in the kernel was a
 

01:31:24.880 --> 01:31:26.629 align:start position:0%
ipc but also in the kernel was a
complete

01:31:26.629 --> 01:31:26.639 align:start position:0%
complete
 

01:31:26.639 --> 01:31:30.390 align:start position:0%
complete
unix<01:31:27.520><c> so</c><01:31:27.760><c> for</c><01:31:27.840><c> instance</c><01:31:28.159><c> mach</c><01:31:28.840><c> 2.5</c>

01:31:30.390 --> 01:31:30.400 align:start position:0%
unix so for instance mach 2.5
 

01:31:30.400 --> 01:31:33.430 align:start position:0%
unix so for instance mach 2.5
was<01:31:30.639><c> this</c><01:31:31.440><c> hybrid</c><01:31:31.840><c> with</c><01:31:32.080><c> it</c>

01:31:33.430 --> 01:31:33.440 align:start position:0%
was this hybrid with it
 

01:31:33.440 --> 01:31:35.590 align:start position:0%
was this hybrid with it
but<01:31:33.600><c> microkernel</c><01:31:34.320><c> and</c><01:31:34.560><c> unix</c><01:31:35.040><c> all</c><01:31:35.199><c> sort</c><01:31:35.360><c> of</c><01:31:35.520><c> in</c>

01:31:35.590 --> 01:31:35.600 align:start position:0%
but microkernel and unix all sort of in
 

01:31:35.600 --> 01:31:36.950 align:start position:0%
but microkernel and unix all sort of in
the<01:31:35.679><c> same</c><01:31:36.159><c> kernel</c>

01:31:36.950 --> 01:31:36.960 align:start position:0%
the same kernel
 

01:31:36.960 --> 01:31:38.629 align:start position:0%
the same kernel
and<01:31:37.199><c> you</c><01:31:37.280><c> could</c><01:31:37.360><c> make</c><01:31:37.520><c> system</c><01:31:37.840><c> calls</c><01:31:38.239><c> either</c>

01:31:38.629 --> 01:31:38.639 align:start position:0%
and you could make system calls either
 

01:31:38.639 --> 01:31:40.709 align:start position:0%
and you could make system calls either
and<01:31:38.800><c> some</c><01:31:39.040><c> stuff</c><01:31:39.199><c> was</c><01:31:39.440><c> built</c><01:31:39.760><c> in</c>

01:31:40.709 --> 01:31:40.719 align:start position:0%
and some stuff was built in
 

01:31:40.719 --> 01:31:42.870 align:start position:0%
and some stuff was built in
the<01:31:40.880><c> sort</c><01:31:41.040><c> of</c><01:31:41.520><c> microkernel</c><01:31:42.239><c> way</c><01:31:42.480><c> but</c><01:31:42.639><c> some</c>

01:31:42.870 --> 01:31:42.880 align:start position:0%
the sort of microkernel way but some
 

01:31:42.880 --> 01:31:44.390 align:start position:0%
the sort of microkernel way but some
things<01:31:43.199><c> really</c><01:31:43.440><c> they</c><01:31:43.600><c> would</c><01:31:43.679><c> just</c><01:31:43.840><c> use</c>

01:31:44.390 --> 01:31:44.400 align:start position:0%
things really they would just use
 

01:31:44.400 --> 01:31:46.390 align:start position:0%
things really they would just use
the<01:31:44.480><c> kernel</c><01:31:44.800><c> that</c><01:31:44.960><c> was</c><01:31:45.120><c> in</c><01:31:45.360><c> mock</c><01:31:46.080><c> that</c><01:31:46.239><c> was</c>

01:31:46.390 --> 01:31:46.400 align:start position:0%
the kernel that was in mock that was
 

01:31:46.400 --> 01:31:48.550 align:start position:0%
the kernel that was in mock that was
built<01:31:46.719><c> into</c><01:31:47.120><c> the</c><01:31:47.280><c> mock</c><01:31:47.520><c> kernel</c><01:31:47.920><c> the</c><01:31:48.159><c> unix</c>

01:31:48.550 --> 01:31:48.560 align:start position:0%
built into the mock kernel the unix
 

01:31:48.560 --> 01:31:50.310 align:start position:0%
built into the mock kernel the unix
kernel<01:31:48.880><c> was</c><01:31:48.960><c> built</c><01:31:49.199><c> into</c><01:31:49.360><c> the</c><01:31:49.440><c> mock</c><01:31:49.600><c> kernel</c>

01:31:50.310 --> 01:31:50.320 align:start position:0%
kernel was built into the mock kernel
 

01:31:50.320 --> 01:31:53.350 align:start position:0%
kernel was built into the mock kernel
um<01:31:50.960><c> and</c><01:31:51.120><c> modern</c><01:31:51.440><c> you</c><01:31:51.520><c> know</c><01:31:51.679><c> mac</c><01:31:51.920><c> os</c><01:31:52.320><c> also</c>

01:31:53.350 --> 01:31:53.360 align:start position:0%
um and modern you know mac os also
 

01:31:53.360 --> 01:31:55.590 align:start position:0%
um and modern you know mac os also
is<01:31:53.920><c> built</c><01:31:54.159><c> in</c><01:31:54.239><c> a</c><01:31:54.320><c> way</c><01:31:54.480><c> that</c><01:31:54.719><c> like</c><01:31:55.199><c> the</c><01:31:55.280><c> way</c><01:31:55.440><c> you</c>

01:31:55.590 --> 01:31:55.600 align:start position:0%
is built in a way that like the way you
 

01:31:55.600 --> 01:31:56.390 align:start position:0%
is built in a way that like the way you
describe<01:31:56.080><c> you</c><01:31:56.159><c> know</c>

01:31:56.390 --> 01:31:56.400 align:start position:0%
describe you know
 

01:31:56.400 --> 01:31:59.430 align:start position:0%
describe you know
mac<01:31:56.840><c> os</c><01:31:57.920><c> that</c><01:31:58.159><c> has</c><01:31:58.400><c> a</c>

01:31:59.430 --> 01:31:59.440 align:start position:0%
mac os that has a
 

01:31:59.440 --> 01:32:00.550 align:start position:0%
mac os that has a
all<01:31:59.520><c> right</c><01:31:59.679><c> it's</c><01:31:59.760><c> a</c><01:31:59.840><c> complete</c><01:32:00.239><c> operating</c>

01:32:00.550 --> 01:32:00.560 align:start position:0%
all right it's a complete operating
 

01:32:00.560 --> 01:32:01.910 align:start position:0%
all right it's a complete operating
system<01:32:00.880><c> with</c><01:32:00.960><c> a</c><01:32:01.040><c> file</c><01:32:01.199><c> system</c><01:32:01.520><c> and</c><01:32:01.600><c> everything</c>

01:32:01.910 --> 01:32:01.920 align:start position:0%
system with a file system and everything
 

01:32:01.920 --> 01:32:03.669 align:start position:0%
system with a file system and everything
inside<01:32:02.239><c> it</c><01:32:02.320><c> but</c><01:32:02.480><c> it</c><01:32:02.639><c> also</c><01:32:02.880><c> has</c><01:32:03.040><c> good</c><01:32:03.199><c> support</c>

01:32:03.669 --> 01:32:03.679 align:start position:0%
inside it but it also has good support
 

01:32:03.679 --> 01:32:04.470 align:start position:0%
inside it but it also has good support
for

01:32:04.470 --> 01:32:04.480 align:start position:0%
for
 

01:32:04.480 --> 01:32:07.270 align:start position:0%
for
ipc<01:32:05.199><c> and</c><01:32:05.440><c> sort</c><01:32:05.679><c> of</c><01:32:05.760><c> mic</c><01:32:06.480><c> threads</c><01:32:06.880><c> or</c><01:32:07.040><c> all</c><01:32:07.120><c> the</c>

01:32:07.270 --> 01:32:07.280 align:start position:0%
ipc and sort of mic threads or all the
 

01:32:07.280 --> 01:32:08.709 align:start position:0%
ipc and sort of mic threads or all the
stuff<01:32:07.520><c> you</c><01:32:07.600><c> would</c><01:32:07.760><c> want</c><01:32:08.080><c> to</c>

01:32:08.709 --> 01:32:08.719 align:start position:0%
stuff you would want to
 

01:32:08.719 --> 01:32:13.430 align:start position:0%
stuff you would want to
build<01:32:09.040><c> micro</c><01:32:09.920><c> kernel</c><01:32:10.480><c> style</c><01:32:11.440><c> services</c>

01:32:13.430 --> 01:32:13.440 align:start position:0%
build micro kernel style services
 

01:32:13.440 --> 01:32:15.750 align:start position:0%
build micro kernel style services
i<01:32:13.520><c> think</c><01:32:13.760><c> google's</c><01:32:14.320><c> fuchsia</c><01:32:15.199><c> i'm</c><01:32:15.360><c> aware</c><01:32:15.600><c> of</c>

01:32:15.750 --> 01:32:15.760 align:start position:0%
i think google's fuchsia i'm aware of
 

01:32:15.760 --> 01:32:17.430 align:start position:0%
i think google's fuchsia i'm aware of
also<01:32:16.159><c> implement</c><01:32:16.480><c> some</c><01:32:16.639><c> of</c><01:32:16.719><c> these</c><01:32:16.880><c> ideas</c><01:32:17.199><c> now</c>

01:32:17.430 --> 01:32:17.440 align:start position:0%
also implement some of these ideas now
 

01:32:17.440 --> 01:32:18.390 align:start position:0%
also implement some of these ideas now
as<01:32:17.600><c> well</c>

01:32:18.390 --> 01:32:18.400 align:start position:0%
as well
 

01:32:18.400 --> 01:32:22.070 align:start position:0%
as well
oh<01:32:18.639><c> i'll</c><01:32:18.800><c> bet</c><01:32:19.040><c> yeah</c>

01:32:22.070 --> 01:32:22.080 align:start position:0%
 
 

01:32:22.080 --> 01:32:24.709 align:start position:0%
 
so<01:32:22.320><c> anyway</c><01:32:22.800><c> you</c><01:32:22.880><c> know</c><01:32:23.040><c> there's</c><01:32:23.199><c> no</c><01:32:23.360><c> one</c><01:32:23.600><c> way</c>

01:32:24.709 --> 01:32:24.719 align:start position:0%
so anyway you know there's no one way
 

01:32:24.719 --> 01:32:26.070 align:start position:0%
so anyway you know there's no one way
there<01:32:25.120><c> were</c><01:32:25.280><c> people</c><01:32:25.440><c> who</c><01:32:25.520><c> were</c><01:32:25.679><c> sort</c><01:32:25.840><c> of</c>

01:32:26.070 --> 01:32:26.080 align:start position:0%
there were people who were sort of
 

01:32:26.080 --> 01:32:30.790 align:start position:0%
there were people who were sort of
hoping<01:32:26.480><c> that</c><01:32:26.800><c> a</c><01:32:27.040><c> pure</c><01:32:28.639><c> a</c><01:32:28.800><c> very</c><01:32:29.199><c> pure</c>

01:32:30.790 --> 01:32:30.800 align:start position:0%
hoping that a pure a very pure
 

01:32:30.800 --> 01:32:35.510 align:start position:0%
hoping that a pure a very pure
scheme<01:32:31.199><c> could</c><01:32:31.360><c> be</c><01:32:31.520><c> made</c><01:32:31.679><c> to</c><01:32:31.840><c> work</c>

01:32:35.510 --> 01:32:35.520 align:start position:0%
 
 

01:32:35.520 --> 01:32:38.830 align:start position:0%
 
but<01:32:36.800><c> was</c><01:32:37.040><c> not</c><01:32:37.199><c> the</c><01:32:37.280><c> only</c><01:32:37.520><c> possible</c><01:32:37.840><c> way</c>

01:32:38.830 --> 01:32:38.840 align:start position:0%
but was not the only possible way
 

01:32:38.840 --> 01:32:41.110 align:start position:0%
but was not the only possible way
forward

01:32:41.110 --> 01:32:41.120 align:start position:0%
forward
 

01:32:41.120 --> 01:32:42.950 align:start position:0%
forward
all<01:32:41.280><c> right</c><01:32:41.600><c> thanks</c><01:32:42.080><c> uh</c><01:32:42.320><c> got</c><01:32:42.480><c> around</c><01:32:42.719><c> to</c><01:32:42.800><c> my</c>

01:32:42.950 --> 01:32:42.960 align:start position:0%
all right thanks uh got around to my
 

01:32:42.960 --> 01:32:44.229 align:start position:0%
all right thanks uh got around to my
next<01:32:43.360><c> lecture</c><01:32:43.760><c> but</c>

01:32:44.229 --> 01:32:44.239 align:start position:0%
next lecture but
 

01:32:44.239 --> 01:32:48.629 align:start position:0%
next lecture but
i'll<01:32:44.400><c> see</c><01:32:44.560><c> you</c><01:32:44.639><c> guys</c><01:32:45.760><c> see</c><01:32:45.920><c> you</c><01:32:46.000><c> later</c>

01:32:48.629 --> 01:32:48.639 align:start position:0%
 
 

01:32:48.639 --> 01:32:52.470 align:start position:0%
 
thank<01:32:48.880><c> you</c><01:32:49.840><c> you're</c><01:32:50.000><c> welcome</c>

01:32:52.470 --> 01:32:52.480 align:start position:0%
 
 

01:32:52.480 --> 01:32:54.550 align:start position:0%
 
oh<01:32:52.800><c> i</c><01:32:53.120><c> i</c><01:32:53.280><c> didn't</c><01:32:53.440><c> have</c><01:32:53.679><c> a</c><01:32:53.920><c> i</c><01:32:54.000><c> haven't</c><01:32:54.320><c> just</c><01:32:54.560><c> a</c>

01:32:54.550 --> 01:32:54.560 align:start position:0%
oh i i didn't have a i haven't just a
 

01:32:54.560 --> 01:32:55.830 align:start position:0%
oh i i didn't have a i haven't just a
remark<01:32:55.199><c> i</c>

01:32:55.830 --> 01:32:55.840 align:start position:0%
remark i
 

01:32:55.840 --> 01:32:58.629 align:start position:0%
remark i
i<01:32:55.920><c> think</c><01:32:56.159><c> it's</c><01:32:56.480><c> fascinating</c><01:32:57.040><c> that</c><01:32:57.600><c> it</c><01:32:58.159><c> it's</c>

01:32:58.629 --> 01:32:58.639 align:start position:0%
i think it's fascinating that it it's
 

01:32:58.639 --> 01:32:59.669 align:start position:0%
i think it's fascinating that it it's
like

01:32:59.669 --> 01:32:59.679 align:start position:0%
like
 

01:32:59.679 --> 01:33:01.510 align:start position:0%
like
five<01:32:59.920><c> percent</c><01:33:00.239><c> slower</c><01:33:00.639><c> but</c><01:33:00.800><c> it</c><01:33:00.960><c> does</c><01:33:01.120><c> so</c><01:33:01.280><c> much</c>

01:33:01.510 --> 01:33:01.520 align:start position:0%
five percent slower but it does so much
 

01:33:01.520 --> 01:33:03.590 align:start position:0%
five percent slower but it does so much
more<01:33:01.920><c> work</c><01:33:02.560><c> yeah</c><01:33:02.719><c> i</c><01:33:02.800><c> was</c><01:33:02.960><c> fascinating</c><01:33:03.440><c> with</c>

01:33:03.590 --> 01:33:03.600 align:start position:0%
more work yeah i was fascinating with
 

01:33:03.600 --> 01:33:06.070 align:start position:0%
more work yeah i was fascinating with
that

01:33:06.070 --> 01:33:06.080 align:start position:0%
 
 

01:33:06.080 --> 01:33:07.110 align:start position:0%
 
you<01:33:06.320><c> mean</c><01:33:06.400><c> that</c><01:33:06.560><c> even</c><01:33:06.719><c> though</c><01:33:06.880><c> it's</c><01:33:06.960><c> doing</c>

01:33:07.110 --> 01:33:07.120 align:start position:0%
you mean that even though it's doing
 

01:33:07.120 --> 01:33:08.709 align:start position:0%
you mean that even though it's doing
much<01:33:07.280><c> more</c><01:33:07.440><c> work</c><01:33:07.679><c> it's</c><01:33:07.840><c> only</c><01:33:08.000><c> slightly</c><01:33:08.320><c> slower</c>

01:33:08.709 --> 01:33:08.719 align:start position:0%
much more work it's only slightly slower
 

01:33:08.719 --> 01:33:10.070 align:start position:0%
much more work it's only slightly slower
yeah

01:33:10.070 --> 01:33:10.080 align:start position:0%
yeah
 

01:33:10.080 --> 01:33:13.910 align:start position:0%
yeah
well<01:33:10.639><c> they</c><01:33:10.800><c> really</c><01:33:11.520><c> sweat</c><01:33:11.920><c> blood</c><01:33:12.320><c> over</c><01:33:12.560><c> the</c>

01:33:13.910 --> 01:33:13.920 align:start position:0%
well they really sweat blood over the
 

01:33:13.920 --> 01:33:17.030 align:start position:0%
well they really sweat blood over the
ipc<01:33:14.400><c> performance</c><01:33:15.760><c> and</c><01:33:16.159><c> it's</c><01:33:16.639><c> another</c><01:33:16.880><c> thing</c>

01:33:17.030 --> 01:33:17.040 align:start position:0%
ipc performance and it's another thing
 

01:33:17.040 --> 01:33:17.669 align:start position:0%
ipc performance and it's another thing
to<01:33:17.120><c> remember</c>

01:33:17.669 --> 01:33:17.679 align:start position:0%
to remember
 

01:33:17.679 --> 01:33:20.550 align:start position:0%
to remember
of<01:33:17.760><c> course</c><01:33:18.000><c> is</c><01:33:18.159><c> that</c><01:33:19.280><c> if</c><01:33:19.440><c> you</c><01:33:19.679><c> start</c><01:33:20.000><c> doing</c><01:33:20.480><c> if</c>

01:33:20.550 --> 01:33:20.560 align:start position:0%
of course is that if you start doing if
 

01:33:20.560 --> 01:33:21.830 align:start position:0%
of course is that if you start doing if
you're<01:33:20.840><c> doing</c><01:33:21.040><c> a</c>

01:33:21.830 --> 01:33:21.840 align:start position:0%
you're doing a
 

01:33:21.840 --> 01:33:23.910 align:start position:0%
you're doing a
significant<01:33:22.400><c> amount</c><01:33:22.560><c> of</c><01:33:22.719><c> work</c><01:33:23.199><c> per</c><01:33:23.520><c> system</c>

01:33:23.910 --> 01:33:23.920 align:start position:0%
significant amount of work per system
 

01:33:23.920 --> 01:33:24.950 align:start position:0%
significant amount of work per system
call

01:33:24.950 --> 01:33:24.960 align:start position:0%
call
 

01:33:24.960 --> 01:33:26.950 align:start position:0%
call
like<01:33:25.280><c> you</c><01:33:25.440><c> know</c><01:33:26.159><c> looking</c><01:33:26.480><c> at</c><01:33:26.560><c> files</c><01:33:26.880><c> and</c>

01:33:26.950 --> 01:33:26.960 align:start position:0%
like you know looking at files and
 

01:33:26.960 --> 01:33:28.709 align:start position:0%
like you know looking at files and
directories<01:33:27.760><c> or</c><01:33:27.920><c> something</c>

01:33:28.709 --> 01:33:28.719 align:start position:0%
directories or something
 

01:33:28.719 --> 01:33:30.390 align:start position:0%
directories or something
then<01:33:28.880><c> the</c><01:33:29.120><c> cost</c><01:33:29.520><c> of</c><01:33:29.600><c> the</c><01:33:29.760><c> system</c><01:33:30.000><c> called</c><01:33:30.320><c> the</c>

01:33:30.390 --> 01:33:30.400 align:start position:0%
then the cost of the system called the
 

01:33:30.400 --> 01:33:33.030 align:start position:0%
then the cost of the system called the
ipc<01:33:31.040><c> itself</c><01:33:31.440><c> starts</c><01:33:31.760><c> to</c><01:33:31.920><c> be</c><01:33:32.080><c> less</c>

01:33:33.030 --> 01:33:33.040 align:start position:0%
ipc itself starts to be less
 

01:33:33.040 --> 01:33:36.149 align:start position:0%
ipc itself starts to be less
important<01:33:34.800><c> so</c><01:33:35.040><c> the</c><01:33:35.280><c> combination</c><01:33:35.679><c> of</c><01:33:35.840><c> faster</c>

01:33:36.149 --> 01:33:36.159 align:start position:0%
important so the combination of faster
 

01:33:36.159 --> 01:33:38.149 align:start position:0%
important so the combination of faster
system<01:33:36.480><c> calls</c><01:33:36.800><c> plus</c><01:33:37.120><c> real</c><01:33:37.440><c> programs</c><01:33:38.000><c> do</c>

01:33:38.149 --> 01:33:38.159 align:start position:0%
system calls plus real programs do
 

01:33:38.159 --> 01:33:39.430 align:start position:0%
system calls plus real programs do
things<01:33:38.400><c> other</c><01:33:38.639><c> than</c>

01:33:39.430 --> 01:33:39.440 align:start position:0%
things other than
 

01:33:39.440 --> 01:33:42.550 align:start position:0%
things other than
making<01:33:39.760><c> system</c><01:33:40.080><c> calls</c><01:33:41.760><c> but</c><01:33:42.000><c> it</c><01:33:42.080><c> would</c><01:33:42.320><c> also</c>

01:33:42.550 --> 01:33:42.560 align:start position:0%
making system calls but it would also
 

01:33:42.560 --> 01:33:43.750 align:start position:0%
making system calls but it would also
like<01:33:42.800><c> switch</c>

01:33:43.750 --> 01:33:43.760 align:start position:0%
like switch
 

01:33:43.760 --> 01:33:47.270 align:start position:0%
like switch
page<01:33:44.159><c> tables</c><01:33:44.719><c> and</c><01:33:45.120><c> oh</c><01:33:45.280><c> yeah</c><01:33:45.840><c> the</c><01:33:46.080><c> others</c>

01:33:47.270 --> 01:33:47.280 align:start position:0%
page tables and oh yeah the others
 

01:33:47.280 --> 01:33:49.030 align:start position:0%
page tables and oh yeah the others
yeah<01:33:47.520><c> although</c><01:33:47.760><c> the</c><01:33:47.920><c> paper</c><01:33:48.239><c> i</c><01:33:48.400><c> did</c><01:33:48.639><c> not</c><01:33:48.800><c> talk</c>

01:33:49.030 --> 01:33:49.040 align:start position:0%
yeah although the paper i did not talk
 

01:33:49.040 --> 01:33:50.790 align:start position:0%
yeah although the paper i did not talk
about<01:33:49.199><c> it</c><01:33:49.280><c> but</c><01:33:49.440><c> the</c><01:33:49.600><c> paper</c><01:33:50.000><c> had</c><01:33:50.239><c> some</c><01:33:50.400><c> clever</c>

01:33:50.790 --> 01:33:50.800 align:start position:0%
about it but the paper had some clever
 

01:33:50.800 --> 01:33:52.070 align:start position:0%
about it but the paper had some clever
tricks<01:33:51.280><c> for</c>

01:33:52.070 --> 01:33:52.080 align:start position:0%
tricks for
 

01:33:52.080 --> 01:33:54.390 align:start position:0%
tricks for
avoiding<01:33:52.560><c> the</c><01:33:52.800><c> cost</c><01:33:53.280><c> of</c><01:33:53.520><c> switching</c><01:33:54.000><c> page</c>

01:33:54.390 --> 01:33:54.400 align:start position:0%
avoiding the cost of switching page
 

01:33:54.400 --> 01:33:55.110 align:start position:0%
avoiding the cost of switching page
tables

01:33:55.110 --> 01:33:55.120 align:start position:0%
tables
 

01:33:55.120 --> 01:33:58.390 align:start position:0%
tables
i<01:33:55.199><c> don't</c><01:33:55.280><c> know</c><01:33:55.360><c> if</c><01:33:55.520><c> you</c><01:33:55.600><c> remember</c><01:33:57.520><c> for</c><01:33:57.760><c> some</c>

01:33:58.390 --> 01:33:58.400 align:start position:0%
i don't know if you remember for some
 

01:33:58.400 --> 01:33:59.990 align:start position:0%
i don't know if you remember for some
booths<01:33:58.800><c> like</c><01:33:59.040><c> on</c><01:33:59.199><c> page</c><01:33:59.440><c> six</c><01:33:59.600><c> we're</c><01:33:59.760><c> talking</c>

01:33:59.990 --> 01:34:00.000 align:start position:0%
booths like on page six we're talking
 

01:34:00.000 --> 01:34:01.669 align:start position:0%
booths like on page six we're talking
about<01:34:00.159><c> supporting</c><01:34:01.280><c> tag</c>

01:34:01.669 --> 01:34:01.679 align:start position:0%
about supporting tag
 

01:34:01.679 --> 01:34:04.149 align:start position:0%
about supporting tag
tobs<01:34:02.159><c> or</c><01:34:02.239><c> small</c><01:34:02.560><c> spaces</c><01:34:03.600><c> they</c><01:34:03.760><c> had</c><01:34:03.920><c> some</c>

01:34:04.149 --> 01:34:04.159 align:start position:0%
tobs or small spaces they had some
 

01:34:04.159 --> 01:34:05.430 align:start position:0%
tobs or small spaces they had some
clever<01:34:04.560><c> ideas</c><01:34:04.960><c> for</c>

01:34:05.430 --> 01:34:05.440 align:start position:0%
clever ideas for
 

01:34:05.440 --> 01:34:08.629 align:start position:0%
clever ideas for
not<01:34:06.400><c> which</c><01:34:06.800><c> page</c><01:34:07.199><c> tables</c>

01:34:08.629 --> 01:34:08.639 align:start position:0%
not which page tables
 

01:34:08.639 --> 01:34:10.229 align:start position:0%
not which page tables
which<01:34:08.880><c> i</c><01:34:08.960><c> had</c><01:34:09.120><c> not</c><01:34:09.280><c> heard</c><01:34:09.520><c> of</c><01:34:09.679><c> before</c><01:34:09.920><c> i</c><01:34:10.000><c> read</c>

01:34:10.229 --> 01:34:10.239 align:start position:0%
which i had not heard of before i read
 

01:34:10.239 --> 01:34:12.229 align:start position:0%
which i had not heard of before i read
this<01:34:10.320><c> paper</c><01:34:10.719><c> so</c>

01:34:12.229 --> 01:34:12.239 align:start position:0%
this paper so
 

01:34:12.239 --> 01:34:14.790 align:start position:0%
this paper so
this<01:34:12.400><c> is</c><01:34:12.560><c> pretty</c><01:34:12.880><c> cool</c><01:34:13.280><c> thank</c><01:34:13.440><c> you</c><01:34:13.600><c> so</c><01:34:13.760><c> much</c>

01:34:14.790 --> 01:34:14.800 align:start position:0%
this is pretty cool thank you so much
 

01:34:14.800 --> 01:34:16.830 align:start position:0%
this is pretty cool thank you so much
bye

01:34:16.830 --> 01:34:16.840 align:start position:0%
bye
 

01:34:16.840 --> 01:34:19.840 align:start position:0%
bye
bye

