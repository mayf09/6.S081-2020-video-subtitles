WEBVTT
Kind: captions
Language: en

00:00:01.920 --> 00:00:04.309 align:start position:0%
 
all<00:00:02.080><c> right</c><00:00:02.720><c> um</c>

00:00:04.309 --> 00:00:04.319 align:start position:0%
all right um
 

00:00:04.319 --> 00:00:08.710 align:start position:0%
all right um
welcome<00:00:04.720><c> to</c><00:00:04.880><c> six</c><00:00:05.720><c> s081</c><00:00:07.040><c> operating</c><00:00:07.440><c> systems</c>

00:00:08.710 --> 00:00:08.720 align:start position:0%
welcome to six s081 operating systems
 

00:00:08.720 --> 00:00:11.190 align:start position:0%
welcome to six s081 operating systems
um<00:00:08.960><c> i'm</c><00:00:09.120><c> robert</c><00:00:09.599><c> i'll</c><00:00:09.760><c> be</c><00:00:09.920><c> co-lecturing</c><00:00:10.719><c> with</c>

00:00:11.190 --> 00:00:11.200 align:start position:0%
um i'm robert i'll be co-lecturing with
 

00:00:11.200 --> 00:00:12.789 align:start position:0%
um i'm robert i'll be co-lecturing with
franz

00:00:12.789 --> 00:00:12.799 align:start position:0%
franz
 

00:00:12.799 --> 00:00:17.189 align:start position:0%
franz
and<00:00:13.519><c> david</c><00:00:13.840><c> and</c><00:00:13.920><c> nicholas</c><00:00:14.320><c> for</c><00:00:14.400><c> the</c><00:00:14.920><c> tas</c>

00:00:17.189 --> 00:00:17.199 align:start position:0%
and david and nicholas for the tas
 

00:00:17.199 --> 00:00:19.109 align:start position:0%
and david and nicholas for the tas
please<00:00:17.840><c> during</c><00:00:18.080><c> these</c><00:00:18.240><c> zoom</c><00:00:18.400><c> lectures</c><00:00:18.880><c> ask</c>

00:00:19.109 --> 00:00:19.119 align:start position:0%
please during these zoom lectures ask
 

00:00:19.119 --> 00:00:20.630 align:start position:0%
please during these zoom lectures ask
questions<00:00:19.600><c> you</c><00:00:19.680><c> can</c><00:00:19.840><c> either</c>

00:00:20.630 --> 00:00:20.640 align:start position:0%
questions you can either
 

00:00:20.640 --> 00:00:24.070 align:start position:0%
questions you can either
interrupt<00:00:20.960><c> me</c><00:00:21.199><c> by</c><00:00:21.359><c> audio</c><00:00:21.920><c> or</c><00:00:23.519><c> enter</c><00:00:23.760><c> something</c>

00:00:24.070 --> 00:00:24.080 align:start position:0%
interrupt me by audio or enter something
 

00:00:24.080 --> 00:00:26.310 align:start position:0%
interrupt me by audio or enter something
into<00:00:24.240><c> the</c><00:00:24.400><c> chat</c><00:00:24.720><c> window</c><00:00:25.119><c> and</c>

00:00:26.310 --> 00:00:26.320 align:start position:0%
into the chat window and
 

00:00:26.320 --> 00:00:27.670 align:start position:0%
into the chat window and
one<00:00:26.560><c> of</c><00:00:26.560><c> the</c><00:00:26.720><c> staff</c><00:00:27.039><c> will</c><00:00:27.119><c> see</c><00:00:27.279><c> an</c><00:00:27.439><c> ask</c>

00:00:27.670 --> 00:00:27.680 align:start position:0%
one of the staff will see an ask
 

00:00:27.680 --> 00:00:30.710 align:start position:0%
one of the staff will see an ask
question<00:00:28.000><c> for</c><00:00:28.840><c> you</c><00:00:29.920><c> and</c><00:00:30.080><c> by</c><00:00:30.240><c> the</c><00:00:30.240><c> way</c><00:00:30.400><c> we'll</c><00:00:30.560><c> be</c>

00:00:30.710 --> 00:00:30.720 align:start position:0%
question for you and by the way we'll be
 

00:00:30.720 --> 00:00:32.310 align:start position:0%
question for you and by the way we'll be
recording<00:00:31.199><c> these</c><00:00:31.359><c> lectures</c>

00:00:32.310 --> 00:00:32.320 align:start position:0%
recording these lectures
 

00:00:32.320 --> 00:00:33.750 align:start position:0%
recording these lectures
and<00:00:32.399><c> we'll</c><00:00:32.640><c> post</c><00:00:32.880><c> the</c><00:00:32.960><c> recordings</c><00:00:33.360><c> later</c><00:00:33.600><c> so</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
and we'll post the recordings later so
 

00:00:33.760 --> 00:00:36.069 align:start position:0%
and we'll post the recordings later so
you<00:00:33.840><c> can</c><00:00:34.000><c> review</c><00:00:34.320><c> them</c><00:00:35.040><c> or</c><00:00:35.200><c> for</c>

00:00:36.069 --> 00:00:36.079 align:start position:0%
you can review them or for
 

00:00:36.079 --> 00:00:38.150 align:start position:0%
you can review them or for
people<00:00:36.320><c> who</c><00:00:36.480><c> can't</c><00:00:36.640><c> make</c><00:00:36.800><c> this</c><00:00:37.040><c> time</c><00:00:37.920><c> so</c><00:00:38.079><c> they</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
people who can't make this time so they
 

00:00:38.160 --> 00:00:40.549 align:start position:0%
people who can't make this time so they
can<00:00:38.320><c> never</c><00:00:38.559><c> like</c><00:00:38.719><c> see</c><00:00:38.879><c> the</c><00:00:38.960><c> lectures</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
can never like see the lectures
 

00:00:40.559 --> 00:00:43.750 align:start position:0%
can never like see the lectures
all<00:00:40.640><c> right</c><00:00:40.800><c> i</c><00:00:40.879><c> want</c><00:00:41.040><c> to</c><00:00:41.120><c> start</c><00:00:42.840><c> by</c><00:00:43.040><c> um</c>

00:00:43.750 --> 00:00:43.760 align:start position:0%
all right i want to start by um
 

00:00:43.760 --> 00:00:44.950 align:start position:0%
all right i want to start by um
laying<00:00:44.079><c> out</c><00:00:44.160><c> some</c><00:00:44.320><c> of</c><00:00:44.399><c> the</c><00:00:44.480><c> goals</c><00:00:44.800><c> of</c><00:00:44.879><c> the</c>

00:00:44.950 --> 00:00:44.960 align:start position:0%
laying out some of the goals of the
 

00:00:44.960 --> 00:00:46.950 align:start position:0%
laying out some of the goals of the
course<00:00:45.680><c> so</c>

00:00:46.950 --> 00:00:46.960 align:start position:0%
course so
 

00:00:46.960 --> 00:00:50.790 align:start position:0%
course so
number<00:00:47.280><c> one</c><00:00:47.760><c> is</c><00:00:48.000><c> to</c><00:00:48.239><c> um</c><00:00:49.440><c> understand</c>

00:00:50.790 --> 00:00:50.800 align:start position:0%
number one is to um understand
 

00:00:50.800 --> 00:00:54.069 align:start position:0%
number one is to um understand
uh<00:00:51.520><c> the</c><00:00:51.680><c> design</c><00:00:52.559><c> and</c><00:00:52.879><c> implementation</c><00:00:53.600><c> of</c>

00:00:54.069 --> 00:00:54.079 align:start position:0%
uh the design and implementation of
 

00:00:54.079 --> 00:00:55.430 align:start position:0%
uh the design and implementation of
operating<00:00:54.559><c> systems</c>

00:00:55.430 --> 00:00:55.440 align:start position:0%
operating systems
 

00:00:55.440 --> 00:00:58.869 align:start position:0%
operating systems
and<00:00:56.239><c> you</c><00:00:56.399><c> know</c><00:00:57.039><c> the</c><00:00:57.280><c> uh</c>

00:00:58.869 --> 00:00:58.879 align:start position:0%
and you know the uh
 

00:00:58.879 --> 00:01:01.189 align:start position:0%
and you know the uh
design<00:00:59.359><c> is</c><00:00:59.440><c> sort</c><00:00:59.600><c> of</c><00:00:59.760><c> high-level</c><00:01:00.399><c> structure</c>

00:01:01.189 --> 00:01:01.199 align:start position:0%
design is sort of high-level structure
 

00:01:01.199 --> 00:01:03.349 align:start position:0%
design is sort of high-level structure
and<00:01:01.760><c> implementation</c><00:01:02.480><c> is</c><00:01:02.559><c> really</c><00:01:02.879><c> about</c><00:01:03.199><c> what</c>

00:01:03.349 --> 00:01:03.359 align:start position:0%
and implementation is really about what
 

00:01:03.359 --> 00:01:04.469 align:start position:0%
and implementation is really about what
the<00:01:03.520><c> code</c><00:01:03.840><c> looks</c><00:01:04.080><c> like</c>

00:01:04.469 --> 00:01:04.479 align:start position:0%
the code looks like
 

00:01:04.479 --> 00:01:05.990 align:start position:0%
the code looks like
and<00:01:04.720><c> we'll</c><00:01:04.879><c> be</c><00:01:05.040><c> spending</c><00:01:05.360><c> a</c><00:01:05.360><c> lot</c><00:01:05.519><c> of</c><00:01:05.600><c> time</c><00:01:05.760><c> with</c>

00:01:05.990 --> 00:01:06.000 align:start position:0%
and we'll be spending a lot of time with
 

00:01:06.000 --> 00:01:08.149 align:start position:0%
and we'll be spending a lot of time with
both<00:01:07.200><c> um</c>

00:01:08.149 --> 00:01:08.159 align:start position:0%
both um
 

00:01:08.159 --> 00:01:11.429 align:start position:0%
both um
and<00:01:08.479><c> in</c><00:01:08.720><c> the</c><00:01:10.080><c> interest</c><00:01:10.479><c> of</c>

00:01:11.429 --> 00:01:11.439 align:start position:0%
and in the interest of
 

00:01:11.439 --> 00:01:12.710 align:start position:0%
and in the interest of
getting<00:01:11.680><c> a</c><00:01:11.760><c> deep</c><00:01:12.000><c> understanding</c><00:01:12.479><c> of</c><00:01:12.479><c> what's</c>

00:01:12.710 --> 00:01:12.720 align:start position:0%
getting a deep understanding of what's
 

00:01:12.720 --> 00:01:15.910 align:start position:0%
getting a deep understanding of what's
going<00:01:12.960><c> on</c><00:01:14.000><c> you'll</c><00:01:14.159><c> get</c><00:01:14.400><c> hands-on</c><00:01:15.040><c> experience</c>

00:01:15.910 --> 00:01:15.920 align:start position:0%
going on you'll get hands-on experience
 

00:01:15.920 --> 00:01:21.670 align:start position:0%
going on you'll get hands-on experience
with<00:01:16.159><c> a</c><00:01:17.040><c> small</c>

00:01:21.670 --> 00:01:21.680 align:start position:0%
 
 

00:01:21.680 --> 00:01:23.749 align:start position:0%
 
with<00:01:21.840><c> a</c><00:01:21.920><c> small</c><00:01:22.240><c> operating</c><00:01:22.640><c> system</c><00:01:23.040><c> the</c><00:01:23.200><c> xv6</c>

00:01:23.749 --> 00:01:23.759 align:start position:0%
with a small operating system the xv6
 

00:01:23.759 --> 00:01:26.870 align:start position:0%
with a small operating system the xv6
operating<00:01:24.159><c> system</c>

00:01:26.870 --> 00:01:26.880 align:start position:0%
 
 

00:01:26.880 --> 00:01:28.870 align:start position:0%
 
and<00:01:27.280><c> in</c><00:01:27.439><c> addition</c><00:01:27.840><c> to</c><00:01:28.159><c> actually</c><00:01:28.479><c> looking</c><00:01:28.720><c> at</c>

00:01:28.870 --> 00:01:28.880 align:start position:0%
and in addition to actually looking at
 

00:01:28.880 --> 00:01:30.310 align:start position:0%
and in addition to actually looking at
an<00:01:28.960><c> existing</c><00:01:29.360><c> operating</c><00:01:29.759><c> system</c>

00:01:30.310 --> 00:01:30.320 align:start position:0%
an existing operating system
 

00:01:30.320 --> 00:01:33.830 align:start position:0%
an existing operating system
you'll<00:01:30.560><c> be</c><00:01:31.520><c> in</c><00:01:31.600><c> the</c><00:01:31.759><c> labs</c><00:01:33.200><c> get</c><00:01:33.360><c> a</c><00:01:33.439><c> bunch</c><00:01:33.680><c> of</c>

00:01:33.830 --> 00:01:33.840 align:start position:0%
you'll be in the labs get a bunch of
 

00:01:33.840 --> 00:01:34.550 align:start position:0%
you'll be in the labs get a bunch of
experience

00:01:34.550 --> 00:01:34.560 align:start position:0%
experience
 

00:01:34.560 --> 00:01:36.789 align:start position:0%
experience
extending<00:01:34.960><c> the</c><00:01:35.119><c> operating</c><00:01:35.520><c> system</c><00:01:35.920><c> modifying</c>

00:01:36.789 --> 00:01:36.799 align:start position:0%
extending the operating system modifying
 

00:01:36.799 --> 00:01:38.230 align:start position:0%
extending the operating system modifying
improving<00:01:37.200><c> its</c><00:01:37.360><c> behavior</c>

00:01:38.230 --> 00:01:38.240 align:start position:0%
improving its behavior
 

00:01:38.240 --> 00:01:41.270 align:start position:0%
improving its behavior
and<00:01:38.720><c> writing</c><00:01:39.040><c> system</c><00:01:39.439><c> software</c><00:01:40.079><c> that</c><00:01:40.400><c> um</c><00:01:41.119><c> it</c>

00:01:41.270 --> 00:01:41.280 align:start position:0%
and writing system software that um it
 

00:01:41.280 --> 00:01:43.109 align:start position:0%
and writing system software that um it
uses<00:01:41.759><c> the</c><00:01:42.000><c> operating</c><00:01:42.399><c> system</c>

00:01:43.109 --> 00:01:43.119 align:start position:0%
uses the operating system
 

00:01:43.119 --> 00:01:46.550 align:start position:0%
uses the operating system
interfaces<00:01:43.600><c> if</c><00:01:43.759><c> it</c><00:01:43.840><c> works</c><00:01:44.079><c> an</c><00:01:44.159><c> application</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
interfaces if it works an application
 

00:01:46.560 --> 00:01:48.550 align:start position:0%
interfaces if it works an application
so<00:01:47.360><c> um</c><00:01:47.600><c> so</c><00:01:47.759><c> this</c><00:01:47.920><c> is</c><00:01:48.000><c> what</c><00:01:48.159><c> you're</c><00:01:48.320><c> going</c><00:01:48.399><c> to</c><00:01:48.479><c> be</c>

00:01:48.550 --> 00:01:48.560 align:start position:0%
so um so this is what you're going to be
 

00:01:48.560 --> 00:01:52.870 align:start position:0%
so um so this is what you're going to be
doing<00:01:48.799><c> in</c><00:01:48.880><c> the</c><00:01:48.960><c> course</c>

00:01:52.870 --> 00:01:52.880 align:start position:0%
 
 

00:01:52.880 --> 00:01:55.350 align:start position:0%
 
we're<00:01:53.040><c> also</c><00:01:54.240><c> interested</c><00:01:54.720><c> in</c><00:01:55.040><c> what</c><00:01:55.200><c> the</c>

00:01:55.350 --> 00:01:55.360 align:start position:0%
we're also interested in what the
 

00:01:55.360 --> 00:01:56.950 align:start position:0%
we're also interested in what the
purpose<00:01:55.680><c> of</c><00:01:55.759><c> the</c><00:01:55.840><c> operating</c><00:01:56.240><c> system</c><00:01:56.560><c> itself</c>

00:01:56.950 --> 00:01:56.960 align:start position:0%
purpose of the operating system itself
 

00:01:56.960 --> 00:02:00.870 align:start position:0%
purpose of the operating system itself
is<00:01:57.119><c> as</c><00:01:57.280><c> well</c><00:01:57.439><c> as</c><00:01:57.520><c> of</c><00:01:57.680><c> the</c><00:01:57.759><c> course</c>

00:02:00.870 --> 00:02:00.880 align:start position:0%
 
 

00:02:00.880 --> 00:02:03.749 align:start position:0%
 
so<00:02:01.040><c> for</c><00:02:01.200><c> that</c><00:02:01.439><c> i</c><00:02:01.520><c> have</c><00:02:01.680><c> a</c><00:02:02.079><c> sort</c><00:02:02.240><c> of</c><00:02:03.360><c> list</c><00:02:03.520><c> of</c><00:02:03.680><c> a</c>

00:02:03.749 --> 00:02:03.759 align:start position:0%
so for that i have a sort of list of a
 

00:02:03.759 --> 00:02:05.510 align:start position:0%
so for that i have a sort of list of a
couple<00:02:04.000><c> of</c><00:02:04.159><c> things</c><00:02:04.719><c> which</c>

00:02:05.510 --> 00:02:05.520 align:start position:0%
couple of things which
 

00:02:05.520 --> 00:02:07.910 align:start position:0%
couple of things which
um<00:02:06.560><c> you</c><00:02:06.719><c> know</c><00:02:06.880><c> there's</c><00:02:07.040><c> lots</c><00:02:07.280><c> of</c><00:02:07.520><c> operating</c>

00:02:07.910 --> 00:02:07.920 align:start position:0%
um you know there's lots of operating
 

00:02:07.920 --> 00:02:08.550 align:start position:0%
um you know there's lots of operating
system

00:02:08.550 --> 00:02:08.560 align:start position:0%
system
 

00:02:08.560 --> 00:02:10.630 align:start position:0%
system
different<00:02:08.879><c> operating</c><00:02:09.280><c> systems</c><00:02:09.679><c> out</c><00:02:09.840><c> there</c>

00:02:10.630 --> 00:02:10.640 align:start position:0%
different operating systems out there
 

00:02:10.640 --> 00:02:12.710 align:start position:0%
different operating systems out there
they<00:02:11.200><c> typically</c><00:02:11.680><c> have</c><00:02:11.840><c> a</c><00:02:12.000><c> common</c><00:02:12.400><c> set</c><00:02:12.560><c> of</c>

00:02:12.710 --> 00:02:12.720 align:start position:0%
they typically have a common set of
 

00:02:12.720 --> 00:02:16.150 align:start position:0%
they typically have a common set of
purposes

00:02:16.150 --> 00:02:16.160 align:start position:0%
 
 

00:02:16.160 --> 00:02:21.510 align:start position:0%
 
one<00:02:16.319><c> of</c><00:02:16.480><c> them</c><00:02:17.440><c> is</c><00:02:17.680><c> to</c><00:02:18.080><c> abstract</c><00:02:18.800><c> the</c><00:02:18.959><c> hardware</c>

00:02:21.510 --> 00:02:21.520 align:start position:0%
one of them is to abstract the hardware
 

00:02:21.520 --> 00:02:23.670 align:start position:0%
one of them is to abstract the hardware
um<00:02:22.239><c> that</c><00:02:22.480><c> is</c><00:02:22.879><c> you</c><00:02:22.959><c> know</c><00:02:23.040><c> what</c><00:02:23.200><c> you're</c><00:02:23.360><c> given</c>

00:02:23.670 --> 00:02:23.680 align:start position:0%
um that is you know what you're given
 

00:02:23.680 --> 00:02:25.350 align:start position:0%
um that is you know what you're given
typically<00:02:24.160><c> as</c><00:02:24.319><c> a</c><00:02:24.480><c> kind</c><00:02:24.640><c> of</c><00:02:24.720><c> starting</c><00:02:25.040><c> point</c><00:02:25.280><c> is</c>

00:02:25.350 --> 00:02:25.360 align:start position:0%
typically as a kind of starting point is
 

00:02:25.360 --> 00:02:27.030 align:start position:0%
typically as a kind of starting point is
you<00:02:25.440><c> buy</c><00:02:25.599><c> a</c><00:02:25.680><c> computer</c><00:02:26.080><c> a</c><00:02:26.160><c> computer</c><00:02:26.480><c> as</c><00:02:26.640><c> a</c><00:02:26.720><c> cpu</c>

00:02:27.030 --> 00:02:27.040 align:start position:0%
you buy a computer a computer as a cpu
 

00:02:27.040 --> 00:02:27.910 align:start position:0%
you buy a computer a computer as a cpu
in<00:02:27.120><c> memory</c>

00:02:27.910 --> 00:02:27.920 align:start position:0%
in memory
 

00:02:27.920 --> 00:02:30.949 align:start position:0%
in memory
but<00:02:28.000><c> that's</c><00:02:28.239><c> a</c><00:02:28.319><c> very</c><00:02:28.560><c> low</c><00:02:28.879><c> level</c><00:02:29.920><c> uh</c><00:02:30.560><c> set</c><00:02:30.800><c> of</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
but that's a very low level uh set of
 

00:02:30.959 --> 00:02:31.750 align:start position:0%
but that's a very low level uh set of
resources

00:02:31.750 --> 00:02:31.760 align:start position:0%
resources
 

00:02:31.760 --> 00:02:33.750 align:start position:0%
resources
it's<00:02:32.000><c> fantastic</c><00:02:32.480><c> to</c><00:02:32.560><c> have</c><00:02:32.720><c> much</c><00:02:32.959><c> higher</c><00:02:33.280><c> level</c>

00:02:33.750 --> 00:02:33.760 align:start position:0%
it's fantastic to have much higher level
 

00:02:33.760 --> 00:02:35.990 align:start position:0%
it's fantastic to have much higher level
um<00:02:34.560><c> interfaces</c><00:02:35.120><c> and</c><00:02:35.200><c> abstractions</c><00:02:35.840><c> that</c>

00:02:35.990 --> 00:02:36.000 align:start position:0%
um interfaces and abstractions that
 

00:02:36.000 --> 00:02:38.070 align:start position:0%
um interfaces and abstractions that
applications<00:02:36.560><c> can</c><00:02:36.720><c> use</c>

00:02:38.070 --> 00:02:38.080 align:start position:0%
applications can use
 

00:02:38.080 --> 00:02:41.030 align:start position:0%
applications can use
such<00:02:38.319><c> as</c><00:02:38.480><c> processes</c><00:02:38.959><c> or</c><00:02:39.120><c> file</c><00:02:39.440><c> systems</c><00:02:40.800><c> both</c>

00:02:41.030 --> 00:02:41.040 align:start position:0%
such as processes or file systems both
 

00:02:41.040 --> 00:02:41.910 align:start position:0%
such as processes or file systems both
for<00:02:41.200><c> convenience</c>

00:02:41.910 --> 00:02:41.920 align:start position:0%
for convenience
 

00:02:41.920 --> 00:02:44.949 align:start position:0%
for convenience
and<00:02:42.160><c> for</c><00:02:42.640><c> portability</c><00:02:44.319><c> another</c><00:02:44.640><c> very</c>

00:02:44.949 --> 00:02:44.959 align:start position:0%
and for portability another very
 

00:02:44.959 --> 00:02:46.229 align:start position:0%
and for portability another very
important

00:02:46.229 --> 00:02:46.239 align:start position:0%
important
 

00:02:46.239 --> 00:02:48.150 align:start position:0%
important
task<00:02:46.560><c> of</c><00:02:46.640><c> an</c><00:02:46.800><c> operating</c><00:02:47.200><c> system</c><00:02:47.840><c> is</c><00:02:48.000><c> to</c>

00:02:48.150 --> 00:02:48.160 align:start position:0%
task of an operating system is to
 

00:02:48.160 --> 00:02:50.150 align:start position:0%
task of an operating system is to
multiplex<00:02:48.720><c> the</c><00:02:48.879><c> hardware</c>

00:02:50.150 --> 00:02:50.160 align:start position:0%
multiplex the hardware
 

00:02:50.160 --> 00:02:53.030 align:start position:0%
multiplex the hardware
among<00:02:50.480><c> many</c><00:02:50.800><c> applications</c><00:02:52.640><c> you</c><00:02:52.720><c> might</c><00:02:52.879><c> be</c>

00:02:53.030 --> 00:02:53.040 align:start position:0%
among many applications you might be
 

00:02:53.040 --> 00:02:53.589 align:start position:0%
among many applications you might be
running

00:02:53.589 --> 00:02:53.599 align:start position:0%
running
 

00:02:53.599 --> 00:02:57.190 align:start position:0%
running
a<00:02:53.920><c> text</c><00:02:54.319><c> editor</c><00:02:55.040><c> and</c><00:02:55.280><c> a</c><00:02:55.599><c> compiler</c><00:02:56.400><c> or</c>

00:02:57.190 --> 00:02:57.200 align:start position:0%
a text editor and a compiler or
 

00:02:57.200 --> 00:03:00.550 align:start position:0%
a text editor and a compiler or
maybe<00:02:59.360><c> multiple</c><00:02:59.760><c> different</c><00:03:00.080><c> database</c>

00:03:00.550 --> 00:03:00.560 align:start position:0%
maybe multiple different database
 

00:03:00.560 --> 00:03:01.910 align:start position:0%
maybe multiple different database
servers<00:03:00.959><c> or</c><00:03:01.040><c> something</c><00:03:01.280><c> on</c><00:03:01.360><c> your</c><00:03:01.519><c> operating</c>

00:03:01.910 --> 00:03:01.920 align:start position:0%
servers or something on your operating
 

00:03:01.920 --> 00:03:02.390 align:start position:0%
servers or something on your operating
system

00:03:02.390 --> 00:03:02.400 align:start position:0%
system
 

00:03:02.400 --> 00:03:03.910 align:start position:0%
system
it's<00:03:02.560><c> fantastic</c><00:03:03.200><c> to</c><00:03:03.280><c> be</c><00:03:03.440><c> able</c><00:03:03.519><c> to</c><00:03:03.599><c> have</c><00:03:03.760><c> the</c>

00:03:03.910 --> 00:03:03.920 align:start position:0%
it's fantastic to be able to have the
 

00:03:03.920 --> 00:03:05.750 align:start position:0%
it's fantastic to be able to have the
operating<00:03:04.400><c> system</c><00:03:04.959><c> run</c><00:03:05.120><c> both</c><00:03:05.360><c> of</c><00:03:05.440><c> them</c><00:03:05.599><c> at</c><00:03:05.680><c> the</c>

00:03:05.750 --> 00:03:05.760 align:start position:0%
operating system run both of them at the
 

00:03:05.760 --> 00:03:07.750 align:start position:0%
operating system run both of them at the
same<00:03:06.000><c> time</c><00:03:06.400><c> or</c><00:03:06.640><c> all</c><00:03:06.800><c> the</c><00:03:06.879><c> things</c><00:03:07.200><c> are</c><00:03:07.280><c> going</c><00:03:07.599><c> on</c>

00:03:07.750 --> 00:03:07.760 align:start position:0%
same time or all the things are going on
 

00:03:07.760 --> 00:03:08.710 align:start position:0%
same time or all the things are going on
at<00:03:07.840><c> the</c><00:03:07.920><c> same</c><00:03:08.239><c> time</c>

00:03:08.710 --> 00:03:08.720 align:start position:0%
at the same time
 

00:03:08.720 --> 00:03:11.670 align:start position:0%
at the same time
without<00:03:09.040><c> having</c><00:03:09.280><c> them</c><00:03:09.440><c> interfere</c><00:03:11.440><c> that's</c>

00:03:11.670 --> 00:03:11.680 align:start position:0%
without having them interfere that's
 

00:03:11.680 --> 00:03:13.910 align:start position:0%
without having them interfere that's
often<00:03:11.920><c> called</c><00:03:12.159><c> multiplexing</c>

00:03:13.910 --> 00:03:13.920 align:start position:0%
often called multiplexing
 

00:03:13.920 --> 00:03:16.309 align:start position:0%
often called multiplexing
um<00:03:14.400><c> because</c><00:03:15.120><c> there</c><00:03:15.280><c> may</c><00:03:15.440><c> be</c><00:03:15.599><c> a</c><00:03:15.680><c> lot</c><00:03:15.840><c> of</c><00:03:15.920><c> things</c>

00:03:16.309 --> 00:03:16.319 align:start position:0%
um because there may be a lot of things
 

00:03:16.319 --> 00:03:17.670 align:start position:0%
um because there may be a lot of things
happening<00:03:16.640><c> on</c><00:03:16.800><c> the</c><00:03:16.879><c> operating</c><00:03:17.280><c> system</c><00:03:17.599><c> at</c><00:03:17.599><c> the</c>

00:03:17.670 --> 00:03:17.680 align:start position:0%
happening on the operating system at the
 

00:03:17.680 --> 00:03:19.270 align:start position:0%
happening on the operating system at the
same<00:03:17.920><c> time</c><00:03:18.239><c> it's</c><00:03:18.480><c> it's</c><00:03:18.640><c> critical</c><00:03:18.959><c> that</c><00:03:19.120><c> they</c>

00:03:19.270 --> 00:03:19.280 align:start position:0%
same time it's it's critical that they
 

00:03:19.280 --> 00:03:20.550 align:start position:0%
same time it's it's critical that they
not<00:03:19.519><c> interfere</c>

00:03:20.550 --> 00:03:20.560 align:start position:0%
not interfere
 

00:03:20.560 --> 00:03:23.509 align:start position:0%
not interfere
unintentionally<00:03:21.920><c> even</c><00:03:22.159><c> if</c><00:03:22.239><c> they</c><00:03:22.400><c> have</c><00:03:22.480><c> bugs</c>

00:03:23.509 --> 00:03:23.519 align:start position:0%
unintentionally even if they have bugs
 

00:03:23.519 --> 00:03:24.470 align:start position:0%
unintentionally even if they have bugs
and<00:03:23.599><c> that's</c>

00:03:24.470 --> 00:03:24.480 align:start position:0%
and that's
 

00:03:24.480 --> 00:03:30.229 align:start position:0%
and that's
a<00:03:24.879><c> task</c><00:03:25.280><c> is</c><00:03:25.360><c> called</c><00:03:25.599><c> isolation</c><00:03:27.040><c> the</c><00:03:27.200><c> idea</c><00:03:27.599><c> that</c>

00:03:30.229 --> 00:03:30.239 align:start position:0%
 
 

00:03:30.239 --> 00:03:31.910 align:start position:0%
 
different<00:03:30.560><c> activities</c><00:03:31.440><c> should</c><00:03:31.599><c> not</c><00:03:31.760><c> be</c>

00:03:31.910 --> 00:03:31.920 align:start position:0%
different activities should not be
 

00:03:31.920 --> 00:03:33.509 align:start position:0%
different activities should not be
allowed<00:03:32.159><c> to</c><00:03:32.319><c> interfere</c><00:03:33.040><c> on</c><00:03:33.120><c> the</c><00:03:33.200><c> other</c><00:03:33.360><c> hand</c>

00:03:33.509 --> 00:03:33.519 align:start position:0%
allowed to interfere on the other hand
 

00:03:33.519 --> 00:03:35.030 align:start position:0%
allowed to interfere on the other hand
there<00:03:33.680><c> are</c><00:03:33.840><c> times</c><00:03:34.159><c> when</c>

00:03:35.030 --> 00:03:35.040 align:start position:0%
there are times when
 

00:03:35.040 --> 00:03:36.390 align:start position:0%
there are times when
different<00:03:35.360><c> activities</c><00:03:35.840><c> would</c><00:03:36.080><c> like</c><00:03:36.239><c> to</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
different activities would like to
 

00:03:36.400 --> 00:03:38.149 align:start position:0%
different activities would like to
interfere<00:03:37.040><c> we'd</c><00:03:37.200><c> like</c><00:03:37.360><c> to</c><00:03:37.519><c> interact</c><00:03:38.000><c> or</c>

00:03:38.149 --> 00:03:38.159 align:start position:0%
interfere we'd like to interact or
 

00:03:38.159 --> 00:03:39.190 align:start position:0%
interfere we'd like to interact or
cooperate<00:03:38.799><c> so</c>

00:03:39.190 --> 00:03:39.200 align:start position:0%
cooperate so
 

00:03:39.200 --> 00:03:41.190 align:start position:0%
cooperate so
for<00:03:39.360><c> example</c><00:03:39.680><c> if</c><00:03:39.840><c> i</c><00:03:40.000><c> create</c><00:03:40.319><c> a</c><00:03:40.640><c> file</c><00:03:40.959><c> with</c><00:03:41.120><c> a</c>

00:03:41.190 --> 00:03:41.200 align:start position:0%
for example if i create a file with a
 

00:03:41.200 --> 00:03:42.229 align:start position:0%
for example if i create a file with a
text<00:03:41.519><c> editor</c>

00:03:42.229 --> 00:03:42.239 align:start position:0%
text editor
 

00:03:42.239 --> 00:03:43.830 align:start position:0%
text editor
and<00:03:42.319><c> i'd</c><00:03:42.480><c> like</c><00:03:42.640><c> my</c><00:03:42.799><c> compiler</c><00:03:43.360><c> to</c><00:03:43.519><c> read</c><00:03:43.680><c> the</c>

00:03:43.830 --> 00:03:43.840 align:start position:0%
and i'd like my compiler to read the
 

00:03:43.840 --> 00:03:46.550 align:start position:0%
and i'd like my compiler to read the
file<00:03:44.959><c> we</c><00:03:45.200><c> definitely</c><00:03:45.519><c> want</c><00:03:45.680><c> to</c><00:03:45.840><c> allow</c><00:03:46.319><c> that</c>

00:03:46.550 --> 00:03:46.560 align:start position:0%
file we definitely want to allow that
 

00:03:46.560 --> 00:03:48.070 align:start position:0%
file we definitely want to allow that
kind<00:03:46.720><c> of</c><00:03:46.879><c> sharing</c>

00:03:48.070 --> 00:03:48.080 align:start position:0%
kind of sharing
 

00:03:48.080 --> 00:03:51.350 align:start position:0%
kind of sharing
so<00:03:48.239><c> we</c><00:03:48.319><c> want</c><00:03:48.480><c> to</c><00:03:48.560><c> allow</c><00:03:48.879><c> sharing</c><00:03:49.280><c> when</c><00:03:49.440><c> it's</c>

00:03:51.350 --> 00:03:51.360 align:start position:0%
so we want to allow sharing when it's
 

00:03:51.360 --> 00:03:55.670 align:start position:0%
so we want to allow sharing when it's
sort<00:03:51.519><c> of</c><00:03:51.680><c> what</c><00:03:51.840><c> the</c><00:03:52.080><c> user</c><00:03:52.319><c> has</c><00:03:52.560><c> in</c><00:03:52.640><c> mind</c><00:03:54.000><c> um</c>

00:03:55.670 --> 00:03:55.680 align:start position:0%
sort of what the user has in mind um
 

00:03:55.680 --> 00:03:58.229 align:start position:0%
sort of what the user has in mind um
but<00:03:55.920><c> in</c><00:03:56.000><c> many</c><00:03:56.239><c> circumstances</c><00:03:57.120><c> the</c><00:03:58.000><c> user</c>

00:03:58.229 --> 00:03:58.239 align:start position:0%
but in many circumstances the user
 

00:03:58.239 --> 00:03:59.670 align:start position:0%
but in many circumstances the user
doesn't<00:03:58.480><c> want</c><00:03:58.799><c> sharing</c><00:03:59.040><c> maybe</c><00:03:59.280><c> you're</c><00:03:59.439><c> logged</c>

00:03:59.670 --> 00:03:59.680 align:start position:0%
doesn't want sharing maybe you're logged
 

00:03:59.680 --> 00:03:59.990 align:start position:0%
doesn't want sharing maybe you're logged
into

00:03:59.990 --> 00:04:00.000 align:start position:0%
into
 

00:04:00.000 --> 00:04:02.470 align:start position:0%
into
a<00:04:00.239><c> time</c><00:04:00.480><c> sharing</c><00:04:00.720><c> machine</c><00:04:01.040><c> like</c><00:04:01.519><c> athena</c><00:04:02.319><c> and</c>

00:04:02.470 --> 00:04:02.480 align:start position:0%
a time sharing machine like athena and
 

00:04:02.480 --> 00:04:03.830 align:start position:0%
a time sharing machine like athena and
you<00:04:02.640><c> don't</c><00:04:02.720><c> want</c><00:04:02.959><c> other</c><00:04:03.120><c> people</c><00:04:03.280><c> to</c><00:04:03.439><c> read</c><00:04:03.599><c> your</c>

00:04:03.830 --> 00:04:03.840 align:start position:0%
you don't want other people to read your
 

00:04:03.840 --> 00:04:04.869 align:start position:0%
you don't want other people to read your
files

00:04:04.869 --> 00:04:04.879 align:start position:0%
files
 

00:04:04.879 --> 00:04:06.390 align:start position:0%
files
so<00:04:05.040><c> we</c><00:04:05.200><c> also</c><00:04:05.439><c> need</c><00:04:05.599><c> as</c><00:04:05.680><c> well</c><00:04:05.840><c> as</c><00:04:06.000><c> sharing</c><00:04:06.319><c> we</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
so we also need as well as sharing we
 

00:04:06.400 --> 00:04:09.670 align:start position:0%
so we also need as well as sharing we
want<00:04:06.560><c> to</c><00:04:06.959><c> not</c><00:04:07.280><c> share</c><00:04:07.519><c> when</c><00:04:07.680><c> we</c><00:04:07.760><c> don't</c><00:04:07.920><c> want</c><00:04:08.159><c> to</c>

00:04:09.670 --> 00:04:09.680 align:start position:0%
want to not share when we don't want to
 

00:04:09.680 --> 00:04:11.670 align:start position:0%
want to not share when we don't want to
which<00:04:09.920><c> we</c><00:04:10.080><c> could</c><00:04:10.239><c> call</c><00:04:10.560><c> security</c><00:04:11.360><c> or</c><00:04:11.599><c> a</c>

00:04:11.670 --> 00:04:11.680 align:start position:0%
which we could call security or a
 

00:04:11.680 --> 00:04:13.030 align:start position:0%
which we could call security or a
permission<00:04:12.239><c> system</c>

00:04:13.030 --> 00:04:13.040 align:start position:0%
permission system
 

00:04:13.040 --> 00:04:16.629 align:start position:0%
permission system
or<00:04:13.200><c> an</c><00:04:13.360><c> access</c><00:04:13.680><c> control</c><00:04:14.159><c> system</c>

00:04:16.629 --> 00:04:16.639 align:start position:0%
 
 

00:04:16.639 --> 00:04:17.990 align:start position:0%
 
another<00:04:16.959><c> thing</c><00:04:17.120><c> that</c><00:04:17.280><c> people</c><00:04:17.519><c> value</c><00:04:17.840><c> in</c>

00:04:17.990 --> 00:04:18.000 align:start position:0%
another thing that people value in
 

00:04:18.000 --> 00:04:19.909 align:start position:0%
another thing that people value in
operating<00:04:18.400><c> systems</c><00:04:18.799><c> is</c><00:04:19.199><c> if</c><00:04:19.359><c> you</c><00:04:19.519><c> spend</c><00:04:19.759><c> a</c><00:04:19.840><c> lot</c>

00:04:19.909 --> 00:04:19.919 align:start position:0%
operating systems is if you spend a lot
 

00:04:19.919 --> 00:04:21.749 align:start position:0%
operating systems is if you spend a lot
of<00:04:20.000><c> money</c><00:04:20.239><c> on</c><00:04:20.479><c> hardware</c><00:04:20.959><c> on</c><00:04:21.040><c> a</c><00:04:21.120><c> computer</c>

00:04:21.749 --> 00:04:21.759 align:start position:0%
of money on hardware on a computer
 

00:04:21.759 --> 00:04:23.350 align:start position:0%
of money on hardware on a computer
you'd<00:04:22.000><c> like</c><00:04:22.160><c> your</c><00:04:22.400><c> application</c><00:04:22.960><c> to</c><00:04:23.040><c> be</c><00:04:23.120><c> able</c>

00:04:23.350 --> 00:04:23.360 align:start position:0%
you'd like your application to be able
 

00:04:23.360 --> 00:04:25.670 align:start position:0%
you'd like your application to be able
to<00:04:23.440><c> get</c><00:04:23.840><c> the</c><00:04:24.000><c> sort</c><00:04:24.160><c> of</c><00:04:24.400><c> full</c><00:04:24.720><c> performance</c>

00:04:25.670 --> 00:04:25.680 align:start position:0%
to get the sort of full performance
 

00:04:25.680 --> 00:04:27.830 align:start position:0%
to get the sort of full performance
that<00:04:26.560><c> the</c><00:04:26.639><c> hardware</c><00:04:27.120><c> ought</c><00:04:27.280><c> to</c><00:04:27.440><c> be</c><00:04:27.520><c> able</c><00:04:27.680><c> to</c>

00:04:27.830 --> 00:04:27.840 align:start position:0%
that the hardware ought to be able to
 

00:04:27.840 --> 00:04:29.590 align:start position:0%
that the hardware ought to be able to
provide

00:04:29.590 --> 00:04:29.600 align:start position:0%
provide
 

00:04:29.600 --> 00:04:31.430 align:start position:0%
provide
and<00:04:30.479><c> you</c><00:04:30.560><c> know</c><00:04:30.720><c> a</c><00:04:30.720><c> lot</c><00:04:30.880><c> of</c><00:04:30.960><c> that</c><00:04:31.120><c> is</c><00:04:31.280><c> just</c>

00:04:31.430 --> 00:04:31.440 align:start position:0%
and you know a lot of that is just
 

00:04:31.440 --> 00:04:34.070 align:start position:0%
and you know a lot of that is just
application<00:04:32.080><c> programming</c>

00:04:34.070 --> 00:04:34.080 align:start position:0%
application programming
 

00:04:34.080 --> 00:04:36.469 align:start position:0%
application programming
but<00:04:34.880><c> inevitably</c><00:04:35.520><c> unfortunately</c><00:04:36.000><c> some</c><00:04:36.160><c> of</c><00:04:36.320><c> it</c>

00:04:36.469 --> 00:04:36.479 align:start position:0%
but inevitably unfortunately some of it
 

00:04:36.479 --> 00:04:38.469 align:start position:0%
but inevitably unfortunately some of it
is<00:04:36.720><c> the</c><00:04:36.960><c> operating</c><00:04:37.360><c> system</c><00:04:37.680><c> has</c><00:04:37.840><c> to</c><00:04:38.000><c> make</c><00:04:38.160><c> sure</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
is the operating system has to make sure
 

00:04:38.479 --> 00:04:38.950 align:start position:0%
is the operating system has to make sure
that

00:04:38.950 --> 00:04:38.960 align:start position:0%
that
 

00:04:38.960 --> 00:04:42.710 align:start position:0%
that
whatever<00:04:40.720><c> services</c><00:04:41.199><c> it</c><00:04:41.280><c> provides</c>

00:04:42.710 --> 00:04:42.720 align:start position:0%
whatever services it provides
 

00:04:42.720 --> 00:04:44.629 align:start position:0%
whatever services it provides
don't<00:04:42.880><c> get</c><00:04:43.120><c> in</c><00:04:43.199><c> the</c><00:04:43.280><c> way</c><00:04:43.680><c> of</c><00:04:44.160><c> applications</c>

00:04:44.629 --> 00:04:44.639 align:start position:0%
don't get in the way of applications
 

00:04:44.639 --> 00:04:46.150 align:start position:0%
don't get in the way of applications
getting<00:04:44.880><c> high</c><00:04:45.120><c> performance</c>

00:04:46.150 --> 00:04:46.160 align:start position:0%
getting high performance
 

00:04:46.160 --> 00:04:47.749 align:start position:0%
getting high performance
so<00:04:46.320><c> you</c><00:04:46.479><c> want</c><00:04:46.639><c> to</c><00:04:46.880><c> at</c><00:04:46.960><c> least</c><00:04:47.199><c> not</c><00:04:47.360><c> get</c><00:04:47.520><c> in</c><00:04:47.680><c> the</c>

00:04:47.749 --> 00:04:47.759 align:start position:0%
so you want to at least not get in the
 

00:04:47.759 --> 00:04:49.830 align:start position:0%
so you want to at least not get in the
way<00:04:48.320><c> and</c><00:04:48.880><c> maybe</c><00:04:49.199><c> even</c><00:04:49.440><c> help</c>

00:04:49.830 --> 00:04:49.840 align:start position:0%
way and maybe even help
 

00:04:49.840 --> 00:04:56.710 align:start position:0%
way and maybe even help
applications<00:04:50.479><c> achieve</c><00:04:51.600><c> good</c><00:04:54.840><c> performance</c>

00:04:56.710 --> 00:04:56.720 align:start position:0%
applications achieve good performance
 

00:04:56.720 --> 00:05:00.870 align:start position:0%
applications achieve good performance
finally<00:04:58.800><c> with</c><00:04:59.040><c> most</c><00:04:59.360><c> operating</c><00:04:59.759><c> systems</c>

00:05:00.870 --> 00:05:00.880 align:start position:0%
finally with most operating systems
 

00:05:00.880 --> 00:05:02.150 align:start position:0%
finally with most operating systems
have<00:05:01.039><c> to</c><00:05:01.120><c> support</c><00:05:01.440><c> a</c><00:05:01.520><c> wide</c><00:05:01.840><c> range</c><00:05:02.080><c> of</c>

00:05:02.150 --> 00:05:02.160 align:start position:0%
have to support a wide range of
 

00:05:02.160 --> 00:05:03.510 align:start position:0%
have to support a wide range of
different<00:05:02.479><c> applications</c><00:05:03.039><c> maybe</c><00:05:03.280><c> it's</c><00:05:03.440><c> a</c>

00:05:03.510 --> 00:05:03.520 align:start position:0%
different applications maybe it's a
 

00:05:03.520 --> 00:05:04.230 align:start position:0%
different applications maybe it's a
laptop

00:05:04.230 --> 00:05:04.240 align:start position:0%
laptop
 

00:05:04.240 --> 00:05:06.710 align:start position:0%
laptop
running<00:05:04.720><c> a</c><00:05:05.039><c> text</c><00:05:05.360><c> editor</c><00:05:05.919><c> maybe</c><00:05:06.160><c> it's</c><00:05:06.320><c> running</c>

00:05:06.710 --> 00:05:06.720 align:start position:0%
running a text editor maybe it's running
 

00:05:06.720 --> 00:05:07.749 align:start position:0%
running a text editor maybe it's running
games

00:05:07.749 --> 00:05:07.759 align:start position:0%
games
 

00:05:07.759 --> 00:05:09.350 align:start position:0%
games
maybe<00:05:08.000><c> your</c><00:05:08.160><c> operating</c><00:05:08.560><c> system</c><00:05:08.880><c> needs</c><00:05:09.120><c> to</c>

00:05:09.350 --> 00:05:09.360 align:start position:0%
maybe your operating system needs to
 

00:05:09.360 --> 00:05:11.590 align:start position:0%
maybe your operating system needs to
support<00:05:10.320><c> database</c><00:05:10.800><c> servers</c><00:05:11.360><c> or</c>

00:05:11.590 --> 00:05:11.600 align:start position:0%
support database servers or
 

00:05:11.600 --> 00:05:14.150 align:start position:0%
support database servers or
cloud<00:05:11.919><c> computation</c><00:05:12.880><c> and</c><00:05:13.440><c> usually</c><00:05:13.840><c> because</c>

00:05:14.150 --> 00:05:14.160 align:start position:0%
cloud computation and usually because
 

00:05:14.160 --> 00:05:15.670 align:start position:0%
cloud computation and usually because
operating<00:05:14.560><c> systems</c><00:05:14.960><c> are</c>

00:05:15.670 --> 00:05:15.680 align:start position:0%
operating systems are
 

00:05:15.680 --> 00:05:18.790 align:start position:0%
operating systems are
quite<00:05:15.919><c> expensive</c><00:05:16.639><c> to</c><00:05:16.880><c> design</c><00:05:17.280><c> and</c><00:05:17.360><c> build</c>

00:05:18.790 --> 00:05:18.800 align:start position:0%
quite expensive to design and build
 

00:05:18.800 --> 00:05:20.230 align:start position:0%
quite expensive to design and build
people<00:05:19.039><c> use</c><00:05:19.199><c> the</c><00:05:19.280><c> same</c><00:05:19.520><c> operating</c><00:05:19.919><c> systems</c>

00:05:20.230 --> 00:05:20.240 align:start position:0%
people use the same operating systems
 

00:05:20.240 --> 00:05:22.310 align:start position:0%
people use the same operating systems
for<00:05:20.400><c> many</c><00:05:20.800><c> different</c><00:05:21.120><c> tasks</c><00:05:21.600><c> like</c><00:05:21.840><c> linux</c><00:05:22.160><c> for</c>

00:05:22.310 --> 00:05:22.320 align:start position:0%
for many different tasks like linux for
 

00:05:22.320 --> 00:05:22.950 align:start position:0%
for many different tasks like linux for
example<00:05:22.639><c> which</c>

00:05:22.950 --> 00:05:22.960 align:start position:0%
example which
 

00:05:22.960 --> 00:05:25.189 align:start position:0%
example which
i'm<00:05:23.120><c> sure</c><00:05:23.360><c> many</c><00:05:23.520><c> of</c><00:05:23.600><c> you</c><00:05:23.759><c> are</c><00:05:23.840><c> running</c><00:05:24.880><c> is</c><00:05:24.960><c> used</c>

00:05:25.189 --> 00:05:25.199 align:start position:0%
i'm sure many of you are running is used
 

00:05:25.199 --> 00:05:27.110 align:start position:0%
i'm sure many of you are running is used
in<00:05:25.360><c> all</c><00:05:25.520><c> of</c><00:05:25.680><c> the</c><00:05:25.919><c> situations</c><00:05:26.479><c> i</c><00:05:26.560><c> mentioned</c><00:05:26.960><c> so</c>

00:05:27.110 --> 00:05:27.120 align:start position:0%
in all of the situations i mentioned so
 

00:05:27.120 --> 00:05:28.469 align:start position:0%
in all of the situations i mentioned so
the<00:05:27.199><c> same</c><00:05:27.360><c> operating</c><00:05:27.759><c> system</c><00:05:28.000><c> really</c><00:05:28.240><c> has</c><00:05:28.400><c> to</c>

00:05:28.469 --> 00:05:28.479 align:start position:0%
the same operating system really has to
 

00:05:28.479 --> 00:05:29.670 align:start position:0%
the same operating system really has to
be<00:05:28.560><c> able</c><00:05:28.720><c> to</c><00:05:28.960><c> support</c>

00:05:29.670 --> 00:05:29.680 align:start position:0%
be able to support
 

00:05:29.680 --> 00:05:36.790 align:start position:0%
be able to support
a<00:05:29.840><c> range</c><00:05:30.560><c> of</c><00:05:32.240><c> often</c><00:05:32.560><c> quite</c><00:05:32.800><c> different</c><00:05:33.120><c> uses</c>

00:05:36.790 --> 00:05:36.800 align:start position:0%
 
 

00:05:36.800 --> 00:05:39.749 align:start position:0%
 
so<00:05:37.360><c> we're</c><00:05:37.520><c> hoping</c><00:05:37.759><c> to</c><00:05:37.840><c> be</c><00:05:37.919><c> able</c><00:05:38.080><c> to</c><00:05:38.160><c> support</c><00:05:38.720><c> um</c>

00:05:39.749 --> 00:05:39.759 align:start position:0%
so we're hoping to be able to support um
 

00:05:39.759 --> 00:05:41.110 align:start position:0%
so we're hoping to be able to support um
sort<00:05:39.919><c> of</c><00:05:40.080><c> all</c><00:05:40.240><c> these</c><00:05:40.400><c> different</c><00:05:40.639><c> goals</c>

00:05:41.110 --> 00:05:41.120 align:start position:0%
sort of all these different goals
 

00:05:41.120 --> 00:05:44.629 align:start position:0%
sort of all these different goals
uh<00:05:41.440><c> simultaneously</c><00:05:43.600><c> um</c><00:05:44.000><c> and</c><00:05:44.080><c> we'll</c><00:05:44.240><c> hear</c><00:05:44.479><c> more</c>

00:05:44.629 --> 00:05:44.639 align:start position:0%
uh simultaneously um and we'll hear more
 

00:05:44.639 --> 00:05:45.510 align:start position:0%
uh simultaneously um and we'll hear more
about<00:05:44.800><c> all</c><00:05:44.960><c> of</c><00:05:45.120><c> them</c>

00:05:45.510 --> 00:05:45.520 align:start position:0%
about all of them
 

00:05:45.520 --> 00:05:48.950 align:start position:0%
about all of them
during<00:05:45.759><c> the</c><00:05:45.840><c> course</c><00:05:47.680><c> all</c><00:05:47.840><c> right</c><00:05:48.160><c> uh</c><00:05:48.479><c> operating</c>

00:05:48.950 --> 00:05:48.960 align:start position:0%
during the course all right uh operating
 

00:05:48.960 --> 00:05:49.670 align:start position:0%
during the course all right uh operating
systems

00:05:49.670 --> 00:05:49.680 align:start position:0%
systems
 

00:05:49.680 --> 00:05:53.110 align:start position:0%
systems
uh<00:05:50.320><c> sort</c><00:05:50.479><c> of</c><00:05:50.639><c> people</c><00:05:51.039><c> worked</c><00:05:51.440><c> out</c><00:05:51.759><c> a</c><00:05:51.919><c> set</c><00:05:52.160><c> of</c><00:05:52.560><c> um</c>

00:05:53.110 --> 00:05:53.120 align:start position:0%
uh sort of people worked out a set of um
 

00:05:53.120 --> 00:05:56.070 align:start position:0%
uh sort of people worked out a set of um
design<00:05:53.759><c> ideas</c><00:05:54.720><c> over</c><00:05:54.960><c> the</c><00:05:55.039><c> decades</c><00:05:55.520><c> that</c><00:05:56.000><c> have</c>

00:05:56.070 --> 00:05:56.080 align:start position:0%
design ideas over the decades that have
 

00:05:56.080 --> 00:05:57.189 align:start position:0%
design ideas over the decades that have
worked<00:05:56.400><c> pretty</c><00:05:56.639><c> well</c>

00:05:57.189 --> 00:05:57.199 align:start position:0%
worked pretty well
 

00:05:57.199 --> 00:06:00.070 align:start position:0%
worked pretty well
sort<00:05:57.360><c> of</c><00:05:57.520><c> ways</c><00:05:57.759><c> of</c><00:05:57.919><c> organizing</c><00:05:58.479><c> things</c><00:06:00.000><c> and</c>

00:06:00.070 --> 00:06:00.080 align:start position:0%
sort of ways of organizing things and
 

00:06:00.080 --> 00:06:04.830 align:start position:0%
sort of ways of organizing things and
i'm<00:06:00.160><c> going</c><00:06:00.319><c> to</c><00:06:00.400><c> lay</c><00:06:00.639><c> out</c><00:06:00.800><c> for</c><00:06:00.960><c> you</c><00:06:01.199><c> the</c><00:06:01.440><c> sort</c><00:06:01.680><c> of</c>

00:06:04.830 --> 00:06:04.840 align:start position:0%
 
 

00:06:04.840 --> 00:06:06.150 align:start position:0%
 
classic

00:06:06.150 --> 00:06:06.160 align:start position:0%
classic
 

00:06:06.160 --> 00:06:08.550 align:start position:0%
classic
organization<00:06:07.360><c> it's</c><00:06:07.600><c> a</c><00:06:07.680><c> sort</c><00:06:07.919><c> of</c><00:06:08.080><c> standard</c>

00:06:08.550 --> 00:06:08.560 align:start position:0%
organization it's a sort of standard
 

00:06:08.560 --> 00:06:09.270 align:start position:0%
organization it's a sort of standard
deal<00:06:08.960><c> for</c>

00:06:09.270 --> 00:06:09.280 align:start position:0%
deal for
 

00:06:09.280 --> 00:06:13.350 align:start position:0%
deal for
uh<00:06:10.880><c> for</c><00:06:11.039><c> this</c><00:06:11.199><c> course</c><00:06:11.759><c> and</c>

00:06:13.350 --> 00:06:13.360 align:start position:0%
uh for this course and
 

00:06:13.360 --> 00:06:16.230 align:start position:0%
uh for this course and
um<00:06:14.400><c> is</c><00:06:14.560><c> actually</c><00:06:14.800><c> quite</c><00:06:15.039><c> common</c><00:06:15.360><c> around</c><00:06:16.080><c> for</c>

00:06:16.230 --> 00:06:16.240 align:start position:0%
um is actually quite common around for
 

00:06:16.240 --> 00:06:17.749 align:start position:0%
um is actually quite common around for
many<00:06:16.479><c> operating</c><00:06:16.880><c> systems</c><00:06:17.199><c> so</c><00:06:17.360><c> this</c><00:06:17.520><c> is</c><00:06:17.600><c> sort</c>

00:06:17.749 --> 00:06:17.759 align:start position:0%
many operating systems so this is sort
 

00:06:17.759 --> 00:06:18.150 align:start position:0%
many operating systems so this is sort
of

00:06:18.150 --> 00:06:18.160 align:start position:0%
of
 

00:06:18.160 --> 00:06:21.830 align:start position:0%
of
you<00:06:18.240><c> know</c><00:06:18.479><c> os</c><00:06:18.960><c> internal</c><00:06:19.360><c> organization</c><00:06:20.319><c> or</c>

00:06:21.830 --> 00:06:21.840 align:start position:0%
you know os internal organization or
 

00:06:21.840 --> 00:06:25.189 align:start position:0%
you know os internal organization or
um<00:06:23.280><c> the</c><00:06:23.440><c> way</c><00:06:23.600><c> i</c><00:06:23.680><c> think</c><00:06:23.840><c> about</c><00:06:24.160><c> it</c><00:06:24.319><c> is</c><00:06:24.560><c> a</c>

00:06:25.189 --> 00:06:25.199 align:start position:0%
um the way i think about it is a
 

00:06:25.199 --> 00:06:28.230 align:start position:0%
um the way i think about it is a
in<00:06:25.360><c> terms</c><00:06:25.680><c> of</c><00:06:25.919><c> a</c><00:06:27.120><c> draw</c><00:06:27.440><c> a</c><00:06:27.520><c> box</c><00:06:27.840><c> for</c><00:06:28.000><c> the</c>

00:06:28.230 --> 00:06:28.240 align:start position:0%
in terms of a draw a box for the
 

00:06:28.240 --> 00:06:29.110 align:start position:0%
in terms of a draw a box for the
computer

00:06:29.110 --> 00:06:29.120 align:start position:0%
computer
 

00:06:29.120 --> 00:06:32.150 align:start position:0%
computer
um<00:06:29.759><c> the</c><00:06:30.000><c> computer</c><00:06:30.960><c> sort</c><00:06:31.120><c> of</c>

00:06:32.150 --> 00:06:32.160 align:start position:0%
um the computer sort of
 

00:06:32.160 --> 00:06:33.749 align:start position:0%
um the computer sort of
comes<00:06:32.479><c> with</c><00:06:32.560><c> a</c><00:06:32.639><c> bunch</c><00:06:32.800><c> of</c><00:06:32.880><c> hardware</c><00:06:33.280><c> resources</c>

00:06:33.749 --> 00:06:33.759 align:start position:0%
comes with a bunch of hardware resources
 

00:06:33.759 --> 00:06:34.950 align:start position:0%
comes with a bunch of hardware resources
which<00:06:33.919><c> i'll</c><00:06:34.000><c> put</c><00:06:34.160><c> at</c><00:06:34.240><c> the</c><00:06:34.319><c> bottom</c><00:06:34.720><c> maybe</c>

00:06:34.950 --> 00:06:34.960 align:start position:0%
which i'll put at the bottom maybe
 

00:06:34.960 --> 00:06:35.909 align:start position:0%
which i'll put at the bottom maybe
there's<00:06:35.199><c> cpu</c>

00:06:35.909 --> 00:06:35.919 align:start position:0%
there's cpu
 

00:06:35.919 --> 00:06:39.270 align:start position:0%
there's cpu
and<00:06:36.080><c> ram</c><00:06:37.360><c> and</c><00:06:37.520><c> a</c><00:06:37.759><c> disk</c><00:06:38.240><c> for</c><00:06:38.479><c> storage</c>

00:06:39.270 --> 00:06:39.280 align:start position:0%
and ram and a disk for storage
 

00:06:39.280 --> 00:06:42.230 align:start position:0%
and ram and a disk for storage
and<00:06:39.759><c> maybe</c><00:06:40.080><c> a</c><00:06:40.240><c> network</c><00:06:41.039><c> interface</c><00:06:41.840><c> so</c><00:06:42.000><c> this</c>

00:06:42.230 --> 00:06:42.240 align:start position:0%
and maybe a network interface so this
 

00:06:42.240 --> 00:06:43.510 align:start position:0%
and maybe a network interface so this
sort<00:06:42.479><c> of</c><00:06:42.560><c> hardware</c><00:06:43.120><c> that's</c>

00:06:43.510 --> 00:06:43.520 align:start position:0%
sort of hardware that's
 

00:06:43.520 --> 00:06:47.350 align:start position:0%
sort of hardware that's
the<00:06:43.600><c> lowest</c><00:06:44.000><c> layer</c><00:06:44.800><c> um</c><00:06:46.160><c> so</c><00:06:46.319><c> if</c><00:06:46.479><c> at</c><00:06:46.560><c> the</c><00:06:46.720><c> top</c>

00:06:47.350 --> 00:06:47.360 align:start position:0%
the lowest layer um so if at the top
 

00:06:47.360 --> 00:06:49.589 align:start position:0%
the lowest layer um so if at the top
we<00:06:47.520><c> want</c><00:06:47.680><c> to</c><00:06:47.759><c> run</c><00:06:48.160><c> various</c><00:06:48.560><c> applications</c>

00:06:49.589 --> 00:06:49.599 align:start position:0%
we want to run various applications
 

00:06:49.599 --> 00:06:51.670 align:start position:0%
we want to run various applications
maybe<00:06:50.080><c> a</c><00:06:50.240><c> text</c><00:06:50.560><c> editor</c><00:06:50.880><c> i</c><00:06:51.039><c> happen</c><00:06:51.199><c> to</c><00:06:51.360><c> use</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
maybe a text editor i happen to use
 

00:06:51.680 --> 00:06:53.909 align:start position:0%
maybe a text editor i happen to use
vi<00:06:52.160><c> as</c><00:06:52.319><c> a</c><00:06:52.400><c> text</c><00:06:52.720><c> editor</c><00:06:53.520><c> if</c><00:06:53.599><c> you're</c><00:06:53.759><c> going</c><00:06:53.840><c> to</c>

00:06:53.909 --> 00:06:53.919 align:start position:0%
vi as a text editor if you're going to
 

00:06:53.919 --> 00:06:55.350 align:start position:0%
vi as a text editor if you're going to
run<00:06:54.080><c> a</c><00:06:54.319><c> c</c><00:06:54.560><c> compiler</c>

00:06:55.350 --> 00:06:55.360 align:start position:0%
run a c compiler
 

00:06:55.360 --> 00:06:58.469 align:start position:0%
run a c compiler
say<00:06:55.680><c> cc</c><00:06:56.639><c> you</c><00:06:56.800><c> know</c><00:06:57.360><c> if</c><00:06:57.520><c> you</c><00:06:57.680><c> run</c><00:06:57.840><c> lots</c><00:06:58.080><c> of</c><00:06:58.240><c> other</c>

00:06:58.469 --> 00:06:58.479 align:start position:0%
say cc you know if you run lots of other
 

00:06:58.479 --> 00:06:59.830 align:start position:0%
say cc you know if you run lots of other
things<00:06:58.720><c> we're</c><00:06:58.960><c> going</c><00:06:59.039><c> to</c><00:06:59.120><c> talk</c><00:06:59.360><c> a</c><00:06:59.440><c> lot</c><00:06:59.599><c> today</c>

00:06:59.830 --> 00:06:59.840 align:start position:0%
things we're going to talk a lot today
 

00:06:59.840 --> 00:07:02.870 align:start position:0%
things we're going to talk a lot today
about<00:07:00.080><c> the</c><00:07:00.319><c> shell</c><00:07:00.639><c> which</c><00:07:00.880><c> is</c><00:07:01.039><c> the</c>

00:07:02.870 --> 00:07:02.880 align:start position:0%
about the shell which is the
 

00:07:02.880 --> 00:07:04.870 align:start position:0%
about the shell which is the
command<00:07:03.280><c> line</c><00:07:03.599><c> interface</c><00:07:04.319><c> so</c><00:07:04.479><c> we</c><00:07:04.560><c> have</c><00:07:04.720><c> all</c>

00:07:04.870 --> 00:07:04.880 align:start position:0%
command line interface so we have all
 

00:07:04.880 --> 00:07:05.830 align:start position:0%
command line interface so we have all
these<00:07:04.960><c> different</c><00:07:05.199><c> programs</c><00:07:05.599><c> that</c><00:07:05.759><c> are</c>

00:07:05.830 --> 00:07:05.840 align:start position:0%
these different programs that are
 

00:07:05.840 --> 00:07:07.749 align:start position:0%
these different programs that are
running

00:07:07.749 --> 00:07:07.759 align:start position:0%
running
 

00:07:07.759 --> 00:07:10.550 align:start position:0%
running
and<00:07:07.840><c> this</c><00:07:08.080><c> is</c><00:07:08.400><c> the</c><00:07:08.560><c> sort</c><00:07:08.720><c> of</c><00:07:09.120><c> world</c><00:07:09.520><c> in</c><00:07:09.599><c> which</c>

00:07:10.550 --> 00:07:10.560 align:start position:0%
and this is the sort of world in which
 

00:07:10.560 --> 00:07:12.390 align:start position:0%
and this is the sort of world in which
applications<00:07:11.120><c> run</c><00:07:11.360><c> is</c><00:07:11.520><c> usually</c><00:07:11.759><c> called</c><00:07:12.000><c> user</c>

00:07:12.390 --> 00:07:12.400 align:start position:0%
applications run is usually called user
 

00:07:12.400 --> 00:07:14.550 align:start position:0%
applications run is usually called user
space

00:07:14.550 --> 00:07:14.560 align:start position:0%
space
 

00:07:14.560 --> 00:07:16.870 align:start position:0%
space
and<00:07:14.720><c> as</c><00:07:14.880><c> distinct</c><00:07:15.280><c> from</c><00:07:15.440><c> that</c><00:07:15.599><c> there's</c><00:07:16.400><c> a</c>

00:07:16.870 --> 00:07:16.880 align:start position:0%
and as distinct from that there's a
 

00:07:16.880 --> 00:07:19.430 align:start position:0%
and as distinct from that there's a
single<00:07:17.360><c> program</c>

00:07:19.430 --> 00:07:19.440 align:start position:0%
single program
 

00:07:19.440 --> 00:07:21.270 align:start position:0%
single program
um<00:07:20.000><c> a</c><00:07:20.160><c> special</c><00:07:20.560><c> program</c><00:07:20.880><c> that's</c><00:07:21.039><c> always</c>

00:07:21.270 --> 00:07:21.280 align:start position:0%
um a special program that's always
 

00:07:21.280 --> 00:07:23.749 align:start position:0%
um a special program that's always
running<00:07:22.160><c> called</c><00:07:22.400><c> the</c><00:07:22.560><c> kernel</c><00:07:22.960><c> and</c><00:07:23.360><c> the</c><00:07:23.440><c> kernel</c>

00:07:23.749 --> 00:07:23.759 align:start position:0%
running called the kernel and the kernel
 

00:07:23.759 --> 00:07:24.629 align:start position:0%
running called the kernel and the kernel
is<00:07:23.840><c> sort</c><00:07:24.000><c> of</c><00:07:24.080><c> the</c>

00:07:24.629 --> 00:07:24.639 align:start position:0%
is sort of the
 

00:07:24.639 --> 00:07:26.469 align:start position:0%
is sort of the
guardian<00:07:25.360><c> of</c><00:07:25.440><c> the</c><00:07:25.680><c> resources</c><00:07:26.240><c> of</c><00:07:26.319><c> the</c>

00:07:26.469 --> 00:07:26.479 align:start position:0%
guardian of the resources of the
 

00:07:26.479 --> 00:07:27.990 align:start position:0%
guardian of the resources of the
computer<00:07:27.199><c> it's</c><00:07:27.360><c> what</c><00:07:27.599><c> first</c>

00:07:27.990 --> 00:07:28.000 align:start position:0%
computer it's what first
 

00:07:28.000 --> 00:07:30.629 align:start position:0%
computer it's what first
boots<00:07:28.319><c> up</c><00:07:28.720><c> you</c><00:07:28.880><c> turn</c><00:07:29.120><c> on</c><00:07:29.280><c> the</c><00:07:29.360><c> computer</c>

00:07:30.629 --> 00:07:30.639 align:start position:0%
boots up you turn on the computer
 

00:07:30.639 --> 00:07:33.589 align:start position:0%
boots up you turn on the computer
there's<00:07:30.800><c> just</c><00:07:30.960><c> one</c><00:07:31.199><c> of</c><00:07:31.280><c> it</c><00:07:31.440><c> it</c><00:07:31.520><c> maintains</c><00:07:32.000><c> data</c>

00:07:33.589 --> 00:07:33.599 align:start position:0%
there's just one of it it maintains data
 

00:07:33.599 --> 00:07:35.589 align:start position:0%
there's just one of it it maintains data
to<00:07:34.240><c> help</c><00:07:34.479><c> it</c><00:07:34.720><c> manage</c><00:07:35.120><c> each</c><00:07:35.280><c> of</c><00:07:35.360><c> these</c>

00:07:35.589 --> 00:07:35.599 align:start position:0%
to help it manage each of these
 

00:07:35.599 --> 00:07:37.350 align:start position:0%
to help it manage each of these
processes<00:07:36.160><c> and</c><00:07:36.319><c> the</c><00:07:36.400><c> kernel</c><00:07:36.720><c> also</c><00:07:36.960><c> maintains</c>

00:07:37.350 --> 00:07:37.360 align:start position:0%
processes and the kernel also maintains
 

00:07:37.360 --> 00:07:40.070 align:start position:0%
processes and the kernel also maintains
lots<00:07:37.520><c> of</c><00:07:37.599><c> data</c><00:07:37.919><c> structures</c><00:07:38.319><c> to</c><00:07:38.400><c> help</c><00:07:38.639><c> it</c>

00:07:40.070 --> 00:07:40.080 align:start position:0%
lots of data structures to help it
 

00:07:40.080 --> 00:07:43.350 align:start position:0%
lots of data structures to help it
interface<00:07:40.800><c> and</c><00:07:42.560><c> all</c><00:07:42.720><c> the</c><00:07:42.880><c> different</c><00:07:43.039><c> kinds</c><00:07:43.280><c> of</c>

00:07:43.350 --> 00:07:43.360 align:start position:0%
interface and all the different kinds of
 

00:07:43.360 --> 00:07:45.029 align:start position:0%
interface and all the different kinds of
hardware<00:07:43.919><c> that</c>

00:07:45.029 --> 00:07:45.039 align:start position:0%
hardware that
 

00:07:45.039 --> 00:07:49.350 align:start position:0%
hardware that
uh<00:07:45.919><c> these</c><00:07:46.240><c> user</c><00:07:46.560><c> programs</c><00:07:47.919><c> need</c><00:07:48.080><c> to</c><00:07:48.240><c> use</c>

00:07:49.350 --> 00:07:49.360 align:start position:0%
uh these user programs need to use
 

00:07:49.360 --> 00:07:51.350 align:start position:0%
uh these user programs need to use
the<00:07:49.520><c> kernel</c><00:07:49.919><c> also</c><00:07:50.240><c> has</c><00:07:50.479><c> built</c><00:07:50.800><c> in</c><00:07:50.879><c> a</c><00:07:50.960><c> bunch</c><00:07:51.199><c> of</c>

00:07:51.350 --> 00:07:51.360 align:start position:0%
the kernel also has built in a bunch of
 

00:07:51.360 --> 00:07:53.510 align:start position:0%
the kernel also has built in a bunch of
services<00:07:52.319><c> um</c>

00:07:53.510 --> 00:07:53.520 align:start position:0%
services um
 

00:07:53.520 --> 00:07:55.990 align:start position:0%
services um
and<00:07:53.840><c> so</c><00:07:54.000><c> for</c><00:07:54.160><c> example</c><00:07:55.120><c> there's</c><00:07:55.360><c> typically</c><00:07:55.840><c> a</c>

00:07:55.990 --> 00:07:56.000 align:start position:0%
and so for example there's typically a
 

00:07:56.000 --> 00:07:59.189 align:start position:0%
and so for example there's typically a
file<00:07:56.840><c> system</c><00:07:57.919><c> implementation</c><00:07:58.720><c> inside</c><00:07:59.120><c> the</c>

00:07:59.189 --> 00:07:59.199 align:start position:0%
file system implementation inside the
 

00:07:59.199 --> 00:08:00.070 align:start position:0%
file system implementation inside the
kernel<00:07:59.599><c> that</c>

00:08:00.070 --> 00:08:00.080 align:start position:0%
kernel that
 

00:08:00.080 --> 00:08:02.710 align:start position:0%
kernel that
implements<00:08:00.560><c> things</c><00:08:00.800><c> like</c><00:08:01.919><c> file</c><00:08:02.240><c> names</c><00:08:02.560><c> and</c>

00:08:02.710 --> 00:08:02.720 align:start position:0%
implements things like file names and
 

00:08:02.720 --> 00:08:03.670 align:start position:0%
implements things like file names and
file<00:08:03.039><c> contents</c>

00:08:03.670 --> 00:08:03.680 align:start position:0%
file contents
 

00:08:03.680 --> 00:08:06.469 align:start position:0%
file contents
and<00:08:03.919><c> directories</c><00:08:04.720><c> and</c><00:08:05.680><c> understands</c><00:08:06.160><c> how</c><00:08:06.319><c> to</c>

00:08:06.469 --> 00:08:06.479 align:start position:0%
and directories and understands how to
 

00:08:06.479 --> 00:08:06.950 align:start position:0%
and directories and understands how to
store

00:08:06.950 --> 00:08:06.960 align:start position:0%
store
 

00:08:06.960 --> 00:08:08.869 align:start position:0%
store
the<00:08:07.120><c> files</c><00:08:07.440><c> in</c><00:08:07.520><c> the</c><00:08:07.599><c> disk</c><00:08:07.840><c> so</c><00:08:08.000><c> your</c><00:08:08.479><c> programs</c>

00:08:08.869 --> 00:08:08.879 align:start position:0%
the files in the disk so your programs
 

00:08:08.879 --> 00:08:10.309 align:start position:0%
the files in the disk so your programs
are<00:08:08.960><c> going</c><00:08:09.039><c> to</c><00:08:09.120><c> talk</c><00:08:09.280><c> to</c><00:08:09.360><c> the</c><00:08:09.599><c> files</c><00:08:09.919><c> inside</c>

00:08:10.309 --> 00:08:10.319 align:start position:0%
are going to talk to the files inside
 

00:08:10.319 --> 00:08:11.990 align:start position:0%
are going to talk to the files inside
the<00:08:10.400><c> kernel</c><00:08:10.800><c> and</c><00:08:10.879><c> the</c><00:08:11.440><c> file</c><00:08:11.680><c> system</c>

00:08:11.990 --> 00:08:12.000 align:start position:0%
the kernel and the file system
 

00:08:12.000 --> 00:08:13.430 align:start position:0%
the kernel and the file system
implementation<00:08:12.560><c> is</c><00:08:12.639><c> going</c><00:08:12.800><c> to</c>

00:08:13.430 --> 00:08:13.440 align:start position:0%
implementation is going to
 

00:08:13.440 --> 00:08:17.749 align:start position:0%
implementation is going to
talk<00:08:13.680><c> to</c><00:08:13.840><c> the</c><00:08:14.000><c> disk</c><00:08:15.360><c> and</c><00:08:15.440><c> in</c><00:08:15.599><c> this</c><00:08:15.840><c> course</c>

00:08:17.749 --> 00:08:17.759 align:start position:0%
talk to the disk and in this course
 

00:08:17.759 --> 00:08:19.830 align:start position:0%
talk to the disk and in this course
what<00:08:18.000><c> we</c><00:08:18.160><c> mostly</c><00:08:18.560><c> focus</c><00:08:18.960><c> on</c><00:08:19.199><c> is</c><00:08:19.520><c> all</c><00:08:19.680><c> the</c>

00:08:19.830 --> 00:08:19.840 align:start position:0%
what we mostly focus on is all the
 

00:08:19.840 --> 00:08:21.350 align:start position:0%
what we mostly focus on is all the
things<00:08:20.080><c> that</c><00:08:20.160><c> have</c><00:08:20.400><c> to</c><00:08:20.479><c> happen</c><00:08:20.800><c> inside</c><00:08:21.199><c> the</c>

00:08:21.350 --> 00:08:21.360 align:start position:0%
things that have to happen inside the
 

00:08:21.360 --> 00:08:22.469 align:start position:0%
things that have to happen inside the
kernel

00:08:22.469 --> 00:08:22.479 align:start position:0%
kernel
 

00:08:22.479 --> 00:08:24.550 align:start position:0%
kernel
and<00:08:22.879><c> on</c><00:08:23.039><c> the</c><00:08:23.120><c> interfaces</c><00:08:23.840><c> between</c><00:08:24.160><c> user</c>

00:08:24.550 --> 00:08:24.560 align:start position:0%
and on the interfaces between user
 

00:08:24.560 --> 00:08:27.430 align:start position:0%
and on the interfaces between user
programs<00:08:25.120><c> and</c><00:08:25.199><c> the</c><00:08:25.360><c> kernel</c>

00:08:27.430 --> 00:08:27.440 align:start position:0%
programs and the kernel
 

00:08:27.440 --> 00:08:29.189 align:start position:0%
programs and the kernel
as<00:08:27.599><c> well</c><00:08:27.840><c> as</c><00:08:28.000><c> the</c><00:08:28.080><c> sort</c><00:08:28.240><c> of</c><00:08:28.400><c> structure</c><00:08:28.800><c> of</c><00:08:28.960><c> the</c>

00:08:29.189 --> 00:08:29.199 align:start position:0%
as well as the sort of structure of the
 

00:08:29.199 --> 00:08:30.550 align:start position:0%
as well as the sort of structure of the
software

00:08:30.550 --> 00:08:30.560 align:start position:0%
software
 

00:08:30.560 --> 00:08:34.230 align:start position:0%
software
inside<00:08:30.879><c> the</c><00:08:31.039><c> kernel</c><00:08:32.000><c> so</c><00:08:33.360><c> we</c><00:08:33.519><c> care</c><00:08:33.680><c> a</c><00:08:33.760><c> lot</c><00:08:34.000><c> about</c>

00:08:34.230 --> 00:08:34.240 align:start position:0%
inside the kernel so we care a lot about
 

00:08:34.240 --> 00:08:34.949 align:start position:0%
inside the kernel so we care a lot about
these

00:08:34.949 --> 00:08:34.959 align:start position:0%
these
 

00:08:34.959 --> 00:08:37.230 align:start position:0%
these
services<00:08:36.000><c> inside</c><00:08:36.320><c> the</c><00:08:36.479><c> kernel</c>

00:08:37.230 --> 00:08:37.240 align:start position:0%
services inside the kernel
 

00:08:37.240 --> 00:08:38.469 align:start position:0%
services inside the kernel
[Music]

00:08:38.469 --> 00:08:38.479 align:start position:0%
[Music]
 

00:08:38.479 --> 00:08:39.829 align:start position:0%
[Music]
one<00:08:38.640><c> of</c><00:08:38.719><c> them</c><00:08:38.880><c> is</c><00:08:39.039><c> the</c><00:08:39.120><c> file</c><00:08:39.360><c> system</c><00:08:39.680><c> i</c>

00:08:39.829 --> 00:08:39.839 align:start position:0%
one of them is the file system i
 

00:08:39.839 --> 00:08:43.029 align:start position:0%
one of them is the file system i
mentioned<00:08:40.240><c> there's</c><00:08:40.560><c> also</c><00:08:41.120><c> uh</c>

00:08:43.029 --> 00:08:43.039 align:start position:0%
mentioned there's also uh
 

00:08:43.039 --> 00:08:44.949 align:start position:0%
mentioned there's also uh
management<00:08:43.599><c> of</c><00:08:43.760><c> processes</c><00:08:44.399><c> each</c><00:08:44.560><c> of</c><00:08:44.640><c> these</c>

00:08:44.949 --> 00:08:44.959 align:start position:0%
management of processes each of these
 

00:08:44.959 --> 00:08:46.230 align:start position:0%
management of processes each of these
running<00:08:45.440><c> programs</c>

00:08:46.230 --> 00:08:46.240 align:start position:0%
running programs
 

00:08:46.240 --> 00:08:47.829 align:start position:0%
running programs
is<00:08:46.320><c> called</c><00:08:46.560><c> a</c><00:08:46.720><c> process</c><00:08:47.200><c> and</c><00:08:47.279><c> it</c><00:08:47.360><c> has</c><00:08:47.600><c> things</c>

00:08:47.829 --> 00:08:47.839 align:start position:0%
is called a process and it has things
 

00:08:47.839 --> 00:08:50.070 align:start position:0%
is called a process and it has things
like<00:08:48.240><c> its</c><00:08:48.480><c> own</c><00:08:48.640><c> memory</c><00:08:49.120><c> for</c><00:08:49.360><c> example</c>

00:08:50.070 --> 00:08:50.080 align:start position:0%
like its own memory for example
 

00:08:50.080 --> 00:08:53.590 align:start position:0%
like its own memory for example
as<00:08:50.240><c> well</c><00:08:50.480><c> as</c><00:08:50.800><c> a</c><00:08:51.760><c> share</c><00:08:52.160><c> of</c><00:08:52.320><c> the</c><00:08:52.399><c> cpu</c><00:08:52.959><c> time</c>

00:08:53.590 --> 00:08:53.600 align:start position:0%
as well as a share of the cpu time
 

00:08:53.600 --> 00:08:56.790 align:start position:0%
as well as a share of the cpu time
so<00:08:55.040><c> kernel</c><00:08:55.360><c> manages</c>

00:08:56.790 --> 00:08:56.800 align:start position:0%
so kernel manages
 

00:08:56.800 --> 00:09:00.150 align:start position:0%
so kernel manages
processes<00:08:58.480><c> as</c><00:08:58.640><c> a</c><00:08:58.800><c> kernel</c><00:08:59.200><c> service</c>

00:09:00.150 --> 00:09:00.160 align:start position:0%
processes as a kernel service
 

00:09:00.160 --> 00:09:01.990 align:start position:0%
processes as a kernel service
[Music]

00:09:01.990 --> 00:09:02.000 align:start position:0%
[Music]
 

00:09:02.000 --> 00:09:05.030 align:start position:0%
[Music]
the<00:09:02.240><c> kernel</c><00:09:02.560><c> manages</c><00:09:02.959><c> the</c><00:09:03.200><c> allocation</c><00:09:04.000><c> of</c>

00:09:05.030 --> 00:09:05.040 align:start position:0%
the kernel manages the allocation of
 

00:09:05.040 --> 00:09:07.030 align:start position:0%
the kernel manages the allocation of
memory<00:09:05.839><c> the</c><00:09:06.000><c> different</c><00:09:06.240><c> processes</c><00:09:06.800><c> need</c>

00:09:07.030 --> 00:09:07.040 align:start position:0%
memory the different processes need
 

00:09:07.040 --> 00:09:11.110 align:start position:0%
memory the different processes need
different<00:09:07.279><c> amounts</c><00:09:07.519><c> of</c><00:09:07.600><c> memory</c><00:09:08.000><c> the</c><00:09:08.160><c> kernel</c>

00:09:11.110 --> 00:09:11.120 align:start position:0%
 
 

00:09:11.120 --> 00:09:13.509 align:start position:0%
 
multiplexes<00:09:11.920><c> and</c><00:09:12.000><c> divides</c><00:09:12.399><c> up</c><00:09:12.560><c> the</c><00:09:12.640><c> memory</c>

00:09:13.509 --> 00:09:13.519 align:start position:0%
multiplexes and divides up the memory
 

00:09:13.519 --> 00:09:16.310 align:start position:0%
multiplexes and divides up the memory
allocates<00:09:14.000><c> the</c><00:09:14.080><c> memory</c>

00:09:16.310 --> 00:09:16.320 align:start position:0%
allocates the memory
 

00:09:16.320 --> 00:09:22.230 align:start position:0%
allocates the memory
among<00:09:16.640><c> all</c><00:09:16.800><c> the</c><00:09:16.880><c> different</c><00:09:20.839><c> processes</c>

00:09:22.230 --> 00:09:22.240 align:start position:0%
among all the different processes
 

00:09:22.240 --> 00:09:25.670 align:start position:0%
among all the different processes
um<00:09:24.240><c> the</c><00:09:24.399><c> kernel</c><00:09:24.720><c> as</c><00:09:24.880><c> i</c><00:09:24.959><c> mentioned</c>

00:09:25.670 --> 00:09:25.680 align:start position:0%
um the kernel as i mentioned
 

00:09:25.680 --> 00:09:27.030 align:start position:0%
um the kernel as i mentioned
influenced<00:09:26.000><c> the</c><00:09:26.080><c> file</c><00:09:26.320><c> system</c><00:09:26.560><c> file</c><00:09:26.800><c> system</c>

00:09:27.030 --> 00:09:27.040 align:start position:0%
influenced the file system file system
 

00:09:27.040 --> 00:09:28.790 align:start position:0%
influenced the file system file system
really<00:09:27.279><c> comes</c><00:09:27.519><c> in</c><00:09:27.680><c> two</c><00:09:27.839><c> or</c><00:09:28.000><c> three</c>

00:09:28.790 --> 00:09:28.800 align:start position:0%
really comes in two or three
 

00:09:28.800 --> 00:09:31.509 align:start position:0%
really comes in two or three
logical<00:09:29.440><c> or</c><00:09:29.760><c> a</c><00:09:29.839><c> bunch</c><00:09:30.080><c> of</c><00:09:30.160><c> logical</c><00:09:30.640><c> parts</c><00:09:30.959><c> but</c>

00:09:31.509 --> 00:09:31.519 align:start position:0%
logical or a bunch of logical parts but
 

00:09:31.519 --> 00:09:33.350 align:start position:0%
logical or a bunch of logical parts but
for<00:09:31.680><c> now</c><00:09:31.839><c> we</c><00:09:32.000><c> can</c><00:09:32.080><c> think</c><00:09:32.240><c> of</c><00:09:32.399><c> it</c><00:09:32.560><c> in</c><00:09:32.640><c> terms</c><00:09:32.959><c> of</c>

00:09:33.350 --> 00:09:33.360 align:start position:0%
for now we can think of it in terms of
 

00:09:33.360 --> 00:09:35.190 align:start position:0%
for now we can think of it in terms of
managing<00:09:33.760><c> file</c><00:09:34.080><c> content</c><00:09:34.640><c> that's</c><00:09:34.959><c> what's</c>

00:09:35.190 --> 00:09:35.200 align:start position:0%
managing file content that's what's
 

00:09:35.200 --> 00:09:38.949 align:start position:0%
managing file content that's what's
inside<00:09:35.600><c> files</c><00:09:36.320><c> figuring</c><00:09:36.720><c> out</c><00:09:36.880><c> where</c><00:09:37.200><c> on</c><00:09:37.440><c> disk</c>

00:09:38.949 --> 00:09:38.959 align:start position:0%
inside files figuring out where on disk
 

00:09:38.959 --> 00:09:40.870 align:start position:0%
inside files figuring out where on disk
each<00:09:39.279><c> file's</c><00:09:39.600><c> content</c><00:09:39.920><c> ought</c><00:09:40.080><c> to</c><00:09:40.160><c> live</c><00:09:40.720><c> the</c>

00:09:40.870 --> 00:09:40.880 align:start position:0%
each file's content ought to live the
 

00:09:40.880 --> 00:09:42.710 align:start position:0%
each file's content ought to live the
file<00:09:41.120><c> system</c><00:09:41.440><c> also</c><00:09:41.680><c> somewhat</c><00:09:42.000><c> separately</c>

00:09:42.710 --> 00:09:42.720 align:start position:0%
file system also somewhat separately
 

00:09:42.720 --> 00:09:45.030 align:start position:0%
file system also somewhat separately
manages<00:09:43.200><c> a</c><00:09:43.279><c> name</c><00:09:43.600><c> space</c><00:09:44.320><c> each</c><00:09:44.560><c> file</c><00:09:44.800><c> has</c><00:09:44.959><c> a</c>

00:09:45.030 --> 00:09:45.040 align:start position:0%
manages a name space each file has a
 

00:09:45.040 --> 00:09:45.829 align:start position:0%
manages a name space each file has a
name

00:09:45.829 --> 00:09:45.839 align:start position:0%
name
 

00:09:45.839 --> 00:09:48.870 align:start position:0%
name
and<00:09:45.920><c> there's</c><00:09:46.160><c> a</c><00:09:46.320><c> hierarchy</c><00:09:47.120><c> of</c><00:09:47.360><c> directories</c>

00:09:48.870 --> 00:09:48.880 align:start position:0%
and there's a hierarchy of directories
 

00:09:48.880 --> 00:09:50.470 align:start position:0%
and there's a hierarchy of directories
every<00:09:49.120><c> directory</c><00:09:49.519><c> has</c><00:09:49.600><c> a</c><00:09:49.680><c> bunch</c><00:09:49.839><c> of</c><00:09:50.000><c> files</c><00:09:50.320><c> in</c>

00:09:50.470 --> 00:09:50.480 align:start position:0%
every directory has a bunch of files in
 

00:09:50.480 --> 00:09:52.230 align:start position:0%
every directory has a bunch of files in
it<00:09:50.640><c> all</c><00:09:50.720><c> that's</c><00:09:51.040><c> managed</c>

00:09:52.230 --> 00:09:52.240 align:start position:0%
it all that's managed
 

00:09:52.240 --> 00:09:55.030 align:start position:0%
it all that's managed
by<00:09:52.399><c> the</c><00:09:52.560><c> file</c><00:09:52.880><c> system</c><00:09:54.399><c> there's</c><00:09:54.640><c> typically</c>

00:09:55.030 --> 00:09:55.040 align:start position:0%
by the file system there's typically
 

00:09:55.040 --> 00:09:57.269 align:start position:0%
by the file system there's typically
some<00:09:55.200><c> sort</c><00:09:55.360><c> of</c><00:09:55.440><c> security</c><00:09:55.920><c> arrangement</c>

00:09:57.269 --> 00:09:57.279 align:start position:0%
some sort of security arrangement
 

00:09:57.279 --> 00:10:01.590 align:start position:0%
some sort of security arrangement
maybe<00:09:57.519><c> we'll</c><00:09:57.680><c> call</c><00:09:57.839><c> it</c><00:09:58.000><c> access</c><00:09:58.399><c> control</c>

00:10:01.590 --> 00:10:01.600 align:start position:0%
 
 

00:10:01.600 --> 00:10:03.509 align:start position:0%
 
by<00:10:01.760><c> which</c><00:10:02.000><c> the</c><00:10:02.079><c> colonel</c><00:10:02.320><c> decides</c><00:10:03.040><c> that</c><00:10:03.440><c> you</c>

00:10:03.509 --> 00:10:03.519 align:start position:0%
by which the colonel decides that you
 

00:10:03.519 --> 00:10:06.230 align:start position:0%
by which the colonel decides that you
know<00:10:03.600><c> when</c><00:10:03.760><c> a</c><00:10:03.839><c> given</c><00:10:04.079><c> process</c><00:10:04.480><c> wants</c><00:10:04.720><c> to</c><00:10:04.880><c> read</c>

00:10:06.230 --> 00:10:06.240 align:start position:0%
know when a given process wants to read
 

00:10:06.240 --> 00:10:07.829 align:start position:0%
know when a given process wants to read
use<00:10:06.480><c> some</c><00:10:06.720><c> resource</c><00:10:07.120><c> maybe</c><00:10:07.360><c> read</c><00:10:07.519><c> something</c>

00:10:07.829 --> 00:10:07.839 align:start position:0%
use some resource maybe read something
 

00:10:07.839 --> 00:10:09.430 align:start position:0%
use some resource maybe read something
from<00:10:08.079><c> the</c><00:10:08.160><c> disk</c><00:10:08.399><c> or</c><00:10:08.560><c> use</c><00:10:08.640><c> some</c><00:10:08.800><c> memory</c>

00:10:09.430 --> 00:10:09.440 align:start position:0%
from the disk or use some memory
 

00:10:09.440 --> 00:10:11.110 align:start position:0%
from the disk or use some memory
the<00:10:09.600><c> access</c><00:10:09.920><c> control</c><00:10:10.320><c> machinery</c><00:10:10.800><c> inside</c><00:10:11.040><c> the</c>

00:10:11.110 --> 00:10:11.120 align:start position:0%
the access control machinery inside the
 

00:10:11.120 --> 00:10:12.790 align:start position:0%
the access control machinery inside the
kernel<00:10:11.519><c> is</c><00:10:11.600><c> what</c><00:10:11.760><c> gets</c><00:10:12.000><c> to</c><00:10:12.079><c> decide</c><00:10:12.399><c> yes</c><00:10:12.640><c> is</c>

00:10:12.790 --> 00:10:12.800 align:start position:0%
kernel is what gets to decide yes is
 

00:10:12.800 --> 00:10:14.150 align:start position:0%
kernel is what gets to decide yes is
that<00:10:12.880><c> allowed</c><00:10:13.279><c> is</c><00:10:13.360><c> that</c><00:10:13.519><c> not</c><00:10:13.680><c> allowed</c>

00:10:14.150 --> 00:10:14.160 align:start position:0%
that allowed is that not allowed
 

00:10:14.160 --> 00:10:15.590 align:start position:0%
that allowed is that not allowed
and<00:10:14.320><c> that</c><00:10:14.480><c> can</c><00:10:14.560><c> get</c><00:10:14.720><c> pretty</c><00:10:14.880><c> complicated</c><00:10:15.519><c> if</c>

00:10:15.590 --> 00:10:15.600 align:start position:0%
and that can get pretty complicated if
 

00:10:15.600 --> 00:10:17.350 align:start position:0%
and that can get pretty complicated if
we're<00:10:15.760><c> talking</c><00:10:16.000><c> about</c><00:10:16.240><c> time</c><00:10:16.560><c> sharing</c><00:10:16.880><c> systems</c>

00:10:17.350 --> 00:10:17.360 align:start position:0%
we're talking about time sharing systems
 

00:10:17.360 --> 00:10:19.350 align:start position:0%
we're talking about time sharing systems
like<00:10:17.839><c> athena</c><00:10:18.399><c> systems</c><00:10:18.720><c> where</c><00:10:18.880><c> there's</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
like athena systems where there's
 

00:10:19.360 --> 00:10:21.190 align:start position:0%
like athena systems where there's
you<00:10:19.519><c> know</c><00:10:19.680><c> each</c><00:10:19.839><c> of</c><00:10:19.920><c> these</c><00:10:20.240><c> processes</c><00:10:20.800><c> may</c><00:10:20.959><c> be</c>

00:10:21.190 --> 00:10:21.200 align:start position:0%
you know each of these processes may be
 

00:10:21.200 --> 00:10:22.870 align:start position:0%
you know each of these processes may be
run<00:10:21.440><c> by</c><00:10:21.600><c> a</c><00:10:21.680><c> different</c><00:10:22.000><c> user</c><00:10:22.399><c> and</c>

00:10:22.870 --> 00:10:22.880 align:start position:0%
run by a different user and
 

00:10:22.880 --> 00:10:24.870 align:start position:0%
run by a different user and
have<00:10:23.120><c> different</c><00:10:23.440><c> access</c><00:10:23.839><c> control</c><00:10:24.240><c> rules</c>

00:10:24.870 --> 00:10:24.880 align:start position:0%
have different access control rules
 

00:10:24.880 --> 00:10:26.230 align:start position:0%
have different access control rules
applied<00:10:25.200><c> to</c><00:10:25.360><c> what</c><00:10:25.519><c> it's</c><00:10:25.680><c> allowed</c>

00:10:26.230 --> 00:10:26.240 align:start position:0%
applied to what it's allowed
 

00:10:26.240 --> 00:10:29.910 align:start position:0%
applied to what it's allowed
to<00:10:26.399><c> get</c><00:10:26.560><c> at</c><00:10:28.800><c> and</c><00:10:28.959><c> in</c><00:10:29.120><c> a</c><00:10:29.200><c> real</c>

00:10:29.910 --> 00:10:29.920 align:start position:0%
to get at and in a real
 

00:10:29.920 --> 00:10:31.670 align:start position:0%
to get at and in a real
full-blown<00:10:30.480><c> operating</c><00:10:30.880><c> system</c><00:10:31.200><c> there's</c>

00:10:31.670 --> 00:10:31.680 align:start position:0%
full-blown operating system there's
 

00:10:31.680 --> 00:10:33.910 align:start position:0%
full-blown operating system there's
turns<00:10:31.920><c> out</c><00:10:32.000><c> to</c><00:10:32.160><c> be</c><00:10:32.320><c> many</c><00:10:32.560><c> many</c><00:10:32.880><c> other</c><00:10:33.120><c> services</c>

00:10:33.910 --> 00:10:33.920 align:start position:0%
turns out to be many many other services
 

00:10:33.920 --> 00:10:35.750 align:start position:0%
turns out to be many many other services
you<00:10:34.079><c> know</c><00:10:34.160><c> there's</c><00:10:34.640><c> typically</c><00:10:35.040><c> some</c><00:10:35.279><c> way</c><00:10:35.519><c> for</c>

00:10:35.750 --> 00:10:35.760 align:start position:0%
you know there's typically some way for
 

00:10:35.760 --> 00:10:37.269 align:start position:0%
you know there's typically some way for
different<00:10:36.079><c> processes</c><00:10:36.560><c> to</c><00:10:36.720><c> talk</c><00:10:36.959><c> to</c><00:10:37.120><c> each</c>

00:10:37.269 --> 00:10:37.279 align:start position:0%
different processes to talk to each
 

00:10:37.279 --> 00:10:37.590 align:start position:0%
different processes to talk to each
other

00:10:37.590 --> 00:10:37.600 align:start position:0%
other
 

00:10:37.600 --> 00:10:40.230 align:start position:0%
other
called<00:10:37.839><c> inter-process</c><00:10:38.480><c> communication</c>

00:10:40.230 --> 00:10:40.240 align:start position:0%
called inter-process communication
 

00:10:40.240 --> 00:10:41.750 align:start position:0%
called inter-process communication
there's<00:10:40.480><c> typically</c><00:10:40.800><c> a</c><00:10:40.880><c> whole</c><00:10:41.360><c> bunch</c><00:10:41.600><c> of</c>

00:10:41.750 --> 00:10:41.760 align:start position:0%
there's typically a whole bunch of
 

00:10:41.760 --> 00:10:43.509 align:start position:0%
there's typically a whole bunch of
software<00:10:42.079><c> associated</c><00:10:42.560><c> with</c><00:10:42.720><c> the</c><00:10:42.880><c> network</c>

00:10:43.509 --> 00:10:43.519 align:start position:0%
software associated with the network
 

00:10:43.519 --> 00:10:46.710 align:start position:0%
software associated with the network
things<00:10:43.760><c> like</c><00:10:43.920><c> the</c><00:10:44.079><c> tcp</c><00:10:44.880><c> ip</c><00:10:45.360><c> protocols</c><00:10:46.079><c> for</c>

00:10:46.710 --> 00:10:46.720 align:start position:0%
things like the tcp ip protocols for
 

00:10:46.720 --> 00:10:49.910 align:start position:0%
things like the tcp ip protocols for
talking<00:10:46.959><c> in</c><00:10:47.120><c> the</c><00:10:47.200><c> network</c>

00:10:49.910 --> 00:10:49.920 align:start position:0%
 
 

00:10:49.920 --> 00:10:51.590 align:start position:0%
 
there's<00:10:50.240><c> typically</c><00:10:50.640><c> support</c><00:10:51.040><c> for</c><00:10:51.279><c> sound</c>

00:10:51.590 --> 00:10:51.600 align:start position:0%
there's typically support for sound
 

00:10:51.600 --> 00:10:53.910 align:start position:0%
there's typically support for sound
cards<00:10:52.240><c> there</c><00:10:52.399><c> may</c><00:10:52.560><c> be</c><00:10:52.720><c> drivers</c><00:10:53.279><c> for</c><00:10:53.440><c> hundreds</c>

00:10:53.910 --> 00:10:53.920 align:start position:0%
cards there may be drivers for hundreds
 

00:10:53.920 --> 00:10:55.350 align:start position:0%
cards there may be drivers for hundreds
of<00:10:54.000><c> different</c><00:10:54.320><c> disks</c><00:10:54.800><c> and</c><00:10:54.959><c> hundreds</c><00:10:55.279><c> of</c>

00:10:55.350 --> 00:10:55.360 align:start position:0%
of different disks and hundreds of
 

00:10:55.360 --> 00:10:56.470 align:start position:0%
of different disks and hundreds of
different<00:10:55.600><c> network</c><00:10:55.920><c> cards</c>

00:10:56.470 --> 00:10:56.480 align:start position:0%
different network cards
 

00:10:56.480 --> 00:10:58.069 align:start position:0%
different network cards
so<00:10:56.720><c> in</c><00:10:56.880><c> a</c><00:10:56.959><c> full</c><00:10:57.120><c> blown</c><00:10:57.440><c> operating</c><00:10:57.760><c> system</c>

00:10:58.069 --> 00:10:58.079 align:start position:0%
so in a full blown operating system
 

00:10:58.079 --> 00:11:00.230 align:start position:0%
so in a full blown operating system
there's<00:10:59.120><c> a</c><00:10:59.279><c> huge</c><00:10:59.519><c> amount</c><00:10:59.680><c> of</c><00:10:59.839><c> stuff</c><00:11:00.000><c> here</c><00:11:00.160><c> and</c>

00:11:00.230 --> 00:11:00.240 align:start position:0%
there's a huge amount of stuff here and
 

00:11:00.240 --> 00:11:01.990 align:start position:0%
there's a huge amount of stuff here and
this<00:11:00.399><c> may</c><00:11:00.560><c> run</c><00:11:00.720><c> to</c><00:11:00.880><c> millions</c><00:11:01.360><c> of</c><00:11:01.440><c> lines</c><00:11:01.839><c> of</c>

00:11:01.990 --> 00:11:02.000 align:start position:0%
this may run to millions of lines of
 

00:11:02.000 --> 00:11:02.790 align:start position:0%
this may run to millions of lines of
code

00:11:02.790 --> 00:11:02.800 align:start position:0%
code
 

00:11:02.800 --> 00:11:06.230 align:start position:0%
code
inside<00:11:03.200><c> the</c><00:11:03.360><c> kernel</c>

00:11:06.230 --> 00:11:06.240 align:start position:0%
 
 

00:11:06.240 --> 00:11:07.430 align:start position:0%
 
so<00:11:06.399><c> that's</c><00:11:06.560><c> sort</c><00:11:06.720><c> of</c><00:11:06.800><c> a</c><00:11:06.880><c> quick</c><00:11:07.040><c> overview</c><00:11:07.440><c> of</c>

00:11:07.430 --> 00:11:07.440 align:start position:0%
so that's sort of a quick overview of
 

00:11:07.440 --> 00:11:09.590 align:start position:0%
so that's sort of a quick overview of
what's<00:11:07.680><c> inside</c><00:11:08.000><c> the</c><00:11:08.160><c> kernel</c>

00:11:09.590 --> 00:11:09.600 align:start position:0%
what's inside the kernel
 

00:11:09.600 --> 00:11:11.269 align:start position:0%
what's inside the kernel
we're<00:11:09.760><c> also</c><00:11:10.240><c> interested</c><00:11:10.720><c> in</c><00:11:10.880><c> how</c>

00:11:11.269 --> 00:11:11.279 align:start position:0%
we're also interested in how
 

00:11:11.279 --> 00:11:13.350 align:start position:0%
we're also interested in how
applications<00:11:12.320><c> interact</c><00:11:12.720><c> with</c><00:11:12.800><c> the</c><00:11:12.880><c> kernel</c>

00:11:13.350 --> 00:11:13.360 align:start position:0%
applications interact with the kernel
 

00:11:13.360 --> 00:11:19.030 align:start position:0%
applications interact with the kernel
and<00:11:13.519><c> what</c><00:11:13.680><c> that</c><00:11:14.000><c> interface</c><00:11:15.279><c> looks</c><00:11:15.519><c> like</c>

00:11:19.030 --> 00:11:19.040 align:start position:0%
 
 

00:11:19.040 --> 00:11:22.790 align:start position:0%
 
the

00:11:22.790 --> 00:11:22.800 align:start position:0%
 
 

00:11:22.800 --> 00:11:26.630 align:start position:0%
 
usual<00:11:24.720><c> so</c><00:11:24.880><c> this</c><00:11:25.120><c> is</c><00:11:25.200><c> the</c><00:11:25.680><c> api</c>

00:11:26.630 --> 00:11:26.640 align:start position:0%
usual so this is the api
 

00:11:26.640 --> 00:11:30.550 align:start position:0%
usual so this is the api
for<00:11:26.800><c> the</c><00:11:26.959><c> kernel</c>

00:11:30.550 --> 00:11:30.560 align:start position:0%
 
 

00:11:30.560 --> 00:11:33.110 align:start position:0%
 
how<00:11:30.800><c> applications</c><00:11:31.360><c> get</c><00:11:31.519><c> at</c><00:11:31.680><c> the</c><00:11:31.760><c> kernel</c>

00:11:33.110 --> 00:11:33.120 align:start position:0%
how applications get at the kernel
 

00:11:33.120 --> 00:11:34.310 align:start position:0%
how applications get at the kernel
typically<00:11:33.519><c> that's</c><00:11:33.680><c> done</c><00:11:33.920><c> with</c><00:11:34.000><c> something</c>

00:11:34.310 --> 00:11:34.320 align:start position:0%
typically that's done with something
 

00:11:34.320 --> 00:11:36.069 align:start position:0%
typically that's done with something
called<00:11:34.560><c> system</c><00:11:34.959><c> calls</c><00:11:35.279><c> and</c><00:11:35.440><c> these</c><00:11:35.680><c> are</c><00:11:35.760><c> things</c>

00:11:36.069 --> 00:11:36.079 align:start position:0%
called system calls and these are things
 

00:11:36.079 --> 00:11:36.550 align:start position:0%
called system calls and these are things
that

00:11:36.550 --> 00:11:36.560 align:start position:0%
that
 

00:11:36.560 --> 00:11:39.829 align:start position:0%
that
look<00:11:36.800><c> like</c><00:11:37.040><c> function</c><00:11:37.440><c> calls</c><00:11:37.920><c> that</c><00:11:39.440><c> programs</c>

00:11:39.829 --> 00:11:39.839 align:start position:0%
look like function calls that programs
 

00:11:39.839 --> 00:11:41.190 align:start position:0%
look like function calls that programs
can<00:11:40.000><c> make</c>

00:11:41.190 --> 00:11:41.200 align:start position:0%
can make
 

00:11:41.200 --> 00:11:43.990 align:start position:0%
can make
but<00:11:41.440><c> actually</c><00:11:41.839><c> jump</c><00:11:42.079><c> into</c><00:11:42.240><c> the</c><00:11:42.399><c> kernel</c><00:11:42.959><c> and</c>

00:11:43.990 --> 00:11:44.000 align:start position:0%
but actually jump into the kernel and
 

00:11:44.000 --> 00:11:45.110 align:start position:0%
but actually jump into the kernel and
execute<00:11:44.560><c> a</c>

00:11:45.110 --> 00:11:45.120 align:start position:0%
execute a
 

00:11:45.120 --> 00:11:46.630 align:start position:0%
execute a
system<00:11:45.440><c> called</c><00:11:45.680><c> implementation</c><00:11:46.480><c> in</c><00:11:46.560><c> the</c>

00:11:46.630 --> 00:11:46.640 align:start position:0%
system called implementation in the
 

00:11:46.640 --> 00:11:48.310 align:start position:0%
system called implementation in the
kernel<00:11:47.279><c> i'll</c><00:11:47.680><c> talk</c><00:11:47.920><c> a</c>

00:11:48.310 --> 00:11:48.320 align:start position:0%
kernel i'll talk a
 

00:11:48.320 --> 00:11:49.750 align:start position:0%
kernel i'll talk a
bunch<00:11:48.480><c> about</c><00:11:48.720><c> that</c><00:11:48.959><c> in</c><00:11:49.120><c> the</c><00:11:49.279><c> latter</c><00:11:49.519><c> part</c><00:11:49.680><c> of</c>

00:11:49.750 --> 00:11:49.760 align:start position:0%
bunch about that in the latter part of
 

00:11:49.760 --> 00:11:52.069 align:start position:0%
bunch about that in the latter part of
this<00:11:49.920><c> lecture</c><00:11:51.120><c> for</c><00:11:51.279><c> now</c><00:11:51.440><c> just</c><00:11:51.600><c> to</c><00:11:51.760><c> give</c><00:11:51.839><c> you</c><00:11:51.920><c> a</c>

00:11:52.069 --> 00:11:52.079 align:start position:0%
this lecture for now just to give you a
 

00:11:52.079 --> 00:11:53.190 align:start position:0%
this lecture for now just to give you a
flavor<00:11:52.399><c> here</c>

00:11:53.190 --> 00:11:53.200 align:start position:0%
flavor here
 

00:11:53.200 --> 00:11:54.870 align:start position:0%
flavor here
what<00:11:53.440><c> a</c><00:11:53.519><c> couple</c><00:11:53.839><c> of</c><00:11:54.000><c> different</c><00:11:54.320><c> system</c><00:11:54.639><c> calls</c>

00:11:54.870 --> 00:11:54.880 align:start position:0%
what a couple of different system calls
 

00:11:54.880 --> 00:11:56.629 align:start position:0%
what a couple of different system calls
might<00:11:55.040><c> look</c><00:11:55.200><c> like</c><00:11:55.440><c> in</c><00:11:55.519><c> the</c><00:11:55.680><c> source</c><00:11:56.079><c> code</c>

00:11:56.629 --> 00:11:56.639 align:start position:0%
might look like in the source code
 

00:11:56.639 --> 00:12:00.230 align:start position:0%
might look like in the source code
of<00:11:56.800><c> an</c><00:11:56.959><c> application</c>

00:12:00.230 --> 00:12:00.240 align:start position:0%
 
 

00:12:00.240 --> 00:12:02.230 align:start position:0%
 
one<00:12:00.480><c> might</c><00:12:00.720><c> be</c><00:12:01.120><c> that</c><00:12:01.519><c> if</c><00:12:01.680><c> you</c><00:12:01.760><c> want</c><00:12:02.000><c> if</c><00:12:02.160><c> an</c>

00:12:02.230 --> 00:12:02.240 align:start position:0%
one might be that if you want if an
 

00:12:02.240 --> 00:12:04.310 align:start position:0%
one might be that if you want if an
application<00:12:02.639><c> wants</c><00:12:02.800><c> to</c><00:12:02.959><c> open</c><00:12:03.200><c> a</c><00:12:03.279><c> file</c>

00:12:04.310 --> 00:12:04.320 align:start position:0%
application wants to open a file
 

00:12:04.320 --> 00:12:07.350 align:start position:0%
application wants to open a file
it<00:12:04.399><c> make</c><00:12:04.720><c> it</c><00:12:04.800><c> calls</c><00:12:05.040><c> the</c><00:12:05.200><c> open</c><00:12:05.760><c> system</c><00:12:06.160><c> call</c>

00:12:07.350 --> 00:12:07.360 align:start position:0%
it make it calls the open system call
 

00:12:07.360 --> 00:12:09.350 align:start position:0%
it make it calls the open system call
and<00:12:08.079><c> tells</c><00:12:08.320><c> the</c><00:12:08.480><c> open</c><00:12:08.720><c> system</c><00:12:09.040><c> called</c><00:12:09.279><c> the</c>

00:12:09.350 --> 00:12:09.360 align:start position:0%
and tells the open system called the
 

00:12:09.360 --> 00:12:10.629 align:start position:0%
and tells the open system called the
name<00:12:09.680><c> of</c><00:12:09.760><c> the</c><00:12:09.920><c> file</c>

00:12:10.629 --> 00:12:10.639 align:start position:0%
name of the file
 

00:12:10.639 --> 00:12:12.710 align:start position:0%
name of the file
so<00:12:10.800><c> maybe</c><00:12:11.120><c> it</c><00:12:11.200><c> wants</c><00:12:11.440><c> to</c><00:12:11.839><c> open</c><00:12:12.160><c> a</c><00:12:12.240><c> file</c><00:12:12.480><c> for</c>

00:12:12.710 --> 00:12:12.720 align:start position:0%
so maybe it wants to open a file for
 

00:12:12.720 --> 00:12:13.829 align:start position:0%
so maybe it wants to open a file for
writing<00:12:13.440><c> called</c>

00:12:13.829 --> 00:12:13.839 align:start position:0%
writing called
 

00:12:13.839 --> 00:12:15.590 align:start position:0%
writing called
out<00:12:14.160><c> and</c><00:12:14.560><c> it</c><00:12:14.639><c> would</c><00:12:14.720><c> be</c><00:12:14.800><c> an</c><00:12:14.959><c> extra</c><00:12:15.200><c> argument</c>

00:12:15.590 --> 00:12:15.600 align:start position:0%
out and it would be an extra argument
 

00:12:15.600 --> 00:12:17.670 align:start position:0%
out and it would be an extra argument
here<00:12:15.839><c> saying</c><00:12:16.720><c> one</c><00:12:16.959><c> in</c><00:12:17.040><c> this</c><00:12:17.200><c> case</c><00:12:17.360><c> saying</c><00:12:17.600><c> i</c>

00:12:17.670 --> 00:12:17.680 align:start position:0%
here saying one in this case saying i
 

00:12:17.680 --> 00:12:18.949 align:start position:0%
here saying one in this case saying i
want<00:12:17.760><c> to</c><00:12:17.839><c> write</c><00:12:18.079><c> that</c><00:12:18.320><c> file</c>

00:12:18.949 --> 00:12:18.959 align:start position:0%
want to write that file
 

00:12:18.959 --> 00:12:20.629 align:start position:0%
want to write that file
and<00:12:19.040><c> so</c><00:12:19.680><c> this</c><00:12:19.839><c> thing</c><00:12:20.079><c> that</c><00:12:20.240><c> looks</c><00:12:20.399><c> like</c><00:12:20.560><c> a</c>

00:12:20.629 --> 00:12:20.639 align:start position:0%
and so this thing that looks like a
 

00:12:20.639 --> 00:12:22.550 align:start position:0%
and so this thing that looks like a
function<00:12:21.120><c> call</c>

00:12:22.550 --> 00:12:22.560 align:start position:0%
function call
 

00:12:22.560 --> 00:12:24.150 align:start position:0%
function call
if<00:12:22.720><c> opens</c><00:12:23.040><c> the</c><00:12:23.120><c> system</c><00:12:23.440><c> calls</c><00:12:23.839><c> actually</c>

00:12:24.150 --> 00:12:24.160 align:start position:0%
if opens the system calls actually
 

00:12:24.160 --> 00:12:26.389 align:start position:0%
if opens the system calls actually
special<00:12:24.560><c> code</c><00:12:24.959><c> that</c><00:12:25.519><c> jumps</c><00:12:25.839><c> into</c><00:12:26.000><c> the</c><00:12:26.079><c> kernel</c>

00:12:26.389 --> 00:12:26.399 align:start position:0%
special code that jumps into the kernel
 

00:12:26.399 --> 00:12:27.670 align:start position:0%
special code that jumps into the kernel
and<00:12:26.480><c> the</c><00:12:26.560><c> kernel</c><00:12:26.880><c> can</c><00:12:27.040><c> retrieve</c><00:12:27.440><c> these</c>

00:12:27.670 --> 00:12:27.680 align:start position:0%
and the kernel can retrieve these
 

00:12:27.680 --> 00:12:28.629 align:start position:0%
and the kernel can retrieve these
arguments

00:12:28.629 --> 00:12:28.639 align:start position:0%
arguments
 

00:12:28.639 --> 00:12:30.310 align:start position:0%
arguments
execute<00:12:29.040><c> some</c><00:12:29.200><c> kernel</c><00:12:29.519><c> code</c><00:12:29.680><c> that</c><00:12:29.920><c> implements</c>

00:12:30.310 --> 00:12:30.320 align:start position:0%
execute some kernel code that implements
 

00:12:30.320 --> 00:12:32.310 align:start position:0%
execute some kernel code that implements
open<00:12:30.560><c> maybe</c><00:12:30.800><c> talks</c><00:12:31.120><c> to</c><00:12:31.200><c> the</c><00:12:31.279><c> disk</c>

00:12:32.310 --> 00:12:32.320 align:start position:0%
open maybe talks to the disk
 

00:12:32.320 --> 00:12:34.150 align:start position:0%
open maybe talks to the disk
and<00:12:32.399><c> then</c><00:12:32.560><c> returns</c><00:12:32.959><c> a</c><00:12:33.040><c> value</c><00:12:33.440><c> and</c><00:12:33.519><c> that's</c><00:12:33.760><c> this</c>

00:12:34.150 --> 00:12:34.160 align:start position:0%
and then returns a value and that's this
 

00:12:34.160 --> 00:12:36.069 align:start position:0%
and then returns a value and that's this
file<00:12:34.480><c> descriptor</c>

00:12:36.069 --> 00:12:36.079 align:start position:0%
file descriptor
 

00:12:36.079 --> 00:12:39.030 align:start position:0%
file descriptor
as<00:12:36.399><c> fd</c><00:12:36.800><c> stands</c><00:12:37.040><c> for</c><00:12:37.200><c> file</c><00:12:37.440><c> descriptor</c><00:12:38.800><c> which</c>

00:12:39.030 --> 00:12:39.040 align:start position:0%
as fd stands for file descriptor which
 

00:12:39.040 --> 00:12:39.430 align:start position:0%
as fd stands for file descriptor which
is

00:12:39.430 --> 00:12:39.440 align:start position:0%
is
 

00:12:39.440 --> 00:12:41.110 align:start position:0%
is
the<00:12:39.600><c> program</c><00:12:40.000><c> can</c><00:12:40.160><c> then</c><00:12:40.320><c> use</c><00:12:40.560><c> as</c><00:12:40.720><c> sort</c><00:12:40.880><c> of</c><00:12:40.959><c> a</c>

00:12:41.110 --> 00:12:41.120 align:start position:0%
the program can then use as sort of a
 

00:12:41.120 --> 00:12:42.629 align:start position:0%
the program can then use as sort of a
handle<00:12:41.920><c> to</c><00:12:42.079><c> refer</c>

00:12:42.629 --> 00:12:42.639 align:start position:0%
handle to refer
 

00:12:42.639 --> 00:12:45.829 align:start position:0%
handle to refer
to<00:12:42.880><c> this</c><00:12:43.279><c> open</c><00:12:43.680><c> file</c>

00:12:45.829 --> 00:12:45.839 align:start position:0%
to this open file
 

00:12:45.839 --> 00:12:48.230 align:start position:0%
to this open file
if<00:12:45.920><c> you</c><00:12:46.000><c> want</c><00:12:46.160><c> to</c><00:12:46.240><c> write</c><00:12:46.399><c> to</c><00:12:46.560><c> a</c><00:12:46.720><c> file</c><00:12:47.120><c> the</c>

00:12:48.230 --> 00:12:48.240 align:start position:0%
if you want to write to a file the
 

00:12:48.240 --> 00:12:49.269 align:start position:0%
if you want to write to a file the
system<00:12:48.560><c> called</c>

00:12:49.269 --> 00:12:49.279 align:start position:0%
system called
 

00:12:49.279 --> 00:12:51.509 align:start position:0%
system called
to<00:12:49.440><c> do</c><00:12:49.680><c> that</c><00:12:49.920><c> is</c><00:12:50.000><c> called</c><00:12:50.320><c> write</c><00:12:51.040><c> you</c><00:12:51.200><c> have</c><00:12:51.360><c> to</c>

00:12:51.509 --> 00:12:51.519 align:start position:0%
to do that is called write you have to
 

00:12:51.519 --> 00:12:53.269 align:start position:0%
to do that is called write you have to
pass<00:12:51.760><c> it</c><00:12:51.920><c> one</c><00:12:52.079><c> of</c><00:12:52.160><c> these</c><00:12:52.399><c> file</c><00:12:52.639><c> descriptors</c>

00:12:53.269 --> 00:12:53.279 align:start position:0%
pass it one of these file descriptors
 

00:12:53.279 --> 00:12:55.750 align:start position:0%
pass it one of these file descriptors
the<00:12:53.360><c> same</c><00:12:53.680><c> as</c><00:12:53.839><c> was</c><00:12:54.079><c> returned</c><00:12:54.399><c> by</c><00:12:54.560><c> open</c>

00:12:55.750 --> 00:12:55.760 align:start position:0%
the same as was returned by open
 

00:12:55.760 --> 00:12:57.990 align:start position:0%
the same as was returned by open
um<00:12:56.240><c> these</c><00:12:56.480><c> are</c><00:12:56.560><c> now</c><00:12:56.800><c> arguments</c><00:12:57.279><c> that</c><00:12:57.440><c> are</c>

00:12:57.990 --> 00:12:58.000 align:start position:0%
um these are now arguments that are
 

00:12:58.000 --> 00:12:59.750 align:start position:0%
um these are now arguments that are
passed<00:12:58.320><c> in</c><00:12:58.399><c> the</c><00:12:58.480><c> system</c><00:12:58.800><c> call</c>

00:12:59.750 --> 00:12:59.760 align:start position:0%
passed in the system call
 

00:12:59.760 --> 00:13:02.150 align:start position:0%
passed in the system call
from<00:12:59.920><c> the</c><00:13:00.240><c> program</c><00:13:00.720><c> into</c><00:13:00.959><c> the</c><00:13:01.040><c> kernel</c><00:13:02.079><c> you</c>

00:13:02.150 --> 00:13:02.160 align:start position:0%
from the program into the kernel you
 

00:13:02.160 --> 00:13:03.829 align:start position:0%
from the program into the kernel you
give<00:13:02.320><c> it</c><00:13:02.480><c> a</c><00:13:02.720><c> pointer</c>

00:13:03.829 --> 00:13:03.839 align:start position:0%
give it a pointer
 

00:13:03.839 --> 00:13:06.550 align:start position:0%
give it a pointer
to<00:13:04.079><c> a</c><00:13:04.160><c> buffer</c><00:13:04.560><c> of</c><00:13:04.720><c> characters</c><00:13:05.279><c> so</c><00:13:06.000><c> an</c><00:13:06.240><c> easy</c><00:13:06.399><c> way</c>

00:13:06.550 --> 00:13:06.560 align:start position:0%
to a buffer of characters so an easy way
 

00:13:06.560 --> 00:13:07.430 align:start position:0%
to a buffer of characters so an easy way
to<00:13:06.720><c> do</c><00:13:06.800><c> that</c><00:13:06.959><c> in</c><00:13:07.040><c> the</c><00:13:07.200><c> c</c>

00:13:07.430 --> 00:13:07.440 align:start position:0%
to do that in the c
 

00:13:07.440 --> 00:13:08.710 align:start position:0%
to do that in the c
programming<00:13:07.920><c> language</c><00:13:08.240><c> which</c><00:13:08.560><c> these</c>

00:13:08.710 --> 00:13:08.720 align:start position:0%
programming language which these
 

00:13:08.720 --> 00:13:10.710 align:start position:0%
programming language which these
examples<00:13:09.200><c> are</c><00:13:09.279><c> written</c><00:13:09.600><c> by</c><00:13:09.920><c> is</c><00:13:10.240><c> the</c><00:13:10.399><c> double</c>

00:13:10.710 --> 00:13:10.720 align:start position:0%
examples are written by is the double
 

00:13:10.720 --> 00:13:12.550 align:start position:0%
examples are written by is the double
quotes<00:13:11.120><c> and</c><00:13:11.279><c> then</c>

00:13:12.550 --> 00:13:12.560 align:start position:0%
quotes and then
 

00:13:12.560 --> 00:13:14.949 align:start position:0%
quotes and then
the<00:13:12.800><c> string</c><00:13:13.360><c> the</c><00:13:13.519><c> bytes</c><00:13:13.839><c> of</c><00:13:13.839><c> the</c><00:13:14.000><c> string</c><00:13:14.720><c> this</c>

00:13:14.949 --> 00:13:14.959 align:start position:0%
the string the bytes of the string this
 

00:13:14.959 --> 00:13:17.110 align:start position:0%
the string the bytes of the string this
backslash<00:13:15.519><c> n</c><00:13:15.680><c> is</c><00:13:15.760><c> a</c><00:13:15.839><c> new</c><00:13:16.079><c> line</c>

00:13:17.110 --> 00:13:17.120 align:start position:0%
backslash n is a new line
 

00:13:17.120 --> 00:13:18.870 align:start position:0%
backslash n is a new line
and<00:13:17.279><c> the</c><00:13:17.440><c> third</c><00:13:17.760><c> argument</c><00:13:18.160><c> is</c><00:13:18.320><c> the</c><00:13:18.399><c> count</c><00:13:18.720><c> of</c>

00:13:18.870 --> 00:13:18.880 align:start position:0%
and the third argument is the count of
 

00:13:18.880 --> 00:13:20.870 align:start position:0%
and the third argument is the count of
characters

00:13:20.870 --> 00:13:20.880 align:start position:0%
characters
 

00:13:20.880 --> 00:13:22.389 align:start position:0%
characters
that<00:13:21.040><c> you</c><00:13:21.120><c> want</c><00:13:21.279><c> to</c><00:13:21.440><c> write</c><00:13:21.920><c> and</c><00:13:22.079><c> so</c><00:13:22.240><c> this</c>

00:13:22.389 --> 00:13:22.399 align:start position:0%
that you want to write and so this
 

00:13:22.399 --> 00:13:24.550 align:start position:0%
that you want to write and so this
really<00:13:22.560><c> gets</c><00:13:22.800><c> point</c><00:13:23.600><c> passed</c><00:13:23.920><c> as</c><00:13:24.079><c> an</c><00:13:24.160><c> address</c>

00:13:24.550 --> 00:13:24.560 align:start position:0%
really gets point passed as an address
 

00:13:24.560 --> 00:13:25.750 align:start position:0%
really gets point passed as an address
in<00:13:24.720><c> memory</c>

00:13:25.750 --> 00:13:25.760 align:start position:0%
in memory
 

00:13:25.760 --> 00:13:27.110 align:start position:0%
in memory
so<00:13:25.920><c> you're</c><00:13:26.000><c> telling</c><00:13:26.240><c> the</c><00:13:26.320><c> kernel</c><00:13:26.639><c> look</c><00:13:26.800><c> please</c>

00:13:27.110 --> 00:13:27.120 align:start position:0%
so you're telling the kernel look please
 

00:13:27.120 --> 00:13:29.509 align:start position:0%
so you're telling the kernel look please
write<00:13:27.519><c> six</c><00:13:27.839><c> bytes</c><00:13:28.240><c> from</c><00:13:28.399><c> this</c><00:13:28.639><c> address</c>

00:13:29.509 --> 00:13:29.519 align:start position:0%
write six bytes from this address
 

00:13:29.519 --> 00:13:31.670 align:start position:0%
write six bytes from this address
to<00:13:29.680><c> the</c><00:13:29.839><c> file</c><00:13:30.240><c> that</c><00:13:30.480><c> this</c><00:13:30.720><c> file</c><00:13:30.959><c> descriptor</c>

00:13:31.670 --> 00:13:31.680 align:start position:0%
to the file that this file descriptor
 

00:13:31.680 --> 00:13:34.230 align:start position:0%
to the file that this file descriptor
refers<00:13:32.079><c> to</c>

00:13:34.230 --> 00:13:34.240 align:start position:0%
refers to
 

00:13:34.240 --> 00:13:36.389 align:start position:0%
refers to
a<00:13:34.399><c> much</c><00:13:34.560><c> more</c><00:13:34.720><c> exciting</c><00:13:35.279><c> uh</c><00:13:35.600><c> system</c><00:13:35.920><c> call</c><00:13:36.160><c> that</c>

00:13:36.389 --> 00:13:36.399 align:start position:0%
a much more exciting uh system call that
 

00:13:36.399 --> 00:13:39.110 align:start position:0%
a much more exciting uh system call that
you<00:13:36.800><c> encounter</c><00:13:37.279><c> is</c><00:13:37.440><c> the</c><00:13:37.519><c> fork</c><00:13:37.839><c> system</c><00:13:38.240><c> call</c>

00:13:39.110 --> 00:13:39.120 align:start position:0%
you encounter is the fork system call
 

00:13:39.120 --> 00:13:41.430 align:start position:0%
you encounter is the fork system call
fork<00:13:39.440><c> is</c><00:13:39.519><c> the</c><00:13:39.760><c> system</c><00:13:40.079><c> call</c><00:13:40.560><c> that</c><00:13:41.040><c> creates</c><00:13:41.360><c> a</c>

00:13:41.430 --> 00:13:41.440 align:start position:0%
fork is the system call that creates a
 

00:13:41.440 --> 00:13:42.550 align:start position:0%
fork is the system call that creates a
new<00:13:41.600><c> process</c>

00:13:42.550 --> 00:13:42.560 align:start position:0%
new process
 

00:13:42.560 --> 00:13:46.069 align:start position:0%
new process
um<00:13:44.079><c> and</c><00:13:44.320><c> it</c><00:13:44.480><c> returns</c><00:13:45.440><c> actually</c><00:13:45.680><c> creates</c><00:13:46.000><c> a</c>

00:13:46.069 --> 00:13:46.079 align:start position:0%
um and it returns actually creates a
 

00:13:46.079 --> 00:13:48.230 align:start position:0%
um and it returns actually creates a
process<00:13:46.399><c> that's</c><00:13:46.639><c> identical</c><00:13:47.120><c> to</c><00:13:47.279><c> the</c><00:13:47.440><c> caller</c>

00:13:48.230 --> 00:13:48.240 align:start position:0%
process that's identical to the caller
 

00:13:48.240 --> 00:13:51.509 align:start position:0%
process that's identical to the caller
and<00:13:48.720><c> fork</c><00:13:49.040><c> returns</c><00:13:49.760><c> the</c><00:13:50.320><c> an</c><00:13:50.639><c> identifier</c><00:13:51.360><c> the</c>

00:13:51.509 --> 00:13:51.519 align:start position:0%
and fork returns the an identifier the
 

00:13:51.519 --> 00:13:54.710 align:start position:0%
and fork returns the an identifier the
process<00:13:52.000><c> identifier</c><00:13:52.560><c> or</c><00:13:52.800><c> pid</c>

00:13:54.710 --> 00:13:54.720 align:start position:0%
process identifier or pid
 

00:13:54.720 --> 00:13:55.990 align:start position:0%
process identifier or pid
of<00:13:54.800><c> the</c><00:13:54.959><c> new</c><00:13:55.199><c> process</c><00:13:55.680><c> it's</c><00:13:55.760><c> actually</c><00:13:56.000><c> a</c>

00:13:55.990 --> 00:13:56.000 align:start position:0%
of the new process it's actually a
 

00:13:56.000 --> 00:13:57.189 align:start position:0%
of the new process it's actually a
little<00:13:56.160><c> more</c><00:13:56.320><c> complicated</c><00:13:56.800><c> than</c><00:13:56.880><c> that</c><00:13:57.120><c> and</c>

00:13:57.189 --> 00:13:57.199 align:start position:0%
little more complicated than that and
 

00:13:57.199 --> 00:13:58.069 align:start position:0%
little more complicated than that and
we'll

00:13:58.069 --> 00:13:58.079 align:start position:0%
we'll
 

00:13:58.079 --> 00:14:01.509 align:start position:0%
we'll
hear<00:13:58.320><c> more</c><00:13:58.480><c> about</c><00:13:58.800><c> this</c><00:14:00.720><c> so</c><00:14:00.959><c> again</c><00:14:01.120><c> these</c><00:14:01.360><c> are</c>

00:14:01.509 --> 00:14:01.519 align:start position:0%
hear more about this so again these are
 

00:14:01.519 --> 00:14:04.389 align:start position:0%
hear more about this so again these are
all<00:14:01.920><c> look</c><00:14:02.160><c> like</c><00:14:02.320><c> function</c><00:14:02.720><c> calls</c>

00:14:04.389 --> 00:14:04.399 align:start position:0%
all look like function calls
 

00:14:04.399 --> 00:14:05.829 align:start position:0%
all look like function calls
but<00:14:04.560><c> the</c><00:14:04.720><c> system</c><00:14:04.959><c> calls</c><00:14:05.279><c> are</c><00:14:05.360><c> special</c><00:14:05.680><c> because</c>

00:14:05.829 --> 00:14:05.839 align:start position:0%
but the system calls are special because
 

00:14:05.839 --> 00:14:08.310 align:start position:0%
but the system calls are special because
they<00:14:06.000><c> jump</c><00:14:06.240><c> into</c><00:14:06.399><c> the</c><00:14:06.480><c> kernel</c>

00:14:08.310 --> 00:14:08.320 align:start position:0%
they jump into the kernel
 

00:14:08.320 --> 00:14:15.670 align:start position:0%
they jump into the kernel
that's<00:14:08.480><c> just</c><00:14:08.800><c> taste</c><00:14:09.600><c> i'll</c><00:14:09.839><c> see</c><00:14:10.000><c> more</c><00:14:10.240><c> later</c>

00:14:15.670 --> 00:14:15.680 align:start position:0%
 
 

00:14:15.680 --> 00:14:19.189 align:start position:0%
 
well<00:14:15.839><c> that</c><00:14:16.000><c> is</c><00:14:16.160><c> a</c><00:14:16.320><c> sort</c><00:14:16.480><c> of</c><00:14:16.639><c> quick</c><00:14:16.880><c> overview</c><00:14:17.519><c> um</c>

00:14:19.189 --> 00:14:19.199 align:start position:0%
well that is a sort of quick overview um
 

00:14:19.199 --> 00:14:22.870 align:start position:0%
well that is a sort of quick overview um
i<00:14:19.360><c> want</c><00:14:19.519><c> to</c><00:14:20.480><c> just</c><00:14:20.720><c> mention</c><00:14:21.120><c> why</c><00:14:21.360><c> i</c><00:14:21.680><c> find</c>

00:14:22.870 --> 00:14:22.880 align:start position:0%
i want to just mention why i find
 

00:14:22.880 --> 00:14:25.189 align:start position:0%
i want to just mention why i find
operating<00:14:23.279><c> the</c><00:14:23.440><c> study</c><00:14:23.680><c> of</c><00:14:23.839><c> operating</c><00:14:24.240><c> systems</c>

00:14:25.189 --> 00:14:25.199 align:start position:0%
operating the study of operating systems
 

00:14:25.199 --> 00:14:26.389 align:start position:0%
operating the study of operating systems
to<00:14:25.440><c> be</c>

00:14:26.389 --> 00:14:26.399 align:start position:0%
to be
 

00:14:26.399 --> 00:14:32.629 align:start position:0%
to be
both<00:14:28.480><c> challenging</c><00:14:29.199><c> and</c><00:14:29.519><c> interesting</c>

00:14:32.629 --> 00:14:32.639 align:start position:0%
 
 

00:14:32.639 --> 00:14:36.389 align:start position:0%
 
why<00:14:32.880><c> you</c><00:14:32.959><c> know</c><00:14:33.120><c> why</c><00:14:33.279><c> it's</c><00:14:33.519><c> maybe</c><00:14:33.839><c> worth</c>

00:14:36.389 --> 00:14:36.399 align:start position:0%
 
 

00:14:36.399 --> 00:14:37.829 align:start position:0%
 
intellectually<00:14:36.880><c> worth</c><00:14:37.120><c> taking</c><00:14:37.440><c> a</c><00:14:37.519><c> course</c><00:14:37.760><c> in</c>

00:14:37.829 --> 00:14:37.839 align:start position:0%
intellectually worth taking a course in
 

00:14:37.839 --> 00:14:40.550 align:start position:0%
intellectually worth taking a course in
this<00:14:38.079><c> area</c><00:14:39.199><c> so</c><00:14:39.440><c> one</c><00:14:39.600><c> reason</c><00:14:39.839><c> why</c><00:14:40.000><c> it's</c><00:14:40.079><c> hard</c><00:14:40.399><c> is</c>

00:14:40.550 --> 00:14:40.560 align:start position:0%
this area so one reason why it's hard is
 

00:14:40.560 --> 00:14:41.350 align:start position:0%
this area so one reason why it's hard is
that<00:14:40.800><c> the</c>

00:14:41.350 --> 00:14:41.360 align:start position:0%
that the
 

00:14:41.360 --> 00:14:43.910 align:start position:0%
that the
environment's<00:14:41.920><c> unforgiving</c><00:14:43.680><c> the</c>

00:14:43.910 --> 00:14:43.920 align:start position:0%
environment's unforgiving the
 

00:14:43.920 --> 00:14:45.350 align:start position:0%
environment's unforgiving the
programming<00:14:44.399><c> environment</c><00:14:44.959><c> inside</c><00:14:45.279><c> the</c>

00:14:45.350 --> 00:14:45.360 align:start position:0%
programming environment inside the
 

00:14:45.360 --> 00:14:47.110 align:start position:0%
programming environment inside the
kernel<00:14:45.680><c> is</c><00:14:45.760><c> unforgiving</c><00:14:46.320><c> because</c>

00:14:47.110 --> 00:14:47.120 align:start position:0%
kernel is unforgiving because
 

00:14:47.120 --> 00:14:50.550 align:start position:0%
kernel is unforgiving because
you're

00:14:50.550 --> 00:14:50.560 align:start position:0%
 
 

00:14:50.560 --> 00:14:51.829 align:start position:0%
 
you're<00:14:50.800><c> when</c><00:14:51.040><c> you're</c><00:14:51.279><c> programming</c><00:14:51.760><c> when</c>

00:14:51.829 --> 00:14:51.839 align:start position:0%
you're when you're programming when
 

00:14:51.839 --> 00:14:53.350 align:start position:0%
you're when you're programming when
you're<00:14:52.000><c> modifying</c><00:14:52.480><c> the</c><00:14:52.560><c> kernel</c><00:14:52.880><c> or</c><00:14:52.959><c> extending</c>

00:14:53.350 --> 00:14:53.360 align:start position:0%
you're modifying the kernel or extending
 

00:14:53.360 --> 00:14:54.790 align:start position:0%
you're modifying the kernel or extending
the<00:14:53.440><c> kernel</c><00:14:53.839><c> writing</c><00:14:54.079><c> a</c><00:14:54.160><c> new</c><00:14:54.399><c> operating</c>

00:14:54.790 --> 00:14:54.800 align:start position:0%
the kernel writing a new operating
 

00:14:54.800 --> 00:14:55.750 align:start position:0%
the kernel writing a new operating
system<00:14:55.120><c> kernel</c>

00:14:55.750 --> 00:14:55.760 align:start position:0%
system kernel
 

00:14:55.760 --> 00:14:57.750 align:start position:0%
system kernel
you're<00:14:56.000><c> providing</c><00:14:56.399><c> the</c><00:14:56.560><c> infrastructure</c><00:14:57.279><c> that</c>

00:14:57.750 --> 00:14:57.760 align:start position:0%
you're providing the infrastructure that
 

00:14:57.760 --> 00:14:59.509 align:start position:0%
you're providing the infrastructure that
everybody<00:14:58.160><c> else</c><00:14:58.480><c> assumes</c><00:14:58.959><c> is</c><00:14:59.120><c> already</c>

00:14:59.509 --> 00:14:59.519 align:start position:0%
everybody else assumes is already
 

00:14:59.519 --> 00:15:01.430 align:start position:0%
everybody else assumes is already
present<00:14:59.839><c> to</c><00:15:00.000><c> run</c><00:15:00.160><c> their</c><00:15:00.399><c> programs</c>

00:15:01.430 --> 00:15:01.440 align:start position:0%
present to run their programs
 

00:15:01.440 --> 00:15:02.790 align:start position:0%
present to run their programs
right<00:15:01.760><c> and</c><00:15:02.000><c> everybody</c><00:15:02.320><c> else</c><00:15:02.480><c> gets</c><00:15:02.720><c> an</c>

00:15:02.790 --> 00:15:02.800 align:start position:0%
right and everybody else gets an
 

00:15:02.800 --> 00:15:04.150 align:start position:0%
right and everybody else gets an
operating<00:15:03.199><c> system</c><00:15:03.440><c> under</c><00:15:03.600><c> their</c><00:15:03.839><c> program</c>

00:15:04.150 --> 00:15:04.160 align:start position:0%
operating system under their program
 

00:15:04.160 --> 00:15:05.990 align:start position:0%
operating system under their program
when<00:15:04.639><c> they</c><00:15:04.800><c> write</c><00:15:05.120><c> ordinary</c><00:15:05.519><c> application</c>

00:15:05.990 --> 00:15:06.000 align:start position:0%
when they write ordinary application
 

00:15:06.000 --> 00:15:07.269 align:start position:0%
when they write ordinary application
programs<00:15:06.480><c> but</c>

00:15:07.269 --> 00:15:07.279 align:start position:0%
programs but
 

00:15:07.279 --> 00:15:09.189 align:start position:0%
programs but
when<00:15:07.519><c> we</c><00:15:07.920><c> build</c><00:15:08.240><c> operating</c><00:15:08.560><c> systems</c><00:15:08.880><c> what</c><00:15:09.040><c> we</c>

00:15:09.189 --> 00:15:09.199 align:start position:0%
when we build operating systems what we
 

00:15:09.199 --> 00:15:11.350 align:start position:0%
when we build operating systems what we
get<00:15:09.440><c> is</c><00:15:09.680><c> the</c><00:15:09.760><c> hardware</c><00:15:10.399><c> underneath</c>

00:15:11.350 --> 00:15:11.360 align:start position:0%
get is the hardware underneath
 

00:15:11.360 --> 00:15:13.990 align:start position:0%
get is the hardware underneath
our<00:15:11.519><c> operating</c><00:15:11.920><c> system</c><00:15:13.199><c> which</c><00:15:13.519><c> turns</c><00:15:13.760><c> out</c><00:15:13.920><c> to</c>

00:15:13.990 --> 00:15:14.000 align:start position:0%
our operating system which turns out to
 

00:15:14.000 --> 00:15:14.470 align:start position:0%
our operating system which turns out to
be

00:15:14.470 --> 00:15:14.480 align:start position:0%
be
 

00:15:14.480 --> 00:15:15.910 align:start position:0%
be
more<00:15:14.639><c> difficult</c><00:15:15.040><c> to</c><00:15:15.120><c> deal</c><00:15:15.360><c> with</c><00:15:15.600><c> in</c><00:15:15.760><c> this</c>

00:15:15.910 --> 00:15:15.920 align:start position:0%
more difficult to deal with in this
 

00:15:15.920 --> 00:15:18.389 align:start position:0%
more difficult to deal with in this
course<00:15:16.240><c> we</c>

00:15:18.389 --> 00:15:18.399 align:start position:0%
course we
 

00:15:18.399 --> 00:15:20.389 align:start position:0%
course we
we<00:15:18.560><c> get</c><00:15:18.720><c> to</c><00:15:18.800><c> use</c><00:15:19.040><c> a</c><00:15:19.440><c> hardware</c><00:15:19.839><c> simulator</c>

00:15:20.389 --> 00:15:20.399 align:start position:0%
we get to use a hardware simulator
 

00:15:20.399 --> 00:15:22.710 align:start position:0%
we get to use a hardware simulator
called<00:15:20.639><c> qmu</c>

00:15:22.710 --> 00:15:22.720 align:start position:0%
called qmu
 

00:15:22.720 --> 00:15:25.350 align:start position:0%
called qmu
that<00:15:23.040><c> you</c><00:15:23.120><c> know</c><00:15:23.360><c> simulates</c><00:15:24.399><c> a</c><00:15:24.560><c> cpu</c><00:15:25.199><c> and</c><00:15:25.279><c> a</c>

00:15:25.350 --> 00:15:25.360 align:start position:0%
that you know simulates a cpu and a
 

00:15:25.360 --> 00:15:26.790 align:start position:0%
that you know simulates a cpu and a
computer<00:15:25.920><c> and</c><00:15:26.000><c> that</c><00:15:26.160><c> makes</c><00:15:26.399><c> life</c><00:15:26.560><c> a</c><00:15:26.639><c> little</c>

00:15:26.790 --> 00:15:26.800 align:start position:0%
computer and that makes life a little
 

00:15:26.800 --> 00:15:27.509 align:start position:0%
computer and that makes life a little
bit<00:15:26.880><c> better</c><00:15:27.120><c> but</c>

00:15:27.509 --> 00:15:27.519 align:start position:0%
bit better but
 

00:15:27.519 --> 00:15:29.829 align:start position:0%
bit better but
it's<00:15:27.760><c> it's</c><00:15:28.000><c> still</c><00:15:28.240><c> a</c><00:15:28.399><c> kind</c><00:15:28.560><c> of</c><00:15:28.639><c> a</c><00:15:28.800><c> difficult</c>

00:15:29.829 --> 00:15:29.839 align:start position:0%
it's it's still a kind of a difficult
 

00:15:29.839 --> 00:15:32.230 align:start position:0%
it's it's still a kind of a difficult
environment<00:15:30.320><c> to</c><00:15:30.399><c> program</c><00:15:30.800><c> it</c>

00:15:32.230 --> 00:15:32.240 align:start position:0%
environment to program it
 

00:15:32.240 --> 00:15:33.430 align:start position:0%
environment to program it
another<00:15:32.560><c> reason</c><00:15:32.800><c> why</c><00:15:32.959><c> it's</c><00:15:33.040><c> hard</c><00:15:33.279><c> and</c>

00:15:33.430 --> 00:15:33.440 align:start position:0%
another reason why it's hard and
 

00:15:33.440 --> 00:15:35.110 align:start position:0%
another reason why it's hard and
interesting<00:15:33.920><c> is</c><00:15:34.079><c> because</c><00:15:34.880><c> if</c><00:15:34.959><c> you're</c>

00:15:35.110 --> 00:15:35.120 align:start position:0%
interesting is because if you're
 

00:15:35.120 --> 00:15:36.790 align:start position:0%
interesting is because if you're
designing<00:15:35.600><c> an</c><00:15:35.759><c> operating</c><00:15:36.240><c> system</c><00:15:36.560><c> you</c><00:15:36.639><c> have</c>

00:15:36.790 --> 00:15:36.800 align:start position:0%
designing an operating system you have
 

00:15:36.800 --> 00:15:38.829 align:start position:0%
designing an operating system you have
to<00:15:36.959><c> satisfy</c><00:15:37.519><c> a</c><00:15:37.600><c> bunch</c><00:15:37.839><c> of</c>

00:15:38.829 --> 00:15:38.839 align:start position:0%
to satisfy a bunch of
 

00:15:38.839 --> 00:15:41.350 align:start position:0%
to satisfy a bunch of
tensions<00:15:40.240><c> that</c><00:15:40.399><c> require</c><00:15:40.720><c> real</c><00:15:40.959><c> design</c>

00:15:41.350 --> 00:15:41.360 align:start position:0%
tensions that require real design
 

00:15:41.360 --> 00:15:41.910 align:start position:0%
tensions that require real design
thought

00:15:41.910 --> 00:15:41.920 align:start position:0%
thought
 

00:15:41.920 --> 00:15:44.389 align:start position:0%
thought
so<00:15:42.399><c> one</c><00:15:42.639><c> is</c><00:15:42.720><c> that</c><00:15:42.880><c> you'd</c><00:15:43.040><c> like</c><00:15:43.279><c> your</c><00:15:44.000><c> operating</c>

00:15:44.389 --> 00:15:44.399 align:start position:0%
so one is that you'd like your operating
 

00:15:44.399 --> 00:15:47.430 align:start position:0%
so one is that you'd like your operating
system<00:15:44.720><c> to</c><00:15:44.880><c> be</c><00:15:45.040><c> both</c><00:15:45.279><c> efficient</c>

00:15:47.430 --> 00:15:47.440 align:start position:0%
system to be both efficient
 

00:15:47.440 --> 00:15:49.030 align:start position:0%
system to be both efficient
which<00:15:47.680><c> often</c><00:15:48.000><c> means</c><00:15:48.320><c> that</c><00:15:48.480><c> it</c><00:15:48.800><c> sort</c><00:15:48.959><c> of</c>

00:15:49.030 --> 00:15:49.040 align:start position:0%
which often means that it sort of
 

00:15:49.040 --> 00:15:50.629 align:start position:0%
which often means that it sort of
operates<00:15:49.519><c> at</c><00:15:49.600><c> a</c><00:15:49.680><c> low</c><00:15:49.839><c> level</c><00:15:50.160><c> close</c><00:15:50.399><c> to</c><00:15:50.560><c> the</c>

00:15:50.629 --> 00:15:50.639 align:start position:0%
operates at a low level close to the
 

00:15:50.639 --> 00:15:51.670 align:start position:0%
operates at a low level close to the
hardware

00:15:51.670 --> 00:15:51.680 align:start position:0%
hardware
 

00:15:51.680 --> 00:15:54.310 align:start position:0%
hardware
but<00:15:52.079><c> for</c><00:15:52.240><c> ease</c><00:15:52.480><c> of</c><00:15:52.639><c> use</c><00:15:53.440><c> and</c><00:15:53.600><c> because</c><00:15:54.079><c> real</c>

00:15:54.310 --> 00:15:54.320 align:start position:0%
but for ease of use and because real
 

00:15:54.320 --> 00:15:56.389 align:start position:0%
but for ease of use and because real
live<00:15:54.560><c> people</c><00:15:54.720><c> have</c><00:15:54.880><c> to</c><00:15:54.959><c> write</c><00:15:55.199><c> programs</c>

00:15:56.389 --> 00:15:56.399 align:start position:0%
live people have to write programs
 

00:15:56.399 --> 00:15:58.310 align:start position:0%
live people have to write programs
that<00:15:56.560><c> use</c><00:15:56.800><c> your</c><00:15:56.959><c> operating</c><00:15:57.360><c> system</c><00:15:57.839><c> we'd</c><00:15:58.079><c> like</c>

00:15:58.310 --> 00:15:58.320 align:start position:0%
that use your operating system we'd like
 

00:15:58.320 --> 00:16:00.069 align:start position:0%
that use your operating system we'd like
it<00:15:58.480><c> also</c><00:15:58.800><c> to</c><00:15:58.959><c> be</c>

00:16:00.069 --> 00:16:00.079 align:start position:0%
it also to be
 

00:16:00.079 --> 00:16:03.269 align:start position:0%
it also to be
provide<00:16:00.480><c> abstract</c><00:16:01.120><c> high-level</c><00:16:02.880><c> portable</c>

00:16:03.269 --> 00:16:03.279 align:start position:0%
provide abstract high-level portable
 

00:16:03.279 --> 00:16:04.069 align:start position:0%
provide abstract high-level portable
interfaces

00:16:04.069 --> 00:16:04.079 align:start position:0%
interfaces
 

00:16:04.079 --> 00:16:05.990 align:start position:0%
interfaces
and<00:16:04.160><c> it's</c><00:16:04.320><c> a</c><00:16:04.399><c> neat</c><00:16:04.639><c> trick</c><00:16:04.880><c> to</c><00:16:05.040><c> provide</c>

00:16:05.990 --> 00:16:06.000 align:start position:0%
and it's a neat trick to provide
 

00:16:06.000 --> 00:16:08.230 align:start position:0%
and it's a neat trick to provide
abstract<00:16:06.560><c> interfaces</c><00:16:07.040><c> that</c><00:16:07.199><c> are</c><00:16:07.279><c> simple</c>

00:16:08.230 --> 00:16:08.240 align:start position:0%
abstract interfaces that are simple
 

00:16:08.240 --> 00:16:10.150 align:start position:0%
abstract interfaces that are simple
um<00:16:08.639><c> affordable</c><00:16:09.440><c> but</c><00:16:09.600><c> that</c><00:16:09.759><c> are</c><00:16:09.839><c> also</c>

00:16:10.150 --> 00:16:10.160 align:start position:0%
um affordable but that are also
 

00:16:10.160 --> 00:16:12.550 align:start position:0%
um affordable but that are also
efficient

00:16:12.550 --> 00:16:12.560 align:start position:0%
efficient
 

00:16:12.560 --> 00:16:14.710 align:start position:0%
efficient
another<00:16:12.880><c> tension</c><00:16:13.759><c> is</c><00:16:13.839><c> that</c><00:16:14.320><c> we'd</c><00:16:14.480><c> like</c><00:16:14.639><c> to</c>

00:16:14.710 --> 00:16:14.720 align:start position:0%
another tension is that we'd like to
 

00:16:14.720 --> 00:16:16.870 align:start position:0%
another tension is that we'd like to
provide<00:16:15.440><c> a</c><00:16:15.519><c> very</c><00:16:15.839><c> powerful</c>

00:16:16.870 --> 00:16:16.880 align:start position:0%
provide a very powerful
 

00:16:16.880 --> 00:16:18.790 align:start position:0%
provide a very powerful
operating<00:16:17.360><c> system</c><00:16:17.680><c> services</c><00:16:18.160><c> so</c><00:16:18.320><c> that</c><00:16:18.639><c> the</c>

00:16:18.790 --> 00:16:18.800 align:start position:0%
operating system services so that the
 

00:16:18.800 --> 00:16:20.470 align:start position:0%
operating system services so that the
operating<00:16:19.199><c> system</c><00:16:19.519><c> can</c><00:16:19.759><c> shoulder</c><00:16:20.160><c> a</c><00:16:20.240><c> lot</c><00:16:20.399><c> of</c>

00:16:20.470 --> 00:16:20.480 align:start position:0%
operating system can shoulder a lot of
 

00:16:20.480 --> 00:16:22.949 align:start position:0%
operating system can shoulder a lot of
the<00:16:20.639><c> burden</c>

00:16:22.949 --> 00:16:22.959 align:start position:0%
the burden
 

00:16:22.959 --> 00:16:24.790 align:start position:0%
the burden
of<00:16:23.440><c> running</c><00:16:23.759><c> programs</c><00:16:24.320><c> we'd</c><00:16:24.480><c> like</c><00:16:24.639><c> to</c>

00:16:24.790 --> 00:16:24.800 align:start position:0%
of running programs we'd like to
 

00:16:24.800 --> 00:16:26.069 align:start position:0%
of running programs we'd like to
powerful

00:16:26.069 --> 00:16:26.079 align:start position:0%
powerful
 

00:16:26.079 --> 00:16:29.430 align:start position:0%
powerful
operating<00:16:26.560><c> system</c><00:16:26.880><c> services</c>

00:16:29.430 --> 00:16:29.440 align:start position:0%
operating system services
 

00:16:29.440 --> 00:16:31.910 align:start position:0%
operating system services
but<00:16:30.880><c> we</c><00:16:31.040><c> also</c><00:16:31.279><c> want</c><00:16:31.360><c> to</c><00:16:31.440><c> have</c><00:16:31.600><c> simple</c>

00:16:31.910 --> 00:16:31.920 align:start position:0%
but we also want to have simple
 

00:16:31.920 --> 00:16:35.110 align:start position:0%
but we also want to have simple
interfaces

00:16:35.110 --> 00:16:35.120 align:start position:0%
 
 

00:16:35.120 --> 00:16:37.509 align:start position:0%
 
that<00:16:35.279><c> is</c><00:16:35.440><c> we</c><00:16:35.519><c> don't</c><00:16:35.680><c> want</c><00:16:36.880><c> tremendously</c>

00:16:37.509 --> 00:16:37.519 align:start position:0%
that is we don't want tremendously
 

00:16:37.519 --> 00:16:39.350 align:start position:0%
that is we don't want tremendously
complex<00:16:38.079><c> hard</c><00:16:38.240><c> to</c><00:16:38.399><c> understand</c><00:16:38.800><c> interfaces</c>

00:16:39.350 --> 00:16:39.360 align:start position:0%
complex hard to understand interfaces
 

00:16:39.360 --> 00:16:41.509 align:start position:0%
complex hard to understand interfaces
for<00:16:39.600><c> programmers</c><00:16:40.079><c> to</c><00:16:40.240><c> use</c><00:16:40.480><c> because</c>

00:16:41.509 --> 00:16:41.519 align:start position:0%
for programmers to use because
 

00:16:41.519 --> 00:16:42.629 align:start position:0%
for programmers to use because
they're<00:16:41.680><c> not</c><00:16:41.839><c> going</c><00:16:41.920><c> to</c><00:16:42.000><c> understand</c><00:16:42.399><c> them</c><00:16:42.560><c> and</c>

00:16:42.629 --> 00:16:42.639 align:start position:0%
they're not going to understand them and
 

00:16:42.639 --> 00:16:45.829 align:start position:0%
they're not going to understand them and
they<00:16:43.040><c> may</c><00:16:43.199><c> find</c><00:16:43.440><c> it</c><00:16:43.519><c> hard</c><00:16:43.759><c> to</c><00:16:43.920><c> use</c>

00:16:45.829 --> 00:16:45.839 align:start position:0%
they may find it hard to use
 

00:16:45.839 --> 00:16:48.949 align:start position:0%
they may find it hard to use
um<00:16:46.720><c> so</c><00:16:46.880><c> this</c><00:16:47.040><c> is</c><00:16:47.120><c> really</c><00:16:47.360><c> simple</c><00:16:47.680><c> api</c><00:16:48.399><c> and</c><00:16:48.480><c> so</c>

00:16:48.949 --> 00:16:48.959 align:start position:0%
um so this is really simple api and so
 

00:16:48.959 --> 00:16:52.310 align:start position:0%
um so this is really simple api and so
this<00:16:49.199><c> is</c><00:16:49.360><c> possible</c><00:16:49.759><c> to</c><00:16:49.920><c> do</c><00:16:50.320><c> to</c><00:16:50.560><c> provide</c><00:16:51.680><c> simple</c>

00:16:52.310 --> 00:16:52.320 align:start position:0%
this is possible to do to provide simple
 

00:16:52.320 --> 00:16:55.749 align:start position:0%
this is possible to do to provide simple
interfaces<00:16:53.040><c> that</c><00:16:53.199><c> have</c><00:16:53.519><c> powerful</c><00:16:55.120><c> machinery</c>

00:16:55.749 --> 00:16:55.759 align:start position:0%
interfaces that have powerful machinery
 

00:16:55.759 --> 00:16:57.350 align:start position:0%
interfaces that have powerful machinery
inside<00:16:56.160><c> them</c><00:16:56.399><c> and</c><00:16:56.639><c> so</c><00:16:56.800><c> we'll</c><00:16:56.959><c> always</c><00:16:57.199><c> be</c>

00:16:57.350 --> 00:16:57.360 align:start position:0%
inside them and so we'll always be
 

00:16:57.360 --> 00:16:58.629 align:start position:0%
inside them and so we'll always be
searching<00:16:57.759><c> for</c>

00:16:58.629 --> 00:16:58.639 align:start position:0%
searching for
 

00:16:58.639 --> 00:17:02.949 align:start position:0%
searching for
sort<00:16:58.800><c> of</c><00:16:58.959><c> simple</c><00:16:59.279><c> interfaces</c><00:17:00.800><c> that</c><00:17:00.959><c> provide</c>

00:17:02.949 --> 00:17:02.959 align:start position:0%
sort of simple interfaces that provide
 

00:17:02.959 --> 00:17:05.669 align:start position:0%
sort of simple interfaces that provide
powerful<00:17:03.440><c> services</c><00:17:04.720><c> hey</c><00:17:04.959><c> robert</c><00:17:05.199><c> we</c><00:17:05.360><c> have</c><00:17:05.439><c> a</c>

00:17:05.669 --> 00:17:05.679 align:start position:0%
powerful services hey robert we have a
 

00:17:05.679 --> 00:17:07.189 align:start position:0%
powerful services hey robert we have a
question<00:17:06.079><c> in</c><00:17:06.160><c> the</c><00:17:06.400><c> chat</c>

00:17:07.189 --> 00:17:07.199 align:start position:0%
question in the chat
 

00:17:07.199 --> 00:17:09.510 align:start position:0%
question in the chat
uh<00:17:07.679><c> what</c><00:17:07.839><c> is</c><00:17:08.079><c> unique</c><00:17:08.400><c> slash</c><00:17:08.799><c> different</c><00:17:09.199><c> about</c>

00:17:09.510 --> 00:17:09.520 align:start position:0%
uh what is unique slash different about
 

00:17:09.520 --> 00:17:11.669 align:start position:0%
uh what is unique slash different about
saying<00:17:09.760><c> system</c><00:17:10.160><c> calls</c><00:17:10.559><c> jump</c><00:17:10.799><c> into</c><00:17:10.959><c> the</c><00:17:11.120><c> kernel</c>

00:17:11.669 --> 00:17:11.679 align:start position:0%
saying system calls jump into the kernel
 

00:17:11.679 --> 00:17:13.669 align:start position:0%
saying system calls jump into the kernel
i.e<00:17:12.160><c> as</c><00:17:12.319><c> opposed</c><00:17:12.640><c> to</c><00:17:12.799><c> a</c><00:17:12.880><c> standard</c><00:17:13.280><c> function</c>

00:17:13.669 --> 00:17:13.679 align:start position:0%
i.e as opposed to a standard function
 

00:17:13.679 --> 00:17:18.069 align:start position:0%
i.e as opposed to a standard function
call<00:17:13.839><c> that</c><00:17:14.000><c> jumps</c><00:17:14.319><c> to</c><00:17:14.480><c> another</c><00:17:16.839><c> function</c>

00:17:18.069 --> 00:17:18.079 align:start position:0%
call that jumps to another function
 

00:17:18.079 --> 00:17:21.909 align:start position:0%
call that jumps to another function
well<00:17:18.640><c> the</c><00:17:18.720><c> colonel</c><00:17:19.039><c> has</c><00:17:19.439><c> the</c><00:17:19.600><c> kernels</c><00:17:20.400><c> um</c>

00:17:21.909 --> 00:17:21.919 align:start position:0%
well the colonel has the kernels um
 

00:17:21.919 --> 00:17:23.750 align:start position:0%
well the colonel has the kernels um
a<00:17:22.079><c> piece</c><00:17:22.240><c> of</c><00:17:22.319><c> code</c><00:17:22.480><c> that's</c><00:17:22.720><c> always</c><00:17:23.039><c> resident</c>

00:17:23.750 --> 00:17:23.760 align:start position:0%
a piece of code that's always resident
 

00:17:23.760 --> 00:17:25.669 align:start position:0%
a piece of code that's always resident
that<00:17:23.919><c> has</c><00:17:24.240><c> special</c><00:17:24.799><c> privileges</c>

00:17:25.669 --> 00:17:25.679 align:start position:0%
that has special privileges
 

00:17:25.679 --> 00:17:28.230 align:start position:0%
that has special privileges
that<00:17:25.919><c> were</c><00:17:26.240><c> that</c><00:17:26.480><c> because</c><00:17:26.720><c> it</c><00:17:26.880><c> booted</c><00:17:27.520><c> the</c>

00:17:28.230 --> 00:17:28.240 align:start position:0%
that were that because it booted the
 

00:17:28.240 --> 00:17:29.990 align:start position:0%
that were that because it booted the
machine<00:17:28.640><c> booted</c><00:17:28.960><c> the</c><00:17:29.039><c> kernel</c>

00:17:29.990 --> 00:17:30.000 align:start position:0%
machine booted the kernel
 

00:17:30.000 --> 00:17:31.990 align:start position:0%
machine booted the kernel
um<00:17:30.559><c> the</c><00:17:30.720><c> kernel</c><00:17:31.039><c> has</c><00:17:31.200><c> special</c><00:17:31.520><c> inter</c>

00:17:31.990 --> 00:17:32.000 align:start position:0%
um the kernel has special inter
 

00:17:32.000 --> 00:17:34.230 align:start position:0%
um the kernel has special inter
privileges<00:17:32.559><c> that</c><00:17:32.640><c> can</c><00:17:32.799><c> get</c><00:17:33.039><c> directly</c><00:17:33.600><c> at</c>

00:17:34.230 --> 00:17:34.240 align:start position:0%
privileges that can get directly at
 

00:17:34.240 --> 00:17:35.909 align:start position:0%
privileges that can get directly at
all<00:17:34.400><c> kinds</c><00:17:34.640><c> of</c><00:17:34.720><c> hardware</c><00:17:35.280><c> like</c><00:17:35.520><c> the</c><00:17:35.679><c> disk</c>

00:17:35.909 --> 00:17:35.919 align:start position:0%
all kinds of hardware like the disk
 

00:17:35.919 --> 00:17:38.470 align:start position:0%
all kinds of hardware like the disk
device<00:17:36.799><c> that</c><00:17:37.039><c> ordinary</c><00:17:37.440><c> user</c><00:17:37.760><c> programs</c><00:17:38.240><c> can't</c>

00:17:38.470 --> 00:17:38.480 align:start position:0%
device that ordinary user programs can't
 

00:17:38.480 --> 00:17:39.190 align:start position:0%
device that ordinary user programs can't
get<00:17:38.720><c> at</c>

00:17:39.190 --> 00:17:39.200 align:start position:0%
get at
 

00:17:39.200 --> 00:17:40.710 align:start position:0%
get at
so<00:17:39.360><c> if</c><00:17:39.520><c> you</c><00:17:39.600><c> make</c><00:17:39.760><c> a</c><00:17:39.840><c> fun</c><00:17:40.080><c> an</c><00:17:40.240><c> ordinary</c>

00:17:40.710 --> 00:17:40.720 align:start position:0%
so if you make a fun an ordinary
 

00:17:40.720 --> 00:17:43.830 align:start position:0%
so if you make a fun an ordinary
function<00:17:41.200><c> call</c><00:17:42.160><c> um</c>

00:17:43.830 --> 00:17:43.840 align:start position:0%
function call um
 

00:17:43.840 --> 00:17:45.510 align:start position:0%
function call um
the<00:17:44.160><c> the</c><00:17:44.640><c> function</c><00:17:44.880><c> you're</c><00:17:45.039><c> calling</c><00:17:45.280><c> doesn't</c>

00:17:45.510 --> 00:17:45.520 align:start position:0%
the the function you're calling doesn't
 

00:17:45.520 --> 00:17:47.270 align:start position:0%
the the function you're calling doesn't
get<00:17:45.919><c> it</c><00:17:46.000><c> just</c><00:17:46.320><c> doesn't</c><00:17:46.559><c> get</c><00:17:46.720><c> any</c><00:17:46.960><c> special</c>

00:17:47.270 --> 00:17:47.280 align:start position:0%
get it just doesn't get any special
 

00:17:47.280 --> 00:17:49.350 align:start position:0%
get it just doesn't get any special
privileges<00:17:47.919><c> with</c><00:17:48.160><c> respect</c><00:17:48.480><c> to</c><00:17:48.640><c> the</c><00:17:48.720><c> hardware</c>

00:17:49.350 --> 00:17:49.360 align:start position:0%
privileges with respect to the hardware
 

00:17:49.360 --> 00:17:50.789 align:start position:0%
privileges with respect to the hardware
whereas<00:17:49.679><c> if</c><00:17:49.760><c> you</c><00:17:49.840><c> make</c><00:17:50.000><c> a</c><00:17:50.080><c> system</c><00:17:50.400><c> call</c><00:17:50.640><c> into</c>

00:17:50.789 --> 00:17:50.799 align:start position:0%
whereas if you make a system call into
 

00:17:50.799 --> 00:17:52.789 align:start position:0%
whereas if you make a system call into
the<00:17:50.880><c> kernel</c><00:17:51.840><c> um</c>

00:17:52.789 --> 00:17:52.799 align:start position:0%
the kernel um
 

00:17:52.799 --> 00:17:54.549 align:start position:0%
the kernel um
we'll<00:17:52.960><c> talk</c><00:17:53.120><c> about</c><00:17:53.280><c> how</c><00:17:53.440><c> this</c><00:17:53.600><c> works</c><00:17:53.919><c> but</c><00:17:54.320><c> that</c>

00:17:54.549 --> 00:17:54.559 align:start position:0%
we'll talk about how this works but that
 

00:17:54.559 --> 00:17:56.310 align:start position:0%
we'll talk about how this works but that
ends<00:17:54.880><c> up</c><00:17:55.440><c> um</c>

00:17:56.310 --> 00:17:56.320 align:start position:0%
ends up um
 

00:17:56.320 --> 00:17:57.990 align:start position:0%
ends up um
as<00:17:56.559><c> it</c><00:17:56.640><c> when</c><00:17:56.880><c> it</c><00:17:56.960><c> jumps</c><00:17:57.280><c> into</c><00:17:57.520><c> when</c><00:17:57.679><c> the</c><00:17:57.760><c> system</c>

00:17:57.990 --> 00:17:58.000 align:start position:0%
as it when it jumps into when the system
 

00:17:58.000 --> 00:17:59.909 align:start position:0%
as it when it jumps into when the system
call<00:17:58.240><c> jumps</c><00:17:58.480><c> into</c><00:17:58.720><c> the</c><00:17:58.799><c> kernel</c>

00:17:59.909 --> 00:17:59.919 align:start position:0%
call jumps into the kernel
 

00:17:59.919 --> 00:18:01.590 align:start position:0%
call jumps into the kernel
the<00:18:00.080><c> system</c><00:18:00.480><c> call</c><00:18:00.799><c> implementation</c><00:18:01.440><c> in</c><00:18:01.520><c> the</c>

00:18:01.590 --> 00:18:01.600 align:start position:0%
the system call implementation in the
 

00:18:01.600 --> 00:18:02.950 align:start position:0%
the system call implementation in the
kernel<00:18:01.840><c> then</c><00:18:02.080><c> gets</c><00:18:02.320><c> all</c><00:18:02.480><c> these</c><00:18:02.640><c> special</c>

00:18:02.950 --> 00:18:02.960 align:start position:0%
kernel then gets all these special
 

00:18:02.960 --> 00:18:04.150 align:start position:0%
kernel then gets all these special
privileges<00:18:03.520><c> so</c><00:18:03.679><c> that</c><00:18:03.840><c> it</c>

00:18:04.150 --> 00:18:04.160 align:start position:0%
privileges so that it
 

00:18:04.160 --> 00:18:07.590 align:start position:0%
privileges so that it
it<00:18:04.480><c> can</c><00:18:05.760><c> modify</c><00:18:06.320><c> all</c><00:18:06.559><c> kinds</c><00:18:06.880><c> of</c>

00:18:07.590 --> 00:18:07.600 align:start position:0%
it can modify all kinds of
 

00:18:07.600 --> 00:18:10.789 align:start position:0%
it can modify all kinds of
sensitive<00:18:08.160><c> and</c><00:18:08.320><c> protected</c><00:18:09.679><c> uh</c><00:18:10.320><c> hardware</c>

00:18:10.789 --> 00:18:10.799 align:start position:0%
sensitive and protected uh hardware
 

00:18:10.799 --> 00:18:12.310 align:start position:0%
sensitive and protected uh hardware
resources<00:18:11.360><c> like</c><00:18:11.520><c> for</c><00:18:11.679><c> example</c><00:18:12.000><c> getting</c>

00:18:12.310 --> 00:18:12.320 align:start position:0%
resources like for example getting
 

00:18:12.320 --> 00:18:13.350 align:start position:0%
resources like for example getting
directly<00:18:12.720><c> at</c><00:18:12.880><c> the</c>

00:18:13.350 --> 00:18:13.360 align:start position:0%
directly at the
 

00:18:13.360 --> 00:18:17.029 align:start position:0%
directly at the
hard<00:18:13.600><c> disk</c><00:18:16.000><c> we'll</c><00:18:16.160><c> see</c><00:18:16.320><c> a</c><00:18:16.400><c> lot</c><00:18:16.559><c> more</c><00:18:16.720><c> detail</c>

00:18:17.029 --> 00:18:17.039 align:start position:0%
hard disk we'll see a lot more detail
 

00:18:17.039 --> 00:18:17.830 align:start position:0%
hard disk we'll see a lot more detail
for<00:18:17.280><c> all</c><00:18:17.440><c> this</c>

00:18:17.830 --> 00:18:17.840 align:start position:0%
for all this
 

00:18:17.840 --> 00:18:21.110 align:start position:0%
for all this
uh<00:18:18.240><c> shortly</c><00:18:20.320><c> okay</c><00:18:20.640><c> so</c>

00:18:21.110 --> 00:18:21.120 align:start position:0%
uh shortly okay so
 

00:18:21.120 --> 00:18:23.430 align:start position:0%
uh shortly okay so
a<00:18:21.280><c> final</c><00:18:21.600><c> tension</c><00:18:21.919><c> that</c><00:18:22.080><c> we</c><00:18:22.240><c> wanna</c><00:18:22.559><c> that</c><00:18:23.200><c> all</c>

00:18:23.430 --> 00:18:23.440 align:start position:0%
a final tension that we wanna that all
 

00:18:23.440 --> 00:18:25.190 align:start position:0%
a final tension that we wanna that all
operating<00:18:23.760><c> systems</c><00:18:24.080><c> need</c><00:18:24.240><c> to</c><00:18:24.320><c> satisfy</c><00:18:24.799><c> is</c><00:18:25.039><c> you</c>

00:18:25.190 --> 00:18:25.200 align:start position:0%
operating systems need to satisfy is you
 

00:18:25.200 --> 00:18:26.950 align:start position:0%
operating systems need to satisfy is you
wanna<00:18:25.360><c> give</c><00:18:25.520><c> programs</c><00:18:25.840><c> as</c><00:18:26.000><c> much</c><00:18:26.160><c> flexibility</c>

00:18:26.950 --> 00:18:26.960 align:start position:0%
wanna give programs as much flexibility
 

00:18:26.960 --> 00:18:28.310 align:start position:0%
wanna give programs as much flexibility
as<00:18:27.120><c> you</c><00:18:27.280><c> can</c><00:18:27.440><c> you</c><00:18:27.600><c> don't</c><00:18:27.679><c> want</c><00:18:27.760><c> to</c><00:18:27.840><c> constrain</c>

00:18:28.310 --> 00:18:28.320 align:start position:0%
as you can you don't want to constrain
 

00:18:28.320 --> 00:18:33.029 align:start position:0%
as you can you don't want to constrain
them<00:18:28.799><c> so</c><00:18:28.960><c> you</c><00:18:29.039><c> want</c><00:18:29.120><c> to</c><00:18:29.200><c> have</c><00:18:29.360><c> very</c><00:18:29.600><c> flexible</c>

00:18:33.029 --> 00:18:33.039 align:start position:0%
 
 

00:18:33.039 --> 00:18:35.029 align:start position:0%
 
interfaces<00:18:33.679><c> but</c><00:18:34.080><c> you</c><00:18:34.240><c> do</c><00:18:34.400><c> need</c><00:18:34.559><c> to</c><00:18:34.640><c> constrain</c>

00:18:35.029 --> 00:18:35.039 align:start position:0%
interfaces but you do need to constrain
 

00:18:35.039 --> 00:18:36.630 align:start position:0%
interfaces but you do need to constrain
programs<00:18:35.360><c> somewhat</c><00:18:35.679><c> because</c><00:18:36.000><c> you</c><00:18:36.240><c> absolutely</c>

00:18:36.630 --> 00:18:36.640 align:start position:0%
programs somewhat because you absolutely
 

00:18:36.640 --> 00:18:39.590 align:start position:0%
programs somewhat because you absolutely
have<00:18:36.799><c> to</c><00:18:36.880><c> have</c><00:18:37.120><c> some</c><00:18:37.360><c> notion</c><00:18:37.600><c> of</c><00:18:37.760><c> security</c>

00:18:39.590 --> 00:18:39.600 align:start position:0%
have to have some notion of security
 

00:18:39.600 --> 00:18:43.430 align:start position:0%
have to have some notion of security
you<00:18:39.760><c> can't</c><00:18:41.679><c> you</c><00:18:42.000><c> we'd</c><00:18:42.160><c> love</c><00:18:42.480><c> for</c><00:18:42.640><c> programs</c><00:18:43.200><c> to</c>

00:18:43.430 --> 00:18:43.440 align:start position:0%
you can't you we'd love for programs to
 

00:18:43.440 --> 00:18:44.870 align:start position:0%
you can't you we'd love for programs to
give<00:18:43.679><c> programmers</c><00:18:44.160><c> complete</c><00:18:44.400><c> freedom</c><00:18:44.720><c> but</c><00:18:44.799><c> it</c>

00:18:44.870 --> 00:18:44.880 align:start position:0%
give programmers complete freedom but it
 

00:18:44.880 --> 00:18:46.070 align:start position:0%
give programmers complete freedom but it
can't<00:18:45.039><c> be</c><00:18:45.200><c> complete</c><00:18:45.520><c> can't</c><00:18:45.679><c> be</c><00:18:45.840><c> really</c>

00:18:46.070 --> 00:18:46.080 align:start position:0%
can't be complete can't be really
 

00:18:46.080 --> 00:18:46.870 align:start position:0%
can't be complete can't be really
complete

00:18:46.870 --> 00:18:46.880 align:start position:0%
complete
 

00:18:46.880 --> 00:18:48.630 align:start position:0%
complete
because<00:18:47.520><c> we</c><00:18:47.679><c> don't</c><00:18:47.840><c> want</c><00:18:48.080><c> programs</c><00:18:48.400><c> to</c><00:18:48.480><c> get</c>

00:18:48.630 --> 00:18:48.640 align:start position:0%
because we don't want programs to get
 

00:18:48.640 --> 00:18:50.390 align:start position:0%
because we don't want programs to get
directly<00:18:49.039><c> at</c><00:18:49.120><c> the</c><00:18:49.200><c> hardware</c><00:18:49.679><c> or</c><00:18:49.840><c> to</c><00:18:50.000><c> interfere</c>

00:18:50.390 --> 00:18:50.400 align:start position:0%
directly at the hardware or to interfere
 

00:18:50.400 --> 00:18:51.430 align:start position:0%
directly at the hardware or to interfere
with<00:18:50.559><c> other</c><00:18:50.799><c> programs</c>

00:18:51.430 --> 00:18:51.440 align:start position:0%
with other programs
 

00:18:51.440 --> 00:18:54.230 align:start position:0%
with other programs
or<00:18:53.039><c> to</c><00:18:53.120><c> sort</c><00:18:53.360><c> of</c><00:18:53.440><c> be</c><00:18:53.520><c> able</c><00:18:53.679><c> to</c><00:18:53.760><c> interfere</c><00:18:54.160><c> with</c>

00:18:54.230 --> 00:18:54.240 align:start position:0%
or to sort of be able to interfere with
 

00:18:54.240 --> 00:18:55.590 align:start position:0%
or to sort of be able to interfere with
the<00:18:54.400><c> operation</c><00:18:54.880><c> of</c><00:18:55.039><c> the</c>

00:18:55.590 --> 00:18:55.600 align:start position:0%
the operation of the
 

00:18:55.600 --> 00:19:00.070 align:start position:0%
the operation of the
operating<00:18:56.000><c> system</c><00:18:56.320><c> itself</c><00:18:58.160><c> so</c><00:18:58.320><c> these</c><00:18:58.559><c> are</c><00:18:58.720><c> all</c>

00:19:00.070 --> 00:19:00.080 align:start position:0%
operating system itself so these are all
 

00:19:00.080 --> 00:19:02.710 align:start position:0%
operating system itself so these are all
you<00:19:00.160><c> know</c><00:19:01.360><c> it's</c><00:19:01.600><c> possible</c><00:19:02.000><c> to</c><00:19:02.080><c> do</c><00:19:02.160><c> a</c><00:19:02.240><c> good</c><00:19:02.400><c> job</c>

00:19:02.710 --> 00:19:02.720 align:start position:0%
you know it's possible to do a good job
 

00:19:02.720 --> 00:19:04.310 align:start position:0%
you know it's possible to do a good job
and<00:19:02.799><c> we'll</c><00:19:03.039><c> talk</c><00:19:03.200><c> a</c><00:19:03.280><c> lot</c><00:19:03.440><c> about</c><00:19:03.679><c> it</c><00:19:03.760><c> but</c>

00:19:04.310 --> 00:19:04.320 align:start position:0%
and we'll talk a lot about it but
 

00:19:04.320 --> 00:19:05.830 align:start position:0%
and we'll talk a lot about it but
it's<00:19:04.480><c> always</c><00:19:04.720><c> a</c><00:19:04.799><c> bit</c><00:19:04.880><c> of</c><00:19:04.960><c> a</c><00:19:05.039><c> puzzle</c><00:19:05.360><c> to</c><00:19:05.440><c> provide</c>

00:19:05.830 --> 00:19:05.840 align:start position:0%
it's always a bit of a puzzle to provide
 

00:19:05.840 --> 00:19:08.230 align:start position:0%
it's always a bit of a puzzle to provide
sort<00:19:06.000><c> of</c><00:19:06.160><c> both</c><00:19:06.480><c> of</c><00:19:06.559><c> these</c>

00:19:08.230 --> 00:19:08.240 align:start position:0%
sort of both of these
 

00:19:08.240 --> 00:19:11.750 align:start position:0%
sort of both of these
the<00:19:08.480><c> properties</c><00:19:08.880><c> in</c><00:19:08.960><c> both</c><00:19:09.120><c> of</c><00:19:09.200><c> these</c><00:19:09.440><c> columns</c>

00:19:11.750 --> 00:19:11.760 align:start position:0%
the properties in both of these columns
 

00:19:11.760 --> 00:19:13.669 align:start position:0%
the properties in both of these columns
another<00:19:12.080><c> thing</c><00:19:12.240><c> that</c><00:19:12.320><c> makes</c><00:19:12.799><c> os</c><00:19:13.120><c> design</c><00:19:13.440><c> hard</c>

00:19:13.669 --> 00:19:13.679 align:start position:0%
another thing that makes os design hard
 

00:19:13.679 --> 00:19:14.789 align:start position:0%
another thing that makes os design hard
and<00:19:13.760><c> interesting</c><00:19:14.240><c> is</c><00:19:14.320><c> that</c>

00:19:14.789 --> 00:19:14.799 align:start position:0%
and interesting is that
 

00:19:14.799 --> 00:19:16.310 align:start position:0%
and interesting is that
operating<00:19:15.200><c> systems</c><00:19:15.679><c> provide</c><00:19:16.000><c> a</c><00:19:16.080><c> lot</c><00:19:16.240><c> of</c>

00:19:16.310 --> 00:19:16.320 align:start position:0%
operating systems provide a lot of
 

00:19:16.320 --> 00:19:17.990 align:start position:0%
operating systems provide a lot of
features<00:19:16.640><c> and</c><00:19:16.720><c> a</c><00:19:16.799><c> lot</c><00:19:16.960><c> of</c><00:19:17.120><c> services</c><00:19:17.600><c> but</c><00:19:17.840><c> they</c>

00:19:17.990 --> 00:19:18.000 align:start position:0%
features and a lot of services but they
 

00:19:18.000 --> 00:19:20.150 align:start position:0%
features and a lot of services but they
actually<00:19:18.320><c> tend</c><00:19:18.480><c> to</c><00:19:18.720><c> interact</c>

00:19:20.150 --> 00:19:20.160 align:start position:0%
actually tend to interact
 

00:19:20.160 --> 00:19:22.070 align:start position:0%
actually tend to interact
and<00:19:20.400><c> sometimes</c><00:19:20.799><c> in</c><00:19:20.960><c> odd</c><00:19:21.200><c> ways</c><00:19:21.520><c> they</c><00:19:21.679><c> require</c><00:19:22.080><c> a</c>

00:19:22.070 --> 00:19:22.080 align:start position:0%
and sometimes in odd ways they require a
 

00:19:22.080 --> 00:19:23.909 align:start position:0%
and sometimes in odd ways they require a
lot<00:19:22.240><c> of</c><00:19:22.400><c> thought</c><00:19:22.720><c> so</c><00:19:23.120><c> even</c><00:19:23.360><c> in</c><00:19:23.440><c> the</c><00:19:23.679><c> simple</c>

00:19:23.909 --> 00:19:23.919 align:start position:0%
lot of thought so even in the simple
 

00:19:23.919 --> 00:19:26.710 align:start position:0%
lot of thought so even in the simple
examples<00:19:24.400><c> i</c><00:19:24.480><c> gave</c>

00:19:26.710 --> 00:19:26.720 align:start position:0%
examples i gave
 

00:19:26.720 --> 00:19:28.789 align:start position:0%
examples i gave
with<00:19:26.960><c> open</c><00:19:27.280><c> and</c><00:19:27.360><c> fork</c><00:19:27.760><c> those</c><00:19:28.000><c> two</c><00:19:28.320><c> interact</c>

00:19:28.789 --> 00:19:28.799 align:start position:0%
with open and fork those two interact
 

00:19:28.799 --> 00:19:31.270 align:start position:0%
with open and fork those two interact
actually<00:19:29.120><c> if</c><00:19:29.280><c> a</c><00:19:29.360><c> program</c>

00:19:31.270 --> 00:19:31.280 align:start position:0%
actually if a program
 

00:19:31.280 --> 00:19:32.950 align:start position:0%
actually if a program
allocates<00:19:31.760><c> a</c><00:19:31.840><c> file</c><00:19:32.080><c> descriptor</c><00:19:32.640><c> with</c><00:19:32.799><c> the</c>

00:19:32.950 --> 00:19:32.960 align:start position:0%
allocates a file descriptor with the
 

00:19:32.960 --> 00:19:34.630 align:start position:0%
allocates a file descriptor with the
open<00:19:33.280><c> system</c><00:19:33.679><c> call</c>

00:19:34.630 --> 00:19:34.640 align:start position:0%
open system call
 

00:19:34.640 --> 00:19:37.669 align:start position:0%
open system call
and<00:19:34.799><c> then</c><00:19:35.039><c> that</c><00:19:35.280><c> same</c><00:19:35.600><c> program</c>

00:19:37.669 --> 00:19:37.679 align:start position:0%
and then that same program
 

00:19:37.679 --> 00:19:41.190 align:start position:0%
and then that same program
forks<00:19:40.000><c> and</c><00:19:40.080><c> the</c><00:19:40.240><c> semantics</c><00:19:40.720><c> of</c><00:19:40.799><c> fork</c>

00:19:41.190 --> 00:19:41.200 align:start position:0%
forks and the semantics of fork
 

00:19:41.200 --> 00:19:42.950 align:start position:0%
forks and the semantics of fork
just<00:19:41.360><c> turn</c><00:19:41.600><c> out</c><00:19:41.760><c> to</c><00:19:41.840><c> be</c><00:19:42.000><c> that</c><00:19:42.480><c> you</c><00:19:42.640><c> create</c><00:19:42.880><c> a</c>

00:19:42.950 --> 00:19:42.960 align:start position:0%
just turn out to be that you create a
 

00:19:42.960 --> 00:19:44.950 align:start position:0%
just turn out to be that you create a
new<00:19:43.120><c> process</c><00:19:43.600><c> that's</c><00:19:43.840><c> a</c><00:19:44.080><c> copy</c><00:19:44.480><c> of</c><00:19:44.559><c> the</c><00:19:44.640><c> current</c>

00:19:44.950 --> 00:19:44.960 align:start position:0%
new process that's a copy of the current
 

00:19:44.960 --> 00:19:45.830 align:start position:0%
new process that's a copy of the current
process

00:19:45.830 --> 00:19:45.840 align:start position:0%
process
 

00:19:45.840 --> 00:19:49.669 align:start position:0%
process
this<00:19:46.160><c> file</c><00:19:46.480><c> descriptor</c><00:19:46.960><c> you</c><00:19:47.200><c> opened</c>

00:19:49.669 --> 00:19:49.679 align:start position:0%
 
 

00:19:49.679 --> 00:19:51.590 align:start position:0%
 
if<00:19:49.840><c> that's</c><00:19:50.240><c> truly</c><00:19:50.559><c> to</c><00:19:50.640><c> be</c><00:19:50.799><c> a</c><00:19:50.880><c> copy</c><00:19:51.200><c> this</c><00:19:51.360><c> file</c>

00:19:51.590 --> 00:19:51.600 align:start position:0%
if that's truly to be a copy this file
 

00:19:51.600 --> 00:19:52.870 align:start position:0%
if that's truly to be a copy this file
descriptor<00:19:52.080><c> still</c><00:19:52.320><c> has</c><00:19:52.559><c> to</c>

00:19:52.870 --> 00:19:52.880 align:start position:0%
descriptor still has to
 

00:19:52.880 --> 00:19:56.150 align:start position:0%
descriptor still has to
um<00:19:53.280><c> be</c><00:19:53.600><c> present</c><00:19:54.000><c> and</c><00:19:54.160><c> usable</c><00:19:54.559><c> in</c><00:19:54.640><c> the</c><00:19:54.880><c> child</c>

00:19:56.150 --> 00:19:56.160 align:start position:0%
um be present and usable in the child
 

00:19:56.160 --> 00:19:58.310 align:start position:0%
um be present and usable in the child
and<00:19:57.200><c> you</c><00:19:57.280><c> know</c><00:19:57.440><c> so</c><00:19:57.600><c> that's</c><00:19:57.840><c> to</c><00:19:57.919><c> be</c><00:19:58.080><c> thought</c>

00:19:58.310 --> 00:19:58.320 align:start position:0%
and you know so that's to be thought
 

00:19:58.320 --> 00:20:00.070 align:start position:0%
and you know so that's to be thought
through<00:19:58.559><c> that</c><00:19:58.799><c> is</c><00:19:58.880><c> the</c><00:19:59.120><c> files</c><00:19:59.520><c> the</c><00:19:59.679><c> open</c><00:20:00.000><c> and</c>

00:20:00.070 --> 00:20:00.080 align:start position:0%
through that is the files the open and
 

00:20:00.080 --> 00:20:01.750 align:start position:0%
through that is the files the open and
filed<00:20:00.320><c> scripters</c><00:20:00.880><c> interact</c><00:20:01.280><c> with</c><00:20:01.440><c> fork</c><00:20:01.679><c> in</c>

00:20:01.750 --> 00:20:01.760 align:start position:0%
filed scripters interact with fork in
 

00:20:01.760 --> 00:20:03.750 align:start position:0%
filed scripters interact with fork in
this<00:20:01.919><c> interesting</c><00:20:02.400><c> way</c>

00:20:03.750 --> 00:20:03.760 align:start position:0%
this interesting way
 

00:20:03.760 --> 00:20:05.830 align:start position:0%
this interesting way
and<00:20:03.919><c> somebody</c><00:20:04.240><c> has</c><00:20:04.400><c> to</c><00:20:04.480><c> figure</c><00:20:04.799><c> out</c><00:20:05.440><c> oh</c><00:20:05.679><c> should</c>

00:20:05.830 --> 00:20:05.840 align:start position:0%
and somebody has to figure out oh should
 

00:20:05.840 --> 00:20:06.950 align:start position:0%
and somebody has to figure out oh should
the<00:20:06.000><c> child</c><00:20:06.320><c> be</c><00:20:06.400><c> able</c><00:20:06.559><c> to</c>

00:20:06.950 --> 00:20:06.960 align:start position:0%
the child be able to
 

00:20:06.960 --> 00:20:09.430 align:start position:0%
the child be able to
get<00:20:07.200><c> at</c><00:20:07.840><c> the</c><00:20:08.000><c> file</c><00:20:08.240><c> descriptors</c><00:20:08.880><c> created</c>

00:20:09.430 --> 00:20:09.440 align:start position:0%
get at the file descriptors created
 

00:20:09.440 --> 00:20:10.789 align:start position:0%
get at the file descriptors created
before<00:20:09.919><c> fork</c><00:20:10.240><c> was</c><00:20:10.400><c> called</c>

00:20:10.789 --> 00:20:10.799 align:start position:0%
before fork was called
 

00:20:10.799 --> 00:20:12.630 align:start position:0%
before fork was called
and<00:20:10.960><c> the</c><00:20:11.039><c> answer</c><00:20:11.280><c> happens</c><00:20:11.520><c> to</c><00:20:11.600><c> be</c><00:20:11.760><c> yes</c><00:20:12.400><c> in</c><00:20:12.559><c> the</c>

00:20:12.630 --> 00:20:12.640 align:start position:0%
and the answer happens to be yes in the
 

00:20:12.640 --> 00:20:17.029 align:start position:0%
and the answer happens to be yes in the
operating<00:20:12.960><c> systems</c><00:20:13.280><c> we're</c><00:20:13.440><c> going</c><00:20:13.520><c> to</c><00:20:13.600><c> look</c><00:20:13.840><c> at</c>

00:20:17.029 --> 00:20:17.039 align:start position:0%
 
 

00:20:17.039 --> 00:20:18.870 align:start position:0%
 
all<00:20:17.120><c> right</c><00:20:17.440><c> and</c><00:20:17.760><c> so</c><00:20:17.919><c> other</c><00:20:18.080><c> things</c><00:20:18.320><c> that</c><00:20:18.400><c> are</c>

00:20:18.870 --> 00:20:18.880 align:start position:0%
all right and so other things that are
 

00:20:18.880 --> 00:20:20.310 align:start position:0%
all right and so other things that are
turned<00:20:19.120><c> out</c><00:20:19.200><c> to</c><00:20:19.280><c> be</c><00:20:19.360><c> interesting</c>

00:20:20.310 --> 00:20:20.320 align:start position:0%
turned out to be interesting
 

00:20:20.320 --> 00:20:21.990 align:start position:0%
turned out to be interesting
i<00:20:20.480><c> already</c><00:20:20.720><c> mentioned</c><00:20:21.120><c> that</c><00:20:21.600><c> operating</c>

00:20:21.990 --> 00:20:22.000 align:start position:0%
i already mentioned that operating
 

00:20:22.000 --> 00:20:23.990 align:start position:0%
i already mentioned that operating
systems<00:20:22.559><c> have</c><00:20:22.640><c> to</c><00:20:22.799><c> cater</c><00:20:23.120><c> to</c><00:20:23.280><c> a</c><00:20:23.440><c> wide</c><00:20:23.600><c> variety</c>

00:20:23.990 --> 00:20:24.000 align:start position:0%
systems have to cater to a wide variety
 

00:20:24.000 --> 00:20:24.950 align:start position:0%
systems have to cater to a wide variety
of<00:20:24.159><c> uses</c>

00:20:24.950 --> 00:20:24.960 align:start position:0%
of uses
 

00:20:24.960 --> 00:20:28.070 align:start position:0%
of uses
the<00:20:25.200><c> same</c><00:20:25.440><c> os</c><00:20:26.240><c> used</c><00:20:26.480><c> both</c><00:20:26.799><c> for</c><00:20:27.600><c> database</c>

00:20:28.070 --> 00:20:28.080 align:start position:0%
the same os used both for database
 

00:20:28.080 --> 00:20:31.510 align:start position:0%
the same os used both for database
servers<00:20:28.640><c> and</c><00:20:28.880><c> and</c><00:20:29.039><c> smartphones</c><00:20:29.760><c> for</c><00:20:29.919><c> example</c>

00:20:31.510 --> 00:20:31.520 align:start position:0%
servers and and smartphones for example
 

00:20:31.520 --> 00:20:35.190 align:start position:0%
servers and and smartphones for example
and<00:20:31.840><c> operating</c><00:20:32.240><c> systems</c><00:20:33.600><c> as</c><00:20:33.919><c> time</c><00:20:34.159><c> goes</c><00:20:34.400><c> on</c>

00:20:35.190 --> 00:20:35.200 align:start position:0%
and operating systems as time goes on
 

00:20:35.200 --> 00:20:37.909 align:start position:0%
and operating systems as time goes on
the<00:20:35.679><c> hardware</c><00:20:36.240><c> that</c><00:20:36.400><c> you</c><00:20:36.640><c> run</c><00:20:37.360><c> the</c><00:20:37.600><c> hardware</c>

00:20:37.909 --> 00:20:37.919 align:start position:0%
the hardware that you run the hardware
 

00:20:37.919 --> 00:20:40.390 align:start position:0%
the hardware that you run the hardware
you<00:20:38.000><c> get</c><00:20:38.240><c> with</c><00:20:38.400><c> typical</c><00:20:38.720><c> computers</c><00:20:39.280><c> changes</c>

00:20:40.390 --> 00:20:40.400 align:start position:0%
you get with typical computers changes
 

00:20:40.400 --> 00:20:42.710 align:start position:0%
you get with typical computers changes
maybe<00:20:40.640><c> you</c><00:20:40.720><c> get</c><00:20:40.880><c> super</c><00:20:41.200><c> fast</c><00:20:41.679><c> ssd</c><00:20:42.159><c> storage</c>

00:20:42.710 --> 00:20:42.720 align:start position:0%
maybe you get super fast ssd storage
 

00:20:42.720 --> 00:20:44.310 align:start position:0%
maybe you get super fast ssd storage
instead<00:20:43.039><c> of</c><00:20:43.120><c> mechanical</c><00:20:43.600><c> hard</c><00:20:43.840><c> drives</c><00:20:44.240><c> for</c>

00:20:44.310 --> 00:20:44.320 align:start position:0%
instead of mechanical hard drives for
 

00:20:44.320 --> 00:20:45.510 align:start position:0%
instead of mechanical hard drives for
example

00:20:45.510 --> 00:20:45.520 align:start position:0%
example
 

00:20:45.520 --> 00:20:48.870 align:start position:0%
example
about<00:20:45.840><c> 15</c><00:20:46.240><c> years</c><00:20:46.480><c> ago</c><00:20:47.200><c> multi-core</c><00:20:47.760><c> computers</c>

00:20:48.870 --> 00:20:48.880 align:start position:0%
about 15 years ago multi-core computers
 

00:20:48.880 --> 00:20:51.350 align:start position:0%
about 15 years ago multi-core computers
went<00:20:49.039><c> from</c><00:20:49.280><c> being</c><00:20:50.000><c> rare</c><00:20:50.320><c> curiosities</c><00:20:51.200><c> to</c>

00:20:51.350 --> 00:20:51.360 align:start position:0%
went from being rare curiosities to
 

00:20:51.360 --> 00:20:51.909 align:start position:0%
went from being rare curiosities to
being

00:20:51.909 --> 00:20:51.919 align:start position:0%
being
 

00:20:51.919 --> 00:20:55.669 align:start position:0%
being
pervasive<00:20:54.000><c> and</c><00:20:54.640><c> recently</c><00:20:55.039><c> we've</c><00:20:55.200><c> seen</c><00:20:55.600><c> you</c>

00:20:55.669 --> 00:20:55.679 align:start position:0%
pervasive and recently we've seen you
 

00:20:55.679 --> 00:20:57.669 align:start position:0%
pervasive and recently we've seen you
know<00:20:55.840><c> order</c><00:20:56.080><c> of</c><00:20:56.159><c> magnitude</c><00:20:56.640><c> speedups</c><00:20:57.280><c> in</c><00:20:57.440><c> how</c>

00:20:57.669 --> 00:20:57.679 align:start position:0%
know order of magnitude speedups in how
 

00:20:57.679 --> 00:20:59.110 align:start position:0%
know order of magnitude speedups in how
fast<00:20:57.919><c> networks</c><00:20:58.400><c> operate</c>

00:20:59.110 --> 00:20:59.120 align:start position:0%
fast networks operate
 

00:20:59.120 --> 00:21:02.870 align:start position:0%
fast networks operate
and<00:20:59.200><c> so</c><00:20:59.360><c> all</c><00:20:59.520><c> these</c><00:20:59.679><c> require</c><00:21:00.159><c> rethinks</c><00:21:01.440><c> um</c>

00:21:02.870 --> 00:21:02.880 align:start position:0%
and so all these require rethinks um
 

00:21:02.880 --> 00:21:04.549 align:start position:0%
and so all these require rethinks um
periodically<00:21:03.520><c> of</c><00:21:03.600><c> how</c><00:21:03.840><c> operating</c><00:21:04.240><c> systems</c>

00:21:04.549 --> 00:21:04.559 align:start position:0%
periodically of how operating systems
 

00:21:04.559 --> 00:21:06.470 align:start position:0%
periodically of how operating systems
are<00:21:04.640><c> designed</c>

00:21:06.470 --> 00:21:06.480 align:start position:0%
are designed
 

00:21:06.480 --> 00:21:10.870 align:start position:0%
are designed
now<00:21:07.360><c> um</c><00:21:09.360><c> so</c><00:21:09.600><c> so</c><00:21:09.760><c> those</c><00:21:10.000><c> are</c><00:21:10.159><c> those</c><00:21:10.400><c> are</c><00:21:10.480><c> sort</c><00:21:10.640><c> of</c>

00:21:10.870 --> 00:21:10.880 align:start position:0%
now um so so those are those are sort of
 

00:21:10.880 --> 00:21:12.070 align:start position:0%
now um so so those are those are sort of
intellectually<00:21:11.440><c> why</c><00:21:11.600><c> you</c><00:21:11.679><c> might</c><00:21:11.840><c> take</c><00:21:12.000><c> the</c>

00:21:12.070 --> 00:21:12.080 align:start position:0%
intellectually why you might take the
 

00:21:12.080 --> 00:21:13.430 align:start position:0%
intellectually why you might take the
course<00:21:12.400><c> there's</c><00:21:12.559><c> also</c><00:21:12.799><c> some</c><00:21:13.039><c> even</c><00:21:13.280><c> more</c>

00:21:13.430 --> 00:21:13.440 align:start position:0%
course there's also some even more
 

00:21:13.440 --> 00:21:16.149 align:start position:0%
course there's also some even more
practical<00:21:13.919><c> reasons</c><00:21:14.320><c> why</c><00:21:14.640><c> you</c><00:21:14.799><c> might</c><00:21:14.960><c> be</c><00:21:15.120><c> glad</c>

00:21:16.149 --> 00:21:16.159 align:start position:0%
practical reasons why you might be glad
 

00:21:16.159 --> 00:21:18.549 align:start position:0%
practical reasons why you might be glad
to<00:21:16.320><c> have</c><00:21:16.480><c> taken</c><00:21:16.720><c> this</c><00:21:16.960><c> course</c><00:21:17.679><c> one</c><00:21:17.919><c> is</c><00:21:18.400><c> if</c>

00:21:18.549 --> 00:21:18.559 align:start position:0%
to have taken this course one is if
 

00:21:18.559 --> 00:21:20.149 align:start position:0%
to have taken this course one is if
you're<00:21:18.720><c> interested</c><00:21:19.039><c> in</c><00:21:19.200><c> what</c><00:21:19.360><c> happens</c><00:21:19.840><c> inside</c>

00:21:20.149 --> 00:21:20.159 align:start position:0%
you're interested in what happens inside
 

00:21:20.159 --> 00:21:21.510 align:start position:0%
you're interested in what happens inside
computers<00:21:20.640><c> what</c><00:21:20.799><c> goes</c><00:21:20.960><c> on</c><00:21:21.200><c> under</c>

00:21:21.510 --> 00:21:21.520 align:start position:0%
computers what goes on under
 

00:21:21.520 --> 00:21:24.310 align:start position:0%
computers what goes on under
and<00:21:21.760><c> saw</c><00:21:22.080><c> under</c><00:21:22.320><c> the</c><00:21:22.400><c> hood</c><00:21:23.520><c> sort</c><00:21:23.760><c> of</c><00:21:23.840><c> in</c><00:21:24.000><c> secret</c>

00:21:24.310 --> 00:21:24.320 align:start position:0%
and saw under the hood sort of in secret
 

00:21:24.320 --> 00:21:25.830 align:start position:0%
and saw under the hood sort of in secret
when<00:21:24.480><c> you</c><00:21:24.559><c> turn</c><00:21:24.799><c> on</c><00:21:24.880><c> your</c><00:21:24.960><c> computer</c>

00:21:25.830 --> 00:21:25.840 align:start position:0%
when you turn on your computer
 

00:21:25.840 --> 00:21:27.990 align:start position:0%
when you turn on your computer
this<00:21:26.000><c> is</c><00:21:26.080><c> a</c><00:21:26.159><c> good</c><00:21:26.320><c> course</c><00:21:26.640><c> to</c><00:21:26.799><c> take</c><00:21:27.520><c> similarly</c>

00:21:27.990 --> 00:21:28.000 align:start position:0%
this is a good course to take similarly
 

00:21:28.000 --> 00:21:30.070 align:start position:0%
this is a good course to take similarly
if<00:21:28.159><c> you</c><00:21:28.240><c> like</c><00:21:28.559><c> infrastructure</c><00:21:29.200><c> that</c><00:21:29.360><c> is</c><00:21:29.520><c> if</c><00:21:29.919><c> if</c>

00:21:30.070 --> 00:21:30.080 align:start position:0%
if you like infrastructure that is if if
 

00:21:30.080 --> 00:21:30.710 align:start position:0%
if you like infrastructure that is if if
you<00:21:30.240><c> enjoy</c>

00:21:30.710 --> 00:21:30.720 align:start position:0%
you enjoy
 

00:21:30.720 --> 00:21:33.830 align:start position:0%
you enjoy
building<00:21:31.760><c> uh</c><00:21:32.159><c> sort</c><00:21:32.320><c> of</c><00:21:32.480><c> services</c><00:21:33.200><c> that</c><00:21:33.600><c> other</c>

00:21:33.830 --> 00:21:33.840 align:start position:0%
building uh sort of services that other
 

00:21:33.840 --> 00:21:36.390 align:start position:0%
building uh sort of services that other
programs<00:21:34.240><c> can</c><00:21:34.400><c> then</c><00:21:34.640><c> use</c>

00:21:36.390 --> 00:21:36.400 align:start position:0%
programs can then use
 

00:21:36.400 --> 00:21:38.070 align:start position:0%
programs can then use
this<00:21:36.640><c> is</c><00:21:36.880><c> of</c><00:21:36.960><c> course</c><00:21:37.200><c> essentially</c><00:21:37.679><c> all</c><00:21:37.760><c> about</c>

00:21:38.070 --> 00:21:38.080 align:start position:0%
this is of course essentially all about
 

00:21:38.080 --> 00:21:39.750 align:start position:0%
this is of course essentially all about
infrastructure<00:21:38.720><c> because</c><00:21:39.200><c> that's</c><00:21:39.520><c> that's</c>

00:21:39.750 --> 00:21:39.760 align:start position:0%
infrastructure because that's that's
 

00:21:39.760 --> 00:21:42.390 align:start position:0%
infrastructure because that's that's
what<00:21:39.919><c> operating</c><00:21:40.320><c> systems</c><00:21:40.720><c> are</c>

00:21:42.390 --> 00:21:42.400 align:start position:0%
what operating systems are
 

00:21:42.400 --> 00:21:43.909 align:start position:0%
what operating systems are
if<00:21:42.559><c> you</c><00:21:42.720><c> ever</c><00:21:42.880><c> need</c><00:21:43.039><c> to</c><00:21:43.200><c> spend</c><00:21:43.440><c> a</c><00:21:43.440><c> lot</c><00:21:43.600><c> of</c><00:21:43.679><c> time</c>

00:21:43.909 --> 00:21:43.919 align:start position:0%
if you ever need to spend a lot of time
 

00:21:43.919 --> 00:21:45.510 align:start position:0%
if you ever need to spend a lot of time
tracking<00:21:44.240><c> down</c><00:21:44.559><c> bugs</c><00:21:45.200><c> in</c>

00:21:45.510 --> 00:21:45.520 align:start position:0%
tracking down bugs in
 

00:21:45.520 --> 00:21:47.350 align:start position:0%
tracking down bugs in
application<00:21:46.159><c> code</c><00:21:46.640><c> or</c><00:21:46.880><c> tracking</c><00:21:47.120><c> down</c>

00:21:47.350 --> 00:21:47.360 align:start position:0%
application code or tracking down
 

00:21:47.360 --> 00:21:48.789 align:start position:0%
application code or tracking down
security<00:21:47.840><c> problems</c>

00:21:48.789 --> 00:21:48.799 align:start position:0%
security problems
 

00:21:48.799 --> 00:21:51.350 align:start position:0%
security problems
often<00:21:49.200><c> that</c><00:21:49.520><c> um</c><00:21:50.159><c> involves</c><00:21:50.880><c> understanding</c>

00:21:51.350 --> 00:21:51.360 align:start position:0%
often that um involves understanding
 

00:21:51.360 --> 00:21:52.950 align:start position:0%
often that um involves understanding
what<00:21:51.520><c> was</c><00:21:51.679><c> going</c><00:21:51.919><c> on</c><00:21:52.080><c> inside</c><00:21:52.400><c> the</c><00:21:52.559><c> operating</c>

00:21:52.950 --> 00:21:52.960 align:start position:0%
what was going on inside the operating
 

00:21:52.960 --> 00:21:53.590 align:start position:0%
what was going on inside the operating
system

00:21:53.590 --> 00:21:53.600 align:start position:0%
system
 

00:21:53.600 --> 00:21:54.870 align:start position:0%
system
because<00:21:53.840><c> it's</c><00:21:54.000><c> ultimately</c><00:21:54.320><c> the</c><00:21:54.480><c> operating</c>

00:21:54.870 --> 00:21:54.880 align:start position:0%
because it's ultimately the operating
 

00:21:54.880 --> 00:21:57.669 align:start position:0%
because it's ultimately the operating
system<00:21:55.280><c> that</c><00:21:56.080><c> enforces</c><00:21:56.640><c> a</c><00:21:56.720><c> lot</c><00:21:56.880><c> of</c><00:21:56.960><c> security</c>

00:21:57.669 --> 00:21:57.679 align:start position:0%
system that enforces a lot of security
 

00:21:57.679 --> 00:21:58.710 align:start position:0%
system that enforces a lot of security
and

00:21:58.710 --> 00:21:58.720 align:start position:0%
and
 

00:21:58.720 --> 00:22:00.310 align:start position:0%
and
when<00:21:59.120><c> things</c><00:21:59.360><c> go</c><00:21:59.600><c> wrong</c><00:21:59.919><c> it's</c><00:22:00.000><c> sort</c><00:22:00.159><c> of</c><00:22:00.240><c> the</c>

00:22:00.310 --> 00:22:00.320 align:start position:0%
when things go wrong it's sort of the
 

00:22:00.320 --> 00:22:01.669 align:start position:0%
when things go wrong it's sort of the
operating<00:22:00.640><c> system</c><00:22:00.880><c> that</c><00:22:01.039><c> has</c><00:22:01.120><c> to</c><00:22:01.280><c> pick</c><00:22:01.440><c> up</c><00:22:01.520><c> the</c>

00:22:01.669 --> 00:22:01.679 align:start position:0%
operating system that has to pick up the
 

00:22:01.679 --> 00:22:02.470 align:start position:0%
operating system that has to pick up the
pieces<00:22:02.080><c> so</c>

00:22:02.470 --> 00:22:02.480 align:start position:0%
pieces so
 

00:22:02.480 --> 00:22:05.110 align:start position:0%
pieces so
that's<00:22:02.720><c> often</c><00:22:03.200><c> involved</c><00:22:03.760><c> in</c><00:22:04.000><c> uh</c><00:22:04.799><c> tracking</c>

00:22:05.110 --> 00:22:05.120 align:start position:0%
that's often involved in uh tracking
 

00:22:05.120 --> 00:22:06.149 align:start position:0%
that's often involved in uh tracking
down<00:22:05.360><c> bugs</c>

00:22:06.149 --> 00:22:06.159 align:start position:0%
down bugs
 

00:22:06.159 --> 00:22:08.870 align:start position:0%
down bugs
and<00:22:06.320><c> finally</c><00:22:07.200><c> yes</c><00:22:08.000><c> two</c><00:22:08.159><c> more</c><00:22:08.400><c> questions</c><00:22:08.720><c> from</c>

00:22:08.870 --> 00:22:08.880 align:start position:0%
and finally yes two more questions from
 

00:22:08.880 --> 00:22:09.909 align:start position:0%
and finally yes two more questions from
the<00:22:09.039><c> chat</c><00:22:09.360><c> so</c>

00:22:09.909 --> 00:22:09.919 align:start position:0%
the chat so
 

00:22:09.919 --> 00:22:11.430 align:start position:0%
the chat so
the<00:22:10.080><c> first</c><00:22:10.400><c> is</c><00:22:10.559><c> how</c><00:22:10.720><c> important</c><00:22:11.120><c> is</c><00:22:11.200><c> it</c><00:22:11.280><c> for</c>

00:22:11.430 --> 00:22:11.440 align:start position:0%
the first is how important is it for
 

00:22:11.440 --> 00:22:13.430 align:start position:0%
the first is how important is it for
application<00:22:11.919><c> developers</c><00:22:12.559><c> to</c><00:22:12.720><c> truly</c><00:22:13.039><c> deeply</c>

00:22:13.430 --> 00:22:13.440 align:start position:0%
application developers to truly deeply
 

00:22:13.440 --> 00:22:15.029 align:start position:0%
application developers to truly deeply
understand<00:22:14.000><c> the</c><00:22:14.080><c> operating</c><00:22:14.480><c> systems</c><00:22:14.880><c> they're</c>

00:22:15.029 --> 00:22:15.039 align:start position:0%
understand the operating systems they're
 

00:22:15.039 --> 00:22:16.950 align:start position:0%
understand the operating systems they're
developing<00:22:15.520><c> their</c><00:22:15.679><c> applications</c><00:22:16.320><c> for</c>

00:22:16.950 --> 00:22:16.960 align:start position:0%
developing their applications for
 

00:22:16.960 --> 00:22:19.909 align:start position:0%
developing their applications for
do<00:22:17.120><c> they</c><00:22:17.280><c> necessarily</c><00:22:17.840><c> need</c><00:22:18.000><c> to</c><00:22:18.080><c> be</c><00:22:18.320><c> experts</c>

00:22:19.909 --> 00:22:19.919 align:start position:0%
do they necessarily need to be experts
 

00:22:19.919 --> 00:22:21.590 align:start position:0%
do they necessarily need to be experts
you<00:22:20.080><c> don't</c><00:22:20.240><c> have</c><00:22:20.400><c> to</c><00:22:20.480><c> be</c><00:22:20.559><c> an</c><00:22:20.720><c> expert</c><00:22:21.280><c> but</c><00:22:21.520><c> if</c>

00:22:21.590 --> 00:22:21.600 align:start position:0%
you don't have to be an expert but if
 

00:22:21.600 --> 00:22:22.549 align:start position:0%
you don't have to be an expert but if
you<00:22:21.760><c> spend</c>

00:22:22.549 --> 00:22:22.559 align:start position:0%
you spend
 

00:22:22.559 --> 00:22:24.710 align:start position:0%
you spend
um<00:22:23.120><c> a</c><00:22:23.200><c> lot</c><00:22:23.360><c> of</c><00:22:23.520><c> time</c><00:22:23.760><c> developing</c><00:22:24.320><c> and</c>

00:22:24.710 --> 00:22:24.720 align:start position:0%
um a lot of time developing and
 

00:22:24.720 --> 00:22:26.630 align:start position:0%
um a lot of time developing and
maintaining<00:22:25.200><c> and</c><00:22:25.280><c> debugging</c><00:22:25.760><c> applications</c>

00:22:26.630 --> 00:22:26.640 align:start position:0%
maintaining and debugging applications
 

00:22:26.640 --> 00:22:28.950 align:start position:0%
maintaining and debugging applications
you'll<00:22:26.880><c> eventually</c><00:22:28.240><c> end</c><00:22:28.400><c> up</c><00:22:28.480><c> knowing</c><00:22:28.720><c> a</c><00:22:28.799><c> lot</c>

00:22:28.950 --> 00:22:28.960 align:start position:0%
you'll eventually end up knowing a lot
 

00:22:28.960 --> 00:22:30.230 align:start position:0%
you'll eventually end up knowing a lot
about<00:22:29.200><c> the</c><00:22:29.360><c> operating</c><00:22:29.760><c> system</c>

00:22:30.230 --> 00:22:30.240 align:start position:0%
about the operating system
 

00:22:30.240 --> 00:22:32.470 align:start position:0%
about the operating system
whether<00:22:30.480><c> you</c><00:22:31.360><c> whether</c><00:22:31.679><c> you</c><00:22:31.760><c> meant</c><00:22:31.919><c> to</c><00:22:32.080><c> or</c><00:22:32.240><c> not</c>

00:22:32.470 --> 00:22:32.480 align:start position:0%
whether you whether you meant to or not
 

00:22:32.480 --> 00:22:34.070 align:start position:0%
whether you whether you meant to or not
it<00:22:32.559><c> just</c>

00:22:34.070 --> 00:22:34.080 align:start position:0%
it just
 

00:22:34.080 --> 00:22:36.630 align:start position:0%
it just
it<00:22:34.240><c> just</c><00:22:34.400><c> comes</c><00:22:34.720><c> up</c><00:22:35.360><c> and</c><00:22:35.919><c> you're</c><00:22:36.080><c> often</c><00:22:36.400><c> forced</c>

00:22:36.630 --> 00:22:36.640 align:start position:0%
it just comes up and you're often forced
 

00:22:36.640 --> 00:22:39.590 align:start position:0%
it just comes up and you're often forced
to<00:22:36.799><c> understand</c>

00:22:39.590 --> 00:22:39.600 align:start position:0%
 
 

00:22:39.600 --> 00:22:41.750 align:start position:0%
 
and<00:22:39.919><c> the</c><00:22:40.080><c> second</c><00:22:40.400><c> question</c><00:22:40.720><c> is</c><00:22:41.039><c> do</c><00:22:41.280><c> high-level</c>

00:22:41.750 --> 00:22:41.760 align:start position:0%
and the second question is do high-level
 

00:22:41.760 --> 00:22:43.029 align:start position:0%
and the second question is do high-level
programming<00:22:42.159><c> languages</c><00:22:42.720><c> like</c>

00:22:43.029 --> 00:22:43.039 align:start position:0%
programming languages like
 

00:22:43.039 --> 00:22:45.430 align:start position:0%
programming languages like
python<00:22:43.919><c> use</c><00:22:44.159><c> system</c><00:22:44.480><c> calls</c><00:22:44.720><c> directly</c><00:22:45.280><c> are</c>

00:22:45.430 --> 00:22:45.440 align:start position:0%
python use system calls directly are
 

00:22:45.440 --> 00:22:46.390 align:start position:0%
python use system calls directly are
there<00:22:45.679><c> built-ins</c>

00:22:46.390 --> 00:22:46.400 align:start position:0%
there built-ins
 

00:22:46.400 --> 00:22:48.950 align:start position:0%
there built-ins
slash<00:22:46.799><c> wrappers</c><00:22:47.200><c> for</c><00:22:47.360><c> convenience</c><00:22:48.640><c> a</c><00:22:48.720><c> lot</c><00:22:48.880><c> of</c>

00:22:48.950 --> 00:22:48.960 align:start position:0%
slash wrappers for convenience a lot of
 

00:22:48.960 --> 00:22:50.470 align:start position:0%
slash wrappers for convenience a lot of
high-level<00:22:49.360><c> languages</c><00:22:49.919><c> are</c>

00:22:50.470 --> 00:22:50.480 align:start position:0%
high-level languages are
 

00:22:50.480 --> 00:22:53.430 align:start position:0%
high-level languages are
sort<00:22:50.640><c> of</c><00:22:50.799><c> at</c><00:22:50.880><c> one</c><00:22:51.200><c> remove</c><00:22:51.919><c> from</c><00:22:52.240><c> system</c><00:22:52.640><c> calls</c>

00:22:53.430 --> 00:22:53.440 align:start position:0%
sort of at one remove from system calls
 

00:22:53.440 --> 00:22:56.789 align:start position:0%
sort of at one remove from system calls
that's<00:22:53.679><c> absolutely</c><00:22:54.080><c> true</c><00:22:54.480><c> so</c>

00:22:56.789 --> 00:22:56.799 align:start position:0%
 
 

00:22:56.799 --> 00:22:59.270 align:start position:0%
 
partially<00:22:57.200><c> because</c><00:22:58.240><c> a</c><00:22:58.320><c> lot</c><00:22:58.480><c> of</c><00:22:58.559><c> languages</c>

00:22:59.270 --> 00:22:59.280 align:start position:0%
partially because a lot of languages
 

00:22:59.280 --> 00:23:00.390 align:start position:0%
partially because a lot of languages
want<00:22:59.440><c> to</c><00:22:59.600><c> provide</c>

00:23:00.390 --> 00:23:00.400 align:start position:0%
want to provide
 

00:23:00.400 --> 00:23:02.789 align:start position:0%
want to provide
portable<00:23:01.520><c> a</c><00:23:01.679><c> portable</c><00:23:02.159><c> environment</c><00:23:02.640><c> that</c>

00:23:02.789 --> 00:23:02.799 align:start position:0%
portable a portable environment that
 

00:23:02.799 --> 00:23:03.990 align:start position:0%
portable a portable environment that
works<00:23:03.039><c> on</c><00:23:03.120><c> many</c><00:23:03.360><c> different</c><00:23:03.600><c> operating</c>

00:23:03.990 --> 00:23:04.000 align:start position:0%
works on many different operating
 

00:23:04.000 --> 00:23:05.990 align:start position:0%
works on many different operating
systems<00:23:04.320><c> so</c><00:23:04.400><c> they</c><00:23:04.559><c> can't</c><00:23:04.720><c> necessarily</c><00:23:05.280><c> commit</c>

00:23:05.990 --> 00:23:06.000 align:start position:0%
systems so they can't necessarily commit
 

00:23:06.000 --> 00:23:08.310 align:start position:0%
systems so they can't necessarily commit
to<00:23:06.159><c> the</c><00:23:06.400><c> specific</c><00:23:06.880><c> system</c><00:23:07.280><c> calls</c><00:23:07.600><c> of</c><00:23:07.840><c> any</c><00:23:08.080><c> one</c>

00:23:08.310 --> 00:23:08.320 align:start position:0%
to the specific system calls of any one
 

00:23:08.320 --> 00:23:09.909 align:start position:0%
to the specific system calls of any one
operating<00:23:08.799><c> system</c>

00:23:09.909 --> 00:23:09.919 align:start position:0%
operating system
 

00:23:09.919 --> 00:23:12.789 align:start position:0%
operating system
um<00:23:11.280><c> so</c><00:23:11.520><c> i'm</c><00:23:11.679><c> the</c><00:23:12.080><c> answer</c><00:23:12.320><c> the</c><00:23:12.480><c> question</c><00:23:12.720><c> i</c>

00:23:12.789 --> 00:23:12.799 align:start position:0%
um so i'm the answer the question i
 

00:23:12.799 --> 00:23:14.470 align:start position:0%
um so i'm the answer the question i
think<00:23:13.039><c> is</c><00:23:13.200><c> if</c><00:23:13.360><c> you</c><00:23:13.440><c> use</c><00:23:13.600><c> python</c>

00:23:14.470 --> 00:23:14.480 align:start position:0%
think is if you use python
 

00:23:14.480 --> 00:23:17.590 align:start position:0%
think is if you use python
uh<00:23:14.720><c> you're</c><00:23:14.880><c> somewhat</c><00:23:15.280><c> insulated</c><00:23:16.559><c> from</c><00:23:17.280><c> the</c>

00:23:17.590 --> 00:23:17.600 align:start position:0%
uh you're somewhat insulated from the
 

00:23:17.600 --> 00:23:18.870 align:start position:0%
uh you're somewhat insulated from the
system<00:23:17.919><c> call</c><00:23:18.159><c> interface</c><00:23:18.640><c> you</c><00:23:18.720><c> know</c>

00:23:18.870 --> 00:23:18.880 align:start position:0%
system call interface you know
 

00:23:18.880 --> 00:23:20.789 align:start position:0%
system call interface you know
internally<00:23:19.280><c> of</c><00:23:19.360><c> course</c><00:23:19.600><c> python</c><00:23:20.000><c> makes</c>

00:23:20.789 --> 00:23:20.799 align:start position:0%
internally of course python makes
 

00:23:20.799 --> 00:23:22.310 align:start position:0%
internally of course python makes
has<00:23:20.960><c> to</c><00:23:21.120><c> make</c><00:23:21.200><c> system</c><00:23:21.520><c> calls</c><00:23:21.679><c> to</c><00:23:21.760><c> get</c><00:23:21.919><c> its</c><00:23:22.080><c> work</c>

00:23:22.310 --> 00:23:22.320 align:start position:0%
has to make system calls to get its work
 

00:23:22.320 --> 00:23:24.390 align:start position:0%
has to make system calls to get its work
done<00:23:23.360><c> and</c>

00:23:24.390 --> 00:23:24.400 align:start position:0%
done and
 

00:23:24.400 --> 00:23:25.830 align:start position:0%
done and
certainly<00:23:24.720><c> in</c><00:23:24.880><c> python</c><00:23:25.280><c> and</c><00:23:25.440><c> many</c><00:23:25.679><c> other</c>

00:23:25.830 --> 00:23:25.840 align:start position:0%
certainly in python and many other
 

00:23:25.840 --> 00:23:27.909 align:start position:0%
certainly in python and many other
languages<00:23:26.320><c> there</c><00:23:26.559><c> is</c><00:23:26.720><c> usually</c><00:23:27.039><c> a</c><00:23:27.120><c> way</c><00:23:27.280><c> to</c><00:23:27.440><c> get</c>

00:23:27.909 --> 00:23:27.919 align:start position:0%
languages there is usually a way to get
 

00:23:27.919 --> 00:23:31.029 align:start position:0%
languages there is usually a way to get
directly<00:23:28.480><c> at</c><00:23:29.919><c> the</c><00:23:30.080><c> system</c><00:23:30.400><c> calls</c><00:23:30.640><c> of</c><00:23:30.720><c> whatever</c>

00:23:31.029 --> 00:23:31.039 align:start position:0%
directly at the system calls of whatever
 

00:23:31.039 --> 00:23:31.510 align:start position:0%
directly at the system calls of whatever
your

00:23:31.510 --> 00:23:31.520 align:start position:0%
your
 

00:23:31.520 --> 00:23:35.430 align:start position:0%
your
operating<00:23:31.919><c> system</c><00:23:32.240><c> you're</c><00:23:33.200><c> running</c><00:23:33.520><c> on</c>

00:23:35.430 --> 00:23:35.440 align:start position:0%
operating system you're running on
 

00:23:35.440 --> 00:23:37.110 align:start position:0%
operating system you're running on
and<00:23:35.679><c> folks</c><00:23:35.919><c> for</c><00:23:36.159><c> questions</c><00:23:36.640><c> you</c><00:23:36.799><c> can</c><00:23:36.960><c> just</c>

00:23:37.110 --> 00:23:37.120 align:start position:0%
and folks for questions you can just
 

00:23:37.120 --> 00:23:38.630 align:start position:0%
and folks for questions you can just
feel<00:23:37.360><c> free</c><00:23:37.520><c> to</c><00:23:37.679><c> jump</c><00:23:37.840><c> in</c><00:23:38.000><c> yourself</c><00:23:38.320><c> and</c><00:23:38.480><c> ask</c>

00:23:38.630 --> 00:23:38.640 align:start position:0%
feel free to jump in yourself and ask
 

00:23:38.640 --> 00:23:39.750 align:start position:0%
feel free to jump in yourself and ask
questions<00:23:38.960><c> you</c><00:23:39.039><c> don't</c><00:23:39.200><c> need</c><00:23:39.360><c> to</c><00:23:39.440><c> go</c><00:23:39.600><c> through</c>

00:23:39.750 --> 00:23:39.760 align:start position:0%
questions you don't need to go through
 

00:23:39.760 --> 00:23:43.350 align:start position:0%
questions you don't need to go through
the<00:23:39.919><c> chat</c>

00:23:43.350 --> 00:23:43.360 align:start position:0%
 
 

00:23:43.360 --> 00:23:46.710 align:start position:0%
 
okay<00:23:43.919><c> um</c><00:23:45.840><c> all</c><00:23:46.000><c> right</c>

00:23:46.710 --> 00:23:46.720 align:start position:0%
okay um all right
 

00:23:46.720 --> 00:23:50.549 align:start position:0%
okay um all right
sorry<00:23:49.520><c> um</c>

00:23:50.549 --> 00:23:50.559 align:start position:0%
sorry um
 

00:23:50.559 --> 00:23:51.990 align:start position:0%
sorry um
i'm<00:23:50.720><c> going</c><00:23:50.799><c> to</c><00:23:50.880><c> spend</c><00:23:51.120><c> a</c><00:23:51.360><c> couple</c><00:23:51.600><c> of</c><00:23:51.679><c> minutes</c>

00:23:51.990 --> 00:23:52.000 align:start position:0%
i'm going to spend a couple of minutes
 

00:23:52.000 --> 00:23:53.750 align:start position:0%
i'm going to spend a couple of minutes
now<00:23:52.320><c> talking</c><00:23:52.640><c> about</c>

00:23:53.750 --> 00:23:53.760 align:start position:0%
now talking about
 

00:23:53.760 --> 00:23:57.029 align:start position:0%
now talking about
the<00:23:54.240><c> class</c><00:23:54.640><c> structure</c><00:23:56.240><c> of</c>

00:23:57.029 --> 00:23:57.039 align:start position:0%
the class structure of
 

00:23:57.039 --> 00:24:01.110 align:start position:0%
the class structure of
6<00:23:58.679><c> s081</c>

00:24:01.110 --> 00:24:01.120 align:start position:0%
6 s081
 

00:24:01.120 --> 00:24:04.149 align:start position:0%
6 s081
before<00:24:02.320><c> switching</c><00:24:02.720><c> back</c><00:24:03.039><c> to</c><00:24:03.840><c> actual</c>

00:24:04.149 --> 00:24:04.159 align:start position:0%
before switching back to actual
 

00:24:04.159 --> 00:24:05.430 align:start position:0%
before switching back to actual
technical<00:24:04.559><c> content</c>

00:24:05.430 --> 00:24:05.440 align:start position:0%
technical content
 

00:24:05.440 --> 00:24:07.750 align:start position:0%
technical content
so<00:24:05.679><c> the</c><00:24:05.919><c> uh</c><00:24:06.640><c> there's</c><00:24:06.880><c> a</c><00:24:06.960><c> website</c><00:24:07.440><c> for</c><00:24:07.600><c> the</c>

00:24:07.750 --> 00:24:07.760 align:start position:0%
so the uh there's a website for the
 

00:24:07.760 --> 00:24:09.350 align:start position:0%
so the uh there's a website for the
course<00:24:08.240><c> which</c><00:24:08.480><c> i</c><00:24:08.640><c> don't</c><00:24:08.720><c> want</c><00:24:08.799><c> to</c><00:24:08.880><c> write</c><00:24:09.200><c> out</c>

00:24:09.350 --> 00:24:09.360 align:start position:0%
course which i don't want to write out
 

00:24:09.360 --> 00:24:10.230 align:start position:0%
course which i don't want to write out
just<00:24:09.520><c> now</c><00:24:09.760><c> but</c><00:24:09.919><c> it's</c>

00:24:10.230 --> 00:24:10.240 align:start position:0%
just now but it's
 

00:24:10.240 --> 00:24:12.789 align:start position:0%
just now but it's
um<00:24:10.640><c> you</c><00:24:10.799><c> can</c><00:24:10.880><c> find</c><00:24:11.120><c> it</c><00:24:11.200><c> by</c><00:24:11.360><c> looking</c><00:24:11.520><c> for</c><00:24:11.679><c> 6s</c><00:24:12.159><c> 081</c>

00:24:12.789 --> 00:24:12.799 align:start position:0%
um you can find it by looking for 6s 081
 

00:24:12.799 --> 00:24:14.230 align:start position:0%
um you can find it by looking for 6s 081
on<00:24:12.960><c> google</c>

00:24:14.230 --> 00:24:14.240 align:start position:0%
on google
 

00:24:14.240 --> 00:24:19.830 align:start position:0%
on google
and<00:24:14.799><c> the</c><00:24:14.960><c> website</c><00:24:16.480><c> um</c><00:24:17.039><c> has</c>

00:24:19.830 --> 00:24:19.840 align:start position:0%
and the website um has
 

00:24:19.840 --> 00:24:23.909 align:start position:0%
and the website um has
um<00:24:21.120><c> the</c><00:24:21.360><c> schedule</c><00:24:22.799><c> uh</c>

00:24:23.909 --> 00:24:23.919 align:start position:0%
um the schedule uh
 

00:24:23.919 --> 00:24:26.230 align:start position:0%
um the schedule uh
it<00:24:24.159><c> has</c><00:24:24.799><c> the</c><00:24:24.960><c> assignments</c><00:24:25.520><c> on</c><00:24:25.679><c> the</c><00:24:25.760><c> schedule</c>

00:24:26.230 --> 00:24:26.240 align:start position:0%
it has the assignments on the schedule
 

00:24:26.240 --> 00:24:28.710 align:start position:0%
it has the assignments on the schedule
it<00:24:26.400><c> has</c><00:24:26.559><c> the</c><00:24:26.880><c> lab</c><00:24:27.279><c> assignments</c>

00:24:28.710 --> 00:24:28.720 align:start position:0%
it has the lab assignments
 

00:24:28.720 --> 00:24:30.870 align:start position:0%
it has the lab assignments
um<00:24:29.039><c> and</c><00:24:29.200><c> it</c><00:24:29.360><c> has</c><00:24:29.679><c> the</c><00:24:29.840><c> sort</c><00:24:30.000><c> of</c><00:24:30.400><c> information</c>

00:24:30.870 --> 00:24:30.880 align:start position:0%
um and it has the sort of information
 

00:24:30.880 --> 00:24:31.990 align:start position:0%
um and it has the sort of information
about<00:24:31.039><c> course</c><00:24:31.279><c> structure</c><00:24:31.760><c> like</c>

00:24:31.990 --> 00:24:32.000 align:start position:0%
about course structure like
 

00:24:32.000 --> 00:24:35.909 align:start position:0%
about course structure like
the<00:24:32.240><c> grading</c><00:24:32.720><c> policy</c><00:24:33.200><c> on</c><00:24:33.440><c> it</c><00:24:34.720><c> the</c><00:24:34.960><c> other</c><00:24:35.120><c> big</c>

00:24:35.909 --> 00:24:35.919 align:start position:0%
the grading policy on it the other big
 

00:24:35.919 --> 00:24:37.830 align:start position:0%
the grading policy on it the other big
resource<00:24:36.320><c> you're</c><00:24:36.400><c> gonna</c><00:24:37.200><c> want</c><00:24:37.360><c> to</c><00:24:37.440><c> keep</c><00:24:37.600><c> track</c>

00:24:37.830 --> 00:24:37.840 align:start position:0%
resource you're gonna want to keep track
 

00:24:37.840 --> 00:24:40.230 align:start position:0%
resource you're gonna want to keep track
of<00:24:38.000><c> is</c><00:24:38.080><c> piazza</c>

00:24:40.230 --> 00:24:40.240 align:start position:0%
of is piazza
 

00:24:40.240 --> 00:24:41.830 align:start position:0%
of is piazza
i<00:24:40.320><c> guess</c><00:24:40.640><c> everybody</c><00:24:40.960><c> who's</c><00:24:41.120><c> here</c><00:24:41.360><c> got</c><00:24:41.520><c> here</c><00:24:41.679><c> by</c>

00:24:41.830 --> 00:24:41.840 align:start position:0%
i guess everybody who's here got here by
 

00:24:41.840 --> 00:24:43.909 align:start position:0%
i guess everybody who's here got here by
the way<00:24:42.080><c> piazza</c><00:24:43.200><c> but</c>

00:24:43.909 --> 00:24:43.919 align:start position:0%
the way piazza but
 

00:24:43.919 --> 00:24:47.510 align:start position:0%
the way piazza but
as<00:24:44.159><c> well</c><00:24:44.840><c> as</c><00:24:46.000><c> so</c><00:24:46.320><c> we</c><00:24:46.480><c> use</c><00:24:46.720><c> piazza</c><00:24:47.120><c> really</c><00:24:47.360><c> for</c>

00:24:47.510 --> 00:24:47.520 align:start position:0%
as well as so we use piazza really for
 

00:24:47.520 --> 00:24:48.710 align:start position:0%
as well as so we use piazza really for
two<00:24:47.679><c> main</c><00:24:47.919><c> things</c><00:24:48.159><c> one</c><00:24:48.400><c> is</c>

00:24:48.710 --> 00:24:48.720 align:start position:0%
two main things one is
 

00:24:48.720 --> 00:24:50.230 align:start position:0%
two main things one is
as<00:24:48.960><c> a</c><00:24:49.039><c> way</c><00:24:49.200><c> of</c><00:24:49.279><c> people</c><00:24:49.520><c> to</c><00:24:49.600><c> be</c><00:24:49.760><c> able</c><00:24:49.840><c> to</c><00:24:50.000><c> ask</c>

00:24:50.230 --> 00:24:50.240 align:start position:0%
as a way of people to be able to ask
 

00:24:50.240 --> 00:24:53.350 align:start position:0%
as a way of people to be able to ask
questions<00:24:50.799><c> about</c><00:24:51.039><c> the</c><00:24:51.200><c> lab</c><00:24:51.520><c> assignments</c><00:24:52.240><c> and</c>

00:24:53.350 --> 00:24:53.360 align:start position:0%
questions about the lab assignments and
 

00:24:53.360 --> 00:24:55.830 align:start position:0%
questions about the lab assignments and
uh<00:24:54.080><c> course</c><00:24:54.320><c> staff</c><00:24:54.720><c> will</c><00:24:55.120><c> try</c><00:24:55.279><c> to</c><00:24:55.440><c> answer</c><00:24:55.679><c> these</c>

00:24:55.830 --> 00:24:55.840 align:start position:0%
uh course staff will try to answer these
 

00:24:55.840 --> 00:24:56.470 align:start position:0%
uh course staff will try to answer these
questions<00:24:56.159><c> but</c>

00:24:56.470 --> 00:24:56.480 align:start position:0%
questions but
 

00:24:56.480 --> 00:24:57.990 align:start position:0%
questions but
you<00:24:56.640><c> should</c><00:24:56.960><c> feel</c><00:24:57.200><c> absolutely</c><00:24:57.600><c> free</c><00:24:57.840><c> to</c>

00:24:57.990 --> 00:24:58.000 align:start position:0%
you should feel absolutely free to
 

00:24:58.000 --> 00:25:00.630 align:start position:0%
you should feel absolutely free to
answer<00:24:58.240><c> each</c><00:24:58.400><c> other's</c><00:24:58.720><c> questions</c><00:24:59.200><c> as</c><00:24:59.279><c> well</c>

00:25:00.630 --> 00:25:00.640 align:start position:0%
answer each other's questions as well
 

00:25:00.640 --> 00:25:01.830 align:start position:0%
answer each other's questions as well
and<00:25:00.720><c> the</c><00:25:00.880><c> other</c><00:25:01.039><c> big</c><00:25:01.200><c> thing</c><00:25:01.360><c> that</c><00:25:01.440><c> happens</c><00:25:01.760><c> on</c>

00:25:01.830 --> 00:25:01.840 align:start position:0%
and the other big thing that happens on
 

00:25:01.840 --> 00:25:03.510 align:start position:0%
and the other big thing that happens on
piazza<00:25:02.240><c> if</c><00:25:02.320><c> there's</c><00:25:02.559><c> announcements</c><00:25:03.360><c> if</c>

00:25:03.510 --> 00:25:03.520 align:start position:0%
piazza if there's announcements if
 

00:25:03.520 --> 00:25:04.630 align:start position:0%
piazza if there's announcements if
there's<00:25:03.679><c> any</c><00:25:03.840><c> announcements</c><00:25:04.400><c> about</c><00:25:04.559><c> the</c>

00:25:04.630 --> 00:25:04.640 align:start position:0%
there's any announcements about the
 

00:25:04.640 --> 00:25:05.909 align:start position:0%
there's any announcements about the
course

00:25:05.909 --> 00:25:05.919 align:start position:0%
course
 

00:25:05.919 --> 00:25:07.669 align:start position:0%
course
we'll<00:25:06.080><c> put</c><00:25:06.240><c> the</c><00:25:06.320><c> announcements</c><00:25:06.880><c> on</c><00:25:07.039><c> piazza</c><00:25:07.520><c> so</c>

00:25:07.669 --> 00:25:07.679 align:start position:0%
we'll put the announcements on piazza so
 

00:25:07.679 --> 00:25:09.110 align:start position:0%
we'll put the announcements on piazza so
you<00:25:07.840><c> should</c><00:25:08.000><c> keep</c><00:25:08.159><c> an</c><00:25:08.320><c> eye</c><00:25:08.400><c> on</c><00:25:08.559><c> piazza</c><00:25:08.960><c> for</c>

00:25:09.110 --> 00:25:09.120 align:start position:0%
you should keep an eye on piazza for
 

00:25:09.120 --> 00:25:11.110 align:start position:0%
you should keep an eye on piazza for
announcements<00:25:09.679><c> even</c><00:25:09.919><c> if</c>

00:25:11.110 --> 00:25:11.120 align:start position:0%
announcements even if
 

00:25:11.120 --> 00:25:16.630 align:start position:0%
announcements even if
you're<00:25:11.279><c> not</c><00:25:11.440><c> using</c><00:25:11.679><c> it</c><00:25:11.760><c> for</c><00:25:11.919><c> lab</c><00:25:12.840><c> help</c>

00:25:16.630 --> 00:25:16.640 align:start position:0%
 
 

00:25:16.640 --> 00:25:18.470 align:start position:0%
 
the<00:25:17.279><c> one</c><00:25:17.440><c> of</c><00:25:17.520><c> the</c><00:25:17.600><c> big</c><00:25:17.840><c> parts</c><00:25:18.080><c> of</c><00:25:18.159><c> the</c><00:25:18.240><c> course</c>

00:25:18.470 --> 00:25:18.480 align:start position:0%
the one of the big parts of the course
 

00:25:18.480 --> 00:25:21.990 align:start position:0%
the one of the big parts of the course
is<00:25:18.640><c> that</c><00:25:18.960><c> these</c><00:25:19.200><c> lectures</c>

00:25:21.990 --> 00:25:22.000 align:start position:0%
 
 

00:25:22.000 --> 00:25:25.590 align:start position:0%
 
the<00:25:24.480><c> lectures</c><00:25:24.880><c> will</c>

00:25:25.590 --> 00:25:25.600 align:start position:0%
the lectures will
 

00:25:25.600 --> 00:25:30.230 align:start position:0%
the lectures will
cover<00:25:26.640><c> basic</c><00:25:27.039><c> ideas</c><00:25:27.360><c> in</c><00:25:27.440><c> operating</c><00:25:27.840><c> systems</c>

00:25:30.230 --> 00:25:30.240 align:start position:0%
cover basic ideas in operating systems
 

00:25:30.240 --> 00:25:31.990 align:start position:0%
cover basic ideas in operating systems
some<00:25:30.400><c> of</c><00:25:30.559><c> the</c><00:25:30.640><c> lectures</c><00:25:31.039><c> will</c><00:25:31.120><c> be</c><00:25:31.279><c> devoted</c><00:25:31.679><c> to</c>

00:25:31.990 --> 00:25:32.000 align:start position:0%
some of the lectures will be devoted to
 

00:25:32.000 --> 00:25:33.510 align:start position:0%
some of the lectures will be devoted to
detailed

00:25:33.510 --> 00:25:33.520 align:start position:0%
detailed
 

00:25:33.520 --> 00:25:36.789 align:start position:0%
detailed
study<00:25:34.000><c> of</c><00:25:34.080><c> the</c><00:25:34.880><c> code</c><00:25:35.279><c> in</c><00:25:35.520><c> xv6</c><00:25:36.240><c> which</c><00:25:36.480><c> is</c><00:25:36.640><c> our</c>

00:25:36.789 --> 00:25:36.799 align:start position:0%
study of the code in xv6 which is our
 

00:25:36.799 --> 00:25:39.350 align:start position:0%
study of the code in xv6 which is our
small<00:25:37.200><c> teaching</c><00:25:37.600><c> operating</c><00:25:38.000><c> system</c>

00:25:39.350 --> 00:25:39.360 align:start position:0%
small teaching operating system
 

00:25:39.360 --> 00:25:41.510 align:start position:0%
small teaching operating system
and<00:25:39.440><c> so</c><00:25:40.159><c> talk</c><00:25:40.320><c> about</c><00:25:40.559><c> how</c><00:25:40.720><c> it</c><00:25:40.799><c> works</c><00:25:41.200><c> we'll</c>

00:25:41.510 --> 00:25:41.520 align:start position:0%
and so talk about how it works we'll
 

00:25:41.520 --> 00:25:43.110 align:start position:0%
and so talk about how it works we'll
look<00:25:41.760><c> at</c><00:25:41.840><c> the</c><00:25:42.000><c> code</c><00:25:42.320><c> and</c><00:25:42.559><c> sort</c><00:25:42.720><c> of</c><00:25:42.799><c> show</c><00:25:43.039><c> the</c>

00:25:43.110 --> 00:25:43.120 align:start position:0%
look at the code and sort of show the
 

00:25:43.120 --> 00:25:45.750 align:start position:0%
look at the code and sort of show the
code<00:25:43.360><c> executing</c><00:25:43.919><c> during</c><00:25:44.240><c> lectures</c>

00:25:45.750 --> 00:25:45.760 align:start position:0%
code executing during lectures
 

00:25:45.760 --> 00:25:47.350 align:start position:0%
code executing during lectures
and<00:25:45.919><c> in</c><00:25:46.080><c> addition</c><00:25:46.480><c> before</c><00:25:46.960><c> many</c><00:25:47.200><c> of</c><00:25:47.279><c> the</c>

00:25:47.350 --> 00:25:47.360 align:start position:0%
and in addition before many of the
 

00:25:47.360 --> 00:25:48.870 align:start position:0%
and in addition before many of the
lectures<00:25:47.760><c> there'll</c><00:25:47.919><c> be</c><00:25:48.080><c> assignments</c>

00:25:48.870 --> 00:25:48.880 align:start position:0%
lectures there'll be assignments
 

00:25:48.880 --> 00:25:51.510 align:start position:0%
lectures there'll be assignments
reading<00:25:49.200><c> assignments</c><00:25:49.679><c> from</c><00:25:50.080><c> a</c><00:25:50.240><c> book</c><00:25:51.120><c> that</c>

00:25:51.510 --> 00:25:51.520 align:start position:0%
reading assignments from a book that
 

00:25:51.520 --> 00:25:52.710 align:start position:0%
reading assignments from a book that
sort<00:25:51.679><c> of</c><00:25:51.760><c> describes</c><00:25:52.320><c> how</c>

00:25:52.710 --> 00:25:52.720 align:start position:0%
sort of describes how
 

00:25:52.720 --> 00:25:55.510 align:start position:0%
sort of describes how
xv6<00:25:53.440><c> operates</c><00:25:54.080><c> and</c><00:25:54.559><c> why</c><00:25:54.799><c> it's</c><00:25:54.960><c> designed</c><00:25:55.360><c> that</c>

00:25:55.510 --> 00:25:55.520 align:start position:0%
xv6 operates and why it's designed that
 

00:25:55.520 --> 00:25:56.630 align:start position:0%
xv6 operates and why it's designed that
way

00:25:56.630 --> 00:25:56.640 align:start position:0%
way
 

00:25:56.640 --> 00:25:57.990 align:start position:0%
way
so<00:25:56.799><c> you</c><00:25:56.880><c> should</c><00:25:57.039><c> do</c><00:25:57.200><c> the</c><00:25:57.279><c> readings</c><00:25:57.600><c> before</c><00:25:57.919><c> the</c>

00:25:57.990 --> 00:25:58.000 align:start position:0%
so you should do the readings before the
 

00:25:58.000 --> 00:26:00.549 align:start position:0%
so you should do the readings before the
class<00:25:59.279><c> so</c><00:25:59.440><c> that</c><00:25:59.520><c> you'll</c><00:25:59.760><c> understand</c>

00:26:00.549 --> 00:26:00.559 align:start position:0%
class so that you'll understand
 

00:26:00.559 --> 00:26:02.789 align:start position:0%
class so that you'll understand
the<00:26:00.640><c> discussion</c><00:26:01.120><c> in</c><00:26:01.200><c> the</c><00:26:01.279><c> class</c><00:26:02.480><c> some</c><00:26:02.640><c> of</c><00:26:02.720><c> the</c>

00:26:02.789 --> 00:26:02.799 align:start position:0%
the discussion in the class some of the
 

00:26:02.799 --> 00:26:04.230 align:start position:0%
the discussion in the class some of the
lectures<00:26:03.200><c> are</c><00:26:03.279><c> devoted</c><00:26:03.679><c> to</c>

00:26:04.230 --> 00:26:04.240 align:start position:0%
lectures are devoted to
 

00:26:04.240 --> 00:26:07.110 align:start position:0%
lectures are devoted to
background<00:26:04.799><c> to</c><00:26:04.960><c> help</c><00:26:05.120><c> you</c><00:26:05.279><c> do</c><00:26:05.440><c> the</c><00:26:05.600><c> labs</c><00:26:07.039><c> sort</c>

00:26:07.110 --> 00:26:07.120 align:start position:0%
background to help you do the labs sort
 

00:26:07.120 --> 00:26:09.830 align:start position:0%
background to help you do the labs sort
of<00:26:07.360><c> explanations</c><00:26:07.840><c> about</c><00:26:08.159><c> c</c><00:26:08.400><c> works</c><00:26:08.720><c> of</c><00:26:08.880><c> how</c><00:26:09.120><c> the</c>

00:26:09.830 --> 00:26:09.840 align:start position:0%
of explanations about c works of how the
 

00:26:09.840 --> 00:26:11.990 align:start position:0%
of explanations about c works of how the
risc<00:26:10.159><c> 5</c><00:26:10.640><c> which</c><00:26:10.799><c> is</c><00:26:10.880><c> the</c><00:26:10.960><c> microprocessor</c><00:26:11.840><c> that</c>

00:26:11.990 --> 00:26:12.000 align:start position:0%
risc 5 which is the microprocessor that
 

00:26:12.000 --> 00:26:13.669 align:start position:0%
risc 5 which is the microprocessor that
we'll<00:26:12.159><c> be</c><00:26:12.240><c> using</c>

00:26:13.669 --> 00:26:13.679 align:start position:0%
we'll be using
 

00:26:13.679 --> 00:26:16.149 align:start position:0%
we'll be using
that<00:26:14.000><c> you'll</c><00:26:14.159><c> find</c><00:26:14.400><c> helpful</c><00:26:14.880><c> in</c><00:26:15.840><c> in</c>

00:26:16.149 --> 00:26:16.159 align:start position:0%
that you'll find helpful in in
 

00:26:16.159 --> 00:26:17.669 align:start position:0%
that you'll find helpful in in
understanding<00:26:16.559><c> how</c><00:26:16.720><c> to</c><00:26:16.799><c> do</c><00:26:16.960><c> the</c><00:26:17.120><c> labs</c>

00:26:17.669 --> 00:26:17.679 align:start position:0%
understanding how to do the labs
 

00:26:17.679 --> 00:26:20.149 align:start position:0%
understanding how to do the labs
and<00:26:17.840><c> towards</c><00:26:18.080><c> the</c><00:26:18.240><c> end</c><00:26:18.400><c> of</c><00:26:18.480><c> the</c><00:26:18.559><c> course</c><00:26:19.760><c> i</c><00:26:20.000><c> will</c>

00:26:20.149 --> 00:26:20.159 align:start position:0%
and towards the end of the course i will
 

00:26:20.159 --> 00:26:21.750 align:start position:0%
and towards the end of the course i will
spend<00:26:20.480><c> some</c><00:26:20.640><c> lectures</c>

00:26:21.750 --> 00:26:21.760 align:start position:0%
spend some lectures
 

00:26:21.760 --> 00:26:24.310 align:start position:0%
spend some lectures
discussing<00:26:22.320><c> some</c><00:26:22.640><c> operating</c><00:26:23.039><c> system</c><00:26:23.440><c> papers</c>

00:26:24.310 --> 00:26:24.320 align:start position:0%
discussing some operating system papers
 

00:26:24.320 --> 00:26:25.029 align:start position:0%
discussing some operating system papers
um

00:26:25.029 --> 00:26:25.039 align:start position:0%
um
 

00:26:25.039 --> 00:26:26.950 align:start position:0%
um
research<00:26:25.440><c> papers</c><00:26:25.840><c> and</c><00:26:26.080><c> and</c><00:26:26.320><c> some</c><00:26:26.559><c> classic</c>

00:26:26.950 --> 00:26:26.960 align:start position:0%
research papers and and some classic
 

00:26:26.960 --> 00:26:28.310 align:start position:0%
research papers and and some classic
papers<00:26:27.279><c> in</c><00:26:27.360><c> the</c><00:26:27.520><c> field</c>

00:26:28.310 --> 00:26:28.320 align:start position:0%
papers in the field
 

00:26:28.320 --> 00:26:30.310 align:start position:0%
papers in the field
which<00:26:28.720><c> uh</c><00:26:29.520><c> you</c><00:26:29.679><c> know</c><00:26:29.760><c> we'll</c><00:26:30.000><c> ask</c><00:26:30.159><c> that</c><00:26:30.240><c> you</c>

00:26:30.310 --> 00:26:30.320 align:start position:0%
which uh you know we'll ask that you
 

00:26:30.320 --> 00:26:31.510 align:start position:0%
which uh you know we'll ask that you
read<00:26:30.559><c> before</c><00:26:30.799><c> the</c><00:26:30.880><c> lectures</c><00:26:31.200><c> and</c><00:26:31.279><c> then</c><00:26:31.360><c> we'll</c>

00:26:31.510 --> 00:26:31.520 align:start position:0%
read before the lectures and then we'll
 

00:26:31.520 --> 00:26:33.110 align:start position:0%
read before the lectures and then we'll
sort<00:26:31.679><c> of</c><00:26:31.760><c> talk</c><00:26:32.000><c> about</c><00:26:32.240><c> the</c>

00:26:33.110 --> 00:26:33.120 align:start position:0%
sort of talk about the
 

00:26:33.120 --> 00:26:35.510 align:start position:0%
sort of talk about the
papers<00:26:33.440><c> in</c><00:26:33.600><c> during</c><00:26:33.840><c> the</c><00:26:33.919><c> lecture</c><00:26:35.039><c> for</c><00:26:35.279><c> all</c><00:26:35.440><c> the</c>

00:26:35.510 --> 00:26:35.520 align:start position:0%
papers in during the lecture for all the
 

00:26:35.520 --> 00:26:37.269 align:start position:0%
papers in during the lecture for all the
lectures<00:26:36.000><c> or</c><00:26:36.159><c> almost</c><00:26:36.400><c> all</c><00:26:36.480><c> the</c><00:26:36.640><c> lectures</c>

00:26:37.269 --> 00:26:37.279 align:start position:0%
lectures or almost all the lectures
 

00:26:37.279 --> 00:26:39.269 align:start position:0%
lectures or almost all the lectures
we<00:26:37.520><c> ask</c><00:26:38.080><c> that</c><00:26:38.240><c> you</c><00:26:38.320><c> submit</c><00:26:38.640><c> a</c><00:26:38.720><c> question</c><00:26:39.120><c> about</c>

00:26:39.269 --> 00:26:39.279 align:start position:0%
we ask that you submit a question about
 

00:26:39.279 --> 00:26:40.950 align:start position:0%
we ask that you submit a question about
the<00:26:39.440><c> reading</c>

00:26:40.950 --> 00:26:40.960 align:start position:0%
the reading
 

00:26:40.960 --> 00:26:44.310 align:start position:0%
the reading
for<00:26:41.120><c> the</c><00:26:41.279><c> lecture</c><00:26:42.320><c> before</c><00:26:43.679><c> the</c><00:26:43.840><c> actual</c><00:26:44.080><c> time</c>

00:26:44.310 --> 00:26:44.320 align:start position:0%
for the lecture before the actual time
 

00:26:44.320 --> 00:26:45.190 align:start position:0%
for the lecture before the actual time
of<00:26:44.400><c> the</c><00:26:44.480><c> lecture</c>

00:26:45.190 --> 00:26:45.200 align:start position:0%
of the lecture
 

00:26:45.200 --> 00:26:47.669 align:start position:0%
of the lecture
which<00:26:45.919><c> many</c><00:26:46.240><c> or</c><00:26:46.400><c> all</c><00:26:46.480><c> of</c><00:26:46.640><c> you</c><00:26:46.720><c> did</c><00:26:46.960><c> for</c><00:26:47.200><c> this</c>

00:26:47.669 --> 00:26:47.679 align:start position:0%
which many or all of you did for this
 

00:26:47.679 --> 00:26:49.750 align:start position:0%
which many or all of you did for this
lecture<00:26:48.159><c> for</c><00:26:48.240><c> which</c><00:26:48.480><c> thank</c><00:26:48.720><c> you</c>

00:26:49.750 --> 00:26:49.760 align:start position:0%
lecture for which thank you
 

00:26:49.760 --> 00:26:51.269 align:start position:0%
lecture for which thank you
and<00:26:49.919><c> we</c><00:26:50.000><c> will</c><00:26:50.159><c> read</c><00:26:50.320><c> those</c><00:26:50.559><c> questions</c><00:26:50.880><c> to</c><00:26:50.960><c> help</c>

00:26:51.269 --> 00:26:51.279 align:start position:0%
and we will read those questions to help
 

00:26:51.279 --> 00:26:53.190 align:start position:0%
and we will read those questions to help
us

00:26:53.190 --> 00:26:53.200 align:start position:0%
us
 

00:26:53.200 --> 00:26:55.269 align:start position:0%
us
guide<00:26:53.520><c> us</c><00:26:53.600><c> about</c><00:26:53.919><c> what</c><00:26:54.080><c> to</c><00:26:54.240><c> talk</c><00:26:54.400><c> about</c><00:26:54.720><c> and</c>

00:26:55.269 --> 00:26:55.279 align:start position:0%
guide us about what to talk about and
 

00:26:55.279 --> 00:26:56.470 align:start position:0%
guide us about what to talk about and
we'll<00:26:55.440><c> try</c><00:26:55.679><c> to</c><00:26:55.840><c> answer</c>

00:26:56.470 --> 00:26:56.480 align:start position:0%
we'll try to answer
 

00:26:56.480 --> 00:26:57.909 align:start position:0%
we'll try to answer
as<00:26:56.640><c> many</c><00:26:56.960><c> of</c><00:26:57.039><c> the</c><00:26:57.120><c> questions</c><00:26:57.440><c> as</c><00:26:57.520><c> we</c><00:26:57.679><c> can</c>

00:26:57.909 --> 00:26:57.919 align:start position:0%
as many of the questions as we can
 

00:26:57.919 --> 00:26:59.750 align:start position:0%
as many of the questions as we can
although<00:26:58.640><c> there's</c><00:26:58.880><c> rarely</c><00:26:59.279><c> time</c>

00:26:59.750 --> 00:26:59.760 align:start position:0%
although there's rarely time
 

00:26:59.760 --> 00:27:01.350 align:start position:0%
although there's rarely time
unfortunately<00:27:00.480><c> for</c><00:27:00.640><c> us</c><00:27:00.720><c> to</c><00:27:00.799><c> answer</c><00:27:01.120><c> all</c><00:27:01.279><c> of</c>

00:27:01.350 --> 00:27:01.360 align:start position:0%
unfortunately for us to answer all of
 

00:27:01.360 --> 00:27:03.350 align:start position:0%
unfortunately for us to answer all of
them

00:27:03.350 --> 00:27:03.360 align:start position:0%
them
 

00:27:03.360 --> 00:27:06.310 align:start position:0%
them
the<00:27:03.520><c> next</c><00:27:03.760><c> big</c><00:27:04.000><c> part</c><00:27:04.320><c> the</c><00:27:04.400><c> course</c><00:27:04.720><c> of</c><00:27:04.799><c> the</c><00:27:05.039><c> labs</c>

00:27:06.310 --> 00:27:06.320 align:start position:0%
the next big part the course of the labs
 

00:27:06.320 --> 00:27:07.750 align:start position:0%
the next big part the course of the labs
there's<00:27:06.559><c> a</c><00:27:06.640><c> programming</c><00:27:07.200><c> lab</c>

00:27:07.750 --> 00:27:07.760 align:start position:0%
there's a programming lab
 

00:27:07.760 --> 00:27:11.830 align:start position:0%
there's a programming lab
do<00:27:09.840><c> almost</c><00:27:10.159><c> every</c><00:27:10.400><c> week</c>

00:27:11.830 --> 00:27:11.840 align:start position:0%
do almost every week
 

00:27:11.840 --> 00:27:13.269 align:start position:0%
do almost every week
and<00:27:11.919><c> the</c><00:27:12.159><c> point</c><00:27:12.320><c> of</c><00:27:12.400><c> the</c><00:27:12.559><c> labs</c><00:27:12.880><c> is</c><00:27:12.960><c> to</c><00:27:13.039><c> help</c><00:27:13.200><c> you</c>

00:27:13.269 --> 00:27:13.279 align:start position:0%
and the point of the labs is to help you
 

00:27:13.279 --> 00:27:16.149 align:start position:0%
and the point of the labs is to help you
get<00:27:13.440><c> hands-on</c><00:27:13.919><c> experience</c><00:27:14.559><c> with</c>

00:27:16.149 --> 00:27:16.159 align:start position:0%
get hands-on experience with
 

00:27:16.159 --> 00:27:20.630 align:start position:0%
get hands-on experience with
implementing<00:27:16.960><c> and</c><00:27:17.360><c> using</c><00:27:18.559><c> operating</c><00:27:19.039><c> systems</c>

00:27:20.630 --> 00:27:20.640 align:start position:0%
implementing and using operating systems
 

00:27:20.640 --> 00:27:23.750 align:start position:0%
implementing and using operating systems
um<00:27:21.760><c> the</c><00:27:22.159><c> lab</c><00:27:22.399><c> that's</c><00:27:22.640><c> due</c><00:27:22.960><c> next</c><00:27:23.279><c> week</c>

00:27:23.750 --> 00:27:23.760 align:start position:0%
um the lab that's due next week
 

00:27:23.760 --> 00:27:26.070 align:start position:0%
um the lab that's due next week
is<00:27:24.080><c> actually</c><00:27:24.640><c> about</c><00:27:24.960><c> using</c><00:27:25.279><c> using</c><00:27:25.679><c> about</c>

00:27:26.070 --> 00:27:26.080 align:start position:0%
is actually about using using about
 

00:27:26.080 --> 00:27:27.510 align:start position:0%
is actually about using using about
writing<00:27:26.399><c> applications</c><00:27:26.960><c> that</c>

00:27:27.510 --> 00:27:27.520 align:start position:0%
writing applications that
 

00:27:27.520 --> 00:27:29.190 align:start position:0%
writing applications that
make<00:27:27.760><c> the</c><00:27:27.919><c> call</c><00:27:28.159><c> the</c><00:27:28.320><c> system</c><00:27:28.640><c> calls</c><00:27:28.880><c> we'll</c><00:27:29.039><c> be</c>

00:27:29.190 --> 00:27:29.200 align:start position:0%
make the call the system calls we'll be
 

00:27:29.200 --> 00:27:31.430 align:start position:0%
make the call the system calls we'll be
talking<00:27:29.440><c> about</c><00:27:30.480><c> um</c>

00:27:31.430 --> 00:27:31.440 align:start position:0%
talking about um
 

00:27:31.440 --> 00:27:33.269 align:start position:0%
talking about um
whereas<00:27:31.760><c> most</c><00:27:32.000><c> of</c><00:27:32.080><c> those</c><00:27:32.480><c> labs</c><00:27:32.799><c> after</c><00:27:33.039><c> that</c>

00:27:33.269 --> 00:27:33.279 align:start position:0%
whereas most of those labs after that
 

00:27:33.279 --> 00:27:35.029 align:start position:0%
whereas most of those labs after that
are<00:27:33.600><c> involve</c><00:27:34.000><c> you</c>

00:27:35.029 --> 00:27:35.039 align:start position:0%
are involve you
 

00:27:35.039 --> 00:27:37.029 align:start position:0%
are involve you
either<00:27:35.440><c> implementing</c><00:27:36.240><c> basic</c><00:27:36.640><c> operating</c>

00:27:37.029 --> 00:27:37.039 align:start position:0%
either implementing basic operating
 

00:27:37.039 --> 00:27:38.870 align:start position:0%
either implementing basic operating
system<00:27:37.360><c> features</c><00:27:37.760><c> or</c><00:27:38.000><c> adding</c>

00:27:38.870 --> 00:27:38.880 align:start position:0%
system features or adding
 

00:27:38.880 --> 00:27:42.710 align:start position:0%
system features or adding
uh<00:27:39.200><c> kernel</c><00:27:39.520><c> extensions</c><00:27:40.399><c> to</c><00:27:40.559><c> the</c><00:27:41.120><c> xv6</c>

00:27:42.710 --> 00:27:42.720 align:start position:0%
uh kernel extensions to the xv6
 

00:27:42.720 --> 00:27:45.590 align:start position:0%
uh kernel extensions to the xv6
uh<00:27:43.039><c> operating</c><00:27:43.440><c> system</c><00:27:44.640><c> the</c><00:27:44.799><c> very</c><00:27:45.039><c> last</c><00:27:45.200><c> slab</c>

00:27:45.590 --> 00:27:45.600 align:start position:0%
uh operating system the very last slab
 

00:27:45.600 --> 00:27:46.149 align:start position:0%
uh operating system the very last slab
and

00:27:46.149 --> 00:27:46.159 align:start position:0%
and
 

00:27:46.159 --> 00:27:47.990 align:start position:0%
and
one<00:27:46.399><c> in</c><00:27:46.480><c> which</c><00:27:46.559><c> you</c><00:27:46.720><c> actually</c><00:27:46.960><c> add</c><00:27:47.200><c> a</c><00:27:47.600><c> network</c>

00:27:47.990 --> 00:27:48.000 align:start position:0%
one in which you actually add a network
 

00:27:48.000 --> 00:27:49.830 align:start position:0%
one in which you actually add a network
stack<00:27:48.399><c> and</c><00:27:48.480><c> a</c><00:27:48.559><c> network</c><00:27:48.960><c> driver</c><00:27:49.360><c> so</c><00:27:49.520><c> you'll</c><00:27:49.679><c> be</c>

00:27:49.830 --> 00:27:49.840 align:start position:0%
stack and a network driver so you'll be
 

00:27:49.840 --> 00:27:51.430 align:start position:0%
stack and a network driver so you'll be
able<00:27:49.919><c> to</c><00:27:50.159><c> connect</c><00:27:50.559><c> in</c><00:27:50.720><c> over</c><00:27:50.880><c> the</c><00:27:50.960><c> network</c>

00:27:51.430 --> 00:27:51.440 align:start position:0%
able to connect in over the network
 

00:27:51.440 --> 00:27:55.590 align:start position:0%
able to connect in over the network
to<00:27:51.840><c> the</c><00:27:52.000><c> operating</c><00:27:52.320><c> system</c><00:27:52.640><c> that</c><00:27:52.720><c> you</c><00:27:52.880><c> run</c><00:27:54.080><c> um</c>

00:27:55.590 --> 00:27:55.600 align:start position:0%
to the operating system that you run um
 

00:27:55.600 --> 00:27:57.190 align:start position:0%
to the operating system that you run um
you<00:27:55.840><c> should</c><00:27:56.159><c> if</c><00:27:56.320><c> you</c><00:27:56.399><c> have</c><00:27:56.640><c> problems</c><00:27:56.960><c> with</c><00:27:57.039><c> the</c>

00:27:57.190 --> 00:27:57.200 align:start position:0%
you should if you have problems with the
 

00:27:57.200 --> 00:27:59.750 align:start position:0%
you should if you have problems with the
labs<00:27:57.679><c> uh</c><00:27:57.919><c> there'll</c><00:27:58.399><c> be</c><00:27:58.640><c> office</c><00:27:58.960><c> hours</c>

00:27:59.750 --> 00:27:59.760 align:start position:0%
labs uh there'll be office hours
 

00:27:59.760 --> 00:28:03.190 align:start position:0%
labs uh there'll be office hours
that<00:27:59.919><c> the</c><00:28:00.840><c> um</c><00:28:01.919><c> tas</c><00:28:02.320><c> will</c><00:28:02.480><c> hold</c><00:28:02.720><c> in</c><00:28:02.880><c> addition</c>

00:28:03.190 --> 00:28:03.200 align:start position:0%
that the um tas will hold in addition
 

00:28:03.200 --> 00:28:04.710 align:start position:0%
that the um tas will hold in addition
you<00:28:03.360><c> can</c>

00:28:04.710 --> 00:28:04.720 align:start position:0%
you can
 

00:28:04.720 --> 00:28:07.110 align:start position:0%
you can
post<00:28:04.960><c> questions</c><00:28:05.279><c> to</c><00:28:05.360><c> piazza</c><00:28:06.240><c> and</c><00:28:06.480><c> very</c><00:28:06.799><c> often</c>

00:28:07.110 --> 00:28:07.120 align:start position:0%
post questions to piazza and very often
 

00:28:07.120 --> 00:28:08.389 align:start position:0%
post questions to piazza and very often
you'll<00:28:07.279><c> be</c><00:28:07.440><c> able</c><00:28:07.520><c> to</c><00:28:07.600><c> get</c><00:28:07.760><c> useful</c><00:28:08.080><c> answers</c>

00:28:08.389 --> 00:28:08.399 align:start position:0%
you'll be able to get useful answers
 

00:28:08.399 --> 00:28:10.070 align:start position:0%
you'll be able to get useful answers
from<00:28:08.559><c> piazza</c>

00:28:10.070 --> 00:28:10.080 align:start position:0%
from piazza
 

00:28:10.080 --> 00:28:13.190 align:start position:0%
from piazza
more<00:28:10.320><c> quickly</c><00:28:10.640><c> than</c><00:28:10.799><c> from</c><00:28:11.039><c> office</c><00:28:11.360><c> hours</c>

00:28:13.190 --> 00:28:13.200 align:start position:0%
more quickly than from office hours
 

00:28:13.200 --> 00:28:15.909 align:start position:0%
more quickly than from office hours
we<00:28:13.440><c> welcome</c><00:28:13.840><c> you</c><00:28:14.399><c> discussing</c><00:28:15.200><c> the</c><00:28:15.360><c> labs</c>

00:28:15.909 --> 00:28:15.919 align:start position:0%
we welcome you discussing the labs
 

00:28:15.919 --> 00:28:17.350 align:start position:0%
we welcome you discussing the labs
talking<00:28:16.159><c> about</c><00:28:16.320><c> the</c><00:28:16.480><c> labs</c><00:28:16.799><c> talking</c><00:28:17.039><c> about</c><00:28:17.200><c> how</c>

00:28:17.350 --> 00:28:17.360 align:start position:0%
talking about the labs talking about how
 

00:28:17.360 --> 00:28:18.070 align:start position:0%
talking about the labs talking about how
to

00:28:18.070 --> 00:28:18.080 align:start position:0%
to
 

00:28:18.080 --> 00:28:21.190 align:start position:0%
to
design<00:28:18.559><c> the</c><00:28:19.679><c> lab</c><00:28:19.919><c> solutions</c><00:28:20.320><c> but</c><00:28:20.720><c> we</c><00:28:20.880><c> ask</c><00:28:21.039><c> you</c>

00:28:21.190 --> 00:28:21.200 align:start position:0%
design the lab solutions but we ask you
 

00:28:21.200 --> 00:28:22.470 align:start position:0%
design the lab solutions but we ask you
please<00:28:21.440><c> do</c><00:28:21.600><c> not</c><00:28:21.760><c> look</c><00:28:21.919><c> at</c><00:28:22.000><c> other</c><00:28:22.159><c> people's</c>

00:28:22.470 --> 00:28:22.480 align:start position:0%
please do not look at other people's
 

00:28:22.480 --> 00:28:23.510 align:start position:0%
please do not look at other people's
solutions

00:28:23.510 --> 00:28:23.520 align:start position:0%
solutions
 

00:28:23.520 --> 00:28:25.350 align:start position:0%
solutions
for<00:28:23.679><c> the</c><00:28:23.840><c> labs</c><00:28:24.159><c> please</c><00:28:24.720><c> all</c><00:28:24.880><c> the</c><00:28:24.960><c> code</c><00:28:25.200><c> you</c>

00:28:25.350 --> 00:28:25.360 align:start position:0%
for the labs please all the code you
 

00:28:25.360 --> 00:28:26.630 align:start position:0%
for the labs please all the code you
write<00:28:25.600><c> should</c><00:28:25.760><c> be</c><00:28:25.919><c> your</c><00:28:26.080><c> own</c><00:28:26.320><c> and</c>

00:28:26.630 --> 00:28:26.640 align:start position:0%
write should be your own and
 

00:28:26.640 --> 00:28:29.590 align:start position:0%
write should be your own and
you<00:28:26.799><c> shouldn't</c><00:28:27.520><c> share</c><00:28:27.840><c> code</c><00:28:28.240><c> or</c><00:28:29.200><c> look</c><00:28:29.440><c> at</c>

00:28:29.590 --> 00:28:29.600 align:start position:0%
you shouldn't share code or look at
 

00:28:29.600 --> 00:28:32.630 align:start position:0%
you shouldn't share code or look at
other<00:28:29.760><c> solutions</c>

00:28:32.630 --> 00:28:32.640 align:start position:0%
 
 

00:28:32.640 --> 00:28:35.669 align:start position:0%
 
the<00:28:33.120><c> grading</c>

00:28:35.669 --> 00:28:35.679 align:start position:0%
the grading
 

00:28:35.679 --> 00:28:39.990 align:start position:0%
the grading
for<00:28:35.840><c> the</c><00:28:35.919><c> course</c><00:28:38.320><c> will</c><00:28:38.480><c> be</c><00:28:38.640><c> mostly</c><00:28:38.960><c> determined</c>

00:28:39.990 --> 00:28:40.000 align:start position:0%
for the course will be mostly determined
 

00:28:40.000 --> 00:28:42.950 align:start position:0%
for the course will be mostly determined
from<00:28:40.159><c> the</c><00:28:40.320><c> labs</c><00:28:40.720><c> this</c><00:28:40.960><c> year</c><00:28:41.520><c> so</c><00:28:42.080><c> 70</c><00:28:42.720><c> of</c><00:28:42.799><c> the</c>

00:28:42.950 --> 00:28:42.960 align:start position:0%
from the labs this year so 70 of the
 

00:28:42.960 --> 00:28:44.070 align:start position:0%
from the labs this year so 70 of the
grade<00:28:43.200><c> will</c><00:28:43.440><c> be</c>

00:28:44.070 --> 00:28:44.080 align:start position:0%
grade will be
 

00:28:44.080 --> 00:28:47.990 align:start position:0%
grade will be
um<00:28:46.559><c> uh</c><00:28:46.799><c> based</c><00:28:47.200><c> on</c>

00:28:47.990 --> 00:28:48.000 align:start position:0%
um uh based on
 

00:28:48.000 --> 00:28:49.750 align:start position:0%
um uh based on
whether<00:28:48.240><c> or</c><00:28:48.320><c> not</c><00:28:48.480><c> that</c><00:28:48.640><c> your</c><00:28:48.960><c> lab</c><00:28:49.200><c> the</c><00:28:49.360><c> lab</c><00:28:49.600><c> you</c>

00:28:49.750 --> 00:28:49.760 align:start position:0%
whether or not that your lab the lab you
 

00:28:49.760 --> 00:28:51.590 align:start position:0%
whether or not that your lab the lab you
submit<00:28:50.320><c> passes</c><00:28:50.720><c> the</c><00:28:50.799><c> tests</c><00:28:51.200><c> and</c><00:28:51.279><c> we</c><00:28:51.440><c> for</c>

00:28:51.590 --> 00:28:51.600 align:start position:0%
submit passes the tests and we for
 

00:28:51.600 --> 00:28:53.590 align:start position:0%
submit passes the tests and we for
grading<00:28:51.919><c> we</c><00:28:52.080><c> run</c><00:28:52.240><c> the</c><00:28:52.399><c> same</c><00:28:52.720><c> tests</c>

00:28:53.590 --> 00:28:53.600 align:start position:0%
grading we run the same tests
 

00:28:53.600 --> 00:28:55.590 align:start position:0%
grading we run the same tests
um<00:28:53.840><c> that</c><00:28:54.000><c> we</c><00:28:54.159><c> supply</c><00:28:54.559><c> you</c><00:28:54.799><c> so</c><00:28:54.960><c> if</c><00:28:55.120><c> your</c><00:28:55.360><c> lab</c>

00:28:55.590 --> 00:28:55.600 align:start position:0%
um that we supply you so if your lab
 

00:28:55.600 --> 00:28:57.590 align:start position:0%
um that we supply you so if your lab
passes<00:28:56.080><c> the</c><00:28:56.480><c> all</c><00:28:56.640><c> the</c><00:28:56.799><c> tests</c><00:28:57.120><c> that</c><00:28:57.279><c> we</c><00:28:57.440><c> give</c>

00:28:57.590 --> 00:28:57.600 align:start position:0%
passes the all the tests that we give
 

00:28:57.600 --> 00:28:59.110 align:start position:0%
passes the all the tests that we give
you<00:28:57.679><c> then</c><00:28:57.840><c> chances</c><00:28:58.240><c> are</c><00:28:58.320><c> you</c><00:28:58.480><c> get</c><00:28:58.640><c> full</c><00:28:58.880><c> credit</c>

00:28:59.110 --> 00:28:59.120 align:start position:0%
you then chances are you get full credit
 

00:28:59.120 --> 00:29:00.389 align:start position:0%
you then chances are you get full credit
for<00:28:59.279><c> the</c><00:28:59.360><c> lab</c>

00:29:00.389 --> 00:29:00.399 align:start position:0%
for the lab
 

00:29:00.399 --> 00:29:03.590 align:start position:0%
for the lab
um<00:29:01.520><c> 20</c><00:29:02.080><c> of</c><00:29:02.159><c> the</c><00:29:02.240><c> grade</c>

00:29:03.590 --> 00:29:03.600 align:start position:0%
um 20 of the grade
 

00:29:03.600 --> 00:29:05.590 align:start position:0%
um 20 of the grade
um<00:29:03.840><c> is</c><00:29:04.000><c> going</c><00:29:04.159><c> to</c><00:29:04.240><c> be</c><00:29:04.399><c> from</c><00:29:04.799><c> lab</c><00:29:05.120><c> check</c><00:29:05.440><c> off</c>

00:29:05.590 --> 00:29:05.600 align:start position:0%
um is going to be from lab check off
 

00:29:05.600 --> 00:29:06.630 align:start position:0%
um is going to be from lab check off
meetings

00:29:06.630 --> 00:29:06.640 align:start position:0%
meetings
 

00:29:06.640 --> 00:29:09.430 align:start position:0%
meetings
uh<00:29:07.360><c> we'll</c><00:29:07.919><c> for</c><00:29:08.080><c> each</c><00:29:08.320><c> of</c><00:29:08.399><c> you</c><00:29:08.640><c> we'll</c><00:29:09.200><c> pick</c><00:29:09.360><c> a</c>

00:29:09.430 --> 00:29:09.440 align:start position:0%
uh we'll for each of you we'll pick a
 

00:29:09.440 --> 00:29:11.269 align:start position:0%
uh we'll for each of you we'll pick a
couple<00:29:09.679><c> of</c><00:29:09.760><c> randomly</c><00:29:10.320><c> selected</c><00:29:10.799><c> labs</c>

00:29:11.269 --> 00:29:11.279 align:start position:0%
couple of randomly selected labs
 

00:29:11.279 --> 00:29:13.350 align:start position:0%
couple of randomly selected labs
and<00:29:11.440><c> one</c><00:29:11.600><c> of</c><00:29:11.679><c> the</c><00:29:11.760><c> teams</c><00:29:12.080><c> will</c><00:29:12.240><c> talk</c><00:29:12.480><c> to</c><00:29:12.559><c> you</c>

00:29:13.350 --> 00:29:13.360 align:start position:0%
and one of the teams will talk to you
 

00:29:13.360 --> 00:29:14.389 align:start position:0%
and one of the teams will talk to you
and<00:29:13.440><c> ask</c><00:29:13.600><c> you</c><00:29:13.760><c> questions</c><00:29:14.080><c> about</c><00:29:14.240><c> your</c>

00:29:14.389 --> 00:29:14.399 align:start position:0%
and ask you questions about your
 

00:29:14.399 --> 00:29:17.430 align:start position:0%
and ask you questions about your
implementation<00:29:14.960><c> just</c><00:29:15.039><c> to</c><00:29:15.120><c> make</c><00:29:15.279><c> sure</c><00:29:15.600><c> that</c>

00:29:17.430 --> 00:29:17.440 align:start position:0%
implementation just to make sure that
 

00:29:17.440 --> 00:29:20.149 align:start position:0%
implementation just to make sure that
you<00:29:17.520><c> really</c><00:29:17.840><c> understand</c><00:29:18.240><c> what's</c><00:29:18.480><c> going</c><00:29:18.720><c> on</c><00:29:20.000><c> so</c>

00:29:20.149 --> 00:29:20.159 align:start position:0%
you really understand what's going on so
 

00:29:20.159 --> 00:29:20.630 align:start position:0%
you really understand what's going on so
this

00:29:20.630 --> 00:29:20.640 align:start position:0%
this
 

00:29:20.640 --> 00:29:23.830 align:start position:0%
this
lab<00:29:20.960><c> check-offs</c>

00:29:23.830 --> 00:29:23.840 align:start position:0%
 
 

00:29:23.840 --> 00:29:27.350 align:start position:0%
 
there's<00:29:24.240><c> um</c><00:29:25.120><c> ten</c><00:29:25.279><c> percent</c><00:29:25.520><c> remaining</c>

00:29:27.350 --> 00:29:27.360 align:start position:0%
there's um ten percent remaining
 

00:29:27.360 --> 00:29:30.549 align:start position:0%
there's um ten percent remaining
there's<00:29:27.600><c> a</c><00:29:27.679><c> question</c><00:29:29.360><c> be</c><00:29:29.840><c> like</c><00:29:30.080><c> a</c>

00:29:30.549 --> 00:29:30.559 align:start position:0%
there's a question be like a
 

00:29:30.559 --> 00:29:33.350 align:start position:0%
there's a question be like a
yes<00:29:30.880><c> or</c><00:29:31.039><c> no</c><00:29:31.760><c> one</c><00:29:32.000><c> or</c><00:29:32.159><c> zero</c><00:29:32.640><c> type</c><00:29:32.880><c> of</c><00:29:32.960><c> thing</c><00:29:33.200><c> or</c>

00:29:33.350 --> 00:29:33.360 align:start position:0%
yes or no one or zero type of thing or
 

00:29:33.360 --> 00:29:35.029 align:start position:0%
yes or no one or zero type of thing or
would<00:29:33.520><c> they</c><00:29:33.679><c> be</c>

00:29:35.029 --> 00:29:35.039 align:start position:0%
would they be
 

00:29:35.039 --> 00:29:38.230 align:start position:0%
would they be
like<00:29:35.279><c> could</c><00:29:35.520><c> someone</c><00:29:37.039><c> get</c><00:29:37.600><c> like</c><00:29:37.840><c> if</c><00:29:37.919><c> they</c>

00:29:38.230 --> 00:29:38.240 align:start position:0%
like could someone get like if they
 

00:29:38.240 --> 00:29:40.389 align:start position:0%
like could someone get like if they
answered<00:29:38.880><c> some</c><00:29:39.039><c> of</c><00:29:39.200><c> the</c><00:29:39.279><c> questions</c><00:29:39.679><c> right</c><00:29:40.000><c> but</c>

00:29:40.389 --> 00:29:40.399 align:start position:0%
answered some of the questions right but
 

00:29:40.399 --> 00:29:41.669 align:start position:0%
answered some of the questions right but
not<00:29:40.640><c> all</c><00:29:40.799><c> the</c><00:29:40.880><c> questions</c><00:29:41.279><c> right</c><00:29:41.440><c> would</c><00:29:41.520><c> they</c>

00:29:41.669 --> 00:29:41.679 align:start position:0%
not all the questions right would they
 

00:29:41.679 --> 00:29:42.070 align:start position:0%
not all the questions right would they
get

00:29:42.070 --> 00:29:42.080 align:start position:0%
get
 

00:29:42.080 --> 00:29:45.269 align:start position:0%
get
in<00:29:42.240><c> between</c><00:29:43.440><c> so</c><00:29:43.600><c> they're</c><00:29:43.760><c> great</c><00:29:44.960><c> you</c><00:29:45.120><c> know</c><00:29:45.200><c> i</c>

00:29:45.269 --> 00:29:45.279 align:start position:0%
in between so they're great you know i
 

00:29:45.279 --> 00:29:47.350 align:start position:0%
in between so they're great you know i
haven't<00:29:45.520><c> thought</c><00:29:45.760><c> this</c><00:29:45.919><c> through</c>

00:29:47.350 --> 00:29:47.360 align:start position:0%
haven't thought this through
 

00:29:47.360 --> 00:29:49.909 align:start position:0%
haven't thought this through
um<00:29:48.559><c> there's</c><00:29:48.720><c> certainly</c><00:29:49.120><c> room</c><00:29:49.360><c> for</c><00:29:49.600><c> partial</c>

00:29:49.909 --> 00:29:49.919 align:start position:0%
um there's certainly room for partial
 

00:29:49.919 --> 00:29:51.430 align:start position:0%
um there's certainly room for partial
credit<00:29:50.320><c> but</c>

00:29:51.430 --> 00:29:51.440 align:start position:0%
credit but
 

00:29:51.440 --> 00:29:53.750 align:start position:0%
credit but
it's<00:29:51.600><c> not</c><00:29:51.840><c> a</c><00:29:52.080><c> it</c><00:29:52.159><c> won't</c><00:29:52.399><c> be</c><00:29:52.480><c> binary</c><00:29:53.360><c> it'll</c>

00:29:53.750 --> 00:29:53.760 align:start position:0%
it's not a it won't be binary it'll
 

00:29:53.760 --> 00:29:54.789 align:start position:0%
it's not a it won't be binary it'll
definitely<00:29:54.080><c> be</c>

00:29:54.789 --> 00:29:54.799 align:start position:0%
definitely be
 

00:29:54.799 --> 00:29:59.110 align:start position:0%
definitely be
you<00:29:54.960><c> can</c><00:29:55.120><c> receive</c><00:29:55.440><c> partial</c><00:29:55.760><c> credit</c><00:29:56.960><c> okay</c>

00:29:59.110 --> 00:29:59.120 align:start position:0%
you can receive partial credit okay
 

00:29:59.120 --> 00:30:01.830 align:start position:0%
you can receive partial credit okay
all right<00:29:59.520><c> um</c><00:30:00.000><c> the</c><00:30:00.080><c> last</c><00:30:00.320><c> 10</c><00:30:00.960><c> is</c><00:30:01.120><c> going</c><00:30:01.279><c> to</c><00:30:01.360><c> be</c>

00:30:01.830 --> 00:30:01.840 align:start position:0%
all right um the last 10 is going to be
 

00:30:01.840 --> 00:30:03.029 align:start position:0%
all right um the last 10 is going to be
driven<00:30:02.159><c> by</c><00:30:02.320><c> the</c><00:30:02.399><c> homework</c>

00:30:03.029 --> 00:30:03.039 align:start position:0%
driven by the homework
 

00:30:03.039 --> 00:30:05.990 align:start position:0%
driven by the homework
and<00:30:03.679><c> participation</c><00:30:04.960><c> during</c><00:30:05.200><c> lecture</c><00:30:05.679><c> and</c><00:30:05.840><c> in</c>

00:30:05.990 --> 00:30:06.000 align:start position:0%
and participation during lecture and in
 

00:30:06.000 --> 00:30:08.950 align:start position:0%
and participation during lecture and in
piazza

00:30:08.950 --> 00:30:08.960 align:start position:0%
 
 

00:30:08.960 --> 00:30:13.190 align:start position:0%
 
there'll<00:30:09.200><c> be</c><00:30:09.360><c> no</c><00:30:09.840><c> exam</c><00:30:10.159><c> or</c><00:30:10.320><c> quizzes</c>

00:30:13.190 --> 00:30:13.200 align:start position:0%
 
 

00:30:13.200 --> 00:30:17.029 align:start position:0%
 
this<00:30:13.440><c> year</c><00:30:15.120><c> um</c><00:30:16.080><c> and</c><00:30:16.159><c> so</c><00:30:16.320><c> what</c><00:30:16.480><c> that</c><00:30:16.640><c> means</c><00:30:16.880><c> is</c>

00:30:17.029 --> 00:30:17.039 align:start position:0%
this year um and so what that means is
 

00:30:17.039 --> 00:30:18.389 align:start position:0%
this year um and so what that means is
that<00:30:17.200><c> most</c><00:30:17.440><c> of</c><00:30:17.520><c> the</c>

00:30:18.389 --> 00:30:18.399 align:start position:0%
that most of the
 

00:30:18.399 --> 00:30:21.909 align:start position:0%
that most of the
you<00:30:18.559><c> know</c><00:30:19.200><c> ninety</c><00:30:19.520><c> percent</c><00:30:20.080><c> of</c><00:30:20.159><c> the</c><00:30:20.880><c> grade</c><00:30:21.360><c> is</c>

00:30:21.909 --> 00:30:21.919 align:start position:0%
you know ninety percent of the grade is
 

00:30:21.919 --> 00:30:23.750 align:start position:0%
you know ninety percent of the grade is
being<00:30:22.080><c> driven</c><00:30:22.320><c> by</c><00:30:22.480><c> the</c><00:30:22.640><c> lab</c><00:30:23.120><c> so</c>

00:30:23.750 --> 00:30:23.760 align:start position:0%
being driven by the lab so
 

00:30:23.760 --> 00:30:25.750 align:start position:0%
being driven by the lab so
you<00:30:23.840><c> know</c><00:30:24.000><c> you</c><00:30:24.159><c> should</c><00:30:25.039><c> spend</c><00:30:25.279><c> a</c><00:30:25.360><c> lot</c><00:30:25.440><c> of</c><00:30:25.520><c> time</c>

00:30:25.750 --> 00:30:25.760 align:start position:0%
you know you should spend a lot of time
 

00:30:25.760 --> 00:30:27.430 align:start position:0%
you know you should spend a lot of time
in<00:30:25.840><c> the</c><00:30:25.919><c> labs</c>

00:30:27.430 --> 00:30:27.440 align:start position:0%
in the labs
 

00:30:27.440 --> 00:30:29.830 align:start position:0%
in the labs
make<00:30:27.600><c> sure</c><00:30:27.840><c> that</c><00:30:28.640><c> you</c><00:30:28.799><c> start</c><00:30:29.039><c> early</c><00:30:29.520><c> and</c><00:30:29.679><c> have</c>

00:30:29.830 --> 00:30:29.840 align:start position:0%
make sure that you start early and have
 

00:30:29.840 --> 00:30:31.269 align:start position:0%
make sure that you start early and have
enough<00:30:30.159><c> time</c><00:30:30.480><c> to</c>

00:30:31.269 --> 00:30:31.279 align:start position:0%
enough time to
 

00:30:31.279 --> 00:30:34.070 align:start position:0%
enough time to
complete<00:30:31.600><c> them</c><00:30:31.840><c> and</c><00:30:33.039><c> work</c><00:30:33.279><c> out</c><00:30:33.440><c> bugs</c><00:30:33.760><c> in</c><00:30:33.840><c> order</c>

00:30:34.070 --> 00:30:34.080 align:start position:0%
complete them and work out bugs in order
 

00:30:34.080 --> 00:30:37.190 align:start position:0%
complete them and work out bugs in order
to<00:30:34.159><c> get</c><00:30:34.399><c> full</c><00:30:34.840><c> credit</c>

00:30:37.190 --> 00:30:37.200 align:start position:0%
to get full credit
 

00:30:37.200 --> 00:30:39.430 align:start position:0%
to get full credit
and<00:30:37.679><c> you</c><00:30:37.760><c> know</c><00:30:38.080><c> as</c><00:30:38.240><c> a</c><00:30:38.320><c> result</c><00:30:38.640><c> of</c><00:30:38.720><c> that</c><00:30:38.799><c> this</c><00:30:38.960><c> is</c>

00:30:39.430 --> 00:30:39.440 align:start position:0%
and you know as a result of that this is
 

00:30:39.440 --> 00:30:41.990 align:start position:0%
and you know as a result of that this is
going<00:30:39.520><c> to</c><00:30:39.600><c> be</c><00:30:39.840><c> a</c><00:30:39.919><c> very</c><00:30:40.240><c> kind</c><00:30:40.399><c> of</c><00:30:40.559><c> hands-on</c>

00:30:41.990 --> 00:30:42.000 align:start position:0%
going to be a very kind of hands-on
 

00:30:42.000 --> 00:30:44.950 align:start position:0%
going to be a very kind of hands-on
software<00:30:42.399><c> oriented</c><00:30:42.960><c> course</c><00:30:44.399><c> or</c><00:30:44.720><c> any</c>

00:30:44.950 --> 00:30:44.960 align:start position:0%
software oriented course or any
 

00:30:44.960 --> 00:30:47.110 align:start position:0%
software oriented course or any
questions<00:30:45.360><c> about</c><00:30:45.760><c> the</c>

00:30:47.110 --> 00:30:47.120 align:start position:0%
questions about the
 

00:30:47.120 --> 00:30:53.669 align:start position:0%
questions about the
machinery<00:30:47.760><c> of</c><00:30:47.840><c> the</c><00:30:48.840><c> course</c>

00:30:53.669 --> 00:30:53.679 align:start position:0%
 
 

00:30:53.679 --> 00:30:56.549 align:start position:0%
 
uh<00:30:54.080><c> we've</c><00:30:54.240><c> got</c><00:30:54.480><c> a</c><00:30:54.559><c> couple</c><00:30:54.880><c> questions</c><00:30:55.360><c> in</c><00:30:55.600><c> chat</c>

00:30:56.549 --> 00:30:56.559 align:start position:0%
uh we've got a couple questions in chat
 

00:30:56.559 --> 00:30:59.029 align:start position:0%
uh we've got a couple questions in chat
so<00:30:56.720><c> the</c><00:30:56.880><c> first</c><00:30:57.279><c> is</c><00:30:57.360><c> a</c><00:30:57.440><c> logistical</c><00:30:58.080><c> question</c>

00:30:59.029 --> 00:30:59.039 align:start position:0%
so the first is a logistical question
 

00:30:59.039 --> 00:31:01.350 align:start position:0%
so the first is a logistical question
currently<00:30:59.519><c> 6s081</c><00:31:00.399><c> isn't</c><00:31:00.559><c> listed</c><00:31:00.880><c> as</c><00:31:01.039><c> usable</c>

00:31:01.350 --> 00:31:01.360 align:start position:0%
currently 6s081 isn't listed as usable
 

00:31:01.360 --> 00:31:03.830 align:start position:0%
currently 6s081 isn't listed as usable
for<00:31:01.519><c> the</c><00:31:01.600><c> systems</c><00:31:02.000><c> concentration</c><00:31:02.640><c> in</c><00:31:02.720><c> the</c>

00:31:03.830 --> 00:31:03.840 align:start position:0%
for the systems concentration in the
 

00:31:03.840 --> 00:31:05.350 align:start position:0%
for the systems concentration in the
are<00:31:04.000><c> there</c><00:31:04.240><c> plans</c><00:31:04.640><c> added</c><00:31:04.799><c> to</c><00:31:04.960><c> the</c><00:31:05.039><c> list</c><00:31:05.279><c> of</c>

00:31:05.350 --> 00:31:05.360 align:start position:0%
are there plans added to the list of
 

00:31:05.360 --> 00:31:07.509 align:start position:0%
are there plans added to the list of
classes<00:31:05.760><c> later</c><00:31:06.159><c> i</c><00:31:06.240><c> think</c><00:31:06.480><c> for</c><00:31:06.640><c> that</c>

00:31:07.509 --> 00:31:07.519 align:start position:0%
classes later i think for that
 

00:31:07.519 --> 00:31:10.950 align:start position:0%
classes later i think for that
because<00:31:07.840><c> it's</c><00:31:08.240><c> not</c><00:31:08.559><c> an</c><00:31:08.799><c> aags</c><00:31:09.679><c> it's</c><00:31:09.919><c> an</c><00:31:10.159><c> aus</c>

00:31:10.950 --> 00:31:10.960 align:start position:0%
because it's not an aags it's an aus
 

00:31:10.960 --> 00:31:12.950 align:start position:0%
because it's not an aags it's an aus
it<00:31:11.120><c> can't</c><00:31:11.360><c> be</c><00:31:11.760><c> used</c><00:31:12.080><c> to</c><00:31:12.240><c> fulfill</c><00:31:12.640><c> mn</c>

00:31:12.950 --> 00:31:12.960 align:start position:0%
it can't be used to fulfill mn
 

00:31:12.960 --> 00:31:14.389 align:start position:0%
it can't be used to fulfill mn
requirements<00:31:13.519><c> as</c><00:31:13.600><c> it's</c><00:31:13.760><c> not</c><00:31:13.919><c> a</c><00:31:14.000><c> graduate</c>

00:31:14.389 --> 00:31:14.399 align:start position:0%
requirements as it's not a graduate
 

00:31:14.399 --> 00:31:14.789 align:start position:0%
requirements as it's not a graduate
level

00:31:14.789 --> 00:31:14.799 align:start position:0%
level
 

00:31:14.799 --> 00:31:19.509 align:start position:0%
level
class<00:31:16.840><c> but</c>

00:31:19.509 --> 00:31:19.519 align:start position:0%
class but
 

00:31:19.519 --> 00:31:21.990 align:start position:0%
class but
um<00:31:20.480><c> and</c><00:31:20.559><c> then</c><00:31:20.720><c> we</c><00:31:20.880><c> have</c><00:31:21.200><c> is</c><00:31:21.360><c> the</c><00:31:21.519><c> only</c><00:31:21.679><c> homework</c>

00:31:21.990 --> 00:31:22.000 align:start position:0%
um and then we have is the only homework
 

00:31:22.000 --> 00:31:23.350 align:start position:0%
um and then we have is the only homework
to<00:31:22.159><c> submit</c><00:31:22.559><c> questions</c><00:31:22.960><c> looking</c><00:31:23.200><c> at</c><00:31:23.279><c> the</c>

00:31:23.350 --> 00:31:23.360 align:start position:0%
to submit questions looking at the
 

00:31:23.360 --> 00:31:28.149 align:start position:0%
to submit questions looking at the
calendar<00:31:24.000><c> that</c><00:31:24.159><c> appears</c><00:31:24.480><c> to</c><00:31:24.559><c> be</c><00:31:24.720><c> the</c><00:31:24.799><c> case</c>

00:31:28.149 --> 00:31:28.159 align:start position:0%
 
 

00:31:28.159 --> 00:31:31.350 align:start position:0%
 
unless<00:31:28.559><c> i'm</c><00:31:28.640><c> forgetting</c><00:31:29.039><c> something</c><00:31:31.120><c> i</c><00:31:31.200><c> think</c>

00:31:31.350 --> 00:31:31.360 align:start position:0%
unless i'm forgetting something i think
 

00:31:31.360 --> 00:31:32.070 align:start position:0%
unless i'm forgetting something i think
that's<00:31:31.600><c> the</c><00:31:31.679><c> case</c>

00:31:32.070 --> 00:31:32.080 align:start position:0%
that's the case
 

00:31:32.080 --> 00:31:35.590 align:start position:0%
that's the case
yes<00:31:35.039><c> so</c>

00:31:35.590 --> 00:31:35.600 align:start position:0%
yes so
 

00:31:35.600 --> 00:31:38.710 align:start position:0%
yes so
have<00:31:36.799><c> uh</c><00:31:37.120><c> are</c><00:31:37.200><c> there</c><00:31:37.360><c> gonna</c><00:31:37.600><c> be</c><00:31:38.080><c> cutoffs</c><00:31:38.559><c> for</c>

00:31:38.710 --> 00:31:38.720 align:start position:0%
have uh are there gonna be cutoffs for
 

00:31:38.720 --> 00:31:40.630 align:start position:0%
have uh are there gonna be cutoffs for
grades<00:31:39.120><c> like</c><00:31:39.360><c> x</c><00:31:39.600><c> percent</c><00:31:40.000><c> gets</c><00:31:40.240><c> an</c><00:31:40.399><c> a</c>

00:31:40.630 --> 00:31:40.640 align:start position:0%
grades like x percent gets an a
 

00:31:40.640 --> 00:31:43.909 align:start position:0%
grades like x percent gets an a
y<00:31:40.799><c> percent</c><00:31:41.200><c> gets</c><00:31:41.440><c> a</c><00:31:41.519><c> b</c><00:31:41.760><c> etc</c>

00:31:43.909 --> 00:31:43.919 align:start position:0%
y percent gets a b etc
 

00:31:43.919 --> 00:31:48.149 align:start position:0%
y percent gets a b etc
no<00:31:44.240><c> no</c><00:31:45.039><c> um</c>

00:31:48.149 --> 00:31:48.159 align:start position:0%
 
 

00:31:48.159 --> 00:31:51.269 align:start position:0%
 
you<00:31:48.240><c> know</c><00:31:48.320><c> we're</c><00:31:48.480><c> going</c><00:31:48.559><c> to</c><00:31:48.720><c> try</c><00:31:48.880><c> to</c>

00:31:51.269 --> 00:31:51.279 align:start position:0%
 
 

00:31:51.279 --> 00:31:54.470 align:start position:0%
 
free<00:31:51.600><c> student</c><00:31:51.919><c> estimate</c><00:31:53.360><c> um</c>

00:31:54.470 --> 00:31:54.480 align:start position:0%
free student estimate um
 

00:31:54.480 --> 00:31:56.870 align:start position:0%
free student estimate um
our<00:31:54.640><c> impression</c><00:31:55.039><c> of</c><00:31:55.120><c> how</c><00:31:55.440><c> well</c><00:31:56.640><c> you've</c>

00:31:56.870 --> 00:31:56.880 align:start position:0%
our impression of how well you've
 

00:31:56.880 --> 00:31:59.190 align:start position:0%
our impression of how well you've
understood<00:31:57.200><c> the</c><00:31:57.279><c> material</c>

00:31:59.190 --> 00:31:59.200 align:start position:0%
understood the material
 

00:31:59.200 --> 00:32:00.470 align:start position:0%
understood the material
and<00:31:59.360><c> assign</c><00:31:59.600><c> a</c><00:31:59.679><c> grade</c><00:31:59.919><c> based</c><00:32:00.159><c> on</c><00:32:00.240><c> that</c><00:32:00.399><c> so</c>

00:32:00.470 --> 00:32:00.480 align:start position:0%
and assign a grade based on that so
 

00:32:00.480 --> 00:32:07.909 align:start position:0%
and assign a grade based on that so
there's<00:32:00.720><c> there's</c><00:32:00.960><c> no</c><00:32:01.200><c> predetermined</c><00:32:02.080><c> cutoffs</c>

00:32:07.909 --> 00:32:07.919 align:start position:0%
 
 

00:32:07.919 --> 00:32:13.590 align:start position:0%
 
all<00:32:08.080><c> right</c><00:32:08.880><c> anything</c><00:32:09.200><c> else</c>

00:32:13.590 --> 00:32:13.600 align:start position:0%
 
 

00:32:13.600 --> 00:32:16.789 align:start position:0%
 
all<00:32:13.760><c> right</c><00:32:14.720><c> just</c><00:32:15.039><c> real</c><00:32:15.279><c> quick</c><00:32:15.840><c> for</c><00:32:16.240><c> folks</c>

00:32:16.789 --> 00:32:16.799 align:start position:0%
all right just real quick for folks
 

00:32:16.799 --> 00:32:21.029 align:start position:0%
all right just real quick for folks
in<00:32:16.960><c> the</c><00:32:17.120><c> chat</c><00:32:17.519><c> uh</c><00:32:18.480><c> asking</c><00:32:18.799><c> about</c><00:32:19.360><c> the</c>

00:32:21.029 --> 00:32:21.039 align:start position:0%
in the chat uh asking about the
 

00:32:21.039 --> 00:32:23.190 align:start position:0%
in the chat uh asking about the
concentration<00:32:21.760><c> requirement</c><00:32:22.799><c> i'm</c><00:32:22.960><c> not</c><00:32:23.120><c> a</c>

00:32:23.190 --> 00:32:23.200 align:start position:0%
concentration requirement i'm not a
 

00:32:23.200 --> 00:32:24.470 align:start position:0%
concentration requirement i'm not a
hundred<00:32:23.440><c> percent</c><00:32:23.840><c> certain</c>

00:32:24.470 --> 00:32:24.480 align:start position:0%
hundred percent certain
 

00:32:24.480 --> 00:32:27.269 align:start position:0%
hundred percent certain
uh<00:32:24.720><c> but</c><00:32:24.960><c> six</c><00:32:25.200><c> soa</c><00:32:25.600><c> one</c><00:32:26.000><c> is</c><00:32:26.240><c> not</c><00:32:26.799><c> it's</c><00:32:27.039><c> like</c><00:32:27.200><c> a</c>

00:32:27.269 --> 00:32:27.279 align:start position:0%
uh but six soa one is not it's like a
 

00:32:27.279 --> 00:32:28.070 align:start position:0%
uh but six soa one is not it's like a
temporary<00:32:27.760><c> number</c>

00:32:28.070 --> 00:32:28.080 align:start position:0%
temporary number
 

00:32:28.080 --> 00:32:29.909 align:start position:0%
temporary number
before<00:32:28.399><c> the</c><00:32:28.480><c> class</c><00:32:28.799><c> gets</c><00:32:29.039><c> this</c><00:32:29.279><c> official</c><00:32:29.760><c> one</c>

00:32:29.909 --> 00:32:29.919 align:start position:0%
before the class gets this official one
 

00:32:29.919 --> 00:32:31.669 align:start position:0%
before the class gets this official one
so<00:32:30.080><c> it</c><00:32:30.320><c> certainly</c><00:32:30.720><c> won't</c><00:32:30.960><c> be</c>

00:32:31.669 --> 00:32:31.679 align:start position:0%
so it certainly won't be
 

00:32:31.679 --> 00:32:34.070 align:start position:0%
so it certainly won't be
uh<00:32:32.000><c> listed</c><00:32:32.399><c> anywhere</c><00:32:33.279><c> if</c><00:32:33.440><c> you</c><00:32:33.679><c> needed</c><00:32:33.919><c> to</c>

00:32:34.070 --> 00:32:34.080 align:start position:0%
uh listed anywhere if you needed to
 

00:32:34.080 --> 00:32:35.430 align:start position:0%
uh listed anywhere if you needed to
fulfill<00:32:34.399><c> a</c><00:32:34.480><c> concentration</c><00:32:35.120><c> i</c><00:32:35.200><c> think</c><00:32:35.279><c> your</c>

00:32:35.430 --> 00:32:35.440 align:start position:0%
fulfill a concentration i think your
 

00:32:35.440 --> 00:32:36.710 align:start position:0%
fulfill a concentration i think your
best<00:32:35.679><c> bet</c><00:32:35.919><c> is</c><00:32:36.000><c> probably</c><00:32:36.240><c> to</c><00:32:36.320><c> fill</c><00:32:36.480><c> out</c><00:32:36.640><c> a</c>

00:32:36.710 --> 00:32:36.720 align:start position:0%
best bet is probably to fill out a
 

00:32:36.720 --> 00:32:37.350 align:start position:0%
best bet is probably to fill out a
petition

00:32:37.350 --> 00:32:37.360 align:start position:0%
petition
 

00:32:37.360 --> 00:32:39.509 align:start position:0%
petition
or<00:32:37.679><c> to</c><00:32:38.080><c> email</c><00:32:38.640><c> somebody</c><00:32:38.880><c> like</c><00:32:39.039><c> katrina</c>

00:32:39.509 --> 00:32:39.519 align:start position:0%
or to email somebody like katrina
 

00:32:39.519 --> 00:32:40.710 align:start position:0%
or to email somebody like katrina
lakerts

00:32:40.710 --> 00:32:40.720 align:start position:0%
lakerts
 

00:32:40.720 --> 00:32:43.830 align:start position:0%
lakerts
to<00:32:40.880><c> see</c><00:32:41.600><c> what</c><00:32:41.760><c> the</c><00:32:41.919><c> status</c><00:32:42.399><c> is</c><00:32:43.360><c> we</c><00:32:43.519><c> don't</c>

00:32:43.830 --> 00:32:43.840 align:start position:0%
to see what the status is we don't
 

00:32:43.840 --> 00:32:45.430 align:start position:0%
to see what the status is we don't
control

00:32:45.430 --> 00:32:45.440 align:start position:0%
control
 

00:32:45.440 --> 00:32:48.149 align:start position:0%
control
you<00:32:45.600><c> know</c><00:32:45.919><c> what</c><00:32:46.480><c> what</c><00:32:46.720><c> classes</c><00:32:47.360><c> fill</c><00:32:47.919><c> these</c>

00:32:48.149 --> 00:32:48.159 align:start position:0%
you know what what classes fill these
 

00:32:48.159 --> 00:32:49.190 align:start position:0%
you know what what classes fill these
kind<00:32:48.320><c> of</c><00:32:48.399><c> requirements</c>

00:32:49.190 --> 00:32:49.200 align:start position:0%
kind of requirements
 

00:32:49.200 --> 00:32:51.990 align:start position:0%
kind of requirements
unfortunately<00:32:51.200><c> and</c><00:32:51.360><c> for</c><00:32:51.519><c> what</c><00:32:51.679><c> language</c>

00:32:51.990 --> 00:32:52.000 align:start position:0%
unfortunately and for what language
 

00:32:52.000 --> 00:32:58.710 align:start position:0%
unfortunately and for what language
we'll<00:32:52.240><c> be</c><00:32:52.320><c> using</c><00:32:52.559><c> the</c><00:32:52.640><c> class</c><00:32:52.880><c> will</c><00:32:52.960><c> be</c><00:32:53.120><c> in</c><00:32:54.840><c> c</c>

00:32:58.710 --> 00:32:58.720 align:start position:0%
 
 

00:32:58.720 --> 00:33:02.389 align:start position:0%
 
all<00:32:58.799><c> right</c><00:32:59.600><c> um</c>

00:33:02.389 --> 00:33:02.399 align:start position:0%
 
 

00:33:02.399 --> 00:33:03.990 align:start position:0%
 
all<00:33:02.559><c> right</c><00:33:03.039><c> for</c><00:33:03.200><c> the</c><00:33:03.279><c> rest</c><00:33:03.440><c> of</c><00:33:03.519><c> the</c><00:33:03.600><c> lecture</c><00:33:03.840><c> i</c>

00:33:03.990 --> 00:33:04.000 align:start position:0%
all right for the rest of the lecture i
 

00:33:04.000 --> 00:33:06.149 align:start position:0%
all right for the rest of the lecture i
want<00:33:04.159><c> to</c><00:33:04.399><c> uh</c><00:33:04.640><c> talk</c><00:33:04.880><c> about</c><00:33:05.360><c> how</c>

00:33:06.149 --> 00:33:06.159 align:start position:0%
want to uh talk about how
 

00:33:06.159 --> 00:33:08.830 align:start position:0%
want to uh talk about how
um<00:33:06.640><c> house</c><00:33:06.960><c> what</c><00:33:07.120><c> system</c><00:33:07.440><c> calls</c><00:33:07.679><c> look</c><00:33:07.919><c> like</c><00:33:08.559><c> to</c>

00:33:08.830 --> 00:33:08.840 align:start position:0%
um house what system calls look like to
 

00:33:08.840 --> 00:33:11.269 align:start position:0%
um house what system calls look like to
applications

00:33:11.269 --> 00:33:11.279 align:start position:0%
applications
 

00:33:11.279 --> 00:33:13.750 align:start position:0%
applications
and<00:33:11.760><c> you</c><00:33:11.840><c> know</c><00:33:12.240><c> since</c><00:33:12.559><c> the</c><00:33:12.960><c> system</c><00:33:13.279><c> calls</c><00:33:13.600><c> are</c>

00:33:13.750 --> 00:33:13.760 align:start position:0%
and you know since the system calls are
 

00:33:13.760 --> 00:33:14.470 align:start position:0%
and you know since the system calls are
the

00:33:14.470 --> 00:33:14.480 align:start position:0%
the
 

00:33:14.480 --> 00:33:16.549 align:start position:0%
the
interface<00:33:15.200><c> to</c><00:33:15.360><c> the</c><00:33:15.519><c> services</c><00:33:16.159><c> that</c><00:33:16.320><c> the</c>

00:33:16.549 --> 00:33:16.559 align:start position:0%
interface to the services that the
 

00:33:16.559 --> 00:33:18.149 align:start position:0%
interface to the services that the
operating<00:33:16.960><c> system</c><00:33:17.200><c> provides</c><00:33:17.760><c> it</c>

00:33:18.149 --> 00:33:18.159 align:start position:0%
operating system provides it
 

00:33:18.159 --> 00:33:19.750 align:start position:0%
operating system provides it
it's<00:33:18.320><c> actually</c><00:33:18.640><c> pretty</c><00:33:18.880><c> important</c><00:33:19.600><c> what</c>

00:33:19.750 --> 00:33:19.760 align:start position:0%
it's actually pretty important what
 

00:33:19.760 --> 00:33:20.950 align:start position:0%
it's actually pretty important what
those<00:33:20.000><c> system</c><00:33:20.240><c> files</c><00:33:20.480><c> look</c><00:33:20.640><c> like</c><00:33:20.799><c> what</c>

00:33:20.950 --> 00:33:20.960 align:start position:0%
those system files look like what
 

00:33:20.960 --> 00:33:23.350 align:start position:0%
those system files look like what
applications<00:33:21.440><c> expect</c><00:33:21.760><c> from</c><00:33:22.000><c> system</c><00:33:22.320><c> calls</c>

00:33:23.350 --> 00:33:23.360 align:start position:0%
applications expect from system calls
 

00:33:23.360 --> 00:33:25.029 align:start position:0%
applications expect from system calls
and<00:33:23.440><c> how</c><00:33:23.600><c> they</c><00:33:23.840><c> behave</c><00:33:24.240><c> so</c><00:33:24.559><c> it's</c><00:33:24.799><c> sort</c><00:33:24.960><c> of</c>

00:33:25.029 --> 00:33:25.039 align:start position:0%
and how they behave so it's sort of
 

00:33:25.039 --> 00:33:26.549 align:start position:0%
and how they behave so it's sort of
worth<00:33:25.360><c> understanding</c><00:33:25.919><c> what</c><00:33:26.080><c> the</c><00:33:26.159><c> interface</c>

00:33:26.549 --> 00:33:26.559 align:start position:0%
worth understanding what the interface
 

00:33:26.559 --> 00:33:29.590 align:start position:0%
worth understanding what the interface
looks<00:33:26.799><c> like</c>

00:33:29.590 --> 00:33:29.600 align:start position:0%
 
 

00:33:29.600 --> 00:33:31.269 align:start position:0%
 
you'll<00:33:29.840><c> be</c><00:33:30.000><c> using</c><00:33:30.320><c> the</c><00:33:30.399><c> system</c><00:33:30.720><c> calls</c><00:33:30.960><c> we</c><00:33:31.120><c> talk</c>

00:33:31.269 --> 00:33:31.279 align:start position:0%
you'll be using the system calls we talk
 

00:33:31.279 --> 00:33:33.350 align:start position:0%
you'll be using the system calls we talk
about<00:33:31.519><c> in</c><00:33:31.600><c> the</c><00:33:31.679><c> first</c><00:33:32.000><c> lab</c>

00:33:33.350 --> 00:33:33.360 align:start position:0%
about in the first lab
 

00:33:33.360 --> 00:33:36.149 align:start position:0%
about in the first lab
and<00:33:34.159><c> extending</c><00:33:34.799><c> and</c><00:33:35.360><c> improving</c><00:33:35.840><c> the</c>

00:33:36.149 --> 00:33:36.159 align:start position:0%
and extending and improving the
 

00:33:36.159 --> 00:33:37.110 align:start position:0%
and extending and improving the
implementation

00:33:37.110 --> 00:33:37.120 align:start position:0%
implementation
 

00:33:37.120 --> 00:33:38.710 align:start position:0%
implementation
internal<00:33:37.600><c> implementation</c><00:33:38.159><c> of</c><00:33:38.240><c> these</c><00:33:38.399><c> system</c>

00:33:38.710 --> 00:33:38.720 align:start position:0%
internal implementation of these system
 

00:33:38.720 --> 00:33:41.029 align:start position:0%
internal implementation of these system
calls<00:33:39.039><c> in</c><00:33:39.279><c> subsequent</c><00:33:39.760><c> labs</c>

00:33:41.029 --> 00:33:41.039 align:start position:0%
calls in subsequent labs
 

00:33:41.039 --> 00:33:43.509 align:start position:0%
calls in subsequent labs
what<00:33:41.200><c> i'm</c><00:33:41.279><c> going</c><00:33:41.440><c> to</c><00:33:41.519><c> do</c><00:33:41.840><c> is</c><00:33:42.559><c> show</c><00:33:42.799><c> some</c><00:33:43.120><c> simple</c>

00:33:43.509 --> 00:33:43.519 align:start position:0%
what i'm going to do is show some simple
 

00:33:43.519 --> 00:33:44.470 align:start position:0%
what i'm going to do is show some simple
examples

00:33:44.470 --> 00:33:44.480 align:start position:0%
examples
 

00:33:44.480 --> 00:33:48.070 align:start position:0%
examples
of<00:33:44.960><c> little</c><00:33:45.279><c> programs</c>

00:33:48.070 --> 00:33:48.080 align:start position:0%
 
 

00:33:48.080 --> 00:33:51.669 align:start position:0%
 
that<00:33:48.720><c> call</c><00:33:49.600><c> system</c><00:33:50.000><c> calls</c><00:33:51.039><c> and</c><00:33:51.120><c> then</c><00:33:51.279><c> i'll</c><00:33:51.440><c> run</c>

00:33:51.669 --> 00:33:51.679 align:start position:0%
that call system calls and then i'll run
 

00:33:51.679 --> 00:33:51.990 align:start position:0%
that call system calls and then i'll run
them

00:33:51.990 --> 00:33:52.000 align:start position:0%
them
 

00:33:52.000 --> 00:33:55.509 align:start position:0%
them
and<00:33:52.240><c> and</c><00:33:52.480><c> next</c><00:33:52.720><c> v6</c><00:33:53.200><c> for</c><00:33:53.360><c> you</c><00:33:54.559><c> um</c>

00:33:55.509 --> 00:33:55.519 align:start position:0%
and and next v6 for you um
 

00:33:55.519 --> 00:33:58.710 align:start position:0%
and and next v6 for you um
i'm<00:33:55.600><c> going</c><00:33:55.760><c> to</c><00:33:55.840><c> run</c><00:33:56.080><c> them</c><00:33:56.240><c> the</c><00:33:56.399><c> xv6</c><00:33:57.039><c> is</c><00:33:57.200><c> a</c><00:33:58.480><c> it's</c>

00:33:58.710 --> 00:33:58.720 align:start position:0%
i'm going to run them the xv6 is a it's
 

00:33:58.720 --> 00:33:59.430 align:start position:0%
i'm going to run them the xv6 is a it's
a<00:33:58.880><c> unix</c>

00:33:59.430 --> 00:33:59.440 align:start position:0%
a unix
 

00:33:59.440 --> 00:34:01.590 align:start position:0%
a unix
a<00:33:59.600><c> simplified</c><00:34:00.080><c> unix-like</c><00:34:00.799><c> operating</c><00:34:01.200><c> system</c>

00:34:01.590 --> 00:34:01.600 align:start position:0%
a simplified unix-like operating system
 

00:34:01.600 --> 00:34:02.950 align:start position:0%
a simplified unix-like operating system
unix<00:34:02.000><c> is</c><00:34:02.159><c> a</c>

00:34:02.950 --> 00:34:02.960 align:start position:0%
unix is a
 

00:34:02.960 --> 00:34:06.470 align:start position:0%
unix is a
old<00:34:03.360><c> operating</c><00:34:03.679><c> system</c><00:34:05.840><c> sort</c><00:34:06.000><c> of</c><00:34:06.159><c> at</c><00:34:06.240><c> least</c>

00:34:06.470 --> 00:34:06.480 align:start position:0%
old operating system sort of at least
 

00:34:06.480 --> 00:34:08.069 align:start position:0%
old operating system sort of at least
intellectual<00:34:06.960><c> basis</c><00:34:07.440><c> for</c><00:34:07.679><c> many</c>

00:34:08.069 --> 00:34:08.079 align:start position:0%
intellectual basis for many
 

00:34:08.079 --> 00:34:09.589 align:start position:0%
intellectual basis for many
present<00:34:08.320><c> day</c><00:34:08.560><c> operating</c><00:34:08.879><c> systems</c><00:34:09.200><c> such</c><00:34:09.440><c> as</c>

00:34:09.589 --> 00:34:09.599 align:start position:0%
present day operating systems such as
 

00:34:09.599 --> 00:34:11.349 align:start position:0%
present day operating systems such as
linux<00:34:10.159><c> and</c><00:34:10.399><c> os</c><00:34:10.800><c> x</c>

00:34:11.349 --> 00:34:11.359 align:start position:0%
linux and os x
 

00:34:11.359 --> 00:34:14.550 align:start position:0%
linux and os x
so<00:34:11.520><c> it's</c><00:34:11.679><c> in</c><00:34:11.839><c> very</c><00:34:12.079><c> common</c><00:34:12.399><c> use</c>

00:34:14.550 --> 00:34:14.560 align:start position:0%
so it's in very common use
 

00:34:14.560 --> 00:34:18.069 align:start position:0%
so it's in very common use
xv6<00:34:16.720><c> our</c><00:34:16.960><c> teaching</c><00:34:17.280><c> operating</c><00:34:17.679><c> system</c><00:34:18.000><c> is</c>

00:34:18.069 --> 00:34:18.079 align:start position:0%
xv6 our teaching operating system is
 

00:34:18.079 --> 00:34:19.750 align:start position:0%
xv6 our teaching operating system is
much<00:34:18.320><c> simpler</c>

00:34:19.750 --> 00:34:19.760 align:start position:0%
much simpler
 

00:34:19.760 --> 00:34:22.230 align:start position:0%
much simpler
it's<00:34:19.839><c> sort</c><00:34:20.000><c> of</c><00:34:20.159><c> inspired</c><00:34:20.720><c> by</c><00:34:20.960><c> unix</c><00:34:21.520><c> and</c><00:34:21.679><c> has</c>

00:34:22.230 --> 00:34:22.240 align:start position:0%
it's sort of inspired by unix and has
 

00:34:22.240 --> 00:34:23.750 align:start position:0%
it's sort of inspired by unix and has
the<00:34:22.399><c> same</c><00:34:22.560><c> overall</c><00:34:22.960><c> structure</c><00:34:23.280><c> but</c><00:34:23.520><c> is</c>

00:34:23.750 --> 00:34:23.760 align:start position:0%
the same overall structure but is
 

00:34:23.760 --> 00:34:26.950 align:start position:0%
the same overall structure but is
dramatically<00:34:24.480><c> simpler</c><00:34:25.359><c> than</c><00:34:25.599><c> any</c><00:34:25.919><c> real</c><00:34:26.480><c> unix</c>

00:34:26.950 --> 00:34:26.960 align:start position:0%
dramatically simpler than any real unix
 

00:34:26.960 --> 00:34:30.629 align:start position:0%
dramatically simpler than any real unix
operating<00:34:27.440><c> system</c>

00:34:30.629 --> 00:34:30.639 align:start position:0%
 
 

00:34:30.639 --> 00:34:33.829 align:start position:0%
 
and<00:34:30.800><c> it's</c><00:34:30.960><c> simple</c><00:34:31.200><c> enough</c><00:34:31.440><c> that</c><00:34:32.000><c> hopefully</c><00:34:33.119><c> um</c>

00:34:33.829 --> 00:34:33.839 align:start position:0%
and it's simple enough that hopefully um
 

00:34:33.839 --> 00:34:34.710 align:start position:0%
and it's simple enough that hopefully um
you<00:34:33.919><c> know</c>

00:34:34.710 --> 00:34:34.720 align:start position:0%
you know
 

00:34:34.720 --> 00:34:36.550 align:start position:0%
you know
it<00:34:34.800><c> would</c><00:34:35.040><c> be</c><00:34:35.440><c> relatively</c><00:34:35.919><c> straightforward</c>

00:34:36.550 --> 00:34:36.560 align:start position:0%
it would be relatively straightforward
 

00:34:36.560 --> 00:34:38.550 align:start position:0%
it would be relatively straightforward
for<00:34:36.639><c> you</c><00:34:36.720><c> to</c><00:34:36.960><c> read</c><00:34:37.280><c> all</c><00:34:37.440><c> the</c><00:34:37.599><c> source</c><00:34:37.919><c> code</c>

00:34:38.550 --> 00:34:38.560 align:start position:0%
for you to read all the source code
 

00:34:38.560 --> 00:34:41.109 align:start position:0%
for you to read all the source code
as<00:34:38.720><c> well</c><00:34:38.879><c> as</c><00:34:39.040><c> read</c><00:34:39.200><c> the</c><00:34:39.359><c> book</c><00:34:40.000><c> um</c><00:34:40.720><c> in</c><00:34:40.879><c> a</c><00:34:40.960><c> couple</c>

00:34:41.109 --> 00:34:41.119 align:start position:0%
as well as read the book um in a couple
 

00:34:41.119 --> 00:34:42.629 align:start position:0%
as well as read the book um in a couple
of<00:34:41.280><c> weeks</c><00:34:41.520><c> certainly</c><00:34:41.839><c> during</c><00:34:42.079><c> the</c><00:34:42.159><c> semester</c>

00:34:42.629 --> 00:34:42.639 align:start position:0%
of weeks certainly during the semester
 

00:34:42.639 --> 00:34:43.589 align:start position:0%
of weeks certainly during the semester
in<00:34:42.800><c> order</c><00:34:43.040><c> to</c>

00:34:43.589 --> 00:34:43.599 align:start position:0%
in order to
 

00:34:43.599 --> 00:34:45.510 align:start position:0%
in order to
kind<00:34:43.760><c> of</c><00:34:43.919><c> understand</c><00:34:44.399><c> all</c><00:34:44.560><c> of</c><00:34:44.720><c> what</c><00:34:44.960><c> happens</c>

00:34:45.510 --> 00:34:45.520 align:start position:0%
kind of understand all of what happens
 

00:34:45.520 --> 00:34:49.589 align:start position:0%
kind of understand all of what happens
inside<00:34:46.079><c> xv6</c>

00:34:49.589 --> 00:34:49.599 align:start position:0%
 
 

00:34:49.599 --> 00:34:53.109 align:start position:0%
 
x86<00:34:50.240><c> runs</c><00:34:50.639><c> on</c><00:34:50.720><c> the</c><00:34:50.879><c> risc-5</c><00:34:52.159><c> processor</c>

00:34:53.109 --> 00:34:53.119 align:start position:0%
x86 runs on the risc-5 processor
 

00:34:53.119 --> 00:34:55.430 align:start position:0%
x86 runs on the risc-5 processor
risc-5<00:34:53.679><c> microprocessor</c><00:34:54.879><c> and</c><00:34:54.960><c> this</c><00:34:55.200><c> is</c><00:34:55.280><c> the</c>

00:34:55.430 --> 00:34:55.440 align:start position:0%
risc-5 microprocessor and this is the
 

00:34:55.440 --> 00:34:57.589 align:start position:0%
risc-5 microprocessor and this is the
same<00:34:55.760><c> microprocessor</c><00:34:56.639><c> that's</c><00:34:56.879><c> the</c><00:34:57.119><c> focus</c><00:34:57.440><c> of</c>

00:34:57.589 --> 00:34:57.599 align:start position:0%
same microprocessor that's the focus of
 

00:34:57.599 --> 00:34:59.910 align:start position:0%
same microprocessor that's the focus of
recent<00:34:58.079><c> 6004</c>

00:34:59.910 --> 00:34:59.920 align:start position:0%
recent 6004
 

00:34:59.920 --> 00:35:02.950 align:start position:0%
recent 6004
so<00:35:00.240><c> many</c><00:35:00.400><c> of</c><00:35:00.560><c> you</c><00:35:00.640><c> may</c><00:35:00.880><c> actually</c><00:35:02.480><c> know</c><00:35:02.720><c> quite</c><00:35:02.880><c> a</c>

00:35:02.950 --> 00:35:02.960 align:start position:0%
so many of you may actually know quite a
 

00:35:02.960 --> 00:35:06.630 align:start position:0%
so many of you may actually know quite a
bit<00:35:03.119><c> about</c><00:35:03.359><c> the</c><00:35:03.440><c> risk</c><00:35:03.760><c> 5</c><00:35:04.079><c> instruction</c><00:35:04.640><c> set</c>

00:35:06.630 --> 00:35:06.640 align:start position:0%
bit about the risk 5 instruction set
 

00:35:06.640 --> 00:35:09.430 align:start position:0%
bit about the risk 5 instruction set
in<00:35:06.800><c> theory</c><00:35:07.119><c> you</c><00:35:07.280><c> could</c><00:35:07.440><c> run</c><00:35:07.760><c> xv6</c><00:35:08.720><c> on</c><00:35:08.880><c> top</c><00:35:09.119><c> of</c><00:35:09.280><c> a</c>

00:35:09.430 --> 00:35:09.440 align:start position:0%
in theory you could run xv6 on top of a
 

00:35:09.440 --> 00:35:11.430 align:start position:0%
in theory you could run xv6 on top of a
risk<00:35:09.680><c> 5</c><00:35:10.000><c> computer</c>

00:35:11.430 --> 00:35:11.440 align:start position:0%
risk 5 computer
 

00:35:11.440 --> 00:35:14.550 align:start position:0%
risk 5 computer
and<00:35:11.599><c> people</c><00:35:11.839><c> have</c><00:35:11.920><c> done</c><00:35:12.160><c> that</c>

00:35:14.550 --> 00:35:14.560 align:start position:0%
 
 

00:35:14.560 --> 00:35:17.589 align:start position:0%
 
but<00:35:14.800><c> we're</c><00:35:15.040><c> going</c><00:35:15.119><c> to</c><00:35:15.200><c> run</c><00:35:15.359><c> it</c><00:35:15.520><c> under</c><00:35:15.680><c> the</c><00:35:16.000><c> qmu</c>

00:35:17.589 --> 00:35:17.599 align:start position:0%
but we're going to run it under the qmu
 

00:35:17.599 --> 00:35:19.589 align:start position:0%
but we're going to run it under the qmu
machine<00:35:18.160><c> emulator</c><00:35:18.800><c> so</c><00:35:18.960><c> just</c><00:35:19.119><c> to</c><00:35:19.200><c> write</c><00:35:19.359><c> this</c>

00:35:19.589 --> 00:35:19.599 align:start position:0%
machine emulator so just to write this
 

00:35:19.599 --> 00:35:20.710 align:start position:0%
machine emulator so just to write this
down<00:35:19.839><c> we</c><00:35:20.000><c> got</c>

00:35:20.710 --> 00:35:20.720 align:start position:0%
down we got
 

00:35:20.720 --> 00:35:24.150 align:start position:0%
down we got
our<00:35:20.960><c> operating</c><00:35:21.359><c> system</c><00:35:21.760><c> is</c><00:35:21.920><c> xv6</c>

00:35:24.150 --> 00:35:24.160 align:start position:0%
our operating system is xv6
 

00:35:24.160 --> 00:35:28.390 align:start position:0%
our operating system is xv6
it<00:35:24.320><c> runs</c><00:35:24.560><c> on</c><00:35:24.880><c> risk</c><00:35:25.200><c> 5</c><00:35:26.640><c> microprocessor</c>

00:35:28.390 --> 00:35:28.400 align:start position:0%
it runs on risk 5 microprocessor
 

00:35:28.400 --> 00:35:30.390 align:start position:0%
it runs on risk 5 microprocessor
and<00:35:28.640><c> not</c><00:35:28.800><c> just</c><00:35:29.119><c> risk</c><00:35:29.359><c> 5</c><00:35:29.520><c> microprocessor</c><00:35:30.240><c> but</c>

00:35:30.390 --> 00:35:30.400 align:start position:0%
and not just risk 5 microprocessor but
 

00:35:30.400 --> 00:35:31.829 align:start position:0%
and not just risk 5 microprocessor but
we<00:35:30.560><c> assume</c><00:35:31.040><c> a</c><00:35:31.119><c> certain</c><00:35:31.440><c> amount</c><00:35:31.680><c> of</c>

00:35:31.829 --> 00:35:31.839 align:start position:0%
we assume a certain amount of
 

00:35:31.839 --> 00:35:34.069 align:start position:0%
we assume a certain amount of
surrounding<00:35:32.400><c> hardware</c><00:35:32.880><c> like</c>

00:35:34.069 --> 00:35:34.079 align:start position:0%
surrounding hardware like
 

00:35:34.079 --> 00:35:37.750 align:start position:0%
surrounding hardware like
memory<00:35:34.560><c> and</c><00:35:34.800><c> a</c><00:35:35.200><c> disk</c><00:35:36.480><c> and</c><00:35:36.640><c> a</c><00:35:37.040><c> console</c>

00:35:37.750 --> 00:35:37.760 align:start position:0%
memory and a disk and a console
 

00:35:37.760 --> 00:35:40.950 align:start position:0%
memory and a disk and a console
interface<00:35:38.160><c> for</c><00:35:38.240><c> us</c><00:35:38.400><c> to</c><00:35:38.480><c> talk</c><00:35:38.720><c> to</c><00:35:38.880><c> it</c><00:35:39.520><c> um</c><00:35:40.640><c> but</c><00:35:40.800><c> we</c>

00:35:40.950 --> 00:35:40.960 align:start position:0%
interface for us to talk to it um but we
 

00:35:40.960 --> 00:35:41.510 align:start position:0%
interface for us to talk to it um but we
actually<00:35:41.200><c> run</c>

00:35:41.510 --> 00:35:41.520 align:start position:0%
actually run
 

00:35:41.520 --> 00:35:45.349 align:start position:0%
actually run
under<00:35:41.680><c> the</c><00:35:42.839><c> qmu</c>

00:35:45.349 --> 00:35:45.359 align:start position:0%
under the qmu
 

00:35:45.359 --> 00:35:49.270 align:start position:0%
under the qmu
machine<00:35:45.920><c> simulator</c><00:35:48.320><c> so</c><00:35:48.480><c> that</c><00:35:48.720><c> which</c>

00:35:49.270 --> 00:35:49.280 align:start position:0%
machine simulator so that which
 

00:35:49.280 --> 00:35:51.670 align:start position:0%
machine simulator so that which
runs<00:35:49.520><c> under</c><00:35:49.760><c> linux</c><00:35:50.160><c> so</c><00:35:50.320><c> that</c><00:35:51.119><c> all</c><00:35:51.280><c> of</c><00:35:51.359><c> you</c><00:35:51.520><c> can</c>

00:35:51.670 --> 00:35:51.680 align:start position:0%
runs under linux so that all of you can
 

00:35:51.680 --> 00:35:53.910 align:start position:0%
runs under linux so that all of you can
actually

00:35:53.910 --> 00:35:53.920 align:start position:0%
actually
 

00:35:53.920 --> 00:35:56.870 align:start position:0%
actually
run<00:35:54.160><c> xv6</c><00:35:54.720><c> without</c><00:35:54.960><c> having</c><00:35:55.119><c> to</c><00:35:55.200><c> have</c><00:35:55.359><c> hardware</c>

00:35:56.870 --> 00:35:56.880 align:start position:0%
run xv6 without having to have hardware
 

00:35:56.880 --> 00:35:57.270 align:start position:0%
run xv6 without having to have hardware
okay

00:35:57.270 --> 00:35:57.280 align:start position:0%
okay
 

00:35:57.280 --> 00:36:10.829 align:start position:0%
okay
so<00:35:57.599><c> i'm</c><00:35:57.760><c> gonna</c><00:35:58.000><c> switch</c><00:35:58.400><c> to</c><00:35:58.720><c> uh</c><00:35:59.920><c> showing</c><00:36:00.160><c> you</c>

00:36:10.829 --> 00:36:10.839 align:start position:0%
 
 

00:36:10.839 --> 00:36:15.589 align:start position:0%
 
code

00:36:15.589 --> 00:36:15.599 align:start position:0%
 
 

00:36:15.599 --> 00:36:18.630 align:start position:0%
 
all<00:36:15.680><c> right</c><00:36:16.000><c> so</c><00:36:16.880><c> um</c><00:36:17.920><c> first</c><00:36:18.160><c> thing</c><00:36:18.320><c> is</c>

00:36:18.630 --> 00:36:18.640 align:start position:0%
all right so um first thing is
 

00:36:18.640 --> 00:36:22.710 align:start position:0%
all right so um first thing is
i've<00:36:18.960><c> uh</c><00:36:19.680><c> set</c><00:36:19.920><c> up</c><00:36:20.800><c> xv6</c><00:36:21.440><c> on</c><00:36:21.599><c> my</c><00:36:21.760><c> laptop</c>

00:36:22.710 --> 00:36:22.720 align:start position:0%
i've uh set up xv6 on my laptop
 

00:36:22.720 --> 00:36:25.190 align:start position:0%
i've uh set up xv6 on my laptop
um<00:36:23.359><c> and</c><00:36:23.520><c> i'm</c><00:36:23.599><c> going</c><00:36:23.680><c> to</c><00:36:23.839><c> run</c><00:36:24.079><c> it</c><00:36:24.560><c> and</c><00:36:24.800><c> type</c><00:36:24.960><c> make</c>

00:36:25.190 --> 00:36:25.200 align:start position:0%
um and i'm going to run it and type make
 

00:36:25.200 --> 00:36:26.710 align:start position:0%
um and i'm going to run it and type make
qmu<00:36:25.680><c> which</c><00:36:25.839><c> you'll</c><00:36:26.000><c> find</c><00:36:26.240><c> yourself</c><00:36:26.480><c> doing</c>

00:36:26.710 --> 00:36:26.720 align:start position:0%
qmu which you'll find yourself doing
 

00:36:26.720 --> 00:36:28.230 align:start position:0%
qmu which you'll find yourself doing
quite<00:36:26.880><c> a</c><00:36:26.960><c> bit</c><00:36:27.119><c> during</c><00:36:27.359><c> the</c><00:36:27.440><c> labs</c>

00:36:28.230 --> 00:36:28.240 align:start position:0%
quite a bit during the labs
 

00:36:28.240 --> 00:36:30.790 align:start position:0%
quite a bit during the labs
um<00:36:28.480><c> which</c><00:36:28.720><c> compiles</c><00:36:29.359><c> xv6</c><00:36:30.000><c> it's</c><00:36:30.079><c> written</c><00:36:30.320><c> in</c><00:36:30.560><c> c</c>

00:36:30.790 --> 00:36:30.800 align:start position:0%
um which compiles xv6 it's written in c
 

00:36:30.800 --> 00:36:32.470 align:start position:0%
um which compiles xv6 it's written in c
so<00:36:31.040><c> it's</c><00:36:31.200><c> compiled</c><00:36:31.680><c> with</c><00:36:31.839><c> a</c>

00:36:32.470 --> 00:36:32.480 align:start position:0%
so it's compiled with a
 

00:36:32.480 --> 00:36:35.510 align:start position:0%
so it's compiled with a
c<00:36:32.720><c> compiler</c><00:36:34.079><c> maybe</c><00:36:34.320><c> i'll</c><00:36:35.119><c> make</c>

00:36:35.510 --> 00:36:35.520 align:start position:0%
c compiler maybe i'll make
 

00:36:35.520 --> 00:36:37.910 align:start position:0%
c compiler maybe i'll make
clean<00:36:35.920><c> for</c><00:36:36.160><c> you</c><00:36:36.880><c> so</c><00:36:37.040><c> you</c><00:36:37.119><c> can</c><00:36:37.280><c> see</c><00:36:37.440><c> the</c><00:36:37.520><c> actual</c>

00:36:37.910 --> 00:36:37.920 align:start position:0%
clean for you so you can see the actual
 

00:36:37.920 --> 00:36:38.950 align:start position:0%
clean for you so you can see the actual
compilation

00:36:38.950 --> 00:36:38.960 align:start position:0%
compilation
 

00:36:38.960 --> 00:36:41.270 align:start position:0%
compilation
and<00:36:39.119><c> i</c><00:36:39.200><c> might</c><00:36:39.440><c> type</c><00:36:39.680><c> make</c><00:36:40.000><c> qmu</c><00:36:40.640><c> which</c><00:36:40.960><c> has</c><00:36:41.200><c> the</c>

00:36:41.270 --> 00:36:41.280 align:start position:0%
and i might type make qmu which has the
 

00:36:41.280 --> 00:36:42.470 align:start position:0%
and i might type make qmu which has the
effect<00:36:41.599><c> of</c>

00:36:42.470 --> 00:36:42.480 align:start position:0%
effect of
 

00:36:42.480 --> 00:36:44.870 align:start position:0%
effect of
compiling<00:36:43.040><c> and</c><00:36:43.119><c> building</c><00:36:43.680><c> xv6</c><00:36:44.320><c> kernel</c><00:36:44.720><c> and</c>

00:36:44.870 --> 00:36:44.880 align:start position:0%
compiling and building xv6 kernel and
 

00:36:44.880 --> 00:36:45.750 align:start position:0%
compiling and building xv6 kernel and
all<00:36:45.040><c> the</c><00:36:45.119><c> user</c>

00:36:45.750 --> 00:36:45.760 align:start position:0%
all the user
 

00:36:45.760 --> 00:36:48.550 align:start position:0%
all the user
processes<00:36:47.599><c> and</c><00:36:47.680><c> then</c><00:36:47.839><c> running</c><00:36:48.160><c> them</c><00:36:48.400><c> under</c>

00:36:48.550 --> 00:36:48.560 align:start position:0%
processes and then running them under
 

00:36:48.560 --> 00:36:51.670 align:start position:0%
processes and then running them under
the<00:36:48.720><c> qmu</c><00:36:49.280><c> emulator</c>

00:36:51.670 --> 00:36:51.680 align:start position:0%
the qmu emulator
 

00:36:51.680 --> 00:36:55.910 align:start position:0%
the qmu emulator
it<00:36:51.839><c> takes</c><00:36:52.079><c> a</c><00:36:52.160><c> moment</c><00:36:52.400><c> to</c><00:36:52.480><c> run</c><00:36:52.640><c> the</c><00:36:52.839><c> compiles</c>

00:36:55.910 --> 00:36:55.920 align:start position:0%
 
 

00:36:55.920 --> 00:36:59.270 align:start position:0%
 
and<00:36:56.079><c> now</c><00:36:56.240><c> we're</c><00:36:56.480><c> up</c><00:36:56.640><c> and</c><00:36:56.720><c> running</c><00:36:58.240><c> xv6</c><00:36:59.040><c> and</c><00:36:59.119><c> the</c>

00:36:59.270 --> 00:36:59.280 align:start position:0%
and now we're up and running xv6 and the
 

00:36:59.280 --> 00:37:02.310 align:start position:0%
and now we're up and running xv6 and the
dollar<00:36:59.680><c> sign</c><00:36:59.920><c> prompt</c><00:37:00.240><c> you</c><00:37:00.400><c> see</c><00:37:00.640><c> is</c><00:37:00.800><c> the</c><00:37:01.040><c> shell</c>

00:37:02.310 --> 00:37:02.320 align:start position:0%
dollar sign prompt you see is the shell
 

00:37:02.320 --> 00:37:05.190 align:start position:0%
dollar sign prompt you see is the shell
which<00:37:02.480><c> is</c><00:37:02.640><c> the</c><00:37:02.800><c> command</c><00:37:03.200><c> line</c><00:37:03.520><c> interface</c><00:37:04.960><c> to</c>

00:37:05.190 --> 00:37:05.200 align:start position:0%
which is the command line interface to
 

00:37:05.200 --> 00:37:05.990 align:start position:0%
which is the command line interface to
xv6

00:37:05.990 --> 00:37:06.000 align:start position:0%
xv6
 

00:37:06.000 --> 00:37:09.670 align:start position:0%
xv6
modeled<00:37:06.400><c> after</c><00:37:06.640><c> the</c><00:37:07.359><c> shell</c><00:37:07.680><c> on</c><00:37:07.839><c> unix</c><00:37:08.320><c> which</c><00:37:08.560><c> is</c>

00:37:09.670 --> 00:37:09.680 align:start position:0%
modeled after the shell on unix which is
 

00:37:09.680 --> 00:37:12.150 align:start position:0%
modeled after the shell on unix which is
if<00:37:09.839><c> you</c><00:37:10.480><c> log</c><00:37:10.720><c> into</c><00:37:10.960><c> an</c><00:37:11.119><c> athena</c><00:37:11.520><c> workstation</c>

00:37:12.150 --> 00:37:12.160 align:start position:0%
if you log into an athena workstation
 

00:37:12.160 --> 00:37:13.589 align:start position:0%
if you log into an athena workstation
it's<00:37:12.400><c> the</c>

00:37:13.589 --> 00:37:13.599 align:start position:0%
it's the
 

00:37:13.599 --> 00:37:15.510 align:start position:0%
it's the
it's<00:37:13.839><c> like</c><00:37:14.079><c> the</c><00:37:14.240><c> shell</c><00:37:14.560><c> that</c><00:37:14.800><c> athena</c><00:37:15.200><c> shows</c>

00:37:15.510 --> 00:37:15.520 align:start position:0%
it's like the shell that athena shows
 

00:37:15.520 --> 00:37:18.150 align:start position:0%
it's like the shell that athena shows
you

00:37:18.150 --> 00:37:18.160 align:start position:0%
 
 

00:37:18.160 --> 00:37:20.630 align:start position:0%
 
x36<00:37:18.720><c> is</c><00:37:19.280><c> itself</c><00:37:19.680><c> tiny</c><00:37:20.079><c> and</c><00:37:20.160><c> it</c><00:37:20.240><c> comes</c><00:37:20.480><c> with</c><00:37:20.560><c> a</c>

00:37:20.630 --> 00:37:20.640 align:start position:0%
x36 is itself tiny and it comes with a
 

00:37:20.640 --> 00:37:23.030 align:start position:0%
x36 is itself tiny and it comes with a
small<00:37:21.040><c> number</c><00:37:21.440><c> of</c><00:37:21.599><c> utility</c><00:37:22.160><c> programs</c>

00:37:23.030 --> 00:37:23.040 align:start position:0%
small number of utility programs
 

00:37:23.040 --> 00:37:25.829 align:start position:0%
small number of utility programs
and<00:37:24.160><c> including</c><00:37:24.560><c> for</c><00:37:24.720><c> example</c><00:37:24.960><c> the</c><00:37:25.119><c> ls</c><00:37:25.520><c> program</c>

00:37:25.829 --> 00:37:25.839 align:start position:0%
and including for example the ls program
 

00:37:25.839 --> 00:37:27.510 align:start position:0%
and including for example the ls program
which<00:37:26.000><c> i'm</c><00:37:26.160><c> about</c><00:37:26.400><c> to</c><00:37:26.560><c> run</c>

00:37:27.510 --> 00:37:27.520 align:start position:0%
which i'm about to run
 

00:37:27.520 --> 00:37:30.630 align:start position:0%
which i'm about to run
run<00:37:27.760><c> ls</c><00:37:28.160><c> and</c><00:37:28.320><c> it</c><00:37:28.400><c> gives</c><00:37:28.560><c> me</c><00:37:28.720><c> a</c><00:37:28.800><c> list</c><00:37:29.040><c> of</c><00:37:30.240><c> all</c><00:37:30.480><c> the</c>

00:37:30.630 --> 00:37:30.640 align:start position:0%
run ls and it gives me a list of all the
 

00:37:30.640 --> 00:37:32.390 align:start position:0%
run ls and it gives me a list of all the
files<00:37:30.960><c> in</c><00:37:31.119><c> xv6</c><00:37:31.680><c> of</c><00:37:31.760><c> which</c><00:37:31.920><c> there</c><00:37:32.079><c> are</c><00:37:32.240><c> only</c>

00:37:32.390 --> 00:37:32.400 align:start position:0%
files in xv6 of which there are only
 

00:37:32.400 --> 00:37:34.069 align:start position:0%
files in xv6 of which there are only
about<00:37:32.640><c> two</c><00:37:32.800><c> dozen</c>

00:37:34.069 --> 00:37:34.079 align:start position:0%
about two dozen
 

00:37:34.079 --> 00:37:37.190 align:start position:0%
about two dozen
including<00:37:34.720><c> things</c><00:37:34.960><c> like</c><00:37:35.119><c> grep</c><00:37:35.599><c> and</c><00:37:36.480><c> kill</c><00:37:36.960><c> and</c>

00:37:37.190 --> 00:37:37.200 align:start position:0%
including things like grep and kill and
 

00:37:37.200 --> 00:37:38.069 align:start position:0%
including things like grep and kill and
make<00:37:37.520><c> deer</c>

00:37:38.069 --> 00:37:38.079 align:start position:0%
make deer
 

00:37:38.079 --> 00:37:41.109 align:start position:0%
make deer
and<00:37:38.320><c> rn</c><00:37:39.520><c> which</c><00:37:39.680><c> may</c><00:37:39.839><c> be</c><00:37:40.000><c> familiar</c><00:37:40.480><c> to</c><00:37:40.640><c> you</c><00:37:40.800><c> as</c>

00:37:41.109 --> 00:37:41.119 align:start position:0%
and rn which may be familiar to you as
 

00:37:41.119 --> 00:37:44.950 align:start position:0%
and rn which may be familiar to you as
uh<00:37:42.079><c> as</c><00:37:42.240><c> unix</c><00:37:42.640><c> utilities</c>

00:37:44.950 --> 00:37:44.960 align:start position:0%
uh as unix utilities
 

00:37:44.960 --> 00:37:46.390 align:start position:0%
uh as unix utilities
okay<00:37:45.200><c> the</c><00:37:45.359><c> first</c><00:37:45.599><c> program</c><00:37:45.920><c> i'm</c><00:37:46.000><c> going</c><00:37:46.160><c> to</c><00:37:46.240><c> show</c>

00:37:46.390 --> 00:37:46.400 align:start position:0%
okay the first program i'm going to show
 

00:37:46.400 --> 00:37:48.069 align:start position:0%
okay the first program i'm going to show
you<00:37:46.560><c> to</c><00:37:46.640><c> illustrate</c><00:37:47.200><c> system</c><00:37:47.520><c> calls</c>

00:37:48.069 --> 00:37:48.079 align:start position:0%
you to illustrate system calls
 

00:37:48.079 --> 00:37:59.910 align:start position:0%
you to illustrate system calls
is<00:37:48.839><c> um</c><00:37:50.560><c> program</c><00:37:50.880><c> called</c><00:37:51.119><c> copy</c>

00:37:59.910 --> 00:37:59.920 align:start position:0%
 
 

00:37:59.920 --> 00:38:08.630 align:start position:0%
 
um<00:38:01.920><c> here's</c><00:38:02.160><c> the</c><00:38:02.240><c> source</c><00:38:02.560><c> it's</c><00:38:02.640><c> just</c><00:38:02.800><c> a</c><00:38:02.960><c> page</c>

00:38:08.630 --> 00:38:08.640 align:start position:0%
 
 

00:38:08.640 --> 00:38:09.829 align:start position:0%
 
and<00:38:08.720><c> so</c><00:38:08.880><c> what</c><00:38:09.040><c> you're</c><00:38:09.200><c> seeing</c><00:38:09.440><c> here</c><00:38:09.599><c> is</c><00:38:09.760><c> a</c>

00:38:09.829 --> 00:38:09.839 align:start position:0%
and so what you're seeing here is a
 

00:38:09.839 --> 00:38:12.230 align:start position:0%
and so what you're seeing here is a
program<00:38:10.880><c> that</c><00:38:11.119><c> starts</c><00:38:11.440><c> on</c><00:38:11.599><c> line</c><00:38:11.839><c> eight</c><00:38:12.079><c> and</c>

00:38:12.230 --> 00:38:12.240 align:start position:0%
program that starts on line eight and
 

00:38:12.240 --> 00:38:12.710 align:start position:0%
program that starts on line eight and
main

00:38:12.710 --> 00:38:12.720 align:start position:0%
main
 

00:38:12.720 --> 00:38:14.390 align:start position:0%
main
there's<00:38:12.880><c> the</c><00:38:13.040><c> sort</c><00:38:13.200><c> of</c><00:38:13.280><c> convention</c><00:38:13.920><c> for</c><00:38:14.160><c> c</c>

00:38:14.390 --> 00:38:14.400 align:start position:0%
there's the sort of convention for c
 

00:38:14.400 --> 00:38:18.069 align:start position:0%
there's the sort of convention for c
programs<00:38:15.440><c> it</c><00:38:15.599><c> sits</c><00:38:15.839><c> in</c><00:38:15.920><c> a</c><00:38:16.000><c> loop</c><00:38:16.320><c> at</c><00:38:16.400><c> line</c><00:38:16.839><c> 12.</c>

00:38:18.069 --> 00:38:18.079 align:start position:0%
programs it sits in a loop at line 12.
 

00:38:18.079 --> 00:38:21.270 align:start position:0%
programs it sits in a loop at line 12.
and<00:38:18.240><c> over</c><00:38:18.480><c> and</c><00:38:18.640><c> over</c><00:38:18.800><c> again</c><00:38:19.680><c> it</c><00:38:20.720><c> reads</c><00:38:21.040><c> some</c>

00:38:21.270 --> 00:38:21.280 align:start position:0%
and over and over again it reads some
 

00:38:21.280 --> 00:38:21.750 align:start position:0%
and over and over again it reads some
data

00:38:21.750 --> 00:38:21.760 align:start position:0%
data
 

00:38:21.760 --> 00:38:24.390 align:start position:0%
data
as<00:38:21.920><c> input</c><00:38:22.400><c> and</c><00:38:22.800><c> on</c><00:38:22.960><c> line</c><00:38:23.200><c> 13</c><00:38:23.760><c> and</c><00:38:23.839><c> then</c><00:38:24.160><c> writes</c>

00:38:24.390 --> 00:38:24.400 align:start position:0%
as input and on line 13 and then writes
 

00:38:24.400 --> 00:38:26.230 align:start position:0%
as input and on line 13 and then writes
the<00:38:24.560><c> data</c><00:38:24.880><c> just</c><00:38:25.119><c> read</c>

00:38:26.230 --> 00:38:26.240 align:start position:0%
the data just read
 

00:38:26.240 --> 00:38:32.069 align:start position:0%
the data just read
to<00:38:26.400><c> its</c><00:38:26.560><c> output</c><00:38:26.880><c> on</c><00:38:27.040><c> line</c><00:38:27.359><c> 16.</c><00:38:28.160><c> if</c><00:38:28.400><c> i</c><00:38:28.560><c> run</c><00:38:30.839><c> copy</c>

00:38:32.069 --> 00:38:32.079 align:start position:0%
to its output on line 16. if i run copy
 

00:38:32.079 --> 00:38:35.670 align:start position:0%
to its output on line 16. if i run copy
uh<00:38:32.720><c> in</c><00:38:33.040><c> xv6</c><00:38:34.320><c> just</c><00:38:34.480><c> waiting</c><00:38:34.800><c> to</c><00:38:34.880><c> read</c><00:38:35.119><c> input</c><00:38:35.520><c> if</c>

00:38:35.670 --> 00:38:35.680 align:start position:0%
uh in xv6 just waiting to read input if
 

00:38:35.680 --> 00:38:36.230 align:start position:0%
uh in xv6 just waiting to read input if
i

00:38:36.230 --> 00:38:36.240 align:start position:0%
i
 

00:38:36.240 --> 00:38:39.109 align:start position:0%
i
type<00:38:36.480><c> some</c><00:38:36.720><c> input</c><00:38:37.760><c> and</c><00:38:38.160><c> reads</c><00:38:38.480><c> it</c><00:38:38.640><c> and</c><00:38:38.800><c> spits</c>

00:38:39.109 --> 00:38:39.119 align:start position:0%
type some input and reads it and spits
 

00:38:39.119 --> 00:38:40.150 align:start position:0%
type some input and reads it and spits
it<00:38:39.200><c> back</c><00:38:39.440><c> out</c><00:38:39.599><c> to</c><00:38:39.760><c> me</c>

00:38:40.150 --> 00:38:40.160 align:start position:0%
it back out to me
 

00:38:40.160 --> 00:38:43.109 align:start position:0%
it back out to me
so<00:38:40.320><c> it's</c><00:38:41.520><c> very</c><00:38:41.760><c> simple</c><00:38:42.079><c> program</c><00:38:42.480><c> just</c><00:38:42.640><c> does</c><00:38:42.880><c> i</c>

00:38:43.109 --> 00:38:43.119 align:start position:0%
so it's very simple program just does i
 

00:38:43.119 --> 00:38:45.109 align:start position:0%
so it's very simple program just does i
out

00:38:45.109 --> 00:38:45.119 align:start position:0%
out
 

00:38:45.119 --> 00:38:47.270 align:start position:0%
out
it's<00:38:45.280><c> written</c><00:38:45.520><c> in</c><00:38:45.599><c> c</c><00:38:45.839><c> as</c><00:38:45.920><c> i</c><00:38:46.000><c> mentioned</c><00:38:46.880><c> um</c><00:38:47.119><c> if</c>

00:38:47.270 --> 00:38:47.280 align:start position:0%
it's written in c as i mentioned um if
 

00:38:47.280 --> 00:38:49.030 align:start position:0%
it's written in c as i mentioned um if
you're<00:38:47.680><c> you</c><00:38:47.839><c> don't</c><00:38:48.000><c> already</c><00:38:48.240><c> know</c><00:38:48.560><c> c</c><00:38:48.800><c> it's</c>

00:38:49.030 --> 00:38:49.040 align:start position:0%
you're you don't already know c it's
 

00:38:49.040 --> 00:38:50.790 align:start position:0%
you're you don't already know c it's
worthwhile<00:38:49.680><c> getting</c><00:38:50.000><c> the</c>

00:38:50.790 --> 00:38:50.800 align:start position:0%
worthwhile getting the
 

00:38:50.800 --> 00:38:53.349 align:start position:0%
worthwhile getting the
um<00:38:51.359><c> standard</c><00:38:52.240><c> c</c><00:38:52.480><c> programming</c><00:38:52.880><c> language</c><00:38:53.200><c> book</c>

00:38:53.349 --> 00:38:53.359 align:start position:0%
um standard c programming language book
 

00:38:53.359 --> 00:38:55.030 align:start position:0%
um standard c programming language book
by<00:38:53.680><c> kernhan</c><00:38:54.160><c> and</c><00:38:54.240><c> ritchie</c>

00:38:55.030 --> 00:38:55.040 align:start position:0%
by kernhan and ritchie
 

00:38:55.040 --> 00:38:57.990 align:start position:0%
by kernhan and ritchie
and<00:38:55.280><c> i</c><00:38:55.359><c> think</c><00:38:55.520><c> there's</c><00:38:55.760><c> a</c><00:38:56.800><c> more</c><00:38:57.119><c> full</c>

00:38:57.990 --> 00:38:58.000 align:start position:0%
and i think there's a more full
 

00:38:58.000 --> 00:38:59.430 align:start position:0%
and i think there's a more full
reference<00:38:58.400><c> to</c><00:38:58.560><c> it</c><00:38:58.720><c> on</c><00:38:58.880><c> the</c>

00:38:59.430 --> 00:38:59.440 align:start position:0%
reference to it on the
 

00:38:59.440 --> 00:39:02.230 align:start position:0%
reference to it on the
course<00:38:59.760><c> website</c><00:39:00.800><c> which</c><00:39:01.280><c> explains</c><00:39:01.760><c> to</c><00:39:01.839><c> you</c><00:39:02.079><c> in</c>

00:39:02.230 --> 00:39:02.240 align:start position:0%
course website which explains to you in
 

00:39:02.240 --> 00:39:03.190 align:start position:0%
course website which explains to you in
a

00:39:03.190 --> 00:39:03.200 align:start position:0%
a
 

00:39:03.200 --> 00:39:04.630 align:start position:0%
a
very<00:39:03.440><c> straightforward</c><00:39:03.920><c> way</c><00:39:04.079><c> how</c><00:39:04.240><c> to</c><00:39:04.320><c> program</c>

00:39:04.630 --> 00:39:04.640 align:start position:0%
very straightforward way how to program
 

00:39:04.640 --> 00:39:08.230 align:start position:0%
very straightforward way how to program
and<00:39:04.800><c> see</c>

00:39:08.230 --> 00:39:08.240 align:start position:0%
 
 

00:39:08.240 --> 00:39:09.829 align:start position:0%
 
as<00:39:08.400><c> i</c><00:39:08.480><c> mentioned</c><00:39:08.800><c> before</c><00:39:09.119><c> read</c><00:39:09.359><c> and</c><00:39:09.520><c> write</c>

00:39:09.829 --> 00:39:09.839 align:start position:0%
as i mentioned before read and write
 

00:39:09.839 --> 00:39:11.510 align:start position:0%
as i mentioned before read and write
this<00:39:10.079><c> this</c><00:39:10.240><c> program</c><00:39:10.560><c> makes</c>

00:39:11.510 --> 00:39:11.520 align:start position:0%
this this program makes
 

00:39:11.520 --> 00:39:13.510 align:start position:0%
this this program makes
two<00:39:11.760><c> really</c><00:39:12.079><c> three</c><00:39:12.400><c> system</c><00:39:12.720><c> calls</c><00:39:13.040><c> read</c><00:39:13.280><c> write</c>

00:39:13.510 --> 00:39:13.520 align:start position:0%
two really three system calls read write
 

00:39:13.520 --> 00:39:14.950 align:start position:0%
two really three system calls read write
and<00:39:13.680><c> exit</c><00:39:14.320><c> are</c>

00:39:14.950 --> 00:39:14.960 align:start position:0%
and exit are
 

00:39:14.960 --> 00:39:18.069 align:start position:0%
and exit are
system<00:39:15.359><c> calls</c><00:39:17.200><c> if</c><00:39:17.280><c> you</c><00:39:17.359><c> look</c><00:39:17.520><c> at</c><00:39:17.599><c> the</c><00:39:17.680><c> call</c><00:39:17.920><c> to</c>

00:39:18.069 --> 00:39:18.079 align:start position:0%
system calls if you look at the call to
 

00:39:18.079 --> 00:39:19.990 align:start position:0%
system calls if you look at the call to
read<00:39:18.480><c> on</c><00:39:18.640><c> line</c><00:39:18.880><c> 13</c>

00:39:19.990 --> 00:39:20.000 align:start position:0%
read on line 13
 

00:39:20.000 --> 00:39:22.710 align:start position:0%
read on line 13
it<00:39:20.160><c> takes</c><00:39:20.480><c> three</c><00:39:20.720><c> arguments</c><00:39:22.320><c> the</c><00:39:22.480><c> first</c>

00:39:22.710 --> 00:39:22.720 align:start position:0%
it takes three arguments the first
 

00:39:22.720 --> 00:39:24.150 align:start position:0%
it takes three arguments the first
argument<00:39:23.040><c> is</c><00:39:23.119><c> a</c><00:39:23.200><c> file</c><00:39:23.440><c> descriptor</c><00:39:23.920><c> which</c><00:39:24.079><c> is</c>

00:39:24.150 --> 00:39:24.160 align:start position:0%
argument is a file descriptor which is
 

00:39:24.160 --> 00:39:26.069 align:start position:0%
argument is a file descriptor which is
really<00:39:24.400><c> a</c><00:39:24.480><c> reference</c><00:39:24.960><c> to</c><00:39:25.119><c> a</c><00:39:25.200><c> previously</c><00:39:25.760><c> open</c>

00:39:26.069 --> 00:39:26.079 align:start position:0%
really a reference to a previously open
 

00:39:26.079 --> 00:39:27.510 align:start position:0%
really a reference to a previously open
file

00:39:27.510 --> 00:39:27.520 align:start position:0%
file
 

00:39:27.520 --> 00:39:30.950 align:start position:0%
file
and<00:39:28.079><c> the</c><00:39:28.320><c> shell</c><00:39:29.119><c> uh</c><00:39:29.760><c> ensures</c><00:39:30.320><c> that</c>

00:39:30.950 --> 00:39:30.960 align:start position:0%
and the shell uh ensures that
 

00:39:30.960 --> 00:39:33.670 align:start position:0%
and the shell uh ensures that
when<00:39:31.200><c> a</c><00:39:31.440><c> program</c><00:39:31.760><c> starts</c><00:39:32.160><c> by</c><00:39:32.400><c> default</c><00:39:33.359><c> its</c>

00:39:33.670 --> 00:39:33.680 align:start position:0%
when a program starts by default its
 

00:39:33.680 --> 00:39:35.910 align:start position:0%
when a program starts by default its
file<00:39:33.920><c> descriptor</c><00:39:34.400><c> 0</c><00:39:34.800><c> is</c><00:39:34.960><c> connected</c><00:39:35.520><c> to</c><00:39:35.680><c> the</c>

00:39:35.910 --> 00:39:35.920 align:start position:0%
file descriptor 0 is connected to the
 

00:39:35.920 --> 00:39:37.750 align:start position:0%
file descriptor 0 is connected to the
console<00:39:36.400><c> input</c><00:39:36.800><c> and</c><00:39:36.880><c> its</c><00:39:37.119><c> file</c>

00:39:37.750 --> 00:39:37.760 align:start position:0%
console input and its file
 

00:39:37.760 --> 00:39:40.550 align:start position:0%
console input and its file
descriptive<00:39:38.320><c> 1</c><00:39:38.720><c> is</c><00:39:39.359><c> connected</c><00:39:39.760><c> to</c><00:39:39.920><c> the</c>

00:39:40.550 --> 00:39:40.560 align:start position:0%
descriptive 1 is connected to the
 

00:39:40.560 --> 00:39:42.310 align:start position:0%
descriptive 1 is connected to the
console<00:39:41.040><c> output</c><00:39:41.359><c> and</c><00:39:41.440><c> that's</c><00:39:41.599><c> why</c><00:39:41.839><c> i</c><00:39:41.920><c> was</c><00:39:42.079><c> able</c>

00:39:42.310 --> 00:39:42.320 align:start position:0%
console output and that's why i was able
 

00:39:42.320 --> 00:39:43.829 align:start position:0%
console output and that's why i was able
to<00:39:42.480><c> type</c><00:39:42.800><c> to</c>

00:39:43.829 --> 00:39:43.839 align:start position:0%
to type to
 

00:39:43.839 --> 00:39:49.349 align:start position:0%
to type to
this<00:39:44.000><c> copy</c><00:39:44.400><c> program</c><00:39:44.880><c> and</c><00:39:45.760><c> see</c><00:39:45.920><c> the</c><00:39:46.079><c> output</c>

00:39:49.349 --> 00:39:49.359 align:start position:0%
 
 

00:39:49.359 --> 00:39:50.710 align:start position:0%
 
of<00:39:49.440><c> course</c><00:39:49.839><c> you</c><00:39:49.920><c> know</c><00:39:50.079><c> these</c><00:39:50.480><c> file</c>

00:39:50.710 --> 00:39:50.720 align:start position:0%
of course you know these file
 

00:39:50.720 --> 00:39:53.030 align:start position:0%
of course you know these file
descriptors<00:39:51.280><c> are</c><00:39:51.920><c> expected</c><00:39:52.560><c> the</c><00:39:52.720><c> program</c>

00:39:53.030 --> 00:39:53.040 align:start position:0%
descriptors are expected the program
 

00:39:53.040 --> 00:39:54.710 align:start position:0%
descriptors are expected the program
expects<00:39:53.440><c> these</c><00:39:53.680><c> file</c><00:39:53.839><c> descriptors</c><00:39:54.400><c> have</c><00:39:54.560><c> been</c>

00:39:54.710 --> 00:39:54.720 align:start position:0%
expects these file descriptors have been
 

00:39:54.720 --> 00:39:55.990 align:start position:0%
expects these file descriptors have been
previously<00:39:55.280><c> opened</c><00:39:55.599><c> and</c><00:39:55.760><c> set</c>

00:39:55.990 --> 00:39:56.000 align:start position:0%
previously opened and set
 

00:39:56.000 --> 00:39:58.710 align:start position:0%
previously opened and set
up<00:39:56.079><c> by</c><00:39:56.240><c> the</c><00:39:56.400><c> shell</c><00:39:56.720><c> for</c><00:39:57.040><c> it</c><00:39:57.680><c> and</c><00:39:57.760><c> this</c><00:39:58.240><c> this</c>

00:39:58.710 --> 00:39:58.720 align:start position:0%
up by the shell for it and this this
 

00:39:58.720 --> 00:39:59.190 align:start position:0%
up by the shell for it and this this
zero

00:39:59.190 --> 00:39:59.200 align:start position:0%
zero
 

00:39:59.200 --> 00:40:02.870 align:start position:0%
zero
one<00:40:00.160><c> file</c><00:40:00.480><c> descriptors</c><00:40:01.040><c> is</c><00:40:01.280><c> a</c><00:40:01.839><c> pervasive</c><00:40:02.480><c> unix</c>

00:40:02.870 --> 00:40:02.880 align:start position:0%
one file descriptors is a pervasive unix
 

00:40:02.880 --> 00:40:04.710 align:start position:0%
one file descriptors is a pervasive unix
convention<00:40:03.440><c> many</c><00:40:03.680><c> many</c><00:40:03.920><c> unix</c><00:40:04.319><c> programs</c>

00:40:04.710 --> 00:40:04.720 align:start position:0%
convention many many unix programs
 

00:40:04.720 --> 00:40:05.990 align:start position:0%
convention many many unix programs
expect<00:40:05.040><c> to</c><00:40:05.200><c> read</c>

00:40:05.990 --> 00:40:06.000 align:start position:0%
expect to read
 

00:40:06.000 --> 00:40:08.790 align:start position:0%
expect to read
and<00:40:06.160><c> file</c><00:40:06.400><c> descriptor</c><00:40:06.960><c> one</c><00:40:07.359><c> and</c><00:40:08.240><c> read</c><00:40:08.560><c> file</c>

00:40:08.790 --> 00:40:08.800 align:start position:0%
and file descriptor one and read file
 

00:40:08.800 --> 00:40:10.309 align:start position:0%
and file descriptor one and read file
scripture<00:40:09.200><c> zero</c><00:40:09.520><c> and</c><00:40:09.680><c> write</c><00:40:09.920><c> to</c><00:40:10.079><c> file</c>

00:40:10.309 --> 00:40:10.319 align:start position:0%
scripture zero and write to file
 

00:40:10.319 --> 00:40:12.710 align:start position:0%
scripture zero and write to file
description<00:40:10.880><c> one</c>

00:40:12.710 --> 00:40:12.720 align:start position:0%
description one
 

00:40:12.720 --> 00:40:14.950 align:start position:0%
description one
um<00:40:13.119><c> the</c><00:40:13.280><c> second</c><00:40:13.599><c> argument</c><00:40:13.920><c> to</c><00:40:14.079><c> read</c><00:40:14.480><c> is</c><00:40:14.640><c> a</c>

00:40:14.950 --> 00:40:14.960 align:start position:0%
um the second argument to read is a
 

00:40:14.960 --> 00:40:17.030 align:start position:0%
um the second argument to read is a
pointer<00:40:15.440><c> to</c><00:40:15.599><c> some</c><00:40:15.839><c> memory</c>

00:40:17.030 --> 00:40:17.040 align:start position:0%
pointer to some memory
 

00:40:17.040 --> 00:40:18.710 align:start position:0%
pointer to some memory
um<00:40:17.280><c> where</c><00:40:17.520><c> the</c><00:40:17.680><c> program</c><00:40:18.000><c> is</c><00:40:18.240><c> asking</c><00:40:18.560><c> the</c>

00:40:18.710 --> 00:40:18.720 align:start position:0%
um where the program is asking the
 

00:40:18.720 --> 00:40:21.349 align:start position:0%
um where the program is asking the
operating<00:40:19.119><c> system</c><00:40:19.440><c> to</c><00:40:19.680><c> read</c><00:40:20.000><c> data</c>

00:40:21.349 --> 00:40:21.359 align:start position:0%
operating system to read data
 

00:40:21.359 --> 00:40:22.950 align:start position:0%
operating system to read data
into<00:40:21.599><c> that</c><00:40:21.839><c> address</c><00:40:22.160><c> and</c><00:40:22.240><c> memory</c><00:40:22.640><c> so</c><00:40:22.720><c> that's</c>

00:40:22.950 --> 00:40:22.960 align:start position:0%
into that address and memory so that's
 

00:40:22.960 --> 00:40:24.550 align:start position:0%
into that address and memory so that's
the<00:40:23.119><c> buff</c><00:40:23.440><c> argument</c>

00:40:24.550 --> 00:40:24.560 align:start position:0%
the buff argument
 

00:40:24.560 --> 00:40:28.069 align:start position:0%
the buff argument
and<00:40:24.720><c> line</c><00:40:24.960><c> 10</c><00:40:26.000><c> allocates</c><00:40:26.480><c> 64</c><00:40:27.040><c> bytes</c><00:40:27.359><c> of</c><00:40:27.440><c> memory</c>

00:40:28.069 --> 00:40:28.079 align:start position:0%
and line 10 allocates 64 bytes of memory
 

00:40:28.079 --> 00:40:31.589 align:start position:0%
and line 10 allocates 64 bytes of memory
on<00:40:28.240><c> the</c><00:40:28.319><c> stack</c><00:40:30.240><c> per</c><00:40:30.400><c> read</c><00:40:30.640><c> to</c><00:40:30.800><c> read</c><00:40:31.040><c> into</c>

00:40:31.589 --> 00:40:31.599 align:start position:0%
on the stack per read to read into
 

00:40:31.599 --> 00:40:33.190 align:start position:0%
on the stack per read to read into
and<00:40:31.680><c> the</c><00:40:31.839><c> third</c><00:40:32.079><c> argument</c><00:40:32.480><c> to</c><00:40:32.640><c> read</c><00:40:32.960><c> is</c><00:40:33.040><c> the</c>

00:40:33.190 --> 00:40:33.200 align:start position:0%
and the third argument to read is the
 

00:40:33.200 --> 00:40:35.190 align:start position:0%
and the third argument to read is the
maximum<00:40:33.760><c> number</c><00:40:34.000><c> of</c><00:40:34.160><c> bytes</c><00:40:34.640><c> that</c><00:40:34.800><c> the</c><00:40:34.880><c> program</c>

00:40:35.190 --> 00:40:35.200 align:start position:0%
maximum number of bytes that the program
 

00:40:35.200 --> 00:40:36.309 align:start position:0%
maximum number of bytes that the program
wants<00:40:35.440><c> to</c><00:40:35.599><c> read</c>

00:40:36.309 --> 00:40:36.319 align:start position:0%
wants to read
 

00:40:36.319 --> 00:40:38.790 align:start position:0%
wants to read
and<00:40:36.480><c> the</c><00:40:36.720><c> size</c><00:40:36.960><c> of</c><00:40:37.119><c> buff</c><00:40:37.359><c> says</c><00:40:38.000><c> just</c><00:40:38.240><c> 60</c>

00:40:38.790 --> 00:40:38.800 align:start position:0%
and the size of buff says just 60
 

00:40:38.800 --> 00:40:39.349 align:start position:0%
and the size of buff says just 60
maximum

00:40:39.349 --> 00:40:39.359 align:start position:0%
maximum
 

00:40:39.359 --> 00:40:42.390 align:start position:0%
maximum
64<00:40:39.839><c> buckets</c><00:40:40.560><c> so</c><00:40:40.720><c> the</c><00:40:40.800><c> recall</c><00:40:41.280><c> reads</c><00:40:41.599><c> up</c><00:40:41.680><c> to</c><00:40:41.839><c> 64</c>

00:40:42.390 --> 00:40:42.400 align:start position:0%
64 buckets so the recall reads up to 64
 

00:40:42.400 --> 00:40:44.230 align:start position:0%
64 buckets so the recall reads up to 64
bytes<00:40:42.800><c> from</c><00:40:42.960><c> whatever</c>

00:40:44.230 --> 00:40:44.240 align:start position:0%
bytes from whatever
 

00:40:44.240 --> 00:40:45.990 align:start position:0%
bytes from whatever
is<00:40:44.400><c> connected</c><00:40:44.720><c> to</c><00:40:44.800><c> file</c><00:40:44.960><c> descriptor</c><00:40:45.440><c> zero</c><00:40:45.839><c> and</c>

00:40:45.990 --> 00:40:46.000 align:start position:0%
is connected to file descriptor zero and
 

00:40:46.000 --> 00:40:48.710 align:start position:0%
is connected to file descriptor zero and
that<00:40:46.160><c> was</c><00:40:47.119><c> my</c><00:40:47.359><c> terminal</c><00:40:47.760><c> in</c><00:40:47.839><c> this</c><00:40:48.000><c> example</c>

00:40:48.710 --> 00:40:48.720 align:start position:0%
that was my terminal in this example
 

00:40:48.720 --> 00:40:51.349 align:start position:0%
that was my terminal in this example
the<00:40:49.040><c> return</c><00:40:49.440><c> value</c><00:40:49.680><c> from</c><00:40:49.920><c> read</c><00:40:50.960><c> it</c><00:40:51.119><c> either</c>

00:40:51.349 --> 00:40:51.359 align:start position:0%
the return value from read it either
 

00:40:51.359 --> 00:40:51.829 align:start position:0%
the return value from read it either
repeat

00:40:51.829 --> 00:40:51.839 align:start position:0%
repeat
 

00:40:51.839 --> 00:40:53.589 align:start position:0%
repeat
it<00:40:52.000><c> which</c><00:40:52.319><c> may</c><00:40:52.480><c> return</c><00:40:52.880><c> the</c><00:40:52.960><c> number</c><00:40:53.119><c> of</c><00:40:53.280><c> bytes</c>

00:40:53.589 --> 00:40:53.599 align:start position:0%
it which may return the number of bytes
 

00:40:53.599 --> 00:40:54.950 align:start position:0%
it which may return the number of bytes
read

00:40:54.950 --> 00:40:54.960 align:start position:0%
read
 

00:40:54.960 --> 00:40:57.990 align:start position:0%
read
which<00:40:55.119><c> would</c><00:40:55.359><c> be</c><00:40:56.160><c> six</c><00:40:56.560><c> in</c><00:40:56.640><c> the</c><00:40:56.800><c> case</c><00:40:57.040><c> of</c>

00:40:57.990 --> 00:40:58.000 align:start position:0%
which would be six in the case of
 

00:40:58.000 --> 00:41:01.109 align:start position:0%
which would be six in the case of
me<00:40:58.240><c> typing</c><00:40:58.560><c> xyz</c><00:40:59.359><c> y</c><00:41:00.000><c> um</c>

00:41:01.109 --> 00:41:01.119 align:start position:0%
me typing xyz y um
 

00:41:01.119 --> 00:41:02.950 align:start position:0%
me typing xyz y um
lead<00:41:01.440><c> might</c><00:41:01.599><c> be</c><00:41:01.760><c> reading</c><00:41:02.000><c> from</c><00:41:02.160><c> a</c><00:41:02.319><c> file</c><00:41:02.720><c> if</c><00:41:02.880><c> it</c>

00:41:02.950 --> 00:41:02.960 align:start position:0%
lead might be reading from a file if it
 

00:41:02.960 --> 00:41:04.309 align:start position:0%
lead might be reading from a file if it
gets<00:41:03.119><c> to</c><00:41:03.200><c> the</c><00:41:03.359><c> end</c><00:41:03.520><c> of</c><00:41:03.599><c> the</c><00:41:03.680><c> file</c><00:41:04.000><c> there's</c><00:41:04.160><c> no</c>

00:41:04.309 --> 00:41:04.319 align:start position:0%
gets to the end of the file there's no
 

00:41:04.319 --> 00:41:07.109 align:start position:0%
gets to the end of the file there's no
more<00:41:04.560><c> bytes</c><00:41:04.960><c> read</c><00:41:05.200><c> will</c><00:41:05.359><c> return</c><00:41:05.839><c> zero</c>

00:41:07.109 --> 00:41:07.119 align:start position:0%
more bytes read will return zero
 

00:41:07.119 --> 00:41:09.349 align:start position:0%
more bytes read will return zero
i<00:41:07.200><c> know</c><00:41:07.520><c> some</c><00:41:07.760><c> other</c><00:41:08.000><c> error</c><00:41:08.400><c> occurred</c><00:41:08.800><c> like</c>

00:41:09.349 --> 00:41:09.359 align:start position:0%
i know some other error occurred like
 

00:41:09.359 --> 00:41:11.349 align:start position:0%
i know some other error occurred like
the<00:41:09.520><c> file</c><00:41:09.760><c> descriptor</c><00:41:10.319><c> doesn't</c><00:41:10.640><c> exist</c>

00:41:11.349 --> 00:41:11.359 align:start position:0%
the file descriptor doesn't exist
 

00:41:11.359 --> 00:41:14.630 align:start position:0%
the file descriptor doesn't exist
read<00:41:11.599><c> may</c><00:41:11.839><c> return</c><00:41:12.319><c> minus</c><00:41:12.720><c> one</c><00:41:13.680><c> and</c><00:41:13.839><c> so</c>

00:41:14.630 --> 00:41:14.640 align:start position:0%
read may return minus one and so
 

00:41:14.640 --> 00:41:16.550 align:start position:0%
read may return minus one and so
in<00:41:14.800><c> many</c><00:41:15.040><c> of</c><00:41:15.119><c> these</c><00:41:15.280><c> examples</c><00:41:15.839><c> like</c><00:41:16.079><c> on</c><00:41:16.240><c> line</c>

00:41:16.550 --> 00:41:16.560 align:start position:0%
in many of these examples like on line
 

00:41:16.560 --> 00:41:18.230 align:start position:0%
in many of these examples like on line
16<00:41:17.040><c> there</c>

00:41:18.230 --> 00:41:18.240 align:start position:0%
16 there
 

00:41:18.240 --> 00:41:21.109 align:start position:0%
16 there
i<00:41:18.400><c> don't</c><00:41:18.960><c> my</c><00:41:19.359><c> example</c><00:41:19.839><c> code</c><00:41:20.160><c> doesn't</c><00:41:20.720><c> check</c>

00:41:21.109 --> 00:41:21.119 align:start position:0%
i don't my example code doesn't check
 

00:41:21.119 --> 00:41:23.430 align:start position:0%
i don't my example code doesn't check
system<00:41:21.520><c> call</c><00:41:21.760><c> returns</c><00:41:22.240><c> for</c><00:41:22.480><c> errors</c>

00:41:23.430 --> 00:41:23.440 align:start position:0%
system call returns for errors
 

00:41:23.440 --> 00:41:25.829 align:start position:0%
system call returns for errors
um<00:41:24.480><c> but</c><00:41:24.720><c> you</c><00:41:24.880><c> should</c><00:41:25.040><c> be</c><00:41:25.119><c> more</c><00:41:25.359><c> careful</c><00:41:25.680><c> than</c>

00:41:25.829 --> 00:41:25.839 align:start position:0%
um but you should be more careful than
 

00:41:25.839 --> 00:41:27.270 align:start position:0%
um but you should be more careful than
me<00:41:26.240><c> um</c>

00:41:27.270 --> 00:41:27.280 align:start position:0%
me um
 

00:41:27.280 --> 00:41:29.510 align:start position:0%
me um
uh<00:41:27.520><c> the</c><00:41:28.000><c> you</c><00:41:28.079><c> should</c><00:41:28.319><c> figure</c><00:41:28.640><c> out</c><00:41:28.800><c> how</c><00:41:29.119><c> system</c>

00:41:29.510 --> 00:41:29.520 align:start position:0%
uh the you should figure out how system
 

00:41:29.520 --> 00:41:31.510 align:start position:0%
uh the you should figure out how system
calls<00:41:30.000><c> reflect</c><00:41:30.400><c> errors</c><00:41:30.720><c> is</c><00:41:30.800><c> usually</c><00:41:31.040><c> a</c><00:41:31.119><c> minus</c>

00:41:31.510 --> 00:41:31.520 align:start position:0%
calls reflect errors is usually a minus
 

00:41:31.520 --> 00:41:33.109 align:start position:0%
calls reflect errors is usually a minus
one<00:41:31.760><c> return</c><00:41:32.160><c> value</c>

00:41:33.109 --> 00:41:33.119 align:start position:0%
one return value
 

00:41:33.119 --> 00:41:35.750 align:start position:0%
one return value
and<00:41:33.520><c> check</c><00:41:33.920><c> all</c><00:41:34.079><c> system</c><00:41:34.480><c> call</c><00:41:35.200><c> returns</c><00:41:35.599><c> for</c>

00:41:35.750 --> 00:41:35.760 align:start position:0%
and check all system call returns for
 

00:41:35.760 --> 00:41:37.190 align:start position:0%
and check all system call returns for
errors

00:41:37.190 --> 00:41:37.200 align:start position:0%
errors
 

00:41:37.200 --> 00:41:39.430 align:start position:0%
errors
and<00:41:37.680><c> if</c><00:41:38.000><c> if</c><00:41:38.160><c> you</c><00:41:38.240><c> want</c><00:41:38.319><c> to</c><00:41:38.400><c> know</c><00:41:38.560><c> what</c><00:41:38.720><c> the</c>

00:41:39.430 --> 00:41:39.440 align:start position:0%
and if if you want to know what the
 

00:41:39.440 --> 00:41:41.109 align:start position:0%
and if if you want to know what the
system<00:41:39.760><c> call</c><00:41:40.000><c> arguments</c><00:41:40.400><c> and</c><00:41:40.480><c> return</c><00:41:40.800><c> values</c>

00:41:41.109 --> 00:41:41.119 align:start position:0%
system call arguments and return values
 

00:41:41.119 --> 00:41:42.790 align:start position:0%
system call arguments and return values
are<00:41:41.280><c> there's</c><00:41:41.520><c> a</c><00:41:41.599><c> table</c><00:41:42.000><c> and</c>

00:41:42.790 --> 00:41:42.800 align:start position:0%
are there's a table and
 

00:41:42.800 --> 00:41:45.190 align:start position:0%
are there's a table and
i<00:41:42.880><c> think</c><00:41:43.040><c> chapter</c><00:41:43.440><c> 2</c><00:41:43.680><c> in</c><00:41:43.760><c> the</c><00:41:43.839><c> book</c><00:41:44.960><c> that</c>

00:41:45.190 --> 00:41:45.200 align:start position:0%
i think chapter 2 in the book that
 

00:41:45.200 --> 00:41:47.589 align:start position:0%
i think chapter 2 in the book that
explains<00:41:45.680><c> all</c><00:41:45.920><c> of</c><00:41:46.000><c> the</c><00:41:46.240><c> xv6</c>

00:41:47.589 --> 00:41:47.599 align:start position:0%
explains all of the xv6
 

00:41:47.599 --> 00:41:50.790 align:start position:0%
explains all of the xv6
system<00:41:47.920><c> call</c><00:41:48.160><c> arguments</c><00:41:48.960><c> and</c>

00:41:50.790 --> 00:41:50.800 align:start position:0%
system call arguments and
 

00:41:50.800 --> 00:41:54.069 align:start position:0%
system call arguments and
return<00:41:51.200><c> values</c><00:41:52.640><c> the</c><00:41:52.880><c> question</c><00:41:53.200><c> regarding</c><00:41:53.760><c> the</c>

00:41:54.069 --> 00:41:54.079 align:start position:0%
return values the question regarding the
 

00:41:54.079 --> 00:41:57.109 align:start position:0%
return values the question regarding the
resist<00:41:54.800><c> call</c><00:41:55.440><c> what</c><00:41:55.680><c> if</c><00:41:55.839><c> we</c><00:41:56.079><c> set</c><00:41:56.319><c> the</c><00:41:56.480><c> max</c><00:41:56.800><c> read</c>

00:41:57.109 --> 00:41:57.119 align:start position:0%
resist call what if we set the max read
 

00:41:57.119 --> 00:41:57.829 align:start position:0%
resist call what if we set the max read
bytes<00:41:57.440><c> to</c>

00:41:57.829 --> 00:41:57.839 align:start position:0%
bytes to
 

00:41:57.839 --> 00:42:00.710 align:start position:0%
bytes to
size<00:41:58.160><c> of</c><00:41:58.319><c> buff</c><00:41:58.800><c> to</c><00:41:59.200><c> one</c><00:41:59.440><c> plus</c><00:41:59.760><c> size</c><00:42:00.079><c> of</c><00:42:00.160><c> buff</c><00:42:00.560><c> or</c>

00:42:00.710 --> 00:42:00.720 align:start position:0%
size of buff to one plus size of buff or
 

00:42:00.720 --> 00:42:01.349 align:start position:0%
size of buff to one plus size of buff or
bigger

00:42:01.349 --> 00:42:01.359 align:start position:0%
bigger
 

00:42:01.359 --> 00:42:02.630 align:start position:0%
bigger
so<00:42:01.520><c> what</c><00:42:01.599><c> if</c><00:42:01.760><c> we</c><00:42:01.839><c> try</c><00:42:02.000><c> to</c><00:42:02.079><c> read</c><00:42:02.240><c> more</c><00:42:02.400><c> than</c><00:42:02.560><c> the</c>

00:42:02.630 --> 00:42:02.640 align:start position:0%
so what if we try to read more than the
 

00:42:02.640 --> 00:42:04.550 align:start position:0%
so what if we try to read more than the
size<00:42:03.040><c> yeah</c><00:42:03.280><c> then</c><00:42:03.920><c> if</c><00:42:04.079><c> there</c><00:42:04.240><c> was</c>

00:42:04.550 --> 00:42:04.560 align:start position:0%
size yeah then if there was
 

00:42:04.560 --> 00:42:07.990 align:start position:0%
size yeah then if there was
65<00:42:05.520><c> bytes</c><00:42:06.079><c> to</c><00:42:06.240><c> read</c><00:42:06.880><c> then</c><00:42:07.200><c> the</c><00:42:07.520><c> operating</c>

00:42:07.990 --> 00:42:08.000 align:start position:0%
65 bytes to read then the operating
 

00:42:08.000 --> 00:42:09.190 align:start position:0%
65 bytes to read then the operating
system<00:42:08.319><c> would</c><00:42:08.560><c> happily</c>

00:42:09.190 --> 00:42:09.200 align:start position:0%
system would happily
 

00:42:09.200 --> 00:42:12.550 align:start position:0%
system would happily
we'll<00:42:09.359><c> just</c><00:42:10.079><c> copy</c><00:42:10.400><c> those</c><00:42:10.640><c> 65</c><00:42:11.359><c> bytes</c>

00:42:12.550 --> 00:42:12.560 align:start position:0%
we'll just copy those 65 bytes
 

00:42:12.560 --> 00:42:15.589 align:start position:0%
we'll just copy those 65 bytes
to<00:42:12.720><c> the</c><00:42:12.800><c> memory</c><00:42:13.599><c> that</c><00:42:13.760><c> you</c><00:42:13.920><c> provide</c><00:42:14.720><c> and</c><00:42:15.520><c> of</c>

00:42:15.589 --> 00:42:15.599 align:start position:0%
to the memory that you provide and of
 

00:42:15.599 --> 00:42:16.150 align:start position:0%
to the memory that you provide and of
course

00:42:16.150 --> 00:42:16.160 align:start position:0%
course
 

00:42:16.160 --> 00:42:17.589 align:start position:0%
course
there's<00:42:16.480><c> something</c><00:42:16.720><c> else</c><00:42:16.880><c> on</c><00:42:16.960><c> the</c><00:42:17.119><c> stack</c><00:42:17.440><c> up</c>

00:42:17.589 --> 00:42:17.599 align:start position:0%
there's something else on the stack up
 

00:42:17.599 --> 00:42:20.069 align:start position:0%
there's something else on the stack up
there<00:42:18.000><c> maybe</c><00:42:18.640><c> the</c><00:42:18.800><c> return</c><00:42:19.200><c> program</c><00:42:19.599><c> encounter</c>

00:42:20.069 --> 00:42:20.079 align:start position:0%
there maybe the return program encounter
 

00:42:20.079 --> 00:42:21.510 align:start position:0%
there maybe the return program encounter
or<00:42:20.160><c> an</c><00:42:20.319><c> argument</c><00:42:20.800><c> or</c><00:42:20.880><c> something</c>

00:42:21.510 --> 00:42:21.520 align:start position:0%
or an argument or something
 

00:42:21.520 --> 00:42:24.309 align:start position:0%
or an argument or something
and<00:42:21.920><c> so</c><00:42:22.160><c> if</c><00:42:22.319><c> you</c><00:42:22.400><c> pass</c><00:42:22.640><c> 65</c><00:42:23.839><c> then</c><00:42:24.000><c> you're</c>

00:42:24.309 --> 00:42:24.319 align:start position:0%
and so if you pass 65 then you're
 

00:42:24.319 --> 00:42:25.670 align:start position:0%
and so if you pass 65 then you're
inviting<00:42:24.640><c> the</c><00:42:24.880><c> colonel</c><00:42:25.359><c> to</c>

00:42:25.670 --> 00:42:25.680 align:start position:0%
inviting the colonel to
 

00:42:25.680 --> 00:42:28.950 align:start position:0%
inviting the colonel to
write<00:42:26.079><c> junk</c><00:42:27.040><c> um</c><00:42:27.760><c> to</c><00:42:27.920><c> an</c><00:42:28.079><c> unexpected</c><00:42:28.640><c> place</c><00:42:28.880><c> in</c>

00:42:28.950 --> 00:42:28.960 align:start position:0%
write junk um to an unexpected place in
 

00:42:28.960 --> 00:42:30.230 align:start position:0%
write junk um to an unexpected place in
your<00:42:29.119><c> stack</c>

00:42:30.230 --> 00:42:30.240 align:start position:0%
your stack
 

00:42:30.240 --> 00:42:32.870 align:start position:0%
your stack
and<00:42:30.480><c> so</c><00:42:30.640><c> that's</c><00:42:30.800><c> a</c><00:42:30.880><c> bug</c><00:42:31.839><c> and</c><00:42:32.240><c> it</c><00:42:32.400><c> may</c><00:42:32.560><c> cause</c><00:42:32.800><c> you</c>

00:42:32.870 --> 00:42:32.880 align:start position:0%
and so that's a bug and it may cause you
 

00:42:32.880 --> 00:42:34.230 align:start position:0%
and so that's a bug and it may cause you
for<00:42:33.040><c> him</c><00:42:33.119><c> to</c><00:42:33.280><c> crash</c>

00:42:34.230 --> 00:42:34.240 align:start position:0%
for him to crash
 

00:42:34.240 --> 00:42:37.270 align:start position:0%
for him to crash
or<00:42:34.480><c> do</c><00:42:34.640><c> something</c><00:42:34.960><c> else</c><00:42:35.680><c> unexpected</c><00:42:36.880><c> um</c>

00:42:37.270 --> 00:42:37.280 align:start position:0%
or do something else unexpected um
 

00:42:37.280 --> 00:42:38.950 align:start position:0%
or do something else unexpected um
so<00:42:37.520><c> as</c><00:42:37.680><c> a</c><00:42:37.760><c> programmer</c><00:42:38.240><c> you're</c><00:42:38.560><c> you</c><00:42:38.720><c> have</c><00:42:38.800><c> to</c><00:42:38.880><c> be</c>

00:42:38.950 --> 00:42:38.960 align:start position:0%
so as a programmer you're you have to be
 

00:42:38.960 --> 00:42:40.710 align:start position:0%
so as a programmer you're you have to be
careful<00:42:39.359><c> here</c><00:42:39.520><c> there's</c><00:42:39.680><c> nobody</c>

00:42:40.710 --> 00:42:40.720 align:start position:0%
careful here there's nobody
 

00:42:40.720 --> 00:42:42.309 align:start position:0%
careful here there's nobody
writing<00:42:41.040><c> in</c><00:42:41.200><c> c</c><00:42:41.680><c> with</c><00:42:41.839><c> these</c><00:42:42.079><c> kind</c><00:42:42.240><c> of</c>

00:42:42.309 --> 00:42:42.319 align:start position:0%
writing in c with these kind of
 

00:42:42.319 --> 00:42:44.790 align:start position:0%
writing in c with these kind of
interfaces<00:42:42.880><c> there's</c>

00:42:44.790 --> 00:42:44.800 align:start position:0%
interfaces there's
 

00:42:44.800 --> 00:42:47.349 align:start position:0%
interfaces there's
it's<00:42:45.040><c> very</c><00:42:45.359><c> very</c><00:42:45.599><c> easy</c><00:42:45.839><c> to</c><00:42:46.000><c> write</c><00:42:46.319><c> code</c><00:42:46.880><c> that</c>

00:42:47.349 --> 00:42:47.359 align:start position:0%
it's very very easy to write code that
 

00:42:47.359 --> 00:42:49.109 align:start position:0%
it's very very easy to write code that
the<00:42:47.520><c> compiler</c><00:42:48.000><c> is</c><00:42:48.079><c> happy</c><00:42:48.319><c> with</c><00:42:48.560><c> and</c><00:42:48.640><c> will</c><00:42:48.800><c> run</c>

00:42:49.109 --> 00:42:49.119 align:start position:0%
the compiler is happy with and will run
 

00:42:49.119 --> 00:42:49.430 align:start position:0%
the compiler is happy with and will run
but

00:42:49.430 --> 00:42:49.440 align:start position:0%
but
 

00:42:49.440 --> 00:42:53.190 align:start position:0%
but
absolutely<00:42:50.079><c> does</c><00:42:50.240><c> the</c><00:42:50.400><c> wrong</c><00:42:50.640><c> thing</c>

00:42:53.190 --> 00:42:53.200 align:start position:0%
 
 

00:42:53.200 --> 00:42:56.550 align:start position:0%
 
so<00:42:54.640><c> that's</c><00:42:54.880><c> too</c><00:42:55.040><c> bad</c><00:42:55.280><c> but</c><00:42:55.680><c> um</c><00:42:56.079><c> that's</c><00:42:56.319><c> the</c><00:42:56.400><c> way</c>

00:42:56.550 --> 00:42:56.560 align:start position:0%
so that's too bad but um that's the way
 

00:42:56.560 --> 00:43:00.470 align:start position:0%
so that's too bad but um that's the way
it<00:42:56.839><c> is</c>

00:43:00.470 --> 00:43:00.480 align:start position:0%
 
 

00:43:00.480 --> 00:43:03.750 align:start position:0%
 
okay<00:43:01.040><c> uh</c><00:43:01.359><c> one</c><00:43:01.520><c> thing</c><00:43:01.680><c> to</c><00:43:01.920><c> note</c><00:43:02.240><c> is</c><00:43:02.400><c> that</c><00:43:03.440><c> this</c>

00:43:03.750 --> 00:43:03.760 align:start position:0%
okay uh one thing to note is that this
 

00:43:03.760 --> 00:43:05.430 align:start position:0%
okay uh one thing to note is that this
copy<00:43:04.160><c> program</c><00:43:04.640><c> and</c><00:43:04.800><c> indeed</c><00:43:05.119><c> the</c><00:43:05.200><c> read</c><00:43:05.359><c> and</c>

00:43:05.430 --> 00:43:05.440 align:start position:0%
copy program and indeed the read and
 

00:43:05.440 --> 00:43:06.550 align:start position:0%
copy program and indeed the read and
write<00:43:05.680><c> system</c><00:43:06.000><c> calls</c>

00:43:06.550 --> 00:43:06.560 align:start position:0%
write system calls
 

00:43:06.560 --> 00:43:08.390 align:start position:0%
write system calls
they<00:43:06.720><c> don't</c><00:43:07.119><c> care</c><00:43:07.359><c> about</c><00:43:07.520><c> the</c><00:43:07.680><c> format</c><00:43:08.000><c> of</c><00:43:08.160><c> data</c>

00:43:08.390 --> 00:43:08.400 align:start position:0%
they don't care about the format of data
 

00:43:08.400 --> 00:43:09.829 align:start position:0%
they don't care about the format of data
they're<00:43:08.560><c> reading</c><00:43:08.880><c> or</c><00:43:09.040><c> writing</c>

00:43:09.829 --> 00:43:09.839 align:start position:0%
they're reading or writing
 

00:43:09.839 --> 00:43:11.750 align:start position:0%
they're reading or writing
they<00:43:10.000><c> just</c><00:43:10.480><c> read</c><00:43:10.720><c> them</c><00:43:10.800><c> write</c><00:43:11.280><c> and</c><00:43:11.440><c> read</c><00:43:11.680><c> and</c>

00:43:11.750 --> 00:43:11.760 align:start position:0%
they just read them write and read and
 

00:43:11.760 --> 00:43:13.990 align:start position:0%
they just read them write and read and
write<00:43:12.240><c> and</c><00:43:12.400><c> this</c><00:43:12.560><c> copy</c><00:43:12.880><c> program</c>

00:43:13.990 --> 00:43:14.000 align:start position:0%
write and this copy program
 

00:43:14.000 --> 00:43:16.150 align:start position:0%
write and this copy program
just<00:43:14.240><c> deal</c><00:43:14.480><c> with</c><00:43:14.640><c> 8-bit</c><00:43:15.119><c> bytes</c><00:43:15.520><c> with</c><00:43:15.760><c> streams</c>

00:43:16.150 --> 00:43:16.160 align:start position:0%
just deal with 8-bit bytes with streams
 

00:43:16.160 --> 00:43:18.550 align:start position:0%
just deal with 8-bit bytes with streams
of<00:43:16.319><c> 8-bit</c><00:43:16.720><c> bytes</c>

00:43:18.550 --> 00:43:18.560 align:start position:0%
of 8-bit bytes
 

00:43:18.560 --> 00:43:20.550 align:start position:0%
of 8-bit bytes
how<00:43:18.800><c> you</c><00:43:18.960><c> interpret</c><00:43:19.440><c> them</c><00:43:19.760><c> is</c><00:43:20.000><c> totally</c><00:43:20.319><c> up</c><00:43:20.400><c> to</c>

00:43:20.550 --> 00:43:20.560 align:start position:0%
how you interpret them is totally up to
 

00:43:20.560 --> 00:43:23.510 align:start position:0%
how you interpret them is totally up to
the<00:43:20.640><c> application</c><00:43:21.119><c> so</c><00:43:21.280><c> the</c><00:43:21.359><c> application</c><00:43:22.079><c> maybe</c>

00:43:23.510 --> 00:43:23.520 align:start position:0%
the application so the application maybe
 

00:43:23.520 --> 00:43:26.150 align:start position:0%
the application so the application maybe
parse<00:43:23.839><c> these</c><00:43:24.480><c> as</c><00:43:24.640><c> data</c><00:43:25.040><c> records</c><00:43:25.520><c> or</c><00:43:25.680><c> as</c><00:43:25.920><c> c</c>

00:43:26.150 --> 00:43:26.160 align:start position:0%
parse these as data records or as c
 

00:43:26.160 --> 00:43:28.870 align:start position:0%
parse these as data records or as c
source<00:43:26.480><c> code</c><00:43:26.720><c> or</c><00:43:26.880><c> who</c><00:43:27.040><c> knows</c><00:43:27.280><c> what</c>

00:43:28.870 --> 00:43:28.880 align:start position:0%
source code or who knows what
 

00:43:28.880 --> 00:43:32.630 align:start position:0%
source code or who knows what
the<00:43:29.040><c> operating</c><00:43:29.440><c> system</c><00:43:30.400><c> um</c>

00:43:32.630 --> 00:43:32.640 align:start position:0%
the operating system um
 

00:43:32.640 --> 00:43:34.550 align:start position:0%
the operating system um
it<00:43:33.040><c> only</c><00:43:33.359><c> thinks</c><00:43:33.599><c> in</c><00:43:33.680><c> terms</c><00:43:34.000><c> of</c><00:43:34.079><c> a</c><00:43:34.160><c> stream</c><00:43:34.480><c> of</c>

00:43:34.550 --> 00:43:34.560 align:start position:0%
it only thinks in terms of a stream of
 

00:43:34.560 --> 00:43:36.230 align:start position:0%
it only thinks in terms of a stream of
8-bit<00:43:34.960><c> bytes</c>

00:43:36.230 --> 00:43:36.240 align:start position:0%
8-bit bytes
 

00:43:36.240 --> 00:43:39.190 align:start position:0%
8-bit bytes
okay<00:43:36.480><c> so</c><00:43:36.960><c> copy</c><00:43:37.359><c> assume</c><00:43:38.160><c> this</c><00:43:38.319><c> code</c><00:43:38.720><c> my</c><00:43:38.880><c> copy</c>

00:43:39.190 --> 00:43:39.200 align:start position:0%
okay so copy assume this code my copy
 

00:43:39.200 --> 00:43:40.309 align:start position:0%
okay so copy assume this code my copy
program<00:43:39.520><c> assumed</c><00:43:39.839><c> that</c><00:43:40.000><c> the</c><00:43:40.079><c> file</c>

00:43:40.309 --> 00:43:40.319 align:start position:0%
program assumed that the file
 

00:43:40.319 --> 00:43:42.150 align:start position:0%
program assumed that the file
descriptors<00:43:40.800><c> were</c><00:43:40.960><c> already</c><00:43:41.200><c> set</c><00:43:41.440><c> up</c>

00:43:42.150 --> 00:43:42.160 align:start position:0%
descriptors were already set up
 

00:43:42.160 --> 00:43:44.550 align:start position:0%
descriptors were already set up
um<00:43:42.720><c> but</c><00:43:42.880><c> we</c><00:43:43.040><c> need</c><00:43:43.200><c> to</c><00:43:43.839><c> we</c><00:43:44.000><c> need</c><00:43:44.079><c> to</c><00:43:44.160><c> have</c><00:43:44.319><c> a</c><00:43:44.400><c> way</c>

00:43:44.550 --> 00:43:44.560 align:start position:0%
um but we need to we need to have a way
 

00:43:44.560 --> 00:43:46.230 align:start position:0%
um but we need to we need to have a way
to<00:43:44.640><c> create</c><00:43:44.960><c> file</c><00:43:45.200><c> descriptors</c>

00:43:46.230 --> 00:43:46.240 align:start position:0%
to create file descriptors
 

00:43:46.240 --> 00:43:47.829 align:start position:0%
to create file descriptors
and<00:43:46.560><c> the</c><00:43:46.720><c> most</c><00:43:46.960><c> straightforward</c><00:43:47.440><c> way</c><00:43:47.599><c> to</c><00:43:47.680><c> do</c>

00:43:47.829 --> 00:43:47.839 align:start position:0%
and the most straightforward way to do
 

00:43:47.839 --> 00:43:50.069 align:start position:0%
and the most straightforward way to do
that<00:43:48.240><c> is</c><00:43:49.200><c> um</c>

00:43:50.069 --> 00:43:50.079 align:start position:0%
that is um
 

00:43:50.079 --> 00:43:52.069 align:start position:0%
that is um
with<00:43:50.240><c> the</c><00:43:50.480><c> open</c><00:43:50.800><c> system</c><00:43:51.119><c> call</c><00:43:51.599><c> and</c><00:43:51.680><c> so</c><00:43:51.839><c> here's</c>

00:43:52.069 --> 00:43:52.079 align:start position:0%
with the open system call and so here's
 

00:43:52.079 --> 00:43:54.309 align:start position:0%
with the open system call and so here's
the<00:43:52.240><c> source</c><00:43:52.640><c> for</c><00:43:52.880><c> a</c><00:43:53.040><c> program</c><00:43:53.680><c> that</c>

00:43:54.309 --> 00:43:54.319 align:start position:0%
the source for a program that
 

00:43:54.319 --> 00:43:58.230 align:start position:0%
the source for a program that
called<00:43:54.640><c> open</c><00:43:55.680><c> that</c>

00:43:58.230 --> 00:43:58.240 align:start position:0%
 
 

00:43:58.240 --> 00:44:00.710 align:start position:0%
 
uses<00:43:58.560><c> the</c><00:43:58.720><c> open</c><00:43:59.040><c> system</c><00:43:59.359><c> call</c><00:44:00.160><c> a</c><00:44:00.400><c> question</c>

00:44:00.710 --> 00:44:00.720 align:start position:0%
uses the open system call a question
 

00:44:00.720 --> 00:44:01.589 align:start position:0%
uses the open system call a question
from<00:44:00.880><c> the</c><00:44:01.119><c> chat</c>

00:44:01.589 --> 00:44:01.599 align:start position:0%
from the chat
 

00:44:01.599 --> 00:44:07.109 align:start position:0%
from the chat
what<00:44:01.760><c> do</c><00:44:01.920><c> you</c><00:44:02.079><c> mean</c><00:44:02.480><c> by</c><00:44:02.960><c> a</c><00:44:03.200><c> stream</c><00:44:03.760><c> of</c><00:44:03.920><c> bytes</c>

00:44:07.109 --> 00:44:07.119 align:start position:0%
 
 

00:44:07.119 --> 00:44:10.470 align:start position:0%
 
i i<00:44:08.079><c> i</c><00:44:08.400><c> just</c><00:44:08.640><c> mean</c><00:44:08.800><c> that</c><00:44:09.040><c> if</c><00:44:09.200><c> a</c><00:44:09.359><c> file</c><00:44:09.760><c> contains</c>

00:44:10.470 --> 00:44:10.480 align:start position:0%
i i i just mean that if a file contains
 

00:44:10.480 --> 00:44:12.150 align:start position:0%
i i i just mean that if a file contains
a<00:44:10.560><c> bunch</c><00:44:10.800><c> of</c><00:44:10.880><c> bytes</c>

00:44:12.150 --> 00:44:12.160 align:start position:0%
a bunch of bytes
 

00:44:12.160 --> 00:44:14.630 align:start position:0%
a bunch of bytes
then<00:44:12.640><c> read</c><00:44:13.200><c> and</c><00:44:13.440><c> successive</c><00:44:14.000><c> yes</c><00:44:14.240><c> building</c><00:44:14.560><c> a</c>

00:44:14.630 --> 00:44:14.640 align:start position:0%
then read and successive yes building a
 

00:44:14.640 --> 00:44:16.790 align:start position:0%
then read and successive yes building a
file<00:44:14.960><c> contains</c><00:44:15.359><c> a</c><00:44:15.440><c> million</c><00:44:15.839><c> bytes</c>

00:44:16.790 --> 00:44:16.800 align:start position:0%
file contains a million bytes
 

00:44:16.800 --> 00:44:19.430 align:start position:0%
file contains a million bytes
if<00:44:16.880><c> you</c><00:44:17.040><c> make</c><00:44:17.200><c> a</c><00:44:17.280><c> sequence</c><00:44:17.839><c> of</c><00:44:18.400><c> recalls</c><00:44:19.119><c> each</c>

00:44:19.430 --> 00:44:19.440 align:start position:0%
if you make a sequence of recalls each
 

00:44:19.440 --> 00:44:21.349 align:start position:0%
if you make a sequence of recalls each
for<00:44:19.599><c> 100</c><00:44:19.920><c> bytes</c>

00:44:21.349 --> 00:44:21.359 align:start position:0%
for 100 bytes
 

00:44:21.359 --> 00:44:22.790 align:start position:0%
for 100 bytes
it'll<00:44:21.520><c> just</c><00:44:21.760><c> read</c><00:44:21.920><c> the</c><00:44:22.000><c> first</c><00:44:22.240><c> hundred</c><00:44:22.480><c> bytes</c>

00:44:22.790 --> 00:44:22.800 align:start position:0%
it'll just read the first hundred bytes
 

00:44:22.800 --> 00:44:23.990 align:start position:0%
it'll just read the first hundred bytes
and<00:44:22.880><c> then</c><00:44:23.040><c> the</c><00:44:23.119><c> second</c><00:44:23.359><c> hundred</c><00:44:23.680><c> bytes</c><00:44:23.920><c> and</c>

00:44:23.990 --> 00:44:24.000 align:start position:0%
and then the second hundred bytes and
 

00:44:24.000 --> 00:44:24.470 align:start position:0%
and then the second hundred bytes and
then

00:44:24.470 --> 00:44:24.480 align:start position:0%
then
 

00:44:24.480 --> 00:44:27.829 align:start position:0%
then
the<00:44:24.640><c> third</c><00:44:24.880><c> hundred</c><00:44:25.200><c> bytes</c><00:44:26.480><c> um</c>

00:44:27.829 --> 00:44:27.839 align:start position:0%
the third hundred bytes um
 

00:44:27.839 --> 00:44:31.910 align:start position:0%
the third hundred bytes um
that's<00:44:28.079><c> all</c><00:44:28.160><c> i</c><00:44:28.319><c> mean</c>

00:44:31.910 --> 00:44:31.920 align:start position:0%
 
 

00:44:31.920 --> 00:44:34.870 align:start position:0%
 
all<00:44:32.079><c> right</c><00:44:32.160><c> so</c><00:44:32.319><c> this</c><00:44:32.560><c> program</c><00:44:33.280><c> um</c><00:44:33.760><c> called</c><00:44:34.079><c> open</c>

00:44:34.870 --> 00:44:34.880 align:start position:0%
all right so this program um called open
 

00:44:34.880 --> 00:44:36.870 align:start position:0%
all right so this program um called open
first<00:44:35.119><c> i'll</c><00:44:35.200><c> run</c><00:44:35.440><c> it</c><00:44:35.520><c> for</c><00:44:35.680><c> you</c>

00:44:36.870 --> 00:44:36.880 align:start position:0%
first i'll run it for you
 

00:44:36.880 --> 00:44:40.069 align:start position:0%
first i'll run it for you
what<00:44:37.040><c> it</c><00:44:37.200><c> does</c><00:44:37.520><c> is</c><00:44:38.720><c> uh</c><00:44:39.119><c> opens</c><00:44:39.520><c> creates</c><00:44:39.920><c> a</c><00:44:39.920><c> new</c>

00:44:40.069 --> 00:44:40.079 align:start position:0%
what it does is uh opens creates a new
 

00:44:40.079 --> 00:44:42.470 align:start position:0%
what it does is uh opens creates a new
file<00:44:40.480><c> called</c><00:44:40.760><c> output.txt</c><00:44:41.839><c> and</c><00:44:41.920><c> then</c><00:44:42.160><c> writes</c>

00:44:42.470 --> 00:44:42.480 align:start position:0%
file called output.txt and then writes
 

00:44:42.480 --> 00:44:43.190 align:start position:0%
file called output.txt and then writes
some

00:44:43.190 --> 00:44:43.200 align:start position:0%
some
 

00:44:43.200 --> 00:44:45.829 align:start position:0%
some
bytes<00:44:43.599><c> to</c><00:44:43.760><c> it</c><00:44:44.480><c> and</c><00:44:44.880><c> then</c><00:44:45.040><c> it</c><00:44:45.119><c> finishes</c><00:44:45.599><c> so</c><00:44:45.680><c> we</c>

00:44:45.829 --> 00:44:45.839 align:start position:0%
bytes to it and then it finishes so we
 

00:44:45.839 --> 00:44:47.430 align:start position:0%
bytes to it and then it finishes so we
don't<00:44:45.920><c> see</c><00:44:46.160><c> anything</c><00:44:46.560><c> because</c><00:44:46.800><c> it</c>

00:44:47.430 --> 00:44:47.440 align:start position:0%
don't see anything because it
 

00:44:47.440 --> 00:44:49.190 align:start position:0%
don't see anything because it
broke<00:44:47.760><c> data</c><00:44:48.000><c> to</c><00:44:48.160><c> this</c><00:44:48.319><c> file</c><00:44:48.560><c> it</c><00:44:48.720><c> opened</c><00:44:48.960><c> but</c><00:44:49.119><c> we</c>

00:44:49.190 --> 00:44:49.200 align:start position:0%
broke data to this file it opened but we
 

00:44:49.200 --> 00:44:52.470 align:start position:0%
broke data to this file it opened but we
can<00:44:49.599><c> look</c><00:44:50.400><c> at</c><00:44:50.640><c> this</c><00:44:50.920><c> output.txt</c><00:44:52.000><c> file</c><00:44:52.240><c> that</c><00:44:52.319><c> it</c>

00:44:52.470 --> 00:44:52.480 align:start position:0%
can look at this output.txt file that it
 

00:44:52.480 --> 00:44:53.430 align:start position:0%
can look at this output.txt file that it
created

00:44:53.430 --> 00:44:53.440 align:start position:0%
created
 

00:44:53.440 --> 00:44:56.630 align:start position:0%
created
and<00:44:54.319><c> see</c><00:44:55.280><c> the</c><00:44:55.440><c> ooo</c><00:44:56.079><c> that</c><00:44:56.319><c> it</c>

00:44:56.630 --> 00:44:56.640 align:start position:0%
and see the ooo that it
 

00:44:56.640 --> 00:45:00.390 align:start position:0%
and see the ooo that it
wrote<00:44:56.960><c> there</c><00:44:57.359><c> so</c><00:44:57.760><c> line</c><00:44:58.240><c> 11</c><00:44:58.560><c> in</c><00:44:58.640><c> the</c><00:44:58.800><c> program</c><00:44:59.440><c> is</c>

00:45:00.390 --> 00:45:00.400 align:start position:0%
wrote there so line 11 in the program is
 

00:45:00.400 --> 00:45:02.950 align:start position:0%
wrote there so line 11 in the program is
makes<00:45:00.640><c> the</c><00:45:00.800><c> open</c><00:45:01.200><c> system</c><00:45:01.599><c> call</c><00:45:02.480><c> gives</c><00:45:02.720><c> it</c><00:45:02.800><c> a</c>

00:45:02.950 --> 00:45:02.960 align:start position:0%
makes the open system call gives it a
 

00:45:02.960 --> 00:45:05.109 align:start position:0%
makes the open system call gives it a
file<00:45:03.200><c> name</c><00:45:03.560><c> output.text</c><00:45:04.640><c> and</c>

00:45:05.109 --> 00:45:05.119 align:start position:0%
file name output.text and
 

00:45:05.119 --> 00:45:08.069 align:start position:0%
file name output.text and
the<00:45:05.520><c> o</c><00:45:05.839><c> underscore</c><00:45:06.560><c> stuff</c><00:45:07.200><c> um</c><00:45:07.599><c> in</c><00:45:07.680><c> the</c><00:45:07.760><c> second</c>

00:45:08.069 --> 00:45:08.079 align:start position:0%
the o underscore stuff um in the second
 

00:45:08.079 --> 00:45:09.349 align:start position:0%
the o underscore stuff um in the second
argument<00:45:08.400><c> to</c><00:45:08.480><c> open</c><00:45:08.800><c> are</c>

00:45:09.349 --> 00:45:09.359 align:start position:0%
argument to open are
 

00:45:09.359 --> 00:45:12.550 align:start position:0%
argument to open are
flags<00:45:10.160><c> that</c><00:45:10.800><c> tell</c><00:45:11.200><c> the</c><00:45:11.359><c> open</c><00:45:11.680><c> system</c><00:45:12.079><c> call</c>

00:45:12.550 --> 00:45:12.560 align:start position:0%
flags that tell the open system call
 

00:45:12.560 --> 00:45:14.390 align:start position:0%
flags that tell the open system call
implementation<00:45:13.280><c> in</c><00:45:13.359><c> the</c><00:45:13.440><c> kernel</c><00:45:13.839><c> that</c><00:45:14.240><c> we'd</c>

00:45:14.390 --> 00:45:14.400 align:start position:0%
implementation in the kernel that we'd
 

00:45:14.400 --> 00:45:16.470 align:start position:0%
implementation in the kernel that we'd
like<00:45:14.560><c> to</c><00:45:14.800><c> create</c><00:45:15.200><c> a</c><00:45:15.359><c> file</c><00:45:15.599><c> with</c><00:45:15.839><c> its</c><00:45:16.000><c> name</c>

00:45:16.470 --> 00:45:16.480 align:start position:0%
like to create a file with its name
 

00:45:16.480 --> 00:45:19.190 align:start position:0%
like to create a file with its name
and<00:45:16.640><c> that</c><00:45:16.880><c> we're</c><00:45:17.040><c> going</c><00:45:17.119><c> to</c><00:45:17.200><c> write</c><00:45:17.440><c> it</c><00:45:18.720><c> open</c>

00:45:19.190 --> 00:45:19.200 align:start position:0%
and that we're going to write it open
 

00:45:19.200 --> 00:45:20.870 align:start position:0%
and that we're going to write it open
returns<00:45:19.599><c> a</c><00:45:19.760><c> newly</c><00:45:20.240><c> allocated</c><00:45:20.720><c> file</c>

00:45:20.870 --> 00:45:20.880 align:start position:0%
returns a newly allocated file
 

00:45:20.880 --> 00:45:23.589 align:start position:0%
returns a newly allocated file
descriptor

00:45:23.589 --> 00:45:23.599 align:start position:0%
 
 

00:45:23.599 --> 00:45:25.030 align:start position:0%
 
and<00:45:23.760><c> the</c><00:45:23.839><c> file</c><00:45:24.000><c> the</c><00:45:24.160><c> script</c><00:45:24.319><c> is</c><00:45:24.480><c> just</c><00:45:24.640><c> a</c><00:45:24.720><c> small</c>

00:45:25.030 --> 00:45:25.040 align:start position:0%
and the file the script is just a small
 

00:45:25.040 --> 00:45:26.630 align:start position:0%
and the file the script is just a small
number<00:45:25.520><c> it's</c><00:45:25.760><c> probably</c><00:45:26.079><c> two</c><00:45:26.240><c> or</c><00:45:26.319><c> three</c><00:45:26.480><c> or</c>

00:45:26.630 --> 00:45:26.640 align:start position:0%
number it's probably two or three or
 

00:45:26.640 --> 00:45:28.550 align:start position:0%
number it's probably two or three or
four<00:45:26.800><c> or</c><00:45:26.880><c> something</c>

00:45:28.550 --> 00:45:28.560 align:start position:0%
four or something
 

00:45:28.560 --> 00:45:29.750 align:start position:0%
four or something
and<00:45:28.640><c> then</c><00:45:28.720><c> we</c><00:45:28.880><c> pass</c><00:45:29.119><c> that</c><00:45:29.280><c> same</c><00:45:29.520><c> file</c>

00:45:29.750 --> 00:45:29.760 align:start position:0%
and then we pass that same file
 

00:45:29.760 --> 00:45:32.150 align:start position:0%
and then we pass that same file
descriptor<00:45:30.240><c> to</c><00:45:30.400><c> write</c><00:45:31.200><c> along</c><00:45:31.440><c> with</c><00:45:31.599><c> a</c><00:45:31.680><c> buffer</c>

00:45:32.150 --> 00:45:32.160 align:start position:0%
descriptor to write along with a buffer
 

00:45:32.160 --> 00:45:35.190 align:start position:0%
descriptor to write along with a buffer
and<00:45:32.400><c> a</c><00:45:33.200><c> number</c><00:45:33.440><c> of</c><00:45:33.520><c> bytes</c><00:45:33.839><c> to</c><00:45:34.000><c> write</c><00:45:34.960><c> that</c>

00:45:35.190 --> 00:45:35.200 align:start position:0%
and a number of bytes to write that
 

00:45:35.200 --> 00:45:37.109 align:start position:0%
and a number of bytes to write that
writes<00:45:35.520><c> data</c><00:45:35.920><c> to</c>

00:45:37.109 --> 00:45:37.119 align:start position:0%
writes data to
 

00:45:37.119 --> 00:45:39.430 align:start position:0%
writes data to
the<00:45:37.359><c> file</c><00:45:37.839><c> that</c><00:45:38.000><c> the</c><00:45:38.079><c> file</c><00:45:38.319><c> descriptor</c><00:45:39.040><c> refers</c>

00:45:39.430 --> 00:45:39.440 align:start position:0%
the file that the file descriptor refers
 

00:45:39.440 --> 00:45:41.430 align:start position:0%
the file that the file descriptor refers
to

00:45:41.430 --> 00:45:41.440 align:start position:0%
to
 

00:45:41.440 --> 00:45:42.870 align:start position:0%
to
what<00:45:41.599><c> that</c><00:45:41.839><c> file</c><00:45:42.079><c> descriptor</c><00:45:42.560><c> is</c><00:45:42.640><c> actually</c>

00:45:42.870 --> 00:45:42.880 align:start position:0%
what that file descriptor is actually
 

00:45:42.880 --> 00:45:45.670 align:start position:0%
what that file descriptor is actually
doing<00:45:43.440><c> is</c><00:45:43.839><c> indexing</c><00:45:44.400><c> into</c><00:45:44.640><c> a</c><00:45:44.720><c> little</c><00:45:45.119><c> table</c>

00:45:45.670 --> 00:45:45.680 align:start position:0%
doing is indexing into a little table
 

00:45:45.680 --> 00:45:47.510 align:start position:0%
doing is indexing into a little table
inside<00:45:46.079><c> the</c><00:45:46.160><c> kernel</c><00:45:46.480><c> the</c><00:45:46.560><c> kernel</c><00:45:46.880><c> maintains</c>

00:45:47.510 --> 00:45:47.520 align:start position:0%
inside the kernel the kernel maintains
 

00:45:47.520 --> 00:45:48.870 align:start position:0%
inside the kernel the kernel maintains
state<00:45:48.240><c> for</c><00:45:48.480><c> each</c>

00:45:48.870 --> 00:45:48.880 align:start position:0%
state for each
 

00:45:48.880 --> 00:45:50.710 align:start position:0%
state for each
process<00:45:49.280><c> that's</c><00:45:49.599><c> running</c><00:45:50.079><c> each</c><00:45:50.319><c> program</c><00:45:50.640><c> that</c>

00:45:50.710 --> 00:45:50.720 align:start position:0%
process that's running each program that
 

00:45:50.720 --> 00:45:52.630 align:start position:0%
process that's running each program that
you<00:45:50.880><c> run</c><00:45:51.520><c> and</c><00:45:51.680><c> among</c><00:45:52.000><c> other</c><00:45:52.240><c> things</c><00:45:52.480><c> the</c>

00:45:52.630 --> 00:45:52.640 align:start position:0%
you run and among other things the
 

00:45:52.640 --> 00:45:55.030 align:start position:0%
you run and among other things the
kernel<00:45:52.960><c> remembers</c><00:45:53.520><c> a</c><00:45:53.680><c> table</c><00:45:54.079><c> for</c><00:45:54.319><c> every</c>

00:45:55.030 --> 00:45:55.040 align:start position:0%
kernel remembers a table for every
 

00:45:55.040 --> 00:45:57.510 align:start position:0%
kernel remembers a table for every
running<00:45:55.440><c> process</c><00:45:56.000><c> of</c><00:45:56.720><c> index</c><00:45:57.119><c> by</c><00:45:57.280><c> file</c>

00:45:57.510 --> 00:45:57.520 align:start position:0%
running process of index by file
 

00:45:57.520 --> 00:45:59.030 align:start position:0%
running process of index by file
descriptors

00:45:59.030 --> 00:45:59.040 align:start position:0%
descriptors
 

00:45:59.040 --> 00:46:01.270 align:start position:0%
descriptors
and<00:45:59.200><c> the</c><00:45:59.440><c> table</c><00:45:59.760><c> sort</c><00:46:00.000><c> of</c><00:46:00.560><c> tells</c><00:46:00.880><c> the</c><00:46:00.960><c> kernel</c>

00:46:01.270 --> 00:46:01.280 align:start position:0%
and the table sort of tells the kernel
 

00:46:01.280 --> 00:46:02.710 align:start position:0%
and the table sort of tells the kernel
what<00:46:01.520><c> each</c><00:46:01.760><c> file</c><00:46:02.000><c> descriptor</c>

00:46:02.710 --> 00:46:02.720 align:start position:0%
what each file descriptor
 

00:46:02.720 --> 00:46:08.470 align:start position:0%
what each file descriptor
refers<00:46:03.200><c> to</c>

00:46:08.470 --> 00:46:08.480 align:start position:0%
 
 

00:46:08.480 --> 00:46:10.870 align:start position:0%
 
a<00:46:08.960><c> critical</c><00:46:09.680><c> point</c><00:46:10.000><c> is</c><00:46:10.160><c> that</c><00:46:10.240><c> each</c><00:46:10.480><c> process</c>

00:46:10.870 --> 00:46:10.880 align:start position:0%
a critical point is that each process
 

00:46:10.880 --> 00:46:12.230 align:start position:0%
a critical point is that each process
has<00:46:11.119><c> its</c><00:46:11.359><c> own</c>

00:46:12.230 --> 00:46:12.240 align:start position:0%
has its own
 

00:46:12.240 --> 00:46:15.270 align:start position:0%
has its own
sort<00:46:12.400><c> of</c><00:46:12.640><c> space</c><00:46:13.119><c> of</c><00:46:13.280><c> file</c><00:46:13.599><c> descriptors</c><00:46:14.319><c> so</c><00:46:15.040><c> uh</c>

00:46:15.270 --> 00:46:15.280 align:start position:0%
sort of space of file descriptors so uh
 

00:46:15.280 --> 00:46:16.710 align:start position:0%
sort of space of file descriptors so uh
before<00:46:15.599><c> running</c><00:46:15.920><c> two</c><00:46:16.160><c> different</c>

00:46:16.710 --> 00:46:16.720 align:start position:0%
before running two different
 

00:46:16.720 --> 00:46:18.390 align:start position:0%
before running two different
processes<00:46:17.359><c> two</c><00:46:17.520><c> different</c><00:46:17.760><c> programs</c><00:46:18.240><c> and</c>

00:46:18.390 --> 00:46:18.400 align:start position:0%
processes two different programs and
 

00:46:18.400 --> 00:46:20.550 align:start position:0%
processes two different programs and
different<00:46:18.720><c> processes</c><00:46:19.520><c> and</c><00:46:19.599><c> they</c><00:46:19.839><c> both</c><00:46:20.160><c> open</c><00:46:20.480><c> a</c>

00:46:20.550 --> 00:46:20.560 align:start position:0%
different processes and they both open a
 

00:46:20.560 --> 00:46:22.069 align:start position:0%
different processes and they both open a
file<00:46:20.880><c> they</c><00:46:21.040><c> may</c><00:46:21.200><c> actually</c><00:46:21.440><c> get</c><00:46:21.599><c> the</c><00:46:21.680><c> same</c>

00:46:22.069 --> 00:46:22.079 align:start position:0%
file they may actually get the same
 

00:46:22.079 --> 00:46:24.309 align:start position:0%
file they may actually get the same
number<00:46:22.560><c> back</c><00:46:22.880><c> as</c><00:46:23.040><c> a</c><00:46:23.119><c> file</c><00:46:23.359><c> descriptor</c>

00:46:24.309 --> 00:46:24.319 align:start position:0%
number back as a file descriptor
 

00:46:24.319 --> 00:46:25.910 align:start position:0%
number back as a file descriptor
but<00:46:24.480><c> because</c><00:46:24.800><c> the</c><00:46:24.880><c> kernel</c><00:46:25.200><c> maintains</c><00:46:25.680><c> a</c>

00:46:25.910 --> 00:46:25.920 align:start position:0%
but because the kernel maintains a
 

00:46:25.920 --> 00:46:27.829 align:start position:0%
but because the kernel maintains a
separate<00:46:26.480><c> file</c><00:46:26.720><c> descriptor</c><00:46:27.280><c> for</c><00:46:27.520><c> each</c>

00:46:27.829 --> 00:46:27.839 align:start position:0%
separate file descriptor for each
 

00:46:27.839 --> 00:46:28.950 align:start position:0%
separate file descriptor for each
process

00:46:28.950 --> 00:46:28.960 align:start position:0%
process
 

00:46:28.960 --> 00:46:31.270 align:start position:0%
process
the<00:46:29.200><c> same</c><00:46:29.440><c> file</c><00:46:29.680><c> descriptor</c><00:46:30.319><c> number</c><00:46:31.119><c> may</c>

00:46:31.270 --> 00:46:31.280 align:start position:0%
the same file descriptor number may
 

00:46:31.280 --> 00:46:32.950 align:start position:0%
the same file descriptor number may
refer<00:46:31.599><c> to</c><00:46:31.839><c> different</c><00:46:32.240><c> files</c>

00:46:32.950 --> 00:46:32.960 align:start position:0%
refer to different files
 

00:46:32.960 --> 00:46:36.950 align:start position:0%
refer to different files
in<00:46:33.280><c> different</c><00:46:33.680><c> processes</c>

00:46:36.950 --> 00:46:36.960 align:start position:0%
 
 

00:46:36.960 --> 00:46:38.550 align:start position:0%
 
any<00:46:37.200><c> questions</c><00:46:37.520><c> about</c><00:46:37.760><c> open</c><00:46:38.160><c> about</c><00:46:38.400><c> this</c>

00:46:38.550 --> 00:46:38.560 align:start position:0%
any questions about open about this
 

00:46:38.560 --> 00:46:40.069 align:start position:0%
any questions about open about this
little<00:46:38.800><c> program</c>

00:46:40.069 --> 00:46:40.079 align:start position:0%
little program
 

00:46:40.079 --> 00:46:41.589 align:start position:0%
little program
yeah<00:46:40.240><c> we</c><00:46:40.400><c> got</c><00:46:40.560><c> a</c><00:46:40.640><c> question</c><00:46:40.880><c> in</c><00:46:40.960><c> the</c><00:46:41.119><c> chat</c><00:46:41.440><c> a</c>

00:46:41.589 --> 00:46:41.599 align:start position:0%
yeah we got a question in the chat a
 

00:46:41.599 --> 00:46:43.190 align:start position:0%
yeah we got a question in the chat a
question<00:46:41.920><c> from</c><00:46:42.079><c> someone</c><00:46:42.400><c> not</c><00:46:42.560><c> familiar</c><00:46:42.960><c> with</c>

00:46:43.190 --> 00:46:43.200 align:start position:0%
question from someone not familiar with
 

00:46:43.200 --> 00:46:43.910 align:start position:0%
question from someone not familiar with
c

00:46:43.910 --> 00:46:43.920 align:start position:0%
c
 

00:46:43.920 --> 00:46:46.069 align:start position:0%
c
uh<00:46:44.079><c> how</c><00:46:44.319><c> are</c><00:46:44.400><c> these</c><00:46:44.640><c> files</c><00:46:45.040><c> being</c><00:46:45.280><c> described</c>

00:46:46.069 --> 00:46:46.079 align:start position:0%
uh how are these files being described
 

00:46:46.079 --> 00:46:47.270 align:start position:0%
uh how are these files being described
different<00:46:46.400><c> from</c><00:46:46.640><c> normalc</c>

00:46:47.270 --> 00:46:47.280 align:start position:0%
different from normalc
 

00:46:47.280 --> 00:46:49.589 align:start position:0%
different from normalc
programs<00:46:47.760><c> is</c><00:46:47.920><c> it</c><00:46:48.079><c> because</c><00:46:48.400><c> we're</c><00:46:49.040><c> only</c><00:46:49.359><c> using</c>

00:46:49.589 --> 00:46:49.599 align:start position:0%
programs is it because we're only using
 

00:46:49.599 --> 00:46:51.910 align:start position:0%
programs is it because we're only using
kernel<00:46:50.000><c> calls</c><00:46:50.400><c> i.e</c><00:46:50.880><c> couldn't</c><00:46:51.200><c> we</c><00:46:51.440><c> also</c>

00:46:51.910 --> 00:46:51.920 align:start position:0%
kernel calls i.e couldn't we also
 

00:46:51.920 --> 00:46:59.349 align:start position:0%
kernel calls i.e couldn't we also
open<00:46:52.240><c> or</c><00:46:52.400><c> write</c><00:46:52.640><c> a</c><00:46:52.720><c> file</c><00:46:53.119><c> in</c><00:46:54.839><c> python</c>

00:46:59.349 --> 00:46:59.359 align:start position:0%
 
 

00:46:59.359 --> 00:47:02.390 align:start position:0%
 
i<00:46:59.440><c> don't</c><00:46:59.599><c> think</c><00:46:59.760><c> i</c><00:46:59.839><c> understand</c><00:47:00.400><c> that</c><00:47:01.920><c> it's</c><00:47:02.079><c> a</c><00:47:02.160><c> c</c>

00:47:02.390 --> 00:47:02.400 align:start position:0%
i don't think i understand that it's a c
 

00:47:02.400 --> 00:47:08.829 align:start position:0%
i don't think i understand that it's a c
program<00:47:02.640><c> that's</c><00:47:02.880><c> opening</c><00:47:03.200><c> and</c><00:47:03.280><c> writing</c><00:47:03.599><c> a</c>

00:47:08.829 --> 00:47:08.839 align:start position:0%
 
 

00:47:08.839 --> 00:47:12.390 align:start position:0%
 
file

00:47:12.390 --> 00:47:12.400 align:start position:0%
 
 

00:47:12.400 --> 00:47:15.829 align:start position:0%
 
um<00:47:15.359><c> okay</c>

00:47:15.829 --> 00:47:15.839 align:start position:0%
um okay
 

00:47:15.839 --> 00:47:20.549 align:start position:0%
um okay
i<00:47:15.920><c> think</c><00:47:16.079><c> i'm</c><00:47:16.160><c> gonna</c><00:47:16.319><c> move</c><00:47:16.560><c> on</c><00:47:17.200><c> um</c>

00:47:20.549 --> 00:47:20.559 align:start position:0%
 
 

00:47:20.559 --> 00:47:23.670 align:start position:0%
 
all<00:47:20.720><c> right</c><00:47:20.960><c> so</c>

00:47:23.670 --> 00:47:23.680 align:start position:0%
 
 

00:47:23.680 --> 00:47:26.230 align:start position:0%
 
you um<00:47:24.079><c> ask</c><00:47:24.480><c> what</c><00:47:24.720><c> actually</c><00:47:25.040><c> happens</c><00:47:25.599><c> when</c><00:47:25.920><c> uh</c>

00:47:26.230 --> 00:47:26.240 align:start position:0%
you um ask what actually happens when uh
 

00:47:26.240 --> 00:47:26.870 align:start position:0%
you um ask what actually happens when uh
maybe

00:47:26.870 --> 00:47:26.880 align:start position:0%
maybe
 

00:47:26.880 --> 00:47:29.270 align:start position:0%
maybe
the<00:47:27.119><c> question</c><00:47:27.359><c> is</c><00:47:27.440><c> whether</c><00:47:27.920><c> someone</c><00:47:28.800><c> is</c><00:47:28.960><c> doing</c>

00:47:29.270 --> 00:47:29.280 align:start position:0%
the question is whether someone is doing
 

00:47:29.280 --> 00:47:30.069 align:start position:0%
the question is whether someone is doing
it<00:47:29.440><c> in</c><00:47:29.599><c> c</c>

00:47:30.069 --> 00:47:30.079 align:start position:0%
it in c
 

00:47:30.079 --> 00:47:31.750 align:start position:0%
it in c
any<00:47:30.319><c> different</c><00:47:30.640><c> than</c><00:47:30.800><c> doing</c><00:47:31.040><c> it</c><00:47:31.200><c> in</c><00:47:31.280><c> python</c>

00:47:31.750 --> 00:47:31.760 align:start position:0%
any different than doing it in python
 

00:47:31.760 --> 00:47:34.390 align:start position:0%
any different than doing it in python
minus<00:47:32.079><c> the</c><00:47:32.240><c> syntax</c>

00:47:34.390 --> 00:47:34.400 align:start position:0%
minus the syntax
 

00:47:34.400 --> 00:47:40.710 align:start position:0%
minus the syntax
well<00:47:35.040><c> it's</c><00:47:35.280><c> it's</c><00:47:36.400><c> not</c><00:47:36.559><c> really</c><00:47:37.200><c> um</c>

00:47:40.710 --> 00:47:40.720 align:start position:0%
 
 

00:47:40.720 --> 00:47:44.309 align:start position:0%
 
there's<00:47:40.880><c> certainly</c><00:47:41.359><c> ways</c><00:47:41.680><c> to</c><00:47:42.240><c> um</c>

00:47:44.309 --> 00:47:44.319 align:start position:0%
there's certainly ways to um
 

00:47:44.319 --> 00:47:47.670 align:start position:0%
there's certainly ways to um
python<00:47:44.800><c> provides</c><00:47:45.920><c> nice</c><00:47:46.960><c> function</c><00:47:47.280><c> calls</c><00:47:47.520><c> for</c>

00:47:47.670 --> 00:47:47.680 align:start position:0%
python provides nice function calls for
 

00:47:47.680 --> 00:47:48.230 align:start position:0%
python provides nice function calls for
opening

00:47:48.230 --> 00:47:48.240 align:start position:0%
opening
 

00:47:48.240 --> 00:47:51.190 align:start position:0%
opening
and<00:47:48.400><c> doing</c><00:47:48.640><c> all</c><00:47:48.800><c> these</c><00:47:48.880><c> things</c><00:47:50.720><c> or</c><00:47:50.880><c> opening</c>

00:47:51.190 --> 00:47:51.200 align:start position:0%
and doing all these things or opening
 

00:47:51.200 --> 00:47:51.990 align:start position:0%
and doing all these things or opening
files<00:47:51.520><c> for</c><00:47:51.680><c> example</c>

00:47:51.990 --> 00:47:52.000 align:start position:0%
files for example
 

00:47:52.000 --> 00:47:54.710 align:start position:0%
files for example
in<00:47:52.079><c> reading</c><00:47:52.400><c> writing</c><00:47:52.800><c> files</c><00:47:53.520><c> um</c><00:47:54.240><c> they're</c><00:47:54.559><c> sort</c>

00:47:54.710 --> 00:47:54.720 align:start position:0%
in reading writing files um they're sort
 

00:47:54.720 --> 00:47:56.230 align:start position:0%
in reading writing files um they're sort
of<00:47:54.880><c> a</c><00:47:54.960><c> layer</c><00:47:55.359><c> of</c>

00:47:56.230 --> 00:47:56.240 align:start position:0%
of a layer of
 

00:47:56.240 --> 00:47:57.589 align:start position:0%
of a layer of
they're<00:47:56.480><c> higher</c><00:47:56.800><c> somewhat</c><00:47:57.119><c> higher</c><00:47:57.280><c> level</c>

00:47:57.589 --> 00:47:57.599 align:start position:0%
they're higher somewhat higher level
 

00:47:57.599 --> 00:47:59.829 align:start position:0%
they're higher somewhat higher level
functions<00:47:57.920><c> typically</c><00:47:58.800><c> um</c><00:47:59.040><c> not</c><00:47:59.359><c> you</c><00:47:59.440><c> know</c>

00:47:59.829 --> 00:47:59.839 align:start position:0%
functions typically um not you know
 

00:47:59.839 --> 00:48:03.589 align:start position:0%
functions typically um not you know
pointers<00:48:00.240><c> to</c><00:48:00.400><c> memory</c><00:48:00.880><c> for</c><00:48:01.040><c> example</c><00:48:02.160><c> um</c>

00:48:03.589 --> 00:48:03.599 align:start position:0%
pointers to memory for example um
 

00:48:03.599 --> 00:48:05.910 align:start position:0%
pointers to memory for example um
and<00:48:03.760><c> python</c><00:48:04.079><c> does</c><00:48:04.319><c> more</c><00:48:04.800><c> error</c><00:48:05.200><c> checking</c><00:48:05.599><c> for</c>

00:48:05.910 --> 00:48:05.920 align:start position:0%
and python does more error checking for
 

00:48:05.920 --> 00:48:07.990 align:start position:0%
and python does more error checking for
you

00:48:07.990 --> 00:48:08.000 align:start position:0%
you
 

00:48:08.000 --> 00:48:09.750 align:start position:0%
you
but<00:48:08.160><c> when</c><00:48:08.319><c> you</c><00:48:08.400><c> open</c><00:48:08.640><c> a</c><00:48:08.720><c> file</c><00:48:08.960><c> in</c><00:48:09.119><c> python</c><00:48:09.599><c> or</c>

00:48:09.750 --> 00:48:09.760 align:start position:0%
but when you open a file in python or
 

00:48:09.760 --> 00:48:11.910 align:start position:0%
but when you open a file in python or
write<00:48:09.920><c> a</c><00:48:10.000><c> file</c><00:48:10.240><c> in</c><00:48:10.319><c> python</c><00:48:10.960><c> the</c>

00:48:11.910 --> 00:48:11.920 align:start position:0%
write a file in python the
 

00:48:11.920 --> 00:48:15.190 align:start position:0%
write a file in python the
python<00:48:12.240><c> calls</c><00:48:12.559><c> you</c><00:48:12.640><c> make</c><00:48:14.400><c> boil</c><00:48:14.720><c> down</c>

00:48:15.190 --> 00:48:15.200 align:start position:0%
python calls you make boil down
 

00:48:15.200 --> 00:48:19.750 align:start position:0%
python calls you make boil down
to<00:48:16.240><c> system</c><00:48:16.559><c> calls</c><00:48:16.880><c> just</c><00:48:17.119><c> like</c><00:48:17.280><c> these</c>

00:48:19.750 --> 00:48:19.760 align:start position:0%
 
 

00:48:19.760 --> 00:48:25.670 align:start position:0%
 
is<00:48:20.400><c> that</c><00:48:20.480><c> a</c><00:48:20.559><c> good</c><00:48:20.720><c> answer</c>

00:48:25.670 --> 00:48:25.680 align:start position:0%
 
 

00:48:25.680 --> 00:48:31.190 align:start position:0%
 
i<00:48:25.760><c> think</c><00:48:26.000><c> so</c><00:48:26.960><c> all</c><00:48:27.119><c> right</c>

00:48:31.190 --> 00:48:31.200 align:start position:0%
 
 

00:48:31.200 --> 00:48:34.390 align:start position:0%
 
all<00:48:31.359><c> right</c><00:48:31.680><c> um</c><00:48:33.440><c> all</c><00:48:33.520><c> right</c><00:48:33.680><c> i've</c><00:48:33.760><c> been</c>

00:48:34.390 --> 00:48:34.400 align:start position:0%
all right um all right i've been
 

00:48:34.400 --> 00:48:39.150 align:start position:0%
all right um all right i've been
over<00:48:34.640><c> here</c><00:48:34.880><c> talking</c><00:48:35.359><c> to</c><00:48:35.520><c> the</c><00:48:35.760><c> uh</c>

00:48:39.150 --> 00:48:39.160 align:start position:0%
 
 

00:48:39.160 --> 00:48:42.390 align:start position:0%
 
xv6s<00:48:40.559><c> unix</c><00:48:41.440><c> like</c>

00:48:42.390 --> 00:48:42.400 align:start position:0%
xv6s unix like
 

00:48:42.400 --> 00:48:44.870 align:start position:0%
xv6s unix like
shell<00:48:43.359><c> and</c><00:48:43.440><c> the</c><00:48:43.839><c> shells</c><00:48:44.160><c> what</c><00:48:44.480><c> people</c><00:48:44.720><c> often</c>

00:48:44.870 --> 00:48:44.880 align:start position:0%
shell and the shells what people often
 

00:48:44.880 --> 00:48:47.270 align:start position:0%
shell and the shells what people often
call<00:48:45.040><c> the</c><00:48:45.119><c> command</c><00:48:45.440><c> line</c><00:48:45.680><c> interface</c>

00:48:47.270 --> 00:48:47.280 align:start position:0%
call the command line interface
 

00:48:47.280 --> 00:48:49.910 align:start position:0%
call the command line interface
as<00:48:47.440><c> opposed</c><00:48:47.760><c> to</c><00:48:47.920><c> some</c><00:48:48.400><c> more</c><00:48:48.880><c> graphical</c><00:48:49.520><c> user</c>

00:48:49.910 --> 00:48:49.920 align:start position:0%
as opposed to some more graphical user
 

00:48:49.920 --> 00:48:52.390 align:start position:0%
as opposed to some more graphical user
interface

00:48:52.390 --> 00:48:52.400 align:start position:0%
interface
 

00:48:52.400 --> 00:48:54.069 align:start position:0%
interface
the<00:48:52.720><c> shell</c><00:48:52.960><c> turns</c><00:48:53.280><c> if</c><00:48:53.359><c> you</c><00:48:53.440><c> haven't</c><00:48:53.680><c> used</c><00:48:53.920><c> the</c>

00:48:54.069 --> 00:48:54.079 align:start position:0%
the shell turns if you haven't used the
 

00:48:54.079 --> 00:48:56.150 align:start position:0%
the shell turns if you haven't used the
cell<00:48:54.319><c> the</c><00:48:54.559><c> shell</c><00:48:54.880><c> turns</c><00:48:55.200><c> out</c><00:48:55.359><c> to</c><00:48:55.520><c> be</c>

00:48:56.150 --> 00:48:56.160 align:start position:0%
cell the shell turns out to be
 

00:48:56.160 --> 00:48:57.670 align:start position:0%
cell the shell turns out to be
a<00:48:56.319><c> pretty</c><00:48:56.559><c> useful</c><00:48:56.960><c> interface</c><00:48:57.359><c> for</c><00:48:57.520><c> things</c>

00:48:57.670 --> 00:48:57.680 align:start position:0%
a pretty useful interface for things
 

00:48:57.680 --> 00:49:01.349 align:start position:0%
a pretty useful interface for things
like<00:48:57.839><c> system</c><00:48:58.160><c> management</c><00:48:58.800><c> of</c><00:48:59.119><c> unix</c><00:48:59.520><c> systems</c>

00:49:01.349 --> 00:49:01.359 align:start position:0%
like system management of unix systems
 

00:49:01.359 --> 00:49:03.670 align:start position:0%
like system management of unix systems
it<00:49:01.440><c> provides</c><00:49:01.760><c> a</c><00:49:01.839><c> lot</c><00:49:02.000><c> of</c><00:49:02.160><c> utilities</c><00:49:02.880><c> for</c><00:49:03.440><c> uh</c>

00:49:03.670 --> 00:49:03.680 align:start position:0%
it provides a lot of utilities for uh
 

00:49:03.680 --> 00:49:05.030 align:start position:0%
it provides a lot of utilities for uh
messing<00:49:03.920><c> around</c><00:49:04.160><c> with</c><00:49:04.400><c> files</c>

00:49:05.030 --> 00:49:05.040 align:start position:0%
messing around with files
 

00:49:05.040 --> 00:49:07.430 align:start position:0%
messing around with files
and<00:49:05.280><c> for</c><00:49:05.440><c> programming</c><00:49:05.839><c> development</c><00:49:06.400><c> and</c><00:49:07.280><c> for</c>

00:49:07.430 --> 00:49:07.440 align:start position:0%
and for programming development and for
 

00:49:07.440 --> 00:49:08.470 align:start position:0%
and for programming development and for
writing<00:49:07.760><c> scripts</c>

00:49:08.470 --> 00:49:08.480 align:start position:0%
writing scripts
 

00:49:08.480 --> 00:49:10.790 align:start position:0%
writing scripts
to<00:49:08.640><c> do</c><00:49:08.800><c> all</c><00:49:08.880><c> these</c><00:49:09.119><c> things</c><00:49:09.520><c> so</c><00:49:10.319><c> you</c><00:49:10.480><c> saw</c><00:49:10.640><c> me</c>

00:49:10.790 --> 00:49:10.800 align:start position:0%
to do all these things so you saw me
 

00:49:10.800 --> 00:49:12.309 align:start position:0%
to do all these things so you saw me
before<00:49:11.440><c> run</c>

00:49:12.309 --> 00:49:12.319 align:start position:0%
before run
 

00:49:12.319 --> 00:49:14.069 align:start position:0%
before run
i<00:49:12.559><c> just</c><00:49:12.720><c> want</c><00:49:12.880><c> to</c><00:49:12.960><c> demonstrate</c><00:49:13.359><c> a</c><00:49:13.440><c> few</c><00:49:13.839><c> shell</c>

00:49:14.069 --> 00:49:14.079 align:start position:0%
i just want to demonstrate a few shell
 

00:49:14.079 --> 00:49:16.710 align:start position:0%
i just want to demonstrate a few shell
features<00:49:14.640><c> ordinarily</c><00:49:15.200><c> when</c><00:49:15.280><c> you</c><00:49:15.440><c> type</c><00:49:15.760><c> things</c>

00:49:16.710 --> 00:49:16.720 align:start position:0%
features ordinarily when you type things
 

00:49:16.720 --> 00:49:19.510 align:start position:0%
features ordinarily when you type things
um<00:49:17.680><c> you're</c><00:49:17.839><c> telling</c><00:49:18.240><c> the</c><00:49:18.480><c> shell</c><00:49:18.800><c> to</c><00:49:19.040><c> run</c><00:49:19.359><c> a</c>

00:49:19.510 --> 00:49:19.520 align:start position:0%
um you're telling the shell to run a
 

00:49:19.520 --> 00:49:21.430 align:start position:0%
um you're telling the shell to run a
program<00:49:19.920><c> so</c><00:49:20.079><c> when</c><00:49:20.240><c> i</c><00:49:20.319><c> type</c><00:49:20.640><c> ls</c><00:49:21.040><c> what</c><00:49:21.200><c> that</c>

00:49:21.430 --> 00:49:21.440 align:start position:0%
program so when i type ls what that
 

00:49:21.440 --> 00:49:22.309 align:start position:0%
program so when i type ls what that
means<00:49:21.839><c> is</c>

00:49:22.309 --> 00:49:22.319 align:start position:0%
means is
 

00:49:22.319 --> 00:49:25.430 align:start position:0%
means is
i'm<00:49:22.640><c> asking</c><00:49:23.200><c> the</c><00:49:23.359><c> shell</c><00:49:23.599><c> to</c><00:49:23.839><c> run</c><00:49:24.160><c> the</c><00:49:24.400><c> program</c>

00:49:25.430 --> 00:49:25.440 align:start position:0%
i'm asking the shell to run the program
 

00:49:25.440 --> 00:49:27.829 align:start position:0%
i'm asking the shell to run the program
whose<00:49:25.680><c> name</c><00:49:25.920><c> is</c><00:49:26.079><c> ls</c><00:49:26.720><c> and</c><00:49:27.200><c> what</c><00:49:27.359><c> that</c><00:49:27.599><c> really</c>

00:49:27.829 --> 00:49:27.839 align:start position:0%
whose name is ls and what that really
 

00:49:27.839 --> 00:49:29.670 align:start position:0%
whose name is ls and what that really
means<00:49:28.079><c> is</c><00:49:28.240><c> there's</c><00:49:28.480><c> a</c><00:49:28.720><c> file</c>

00:49:29.670 --> 00:49:29.680 align:start position:0%
means is there's a file
 

00:49:29.680 --> 00:49:31.750 align:start position:0%
means is there's a file
in<00:49:29.760><c> the</c><00:49:30.000><c> file</c><00:49:30.319><c> system</c><00:49:30.640><c> called</c><00:49:30.960><c> ls</c><00:49:31.599><c> that</c>

00:49:31.750 --> 00:49:31.760 align:start position:0%
in the file system called ls that
 

00:49:31.760 --> 00:49:33.510 align:start position:0%
in the file system called ls that
contains<00:49:32.240><c> some</c><00:49:32.480><c> instructions</c>

00:49:33.510 --> 00:49:33.520 align:start position:0%
contains some instructions
 

00:49:33.520 --> 00:49:35.750 align:start position:0%
contains some instructions
some<00:49:33.760><c> machine</c><00:49:34.079><c> instructions</c><00:49:35.119><c> and</c><00:49:35.280><c> i'm</c><00:49:35.440><c> asking</c>

00:49:35.750 --> 00:49:35.760 align:start position:0%
some machine instructions and i'm asking
 

00:49:35.760 --> 00:49:37.109 align:start position:0%
some machine instructions and i'm asking
the<00:49:35.920><c> shell</c><00:49:36.160><c> to</c><00:49:36.400><c> run</c>

00:49:37.109 --> 00:49:37.119 align:start position:0%
the shell to run
 

00:49:37.119 --> 00:49:39.030 align:start position:0%
the shell to run
the<00:49:37.280><c> instructions</c><00:49:38.160><c> that</c><00:49:38.319><c> are</c><00:49:38.480><c> in</c><00:49:38.559><c> the</c><00:49:38.720><c> file</c>

00:49:39.030 --> 00:49:39.040 align:start position:0%
the instructions that are in the file
 

00:49:39.040 --> 00:49:40.630 align:start position:0%
the instructions that are in the file
called<00:49:39.359><c> ls</c>

00:49:40.630 --> 00:49:40.640 align:start position:0%
called ls
 

00:49:40.640 --> 00:49:44.790 align:start position:0%
called ls
run<00:49:40.880><c> ls</c><00:49:41.200><c> now</c><00:49:41.520><c> ls</c><00:49:42.079><c> what</c><00:49:42.319><c> it</c><00:49:42.400><c> actually</c><00:49:42.720><c> does</c><00:49:43.040><c> is</c>

00:49:44.790 --> 00:49:44.800 align:start position:0%
run ls now ls what it actually does is
 

00:49:44.800 --> 00:49:46.309 align:start position:0%
run ls now ls what it actually does is
get<00:49:45.040><c> a</c><00:49:45.119><c> listing</c><00:49:45.520><c> of</c><00:49:45.680><c> the</c><00:49:45.839><c> files</c><00:49:46.160><c> in</c><00:49:46.240><c> the</c>

00:49:46.309 --> 00:49:46.319 align:start position:0%
get a listing of the files in the
 

00:49:46.319 --> 00:49:47.910 align:start position:0%
get a listing of the files in the
current<00:49:46.559><c> directory</c><00:49:47.200><c> and</c><00:49:47.359><c> you</c><00:49:47.440><c> can</c><00:49:47.599><c> see</c><00:49:47.839><c> up</c>

00:49:47.910 --> 00:49:47.920 align:start position:0%
current directory and you can see up
 

00:49:47.920 --> 00:49:49.589 align:start position:0%
current directory and you can see up
there<00:49:48.079><c> on</c><00:49:48.160><c> the</c><00:49:48.319><c> fourth</c><00:49:48.640><c> line</c>

00:49:49.589 --> 00:49:49.599 align:start position:0%
there on the fourth line
 

00:49:49.599 --> 00:49:52.950 align:start position:0%
there on the fourth line
that<00:49:50.480><c> among</c><00:49:50.880><c> the</c><00:49:51.040><c> other</c><00:49:51.680><c> files</c><00:49:52.319><c> that</c>

00:49:52.950 --> 00:49:52.960 align:start position:0%
that among the other files that
 

00:49:52.960 --> 00:49:55.670 align:start position:0%
that among the other files that
ls<00:49:53.359><c> says</c><00:49:53.599><c> exists</c><00:49:54.319><c> in</c><00:49:54.480><c> this</c><00:49:54.640><c> list</c><00:49:55.040><c> is</c><00:49:55.359><c> a</c><00:49:55.440><c> file</c>

00:49:55.670 --> 00:49:55.680 align:start position:0%
ls says exists in this list is a file
 

00:49:55.680 --> 00:49:55.990 align:start position:0%
ls says exists in this list is a file
called

00:49:55.990 --> 00:49:56.000 align:start position:0%
called
 

00:49:56.000 --> 00:49:58.870 align:start position:0%
called
ls<00:49:56.640><c> which</c><00:49:56.880><c> is</c><00:49:57.040><c> in</c><00:49:57.200><c> fact</c><00:49:58.000><c> the</c><00:49:58.160><c> file</c><00:49:58.480><c> containing</c>

00:49:58.870 --> 00:49:58.880 align:start position:0%
ls which is in fact the file containing
 

00:49:58.880 --> 00:50:02.230 align:start position:0%
ls which is in fact the file containing
the<00:49:59.040><c> instructions</c><00:49:59.520><c> i</c><00:49:59.599><c> just</c><00:49:59.839><c> ran</c>

00:50:02.230 --> 00:50:02.240 align:start position:0%
 
 

00:50:02.240 --> 00:50:03.670 align:start position:0%
 
the<00:50:02.400><c> shell</c><00:50:02.559><c> does</c><00:50:02.800><c> a</c><00:50:02.880><c> few</c><00:50:03.119><c> other</c><00:50:03.280><c> things</c><00:50:03.520><c> for</c>

00:50:03.670 --> 00:50:03.680 align:start position:0%
the shell does a few other things for
 

00:50:03.680 --> 00:50:05.910 align:start position:0%
the shell does a few other things for
you<00:50:03.839><c> other</c><00:50:04.000><c> than</c><00:50:04.160><c> running</c><00:50:04.559><c> programs</c>

00:50:05.910 --> 00:50:05.920 align:start position:0%
you other than running programs
 

00:50:05.920 --> 00:50:08.710 align:start position:0%
you other than running programs
it<00:50:06.319><c> allows</c><00:50:06.559><c> you</c><00:50:06.720><c> to</c><00:50:06.880><c> redirect</c><00:50:07.440><c> io</c><00:50:08.400><c> so</c><00:50:08.559><c> for</c>

00:50:08.710 --> 00:50:08.720 align:start position:0%
it allows you to redirect io so for
 

00:50:08.720 --> 00:50:11.030 align:start position:0%
it allows you to redirect io so for
example<00:50:09.040><c> if</c><00:50:09.200><c> i</c><00:50:09.359><c> say</c><00:50:09.599><c> ls</c><00:50:10.079><c> greater</c><00:50:10.480><c> than</c><00:50:10.720><c> out</c>

00:50:11.030 --> 00:50:11.040 align:start position:0%
example if i say ls greater than out
 

00:50:11.040 --> 00:50:12.150 align:start position:0%
example if i say ls greater than out
what<00:50:11.200><c> that</c><00:50:11.440><c> means</c><00:50:11.839><c> is</c>

00:50:12.150 --> 00:50:12.160 align:start position:0%
what that means is
 

00:50:12.160 --> 00:50:14.069 align:start position:0%
what that means is
i'm<00:50:12.400><c> asking</c><00:50:12.720><c> the</c><00:50:12.960><c> shell</c><00:50:13.280><c> to</c><00:50:13.440><c> run</c><00:50:13.599><c> the</c><00:50:13.760><c> ls</c>

00:50:14.069 --> 00:50:14.079 align:start position:0%
i'm asking the shell to run the ls
 

00:50:14.079 --> 00:50:16.630 align:start position:0%
i'm asking the shell to run the ls
command<00:50:14.880><c> but</c><00:50:15.040><c> with</c><00:50:15.280><c> its</c><00:50:15.599><c> output</c><00:50:16.079><c> redirected</c>

00:50:16.630 --> 00:50:16.640 align:start position:0%
command but with its output redirected
 

00:50:16.640 --> 00:50:17.670 align:start position:0%
command but with its output redirected
to<00:50:16.800><c> the</c><00:50:16.960><c> file</c><00:50:17.280><c> called</c>

00:50:17.670 --> 00:50:17.680 align:start position:0%
to the file called
 

00:50:17.680 --> 00:50:20.870 align:start position:0%
to the file called
out<00:50:18.480><c> and</c><00:50:18.640><c> i</c><00:50:18.800><c> run</c><00:50:19.040><c> ls</c>

00:50:20.870 --> 00:50:20.880 align:start position:0%
out and i run ls
 

00:50:20.880 --> 00:50:22.549 align:start position:0%
out and i run ls
we<00:50:21.040><c> don't</c><00:50:21.200><c> see</c><00:50:21.359><c> any</c><00:50:21.599><c> output</c><00:50:22.240><c> because</c><00:50:22.400><c> the</c>

00:50:22.549 --> 00:50:22.559 align:start position:0%
we don't see any output because the
 

00:50:22.559 --> 00:50:24.870 align:start position:0%
we don't see any output because the
output<00:50:22.880><c> all</c><00:50:22.960><c> went</c><00:50:23.359><c> out</c>

00:50:24.870 --> 00:50:24.880 align:start position:0%
output all went out
 

00:50:24.880 --> 00:50:27.750 align:start position:0%
output all went out
um<00:50:26.000><c> now</c><00:50:26.240><c> i</c><00:50:26.400><c> can</c><00:50:26.720><c> out</c><00:50:26.960><c> contains</c><00:50:27.359><c> a</c><00:50:27.440><c> bunch</c><00:50:27.680><c> of</c>

00:50:27.750 --> 00:50:27.760 align:start position:0%
um now i can out contains a bunch of
 

00:50:27.760 --> 00:50:28.470 align:start position:0%
um now i can out contains a bunch of
data

00:50:28.470 --> 00:50:28.480 align:start position:0%
data
 

00:50:28.480 --> 00:50:32.230 align:start position:0%
data
um<00:50:29.359><c> we</c><00:50:29.599><c> could</c><00:50:30.800><c> the</c><00:50:31.040><c> cat</c><00:50:31.280><c> command</c>

00:50:32.230 --> 00:50:32.240 align:start position:0%
um we could the cat command
 

00:50:32.240 --> 00:50:34.710 align:start position:0%
um we could the cat command
reads<00:50:32.559><c> a</c><00:50:32.640><c> file</c><00:50:33.040><c> and</c><00:50:33.280><c> displays</c><00:50:34.160><c> the</c><00:50:34.319><c> contents</c>

00:50:34.710 --> 00:50:34.720 align:start position:0%
reads a file and displays the contents
 

00:50:34.720 --> 00:50:35.670 align:start position:0%
reads a file and displays the contents
of<00:50:34.800><c> the</c><00:50:34.880><c> file</c><00:50:35.280><c> so</c>

00:50:35.670 --> 00:50:35.680 align:start position:0%
of the file so
 

00:50:35.680 --> 00:50:38.150 align:start position:0%
of the file so
i<00:50:35.760><c> say</c><00:50:36.000><c> cat</c><00:50:36.319><c> out</c><00:50:36.960><c> i'm</c><00:50:37.119><c> just</c><00:50:37.280><c> going</c><00:50:37.440><c> to</c><00:50:37.599><c> see</c><00:50:37.920><c> now</c>

00:50:38.150 --> 00:50:38.160 align:start position:0%
i say cat out i'm just going to see now
 

00:50:38.160 --> 00:50:39.990 align:start position:0%
i say cat out i'm just going to see now
the<00:50:38.480><c> now</c><00:50:38.800><c> this</c><00:50:38.960><c> is</c><00:50:39.119><c> the</c><00:50:39.280><c> saved</c><00:50:39.599><c> output</c>

00:50:39.990 --> 00:50:40.000 align:start position:0%
the now this is the saved output
 

00:50:40.000 --> 00:50:42.309 align:start position:0%
the now this is the saved output
of<00:50:40.160><c> ls</c><00:50:41.040><c> you</c><00:50:41.200><c> can</c><00:50:41.359><c> also</c><00:50:41.520><c> run</c><00:50:41.680><c> a</c><00:50:41.760><c> command</c><00:50:42.160><c> like</c>

00:50:42.309 --> 00:50:42.319 align:start position:0%
of ls you can also run a command like
 

00:50:42.319 --> 00:50:44.309 align:start position:0%
of ls you can also run a command like
grep<00:50:42.720><c> and</c><00:50:42.800><c> i</c><00:50:42.880><c> can</c><00:50:43.040><c> give</c><00:50:43.200><c> it</c><00:50:43.280><c> an</c><00:50:43.440><c> argument</c><00:50:43.839><c> x</c><00:50:44.240><c> and</c>

00:50:44.309 --> 00:50:44.319 align:start position:0%
grep and i can give it an argument x and
 

00:50:44.319 --> 00:50:44.710 align:start position:0%
grep and i can give it an argument x and
what

00:50:44.710 --> 00:50:44.720 align:start position:0%
what
 

00:50:44.720 --> 00:50:47.670 align:start position:0%
what
grep<00:50:45.119><c> x</c><00:50:45.520><c> is</c><00:50:46.400><c> the</c><00:50:46.480><c> grep</c><00:50:46.800><c> command</c><00:50:47.119><c> searches</c><00:50:47.520><c> for</c>

00:50:47.670 --> 00:50:47.680 align:start position:0%
grep x is the grep command searches for
 

00:50:47.680 --> 00:50:49.109 align:start position:0%
grep x is the grep command searches for
patterns

00:50:49.109 --> 00:50:49.119 align:start position:0%
patterns
 

00:50:49.119 --> 00:50:52.309 align:start position:0%
patterns
again<00:50:50.400><c> um</c><00:50:50.800><c> if</c><00:50:50.960><c> i</c><00:50:51.599><c> run</c><00:50:51.839><c> grep</c>

00:50:52.309 --> 00:50:52.319 align:start position:0%
again um if i run grep
 

00:50:52.319 --> 00:50:55.670 align:start position:0%
again um if i run grep
x<00:50:52.800><c> it's</c><00:50:52.960><c> going</c><00:50:53.040><c> to</c><00:50:53.119><c> search</c><00:50:53.520><c> for</c><00:50:54.800><c> lines</c><00:50:55.520><c> of</c>

00:50:55.670 --> 00:50:55.680 align:start position:0%
x it's going to search for lines of
 

00:50:55.680 --> 00:50:56.549 align:start position:0%
x it's going to search for lines of
input<00:50:56.000><c> that</c><00:50:56.079><c> contain</c>

00:50:56.549 --> 00:50:56.559 align:start position:0%
input that contain
 

00:50:56.559 --> 00:50:59.030 align:start position:0%
input that contain
x<00:50:57.280><c> i</c><00:50:57.440><c> can</c><00:50:57.599><c> redirect</c><00:50:58.160><c> tell</c><00:50:58.480><c> the</c><00:50:58.640><c> shell</c><00:50:58.880><c> to</c>

00:50:59.030 --> 00:50:59.040 align:start position:0%
x i can redirect tell the shell to
 

00:50:59.040 --> 00:51:01.589 align:start position:0%
x i can redirect tell the shell to
redirect<00:50:59.599><c> its</c><00:50:59.760><c> input</c><00:51:00.079><c> from</c><00:51:00.240><c> the</c><00:51:00.400><c> file</c><00:51:00.800><c> out</c>

00:51:01.589 --> 00:51:01.599 align:start position:0%
redirect its input from the file out
 

00:51:01.599 --> 00:51:03.990 align:start position:0%
redirect its input from the file out
in<00:51:01.760><c> order</c><00:51:02.000><c> to</c><00:51:02.079><c> look</c><00:51:02.240><c> for</c><00:51:02.480><c> instances</c><00:51:02.960><c> of</c><00:51:03.200><c> x</c><00:51:03.920><c> in</c>

00:51:03.990 --> 00:51:04.000 align:start position:0%
in order to look for instances of x in
 

00:51:04.000 --> 00:51:07.030 align:start position:0%
in order to look for instances of x in
that<00:51:04.319><c> saved</c><00:51:04.720><c> ls</c><00:51:05.200><c> output</c>

00:51:07.030 --> 00:51:07.040 align:start position:0%
that saved ls output
 

00:51:07.040 --> 00:51:09.910 align:start position:0%
that saved ls output
and<00:51:07.280><c> turns</c><00:51:07.520><c> out</c><00:51:07.599><c> there's</c><00:51:07.839><c> three</c><00:51:08.240><c> files</c><00:51:09.680><c> um</c>

00:51:09.910 --> 00:51:09.920 align:start position:0%
and turns out there's three files um
 

00:51:09.920 --> 00:51:10.790 align:start position:0%
and turns out there's three files um
whose<00:51:10.160><c> names</c>

00:51:10.790 --> 00:51:10.800 align:start position:0%
whose names
 

00:51:10.800 --> 00:51:13.990 align:start position:0%
whose names
contain<00:51:11.280><c> x's</c>

00:51:13.990 --> 00:51:14.000 align:start position:0%
 
 

00:51:14.000 --> 00:51:16.549 align:start position:0%
 
um<00:51:15.520><c> we're</c><00:51:15.680><c> going</c><00:51:15.760><c> to</c><00:51:15.839><c> spend</c><00:51:16.079><c> a</c><00:51:16.160><c> bunch</c><00:51:16.319><c> of</c><00:51:16.400><c> time</c>

00:51:16.549 --> 00:51:16.559 align:start position:0%
um we're going to spend a bunch of time
 

00:51:16.559 --> 00:51:17.349 align:start position:0%
um we're going to spend a bunch of time
with<00:51:16.720><c> the</c><00:51:16.880><c> shell</c>

00:51:17.349 --> 00:51:17.359 align:start position:0%
with the shell
 

00:51:17.359 --> 00:51:21.829 align:start position:0%
with the shell
um<00:51:19.040><c> it</c><00:51:19.280><c> the</c><00:51:19.760><c> shell</c><00:51:20.000><c> is</c><00:51:20.079><c> sort</c><00:51:20.240><c> of</c><00:51:20.400><c> the</c><00:51:20.839><c> most</c>

00:51:21.829 --> 00:51:21.839 align:start position:0%
um it the shell is sort of the most
 

00:51:21.839 --> 00:51:22.950 align:start position:0%
um it the shell is sort of the most
traditional

00:51:22.950 --> 00:51:22.960 align:start position:0%
traditional
 

00:51:22.960 --> 00:51:25.829 align:start position:0%
traditional
um<00:51:23.280><c> and</c><00:51:23.440><c> fundamental</c><00:51:24.000><c> interface</c><00:51:24.800><c> to</c><00:51:25.440><c> uh</c><00:51:25.680><c> to</c>

00:51:25.829 --> 00:51:25.839 align:start position:0%
um and fundamental interface to uh to
 

00:51:25.839 --> 00:51:26.549 align:start position:0%
um and fundamental interface to uh to
unix

00:51:26.549 --> 00:51:26.559 align:start position:0%
unix
 

00:51:26.559 --> 00:51:28.870 align:start position:0%
unix
because<00:51:26.800><c> when</c><00:51:26.960><c> units</c><00:51:27.280><c> was</c><00:51:27.440><c> first</c><00:51:27.680><c> developed</c>

00:51:28.870 --> 00:51:28.880 align:start position:0%
because when units was first developed
 

00:51:28.880 --> 00:51:30.230 align:start position:0%
because when units was first developed
all<00:51:29.040><c> there</c><00:51:29.200><c> was</c><00:51:29.359><c> was</c><00:51:29.520><c> simple</c><00:51:29.839><c> terminal</c>

00:51:30.230 --> 00:51:30.240 align:start position:0%
all there was was simple terminal
 

00:51:30.240 --> 00:51:32.470 align:start position:0%
all there was was simple terminal
interfaces<00:51:30.720><c> like</c><00:51:30.960><c> the</c><00:51:31.040><c> one</c><00:51:31.200><c> we're</c><00:51:31.359><c> using</c>

00:51:32.470 --> 00:51:32.480 align:start position:0%
interfaces like the one we're using
 

00:51:32.480 --> 00:51:35.430 align:start position:0%
interfaces like the one we're using
and<00:51:32.800><c> the</c><00:51:32.960><c> main</c><00:51:33.200><c> use</c><00:51:33.440><c> of</c><00:51:33.920><c> unix</c><00:51:34.319><c> originally</c><00:51:34.800><c> was</c>

00:51:35.430 --> 00:51:35.440 align:start position:0%
and the main use of unix originally was
 

00:51:35.440 --> 00:51:35.829 align:start position:0%
and the main use of unix originally was
time

00:51:35.829 --> 00:51:35.839 align:start position:0%
time
 

00:51:35.839 --> 00:51:37.510 align:start position:0%
time
sharing<00:51:36.160><c> a</c><00:51:36.240><c> bunch</c><00:51:36.480><c> of</c><00:51:36.720><c> people</c><00:51:36.960><c> logging</c><00:51:37.280><c> into</c>

00:51:37.510 --> 00:51:37.520 align:start position:0%
sharing a bunch of people logging into
 

00:51:37.520 --> 00:51:40.470 align:start position:0%
sharing a bunch of people logging into
the<00:51:37.599><c> same</c><00:51:37.839><c> machine</c><00:51:38.400><c> much</c><00:51:38.640><c> like</c><00:51:38.880><c> athena</c>

00:51:40.470 --> 00:51:40.480 align:start position:0%
the same machine much like athena
 

00:51:40.480 --> 00:51:44.230 align:start position:0%
the same machine much like athena
and<00:51:40.640><c> talking</c><00:51:40.960><c> to</c><00:51:41.119><c> shells</c>

00:51:44.230 --> 00:51:44.240 align:start position:0%
 
 

00:51:44.240 --> 00:51:46.710 align:start position:0%
 
a<00:51:44.559><c> question</c><00:51:44.880><c> about</c><00:51:45.200><c> system</c><00:51:45.680><c> calls</c><00:51:46.400><c> and</c><00:51:46.559><c> the</c>

00:51:46.710 --> 00:51:46.720 align:start position:0%
a question about system calls and the
 

00:51:46.720 --> 00:51:47.670 align:start position:0%
a question about system calls and the
compiler

00:51:47.670 --> 00:51:47.680 align:start position:0%
compiler
 

00:51:47.680 --> 00:51:49.670 align:start position:0%
compiler
how<00:51:47.839><c> does</c><00:51:48.000><c> a</c><00:51:48.079><c> compiler</c><00:51:48.640><c> handle</c><00:51:48.880><c> system</c><00:51:49.280><c> calls</c>

00:51:49.670 --> 00:51:49.680 align:start position:0%
how does a compiler handle system calls
 

00:51:49.680 --> 00:51:51.670 align:start position:0%
how does a compiler handle system calls
does<00:51:50.079><c> assembly</c><00:51:50.559><c> generated</c><00:51:51.040><c> make</c><00:51:51.200><c> a</c><00:51:51.280><c> procedure</c>

00:51:51.670 --> 00:51:51.680 align:start position:0%
does assembly generated make a procedure
 

00:51:51.680 --> 00:51:53.510 align:start position:0%
does assembly generated make a procedure
call<00:51:51.920><c> to</c><00:51:52.079><c> some</c><00:51:52.240><c> code</c><00:51:52.559><c> segment</c>

00:51:53.510 --> 00:51:53.520 align:start position:0%
call to some code segment
 

00:51:53.520 --> 00:51:56.950 align:start position:0%
call to some code segment
uh<00:51:53.680><c> defined</c><00:51:54.079><c> by</c><00:51:54.240><c> the</c><00:51:54.400><c> operating</c><00:51:54.800><c> system</c>

00:51:56.950 --> 00:51:56.960 align:start position:0%
uh defined by the operating system
 

00:51:56.960 --> 00:51:58.950 align:start position:0%
uh defined by the operating system
uh<00:51:57.200><c> there's</c><00:51:57.440><c> a</c><00:51:57.599><c> special</c><00:51:58.319><c> risk</c><00:51:58.640><c> five</c>

00:51:58.950 --> 00:51:58.960 align:start position:0%
uh there's a special risk five
 

00:51:58.960 --> 00:52:01.109 align:start position:0%
uh there's a special risk five
instruction<00:51:59.680><c> that</c><00:51:59.920><c> a</c><00:52:00.000><c> program</c><00:52:00.400><c> can</c><00:52:00.559><c> call</c><00:52:00.880><c> that</c>

00:52:01.109 --> 00:52:01.119 align:start position:0%
instruction that a program can call that
 

00:52:01.119 --> 00:52:02.790 align:start position:0%
instruction that a program can call that
transfers<00:52:01.599><c> control</c><00:52:02.000><c> into</c><00:52:02.160><c> the</c><00:52:02.240><c> kernel</c>

00:52:02.790 --> 00:52:02.800 align:start position:0%
transfers control into the kernel
 

00:52:02.800 --> 00:52:05.349 align:start position:0%
transfers control into the kernel
so<00:52:03.440><c> indeed</c><00:52:04.240><c> when</c><00:52:04.400><c> you</c><00:52:04.559><c> write</c><00:52:04.800><c> c</c><00:52:05.040><c> code</c><00:52:05.280><c> that</c>

00:52:05.349 --> 00:52:05.359 align:start position:0%
so indeed when you write c code that
 

00:52:05.359 --> 00:52:06.710 align:start position:0%
so indeed when you write c code that
makes<00:52:05.599><c> the</c><00:52:05.680><c> system</c><00:52:06.000><c> called</c><00:52:06.160><c> like</c><00:52:06.319><c> open</c><00:52:06.640><c> or</c>

00:52:06.710 --> 00:52:06.720 align:start position:0%
makes the system called like open or
 

00:52:06.720 --> 00:52:08.470 align:start position:0%
makes the system called like open or
right

00:52:08.470 --> 00:52:08.480 align:start position:0%
right
 

00:52:08.480 --> 00:52:10.230 align:start position:0%
right
i<00:52:08.559><c> mean</c><00:52:08.720><c> technically</c><00:52:09.119><c> what</c><00:52:09.440><c> actually</c><00:52:09.839><c> happens</c>

00:52:10.230 --> 00:52:10.240 align:start position:0%
i mean technically what actually happens
 

00:52:10.240 --> 00:52:11.990 align:start position:0%
i mean technically what actually happens
is<00:52:10.480><c> open</c><00:52:11.280><c> is</c><00:52:11.440><c> a</c><00:52:11.599><c> c</c>

00:52:11.990 --> 00:52:12.000 align:start position:0%
is open is a c
 

00:52:12.000 --> 00:52:15.109 align:start position:0%
is open is a c
function<00:52:12.720><c> in</c><00:52:12.880><c> the</c><00:52:13.040><c> c</c><00:52:13.280><c> library</c>

00:52:15.109 --> 00:52:15.119 align:start position:0%
function in the c library
 

00:52:15.119 --> 00:52:17.589 align:start position:0%
function in the c library
but<00:52:15.359><c> the</c><00:52:15.599><c> instructions</c><00:52:16.800><c> in</c><00:52:16.880><c> that</c><00:52:17.200><c> function</c>

00:52:17.589 --> 00:52:17.599 align:start position:0%
but the instructions in that function
 

00:52:17.599 --> 00:52:18.470 align:start position:0%
but the instructions in that function
are<00:52:17.760><c> really</c>

00:52:18.470 --> 00:52:18.480 align:start position:0%
are really
 

00:52:18.480 --> 00:52:20.470 align:start position:0%
are really
machine<00:52:18.960><c> instructions</c><00:52:19.520><c> it's</c><00:52:19.680><c> not</c><00:52:20.160><c> you</c><00:52:20.240><c> know</c>

00:52:20.470 --> 00:52:20.480 align:start position:0%
machine instructions it's not you know
 

00:52:20.480 --> 00:52:21.670 align:start position:0%
machine instructions it's not you know
open

00:52:21.670 --> 00:52:21.680 align:start position:0%
open
 

00:52:21.680 --> 00:52:23.109 align:start position:0%
open
the<00:52:21.920><c> open</c><00:52:22.240><c> function</c><00:52:22.640><c> that</c><00:52:22.720><c> we're</c><00:52:22.880><c> calling</c>

00:52:23.109 --> 00:52:23.119 align:start position:0%
the open function that we're calling
 

00:52:23.119 --> 00:52:25.030 align:start position:0%
the open function that we're calling
isn't<00:52:23.440><c> a</c><00:52:23.520><c> c</c><00:52:23.760><c> function</c><00:52:24.160><c> it's</c><00:52:24.400><c> implemented</c>

00:52:25.030 --> 00:52:25.040 align:start position:0%
isn't a c function it's implemented
 

00:52:25.040 --> 00:52:25.910 align:start position:0%
isn't a c function it's implemented
assembler

00:52:25.910 --> 00:52:25.920 align:start position:0%
assembler
 

00:52:25.920 --> 00:52:30.230 align:start position:0%
assembler
and<00:52:26.880><c> the</c><00:52:27.040><c> assembly</c><00:52:27.680><c> code</c>

00:52:30.230 --> 00:52:30.240 align:start position:0%
 
 

00:52:30.240 --> 00:52:32.069 align:start position:0%
 
consists<00:52:30.800><c> of</c><00:52:30.880><c> this</c><00:52:31.119><c> special</c><00:52:31.599><c> instruction</c>

00:52:32.069 --> 00:52:32.079 align:start position:0%
consists of this special instruction
 

00:52:32.079 --> 00:52:33.990 align:start position:0%
consists of this special instruction
it's<00:52:32.240><c> actually</c><00:52:32.480><c> called</c><00:52:32.800><c> e-call</c>

00:52:33.990 --> 00:52:34.000 align:start position:0%
it's actually called e-call
 

00:52:34.000 --> 00:52:35.829 align:start position:0%
it's actually called e-call
on<00:52:34.160><c> the</c><00:52:34.240><c> risk</c><00:52:34.559><c> 5</c><00:52:34.880><c> the</c><00:52:35.040><c> special</c><00:52:35.359><c> instruction</c>

00:52:35.829 --> 00:52:35.839 align:start position:0%
on the risk 5 the special instruction
 

00:52:35.839 --> 00:52:37.510 align:start position:0%
on the risk 5 the special instruction
that<00:52:36.000><c> transfers</c><00:52:36.480><c> control</c>

00:52:37.510 --> 00:52:37.520 align:start position:0%
that transfers control
 

00:52:37.520 --> 00:52:39.990 align:start position:0%
that transfers control
into<00:52:37.760><c> the</c><00:52:37.839><c> kernel</c><00:52:39.280><c> and</c><00:52:39.359><c> then</c><00:52:39.520><c> the</c><00:52:39.599><c> kernel</c>

00:52:39.990 --> 00:52:40.000 align:start position:0%
into the kernel and then the kernel
 

00:52:40.000 --> 00:52:40.710 align:start position:0%
into the kernel and then the kernel
looks<00:52:40.240><c> at</c><00:52:40.400><c> the</c>

00:52:40.710 --> 00:52:40.720 align:start position:0%
looks at the
 

00:52:40.720 --> 00:52:42.549 align:start position:0%
looks at the
process's<00:52:41.200><c> memory</c><00:52:41.599><c> and</c><00:52:41.680><c> registers</c><00:52:42.160><c> to</c><00:52:42.319><c> figure</c>

00:52:42.549 --> 00:52:42.559 align:start position:0%
process's memory and registers to figure
 

00:52:42.559 --> 00:52:44.150 align:start position:0%
process's memory and registers to figure
out<00:52:42.720><c> what</c><00:52:42.960><c> the</c>

00:52:44.150 --> 00:52:44.160 align:start position:0%
out what the
 

00:52:44.160 --> 00:52:50.470 align:start position:0%
out what the
arguments<00:52:44.839><c> were</c>

00:52:50.470 --> 00:52:50.480 align:start position:0%
 
 

00:52:50.480 --> 00:52:53.589 align:start position:0%
 
all<00:52:50.640><c> right</c><00:52:51.440><c> um</c><00:52:52.640><c> the</c><00:52:52.800><c> next</c><00:52:53.040><c> example</c><00:52:53.359><c> i</c><00:52:53.440><c> want</c><00:52:53.520><c> to</c>

00:52:53.589 --> 00:52:53.599 align:start position:0%
all right um the next example i want to
 

00:52:53.599 --> 00:52:54.790 align:start position:0%
all right um the next example i want to
look<00:52:53.760><c> at</c><00:52:53.920><c> is</c>

00:52:54.790 --> 00:52:54.800 align:start position:0%
look at is
 

00:52:54.800 --> 00:52:58.309 align:start position:0%
look at is
an<00:52:55.119><c> example</c><00:52:55.440><c> program</c><00:52:55.760><c> that</c><00:52:55.839><c> calls</c><00:52:56.240><c> fork</c>

00:52:58.309 --> 00:52:58.319 align:start position:0%
an example program that calls fork
 

00:52:58.319 --> 00:53:01.349 align:start position:0%
an example program that calls fork
to<00:52:58.480><c> create</c><00:52:58.720><c> a</c><00:52:58.800><c> new</c><00:52:58.960><c> process</c><00:53:00.160><c> um</c>

00:53:01.349 --> 00:53:01.359 align:start position:0%
to create a new process um
 

00:53:01.359 --> 00:53:04.630 align:start position:0%
to create a new process um
so<00:53:01.520><c> this</c><00:53:01.760><c> is</c><00:53:01.839><c> the</c><00:53:03.440><c> very</c><00:53:03.680><c> simple</c><00:53:04.000><c> use</c><00:53:04.240><c> of</c><00:53:04.319><c> fork</c>

00:53:04.630 --> 00:53:04.640 align:start position:0%
so this is the very simple use of fork
 

00:53:04.640 --> 00:53:05.750 align:start position:0%
so this is the very simple use of fork
at<00:53:04.720><c> line</c><00:53:04.960><c> 12</c>

00:53:05.750 --> 00:53:05.760 align:start position:0%
at line 12
 

00:53:05.760 --> 00:53:08.630 align:start position:0%
at line 12
we're<00:53:06.000><c> calling</c><00:53:06.480><c> fork</c><00:53:06.880><c> and</c><00:53:07.119><c> what</c><00:53:07.359><c> fork</c><00:53:07.599><c> does</c><00:53:07.839><c> is</c>

00:53:08.630 --> 00:53:08.640 align:start position:0%
we're calling fork and what fork does is
 

00:53:08.640 --> 00:53:09.990 align:start position:0%
we're calling fork and what fork does is
creates<00:53:08.960><c> a</c><00:53:09.119><c> copy</c>

00:53:09.990 --> 00:53:10.000 align:start position:0%
creates a copy
 

00:53:10.000 --> 00:53:12.549 align:start position:0%
creates a copy
of<00:53:10.160><c> the</c><00:53:10.319><c> memory</c><00:53:10.960><c> of</c><00:53:11.440><c> instructions</c><00:53:12.000><c> and</c><00:53:12.160><c> data</c>

00:53:12.549 --> 00:53:12.559 align:start position:0%
of the memory of instructions and data
 

00:53:12.559 --> 00:53:13.349 align:start position:0%
of the memory of instructions and data
of<00:53:12.720><c> the</c>

00:53:13.349 --> 00:53:13.359 align:start position:0%
of the
 

00:53:13.359 --> 00:53:14.950 align:start position:0%
of the
calling<00:53:13.680><c> process</c><00:53:14.400><c> now</c><00:53:14.559><c> we</c><00:53:14.640><c> have</c><00:53:14.720><c> two</c>

00:53:14.950 --> 00:53:14.960 align:start position:0%
calling process now we have two
 

00:53:14.960 --> 00:53:16.790 align:start position:0%
calling process now we have two
processes<00:53:15.520><c> with</c><00:53:15.760><c> identical</c>

00:53:16.790 --> 00:53:16.800 align:start position:0%
processes with identical
 

00:53:16.800 --> 00:53:19.430 align:start position:0%
processes with identical
memory<00:53:18.000><c> fork</c><00:53:18.480><c> the</c><00:53:18.640><c> fork</c><00:53:18.880><c> system</c><00:53:19.200><c> called</c>

00:53:19.430 --> 00:53:19.440 align:start position:0%
memory fork the fork system called
 

00:53:19.440 --> 00:53:20.150 align:start position:0%
memory fork the fork system called
returns

00:53:20.150 --> 00:53:20.160 align:start position:0%
returns
 

00:53:20.160 --> 00:53:23.109 align:start position:0%
returns
in<00:53:20.319><c> both</c><00:53:20.720><c> processes</c><00:53:22.480><c> in</c><00:53:22.640><c> the</c><00:53:22.720><c> original</c>

00:53:23.109 --> 00:53:23.119 align:start position:0%
in both processes in the original
 

00:53:23.119 --> 00:53:24.309 align:start position:0%
in both processes in the original
process

00:53:24.309 --> 00:53:24.319 align:start position:0%
process
 

00:53:24.319 --> 00:53:26.630 align:start position:0%
process
the<00:53:24.640><c> fork</c><00:53:24.960><c> system</c><00:53:25.280><c> call</c><00:53:25.520><c> returns</c><00:53:26.000><c> the</c><00:53:26.240><c> process</c>

00:53:26.630 --> 00:53:26.640 align:start position:0%
the fork system call returns the process
 

00:53:26.640 --> 00:53:29.030 align:start position:0%
the fork system call returns the process
id<00:53:27.040><c> which</c><00:53:27.200><c> is</c><00:53:27.359><c> a</c>

00:53:29.030 --> 00:53:29.040 align:start position:0%
id which is a
 

00:53:29.040 --> 00:53:32.390 align:start position:0%
id which is a
an<00:53:29.200><c> integer</c><00:53:29.599><c> greater</c><00:53:29.839><c> than</c><00:53:30.079><c> zero</c><00:53:30.800><c> for</c><00:53:32.000><c> in</c><00:53:32.160><c> the</c>

00:53:32.390 --> 00:53:32.400 align:start position:0%
an integer greater than zero for in the
 

00:53:32.400 --> 00:53:33.270 align:start position:0%
an integer greater than zero for in the
original<00:53:32.720><c> process</c>

00:53:33.270 --> 00:53:33.280 align:start position:0%
original process
 

00:53:33.280 --> 00:53:35.270 align:start position:0%
original process
fork<00:53:33.599><c> returns</c><00:53:33.920><c> the</c><00:53:34.000><c> process</c><00:53:34.319><c> id</c><00:53:34.640><c> of</c><00:53:34.800><c> the</c><00:53:34.880><c> newly</c>

00:53:35.270 --> 00:53:35.280 align:start position:0%
fork returns the process id of the newly
 

00:53:35.280 --> 00:53:36.630 align:start position:0%
fork returns the process id of the newly
created<00:53:35.599><c> process</c>

00:53:36.630 --> 00:53:36.640 align:start position:0%
created process
 

00:53:36.640 --> 00:53:38.790 align:start position:0%
created process
and<00:53:36.800><c> in</c><00:53:36.880><c> the</c><00:53:36.960><c> newly</c><00:53:37.280><c> created</c><00:53:37.680><c> process</c><00:53:38.480><c> fork</c>

00:53:38.790 --> 00:53:38.800 align:start position:0%
and in the newly created process fork
 

00:53:38.800 --> 00:53:39.990 align:start position:0%
and in the newly created process fork
returns

00:53:39.990 --> 00:53:40.000 align:start position:0%
returns
 

00:53:40.000 --> 00:53:42.950 align:start position:0%
returns
zero<00:53:41.599><c> so</c><00:53:41.760><c> we</c><00:53:42.000><c> sort</c><00:53:42.160><c> of</c><00:53:42.240><c> break</c><00:53:42.559><c> even</c><00:53:42.720><c> though</c><00:53:42.880><c> the</c>

00:53:42.950 --> 00:53:42.960 align:start position:0%
zero so we sort of break even though the
 

00:53:42.960 --> 00:53:45.510 align:start position:0%
zero so we sort of break even though the
processes<00:53:43.520><c> of</c><00:53:43.760><c> identical</c><00:53:44.160><c> memory</c>

00:53:45.510 --> 00:53:45.520 align:start position:0%
processes of identical memory
 

00:53:45.520 --> 00:53:48.470 align:start position:0%
processes of identical memory
can<00:53:45.760><c> break</c><00:53:46.079><c> the</c><00:53:46.240><c> symmetry</c><00:53:46.800><c> of</c><00:53:47.680><c> old</c><00:53:47.920><c> versus</c><00:53:48.240><c> new</c>

00:53:48.470 --> 00:53:48.480 align:start position:0%
can break the symmetry of old versus new
 

00:53:48.480 --> 00:53:50.870 align:start position:0%
can break the symmetry of old versus new
process<00:53:48.880><c> by</c><00:53:49.040><c> the</c><00:53:49.200><c> return</c><00:53:49.599><c> value</c><00:53:49.920><c> from</c><00:53:50.160><c> fork</c>

00:53:50.870 --> 00:53:50.880 align:start position:0%
process by the return value from fork
 

00:53:50.880 --> 00:53:53.829 align:start position:0%
process by the return value from fork
then<00:53:51.119><c> in</c><00:53:51.200><c> line</c><00:53:51.520><c> 16</c><00:53:52.319><c> you</c><00:53:52.480><c> can</c><00:53:52.640><c> see</c><00:53:53.440><c> code</c><00:53:53.760><c> that</c>

00:53:53.829 --> 00:53:53.839 align:start position:0%
then in line 16 you can see code that
 

00:53:53.839 --> 00:53:54.870 align:start position:0%
then in line 16 you can see code that
checks<00:53:54.240><c> and</c><00:53:54.319><c> says</c><00:53:54.640><c> if</c>

00:53:54.870 --> 00:53:54.880 align:start position:0%
checks and says if
 

00:53:54.880 --> 00:53:57.030 align:start position:0%
checks and says if
process<00:53:55.200><c> id</c><00:53:55.440><c> is</c><00:53:55.599><c> equal</c><00:53:55.760><c> 0</c><00:53:56.079><c> must</c><00:53:56.240><c> be</c><00:53:56.400><c> the</c><00:53:56.480><c> child</c>

00:53:57.030 --> 00:53:57.040 align:start position:0%
process id is equal 0 must be the child
 

00:53:57.040 --> 00:54:00.390 align:start position:0%
process id is equal 0 must be the child
we<00:53:57.200><c> must</c><00:53:57.359><c> now</c><00:53:57.520><c> be</c><00:53:57.680><c> running</c><00:53:57.920><c> in</c><00:53:58.079><c> the</c><00:53:58.160><c> child</c>

00:54:00.390 --> 00:54:00.400 align:start position:0%
we must now be running in the child
 

00:54:00.400 --> 00:54:01.910 align:start position:0%
we must now be running in the child
the<00:54:00.559><c> course</c><00:54:00.800><c> is</c><00:54:00.880><c> two</c><00:54:01.119><c> processes</c><00:54:01.599><c> and</c><00:54:01.760><c> in</c><00:54:01.839><c> the</c>

00:54:01.910 --> 00:54:01.920 align:start position:0%
the course is two processes and in the
 

00:54:01.920 --> 00:54:03.670 align:start position:0%
the course is two processes and in the
other<00:54:02.079><c> process</c>

00:54:03.670 --> 00:54:03.680 align:start position:0%
other process
 

00:54:03.680 --> 00:54:05.109 align:start position:0%
other process
in<00:54:03.760><c> the</c><00:54:03.920><c> calling</c><00:54:04.240><c> process</c><00:54:04.559><c> which</c><00:54:04.800><c> is</c><00:54:04.880><c> usually</c>

00:54:05.109 --> 00:54:05.119 align:start position:0%
in the calling process which is usually
 

00:54:05.119 --> 00:54:07.190 align:start position:0%
in the calling process which is usually
called<00:54:05.359><c> the</c><00:54:05.440><c> parent</c><00:54:06.240><c> the</c><00:54:06.400><c> process</c><00:54:06.800><c> id</c><00:54:07.040><c> is</c>

00:54:07.190 --> 00:54:07.200 align:start position:0%
called the parent the process id is
 

00:54:07.200 --> 00:54:09.270 align:start position:0%
called the parent the process id is
greater<00:54:07.440><c> than</c><00:54:07.680><c> zero</c>

00:54:09.270 --> 00:54:09.280 align:start position:0%
greater than zero
 

00:54:09.280 --> 00:54:11.589 align:start position:0%
greater than zero
so<00:54:09.440><c> the</c><00:54:09.599><c> child</c><00:54:10.000><c> will</c><00:54:10.160><c> print</c><00:54:10.559><c> child</c><00:54:11.119><c> and</c><00:54:11.359><c> the</c>

00:54:11.589 --> 00:54:11.599 align:start position:0%
so the child will print child and the
 

00:54:11.599 --> 00:54:14.470 align:start position:0%
so the child will print child and the
parent<00:54:12.240><c> a</c><00:54:12.400><c> good</c><00:54:12.640><c> parent</c>

00:54:14.470 --> 00:54:14.480 align:start position:0%
parent a good parent
 

00:54:14.480 --> 00:54:17.349 align:start position:0%
parent a good parent
and<00:54:14.559><c> then</c><00:54:14.800><c> they'll</c><00:54:14.960><c> both</c><00:54:16.079><c> exit</c><00:54:16.720><c> so</c><00:54:16.880><c> when</c><00:54:16.960><c> i</c><00:54:17.119><c> run</c>

00:54:17.349 --> 00:54:17.359 align:start position:0%
and then they'll both exit so when i run
 

00:54:17.359 --> 00:54:19.349 align:start position:0%
and then they'll both exit so when i run
for

00:54:19.349 --> 00:54:19.359 align:start position:0%
for
 

00:54:19.359 --> 00:54:22.710 align:start position:0%
for
um<00:54:19.599><c> here's</c><00:54:19.839><c> what</c><00:54:19.920><c> we</c><00:54:20.079><c> get</c>

00:54:22.710 --> 00:54:22.720 align:start position:0%
 
 

00:54:22.720 --> 00:54:25.430 align:start position:0%
 
so<00:54:22.880><c> it</c><00:54:22.960><c> may</c><00:54:23.119><c> look</c><00:54:23.280><c> like</c><00:54:23.520><c> garbage</c><00:54:25.119><c> but</c><00:54:25.280><c> what's</c>

00:54:25.430 --> 00:54:25.440 align:start position:0%
so it may look like garbage but what's
 

00:54:25.440 --> 00:54:26.790 align:start position:0%
so it may look like garbage but what's
actually<00:54:25.760><c> happening</c><00:54:26.160><c> is</c><00:54:26.240><c> that</c>

00:54:26.790 --> 00:54:26.800 align:start position:0%
actually happening is that
 

00:54:26.800 --> 00:54:28.549 align:start position:0%
actually happening is that
after<00:54:27.040><c> the</c><00:54:27.200><c> fork</c><00:54:27.520><c> both</c><00:54:27.760><c> of</c><00:54:27.839><c> these</c><00:54:28.000><c> processes</c>

00:54:28.549 --> 00:54:28.559 align:start position:0%
after the fork both of these processes
 

00:54:28.559 --> 00:54:30.069 align:start position:0%
after the fork both of these processes
are<00:54:28.640><c> running</c><00:54:29.119><c> they're</c><00:54:29.280><c> both</c><00:54:29.520><c> running</c><00:54:29.839><c> at</c><00:54:29.920><c> the</c>

00:54:30.069 --> 00:54:30.079 align:start position:0%
are running they're both running at the
 

00:54:30.079 --> 00:54:31.030 align:start position:0%
are running they're both running at the
same<00:54:30.319><c> time</c>

00:54:31.030 --> 00:54:31.040 align:start position:0%
same time
 

00:54:31.040 --> 00:54:34.150 align:start position:0%
same time
um<00:54:31.280><c> and</c><00:54:31.839><c> qmu</c><00:54:32.240><c> is</c><00:54:32.319><c> actually</c><00:54:32.559><c> emulating</c><00:54:33.040><c> a</c><00:54:33.280><c> multi</c>

00:54:34.150 --> 00:54:34.160 align:start position:0%
um and qmu is actually emulating a multi
 

00:54:34.160 --> 00:54:36.950 align:start position:0%
um and qmu is actually emulating a multi
a<00:54:34.319><c> multi-core</c><00:54:35.680><c> microprocessor</c><00:54:36.480><c> for</c><00:54:36.640><c> me</c><00:54:36.799><c> so</c>

00:54:36.950 --> 00:54:36.960 align:start position:0%
a multi-core microprocessor for me so
 

00:54:36.960 --> 00:54:39.190 align:start position:0%
a multi-core microprocessor for me so
they<00:54:37.119><c> really</c><00:54:37.440><c> are</c><00:54:37.599><c> running</c>

00:54:39.190 --> 00:54:39.200 align:start position:0%
they really are running
 

00:54:39.200 --> 00:54:40.549 align:start position:0%
they really are running
at<00:54:39.280><c> the</c><00:54:39.359><c> very</c><00:54:39.599><c> same</c><00:54:39.839><c> time</c><00:54:40.079><c> and</c><00:54:40.160><c> so</c><00:54:40.319><c> when</c><00:54:40.480><c> they</c>

00:54:40.549 --> 00:54:40.559 align:start position:0%
at the very same time and so when they
 

00:54:40.559 --> 00:54:42.549 align:start position:0%
at the very same time and so when they
produce<00:54:40.960><c> output</c><00:54:41.680><c> they're</c><00:54:41.920><c> producing</c><00:54:42.319><c> each</c>

00:54:42.549 --> 00:54:42.559 align:start position:0%
produce output they're producing each
 

00:54:42.559 --> 00:54:44.390 align:start position:0%
produce output they're producing each
byte<00:54:42.880><c> of</c><00:54:42.960><c> their</c><00:54:43.119><c> output</c><00:54:43.520><c> at</c><00:54:43.680><c> the</c><00:54:43.760><c> same</c><00:54:44.000><c> time</c><00:54:44.240><c> as</c>

00:54:44.390 --> 00:54:44.400 align:start position:0%
byte of their output at the same time as
 

00:54:44.400 --> 00:54:45.190 align:start position:0%
byte of their output at the same time as
the<00:54:44.480><c> other</c><00:54:44.720><c> process</c>

00:54:45.190 --> 00:54:45.200 align:start position:0%
the other process
 

00:54:45.200 --> 00:54:46.630 align:start position:0%
the other process
is<00:54:45.280><c> producing</c><00:54:45.680><c> the</c><00:54:45.760><c> corresponding</c><00:54:46.240><c> byte</c><00:54:46.480><c> of</c>

00:54:46.630 --> 00:54:46.640 align:start position:0%
is producing the corresponding byte of
 

00:54:46.640 --> 00:54:48.470 align:start position:0%
is producing the corresponding byte of
its<00:54:46.799><c> output</c><00:54:47.520><c> so</c><00:54:47.680><c> the</c><00:54:47.839><c> outputs</c><00:54:48.160><c> and</c><00:54:48.240><c> the</c><00:54:48.319><c> two</c>

00:54:48.470 --> 00:54:48.480 align:start position:0%
its output so the outputs and the two
 

00:54:48.480 --> 00:54:50.829 align:start position:0%
its output so the outputs and the two
processes<00:54:49.040><c> are</c>

00:54:50.829 --> 00:54:50.839 align:start position:0%
processes are
 

00:54:50.839 --> 00:54:53.190 align:start position:0%
processes are
interleaved<00:54:52.160><c> um</c><00:54:52.400><c> you</c><00:54:52.559><c> can</c><00:54:52.640><c> see</c><00:54:52.799><c> that</c><00:54:53.040><c> they're</c>

00:54:53.190 --> 00:54:53.200 align:start position:0%
interleaved um you can see that they're
 

00:54:53.200 --> 00:54:54.710 align:start position:0%
interleaved um you can see that they're
both<00:54:53.359><c> typing</c><00:54:53.760><c> f</c>

00:54:54.710 --> 00:54:54.720 align:start position:0%
both typing f
 

00:54:54.720 --> 00:54:56.309 align:start position:0%
both typing f
um<00:54:55.280><c> they're</c><00:54:55.440><c> both</c><00:54:55.680><c> going</c><00:54:55.760><c> to</c><00:54:55.839><c> type</c><00:54:56.079><c> fork</c>

00:54:56.309 --> 00:54:56.319 align:start position:0%
um they're both going to type fork
 

00:54:56.319 --> 00:54:57.750 align:start position:0%
um they're both going to type fork
returned

00:54:57.750 --> 00:54:57.760 align:start position:0%
returned
 

00:54:57.760 --> 00:54:59.430 align:start position:0%
returned
um<00:54:58.160><c> so</c><00:54:58.319><c> you</c><00:54:58.400><c> can</c><00:54:58.480><c> see</c><00:54:58.640><c> the</c><00:54:58.799><c> f</c><00:54:58.960><c> from</c><00:54:59.119><c> both</c><00:54:59.359><c> of</c>

00:54:59.430 --> 00:54:59.440 align:start position:0%
um so you can see the f from both of
 

00:54:59.440 --> 00:55:00.870 align:start position:0%
um so you can see the f from both of
them<00:54:59.680><c> and</c><00:54:59.760><c> the</c><00:54:59.839><c> o</c><00:55:00.079><c> for</c><00:55:00.240><c> both</c><00:55:00.400><c> of</c><00:55:00.559><c> them</c><00:55:00.640><c> and</c><00:55:00.720><c> they</c>

00:55:00.870 --> 00:55:00.880 align:start position:0%
them and the o for both of them and they
 

00:55:00.880 --> 00:55:02.870 align:start position:0%
them and the o for both of them and they
are<00:55:00.960><c> for</c><00:55:01.119><c> both</c><00:55:01.359><c> them</c><00:55:01.520><c> and</c><00:55:01.599><c> so</c><00:55:01.839><c> on</c>

00:55:02.870 --> 00:55:02.880 align:start position:0%
are for both them and so on
 

00:55:02.880 --> 00:55:05.910 align:start position:0%
are for both them and so on
and<00:55:03.119><c> one</c><00:55:03.280><c> of</c><00:55:03.359><c> them</c><00:55:04.640><c> uh</c><00:55:05.040><c> you</c><00:55:05.200><c> can</c><00:55:05.280><c> see</c><00:55:05.440><c> the</c><00:55:05.599><c> zero</c>

00:55:05.910 --> 00:55:05.920 align:start position:0%
and one of them uh you can see the zero
 

00:55:05.920 --> 00:55:07.829 align:start position:0%
and one of them uh you can see the zero
at<00:55:06.000><c> the</c><00:55:06.160><c> end</c><00:55:06.240><c> of</c><00:55:06.319><c> that</c><00:55:06.480><c> first</c><00:55:06.720><c> line</c><00:55:07.040><c> is</c>

00:55:07.829 --> 00:55:07.839 align:start position:0%
at the end of that first line is
 

00:55:07.839 --> 00:55:10.789 align:start position:0%
at the end of that first line is
in<00:55:08.000><c> the</c><00:55:08.240><c> child</c><00:55:08.559><c> fourth</c><00:55:08.799><c> return</c><00:55:09.200><c> zero</c><00:55:10.079><c> um</c><00:55:10.640><c> and</c>

00:55:10.789 --> 00:55:10.799 align:start position:0%
in the child fourth return zero um and
 

00:55:10.799 --> 00:55:12.470 align:start position:0%
in the child fourth return zero um and
i'm<00:55:10.960><c> guessing</c><00:55:11.359><c> that</c><00:55:11.599><c> the</c>

00:55:12.470 --> 00:55:12.480 align:start position:0%
i'm guessing that the
 

00:55:12.480 --> 00:55:15.349 align:start position:0%
i'm guessing that the
in<00:55:12.640><c> the</c><00:55:12.799><c> parent</c><00:55:13.119><c> four</c><00:55:13.280><c> return</c><00:55:13.680><c> 19</c><00:55:14.799><c> that</c><00:55:15.040><c> is</c><00:55:15.200><c> the</c>

00:55:15.349 --> 00:55:15.359 align:start position:0%
in the parent four return 19 that is the
 

00:55:15.359 --> 00:55:16.069 align:start position:0%
in the parent four return 19 that is the
child's

00:55:16.069 --> 00:55:16.079 align:start position:0%
child's
 

00:55:16.079 --> 00:55:18.470 align:start position:0%
child's
process<00:55:16.480><c> id</c><00:55:16.720><c> is</c><00:55:16.799><c> nineteen</c><00:55:17.760><c> under</c><00:55:18.000><c> exit</c><00:55:18.319><c> six</c>

00:55:18.470 --> 00:55:18.480 align:start position:0%
process id is nineteen under exit six
 

00:55:18.480 --> 00:55:20.390 align:start position:0%
process id is nineteen under exit six
that<00:55:18.640><c> basically</c><00:55:18.960><c> means</c><00:55:19.280><c> the</c><00:55:19.359><c> 19th</c><00:55:19.920><c> process</c>

00:55:20.390 --> 00:55:20.400 align:start position:0%
that basically means the 19th process
 

00:55:20.400 --> 00:55:20.950 align:start position:0%
that basically means the 19th process
that

00:55:20.950 --> 00:55:20.960 align:start position:0%
that
 

00:55:20.960 --> 00:55:23.430 align:start position:0%
that
was<00:55:21.200><c> created</c><00:55:21.599><c> since</c><00:55:21.839><c> boot</c><00:55:22.799><c> um</c><00:55:23.040><c> and</c><00:55:23.119><c> then</c><00:55:23.280><c> one</c>

00:55:23.430 --> 00:55:23.440 align:start position:0%
was created since boot um and then one
 

00:55:23.440 --> 00:55:24.390 align:start position:0%
was created since boot um and then one
of<00:55:23.520><c> them</c><00:55:23.680><c> prints</c>

00:55:24.390 --> 00:55:24.400 align:start position:0%
of them prints
 

00:55:24.400 --> 00:55:27.510 align:start position:0%
of them prints
child<00:55:25.760><c> and</c><00:55:25.920><c> you</c><00:55:26.079><c> can</c><00:55:26.160><c> see</c><00:55:26.319><c> the</c><00:55:26.480><c> ch</c><00:55:26.880><c> ild</c>

00:55:27.510 --> 00:55:27.520 align:start position:0%
child and you can see the ch ild
 

00:55:27.520 --> 00:55:29.349 align:start position:0%
child and you can see the ch ild
and<00:55:27.760><c> interleave</c><00:55:28.160><c> with</c><00:55:28.319><c> that</c><00:55:28.559><c> is</c><00:55:28.720><c> the</c><00:55:29.119><c> other</c>

00:55:29.349 --> 00:55:29.359 align:start position:0%
and interleave with that is the other
 

00:55:29.359 --> 00:55:30.630 align:start position:0%
and interleave with that is the other
one<00:55:29.520><c> pretty</c><00:55:29.839><c> parent</c>

00:55:30.630 --> 00:55:30.640 align:start position:0%
one pretty parent
 

00:55:30.640 --> 00:55:33.990 align:start position:0%
one pretty parent
so<00:55:32.799><c> this</c><00:55:32.960><c> is</c><00:55:33.040><c> sort</c><00:55:33.200><c> of</c><00:55:33.359><c> a</c><00:55:33.440><c> silly</c><00:55:33.680><c> use</c>

00:55:33.990 --> 00:55:34.000 align:start position:0%
so this is sort of a silly use
 

00:55:34.000 --> 00:55:36.549 align:start position:0%
so this is sort of a silly use
of<00:55:34.079><c> fork</c><00:55:34.480><c> but</c><00:55:34.720><c> we</c><00:55:34.880><c> can</c><00:55:35.040><c> see</c><00:55:35.680><c> so</c><00:55:36.079><c> vividly</c><00:55:36.480><c> in</c>

00:55:36.549 --> 00:55:36.559 align:start position:0%
of fork but we can see so vividly in
 

00:55:36.559 --> 00:55:37.589 align:start position:0%
of fork but we can see so vividly in
this<00:55:36.799><c> output</c><00:55:37.200><c> that</c>

00:55:37.589 --> 00:55:37.599 align:start position:0%
this output that
 

00:55:37.599 --> 00:55:40.069 align:start position:0%
this output that
it's<00:55:37.839><c> created</c><00:55:38.160><c> two</c><00:55:38.319><c> processes</c><00:55:38.880><c> that</c><00:55:39.040><c> are</c><00:55:39.839><c> and</c>

00:55:40.069 --> 00:55:40.079 align:start position:0%
it's created two processes that are and
 

00:55:40.079 --> 00:55:41.190 align:start position:0%
it's created two processes that are and
both<00:55:40.319><c> of</c><00:55:40.400><c> them</c><00:55:40.640><c> are</c><00:55:40.799><c> running</c>

00:55:41.190 --> 00:55:41.200 align:start position:0%
both of them are running
 

00:55:41.200 --> 00:55:42.789 align:start position:0%
both of them are running
we're<00:55:41.440><c> fork</c><00:55:41.680><c> returning</c><00:55:42.079><c> both</c><00:55:42.240><c> processes</c><00:55:42.720><c> and</c>

00:55:42.789 --> 00:55:42.799 align:start position:0%
we're fork returning both processes and
 

00:55:42.799 --> 00:55:44.710 align:start position:0%
we're fork returning both processes and
they're<00:55:42.960><c> both</c><00:55:43.200><c> running</c>

00:55:44.710 --> 00:55:44.720 align:start position:0%
they're both running
 

00:55:44.720 --> 00:55:46.710 align:start position:0%
they're both running
but<00:55:44.960><c> also</c><00:55:45.359><c> note</c><00:55:45.599><c> that</c><00:55:45.680><c> one</c><00:55:45.920><c> printed</c><00:55:46.240><c> child</c><00:55:46.640><c> and</c>

00:55:46.710 --> 00:55:46.720 align:start position:0%
but also note that one printed child and
 

00:55:46.720 --> 00:55:48.470 align:start position:0%
but also note that one printed child and
the<00:55:46.880><c> other</c><00:55:47.040><c> parent</c>

00:55:48.470 --> 00:55:48.480 align:start position:0%
the other parent
 

00:55:48.480 --> 00:55:50.549 align:start position:0%
the other parent
so<00:55:48.880><c> it's</c><00:55:49.040><c> important</c><00:55:49.440><c> that</c><00:55:49.839><c> fork</c><00:55:50.160><c> returns</c>

00:55:50.549 --> 00:55:50.559 align:start position:0%
so it's important that fork returns
 

00:55:50.559 --> 00:55:51.990 align:start position:0%
so it's important that fork returns
differently

00:55:51.990 --> 00:55:52.000 align:start position:0%
differently
 

00:55:52.000 --> 00:55:59.589 align:start position:0%
differently
in<00:55:52.079><c> the</c><00:55:52.240><c> two</c><00:55:52.400><c> processes</c>

00:55:59.589 --> 00:55:59.599 align:start position:0%
 
 

00:55:59.599 --> 00:56:02.549 align:start position:0%
 
the<00:55:59.839><c> question</c><00:56:01.200><c> is</c><00:56:01.280><c> the</c><00:56:01.440><c> child</c><00:56:01.760><c> process</c><00:56:02.319><c> as</c><00:56:02.480><c> a</c>

00:56:02.549 --> 00:56:02.559 align:start position:0%
the question is the child process as a
 

00:56:02.559 --> 00:56:04.390 align:start position:0%
the question is the child process as a
result<00:56:02.960><c> of</c><00:56:03.040><c> fork</c><00:56:03.359><c> always</c><00:56:03.680><c> identical</c><00:56:04.160><c> to</c><00:56:04.319><c> the</c>

00:56:04.390 --> 00:56:04.400 align:start position:0%
result of fork always identical to the
 

00:56:04.400 --> 00:56:05.829 align:start position:0%
result of fork always identical to the
parent<00:56:04.720><c> process</c><00:56:05.200><c> or</c><00:56:05.359><c> could</c><00:56:05.520><c> they</c><00:56:05.680><c> be</c>

00:56:05.829 --> 00:56:05.839 align:start position:0%
parent process or could they be
 

00:56:05.839 --> 00:56:08.390 align:start position:0%
parent process or could they be
different

00:56:08.390 --> 00:56:08.400 align:start position:0%
 
 

00:56:08.400 --> 00:56:11.510 align:start position:0%
 
i<00:56:08.720><c> um</c>

00:56:11.510 --> 00:56:11.520 align:start position:0%
 
 

00:56:11.520 --> 00:56:14.789 align:start position:0%
 
in<00:56:11.680><c> xv6</c><00:56:12.240><c> are</c><00:56:12.400><c> identical</c>

00:56:14.789 --> 00:56:14.799 align:start position:0%
in xv6 are identical
 

00:56:14.799 --> 00:56:17.190 align:start position:0%
in xv6 are identical
except<00:56:15.040><c> for</c><00:56:15.119><c> the</c><00:56:15.280><c> return</c><00:56:15.599><c> value</c><00:56:16.000><c> from</c><00:56:16.319><c> fork</c>

00:56:17.190 --> 00:56:17.200 align:start position:0%
except for the return value from fork
 

00:56:17.200 --> 00:56:18.549 align:start position:0%
except for the return value from fork
you<00:56:17.359><c> know</c><00:56:17.440><c> so</c><00:56:17.599><c> the</c><00:56:17.839><c> instructions</c><00:56:18.319><c> are</c><00:56:18.400><c> the</c>

00:56:18.549 --> 00:56:18.559 align:start position:0%
you know so the instructions are the
 

00:56:18.559 --> 00:56:20.789 align:start position:0%
you know so the instructions are the
same<00:56:18.799><c> the</c><00:56:19.040><c> data's</c><00:56:19.440><c> the</c><00:56:19.520><c> same</c><00:56:19.839><c> the</c><00:56:20.079><c> stack</c><00:56:20.480><c> is</c>

00:56:20.789 --> 00:56:20.799 align:start position:0%
same the data's the same the stack is
 

00:56:20.799 --> 00:56:24.150 align:start position:0%
same the data's the same the stack is
is<00:56:21.119><c> the</c><00:56:21.280><c> same</c><00:56:22.000><c> um</c><00:56:22.720><c> and</c><00:56:22.960><c> also</c><00:56:23.200><c> both</c>

00:56:24.150 --> 00:56:24.160 align:start position:0%
is the same um and also both
 

00:56:24.160 --> 00:56:27.030 align:start position:0%
is the same um and also both
processes<00:56:25.760><c> you</c><00:56:25.839><c> know</c><00:56:26.319><c> the</c><00:56:26.480><c> processes</c><00:56:26.880><c> are</c>

00:56:27.030 --> 00:56:27.040 align:start position:0%
processes you know the processes are
 

00:56:27.040 --> 00:56:27.750 align:start position:0%
processes you know the processes are
copies<00:56:27.520><c> and</c>

00:56:27.750 --> 00:56:27.760 align:start position:0%
copies and
 

00:56:27.760 --> 00:56:30.150 align:start position:0%
copies and
they<00:56:28.000><c> both</c><00:56:28.400><c> have</c><00:56:28.559><c> their</c><00:56:28.799><c> own</c><00:56:29.200><c> separate</c>

00:56:30.150 --> 00:56:30.160 align:start position:0%
they both have their own separate
 

00:56:30.160 --> 00:56:31.990 align:start position:0%
they both have their own separate
address<00:56:30.559><c> spaces</c><00:56:31.119><c> that</c><00:56:31.359><c> is</c>

00:56:31.990 --> 00:56:32.000 align:start position:0%
address spaces that is
 

00:56:32.000 --> 00:56:33.910 align:start position:0%
address spaces that is
you<00:56:32.079><c> know</c><00:56:32.160><c> they</c><00:56:32.319><c> both</c><00:56:32.559><c> have</c><00:56:33.119><c> they</c><00:56:33.280><c> both</c><00:56:33.599><c> think</c>

00:56:33.910 --> 00:56:33.920 align:start position:0%
you know they both have they both think
 

00:56:33.920 --> 00:56:35.589 align:start position:0%
you know they both have they both think
that<00:56:34.160><c> their</c><00:56:34.319><c> memory</c><00:56:34.720><c> starts</c><00:56:34.960><c> at</c><00:56:35.119><c> zero</c><00:56:35.440><c> and</c>

00:56:35.589 --> 00:56:35.599 align:start position:0%
that their memory starts at zero and
 

00:56:35.599 --> 00:56:37.349 align:start position:0%
that their memory starts at zero and
goes<00:56:35.839><c> on</c><00:56:36.079><c> up</c><00:56:36.160><c> from</c><00:56:36.400><c> there</c>

00:56:37.349 --> 00:56:37.359 align:start position:0%
goes on up from there
 

00:56:37.359 --> 00:56:40.870 align:start position:0%
goes on up from there
um<00:56:38.079><c> but</c><00:56:38.240><c> but</c><00:56:38.480><c> it's</c><00:56:38.720><c> different</c><00:56:39.760><c> it's</c><00:56:40.000><c> different</c>

00:56:40.870 --> 00:56:40.880 align:start position:0%
um but but it's different it's different
 

00:56:40.880 --> 00:56:44.950 align:start position:0%
um but but it's different it's different
different<00:56:41.200><c> memory</c><00:56:42.319><c> um</c><00:56:42.640><c> for</c><00:56:42.880><c> the</c><00:56:42.960><c> two</c><00:56:43.200><c> of</c><00:56:43.280><c> them</c>

00:56:44.950 --> 00:56:44.960 align:start position:0%
different memory um for the two of them
 

00:56:44.960 --> 00:56:46.630 align:start position:0%
different memory um for the two of them
in<00:56:45.040><c> a</c><00:56:45.119><c> more</c><00:56:45.280><c> sophisticated</c><00:56:45.920><c> operating</c><00:56:46.319><c> system</c>

00:56:46.630 --> 00:56:46.640 align:start position:0%
in a more sophisticated operating system
 

00:56:46.640 --> 00:56:48.870 align:start position:0%
in a more sophisticated operating system
there<00:56:46.799><c> are</c><00:56:46.880><c> some</c><00:56:47.839><c> details</c><00:56:48.400><c> which</c><00:56:48.720><c> we</c>

00:56:48.870 --> 00:56:48.880 align:start position:0%
there are some details which we
 

00:56:48.880 --> 00:56:50.390 align:start position:0%
there are some details which we
definitely<00:56:49.200><c> don't</c><00:56:49.359><c> care</c><00:56:49.599><c> about</c>

00:56:50.390 --> 00:56:50.400 align:start position:0%
definitely don't care about
 

00:56:50.400 --> 00:56:53.349 align:start position:0%
definitely don't care about
um<00:56:50.960><c> that</c><00:56:51.119><c> may</c><00:56:51.359><c> occasionally</c><00:56:51.920><c> cause</c><00:56:53.040><c> parent</c>

00:56:53.349 --> 00:56:53.359 align:start position:0%
um that may occasionally cause parent
 

00:56:53.359 --> 00:56:55.109 align:start position:0%
um that may occasionally cause parent
and<00:56:53.440><c> child</c><00:56:53.680><c> to</c><00:56:53.839><c> differ</c><00:56:54.160><c> but</c><00:56:54.319><c> in</c><00:56:54.480><c> xv6</c><00:56:54.960><c> they're</c>

00:56:55.109 --> 00:56:55.119 align:start position:0%
and child to differ but in xv6 they're
 

00:56:55.119 --> 00:56:58.230 align:start position:0%
and child to differ but in xv6 they're
the<00:56:55.200><c> same</c><00:56:55.520><c> except</c><00:56:55.760><c> the</c><00:56:55.839><c> return</c><00:56:56.839><c> value</c>

00:56:58.230 --> 00:56:58.240 align:start position:0%
the same except the return value
 

00:56:58.240 --> 00:57:00.069 align:start position:0%
the same except the return value
so<00:56:58.480><c> the</c><00:56:58.640><c> memory</c><00:56:58.960><c> is</c><00:56:59.040><c> the</c><00:56:59.119><c> same</c><00:56:59.440><c> in</c><00:56:59.599><c> addition</c>

00:57:00.069 --> 00:57:00.079 align:start position:0%
so the memory is the same in addition
 

00:57:00.079 --> 00:57:01.990 align:start position:0%
so the memory is the same in addition
the

00:57:01.990 --> 00:57:02.000 align:start position:0%
the
 

00:57:02.000 --> 00:57:05.190 align:start position:0%
the
file<00:57:02.319><c> descriptor</c><00:57:03.280><c> table</c><00:57:03.760><c> is</c><00:57:04.000><c> copied</c>

00:57:05.190 --> 00:57:05.200 align:start position:0%
file descriptor table is copied
 

00:57:05.200 --> 00:57:09.589 align:start position:0%
file descriptor table is copied
so<00:57:05.440><c> if</c><00:57:05.599><c> the</c><00:57:05.839><c> parent</c><00:57:07.119><c> had</c><00:57:07.440><c> some</c><00:57:07.680><c> files</c><00:57:08.160><c> open</c>

00:57:09.589 --> 00:57:09.599 align:start position:0%
so if the parent had some files open
 

00:57:09.599 --> 00:57:12.230 align:start position:0%
so if the parent had some files open
then<00:57:09.839><c> the</c><00:57:10.079><c> child</c><00:57:10.480><c> sees</c><00:57:10.799><c> the</c><00:57:11.040><c> same</c><00:57:11.520><c> set</c><00:57:11.760><c> of</c><00:57:12.000><c> file</c>

00:57:12.230 --> 00:57:12.240 align:start position:0%
then the child sees the same set of file
 

00:57:12.240 --> 00:57:14.069 align:start position:0%
then the child sees the same set of file
descriptors

00:57:14.069 --> 00:57:14.079 align:start position:0%
descriptors
 

00:57:14.079 --> 00:57:16.069 align:start position:0%
descriptors
although<00:57:14.400><c> the</c><00:57:14.880><c> child</c><00:57:15.200><c> is</c><00:57:15.280><c> seeing</c><00:57:15.599><c> them</c><00:57:15.760><c> in</c><00:57:15.920><c> a</c>

00:57:16.069 --> 00:57:16.079 align:start position:0%
although the child is seeing them in a
 

00:57:16.079 --> 00:57:17.109 align:start position:0%
although the child is seeing them in a
copy

00:57:17.109 --> 00:57:17.119 align:start position:0%
copy
 

00:57:17.119 --> 00:57:18.950 align:start position:0%
copy
of<00:57:17.280><c> the</c><00:57:17.839><c> table</c><00:57:18.160><c> of</c><00:57:18.240><c> file</c><00:57:18.480><c> descriptor</c>

00:57:18.950 --> 00:57:18.960 align:start position:0%
of the table of file descriptor
 

00:57:18.960 --> 00:57:21.430 align:start position:0%
of the table of file descriptor
information

00:57:21.430 --> 00:57:21.440 align:start position:0%
information
 

00:57:21.440 --> 00:57:22.950 align:start position:0%
information
and<00:57:21.599><c> so</c><00:57:21.760><c> we'll</c><00:57:22.000><c> see</c><00:57:22.079><c> in</c><00:57:22.160><c> a</c><00:57:22.240><c> moment</c><00:57:22.559><c> that</c><00:57:22.799><c> it's</c>

00:57:22.950 --> 00:57:22.960 align:start position:0%
and so we'll see in a moment that it's
 

00:57:22.960 --> 00:57:24.710 align:start position:0%
and so we'll see in a moment that it's
quite<00:57:23.200><c> important</c><00:57:23.599><c> that</c>

00:57:24.710 --> 00:57:24.720 align:start position:0%
quite important that
 

00:57:24.720 --> 00:57:27.430 align:start position:0%
quite important that
fork<00:57:25.200><c> copies</c><00:57:25.680><c> the</c><00:57:26.319><c> table</c><00:57:26.720><c> of</c><00:57:26.880><c> open</c><00:57:27.200><c> file</c>

00:57:27.430 --> 00:57:27.440 align:start position:0%
fork copies the table of open file
 

00:57:27.440 --> 00:57:31.349 align:start position:0%
fork copies the table of open file
descriptors<00:57:28.079><c> as</c><00:57:28.240><c> well</c><00:57:28.400><c> as</c><00:57:28.559><c> the</c><00:57:28.640><c> memory</c>

00:57:31.349 --> 00:57:31.359 align:start position:0%
 
 

00:57:31.359 --> 00:57:34.950 align:start position:0%
 
okay<00:57:31.680><c> so</c><00:57:33.280><c> uh</c><00:57:33.760><c> port</c><00:57:34.000><c> creates</c><00:57:34.240><c> a</c><00:57:34.319><c> new</c><00:57:34.480><c> process</c>

00:57:34.950 --> 00:57:34.960 align:start position:0%
okay so uh port creates a new process
 

00:57:34.960 --> 00:57:35.510 align:start position:0%
okay so uh port creates a new process
but

00:57:35.510 --> 00:57:35.520 align:start position:0%
but
 

00:57:35.520 --> 00:57:38.950 align:start position:0%
but
when<00:57:35.760><c> we</c><00:57:36.000><c> run</c><00:57:36.240><c> stuff</c><00:57:36.640><c> in</c><00:57:36.720><c> the</c><00:57:36.880><c> shell</c><00:57:37.680><c> um</c>

00:57:38.950 --> 00:57:38.960 align:start position:0%
when we run stuff in the shell um
 

00:57:38.960 --> 00:57:40.870 align:start position:0%
when we run stuff in the shell um
the<00:57:39.200><c> shell</c><00:57:39.520><c> indeed</c><00:57:39.920><c> creates</c><00:57:40.240><c> a</c><00:57:40.319><c> new</c><00:57:40.480><c> process</c>

00:57:40.870 --> 00:57:40.880 align:start position:0%
the shell indeed creates a new process
 

00:57:40.880 --> 00:57:43.430 align:start position:0%
the shell indeed creates a new process
to<00:57:41.040><c> run</c><00:57:41.599><c> each</c><00:57:41.839><c> command</c><00:57:42.160><c> that</c><00:57:42.319><c> you</c><00:57:42.480><c> type</c>

00:57:43.430 --> 00:57:43.440 align:start position:0%
to run each command that you type
 

00:57:43.440 --> 00:57:44.789 align:start position:0%
to run each command that you type
but<00:57:43.599><c> it</c><00:57:43.680><c> needs</c><00:57:43.920><c> to</c><00:57:44.000><c> actually</c><00:57:44.160><c> run</c><00:57:44.319><c> the</c><00:57:44.400><c> command</c>

00:57:44.789 --> 00:57:44.799 align:start position:0%
but it needs to actually run the command
 

00:57:44.799 --> 00:57:47.030 align:start position:0%
but it needs to actually run the command
in<00:57:44.960><c> it</c><00:57:45.280><c> so</c><00:57:45.599><c> you</c><00:57:45.680><c> know</c><00:57:45.839><c> if</c><00:57:45.920><c> i</c><00:57:46.000><c> type</c><00:57:46.240><c> ls</c>

00:57:47.030 --> 00:57:47.040 align:start position:0%
in it so you know if i type ls
 

00:57:47.040 --> 00:57:49.589 align:start position:0%
in it so you know if i type ls
we<00:57:47.200><c> need</c><00:57:47.359><c> to</c><00:57:47.680><c> the</c><00:57:47.839><c> shell</c><00:57:48.880><c> forks</c><00:57:49.200><c> to</c><00:57:49.359><c> create</c><00:57:49.520><c> a</c>

00:57:49.589 --> 00:57:49.599 align:start position:0%
we need to the shell forks to create a
 

00:57:49.599 --> 00:57:51.190 align:start position:0%
we need to the shell forks to create a
process<00:57:49.920><c> to</c><00:57:50.079><c> run</c><00:57:50.319><c> ls</c><00:57:50.720><c> but</c>

00:57:51.190 --> 00:57:51.200 align:start position:0%
process to run ls but
 

00:57:51.200 --> 00:57:53.910 align:start position:0%
process to run ls but
there<00:57:51.359><c> needs</c><00:57:51.520><c> to</c><00:57:51.680><c> be</c><00:57:51.839><c> some</c><00:57:52.079><c> way</c><00:57:53.119><c> for</c><00:57:53.280><c> this</c><00:57:53.680><c> for</c>

00:57:53.910 --> 00:57:53.920 align:start position:0%
there needs to be some way for this for
 

00:57:53.920 --> 00:57:54.630 align:start position:0%
there needs to be some way for this for
that

00:57:54.630 --> 00:57:54.640 align:start position:0%
that
 

00:57:54.640 --> 00:57:55.910 align:start position:0%
that
new<00:57:54.880><c> process</c><00:57:55.359><c> actually</c><00:57:55.599><c> run</c><00:57:55.760><c> the</c>

00:57:55.910 --> 00:57:55.920 align:start position:0%
new process actually run the
 

00:57:55.920 --> 00:57:58.470 align:start position:0%
new process actually run the
instructions<00:57:56.480><c> from</c><00:57:56.640><c> the</c><00:57:56.799><c> ls</c><00:57:57.280><c> program</c>

00:57:58.470 --> 00:57:58.480 align:start position:0%
instructions from the ls program
 

00:57:58.480 --> 00:57:59.990 align:start position:0%
instructions from the ls program
to<00:57:58.640><c> load</c><00:57:58.799><c> those</c><00:57:59.040><c> instructions</c><00:57:59.440><c> from</c><00:57:59.599><c> the</c><00:57:59.680><c> file</c>

00:57:59.990 --> 00:58:00.000 align:start position:0%
to load those instructions from the file
 

00:58:00.000 --> 00:58:02.230 align:start position:0%
to load those instructions from the file
called<00:58:00.240><c> lx</c><00:58:01.280><c> um</c>

00:58:02.230 --> 00:58:02.240 align:start position:0%
called lx um
 

00:58:02.240 --> 00:58:03.990 align:start position:0%
called lx um
and<00:58:02.319><c> the</c><00:58:02.640><c> example</c><00:58:03.040><c> program</c><00:58:03.440><c> i</c><00:58:03.520><c> mean</c><00:58:03.760><c> i'll</c><00:58:03.839><c> show</c>

00:58:03.990 --> 00:58:04.000 align:start position:0%
and the example program i mean i'll show
 

00:58:04.000 --> 00:58:05.270 align:start position:0%
and the example program i mean i'll show
you<00:58:04.160><c> in</c><00:58:04.240><c> a</c><00:58:04.319><c> minute</c>

00:58:05.270 --> 00:58:05.280 align:start position:0%
you in a minute
 

00:58:05.280 --> 00:58:07.109 align:start position:0%
you in a minute
uh<00:58:05.520><c> uses</c><00:58:05.839><c> echo</c><00:58:06.240><c> echo</c><00:58:06.480><c> is</c><00:58:06.559><c> a</c><00:58:06.640><c> very</c><00:58:06.880><c> simple</c>

00:58:07.109 --> 00:58:07.119 align:start position:0%
uh uses echo echo is a very simple
 

00:58:07.119 --> 00:58:09.030 align:start position:0%
uh uses echo echo is a very simple
command<00:58:07.599><c> that</c>

00:58:09.030 --> 00:58:09.040 align:start position:0%
command that
 

00:58:09.040 --> 00:58:10.630 align:start position:0%
command that
just<00:58:09.200><c> takes</c><00:58:09.440><c> whatever</c><00:58:09.760><c> arguments</c><00:58:10.240><c> you</c><00:58:10.400><c> pass</c>

00:58:10.630 --> 00:58:10.640 align:start position:0%
just takes whatever arguments you pass
 

00:58:10.640 --> 00:58:13.990 align:start position:0%
just takes whatever arguments you pass
to<00:58:10.880><c> it</c><00:58:11.040><c> and</c><00:58:11.280><c> writes</c><00:58:11.520><c> them</c><00:58:11.760><c> into</c><00:58:12.000><c> its</c><00:58:12.160><c> output</c>

00:58:13.990 --> 00:58:14.000 align:start position:0%
to it and writes them into its output
 

00:58:14.000 --> 00:58:15.829 align:start position:0%
to it and writes them into its output
and<00:58:14.160><c> i</c><00:58:14.240><c> prepared</c><00:58:14.640><c> for</c><00:58:14.799><c> you</c><00:58:14.960><c> a</c><00:58:15.040><c> program</c><00:58:15.520><c> called</c>

00:58:15.829 --> 00:58:15.839 align:start position:0%
and i prepared for you a program called
 

00:58:15.839 --> 00:58:21.270 align:start position:0%
and i prepared for you a program called
exec

00:58:21.270 --> 00:58:21.280 align:start position:0%
 
 

00:58:21.280 --> 00:58:24.309 align:start position:0%
 
um<00:58:22.960><c> which</c>

00:58:24.309 --> 00:58:24.319 align:start position:0%
um which
 

00:58:24.319 --> 00:58:27.990 align:start position:0%
um which
uh<00:58:24.880><c> run</c><00:58:25.200><c> which</c><00:58:26.799><c> makes</c><00:58:27.040><c> the</c><00:58:27.280><c> exact</c><00:58:27.599><c> system</c>

00:58:27.990 --> 00:58:28.000 align:start position:0%
uh run which makes the exact system
 

00:58:28.000 --> 00:58:28.789 align:start position:0%
uh run which makes the exact system
called<00:58:28.319><c> which</c>

00:58:28.789 --> 00:58:28.799 align:start position:0%
called which
 

00:58:28.799 --> 00:58:31.670 align:start position:0%
called which
replaces<00:58:29.520><c> the</c><00:58:29.680><c> calling</c><00:58:30.240><c> process</c><00:58:31.359><c> with</c><00:58:31.599><c> the</c>

00:58:31.670 --> 00:58:31.680 align:start position:0%
replaces the calling process with the
 

00:58:31.680 --> 00:58:33.109 align:start position:0%
replaces the calling process with the
instructions<00:58:32.319><c> read</c><00:58:32.559><c> from</c><00:58:32.799><c> a</c>

00:58:33.109 --> 00:58:33.119 align:start position:0%
instructions read from a
 

00:58:33.119 --> 00:58:37.349 align:start position:0%
instructions read from a
particular<00:58:33.680><c> from</c><00:58:33.839><c> the</c><00:58:34.000><c> file</c><00:58:34.319><c> you</c><00:58:34.480><c> specify</c><00:58:36.000><c> and</c>

00:58:37.349 --> 00:58:37.359 align:start position:0%
particular from the file you specify and
 

00:58:37.359 --> 00:58:39.190 align:start position:0%
particular from the file you specify and
loads<00:58:37.680><c> the</c><00:58:37.839><c> instructions</c><00:58:38.319><c> from</c><00:58:38.480><c> that</c><00:58:38.640><c> file</c>

00:58:39.190 --> 00:58:39.200 align:start position:0%
loads the instructions from that file
 

00:58:39.200 --> 00:58:41.030 align:start position:0%
loads the instructions from that file
over<00:58:39.440><c> the</c><00:58:39.520><c> current</c><00:58:39.839><c> process</c><00:58:40.319><c> sort</c><00:58:40.480><c> of</c><00:58:40.559><c> discard</c>

00:58:41.030 --> 00:58:41.040 align:start position:0%
over the current process sort of discard
 

00:58:41.040 --> 00:58:42.950 align:start position:0%
over the current process sort of discard
it<00:58:41.200><c> discarding</c><00:58:41.680><c> its</c><00:58:41.920><c> current</c><00:58:42.160><c> memory</c>

00:58:42.950 --> 00:58:42.960 align:start position:0%
it discarding its current memory
 

00:58:42.960 --> 00:58:44.950 align:start position:0%
it discarding its current memory
and<00:58:43.040><c> then</c><00:58:43.280><c> starts</c><00:58:43.839><c> executing</c><00:58:44.640><c> those</c>

00:58:44.950 --> 00:58:44.960 align:start position:0%
and then starts executing those
 

00:58:44.960 --> 00:58:46.150 align:start position:0%
and then starts executing those
instructions<00:58:45.520><c> so</c>

00:58:46.150 --> 00:58:46.160 align:start position:0%
instructions so
 

00:58:46.160 --> 00:58:48.630 align:start position:0%
instructions so
the<00:58:46.319><c> call</c><00:58:46.559><c> to</c><00:58:46.799><c> exec</c><00:58:47.440><c> the</c><00:58:47.680><c> system</c><00:58:48.000><c> call</c><00:58:48.240><c> exec</c><00:58:48.559><c> on</c>

00:58:48.630 --> 00:58:48.640 align:start position:0%
the call to exec the system call exec on
 

00:58:48.640 --> 00:58:52.549 align:start position:0%
the call to exec the system call exec on
line<00:58:48.960><c> 12.</c>

00:58:52.549 --> 00:58:52.559 align:start position:0%
 
 

00:58:52.559 --> 00:58:53.990 align:start position:0%
 
it's<00:58:52.720><c> going</c><00:58:52.799><c> to</c><00:58:52.880><c> have</c><00:58:53.119><c> the</c><00:58:53.200><c> effect</c><00:58:53.520><c> of</c><00:58:53.839><c> the</c>

00:58:53.990 --> 00:58:54.000 align:start position:0%
it's going to have the effect of the
 

00:58:54.000 --> 00:58:55.190 align:start position:0%
it's going to have the effect of the
operating<00:58:54.400><c> system</c><00:58:54.720><c> loading</c><00:58:55.119><c> the</c>

00:58:55.190 --> 00:58:55.200 align:start position:0%
operating system loading the
 

00:58:55.200 --> 00:58:56.950 align:start position:0%
operating system loading the
instructions<00:58:55.760><c> from</c><00:58:55.920><c> the</c><00:58:56.160><c> file</c><00:58:56.559><c> called</c>

00:58:56.950 --> 00:58:56.960 align:start position:0%
instructions from the file called
 

00:58:56.960 --> 00:58:59.510 align:start position:0%
instructions from the file called
echo<00:58:57.839><c> into</c><00:58:58.079><c> the</c><00:58:58.160><c> current</c><00:58:58.480><c> process</c><00:58:58.960><c> sort</c><00:58:59.200><c> of</c>

00:58:59.510 --> 00:58:59.520 align:start position:0%
echo into the current process sort of
 

00:58:59.520 --> 00:59:00.789 align:start position:0%
echo into the current process sort of
replacing

00:59:00.789 --> 00:59:00.799 align:start position:0%
replacing
 

00:59:00.799 --> 00:59:03.030 align:start position:0%
replacing
the<00:59:00.960><c> memory</c><00:59:01.200><c> of</c><00:59:01.359><c> the</c><00:59:01.440><c> current</c><00:59:01.680><c> process</c><00:59:02.960><c> and</c>

00:59:03.030 --> 00:59:03.040 align:start position:0%
the memory of the current process and
 

00:59:03.040 --> 00:59:03.990 align:start position:0%
the memory of the current process and
then<00:59:03.440><c> starting</c><00:59:03.760><c> to</c>

00:59:03.990 --> 00:59:04.000 align:start position:0%
then starting to
 

00:59:04.000 --> 00:59:06.870 align:start position:0%
then starting to
execute<00:59:05.119><c> uh</c><00:59:05.440><c> those</c><00:59:05.680><c> instructions</c><00:59:06.319><c> and</c><00:59:06.720><c> in</c>

00:59:06.870 --> 00:59:06.880 align:start position:0%
execute uh those instructions and in
 

00:59:06.880 --> 00:59:08.710 align:start position:0%
execute uh those instructions and in
addition<00:59:07.280><c> you</c><00:59:07.359><c> can</c><00:59:07.520><c> pass</c><00:59:07.839><c> arguments</c><00:59:08.319><c> command</c>

00:59:08.710 --> 00:59:08.720 align:start position:0%
addition you can pass arguments command
 

00:59:08.720 --> 00:59:09.990 align:start position:0%
addition you can pass arguments command
line<00:59:08.960><c> arguments</c><00:59:09.440><c> echo</c>

00:59:09.990 --> 00:59:10.000 align:start position:0%
line arguments echo
 

00:59:10.000 --> 00:59:12.710 align:start position:0%
line arguments echo
exec<00:59:10.400><c> allows</c><00:59:10.720><c> you</c><00:59:10.799><c> to</c><00:59:11.280><c> pass</c><00:59:12.079><c> an</c><00:59:12.319><c> array</c><00:59:12.640><c> of</c>

00:59:12.710 --> 00:59:12.720 align:start position:0%
exec allows you to pass an array of
 

00:59:12.720 --> 00:59:14.549 align:start position:0%
exec allows you to pass an array of
command<00:59:13.040><c> line</c><00:59:13.280><c> arguments</c>

00:59:14.549 --> 00:59:14.559 align:start position:0%
command line arguments
 

00:59:14.559 --> 00:59:17.030 align:start position:0%
command line arguments
with<00:59:14.720><c> just</c><00:59:14.960><c> an</c><00:59:15.040><c> array</c><00:59:15.359><c> of</c><00:59:15.520><c> pointers</c><00:59:16.000><c> and</c><00:59:16.160><c> see</c>

00:59:17.030 --> 00:59:17.040 align:start position:0%
with just an array of pointers and see
 

00:59:17.040 --> 00:59:17.670 align:start position:0%
with just an array of pointers and see
line<00:59:17.359><c> 10</c>

00:59:17.670 --> 00:59:17.680 align:start position:0%
line 10
 

00:59:17.680 --> 00:59:20.309 align:start position:0%
line 10
set<00:59:18.079><c> sets</c><00:59:18.319><c> up</c><00:59:18.480><c> an</c><00:59:18.640><c> array</c><00:59:19.119><c> of</c><00:59:19.839><c> character</c>

00:59:20.309 --> 00:59:20.319 align:start position:0%
set sets up an array of character
 

00:59:20.319 --> 00:59:22.789 align:start position:0%
set sets up an array of character
pointers<00:59:20.720><c> which</c><00:59:20.960><c> are</c><00:59:21.040><c> essentially</c><00:59:21.440><c> strings</c>

00:59:22.789 --> 00:59:22.799 align:start position:0%
pointers which are essentially strings
 

00:59:22.799 --> 00:59:25.829 align:start position:0%
pointers which are essentially strings
and<00:59:22.960><c> initializes</c><00:59:23.599><c> that</c><00:59:23.760><c> array</c><00:59:24.079><c> to</c><00:59:24.240><c> be</c>

00:59:25.829 --> 00:59:25.839 align:start position:0%
and initializes that array to be
 

00:59:25.839 --> 00:59:29.430 align:start position:0%
and initializes that array to be
to<00:59:26.000><c> contain</c><00:59:26.480><c> the</c><00:59:26.640><c> strings</c><00:59:27.119><c> echo</c><00:59:27.520><c> this</c><00:59:27.760><c> is</c><00:59:28.000><c> echo</c>

00:59:29.430 --> 00:59:29.440 align:start position:0%
to contain the strings echo this is echo
 

00:59:29.440 --> 00:59:31.670 align:start position:0%
to contain the strings echo this is echo
and<00:59:29.839><c> that's</c><00:59:30.079><c> equivalent</c><00:59:30.559><c> to</c><00:59:30.720><c> calling</c><00:59:31.440><c> running</c>

00:59:31.670 --> 00:59:31.680 align:start position:0%
and that's equivalent to calling running
 

00:59:31.680 --> 00:59:33.270 align:start position:0%
and that's equivalent to calling running
the<00:59:31.839><c> act</c><00:59:32.000><c> with</c><00:59:32.160><c> command</c><00:59:32.559><c> with</c>

00:59:33.270 --> 00:59:33.280 align:start position:0%
the act with command with
 

00:59:33.280 --> 00:59:35.510 align:start position:0%
the act with command with
the<00:59:33.440><c> three</c><00:59:33.680><c> arguments</c><00:59:34.079><c> this</c><00:59:34.319><c> is</c><00:59:34.480><c> echo</c><00:59:35.200><c> and</c><00:59:35.359><c> so</c>

00:59:35.510 --> 00:59:35.520 align:start position:0%
the three arguments this is echo and so
 

00:59:35.520 --> 00:59:38.870 align:start position:0%
the three arguments this is echo and so
when<00:59:35.680><c> i</c><00:59:35.760><c> want</c><00:59:36.000><c> exec</c>

00:59:38.870 --> 00:59:38.880 align:start position:0%
 
 

00:59:38.880 --> 00:59:41.910 align:start position:0%
 
indeed<00:59:40.079><c> um</c><00:59:40.480><c> i</c><00:59:40.640><c> see</c><00:59:40.880><c> this</c><00:59:41.040><c> output</c><00:59:41.280><c> this</c><00:59:41.440><c> is</c><00:59:41.680><c> echo</c>

00:59:41.910 --> 00:59:41.920 align:start position:0%
indeed um i see this output this is echo
 

00:59:41.920 --> 00:59:42.470 align:start position:0%
indeed um i see this output this is echo
but

00:59:42.470 --> 00:59:42.480 align:start position:0%
but
 

00:59:42.480 --> 00:59:44.150 align:start position:0%
but
even<00:59:42.720><c> though</c><00:59:42.799><c> i</c><00:59:42.960><c> ran</c><00:59:43.200><c> the</c><00:59:43.280><c> exact</c><00:59:43.599><c> command</c><00:59:44.079><c> the</c>

00:59:44.150 --> 00:59:44.160 align:start position:0%
even though i ran the exact command the
 

00:59:44.160 --> 00:59:47.030 align:start position:0%
even though i ran the exact command the
exact<00:59:44.839><c> program</c><00:59:45.839><c> what</c><00:59:46.000><c> the</c><00:59:46.240><c> exact</c><00:59:46.559><c> program</c>

00:59:47.030 --> 00:59:47.040 align:start position:0%
exact program what the exact program
 

00:59:47.040 --> 00:59:47.990 align:start position:0%
exact program what the exact program
does<00:59:47.280><c> is</c><00:59:47.520><c> call</c><00:59:47.760><c> it</c>

00:59:47.990 --> 00:59:48.000 align:start position:0%
does is call it
 

00:59:48.000 --> 00:59:50.150 align:start position:0%
does is call it
the<00:59:48.160><c> exact</c><00:59:48.480><c> system</c><00:59:48.960><c> call</c><00:59:49.359><c> to</c><00:59:49.520><c> replace</c><00:59:49.920><c> itself</c>

00:59:50.150 --> 00:59:50.160 align:start position:0%
the exact system call to replace itself
 

00:59:50.160 --> 00:59:52.150 align:start position:0%
the exact system call to replace itself
with<00:59:50.319><c> echo</c><00:59:50.960><c> and</c><00:59:51.119><c> so</c><00:59:51.280><c> it</c><00:59:51.359><c> was</c><00:59:51.440><c> really</c><00:59:51.599><c> the</c><00:59:51.760><c> echo</c>

00:59:52.150 --> 00:59:52.160 align:start position:0%
with echo and so it was really the echo
 

00:59:52.160 --> 00:59:53.270 align:start position:0%
with echo and so it was really the echo
program

00:59:53.270 --> 00:59:53.280 align:start position:0%
program
 

00:59:53.280 --> 00:59:58.549 align:start position:0%
program
um<00:59:53.839><c> producing</c><00:59:54.319><c> this</c><00:59:54.559><c> output</c>

00:59:58.549 --> 00:59:58.559 align:start position:0%
 
 

00:59:58.559 --> 01:00:01.030 align:start position:0%
 
and<00:59:59.119><c> uh</c><00:59:59.359><c> something</c><00:59:59.680><c> about</c><00:59:59.839><c> the</c><01:00:00.000><c> exact</c><01:00:00.240><c> system</c>

01:00:01.030 --> 01:00:01.040 align:start position:0%
and uh something about the exact system
 

01:00:01.040 --> 01:00:01.670 align:start position:0%
and uh something about the exact system
call<01:00:01.280><c> that's</c>

01:00:01.670 --> 01:00:01.680 align:start position:0%
call that's
 

01:00:01.680 --> 01:00:04.549 align:start position:0%
call that's
important<01:00:02.000><c> for</c><01:00:02.240><c> us</c><01:00:02.480><c> is</c><01:00:02.559><c> that</c><01:00:03.200><c> um</c><01:00:03.520><c> it</c><01:00:04.079><c> exec</c>

01:00:04.549 --> 01:00:04.559 align:start position:0%
important for us is that um it exec
 

01:00:04.559 --> 01:00:05.430 align:start position:0%
important for us is that um it exec
preserves

01:00:05.430 --> 01:00:05.440 align:start position:0%
preserves
 

01:00:05.440 --> 01:00:08.470 align:start position:0%
preserves
the<01:00:05.599><c> current</c><01:00:06.319><c> table</c><01:00:06.799><c> of</c><01:00:06.960><c> file</c><01:00:07.280><c> descriptors</c><01:00:08.319><c> so</c>

01:00:08.470 --> 01:00:08.480 align:start position:0%
the current table of file descriptors so
 

01:00:08.480 --> 01:00:10.710 align:start position:0%
the current table of file descriptors so
whatever<01:00:08.880><c> files</c><01:00:09.119><c> descriptor</c><01:00:09.680><c> zero</c><01:00:10.000><c> one</c><01:00:10.319><c> two</c>

01:00:10.710 --> 01:00:10.720 align:start position:0%
whatever files descriptor zero one two
 

01:00:10.720 --> 01:00:13.349 align:start position:0%
whatever files descriptor zero one two
etc<01:00:11.280><c> were</c><01:00:11.599><c> referred</c><01:00:11.920><c> to</c><01:00:12.079><c> before</c><01:00:12.480><c> exec</c><01:00:13.200><c> they</c>

01:00:13.349 --> 01:00:13.359 align:start position:0%
etc were referred to before exec they
 

01:00:13.359 --> 01:00:15.030 align:start position:0%
etc were referred to before exec they
refer<01:00:13.599><c> to</c><01:00:13.680><c> the</c><01:00:13.839><c> same</c><01:00:14.160><c> thing</c>

01:00:15.030 --> 01:00:15.040 align:start position:0%
refer to the same thing
 

01:00:15.040 --> 01:00:18.309 align:start position:0%
refer to the same thing
in<01:00:15.280><c> this</c><01:00:15.440><c> new</c><01:00:15.760><c> program</c><01:00:17.599><c> whose</c><01:00:17.839><c> instructions</c>

01:00:18.309 --> 01:00:18.319 align:start position:0%
in this new program whose instructions
 

01:00:18.319 --> 01:00:20.150 align:start position:0%
in this new program whose instructions
we've<01:00:18.559><c> loaded</c>

01:00:20.150 --> 01:00:20.160 align:start position:0%
we've loaded
 

01:00:20.160 --> 01:00:22.390 align:start position:0%
we've loaded
another<01:00:20.480><c> point</c><01:00:20.720><c> is</c><01:00:21.040><c> ordinarily</c><01:00:21.680><c> exec</c><01:00:22.160><c> does</c>

01:00:22.390 --> 01:00:22.400 align:start position:0%
another point is ordinarily exec does
 

01:00:22.400 --> 01:00:23.510 align:start position:0%
another point is ordinarily exec does
not<01:00:22.559><c> return</c>

01:00:23.510 --> 01:00:23.520 align:start position:0%
not return
 

01:00:23.520 --> 01:00:27.109 align:start position:0%
not return
because<01:00:23.760><c> exec</c><01:00:24.240><c> replaces</c><01:00:25.920><c> the</c><01:00:26.480><c> current</c>

01:00:27.109 --> 01:00:27.119 align:start position:0%
because exec replaces the current
 

01:00:27.119 --> 01:00:29.510 align:start position:0%
because exec replaces the current
is<01:00:27.200><c> memory</c><01:00:27.599><c> entirely</c><01:00:28.480><c> um</c><01:00:29.119><c> there's</c><01:00:29.359><c> nothing</c>

01:00:29.510 --> 01:00:29.520 align:start position:0%
is memory entirely um there's nothing
 

01:00:29.520 --> 01:00:31.030 align:start position:0%
is memory entirely um there's nothing
for<01:00:29.680><c> exec</c><01:00:29.920><c> to</c><01:00:30.079><c> return</c><01:00:30.480><c> to</c>

01:00:31.030 --> 01:00:31.040 align:start position:0%
for exec to return to
 

01:00:31.040 --> 01:00:33.990 align:start position:0%
for exec to return to
so<01:00:31.280><c> exact</c><01:00:31.920><c> you</c><01:00:32.000><c> know</c><01:00:33.040><c> reads</c><01:00:33.359><c> the</c><01:00:33.520><c> instructions</c>

01:00:33.990 --> 01:00:34.000 align:start position:0%
so exact you know reads the instructions
 

01:00:34.000 --> 01:00:35.270 align:start position:0%
so exact you know reads the instructions
from<01:00:34.160><c> that</c><01:00:34.240><c> file</c><01:00:34.559><c> and</c><01:00:34.640><c> executes</c><01:00:35.040><c> them</c><01:00:35.200><c> and</c>

01:00:35.270 --> 01:00:35.280 align:start position:0%
from that file and executes them and
 

01:00:35.280 --> 01:00:36.309 align:start position:0%
from that file and executes them and
then<01:00:35.440><c> that's</c><01:00:35.760><c> it</c>

01:00:36.309 --> 01:00:36.319 align:start position:0%
then that's it
 

01:00:36.319 --> 01:00:38.950 align:start position:0%
then that's it
um<01:00:36.559><c> the</c><01:00:36.720><c> only</c><01:00:36.880><c> time</c><01:00:37.119><c> exec</c><01:00:37.440><c> returns</c><01:00:38.000><c> is</c><01:00:38.240><c> if</c><01:00:38.720><c> some</c>

01:00:38.950 --> 01:00:38.960 align:start position:0%
um the only time exec returns is if some
 

01:00:38.960 --> 01:00:40.309 align:start position:0%
um the only time exec returns is if some
error<01:00:39.359><c> occurred</c>

01:00:40.309 --> 01:00:40.319 align:start position:0%
error occurred
 

01:00:40.319 --> 01:00:42.230 align:start position:0%
error occurred
that<01:00:40.640><c> prevented</c><01:00:41.200><c> the</c><01:00:41.280><c> operating</c><01:00:41.680><c> system</c><01:00:42.000><c> from</c>

01:00:42.230 --> 01:00:42.240 align:start position:0%
that prevented the operating system from
 

01:00:42.240 --> 01:00:43.829 align:start position:0%
that prevented the operating system from
running<01:00:42.559><c> that</c><01:00:42.720><c> program</c><01:00:43.200><c> for</c><01:00:43.359><c> you</c>

01:00:43.829 --> 01:00:43.839 align:start position:0%
running that program for you
 

01:00:43.839 --> 01:00:45.750 align:start position:0%
running that program for you
so<01:00:44.079><c> for</c><01:00:44.240><c> example</c><01:00:44.480><c> if</c><01:00:44.559><c> the</c><01:00:44.720><c> program</c><01:00:44.960><c> doesn't</c>

01:00:45.750 --> 01:00:45.760 align:start position:0%
so for example if the program doesn't
 

01:00:45.760 --> 01:00:47.510 align:start position:0%
so for example if the program doesn't
exist<01:00:46.079><c> at</c><01:00:46.319><c> all</c>

01:00:47.510 --> 01:00:47.520 align:start position:0%
exist at all
 

01:00:47.520 --> 01:00:49.910 align:start position:0%
exist at all
since<01:00:47.839><c> the</c><01:00:48.160><c> exec</c><01:00:48.559><c> can't</c><01:00:48.880><c> find</c><01:00:49.119><c> a</c><01:00:49.280><c> file</c><01:00:49.680><c> called</c>

01:00:49.910 --> 01:00:49.920 align:start position:0%
since the exec can't find a file called
 

01:00:49.920 --> 01:00:51.349 align:start position:0%
since the exec can't find a file called
echo<01:00:50.480><c> for</c><01:00:50.640><c> example</c>

01:00:51.349 --> 01:00:51.359 align:start position:0%
echo for example
 

01:00:51.359 --> 01:00:55.430 align:start position:0%
echo for example
then<01:00:51.599><c> exec</c><01:00:51.920><c> would</c><01:00:52.079><c> return</c><01:00:52.480><c> negative</c><01:00:52.880><c> one</c><01:00:53.280><c> to</c>

01:00:55.430 --> 01:00:55.440 align:start position:0%
then exec would return negative one to
 

01:00:55.440 --> 01:00:58.069 align:start position:0%
then exec would return negative one to
signal<01:00:55.920><c> that</c><01:00:56.960><c> you</c><01:00:57.040><c> know</c><01:00:57.440><c> something</c><01:00:57.760><c> i'm</c><01:00:57.839><c> wrong</c>

01:00:58.069 --> 01:00:58.079 align:start position:0%
signal that you know something i'm wrong
 

01:00:58.079 --> 01:00:58.549 align:start position:0%
signal that you know something i'm wrong
it<01:00:58.160><c> couldn't</c>

01:00:58.549 --> 01:00:58.559 align:start position:0%
it couldn't
 

01:00:58.559 --> 01:01:00.230 align:start position:0%
it couldn't
couldn't<01:00:58.799><c> find</c><01:00:58.960><c> a</c><01:00:59.040><c> file</c><01:00:59.200><c> so</c><01:00:59.359><c> ordinarily</c><01:00:59.920><c> exact</c>

01:01:00.230 --> 01:01:00.240 align:start position:0%
couldn't find a file so ordinarily exact
 

01:01:00.240 --> 01:01:03.190 align:start position:0%
couldn't find a file so ordinarily exact
does<01:01:00.400><c> not</c><01:01:00.559><c> return</c><01:01:01.359><c> it</c><01:01:01.599><c> only</c><01:01:01.760><c> returns</c><01:01:02.240><c> if</c>

01:01:03.190 --> 01:01:03.200 align:start position:0%
does not return it only returns if
 

01:01:03.200 --> 01:01:06.069 align:start position:0%
does not return it only returns if
um<01:01:04.079><c> the</c><01:01:04.240><c> kernel</c><01:01:05.119><c> couldn't</c><01:01:05.440><c> actually</c><01:01:05.760><c> run</c><01:01:05.920><c> the</c>

01:01:06.069 --> 01:01:06.079 align:start position:0%
um the kernel couldn't actually run the
 

01:01:06.079 --> 01:01:10.309 align:start position:0%
um the kernel couldn't actually run the
file<01:01:06.319><c> for</c><01:01:08.839><c> you</c>

01:01:10.309 --> 01:01:10.319 align:start position:0%
file for you
 

01:01:10.319 --> 01:01:13.109 align:start position:0%
file for you
questions<01:01:10.640><c> about</c><01:01:10.880><c> exec</c><01:01:12.480><c> one</c><01:01:12.640><c> question</c><01:01:12.960><c> in</c><01:01:13.040><c> the</c>

01:01:13.109 --> 01:01:13.119 align:start position:0%
questions about exec one question in the
 

01:01:13.119 --> 01:01:14.470 align:start position:0%
questions about exec one question in the
chat<01:01:13.440><c> is</c><01:01:13.599><c> what</c><01:01:13.760><c> is</c><01:01:13.839><c> the</c><01:01:14.000><c> last</c>

01:01:14.470 --> 01:01:14.480 align:start position:0%
chat is what is the last
 

01:01:14.480 --> 01:01:18.789 align:start position:0%
chat is what is the last
zero<01:01:14.880><c> for</c><01:01:15.200><c> in</c><01:01:15.440><c> arc</c><01:01:15.680><c> v</c>

01:01:18.789 --> 01:01:18.799 align:start position:0%
 
 

01:01:18.799 --> 01:01:21.990 align:start position:0%
 
it<01:01:19.119><c> marks</c><01:01:19.440><c> the</c><01:01:19.680><c> end</c><01:01:19.920><c> of</c><01:01:20.000><c> the</c><01:01:20.160><c> array</c><01:01:21.280><c> um</c>

01:01:21.990 --> 01:01:22.000 align:start position:0%
it marks the end of the array um
 

01:01:22.000 --> 01:01:25.829 align:start position:0%
it marks the end of the array um
c<01:01:22.480><c> is</c><01:01:22.640><c> so</c><01:01:23.200><c> low</c><01:01:23.440><c> level</c><01:01:23.920><c> that</c>

01:01:25.829 --> 01:01:25.839 align:start position:0%
c is so low level that
 

01:01:25.839 --> 01:01:29.589 align:start position:0%
c is so low level that
there's<01:01:26.160><c> no</c><01:01:27.599><c> the</c><01:01:27.920><c> c</c><01:01:28.240><c> array</c>

01:01:29.589 --> 01:01:29.599 align:start position:0%
there's no the c array
 

01:01:29.599 --> 01:01:33.190 align:start position:0%
there's no the c array
scheme<01:01:32.240><c> doesn't</c><01:01:32.559><c> have</c><01:01:32.720><c> a</c><01:01:32.799><c> way</c>

01:01:33.190 --> 01:01:33.200 align:start position:0%
scheme doesn't have a way
 

01:01:33.200 --> 01:01:36.230 align:start position:0%
scheme doesn't have a way
for<01:01:34.640><c> code</c><01:01:34.960><c> to</c><01:01:35.040><c> find</c><01:01:35.280><c> out</c><01:01:35.440><c> how</c><01:01:35.599><c> long</c><01:01:35.760><c> the</c><01:01:35.839><c> array</c>

01:01:36.230 --> 01:01:36.240 align:start position:0%
for code to find out how long the array
 

01:01:36.240 --> 01:01:37.430 align:start position:0%
for code to find out how long the array
is

01:01:37.430 --> 01:01:37.440 align:start position:0%
is
 

01:01:37.440 --> 01:01:40.950 align:start position:0%
is
and<01:01:37.520><c> so</c><01:01:37.760><c> to</c><01:01:37.839><c> tell</c><01:01:38.079><c> the</c><01:01:38.160><c> kernel</c><01:01:38.720><c> that</c><01:01:39.599><c> um</c>

01:01:40.950 --> 01:01:40.960 align:start position:0%
and so to tell the kernel that um
 

01:01:40.960 --> 01:01:42.789 align:start position:0%
and so to tell the kernel that um
you<01:01:41.119><c> know</c><01:01:41.200><c> we</c><01:01:41.359><c> meant</c><01:01:42.240><c> that</c><01:01:42.400><c> the</c><01:01:42.480><c> array</c>

01:01:42.789 --> 01:01:42.799 align:start position:0%
you know we meant that the array
 

01:01:42.799 --> 01:01:44.710 align:start position:0%
you know we meant that the array
contains<01:01:43.119><c> echo</c><01:01:43.440><c> this</c><01:01:43.680><c> is</c><01:01:43.920><c> echo</c><01:01:44.319><c> and</c><01:01:44.400><c> nothing</c>

01:01:44.710 --> 01:01:44.720 align:start position:0%
contains echo this is echo and nothing
 

01:01:44.720 --> 01:01:45.510 align:start position:0%
contains echo this is echo and nothing
more

01:01:45.510 --> 01:01:45.520 align:start position:0%
more
 

01:01:45.520 --> 01:01:48.630 align:start position:0%
more
um<01:01:46.480><c> we</c><01:01:46.640><c> put</c><01:01:46.799><c> a</c><01:01:47.040><c> zero</c><01:01:47.520><c> as</c><01:01:47.599><c> the</c><01:01:47.839><c> last</c>

01:01:48.630 --> 01:01:48.640 align:start position:0%
um we put a zero as the last
 

01:01:48.640 --> 01:01:51.589 align:start position:0%
um we put a zero as the last
strip<01:01:48.960><c> as</c><01:01:49.119><c> the</c><01:01:49.200><c> last</c><01:01:50.079><c> pointer</c><01:01:51.040><c> each</c><01:01:51.200><c> of</c><01:01:51.359><c> those</c>

01:01:51.589 --> 01:01:51.599 align:start position:0%
strip as the last pointer each of those
 

01:01:51.599 --> 01:01:53.349 align:start position:0%
strip as the last pointer each of those
strings<01:01:52.000><c> in</c><01:01:52.079><c> double</c><01:01:52.400><c> quotes</c><01:01:52.640><c> is</c><01:01:52.720><c> actually</c><01:01:52.960><c> a</c>

01:01:53.349 --> 01:01:53.359 align:start position:0%
strings in double quotes is actually a
 

01:01:53.359 --> 01:01:55.349 align:start position:0%
strings in double quotes is actually a
pointer<01:01:53.760><c> to</c><01:01:53.920><c> some</c><01:01:54.079><c> memory</c><01:01:54.799><c> that</c><01:01:54.960><c> contains</c>

01:01:55.349 --> 01:01:55.359 align:start position:0%
pointer to some memory that contains
 

01:01:55.359 --> 01:01:56.630 align:start position:0%
pointer to some memory that contains
those<01:01:55.599><c> bytes</c>

01:01:56.630 --> 01:01:56.640 align:start position:0%
those bytes
 

01:01:56.640 --> 01:01:59.510 align:start position:0%
those bytes
that<01:01:57.119><c> fifth</c><01:01:57.520><c> element</c><01:01:57.920><c> of</c><01:01:58.000><c> the</c><01:01:58.079><c> array</c><01:01:58.559><c> is</c><01:01:58.720><c> a</c>

01:01:59.510 --> 01:01:59.520 align:start position:0%
that fifth element of the array is a
 

01:01:59.520 --> 01:02:01.190 align:start position:0%
that fifth element of the array is a
pointer<01:01:59.839><c> whose</c><01:02:00.079><c> value</c><01:02:00.319><c> is</c><01:02:00.480><c> zero</c>

01:02:01.190 --> 01:02:01.200 align:start position:0%
pointer whose value is zero
 

01:02:01.200 --> 01:02:02.870 align:start position:0%
pointer whose value is zero
the<01:02:01.359><c> convention</c><01:02:01.920><c> is</c><01:02:02.000><c> that</c><01:02:02.160><c> a</c><01:02:02.240><c> pointer</c><01:02:02.640><c> whose</c>

01:02:02.870 --> 01:02:02.880 align:start position:0%
the convention is that a pointer whose
 

01:02:02.880 --> 01:02:04.630 align:start position:0%
the convention is that a pointer whose
value<01:02:03.200><c> is</c><01:02:03.280><c> zero</c><01:02:03.599><c> or</c><01:02:03.839><c> what's</c><01:02:04.079><c> called</c><01:02:04.240><c> a</c><01:02:04.400><c> null</c>

01:02:04.630 --> 01:02:04.640 align:start position:0%
value is zero or what's called a null
 

01:02:04.640 --> 01:02:07.190 align:start position:0%
value is zero or what's called a null
pointer<01:02:05.520><c> um</c>

01:02:07.190 --> 01:02:07.200 align:start position:0%
pointer um
 

01:02:07.200 --> 01:02:11.510 align:start position:0%
pointer um
sort<01:02:07.359><c> of</c><01:02:08.079><c> signifies</c><01:02:08.640><c> nothing</c><01:02:09.599><c> um</c><01:02:10.160><c> with</c><01:02:10.400><c> it</c>

01:02:11.510 --> 01:02:11.520 align:start position:0%
sort of signifies nothing um with it
 

01:02:11.520 --> 01:02:14.470 align:start position:0%
sort of signifies nothing um with it
you<01:02:11.680><c> know</c><01:02:11.760><c> we're</c><01:02:12.000><c> done</c><01:02:13.440><c> and</c><01:02:13.599><c> so</c><01:02:13.760><c> the</c><01:02:14.160><c> code</c><01:02:14.400><c> in</c>

01:02:14.470 --> 01:02:14.480 align:start position:0%
you know we're done and so the code in
 

01:02:14.480 --> 01:02:15.589 align:start position:0%
you know we're done and so the code in
the<01:02:14.559><c> kernel</c><01:02:14.880><c> has</c><01:02:15.039><c> actually</c>

01:02:15.589 --> 01:02:15.599 align:start position:0%
the kernel has actually
 

01:02:15.599 --> 01:02:17.109 align:start position:0%
the kernel has actually
walks<01:02:15.839><c> through</c><01:02:16.000><c> this</c><01:02:16.160><c> array</c><01:02:16.480><c> until</c><01:02:16.720><c> it</c><01:02:16.799><c> finds</c>

01:02:17.109 --> 01:02:17.119 align:start position:0%
walks through this array until it finds
 

01:02:17.119 --> 01:02:18.870 align:start position:0%
walks through this array until it finds
the<01:02:18.079><c> element</c>

01:02:18.870 --> 01:02:18.880 align:start position:0%
the element
 

01:02:18.880 --> 01:02:24.710 align:start position:0%
the element
whose<01:02:19.200><c> value</c><01:02:19.440><c> is</c><01:02:19.599><c> zero</c>

01:02:24.710 --> 01:02:24.720 align:start position:0%
 
 

01:02:24.720 --> 01:02:28.230 align:start position:0%
 
okay<01:02:25.680><c> um</c><01:02:27.119><c> right</c><01:02:27.280><c> so</c><01:02:27.440><c> this</c><01:02:27.599><c> is</c><01:02:27.680><c> how</c><01:02:27.920><c> a</c><01:02:28.000><c> program</c>

01:02:28.230 --> 01:02:28.240 align:start position:0%
okay um right so this is how a program
 

01:02:28.240 --> 01:02:29.750 align:start position:0%
okay um right so this is how a program
can<01:02:28.400><c> replace</c><01:02:28.880><c> itself</c>

01:02:29.750 --> 01:02:29.760 align:start position:0%
can replace itself
 

01:02:29.760 --> 01:02:32.150 align:start position:0%
can replace itself
um<01:02:30.640><c> with</c><01:02:30.880><c> another</c><01:02:31.119><c> program</c><01:02:31.440><c> from</c><01:02:31.599><c> a</c><01:02:31.760><c> file</c><01:02:32.000><c> but</c>

01:02:32.150 --> 01:02:32.160 align:start position:0%
um with another program from a file but
 

01:02:32.160 --> 01:02:33.670 align:start position:0%
um with another program from a file but
actually<01:02:32.400><c> when</c><01:02:32.640><c> we</c><01:02:32.799><c> run</c><01:02:33.039><c> stuff</c><01:02:33.200><c> in</c><01:02:33.280><c> the</c><01:02:33.440><c> shell</c>

01:02:33.670 --> 01:02:33.680 align:start position:0%
actually when we run stuff in the shell
 

01:02:33.680 --> 01:02:35.670 align:start position:0%
actually when we run stuff in the shell
like<01:02:33.920><c> echo</c><01:02:34.240><c> abc</c>

01:02:35.670 --> 01:02:35.680 align:start position:0%
like echo abc
 

01:02:35.680 --> 01:02:38.789 align:start position:0%
like echo abc
or<01:02:35.920><c> ls</c><01:02:36.400><c> or</c><01:02:36.799><c> anything</c><01:02:37.280><c> else</c><01:02:38.079><c> um</c>

01:02:38.789 --> 01:02:38.799 align:start position:0%
or ls or anything else um
 

01:02:38.799 --> 01:02:40.390 align:start position:0%
or ls or anything else um
we<01:02:38.960><c> don't</c><01:02:39.039><c> want</c><01:02:39.200><c> to</c><01:02:39.280><c> replace</c><01:02:39.680><c> the</c><01:02:39.920><c> shell</c><01:02:40.319><c> we</c>

01:02:40.390 --> 01:02:40.400 align:start position:0%
we don't want to replace the shell we
 

01:02:40.400 --> 01:02:41.829 align:start position:0%
we don't want to replace the shell we
don't<01:02:40.720><c> want</c><01:02:40.880><c> to</c><01:02:40.960><c> have</c><01:02:41.039><c> the</c><01:02:41.119><c> shell</c><01:02:41.520><c> just</c>

01:02:41.829 --> 01:02:41.839 align:start position:0%
don't want to have the shell just
 

01:02:41.839 --> 01:02:45.190 align:start position:0%
don't want to have the shell just
call<01:02:42.079><c> exact</c><01:02:43.359><c> um</c><01:02:43.920><c> because</c><01:02:44.400><c> that</c><01:02:44.559><c> would</c><01:02:44.880><c> replace</c>

01:02:45.190 --> 01:02:45.200 align:start position:0%
call exact um because that would replace
 

01:02:45.200 --> 01:02:46.710 align:start position:0%
call exact um because that would replace
the<01:02:45.359><c> shell</c><01:02:45.599><c> with</c><01:02:45.680><c> the</c><01:02:45.839><c> echo</c><01:02:46.160><c> command</c><01:02:46.559><c> and</c><01:02:46.640><c> then</c>

01:02:46.710 --> 01:02:46.720 align:start position:0%
the shell with the echo command and then
 

01:02:46.720 --> 01:02:48.150 align:start position:0%
the shell with the echo command and then
when<01:02:46.960><c> echo</c><01:02:47.200><c> exited</c>

01:02:48.150 --> 01:02:48.160 align:start position:0%
when echo exited
 

01:02:48.160 --> 01:02:50.710 align:start position:0%
when echo exited
that<01:02:48.319><c> would</c><01:02:48.480><c> be</c><01:02:48.640><c> it</c><01:02:49.599><c> you</c><01:02:49.760><c> know</c><01:02:50.240><c> we</c><01:02:50.400><c> don't</c><01:02:50.480><c> want</c>

01:02:50.710 --> 01:02:50.720 align:start position:0%
that would be it you know we don't want
 

01:02:50.720 --> 01:02:52.230 align:start position:0%
that would be it you know we don't want
echo<01:02:50.960><c> to</c><01:02:51.039><c> replace</c><01:02:51.440><c> the</c><01:02:51.599><c> shell</c><01:02:51.920><c> so</c>

01:02:52.230 --> 01:02:52.240 align:start position:0%
echo to replace the shell so
 

01:02:52.240 --> 01:02:54.950 align:start position:0%
echo to replace the shell so
what<01:02:52.480><c> the</c><01:02:52.559><c> shell</c><01:02:52.880><c> actually</c><01:02:53.119><c> does</c><01:02:53.359><c> is</c><01:02:53.760><c> fork</c><01:02:54.880><c> and</c>

01:02:54.950 --> 01:02:54.960 align:start position:0%
what the shell actually does is fork and
 

01:02:54.960 --> 01:02:56.630 align:start position:0%
what the shell actually does is fork and
then<01:02:55.200><c> the</c><01:02:55.359><c> child</c><01:02:55.760><c> calls</c><01:02:56.079><c> it</c><01:02:56.240><c> zac</c>

01:02:56.630 --> 01:02:56.640 align:start position:0%
then the child calls it zac
 

01:02:56.640 --> 01:02:59.430 align:start position:0%
then the child calls it zac
and<01:02:56.720><c> that's</c><01:02:56.960><c> an</c><01:02:57.119><c> extremely</c><01:02:57.839><c> common</c><01:02:58.480><c> unix</c>

01:02:59.430 --> 01:02:59.440 align:start position:0%
and that's an extremely common unix
 

01:02:59.440 --> 01:03:00.150 align:start position:0%
and that's an extremely common unix
idiom

01:03:00.150 --> 01:03:00.160 align:start position:0%
idiom
 

01:03:00.160 --> 01:03:03.109 align:start position:0%
idiom
these<01:03:00.400><c> programs</c><01:03:00.880><c> that</c><01:03:01.599><c> um</c><01:03:02.559><c> want</c><01:03:02.799><c> to</c><01:03:02.880><c> run</c><01:03:03.039><c> a</c>

01:03:03.109 --> 01:03:03.119 align:start position:0%
these programs that um want to run a
 

01:03:03.119 --> 01:03:04.950 align:start position:0%
these programs that um want to run a
program<01:03:03.440><c> but</c><01:03:03.599><c> regain</c><01:03:04.000><c> control</c><01:03:04.480><c> what</c><01:03:04.640><c> they</c><01:03:04.799><c> do</c>

01:03:04.950 --> 01:03:04.960 align:start position:0%
program but regain control what they do
 

01:03:04.960 --> 01:03:05.430 align:start position:0%
program but regain control what they do
is<01:03:05.119><c> call</c>

01:03:05.430 --> 01:03:05.440 align:start position:0%
is call
 

01:03:05.440 --> 01:03:08.150 align:start position:0%
is call
fork<01:03:06.000><c> and</c><01:03:06.160><c> have</c><01:03:06.319><c> the</c><01:03:06.400><c> child</c><01:03:06.799><c> call</c><01:03:07.039><c> exact</c><01:03:07.920><c> so</c>

01:03:08.150 --> 01:03:08.160 align:start position:0%
fork and have the child call exact so
 

01:03:08.160 --> 01:03:08.950 align:start position:0%
fork and have the child call exact so
here's<01:03:08.480><c> a</c>

01:03:08.950 --> 01:03:08.960 align:start position:0%
here's a
 

01:03:08.960 --> 01:03:14.150 align:start position:0%
here's a
simple<01:03:09.280><c> example</c><01:03:10.480><c> this</c><01:03:10.799><c> fork</c><01:03:11.119><c> exact</c><01:03:11.440><c> program</c>

01:03:14.150 --> 01:03:14.160 align:start position:0%
 
 

01:03:14.160 --> 01:03:16.710 align:start position:0%
 
so<01:03:14.319><c> in</c><01:03:14.400><c> this</c><01:03:14.839><c> program</c><01:03:15.680><c> um</c><01:03:16.079><c> called</c><01:03:16.319><c> fork</c><01:03:16.640><c> on</c>

01:03:16.710 --> 01:03:16.720 align:start position:0%
so in this program um called fork on
 

01:03:16.720 --> 01:03:17.510 align:start position:0%
so in this program um called fork on
line<01:03:16.960><c> 12</c>

01:03:17.510 --> 01:03:17.520 align:start position:0%
line 12
 

01:03:17.520 --> 01:03:19.589 align:start position:0%
line 12
and<01:03:17.599><c> the</c><01:03:17.839><c> child</c><01:03:18.240><c> started</c><01:03:18.559><c> line</c><01:03:18.880><c> 14</c><01:03:19.280><c> we</c><01:03:19.359><c> call</c>

01:03:19.589 --> 01:03:19.599 align:start position:0%
and the child started line 14 we call
 

01:03:19.599 --> 01:03:21.270 align:start position:0%
and the child started line 14 we call
exec<01:03:19.920><c> much</c><01:03:20.160><c> like</c><01:03:20.400><c> before</c>

01:03:21.270 --> 01:03:21.280 align:start position:0%
exec much like before
 

01:03:21.280 --> 01:03:24.630 align:start position:0%
exec much like before
the<01:03:21.520><c> child</c><01:03:22.000><c> process</c><01:03:23.359><c> um</c>

01:03:24.630 --> 01:03:24.640 align:start position:0%
the child process um
 

01:03:24.640 --> 01:03:27.029 align:start position:0%
the child process um
has<01:03:24.880><c> to</c><01:03:25.200><c> replace</c><01:03:25.680><c> itself</c><01:03:26.240><c> with</c><01:03:26.559><c> the</c><01:03:26.720><c> echo</c>

01:03:27.029 --> 01:03:27.039 align:start position:0%
has to replace itself with the echo
 

01:03:27.039 --> 01:03:28.630 align:start position:0%
has to replace itself with the echo
command

01:03:28.630 --> 01:03:28.640 align:start position:0%
command
 

01:03:28.640 --> 01:03:31.589 align:start position:0%
command
and<01:03:28.799><c> echo</c><01:03:29.039><c> does</c><01:03:29.280><c> this</c><01:03:29.359><c> thing</c><01:03:29.599><c> and</c><01:03:29.680><c> then</c><01:03:30.160><c> exits</c>

01:03:31.589 --> 01:03:31.599 align:start position:0%
and echo does this thing and then exits
 

01:03:31.599 --> 01:03:33.109 align:start position:0%
and echo does this thing and then exits
and<01:03:31.680><c> then</c><01:03:31.839><c> the</c><01:03:32.000><c> parent</c><01:03:32.319><c> process</c><01:03:32.640><c> regains</c>

01:03:33.109 --> 01:03:33.119 align:start position:0%
and then the parent process regains
 

01:03:33.119 --> 01:03:33.670 align:start position:0%
and then the parent process regains
control

01:03:33.670 --> 01:03:33.680 align:start position:0%
control
 

01:03:33.680 --> 01:03:37.670 align:start position:0%
control
because<01:03:34.319><c> um</c><01:03:34.960><c> when</c><01:03:35.440><c> the</c><01:03:35.920><c> fork</c><01:03:36.240><c> returns</c>

01:03:37.670 --> 01:03:37.680 align:start position:0%
because um when the fork returns
 

01:03:37.680 --> 01:03:39.109 align:start position:0%
because um when the fork returns
the<01:03:37.920><c> greater</c><01:03:38.240><c> than</c><01:03:38.400><c> zero</c><01:03:38.640><c> value</c><01:03:38.960><c> in</c><01:03:39.039><c> the</c>

01:03:39.109 --> 01:03:39.119 align:start position:0%
the greater than zero value in the
 

01:03:39.119 --> 01:03:40.549 align:start position:0%
the greater than zero value in the
parent<01:03:39.359><c> process</c><01:03:39.760><c> so</c><01:03:39.839><c> the</c><01:03:39.920><c> parent</c><01:03:40.240><c> process</c>

01:03:40.549 --> 01:03:40.559 align:start position:0%
parent process so the parent process
 

01:03:40.559 --> 01:03:42.549 align:start position:0%
parent process so the parent process
then<01:03:40.799><c> continues</c><01:03:41.200><c> to</c><01:03:41.280><c> execute</c><01:03:41.680><c> at</c><01:03:41.760><c> 19</c>

01:03:42.549 --> 01:03:42.559 align:start position:0%
then continues to execute at 19
 

01:03:42.559 --> 01:03:45.270 align:start position:0%
then continues to execute at 19
and<01:03:42.720><c> unix</c><01:03:43.119><c> provides</c><01:03:43.440><c> a</c><01:03:43.839><c> weight</c><01:03:44.559><c> system</c><01:03:44.960><c> called</c>

01:03:45.270 --> 01:03:45.280 align:start position:0%
and unix provides a weight system called
 

01:03:45.280 --> 01:03:45.670 align:start position:0%
and unix provides a weight system called
line

01:03:45.670 --> 01:03:45.680 align:start position:0%
line
 

01:03:45.680 --> 01:03:48.549 align:start position:0%
line
20<01:03:46.559><c> for</c><01:03:46.720><c> a</c><01:03:46.799><c> process</c><01:03:47.200><c> to</c><01:03:47.440><c> wait</c><01:03:47.680><c> for</c><01:03:47.839><c> one</c><01:03:48.079><c> of</c><01:03:48.160><c> the</c>

01:03:48.549 --> 01:03:48.559 align:start position:0%
20 for a process to wait for one of the
 

01:03:48.559 --> 01:03:49.109 align:start position:0%
20 for a process to wait for one of the
for<01:03:48.799><c> a</c>

01:03:49.109 --> 01:03:49.119 align:start position:0%
for a
 

01:03:49.119 --> 01:03:51.750 align:start position:0%
for a
child<01:03:49.440><c> that</c><01:03:49.599><c> it</c><01:03:49.680><c> created</c><01:03:50.079><c> with</c><01:03:50.400><c> four</c><01:03:51.039><c> because</c>

01:03:51.750 --> 01:03:51.760 align:start position:0%
child that it created with four because
 

01:03:51.760 --> 01:03:53.270 align:start position:0%
child that it created with four because
when<01:03:51.920><c> i</c><01:03:52.000><c> run</c><01:03:52.160><c> a</c><01:03:52.240><c> command</c>

01:03:53.270 --> 01:03:53.280 align:start position:0%
when i run a command
 

01:03:53.280 --> 01:03:56.470 align:start position:0%
when i run a command
um<01:03:54.000><c> here</c><01:03:54.160><c> on</c><01:03:54.240><c> the</c><01:03:54.319><c> command</c><01:03:54.720><c> line</c>

01:03:56.470 --> 01:03:56.480 align:start position:0%
um here on the command line
 

01:03:56.480 --> 01:03:59.510 align:start position:0%
um here on the command line
we<01:03:56.839><c> want</c><01:03:57.680><c> uh</c><01:03:57.920><c> we</c><01:03:58.079><c> want</c><01:03:58.240><c> the</c><01:03:58.400><c> shell</c><01:03:58.720><c> to</c><01:03:58.880><c> wait</c>

01:03:59.510 --> 01:03:59.520 align:start position:0%
we want uh we want the shell to wait
 

01:03:59.520 --> 01:04:01.750 align:start position:0%
we want uh we want the shell to wait
for<01:03:59.680><c> the</c><01:03:59.920><c> command</c><01:04:00.319><c> to</c><01:04:00.480><c> finish</c><01:04:01.280><c> before</c><01:04:01.680><c> it</c>

01:04:01.750 --> 01:04:01.760 align:start position:0%
for the command to finish before it
 

01:04:01.760 --> 01:04:03.109 align:start position:0%
for the command to finish before it
prints<01:04:02.079><c> the</c><01:04:02.160><c> prop</c><01:04:02.559><c> again</c>

01:04:03.109 --> 01:04:03.119 align:start position:0%
prints the prop again
 

01:04:03.119 --> 01:04:04.789 align:start position:0%
prints the prop again
before<01:04:03.440><c> it</c><01:04:03.520><c> prints</c><01:04:03.760><c> this</c><01:04:03.920><c> dollar</c><01:04:04.240><c> sign</c><01:04:04.480><c> prompt</c>

01:04:04.789 --> 01:04:04.799 align:start position:0%
before it prints this dollar sign prompt
 

01:04:04.799 --> 01:04:06.549 align:start position:0%
before it prints this dollar sign prompt
asking<01:04:05.039><c> me</c><01:04:05.200><c> for</c><01:04:05.359><c> more</c><01:04:05.599><c> input</c>

01:04:06.549 --> 01:04:06.559 align:start position:0%
asking me for more input
 

01:04:06.559 --> 01:04:08.789 align:start position:0%
asking me for more input
and<01:04:06.640><c> so</c><01:04:06.880><c> it's</c><01:04:07.039><c> the</c><01:04:07.119><c> wait</c><01:04:07.440><c> system</c><01:04:07.839><c> call</c><01:04:08.640><c> that</c>

01:04:08.789 --> 01:04:08.799 align:start position:0%
and so it's the wait system call that
 

01:04:08.799 --> 01:04:10.309 align:start position:0%
and so it's the wait system call that
allows<01:04:09.119><c> the</c><01:04:09.200><c> process</c><01:04:09.520><c> to</c><01:04:09.680><c> wait</c><01:04:10.000><c> for</c>

01:04:10.309 --> 01:04:10.319 align:start position:0%
allows the process to wait for
 

01:04:10.319 --> 01:04:12.870 align:start position:0%
allows the process to wait for
any<01:04:10.480><c> of</c><01:04:10.640><c> its</c><01:04:10.799><c> children</c><01:04:11.119><c> to</c><01:04:11.280><c> return</c><01:04:12.160><c> and</c><01:04:12.480><c> this</c>

01:04:12.870 --> 01:04:12.880 align:start position:0%
any of its children to return and this
 

01:04:12.880 --> 01:04:15.670 align:start position:0%
any of its children to return and this
status<01:04:13.359><c> argument</c><01:04:13.760><c> is</c><01:04:13.920><c> a</c>

01:04:15.670 --> 01:04:15.680 align:start position:0%
status argument is a
 

01:04:15.680 --> 01:04:19.349 align:start position:0%
status argument is a
way<01:04:16.079><c> for</c><01:04:17.920><c> an</c><01:04:18.160><c> exiting</c><01:04:18.640><c> child</c>

01:04:19.349 --> 01:04:19.359 align:start position:0%
way for an exiting child
 

01:04:19.359 --> 01:04:22.950 align:start position:0%
way for an exiting child
to<01:04:20.000><c> communicate</c><01:04:20.720><c> one</c><01:04:21.200><c> integer</c>

01:04:22.950 --> 01:04:22.960 align:start position:0%
to communicate one integer
 

01:04:22.960 --> 01:04:26.150 align:start position:0%
to communicate one integer
32-bit<01:04:23.599><c> value</c><01:04:24.319><c> from</c><01:04:24.480><c> the</c><01:04:24.559><c> exiting</c><01:04:25.039><c> child</c><01:04:25.839><c> um</c>

01:04:26.150 --> 01:04:26.160 align:start position:0%
32-bit value from the exiting child um
 

01:04:26.160 --> 01:04:28.230 align:start position:0%
32-bit value from the exiting child um
to<01:04:26.319><c> the</c><01:04:26.400><c> waiting</c><01:04:26.799><c> parent</c><01:04:27.119><c> so</c><01:04:27.280><c> in</c><01:04:27.359><c> line</c><01:04:27.680><c> 17</c><01:04:28.079><c> that</c>

01:04:28.230 --> 01:04:28.240 align:start position:0%
to the waiting parent so in line 17 that
 

01:04:28.240 --> 01:04:29.589 align:start position:0%
to the waiting parent so in line 17 that
argument<01:04:28.559><c> to</c><01:04:28.720><c> exit</c>

01:04:29.589 --> 01:04:29.599 align:start position:0%
argument to exit
 

01:04:29.599 --> 01:04:32.150 align:start position:0%
argument to exit
that<01:04:29.920><c> one</c><01:04:30.240><c> that's</c><01:04:30.480><c> the</c><01:04:30.559><c> argument</c><01:04:30.960><c> to</c><01:04:31.039><c> exit</c><01:04:32.000><c> the</c>

01:04:32.150 --> 01:04:32.160 align:start position:0%
that one that's the argument to exit the
 

01:04:32.160 --> 01:04:33.990 align:start position:0%
that one that's the argument to exit the
operating<01:04:32.640><c> system</c>

01:04:33.990 --> 01:04:34.000 align:start position:0%
operating system
 

01:04:34.000 --> 01:04:37.430 align:start position:0%
operating system
passes<01:04:34.480><c> that</c><01:04:34.799><c> one</c><01:04:35.440><c> from</c><01:04:35.680><c> the</c><01:04:35.839><c> exiting</c><01:04:36.319><c> child</c>

01:04:37.430 --> 01:04:37.440 align:start position:0%
passes that one from the exiting child
 

01:04:37.440 --> 01:04:39.829 align:start position:0%
passes that one from the exiting child
um<01:04:37.760><c> to</c><01:04:37.920><c> the</c><01:04:38.079><c> call</c><01:04:38.319><c> to</c><01:04:38.480><c> wait</c><01:04:38.799><c> at</c><01:04:38.880><c> line</c><01:04:39.200><c> 20.</c><01:04:39.520><c> so</c>

01:04:39.829 --> 01:04:39.839 align:start position:0%
um to the call to wait at line 20. so
 

01:04:39.839 --> 01:04:42.950 align:start position:0%
um to the call to wait at line 20. so
weight<01:04:40.400><c> that</c><01:04:40.640><c> the</c><01:04:40.799><c> ampersand</c><01:04:41.440><c> and</c><01:04:41.520><c> weight</c>

01:04:42.950 --> 01:04:42.960 align:start position:0%
weight that the ampersand and weight
 

01:04:42.960 --> 01:04:45.029 align:start position:0%
weight that the ampersand and weight
is<01:04:43.119><c> passing</c><01:04:43.520><c> the</c><01:04:43.680><c> address</c><01:04:44.079><c> of</c><01:04:44.160><c> the</c><01:04:44.319><c> status</c>

01:04:45.029 --> 01:04:45.039 align:start position:0%
is passing the address of the status
 

01:04:45.039 --> 01:04:45.990 align:start position:0%
is passing the address of the status
variable

01:04:45.990 --> 01:04:46.000 align:start position:0%
variable
 

01:04:46.000 --> 01:04:47.990 align:start position:0%
variable
to<01:04:46.160><c> the</c><01:04:46.240><c> kernel</c><01:04:46.640><c> the</c><01:04:46.720><c> colonel</c><01:04:47.359><c> fills</c><01:04:47.680><c> in</c><01:04:47.839><c> that</c>

01:04:47.990 --> 01:04:48.000 align:start position:0%
to the kernel the colonel fills in that
 

01:04:48.000 --> 01:04:50.069 align:start position:0%
to the kernel the colonel fills in that
address<01:04:48.480><c> with</c><01:04:48.720><c> the</c>

01:04:50.069 --> 01:04:50.079 align:start position:0%
address with the
 

01:04:50.079 --> 01:04:52.870 align:start position:0%
address with the
child's<01:04:50.559><c> argument</c><01:04:50.960><c> to</c><01:04:51.119><c> exit</c><01:04:52.640><c> and</c><01:04:52.799><c> the</c>

01:04:52.870 --> 01:04:52.880 align:start position:0%
child's argument to exit and the
 

01:04:52.880 --> 01:04:54.630 align:start position:0%
child's argument to exit and the
convention<01:04:53.359><c> in</c><01:04:53.440><c> unix</c><01:04:53.920><c> is</c><01:04:54.000><c> that</c>

01:04:54.630 --> 01:04:54.640 align:start position:0%
convention in unix is that
 

01:04:54.640 --> 01:04:57.270 align:start position:0%
convention in unix is that
if<01:04:54.799><c> a</c><01:04:55.599><c> program</c><01:04:56.240><c> completes</c><01:04:56.640><c> successfully</c><01:04:57.119><c> it</c>

01:04:57.270 --> 01:04:57.280 align:start position:0%
if a program completes successfully it
 

01:04:57.280 --> 01:04:58.470 align:start position:0%
if a program completes successfully it
exit<01:04:57.599><c> with</c><01:04:57.839><c> exits</c>

01:04:58.470 --> 01:04:58.480 align:start position:0%
exit with exits
 

01:04:58.480 --> 01:05:01.430 align:start position:0%
exit with exits
with<01:04:58.720><c> state</c><01:04:58.960><c> of</c><01:04:59.119><c> zero</c><01:05:00.480><c> but</c><01:05:00.720><c> if</c><01:05:01.119><c> if</c><01:05:01.280><c> it</c>

01:05:01.430 --> 01:05:01.440 align:start position:0%
with state of zero but if if it
 

01:05:01.440 --> 01:05:02.549 align:start position:0%
with state of zero but if if it
encountered<01:05:01.839><c> an</c><01:05:02.000><c> error</c>

01:05:02.549 --> 01:05:02.559 align:start position:0%
encountered an error
 

01:05:02.559 --> 01:05:05.829 align:start position:0%
encountered an error
as<01:05:02.799><c> it</c><01:05:02.880><c> lines</c><01:05:03.119><c> 17</c><01:05:04.240><c> um</c><01:05:04.960><c> then</c><01:05:05.119><c> the</c><01:05:05.440><c> unix</c>

01:05:05.829 --> 01:05:05.839 align:start position:0%
as it lines 17 um then the unix
 

01:05:05.839 --> 01:05:07.109 align:start position:0%
as it lines 17 um then the unix
convention<01:05:06.400><c> is</c><01:05:06.480><c> that</c><01:05:06.640><c> you</c><01:05:06.799><c> pass</c>

01:05:07.109 --> 01:05:07.119 align:start position:0%
convention is that you pass
 

01:05:07.119 --> 01:05:09.750 align:start position:0%
convention is that you pass
one<01:05:07.359><c> to</c><01:05:07.520><c> exit</c><01:05:08.319><c> and</c><01:05:08.400><c> so</c><01:05:08.640><c> if</c><01:05:08.720><c> you</c><01:05:08.880><c> care</c><01:05:09.359><c> the</c>

01:05:09.750 --> 01:05:09.760 align:start position:0%
one to exit and so if you care the
 

01:05:09.760 --> 01:05:11.670 align:start position:0%
one to exit and so if you care the
calling<01:05:10.160><c> process</c><01:05:10.480><c> can</c><01:05:10.640><c> look</c><01:05:10.880><c> at</c><01:05:10.960><c> the</c><01:05:11.200><c> status</c>

01:05:11.670 --> 01:05:11.680 align:start position:0%
calling process can look at the status
 

01:05:11.680 --> 01:05:12.309 align:start position:0%
calling process can look at the status
from<01:05:11.920><c> weight</c>

01:05:12.309 --> 01:05:12.319 align:start position:0%
from weight
 

01:05:12.319 --> 01:05:15.430 align:start position:0%
from weight
and<01:05:13.200><c> decide</c><01:05:13.760><c> whether</c><01:05:14.000><c> the</c>

01:05:15.430 --> 01:05:15.440 align:start position:0%
and decide whether the
 

01:05:15.440 --> 01:05:18.549 align:start position:0%
and decide whether the
child<01:05:16.160><c> completed</c><01:05:16.559><c> successfully</c><01:05:17.119><c> enough</c>

01:05:18.549 --> 01:05:18.559 align:start position:0%
child completed successfully enough
 

01:05:18.559 --> 01:05:21.270 align:start position:0%
child completed successfully enough
professor<01:05:19.039><c> morris</c><01:05:19.359><c> quick</c><01:05:19.599><c> question</c><01:05:20.480><c> yes</c>

01:05:21.270 --> 01:05:21.280 align:start position:0%
professor morris quick question yes
 

01:05:21.280 --> 01:05:22.470 align:start position:0%
professor morris quick question yes
about

01:05:22.470 --> 01:05:22.480 align:start position:0%
about
 

01:05:22.480 --> 01:05:25.510 align:start position:0%
about
the<01:05:22.880><c> exact</c><01:05:23.280><c> call</c><01:05:23.520><c> on</c><01:05:23.680><c> 9</c><01:05:23.920><c> 15.</c><01:05:24.799><c> uh</c><01:05:24.960><c> we</c><01:05:25.119><c> mentioned</c>

01:05:25.510 --> 01:05:25.520 align:start position:0%
the exact call on 9 15. uh we mentioned
 

01:05:25.520 --> 01:05:25.990 align:start position:0%
the exact call on 9 15. uh we mentioned
not

01:05:25.990 --> 01:05:26.000 align:start position:0%
not
 

01:05:26.000 --> 01:05:29.190 align:start position:0%
not
a<01:05:26.079><c> bit</c><01:05:26.319><c> ago</c><01:05:26.720><c> that</c><01:05:27.280><c> exec</c><01:05:27.920><c> will</c><01:05:28.559><c> completely</c><01:05:29.039><c> go</c>

01:05:29.190 --> 01:05:29.200 align:start position:0%
a bit ago that exec will completely go
 

01:05:29.200 --> 01:05:31.270 align:start position:0%
a bit ago that exec will completely go
into<01:05:29.440><c> the</c><01:05:29.520><c> echo</c><01:05:29.839><c> program</c><01:05:30.319><c> and</c><01:05:30.480><c> not</c><01:05:30.720><c> return</c>

01:05:31.270 --> 01:05:31.280 align:start position:0%
into the echo program and not return
 

01:05:31.280 --> 01:05:34.630 align:start position:0%
into the echo program and not return
to<01:05:31.599><c> fork</c><01:05:31.920><c> exec</c><01:05:33.359><c> so</c>

01:05:34.630 --> 01:05:34.640 align:start position:0%
to fork exec so
 

01:05:34.640 --> 01:05:38.150 align:start position:0%
to fork exec so
would<01:05:34.799><c> it</c><01:05:34.960><c> ever</c><01:05:35.119><c> reach</c><01:05:35.440><c> lines</c><01:05:35.760><c> 16</c><01:05:36.160><c> and</c><01:05:36.240><c> 17</c>

01:05:38.150 --> 01:05:38.160 align:start position:0%
would it ever reach lines 16 and 17
 

01:05:38.160 --> 01:05:41.270 align:start position:0%
would it ever reach lines 16 and 17
well<01:05:39.680><c> not</c><01:05:39.920><c> for</c><01:05:40.079><c> this</c><01:05:40.240><c> exact</c><01:05:40.720><c> code</c><01:05:41.119><c> because</c>

01:05:41.270 --> 01:05:41.280 align:start position:0%
well not for this exact code because
 

01:05:41.280 --> 01:05:42.390 align:start position:0%
well not for this exact code because
there<01:05:41.520><c> happens</c><01:05:41.920><c> to</c><01:05:42.079><c> be</c>

01:05:42.390 --> 01:05:42.400 align:start position:0%
there happens to be
 

01:05:42.400 --> 01:05:44.870 align:start position:0%
there happens to be
a<01:05:42.480><c> program</c><01:05:42.880><c> called</c><01:05:43.200><c> echo</c><01:05:44.079><c> but</c><01:05:44.319><c> but</c><01:05:44.640><c> you</c><01:05:44.720><c> know</c>

01:05:44.870 --> 01:05:44.880 align:start position:0%
a program called echo but but you know
 

01:05:44.880 --> 01:05:46.950 align:start position:0%
a program called echo but but you know
if<01:05:44.960><c> i</c><01:05:45.119><c> modified</c><01:05:45.680><c> that</c><01:05:45.920><c> code</c><01:05:46.319><c> here</c><01:05:46.480><c> let</c><01:05:46.640><c> me</c><01:05:46.799><c> let</c>

01:05:46.950 --> 01:05:46.960 align:start position:0%
if i modified that code here let me let
 

01:05:46.960 --> 01:05:49.430 align:start position:0%
if i modified that code here let me let
me<01:05:47.039><c> just</c><01:05:47.200><c> modify</c><01:05:47.599><c> this</c><01:05:47.760><c> code</c><01:05:48.000><c> for</c><01:05:48.160><c> you</c>

01:05:49.430 --> 01:05:49.440 align:start position:0%
me just modify this code for you
 

01:05:49.440 --> 01:05:52.870 align:start position:0%
me just modify this code for you
okay<01:05:49.680><c> so</c><01:05:49.920><c> first</c><01:05:50.079><c> let</c><01:05:50.240><c> me</c><01:05:50.319><c> just</c><01:05:50.480><c> run</c><01:05:50.640><c> fork</c><01:05:50.960><c> exact</c>

01:05:52.870 --> 01:05:52.880 align:start position:0%
okay so first let me just run fork exact
 

01:05:52.880 --> 01:05:56.069 align:start position:0%
okay so first let me just run fork exact
right<01:05:53.599><c> it</c><01:05:53.839><c> actually</c><01:05:54.079><c> does</c><01:05:54.559><c> execute</c><01:05:55.599><c> echo</c><01:05:55.920><c> with</c>

01:05:56.069 --> 01:05:56.079 align:start position:0%
right it actually does execute echo with
 

01:05:56.079 --> 01:05:57.670 align:start position:0%
right it actually does execute echo with
those<01:05:56.240><c> arguments</c><01:05:56.640><c> we</c><01:05:56.720><c> see</c><01:05:56.880><c> the</c><01:05:57.039><c> output</c><01:05:57.440><c> this</c>

01:05:57.670 --> 01:05:57.680 align:start position:0%
those arguments we see the output this
 

01:05:57.680 --> 01:05:59.109 align:start position:0%
those arguments we see the output this
is<01:05:57.839><c> echo</c>

01:05:59.109 --> 01:05:59.119 align:start position:0%
is echo
 

01:05:59.119 --> 01:06:01.510 align:start position:0%
is echo
and<01:05:59.280><c> we</c><01:05:59.440><c> see</c><01:05:59.599><c> the</c><01:05:59.760><c> child</c><01:06:00.160><c> exited</c><01:06:00.720><c> to</c><01:06:01.039><c> show</c><01:06:01.280><c> that</c>

01:06:01.510 --> 01:06:01.520 align:start position:0%
and we see the child exited to show that
 

01:06:01.520 --> 01:06:02.870 align:start position:0%
and we see the child exited to show that
uh

01:06:02.870 --> 01:06:02.880 align:start position:0%
uh
 

01:06:02.880 --> 01:06:05.510 align:start position:0%
uh
echo<01:06:03.520><c> exited</c><01:06:04.000><c> successfully</c><01:06:04.960><c> and</c><01:06:05.039><c> the</c><01:06:05.200><c> parent</c>

01:06:05.510 --> 01:06:05.520 align:start position:0%
echo exited successfully and the parent
 

01:06:05.520 --> 01:06:06.309 align:start position:0%
echo exited successfully and the parent
waited<01:06:05.839><c> for</c><01:06:06.000><c> it</c>

01:06:06.309 --> 01:06:06.319 align:start position:0%
waited for it
 

01:06:06.319 --> 01:06:09.510 align:start position:0%
waited for it
let<01:06:06.480><c> me</c><01:06:06.640><c> just</c><01:06:07.359><c> modify</c><01:06:07.760><c> the</c><01:06:07.839><c> program</c><01:06:08.160><c> for</c><01:06:08.319><c> you</c>

01:06:09.510 --> 01:06:09.520 align:start position:0%
let me just modify the program for you
 

01:06:09.520 --> 01:06:11.990 align:start position:0%
let me just modify the program for you
um<01:06:09.760><c> instead</c><01:06:10.079><c> of</c><01:06:10.240><c> echo</c><01:06:10.960><c> i'm</c><01:06:11.119><c> going</c><01:06:11.280><c> to</c><01:06:11.359><c> run</c><01:06:11.839><c> some</c>

01:06:11.990 --> 01:06:12.000 align:start position:0%
um instead of echo i'm going to run some
 

01:06:12.000 --> 01:06:15.510 align:start position:0%
um instead of echo i'm going to run some
command<01:06:12.319><c> that</c><01:06:12.400><c> doesn't</c><01:06:12.640><c> exist</c>

01:06:15.510 --> 01:06:15.520 align:start position:0%
 
 

01:06:15.520 --> 01:06:19.190 align:start position:0%
 
i<01:06:15.680><c> actually</c><01:06:15.839><c> have</c><01:06:16.000><c> to</c><01:06:16.079><c> exit</c><01:06:16.480><c> out</c><01:06:16.839><c> of</c><01:06:17.119><c> uh</c><01:06:18.000><c> qmu</c>

01:06:19.190 --> 01:06:19.200 align:start position:0%
i actually have to exit out of uh qmu
 

01:06:19.200 --> 01:06:21.510 align:start position:0%
i actually have to exit out of uh qmu
with<01:06:19.520><c> control</c><01:06:20.000><c> a</c><01:06:20.319><c> x</c><01:06:20.720><c> and</c><01:06:20.799><c> then</c><01:06:21.039><c> rebuild</c><01:06:21.440><c> the</c>

01:06:21.510 --> 01:06:21.520 align:start position:0%
with control a x and then rebuild the
 

01:06:21.520 --> 01:06:23.990 align:start position:0%
with control a x and then rebuild the
whole<01:06:21.760><c> thing</c><01:06:21.920><c> in</c><01:06:22.000><c> order</c><01:06:22.240><c> to</c><01:06:22.480><c> recompile</c>

01:06:23.990 --> 01:06:24.000 align:start position:0%
whole thing in order to recompile
 

01:06:24.000 --> 01:06:26.710 align:start position:0%
whole thing in order to recompile
my<01:06:24.240><c> modified</c><01:06:25.760><c> four</c><01:06:25.920><c> gigs</c><01:06:26.240><c> and</c><01:06:26.319><c> i</c><01:06:26.400><c> run</c><01:06:26.559><c> four</c>

01:06:26.710 --> 01:06:26.720 align:start position:0%
my modified four gigs and i run four
 

01:06:26.720 --> 01:06:29.029 align:start position:0%
my modified four gigs and i run four
pixel<01:06:27.280><c> yen</c><01:06:27.599><c> after</c><01:06:27.839><c> modifying</c><01:06:28.319><c> and</c><01:06:28.480><c> compiling</c>

01:06:29.029 --> 01:06:29.039 align:start position:0%
pixel yen after modifying and compiling
 

01:06:29.039 --> 01:06:29.670 align:start position:0%
pixel yen after modifying and compiling
it

01:06:29.670 --> 01:06:29.680 align:start position:0%
it
 

01:06:29.680 --> 01:06:31.109 align:start position:0%
it
and<01:06:29.839><c> this</c><01:06:30.000><c> time</c><01:06:30.240><c> because</c><01:06:30.559><c> the</c><01:06:30.640><c> program</c><01:06:30.960><c> we're</c>

01:06:31.109 --> 01:06:31.119 align:start position:0%
and this time because the program we're
 

01:06:31.119 --> 01:06:33.430 align:start position:0%
and this time because the program we're
asking<01:06:31.440><c> to</c>

01:06:33.430 --> 01:06:33.440 align:start position:0%
asking to
 

01:06:33.440 --> 01:06:36.470 align:start position:0%
asking to
actually

01:06:36.470 --> 01:06:36.480 align:start position:0%
 
 

01:06:36.480 --> 01:06:38.390 align:start position:0%
 
the<01:06:36.640><c> program</c><01:06:36.960><c> we're</c><01:06:37.200><c> asking</c><01:06:37.520><c> to</c><01:06:38.000><c> execute</c>

01:06:38.390 --> 01:06:38.400 align:start position:0%
the program we're asking to execute
 

01:06:38.400 --> 01:06:39.589 align:start position:0%
the program we're asking to execute
doesn't<01:06:38.640><c> exist</c>

01:06:39.589 --> 01:06:39.599 align:start position:0%
doesn't exist
 

01:06:39.599 --> 01:06:42.710 align:start position:0%
doesn't exist
exec<01:06:40.000><c> does</c><01:06:40.319><c> return</c><01:06:41.200><c> we</c><01:06:41.359><c> see</c><01:06:41.520><c> the</c><01:06:41.680><c> exec</c><01:06:42.160><c> failed</c>

01:06:42.710 --> 01:06:42.720 align:start position:0%
exec does return we see the exec failed
 

01:06:42.720 --> 01:06:44.390 align:start position:0%
exec does return we see the exec failed
output

01:06:44.390 --> 01:06:44.400 align:start position:0%
output
 

01:06:44.400 --> 01:06:46.710 align:start position:0%
output
and<01:06:44.559><c> the</c><01:06:44.640><c> exit</c><01:06:45.119><c> one</c><01:06:45.760><c> you</c><01:06:46.000><c> see</c><01:06:46.160><c> the</c><01:06:46.240><c> one</c><01:06:46.480><c> there</c>

01:06:46.710 --> 01:06:46.720 align:start position:0%
and the exit one you see the one there
 

01:06:46.720 --> 01:06:48.470 align:start position:0%
and the exit one you see the one there
is<01:06:47.039><c> communicated</c><01:06:47.520><c> back</c><01:06:47.680><c> to</c><01:06:47.760><c> the</c><01:06:47.920><c> parent</c><01:06:48.319><c> which</c>

01:06:48.470 --> 01:06:48.480 align:start position:0%
is communicated back to the parent which
 

01:06:48.480 --> 01:06:52.309 align:start position:0%
is communicated back to the parent which
says<01:06:48.720><c> the</c><01:06:48.880><c> child</c><01:06:49.200><c> exited</c><01:06:49.599><c> the</c><01:06:49.680><c> status</c><01:06:50.079><c> one</c>

01:06:52.309 --> 01:06:52.319 align:start position:0%
says the child exited the status one
 

01:06:52.319 --> 01:06:55.589 align:start position:0%
says the child exited the status one
so<01:06:52.559><c> exec</c><01:06:53.119><c> returns</c><01:06:54.400><c> back</c><01:06:54.720><c> to</c><01:06:54.880><c> the</c><01:06:55.039><c> calling</c>

01:06:55.589 --> 01:06:55.599 align:start position:0%
so exec returns back to the calling
 

01:06:55.599 --> 01:06:56.069 align:start position:0%
so exec returns back to the calling
function

01:06:56.069 --> 01:06:56.079 align:start position:0%
function
 

01:06:56.079 --> 01:07:12.829 align:start position:0%
function
when<01:06:56.319><c> something</c><01:06:56.640><c> went</c><01:06:56.880><c> wrong</c><01:06:58.839><c> yes</c>

01:07:12.829 --> 01:07:12.839 align:start position:0%
 
 

01:07:12.839 --> 01:07:14.710 align:start position:0%
 
okay

01:07:14.710 --> 01:07:14.720 align:start position:0%
okay
 

01:07:14.720 --> 01:07:17.270 align:start position:0%
okay
all<01:07:14.799><c> right</c><01:07:15.119><c> um</c><01:07:15.760><c> something</c><01:07:16.079><c> that</c><01:07:16.480><c> uh</c><01:07:16.960><c> something</c>

01:07:17.270 --> 01:07:17.280 align:start position:0%
all right um something that uh something
 

01:07:17.280 --> 01:07:18.230 align:start position:0%
all right um something that uh something
to<01:07:17.359><c> note</c><01:07:17.680><c> here</c><01:07:17.920><c> that</c>

01:07:18.230 --> 01:07:18.240 align:start position:0%
to note here that
 

01:07:18.240 --> 01:07:19.510 align:start position:0%
to note here that
actually<01:07:18.480><c> i</c><01:07:18.559><c> think</c><01:07:18.960><c> many</c><01:07:19.200><c> of</c><01:07:19.280><c> you</c><01:07:19.440><c> have</c>

01:07:19.510 --> 01:07:19.520 align:start position:0%
actually i think many of you have
 

01:07:19.520 --> 01:07:21.270 align:start position:0%
actually i think many of you have
already<01:07:19.839><c> noted</c><01:07:20.240><c> is</c><01:07:20.400><c> that</c>

01:07:21.270 --> 01:07:21.280 align:start position:0%
already noted is that
 

01:07:21.280 --> 01:07:24.309 align:start position:0%
already noted is that
uh<01:07:22.000><c> this</c><01:07:22.160><c> is</c><01:07:22.319><c> a</c><01:07:22.400><c> common</c><01:07:22.799><c> idiom</c><01:07:23.119><c> here</c><01:07:23.359><c> this</c><01:07:23.680><c> fork</c>

01:07:24.309 --> 01:07:24.319 align:start position:0%
uh this is a common idiom here this fork
 

01:07:24.319 --> 01:07:27.270 align:start position:0%
uh this is a common idiom here this fork
followed<01:07:24.559><c> by</c><01:07:24.720><c> an</c><01:07:24.880><c> exec</c><01:07:25.200><c> and</c><01:07:25.359><c> a</c><01:07:25.520><c> child</c><01:07:26.559><c> um</c><01:07:27.119><c> and</c>

01:07:27.270 --> 01:07:27.280 align:start position:0%
followed by an exec and a child um and
 

01:07:27.280 --> 01:07:29.510 align:start position:0%
followed by an exec and a child um and
it's<01:07:27.440><c> potentially</c><01:07:27.839><c> a</c><01:07:27.920><c> bit</c><01:07:28.160><c> wasteful</c><01:07:28.640><c> the</c><01:07:28.799><c> fork</c>

01:07:29.510 --> 01:07:29.520 align:start position:0%
it's potentially a bit wasteful the fork
 

01:07:29.520 --> 01:07:32.470 align:start position:0%
it's potentially a bit wasteful the fork
copies<01:07:29.920><c> the</c><01:07:30.079><c> entire</c><01:07:30.480><c> parent</c><01:07:31.039><c> process</c><01:07:32.240><c> but</c>

01:07:32.470 --> 01:07:32.480 align:start position:0%
copies the entire parent process but
 

01:07:32.480 --> 01:07:33.270 align:start position:0%
copies the entire parent process but
exec

01:07:33.270 --> 01:07:33.280 align:start position:0%
exec
 

01:07:33.280 --> 01:07:35.910 align:start position:0%
exec
throws<01:07:33.599><c> away</c><01:07:34.079><c> all</c><01:07:34.160><c> that</c><01:07:34.400><c> copied</c><01:07:34.799><c> memory</c><01:07:35.760><c> and</c>

01:07:35.910 --> 01:07:35.920 align:start position:0%
throws away all that copied memory and
 

01:07:35.920 --> 01:07:39.990 align:start position:0%
throws away all that copied memory and
replaces<01:07:36.480><c> it</c><01:07:36.640><c> with</c><01:07:36.880><c> whatever</c><01:07:37.359><c> is</c><01:07:37.520><c> in</c><01:07:37.760><c> the</c><01:07:38.000><c> um</c>

01:07:39.990 --> 01:07:40.000 align:start position:0%
replaces it with whatever is in the um
 

01:07:40.000 --> 01:07:43.029 align:start position:0%
replaces it with whatever is in the um
file<01:07:40.240><c> that</c><01:07:40.400><c> you're</c><01:07:40.559><c> running</c><01:07:40.960><c> so</c><01:07:42.720><c> you</c><01:07:42.799><c> know</c><01:07:42.960><c> if</c>

01:07:43.029 --> 01:07:43.039 align:start position:0%
file that you're running so you know if
 

01:07:43.039 --> 01:07:44.230 align:start position:0%
file that you're running so you know if
you're<01:07:43.119><c> worried</c><01:07:43.359><c> about</c><01:07:43.520><c> this</c><01:07:43.680><c> kind</c><01:07:43.839><c> of</c><01:07:43.920><c> stuff</c>

01:07:44.230 --> 01:07:44.240 align:start position:0%
you're worried about this kind of stuff
 

01:07:44.240 --> 01:07:45.109 align:start position:0%
you're worried about this kind of stuff
the

01:07:45.109 --> 01:07:45.119 align:start position:0%
the
 

01:07:45.119 --> 01:07:48.150 align:start position:0%
the
copy<01:07:46.079><c> implied</c><01:07:46.400><c> by</c><01:07:46.559><c> the</c><01:07:46.720><c> fork</c>

01:07:48.150 --> 01:07:48.160 align:start position:0%
copy implied by the fork
 

01:07:48.160 --> 01:07:50.309 align:start position:0%
copy implied by the fork
is<01:07:48.720><c> in</c><01:07:48.880><c> some</c><01:07:49.119><c> sense</c><01:07:49.359><c> mostly</c><01:07:49.680><c> wasted</c><01:07:50.079><c> because</c>

01:07:50.309 --> 01:07:50.319 align:start position:0%
is in some sense mostly wasted because
 

01:07:50.319 --> 01:07:52.150 align:start position:0%
is in some sense mostly wasted because
all<01:07:50.400><c> that</c><01:07:50.640><c> copied</c><01:07:51.039><c> memory</c><01:07:51.440><c> is</c><01:07:51.599><c> just</c><01:07:51.839><c> thrown</c>

01:07:52.150 --> 01:07:52.160 align:start position:0%
all that copied memory is just thrown
 

01:07:52.160 --> 01:07:53.510 align:start position:0%
all that copied memory is just thrown
away<01:07:52.400><c> and</c><01:07:52.480><c> replaced</c><01:07:53.039><c> by</c><01:07:53.200><c> the</c>

01:07:53.510 --> 01:07:53.520 align:start position:0%
away and replaced by the
 

01:07:53.520 --> 01:07:56.390 align:start position:0%
away and replaced by the
exact<01:07:54.400><c> um</c><01:07:55.200><c> and</c><01:07:55.440><c> this</c><01:07:55.680><c> effects</c><01:07:56.000><c> actually</c><01:07:56.240><c> would</c>

01:07:56.390 --> 01:07:56.400 align:start position:0%
exact um and this effects actually would
 

01:07:56.400 --> 01:07:58.069 align:start position:0%
exact um and this effects actually would
be<01:07:56.559><c> significant</c><01:07:57.119><c> for</c><01:07:57.280><c> big</c><01:07:57.440><c> programs</c><01:07:57.839><c> if</c><01:07:58.000><c> you</c>

01:07:58.069 --> 01:07:58.079 align:start position:0%
be significant for big programs if you
 

01:07:58.079 --> 01:08:00.150 align:start position:0%
be significant for big programs if you
have<01:07:58.160><c> a</c><01:07:58.319><c> multi-gigabyte</c><01:07:59.280><c> program</c><01:07:59.680><c> that</c><01:07:59.839><c> calls</c>

01:08:00.150 --> 01:08:00.160 align:start position:0%
have a multi-gigabyte program that calls
 

01:08:00.160 --> 01:08:01.029 align:start position:0%
have a multi-gigabyte program that calls
fork

01:08:01.029 --> 01:08:01.039 align:start position:0%
fork
 

01:08:01.039 --> 01:08:03.190 align:start position:0%
fork
uh<01:08:01.359><c> and</c><01:08:01.599><c> it</c><01:08:01.839><c> did</c><01:08:02.079><c> indeed</c><01:08:02.400><c> copy</c><01:08:02.720><c> all</c><01:08:02.799><c> the</c><01:08:02.880><c> memory</c>

01:08:03.190 --> 01:08:03.200 align:start position:0%
uh and it did indeed copy all the memory
 

01:08:03.200 --> 01:08:04.870 align:start position:0%
uh and it did indeed copy all the memory
would<01:08:03.359><c> actually</c><01:08:03.760><c> uh</c><01:08:04.000><c> take</c><01:08:04.240><c> a</c><01:08:04.319><c> fair</c><01:08:04.559><c> fraction</c>

01:08:04.870 --> 01:08:04.880 align:start position:0%
would actually uh take a fair fraction
 

01:08:04.880 --> 01:08:05.589 align:start position:0%
would actually uh take a fair fraction
of<01:08:05.039><c> a</c><01:08:05.119><c> second</c>

01:08:05.589 --> 01:08:05.599 align:start position:0%
of a second
 

01:08:05.599 --> 01:08:08.829 align:start position:0%
of a second
perhaps<01:08:06.400><c> to</c><01:08:06.480><c> do</c><01:08:06.640><c> the</c><01:08:06.799><c> copy</c><01:08:08.160><c> which</c><01:08:08.400><c> could</c><01:08:08.559><c> be</c><01:08:08.720><c> a</c>

01:08:08.829 --> 01:08:08.839 align:start position:0%
perhaps to do the copy which could be a
 

01:08:08.839 --> 01:08:10.069 align:start position:0%
perhaps to do the copy which could be a
problem

01:08:10.069 --> 01:08:10.079 align:start position:0%
problem
 

01:08:10.079 --> 01:08:13.190 align:start position:0%
problem
um

01:08:13.190 --> 01:08:13.200 align:start position:0%
 
 

01:08:13.200 --> 01:08:15.829 align:start position:0%
 
but<01:08:13.839><c> later</c><01:08:14.079><c> in</c><01:08:14.240><c> the</c><01:08:14.319><c> course</c><01:08:14.640><c> you'll</c><01:08:14.880><c> actually</c>

01:08:15.829 --> 01:08:15.839 align:start position:0%
but later in the course you'll actually
 

01:08:15.839 --> 01:08:17.349 align:start position:0%
but later in the course you'll actually
implement<01:08:16.319><c> some</c><01:08:16.560><c> optimizations</c><01:08:17.279><c> in</c>

01:08:17.349 --> 01:08:17.359 align:start position:0%
implement some optimizations in
 

01:08:17.359 --> 01:08:18.309 align:start position:0%
implement some optimizations in
particular<01:08:17.759><c> something</c><01:08:18.000><c> called</c>

01:08:18.309 --> 01:08:18.319 align:start position:0%
particular something called
 

01:08:18.319 --> 01:08:21.590 align:start position:0%
particular something called
copy<01:08:18.719><c> on</c><01:08:18.880><c> right</c><01:08:19.279><c> fork</c><01:08:20.080><c> which</c><01:08:20.319><c> will</c><01:08:20.960><c> eliminate</c>

01:08:21.590 --> 01:08:21.600 align:start position:0%
copy on right fork which will eliminate
 

01:08:21.600 --> 01:08:22.070 align:start position:0%
copy on right fork which will eliminate
almost

01:08:22.070 --> 01:08:22.080 align:start position:0%
almost
 

01:08:22.080 --> 01:08:25.910 align:start position:0%
almost
all<01:08:22.640><c> of</c><01:08:22.799><c> the</c><01:08:22.960><c> apparent</c><01:08:24.480><c> inefficiency</c><01:08:25.279><c> of</c><01:08:25.520><c> fork</c>

01:08:25.910 --> 01:08:25.920 align:start position:0%
all of the apparent inefficiency of fork
 

01:08:25.920 --> 01:08:28.149 align:start position:0%
all of the apparent inefficiency of fork
copying<01:08:26.480><c> only</c><01:08:26.799><c> to</c><01:08:26.880><c> have</c><01:08:27.359><c> exact</c><01:08:27.759><c> throw</c><01:08:28.000><c> away</c>

01:08:28.149 --> 01:08:28.159 align:start position:0%
copying only to have exact throw away
 

01:08:28.159 --> 01:08:29.030 align:start position:0%
copying only to have exact throw away
the<01:08:28.319><c> copy</c>

01:08:29.030 --> 01:08:29.040 align:start position:0%
the copy
 

01:08:29.040 --> 01:08:30.550 align:start position:0%
the copy
it<01:08:29.199><c> turns</c><01:08:29.440><c> out</c><01:08:29.520><c> with</c><01:08:29.679><c> a</c><01:08:29.759><c> bunch</c><01:08:30.000><c> of</c><01:08:30.080><c> tricks</c>

01:08:30.550 --> 01:08:30.560 align:start position:0%
it turns out with a bunch of tricks
 

01:08:30.560 --> 01:08:33.829 align:start position:0%
it turns out with a bunch of tricks
involving<01:08:31.040><c> a</c><01:08:31.199><c> virtual</c><01:08:31.520><c> memory</c><01:08:31.839><c> system</c>

01:08:33.829 --> 01:08:33.839 align:start position:0%
involving a virtual memory system
 

01:08:33.839 --> 01:08:35.829 align:start position:0%
involving a virtual memory system
you<01:08:34.000><c> can</c><01:08:34.239><c> build</c><01:08:34.480><c> a</c><01:08:34.640><c> fork</c><01:08:34.960><c> that's</c><01:08:35.279><c> lazy</c><01:08:35.679><c> about</c>

01:08:35.829 --> 01:08:35.839 align:start position:0%
you can build a fork that's lazy about
 

01:08:35.839 --> 01:08:38.709 align:start position:0%
you can build a fork that's lazy about
the<01:08:36.000><c> copy</c><01:08:36.719><c> and</c><01:08:36.880><c> that</c><01:08:37.040><c> doesn't</c><01:08:37.279><c> do</c><01:08:37.920><c> in</c><01:08:38.080><c> the</c>

01:08:38.709 --> 01:08:38.719 align:start position:0%
the copy and that doesn't do in the
 

01:08:38.719 --> 01:08:40.309 align:start position:0%
the copy and that doesn't do in the
common<01:08:39.120><c> case</c><01:08:39.359><c> of</c><01:08:39.440><c> fork</c><01:08:39.679><c> immediately</c><01:08:40.080><c> followed</c>

01:08:40.309 --> 01:08:40.319 align:start position:0%
common case of fork immediately followed
 

01:08:40.319 --> 01:08:42.390 align:start position:0%
common case of fork immediately followed
by<01:08:40.480><c> exact</c><01:08:41.279><c> um</c><01:08:41.520><c> where</c><01:08:41.839><c> you</c><01:08:41.920><c> don't</c><01:08:42.159><c> actually</c>

01:08:42.390 --> 01:08:42.400 align:start position:0%
by exact um where you don't actually
 

01:08:42.400 --> 01:08:43.910 align:start position:0%
by exact um where you don't actually
have<01:08:42.560><c> to</c><01:08:42.640><c> do</c><01:08:42.799><c> the</c><01:08:42.880><c> copy</c><01:08:43.279><c> because</c><01:08:43.440><c> the</c><01:08:43.600><c> child</c>

01:08:43.910 --> 01:08:43.920 align:start position:0%
have to do the copy because the child
 

01:08:43.920 --> 01:08:46.870 align:start position:0%
have to do the copy because the child
doesn't<01:08:44.239><c> actually</c><01:08:44.560><c> use</c><01:08:44.880><c> most</c><01:08:45.120><c> of</c><01:08:45.279><c> the</c><01:08:45.359><c> memory</c>

01:08:46.870 --> 01:08:46.880 align:start position:0%
doesn't actually use most of the memory
 

01:08:46.880 --> 01:08:49.590 align:start position:0%
doesn't actually use most of the memory
um<01:08:48.000><c> i</c><01:08:48.159><c> think</c><01:08:48.319><c> you'll</c><01:08:48.400><c> find</c><01:08:48.560><c> that's</c><01:08:48.799><c> a</c><01:08:49.199><c> fun</c><01:08:49.440><c> and</c>

01:08:49.590 --> 01:08:49.600 align:start position:0%
um i think you'll find that's a fun and
 

01:08:49.600 --> 01:08:50.950 align:start position:0%
um i think you'll find that's a fun and
interesting<01:08:50.000><c> lab</c>

01:08:50.950 --> 01:08:50.960 align:start position:0%
interesting lab
 

01:08:50.960 --> 01:08:53.669 align:start position:0%
interesting lab
question<01:08:51.359><c> from</c><01:08:51.759><c> chat</c><01:08:52.799><c> why</c><01:08:52.960><c> does</c><01:08:53.120><c> the</c><01:08:53.279><c> parent</c>

01:08:53.669 --> 01:08:53.679 align:start position:0%
question from chat why does the parent
 

01:08:53.679 --> 01:08:56.070 align:start position:0%
question from chat why does the parent
process<01:08:54.159><c> print</c><01:08:54.560><c> parent</c><01:08:54.880><c> waiting</c><01:08:55.359><c> completely</c>

01:08:56.070 --> 01:08:56.080 align:start position:0%
process print parent waiting completely
 

01:08:56.080 --> 01:09:00.630 align:start position:0%
process print parent waiting completely
before<01:08:56.400><c> the</c><01:08:56.560><c> child</c><01:08:56.960><c> calls</c><01:08:57.279><c> exec</c>

01:09:00.630 --> 01:09:00.640 align:start position:0%
 
 

01:09:00.640 --> 01:09:04.870 align:start position:0%
 
it's<01:09:01.040><c> just</c><01:09:01.839><c> chance</c>

01:09:04.870 --> 01:09:04.880 align:start position:0%
 
 

01:09:04.880 --> 01:09:08.390 align:start position:0%
 
the<01:09:06.880><c> is</c><01:09:07.440><c> it</c><01:09:07.520><c> that</c><01:09:07.759><c> you</c><01:09:07.839><c> know</c><01:09:08.000><c> the</c>

01:09:08.390 --> 01:09:08.400 align:start position:0%
the is it that you know the
 

01:09:08.400 --> 01:09:13.110 align:start position:0%
the is it that you know the
the<01:09:08.640><c> observation</c><01:09:09.279><c> is</c><01:09:09.440><c> that</c><01:09:09.920><c> um</c><01:09:11.040><c> you</c><01:09:11.199><c> know</c>

01:09:13.110 --> 01:09:13.120 align:start position:0%
the observation is that um you know
 

01:09:13.120 --> 01:09:15.189 align:start position:0%
the observation is that um you know
uh<01:09:13.440><c> it</c><01:09:13.600><c> could</c><01:09:13.839><c> be</c><01:09:14.000><c> that</c><01:09:14.159><c> the</c><01:09:14.319><c> parent's</c><01:09:14.719><c> output</c>

01:09:15.189 --> 01:09:15.199 align:start position:0%
uh it could be that the parent's output
 

01:09:15.199 --> 01:09:17.110 align:start position:0%
uh it could be that the parent's output
could<01:09:15.359><c> be</c><01:09:15.520><c> interleaved</c><01:09:16.159><c> with</c><01:09:16.239><c> the</c><01:09:16.400><c> child's</c>

01:09:17.110 --> 01:09:17.120 align:start position:0%
could be interleaved with the child's
 

01:09:17.120 --> 01:09:18.470 align:start position:0%
could be interleaved with the child's
output<01:09:17.440><c> in</c><01:09:17.520><c> the</c><01:09:17.600><c> same</c><01:09:17.839><c> area</c><01:09:18.080><c> that</c><01:09:18.159><c> we</c><01:09:18.239><c> saw</c>

01:09:18.470 --> 01:09:18.480 align:start position:0%
output in the same area that we saw
 

01:09:18.480 --> 01:09:21.990 align:start position:0%
output in the same area that we saw
before<01:09:18.960><c> with</c><01:09:19.199><c> the</c><01:09:19.759><c> simpler</c><01:09:20.159><c> fork</c><01:09:20.480><c> example</c>

01:09:21.990 --> 01:09:22.000 align:start position:0%
before with the simpler fork example
 

01:09:22.000 --> 01:09:23.910 align:start position:0%
before with the simpler fork example
it<01:09:22.080><c> just</c><01:09:22.319><c> happens</c><01:09:22.719><c> not</c><01:09:22.960><c> to</c><01:09:23.040><c> be</c><01:09:23.520><c> there's</c><01:09:23.679><c> no</c>

01:09:23.910 --> 01:09:23.920 align:start position:0%
it just happens not to be there's no
 

01:09:23.920 --> 01:09:25.749 align:start position:0%
it just happens not to be there's no
guarantee<01:09:24.719><c> that</c><01:09:24.880><c> this</c><01:09:25.120><c> is</c><01:09:25.199><c> the</c><01:09:25.279><c> output</c><01:09:25.600><c> we</c>

01:09:25.749 --> 01:09:25.759 align:start position:0%
guarantee that this is the output we
 

01:09:25.759 --> 01:09:26.870 align:start position:0%
guarantee that this is the output we
would<01:09:25.920><c> see</c>

01:09:26.870 --> 01:09:26.880 align:start position:0%
would see
 

01:09:26.880 --> 01:09:29.430 align:start position:0%
would see
in<01:09:26.960><c> fact</c><01:09:28.239><c> we</c><01:09:28.400><c> shouldn't</c><01:09:28.640><c> be</c><01:09:28.799><c> surprised</c><01:09:29.279><c> if</c><01:09:29.359><c> we</c>

01:09:29.430 --> 01:09:29.440 align:start position:0%
in fact we shouldn't be surprised if we
 

01:09:29.440 --> 01:09:30.870 align:start position:0%
in fact we shouldn't be surprised if we
saw<01:09:29.679><c> the</c><01:09:29.759><c> lines</c><01:09:30.000><c> of</c><01:09:30.080><c> the</c><01:09:30.239><c> output</c><01:09:30.560><c> in</c><01:09:30.640><c> the</c><01:09:30.719><c> other</c>

01:09:30.870 --> 01:09:30.880 align:start position:0%
saw the lines of the output in the other
 

01:09:30.880 --> 01:09:31.990 align:start position:0%
saw the lines of the output in the other
order

01:09:31.990 --> 01:09:32.000 align:start position:0%
order
 

01:09:32.000 --> 01:09:35.749 align:start position:0%
order
or<01:09:32.239><c> interleaved</c><01:09:33.759><c> i</c><01:09:33.920><c> suspect</c><01:09:34.560><c> what's</c><01:09:34.799><c> going</c><01:09:35.120><c> on</c>

01:09:35.749 --> 01:09:35.759 align:start position:0%
or interleaved i suspect what's going on
 

01:09:35.759 --> 01:09:38.390 align:start position:0%
or interleaved i suspect what's going on
is<01:09:35.920><c> that</c><01:09:36.719><c> it</c><01:09:36.960><c> takes</c><01:09:37.199><c> a</c><01:09:37.600><c> bit</c><01:09:37.759><c> of</c><01:09:37.920><c> time</c><01:09:38.239><c> and</c>

01:09:38.390 --> 01:09:38.400 align:start position:0%
is that it takes a bit of time and
 

01:09:38.400 --> 01:09:39.590 align:start position:0%
is that it takes a bit of time and
effort

01:09:39.590 --> 01:09:39.600 align:start position:0%
effort
 

01:09:39.600 --> 01:09:41.189 align:start position:0%
effort
now<01:09:39.920><c> the</c><01:09:40.080><c> exact</c><01:09:40.319><c> system</c><01:09:40.640><c> calls</c><01:09:40.880><c> a</c><01:09:40.880><c> little</c><01:09:41.040><c> bit</c>

01:09:41.189 --> 01:09:41.199 align:start position:0%
now the exact system calls a little bit
 

01:09:41.199 --> 01:09:42.630 align:start position:0%
now the exact system calls a little bit
expensive<01:09:41.679><c> because</c><01:09:41.920><c> it</c><01:09:42.000><c> has</c><01:09:42.159><c> to</c>

01:09:42.630 --> 01:09:42.640 align:start position:0%
expensive because it has to
 

01:09:42.640 --> 01:09:45.110 align:start position:0%
expensive because it has to
load<01:09:43.120><c> all</c><01:09:43.279><c> those</c><01:09:43.520><c> instructions</c><01:09:44.159><c> to</c><01:09:44.719><c> access</c>

01:09:45.110 --> 01:09:45.120 align:start position:0%
load all those instructions to access
 

01:09:45.120 --> 01:09:46.870 align:start position:0%
load all those instructions to access
the<01:09:45.199><c> file</c><01:09:45.440><c> system</c><01:09:45.839><c> and</c><01:09:46.000><c> access</c><01:09:46.239><c> the</c><01:09:46.400><c> disk</c><01:09:46.719><c> and</c>

01:09:46.870 --> 01:09:46.880 align:start position:0%
the file system and access the disk and
 

01:09:46.880 --> 01:09:49.030 align:start position:0%
the file system and access the disk and
read<01:09:47.120><c> the</c><01:09:47.279><c> contents</c><01:09:47.759><c> of</c><01:09:47.920><c> a</c><01:09:48.000><c> file</c><01:09:48.319><c> called</c><01:09:48.560><c> echo</c>

01:09:49.030 --> 01:09:49.040 align:start position:0%
read the contents of a file called echo
 

01:09:49.040 --> 01:09:51.910 align:start position:0%
read the contents of a file called echo
off<01:09:49.199><c> the</c><01:09:49.359><c> disk</c><01:09:49.839><c> into</c><01:09:50.080><c> memory</c><01:09:51.679><c> after</c>

01:09:51.910 --> 01:09:51.920 align:start position:0%
off the disk into memory after
 

01:09:51.920 --> 01:09:53.749 align:start position:0%
off the disk into memory after
allocating<01:09:52.480><c> some</c><01:09:52.640><c> memory</c><01:09:53.120><c> and</c><01:09:53.279><c> that</c><01:09:53.520><c> even</c>

01:09:53.749 --> 01:09:53.759 align:start position:0%
allocating some memory and that even
 

01:09:53.759 --> 01:09:55.430 align:start position:0%
allocating some memory and that even
after<01:09:54.000><c> freeing</c><01:09:54.400><c> some</c><01:09:54.640><c> memory</c><01:09:54.960><c> from</c><01:09:55.120><c> the</c><01:09:55.199><c> old</c>

01:09:55.430 --> 01:09:55.440 align:start position:0%
after freeing some memory from the old
 

01:09:55.440 --> 01:09:56.550 align:start position:0%
after freeing some memory from the old
process<01:09:55.760><c> so</c>

01:09:56.550 --> 01:09:56.560 align:start position:0%
process so
 

01:09:56.560 --> 01:09:57.750 align:start position:0%
process so
there's<01:09:56.800><c> quite</c><01:09:56.960><c> a</c><01:09:57.040><c> bit</c><01:09:57.120><c> of</c><01:09:57.199><c> machinery</c>

01:09:57.750 --> 01:09:57.760 align:start position:0%
there's quite a bit of machinery
 

01:09:57.760 --> 01:10:00.790 align:start position:0%
there's quite a bit of machinery
involved<01:09:58.159><c> in</c><01:09:58.239><c> the</c><01:09:58.320><c> exact</c><01:09:58.719><c> system</c><01:09:59.040><c> call</c>

01:10:00.790 --> 01:10:00.800 align:start position:0%
involved in the exact system call
 

01:10:00.800 --> 01:10:03.270 align:start position:0%
involved in the exact system call
and<01:10:01.120><c> apparently</c><01:10:02.320><c> that</c><01:10:02.480><c> takes</c><01:10:02.800><c> long</c><01:10:02.960><c> enough</c>

01:10:03.270 --> 01:10:03.280 align:start position:0%
and apparently that takes long enough
 

01:10:03.280 --> 01:10:05.110 align:start position:0%
and apparently that takes long enough
that<01:10:03.440><c> the</c><01:10:03.520><c> parent</c><01:10:03.840><c> can</c><01:10:04.159><c> complete</c>

01:10:05.110 --> 01:10:05.120 align:start position:0%
that the parent can complete
 

01:10:05.120 --> 01:10:07.830 align:start position:0%
that the parent can complete
producing<01:10:05.520><c> the</c><01:10:05.679><c> output</c><01:10:06.560><c> before</c><01:10:07.120><c> the</c><01:10:07.360><c> exec</c><01:10:07.679><c> has</c>

01:10:07.830 --> 01:10:07.840 align:start position:0%
producing the output before the exec has
 

01:10:07.840 --> 01:10:10.310 align:start position:0%
producing the output before the exec has
finished<01:10:08.239><c> and</c><01:10:08.400><c> started</c><01:10:08.719><c> running</c><01:10:09.040><c> echo</c>

01:10:10.310 --> 01:10:10.320 align:start position:0%
finished and started running echo
 

01:10:10.320 --> 01:10:15.110 align:start position:0%
finished and started running echo
does<01:10:10.480><c> that</c><01:10:10.560><c> make</c><01:10:10.800><c> sense</c>

01:10:15.110 --> 01:10:15.120 align:start position:0%
 
 

01:10:15.120 --> 01:10:17.030 align:start position:0%
 
i<01:10:15.199><c> have</c><01:10:15.360><c> another</c><01:10:15.679><c> question</c><01:10:16.239><c> is</c><01:10:16.400><c> it</c><01:10:16.560><c> convention</c>

01:10:17.030 --> 01:10:17.040 align:start position:0%
i have another question is it convention
 

01:10:17.040 --> 01:10:21.590 align:start position:0%
i have another question is it convention
that<01:10:17.199><c> the</c><01:10:17.360><c> child</c><01:10:17.760><c> can't</c><01:10:18.080><c> wait</c><01:10:18.400><c> for</c><01:10:18.560><c> the</c><01:10:18.719><c> parent</c>

01:10:21.590 --> 01:10:21.600 align:start position:0%
 
 

01:10:21.600 --> 01:10:25.430 align:start position:0%
 
there's<01:10:21.920><c> not</c><01:10:22.239><c> a</c><01:10:23.440><c> way</c><01:10:24.320><c> unix</c><01:10:24.719><c> doesn't</c><01:10:25.120><c> have</c><01:10:25.360><c> a</c>

01:10:25.430 --> 01:10:25.440 align:start position:0%
there's not a way unix doesn't have a
 

01:10:25.440 --> 01:10:28.310 align:start position:0%
there's not a way unix doesn't have a
way<01:10:25.679><c> for</c><01:10:25.920><c> the</c><01:10:26.080><c> child</c>

01:10:28.310 --> 01:10:28.320 align:start position:0%
way for the child
 

01:10:28.320 --> 01:10:29.669 align:start position:0%
way for the child
there's<01:10:28.480><c> no</c><01:10:28.640><c> straightforward</c><01:10:29.280><c> way</c><01:10:29.440><c> for</c><01:10:29.600><c> the</c>

01:10:29.669 --> 01:10:29.679 align:start position:0%
there's no straightforward way for the
 

01:10:29.679 --> 01:10:31.830 align:start position:0%
there's no straightforward way for the
child<01:10:29.920><c> to</c><01:10:30.080><c> wait</c><01:10:30.239><c> for</c><01:10:30.400><c> the</c><01:10:30.560><c> parent</c>

01:10:31.830 --> 01:10:31.840 align:start position:0%
child to wait for the parent
 

01:10:31.840 --> 01:10:35.590 align:start position:0%
child to wait for the parent
the<01:10:32.080><c> weight</c><01:10:32.480><c> system</c><01:10:32.880><c> call</c><01:10:34.560><c> is</c><01:10:35.040><c> sort</c><01:10:35.199><c> of</c>

01:10:35.590 --> 01:10:35.600 align:start position:0%
the weight system call is sort of
 

01:10:35.600 --> 01:10:37.830 align:start position:0%
the weight system call is sort of
the<01:10:35.760><c> only</c><01:10:36.000><c> mechanism</c><01:10:36.480><c> available</c><01:10:37.040><c> well</c><01:10:37.679><c> the</c>

01:10:37.830 --> 01:10:37.840 align:start position:0%
the only mechanism available well the
 

01:10:37.840 --> 01:10:39.350 align:start position:0%
the only mechanism available well the
weight<01:10:38.080><c> system</c><01:10:38.480><c> call</c>

01:10:39.350 --> 01:10:39.360 align:start position:0%
weight system call
 

01:10:39.360 --> 01:10:43.510 align:start position:0%
weight system call
waits<01:10:40.080><c> for</c><01:10:40.239><c> your</c><01:10:40.560><c> children</c><01:10:41.760><c> and</c><01:10:41.920><c> that's</c><01:10:42.159><c> it</c>

01:10:43.510 --> 01:10:43.520 align:start position:0%
waits for your children and that's it
 

01:10:43.520 --> 01:10:45.270 align:start position:0%
waits for your children and that's it
and<01:10:43.679><c> so</c><01:10:43.840><c> what</c><01:10:44.000><c> weight</c><01:10:44.239><c> is</c><01:10:44.480><c> what</c><01:10:44.640><c> weight</c><01:10:44.960><c> does</c>

01:10:45.270 --> 01:10:45.280 align:start position:0%
and so what weight is what weight does
 

01:10:45.280 --> 01:10:47.110 align:start position:0%
and so what weight is what weight does
is<01:10:46.320><c> um</c>

01:10:47.110 --> 01:10:47.120 align:start position:0%
is um
 

01:10:47.120 --> 01:10:49.590 align:start position:0%
is um
if<01:10:47.280><c> you</c><01:10:47.520><c> have</c><01:10:47.760><c> any</c><01:10:48.000><c> children</c><01:10:49.040><c> and</c><01:10:49.199><c> one</c><01:10:49.360><c> of</c><01:10:49.440><c> them</c>

01:10:49.590 --> 01:10:49.600 align:start position:0%
if you have any children and one of them
 

01:10:49.600 --> 01:10:51.110 align:start position:0%
if you have any children and one of them
has<01:10:49.760><c> already</c><01:10:50.080><c> exited</c>

01:10:51.110 --> 01:10:51.120 align:start position:0%
has already exited
 

01:10:51.120 --> 01:10:54.229 align:start position:0%
has already exited
or<01:10:51.360><c> does</c><01:10:51.600><c> exit</c><01:10:52.640><c> then</c><01:10:52.880><c> weight</c><01:10:53.120><c> will</c><01:10:53.280><c> return</c>

01:10:54.229 --> 01:10:54.239 align:start position:0%
or does exit then weight will return
 

01:10:54.239 --> 01:10:55.270 align:start position:0%
or does exit then weight will return
but<01:10:54.400><c> you</c><01:10:54.560><c> know</c><01:10:54.640><c> if</c><01:10:54.719><c> you</c><01:10:54.880><c> don't</c><01:10:54.960><c> have</c><01:10:55.120><c> any</c>

01:10:55.270 --> 01:10:55.280 align:start position:0%
but you know if you don't have any
 

01:10:55.280 --> 01:10:57.430 align:start position:0%
but you know if you don't have any
children<01:10:55.760><c> say</c><01:10:56.000><c> because</c><01:10:56.239><c> you</c><01:10:56.480><c> are</c>

01:10:57.430 --> 01:10:57.440 align:start position:0%
children say because you are
 

01:10:57.440 --> 01:11:00.709 align:start position:0%
children say because you are
because<01:10:59.199><c> in</c><01:10:59.360><c> this</c><01:10:59.520><c> simple</c><01:10:59.840><c> case</c>

01:11:00.709 --> 01:11:00.719 align:start position:0%
because in this simple case
 

01:11:00.719 --> 01:11:03.110 align:start position:0%
because in this simple case
um<01:11:02.000><c> whether</c><01:11:02.239><c> it</c><01:11:02.239><c> was</c><01:11:02.320><c> just</c><01:11:02.480><c> a</c><01:11:02.560><c> parent</c><01:11:02.880><c> and</c><01:11:02.960><c> a</c>

01:11:03.110 --> 01:11:03.120 align:start position:0%
um whether it was just a parent and a
 

01:11:03.120 --> 01:11:03.830 align:start position:0%
um whether it was just a parent and a
child

01:11:03.830 --> 01:11:03.840 align:start position:0%
child
 

01:11:03.840 --> 01:11:07.110 align:start position:0%
child
if<01:11:04.000><c> the</c><01:11:04.159><c> child</c><01:11:04.480><c> called</c><01:11:04.800><c> weight</c><01:11:06.800><c> the</c><01:11:06.960><c> child</c>

01:11:07.110 --> 01:11:07.120 align:start position:0%
if the child called weight the child
 

01:11:07.120 --> 01:11:08.470 align:start position:0%
if the child called weight the child
doesn't<01:11:07.360><c> have</c><01:11:07.520><c> any</c><01:11:07.679><c> children</c>

01:11:08.470 --> 01:11:08.480 align:start position:0%
doesn't have any children
 

01:11:08.480 --> 01:11:09.910 align:start position:0%
doesn't have any children
and<01:11:08.640><c> in</c><01:11:08.719><c> that</c><01:11:08.880><c> case</c><01:11:09.120><c> weight</c><01:11:09.360><c> just</c><01:11:09.520><c> returns</c>

01:11:09.910 --> 01:11:09.920 align:start position:0%
and in that case weight just returns
 

01:11:09.920 --> 01:11:11.750 align:start position:0%
and in that case weight just returns
immediately<01:11:10.400><c> with</c><01:11:10.560><c> a</c><01:11:10.719><c> minus</c><01:11:11.120><c> one</c>

01:11:11.750 --> 01:11:11.760 align:start position:0%
immediately with a minus one
 

01:11:11.760 --> 01:11:13.830 align:start position:0%
immediately with a minus one
error<01:11:12.080><c> return</c><01:11:12.480><c> saying</c><01:11:13.040><c> this</c><01:11:13.280><c> process</c><01:11:13.600><c> doesn't</c>

01:11:13.830 --> 01:11:13.840 align:start position:0%
error return saying this process doesn't
 

01:11:13.840 --> 01:11:15.350 align:start position:0%
error return saying this process doesn't
have<01:11:13.920><c> any</c><01:11:14.080><c> children</c>

01:11:15.350 --> 01:11:15.360 align:start position:0%
have any children
 

01:11:15.360 --> 01:11:17.189 align:start position:0%
have any children
anyway<01:11:15.679><c> the</c><01:11:16.239><c> short</c><01:11:16.480><c> answer</c><01:11:16.719><c> is</c><01:11:16.880><c> there's</c><01:11:17.040><c> no</c>

01:11:17.189 --> 01:11:17.199 align:start position:0%
anyway the short answer is there's no
 

01:11:17.199 --> 01:11:18.550 align:start position:0%
anyway the short answer is there's no
way<01:11:17.360><c> for</c><01:11:17.520><c> a</c><01:11:17.679><c> child</c>

01:11:18.550 --> 01:11:18.560 align:start position:0%
way for a child
 

01:11:18.560 --> 01:11:21.990 align:start position:0%
way for a child
to<01:11:18.719><c> wait</c><01:11:18.960><c> for</c><01:11:19.120><c> its</c><01:11:19.280><c> parent</c><01:11:19.679><c> to</c><01:11:19.760><c> exit</c>

01:11:21.990 --> 01:11:22.000 align:start position:0%
to wait for its parent to exit
 

01:11:22.000 --> 01:11:23.830 align:start position:0%
to wait for its parent to exit
another<01:11:22.320><c> question</c><01:11:22.719><c> when</c><01:11:22.880><c> we</c><01:11:23.040><c> say</c><01:11:23.280><c> the</c><01:11:23.440><c> child</c>

01:11:23.830 --> 01:11:23.840 align:start position:0%
another question when we say the child
 

01:11:23.840 --> 01:11:25.750 align:start position:0%
another question when we say the child
copies<01:11:24.480><c> all</c><01:11:24.640><c> the</c><01:11:24.800><c> memory</c>

01:11:25.750 --> 01:11:25.760 align:start position:0%
copies all the memory
 

01:11:25.760 --> 01:11:27.430 align:start position:0%
copies all the memory
from<01:11:25.920><c> the</c><01:11:26.000><c> parent</c><01:11:26.320><c> process</c><01:11:26.719><c> what</c><01:11:26.960><c> i</c><01:11:27.199><c> what</c>

01:11:27.430 --> 01:11:27.440 align:start position:0%
from the parent process what i what
 

01:11:27.440 --> 01:11:29.270 align:start position:0%
from the parent process what i what
exactly<01:11:27.840><c> do</c><01:11:28.080><c> we</c><01:11:28.239><c> refer</c><01:11:28.640><c> to</c><01:11:28.800><c> by</c><01:11:28.960><c> that</c>

01:11:29.270 --> 01:11:29.280 align:start position:0%
exactly do we refer to by that
 

01:11:29.280 --> 01:11:31.430 align:start position:0%
exactly do we refer to by that
i<01:11:29.360><c> thought</c><01:11:29.520><c> the</c><01:11:29.760><c> child</c><01:11:30.400><c> is</c><01:11:30.560><c> going</c><01:11:30.719><c> to</c><01:11:30.800><c> divide</c>

01:11:31.430 --> 01:11:31.440 align:start position:0%
i thought the child is going to divide
 

01:11:31.440 --> 01:11:37.510 align:start position:0%
i thought the child is going to divide
define<01:11:31.840><c> the</c><01:11:32.000><c> variables</c><01:11:32.560><c> again</c>

01:11:37.510 --> 01:11:37.520 align:start position:0%
 
 

01:11:37.520 --> 01:11:40.950 align:start position:0%
 
um<01:11:38.960><c> well</c><01:11:39.120><c> when</c><01:11:39.360><c> you</c><01:11:39.440><c> compile</c><01:11:39.840><c> us</c><01:11:40.239><c> you</c><01:11:40.320><c> know</c>

01:11:40.950 --> 01:11:40.960 align:start position:0%
um well when you compile us you know
 

01:11:40.960 --> 01:11:45.430 align:start position:0%
um well when you compile us you know
um

01:11:45.430 --> 01:11:45.440 align:start position:0%
 
 

01:11:45.440 --> 01:11:49.110 align:start position:0%
 
after<01:11:45.760><c> compilation</c><01:11:47.120><c> your</c><01:11:47.360><c> c</c><01:11:47.600><c> program</c>

01:11:49.110 --> 01:11:49.120 align:start position:0%
after compilation your c program
 

01:11:49.120 --> 01:11:50.390 align:start position:0%
after compilation your c program
is<01:11:49.280><c> just</c><01:11:49.440><c> a</c><01:11:49.520><c> bunch</c><01:11:49.679><c> of</c><01:11:49.840><c> instructions</c><01:11:50.320><c> in</c>

01:11:50.390 --> 01:11:50.400 align:start position:0%
is just a bunch of instructions in
 

01:11:50.400 --> 01:11:53.430 align:start position:0%
is just a bunch of instructions in
memory<01:11:51.360><c> that</c><01:11:51.520><c> live</c><01:11:51.760><c> in</c><01:11:51.840><c> ram</c>

01:11:53.430 --> 01:11:53.440 align:start position:0%
memory that live in ram
 

01:11:53.440 --> 01:11:57.270 align:start position:0%
memory that live in ram
um<01:11:55.040><c> and</c><01:11:55.280><c> so</c><01:11:55.440><c> those</c><01:11:55.679><c> can</c><01:11:55.840><c> be</c><01:11:56.080><c> copied</c>

01:11:57.270 --> 01:11:57.280 align:start position:0%
um and so those can be copied
 

01:11:57.280 --> 01:11:59.110 align:start position:0%
um and so those can be copied
because<01:11:57.440><c> they're</c><01:11:57.600><c> just</c><01:11:57.840><c> bytes</c><01:11:58.159><c> living</c><01:11:58.480><c> in</c><01:11:58.560><c> ram</c>

01:11:59.110 --> 01:11:59.120 align:start position:0%
because they're just bytes living in ram
 

01:11:59.120 --> 01:12:01.110 align:start position:0%
because they're just bytes living in ram
those<01:11:59.280><c> can</c><01:11:59.440><c> be</c><01:11:59.520><c> copied</c><01:11:59.920><c> somewhere</c><01:12:00.239><c> else</c>

01:12:01.110 --> 01:12:01.120 align:start position:0%
those can be copied somewhere else
 

01:12:01.120 --> 01:12:04.229 align:start position:0%
those can be copied somewhere else
um<01:12:02.239><c> and</c><01:12:02.480><c> with</c><01:12:02.960><c> appropriate</c><01:12:03.520><c> tricks</c><01:12:03.840><c> having</c><01:12:04.159><c> to</c>

01:12:04.229 --> 01:12:04.239 align:start position:0%
um and with appropriate tricks having to
 

01:12:04.239 --> 01:12:06.390 align:start position:0%
um and with appropriate tricks having to
do<01:12:04.400><c> with</c><01:12:04.560><c> setting</c><01:12:04.880><c> up</c>

01:12:06.390 --> 01:12:06.400 align:start position:0%
do with setting up
 

01:12:06.400 --> 01:12:09.669 align:start position:0%
do with setting up
a<01:12:06.560><c> sort</c><01:12:06.719><c> of</c><01:12:07.040><c> virtual</c><01:12:07.440><c> memory</c><01:12:07.840><c> mappings</c><01:12:08.880><c> um</c>

01:12:09.669 --> 01:12:09.679 align:start position:0%
a sort of virtual memory mappings um
 

01:12:09.679 --> 01:12:10.950 align:start position:0%
a sort of virtual memory mappings um
and<01:12:09.840><c> make</c><01:12:10.000><c> the</c><01:12:10.080><c> mappings</c><01:12:10.480><c> look</c><01:12:10.560><c> the</c><01:12:10.640><c> same</c><01:12:10.880><c> with</c>

01:12:10.950 --> 01:12:10.960 align:start position:0%
and make the mappings look the same with
 

01:12:10.960 --> 01:12:12.310 align:start position:0%
and make the mappings look the same with
the<01:12:11.040><c> child</c><01:12:11.280><c> as</c><01:12:11.440><c> an</c><01:12:11.520><c> apparent</c><01:12:11.920><c> you</c><01:12:12.080><c> can</c><01:12:12.159><c> just</c>

01:12:12.310 --> 01:12:12.320 align:start position:0%
the child as an apparent you can just
 

01:12:12.320 --> 01:12:14.470 align:start position:0%
the child as an apparent you can just
copy<01:12:12.719><c> the</c><01:12:12.880><c> parent's</c><01:12:13.360><c> memory</c><01:12:13.760><c> image</c><01:12:14.159><c> to</c><01:12:14.320><c> the</c>

01:12:14.470 --> 01:12:14.480 align:start position:0%
copy the parent's memory image to the
 

01:12:14.480 --> 01:12:15.030 align:start position:0%
copy the parent's memory image to the
child

01:12:15.030 --> 01:12:15.040 align:start position:0%
child
 

01:12:15.040 --> 01:12:20.470 align:start position:0%
child
and<01:12:16.320><c> execute</c><01:12:16.719><c> it</c><01:12:16.800><c> in</c><01:12:16.960><c> the</c><01:12:17.040><c> child</c>

01:12:20.470 --> 01:12:20.480 align:start position:0%
 
 

01:12:20.480 --> 01:12:21.830 align:start position:0%
 
i<01:12:20.560><c> mean</c><01:12:20.880><c> even</c><01:12:21.040><c> though</c><01:12:21.120><c> we're</c><01:12:21.280><c> looking</c><01:12:21.520><c> at</c><01:12:21.600><c> c</c>

01:12:21.830 --> 01:12:21.840 align:start position:0%
i mean even though we're looking at c
 

01:12:21.840 --> 01:12:23.110 align:start position:0%
i mean even though we're looking at c
programs<01:12:22.239><c> you</c><01:12:22.320><c> should</c><01:12:22.480><c> think</c><01:12:22.719><c> of</c><01:12:22.800><c> them</c><01:12:22.960><c> as</c>

01:12:23.110 --> 01:12:23.120 align:start position:0%
programs you should think of them as
 

01:12:23.120 --> 01:12:24.229 align:start position:0%
programs you should think of them as
just<01:12:23.280><c> a</c><01:12:23.360><c> bunch</c><01:12:23.600><c> of</c><01:12:23.760><c> us</c>

01:12:24.229 --> 01:12:24.239 align:start position:0%
just a bunch of us
 

01:12:24.239 --> 01:12:27.270 align:start position:0%
just a bunch of us
machine<01:12:24.640><c> instructions</c><01:12:26.880><c> um</c>

01:12:27.270 --> 01:12:27.280 align:start position:0%
machine instructions um
 

01:12:27.280 --> 01:12:28.630 align:start position:0%
machine instructions um
which<01:12:27.520><c> are</c><01:12:27.600><c> just</c><01:12:27.760><c> bytes</c><01:12:28.000><c> in</c><01:12:28.080><c> memory</c><01:12:28.400><c> that</c><01:12:28.560><c> can</c>

01:12:28.630 --> 01:12:28.640 align:start position:0%
which are just bytes in memory that can
 

01:12:28.640 --> 01:12:31.189 align:start position:0%
which are just bytes in memory that can
be<01:12:28.800><c> copied</c>

01:12:31.189 --> 01:12:31.199 align:start position:0%
 
 

01:12:31.199 --> 01:12:33.510 align:start position:0%
 
if<01:12:31.360><c> a</c><01:12:31.679><c> parent</c><01:12:32.000><c> has</c><01:12:32.159><c> multiple</c><01:12:32.640><c> children</c><01:12:33.280><c> would</c>

01:12:33.510 --> 01:12:33.520 align:start position:0%
if a parent has multiple children would
 

01:12:33.520 --> 01:12:35.189 align:start position:0%
if a parent has multiple children would
wait<01:12:33.760><c> just</c><01:12:34.000><c> return</c><01:12:34.400><c> as</c><01:12:34.480><c> soon</c><01:12:34.719><c> as</c><01:12:34.800><c> the</c><01:12:34.880><c> first</c>

01:12:35.189 --> 01:12:35.199 align:start position:0%
wait just return as soon as the first
 

01:12:35.199 --> 01:12:36.149 align:start position:0%
wait just return as soon as the first
child<01:12:35.520><c> finishes</c>

01:12:36.149 --> 01:12:36.159 align:start position:0%
child finishes
 

01:12:36.159 --> 01:12:37.590 align:start position:0%
child finishes
meaning<01:12:36.480><c> that</c><01:12:36.560><c> there</c><01:12:36.800><c> could</c><01:12:36.960><c> be</c><01:12:37.120><c> some</c><01:12:37.280><c> more</c>

01:12:37.590 --> 01:12:37.600 align:start position:0%
meaning that there could be some more
 

01:12:37.600 --> 01:12:38.950 align:start position:0%
meaning that there could be some more
interleaving<01:12:38.159><c> with</c><01:12:38.400><c> the</c><01:12:38.480><c> parent</c><01:12:38.800><c> and</c>

01:12:38.950 --> 01:12:38.960 align:start position:0%
interleaving with the parent and
 

01:12:38.960 --> 01:12:40.149 align:start position:0%
interleaving with the parent and
unfinished<01:12:39.440><c> children</c>

01:12:40.149 --> 01:12:40.159 align:start position:0%
unfinished children
 

01:12:40.159 --> 01:12:41.750 align:start position:0%
unfinished children
would<01:12:40.320><c> there</c><01:12:40.480><c> need</c><01:12:40.719><c> to</c><01:12:40.800><c> be</c><01:12:40.960><c> multiple</c><01:12:41.360><c> separate</c>

01:12:41.750 --> 01:12:41.760 align:start position:0%
would there need to be multiple separate
 

01:12:41.760 --> 01:12:44.470 align:start position:0%
would there need to be multiple separate
weights<01:12:42.080><c> to</c><01:12:42.239><c> ensure</c><01:12:42.640><c> all</c><01:12:42.800><c> children</c><01:12:43.280><c> finish</c>

01:12:44.470 --> 01:12:44.480 align:start position:0%
weights to ensure all children finish
 

01:12:44.480 --> 01:12:47.430 align:start position:0%
weights to ensure all children finish
yes<01:12:45.440><c> if</c><01:12:45.600><c> you</c><01:12:46.080><c> call</c><01:12:46.400><c> forth</c><01:12:46.640><c> more</c><01:12:46.800><c> than</c><01:12:46.960><c> one</c><01:12:47.199><c> if</c><01:12:47.360><c> a</c>

01:12:47.430 --> 01:12:47.440 align:start position:0%
yes if you call forth more than one if a
 

01:12:47.440 --> 01:12:48.950 align:start position:0%
yes if you call forth more than one if a
sin<01:12:47.679><c> if</c><01:12:47.840><c> a</c><01:12:48.000><c> given</c><01:12:48.400><c> process</c>

01:12:48.950 --> 01:12:48.960 align:start position:0%
sin if a given process
 

01:12:48.960 --> 01:12:52.550 align:start position:0%
sin if a given process
calls<01:12:49.280><c> for</c><01:12:49.920><c> twice</c><01:12:51.360><c> um</c>

01:12:52.550 --> 01:12:52.560 align:start position:0%
calls for twice um
 

01:12:52.560 --> 01:12:54.390 align:start position:0%
calls for twice um
then<01:12:53.360><c> and</c><01:12:53.520><c> it</c><01:12:53.600><c> wants</c><01:12:53.840><c> to</c><01:12:53.920><c> wait</c><01:12:54.080><c> for</c><01:12:54.239><c> both</c>

01:12:54.390 --> 01:12:54.400 align:start position:0%
then and it wants to wait for both
 

01:12:54.400 --> 01:12:55.990 align:start position:0%
then and it wants to wait for both
children<01:12:54.719><c> it</c><01:12:54.800><c> has</c><01:12:54.960><c> to</c><01:12:55.120><c> call</c><01:12:55.360><c> weight</c>

01:12:55.990 --> 01:12:56.000 align:start position:0%
children it has to call weight
 

01:12:56.000 --> 01:12:58.950 align:start position:0%
children it has to call weight
twice<01:12:56.640><c> and</c><01:12:56.800><c> each</c><01:12:57.040><c> call</c><01:12:57.199><c> to</c><01:12:57.360><c> wait</c><01:12:58.159><c> will</c><01:12:58.400><c> return</c>

01:12:58.950 --> 01:12:58.960 align:start position:0%
twice and each call to wait will return
 

01:12:58.960 --> 01:12:59.990 align:start position:0%
twice and each call to wait will return
as<01:12:59.120><c> soon</c><01:12:59.440><c> as</c>

01:12:59.990 --> 01:13:00.000 align:start position:0%
as soon as
 

01:13:00.000 --> 01:13:01.910 align:start position:0%
as soon as
one<01:13:00.239><c> of</c><01:13:00.400><c> the</c><01:13:00.560><c> children</c><01:13:01.040><c> exits</c><01:13:01.360><c> so</c><01:13:01.520><c> you</c><01:13:01.600><c> don't</c>

01:13:01.910 --> 01:13:01.920 align:start position:0%
one of the children exits so you don't
 

01:13:01.920 --> 01:13:02.950 align:start position:0%
one of the children exits so you don't
when<01:13:02.080><c> weight</c><01:13:02.320><c> returns</c><01:13:02.640><c> you</c><01:13:02.719><c> don't</c>

01:13:02.950 --> 01:13:02.960 align:start position:0%
when weight returns you don't
 

01:13:02.960 --> 01:13:04.709 align:start position:0%
when weight returns you don't
necessarily<01:13:03.520><c> know</c><01:13:03.840><c> which</c>

01:13:04.709 --> 01:13:04.719 align:start position:0%
necessarily know which
 

01:13:04.719 --> 01:13:07.590 align:start position:0%
necessarily know which
child<01:13:05.199><c> is</c><01:13:05.360><c> exited</c><01:13:06.080><c> the</c><01:13:06.239><c> weight</c><01:13:06.480><c> returns</c><01:13:07.120><c> the</c>

01:13:07.590 --> 01:13:07.600 align:start position:0%
child is exited the weight returns the
 

01:13:07.600 --> 01:13:09.750 align:start position:0%
child is exited the weight returns the
child's<01:13:08.000><c> process</c><01:13:08.400><c> id</c><01:13:08.800><c> as</c><01:13:09.040><c> its</c><01:13:09.120><c> return</c><01:13:09.440><c> value</c>

01:13:09.750 --> 01:13:09.760 align:start position:0%
child's process id as its return value
 

01:13:09.760 --> 01:13:11.350 align:start position:0%
child's process id as its return value
so<01:13:09.840><c> you</c><01:13:10.000><c> can</c><01:13:10.159><c> tell</c>

01:13:11.350 --> 01:13:11.360 align:start position:0%
so you can tell
 

01:13:11.360 --> 01:13:13.590 align:start position:0%
so you can tell
after<01:13:11.600><c> weight</c><01:13:11.840><c> returns</c><01:13:12.719><c> you</c><01:13:12.880><c> know</c><01:13:13.199><c> which</c><01:13:13.440><c> one</c>

01:13:13.590 --> 01:13:13.600 align:start position:0%
after weight returns you know which one
 

01:13:13.600 --> 01:13:22.470 align:start position:0%
after weight returns you know which one
it<01:13:13.679><c> was</c><01:13:13.840><c> that</c><01:13:16.840><c> exited</c>

01:13:22.470 --> 01:13:22.480 align:start position:0%
 
 

01:13:22.480 --> 01:13:25.669 align:start position:0%
 
as<01:13:22.719><c> a</c><01:13:22.880><c> final</c><01:13:23.199><c> example</c><01:13:24.000><c> um</c>

01:13:25.669 --> 01:13:25.679 align:start position:0%
as a final example um
 

01:13:25.679 --> 01:13:28.790 align:start position:0%
as a final example um
i'd<01:13:25.840><c> like</c><01:13:26.000><c> to</c><01:13:26.239><c> show</c>

01:13:28.790 --> 01:13:28.800 align:start position:0%
 
 

01:13:28.800 --> 01:13:33.750 align:start position:0%
 
how<01:13:29.040><c> all</c><01:13:29.199><c> of</c><01:13:29.280><c> these</c><01:13:30.480><c> facilities</c><01:13:31.120><c> combine</c>

01:13:33.750 --> 01:13:33.760 align:start position:0%
how all of these facilities combine
 

01:13:33.760 --> 01:13:37.830 align:start position:0%
how all of these facilities combine
to<01:13:36.000><c> implement</c><01:13:36.480><c> i</c><01:13:36.640><c> o</c><01:13:36.800><c> redirection</c><01:13:37.440><c> so</c>

01:13:37.830 --> 01:13:37.840 align:start position:0%
to implement i o redirection so
 

01:13:37.840 --> 01:13:40.310 align:start position:0%
to implement i o redirection so
if<01:13:37.920><c> you</c><01:13:38.080><c> remember</c><01:13:39.199><c> the</c><01:13:39.360><c> shell</c><01:13:39.760><c> provides</c><01:13:40.159><c> us</c>

01:13:40.310 --> 01:13:40.320 align:start position:0%
if you remember the shell provides us
 

01:13:40.320 --> 01:13:42.149 align:start position:0%
if you remember the shell provides us
with<01:13:40.480><c> this</c><01:13:40.640><c> handy</c><01:13:40.960><c> syntax</c>

01:13:42.149 --> 01:13:42.159 align:start position:0%
with this handy syntax
 

01:13:42.159 --> 01:13:43.830 align:start position:0%
with this handy syntax
and<01:13:42.320><c> i</c><01:13:42.400><c> can</c><01:13:42.480><c> say</c><01:13:42.640><c> echo</c><01:13:42.960><c> hello</c><01:13:43.360><c> greater</c><01:13:43.600><c> than</c>

01:13:43.830 --> 01:13:43.840 align:start position:0%
and i can say echo hello greater than
 

01:13:43.840 --> 01:13:45.270 align:start position:0%
and i can say echo hello greater than
out

01:13:45.270 --> 01:13:45.280 align:start position:0%
out
 

01:13:45.280 --> 01:13:47.030 align:start position:0%
out
and<01:13:45.360><c> that</c><01:13:45.600><c> runs</c><01:13:45.840><c> the</c><01:13:45.920><c> echo</c><01:13:46.159><c> command</c><01:13:46.800><c> that</c>

01:13:47.030 --> 01:13:47.040 align:start position:0%
and that runs the echo command that
 

01:13:47.040 --> 01:13:48.870 align:start position:0%
and that runs the echo command that
argument<01:13:47.679><c> sending</c><01:13:48.000><c> its</c>

01:13:48.870 --> 01:13:48.880 align:start position:0%
argument sending its
 

01:13:48.880 --> 01:13:51.430 align:start position:0%
argument sending its
first<01:13:50.159><c> that</c><01:13:50.320><c> sends</c><01:13:50.560><c> this</c><01:13:50.719><c> output</c><01:13:50.960><c> to</c><01:13:51.040><c> the</c><01:13:51.120><c> file</c>

01:13:51.430 --> 01:13:51.440 align:start position:0%
first that sends this output to the file
 

01:13:51.440 --> 01:13:53.030 align:start position:0%
first that sends this output to the file
out<01:13:51.679><c> and</c><01:13:51.840><c> we</c><01:13:51.920><c> look</c><01:13:52.080><c> it</c><01:13:52.239><c> out</c>

01:13:53.030 --> 01:13:53.040 align:start position:0%
out and we look it out
 

01:13:53.040 --> 01:13:57.030 align:start position:0%
out and we look it out
or<01:13:53.600><c> better</c><01:13:53.920><c> yet</c><01:13:55.920><c> run</c><01:13:56.159><c> the</c><01:13:56.239><c> cap</c><01:13:56.480><c> command</c><01:13:56.800><c> with</c>

01:13:57.030 --> 01:13:57.040 align:start position:0%
or better yet run the cap command with
 

01:13:57.040 --> 01:13:58.310 align:start position:0%
or better yet run the cap command with
its<01:13:57.280><c> input</c>

01:13:58.310 --> 01:13:58.320 align:start position:0%
its input
 

01:13:58.320 --> 01:14:01.430 align:start position:0%
its input
connected<01:13:59.520><c> from</c><01:13:59.679><c> the</c><01:13:59.840><c> out</c><01:14:00.080><c> file</c>

01:14:01.430 --> 01:14:01.440 align:start position:0%
connected from the out file
 

01:14:01.440 --> 01:14:02.950 align:start position:0%
connected from the out file
we<01:14:01.520><c> can</c><01:14:01.679><c> see</c><01:14:01.840><c> that</c><01:14:02.080><c> saved</c><01:14:02.400><c> output</c><01:14:02.719><c> from</c><01:14:02.880><c> the</c>

01:14:02.950 --> 01:14:02.960 align:start position:0%
we can see that saved output from the
 

01:14:02.960 --> 01:14:04.950 align:start position:0%
we can see that saved output from the
echo<01:14:03.199><c> command</c>

01:14:04.950 --> 01:14:04.960 align:start position:0%
echo command
 

01:14:04.960 --> 01:14:09.270 align:start position:0%
echo command
um<01:14:06.080><c> the</c><01:14:06.159><c> way</c><01:14:06.400><c> the</c><01:14:06.560><c> shell</c><01:14:06.880><c> sets</c><01:14:07.120><c> this</c><01:14:07.360><c> up</c>

01:14:09.270 --> 01:14:09.280 align:start position:0%
um the way the shell sets this up
 

01:14:09.280 --> 01:14:13.350 align:start position:0%
um the way the shell sets this up
is<01:14:10.640><c> as</c><01:14:10.880><c> follows</c>

01:14:13.350 --> 01:14:13.360 align:start position:0%
is as follows
 

01:14:13.360 --> 01:14:17.270 align:start position:0%
is as follows
um<01:14:15.280><c> it</c><01:14:16.320><c> uh</c><01:14:16.640><c> the</c><01:14:16.880><c> shell</c>

01:14:17.270 --> 01:14:17.280 align:start position:0%
um it uh the shell
 

01:14:17.280 --> 01:14:20.630 align:start position:0%
um it uh the shell
first<01:14:17.679><c> forks</c><01:14:18.719><c> like</c><01:14:18.960><c> on</c><01:14:19.040><c> line</c><01:14:19.360><c> 13</c><01:14:20.080><c> and</c><01:14:20.239><c> then</c>

01:14:20.630 --> 01:14:20.640 align:start position:0%
first forks like on line 13 and then
 

01:14:20.640 --> 01:14:23.750 align:start position:0%
first forks like on line 13 and then
in<01:14:20.880><c> the</c><01:14:21.120><c> child</c><01:14:22.080><c> the</c><01:14:22.320><c> shell</c><01:14:22.880><c> changes</c><01:14:23.360><c> the</c><01:14:23.520><c> way</c>

01:14:23.750 --> 01:14:23.760 align:start position:0%
in the child the shell changes the way
 

01:14:23.760 --> 01:14:25.750 align:start position:0%
in the child the shell changes the way
the<01:14:23.920><c> file</c><01:14:24.159><c> descriptors</c><01:14:24.800><c> are</c><01:14:24.960><c> set</c><01:14:25.199><c> up</c><01:14:25.440><c> so</c><01:14:25.600><c> that</c>

01:14:25.750 --> 01:14:25.760 align:start position:0%
the file descriptors are set up so that
 

01:14:25.760 --> 01:14:27.189 align:start position:0%
the file descriptors are set up so that
the<01:14:26.080><c> child's</c>

01:14:27.189 --> 01:14:27.199 align:start position:0%
the child's
 

01:14:27.199 --> 01:14:30.310 align:start position:0%
the child's
file<01:14:27.440><c> descriptor</c><01:14:27.920><c> one</c><01:14:28.239><c> which</c><01:14:29.120><c> by</c><01:14:29.360><c> convention</c>

01:14:30.310 --> 01:14:30.320 align:start position:0%
file descriptor one which by convention
 

01:14:30.320 --> 01:14:33.430 align:start position:0%
file descriptor one which by convention
most<01:14:30.480><c> programs</c><01:14:30.880><c> use</c><01:14:31.120><c> for</c><01:14:31.199><c> their</c><01:14:31.440><c> output</c>

01:14:33.430 --> 01:14:33.440 align:start position:0%
most programs use for their output
 

01:14:33.440 --> 01:14:36.390 align:start position:0%
most programs use for their output
the<01:14:33.600><c> shell</c><01:14:34.960><c> changes</c><01:14:35.440><c> the</c><01:14:35.760><c> child's</c><01:14:36.159><c> file</c>

01:14:36.390 --> 01:14:36.400 align:start position:0%
the shell changes the child's file
 

01:14:36.400 --> 01:14:38.229 align:start position:0%
the shell changes the child's file
descriptor<01:14:36.880><c> to</c><01:14:37.120><c> one</c><01:14:37.360><c> to</c><01:14:37.520><c> refer</c>

01:14:38.229 --> 01:14:38.239 align:start position:0%
descriptor to one to refer
 

01:14:38.239 --> 01:14:41.350 align:start position:0%
descriptor to one to refer
to<01:14:38.560><c> this</c><01:14:39.040><c> output</c><01:14:39.520><c> file</c><01:14:40.719><c> and</c><01:14:40.800><c> then</c><01:14:41.040><c> runs</c>

01:14:41.350 --> 01:14:41.360 align:start position:0%
to this output file and then runs
 

01:14:41.360 --> 01:14:41.990 align:start position:0%
to this output file and then runs
whatever<01:14:41.679><c> command</c>

01:14:41.990 --> 01:14:42.000 align:start position:0%
whatever command
 

01:14:42.000 --> 01:14:44.470 align:start position:0%
whatever command
you<01:14:42.159><c> wanted</c><01:14:42.560><c> and</c><01:14:42.640><c> that</c><01:14:42.880><c> leaves</c><01:14:43.360><c> the</c><01:14:43.840><c> parent</c>

01:14:44.470 --> 01:14:44.480 align:start position:0%
you wanted and that leaves the parent
 

01:14:44.480 --> 01:14:46.149 align:start position:0%
you wanted and that leaves the parent
shells<01:14:45.120><c> file</c><01:14:45.360><c> descriptor</c><01:14:45.840><c> one</c>

01:14:46.149 --> 01:14:46.159 align:start position:0%
shells file descriptor one
 

01:14:46.159 --> 01:14:49.590 align:start position:0%
shells file descriptor one
unchanged<01:14:47.440><c> so</c><01:14:47.600><c> this</c><01:14:47.920><c> idiom</c><01:14:48.400><c> of</c><01:14:48.960><c> forking</c><01:14:49.440><c> and</c>

01:14:49.590 --> 01:14:49.600 align:start position:0%
unchanged so this idiom of forking and
 

01:14:49.600 --> 01:14:50.870 align:start position:0%
unchanged so this idiom of forking and
in<01:14:49.679><c> the</c><01:14:49.920><c> child</c>

01:14:50.870 --> 01:14:50.880 align:start position:0%
in the child
 

01:14:50.880 --> 01:14:53.430 align:start position:0%
in the child
um<01:14:51.199><c> changing</c><01:14:51.520><c> around</c><01:14:51.760><c> the</c><01:14:51.840><c> file</c><01:14:52.159><c> descriptors</c>

01:14:53.430 --> 01:14:53.440 align:start position:0%
um changing around the file descriptors
 

01:14:53.440 --> 01:14:55.030 align:start position:0%
um changing around the file descriptors
is<01:14:53.679><c> the</c><01:14:53.920><c> usual</c><01:14:54.320><c> way</c><01:14:54.560><c> in</c>

01:14:55.030 --> 01:14:55.040 align:start position:0%
is the usual way in
 

01:14:55.040 --> 01:14:58.790 align:start position:0%
is the usual way in
to<01:14:55.360><c> sort</c><01:14:55.520><c> of</c><01:14:56.320><c> redirect</c><01:14:57.360><c> input</c><01:14:57.600><c> and</c><01:14:57.760><c> output</c><01:14:58.159><c> for</c>

01:14:58.790 --> 01:14:58.800 align:start position:0%
to sort of redirect input and output for
 

01:14:58.800 --> 01:15:00.950 align:start position:0%
to sort of redirect input and output for
a<01:14:58.880><c> command</c><01:14:59.199><c> that</c><01:14:59.360><c> you</c><01:14:59.520><c> run</c><01:14:59.760><c> but</c><01:15:00.320><c> not</c><01:15:00.640><c> affect</c>

01:15:00.950 --> 01:15:00.960 align:start position:0%
a command that you run but not affect
 

01:15:00.960 --> 01:15:02.070 align:start position:0%
a command that you run but not affect
the<01:15:01.120><c> input</c><01:15:01.440><c> and</c><01:15:01.600><c> output</c>

01:15:02.070 --> 01:15:02.080 align:start position:0%
the input and output
 

01:15:02.080 --> 01:15:04.709 align:start position:0%
the input and output
for<01:15:03.280><c> the</c><01:15:03.440><c> calling</c><01:15:03.920><c> program</c><01:15:04.320><c> because</c><01:15:04.480><c> we</c><01:15:04.560><c> don't</c>

01:15:04.709 --> 01:15:04.719 align:start position:0%
for the calling program because we don't
 

01:15:04.719 --> 01:15:07.830 align:start position:0%
for the calling program because we don't
want<01:15:04.800><c> to</c><01:15:04.880><c> redirect</c><01:15:05.280><c> the</c><01:15:05.440><c> shell's</c><01:15:05.840><c> output</c>

01:15:07.830 --> 01:15:07.840 align:start position:0%
want to redirect the shell's output
 

01:15:07.840 --> 01:15:10.630 align:start position:0%
want to redirect the shell's output
we<01:15:08.000><c> only</c><01:15:08.159><c> want</c><01:15:08.320><c> to</c><01:15:08.840><c> redirect</c><01:15:09.920><c> the</c><01:15:10.159><c> child</c>

01:15:10.630 --> 01:15:10.640 align:start position:0%
we only want to redirect the child
 

01:15:10.640 --> 01:15:12.550 align:start position:0%
we only want to redirect the child
programs<01:15:11.120><c> output</c>

01:15:12.550 --> 01:15:12.560 align:start position:0%
programs output
 

01:15:12.560 --> 01:15:14.550 align:start position:0%
programs output
anyway<01:15:12.880><c> the</c><01:15:12.960><c> way</c><01:15:13.120><c> this</c><01:15:13.280><c> works</c><01:15:13.920><c> we</c><01:15:14.080><c> call</c><01:15:14.239><c> fork</c>

01:15:14.550 --> 01:15:14.560 align:start position:0%
anyway the way this works we call fork
 

01:15:14.560 --> 01:15:16.149 align:start position:0%
anyway the way this works we call fork
in<01:15:14.640><c> the</c><01:15:14.719><c> usual</c><01:15:15.040><c> way</c>

01:15:16.149 --> 01:15:16.159 align:start position:0%
in the usual way
 

01:15:16.159 --> 01:15:19.030 align:start position:0%
in the usual way
line<01:15:16.480><c> 15</c><01:15:16.880><c> only</c><01:15:17.120><c> executes</c><01:15:17.600><c> in</c><01:15:17.679><c> the</c><01:15:17.840><c> child</c><01:15:18.800><c> the</c>

01:15:19.030 --> 01:15:19.040 align:start position:0%
line 15 only executes in the child the
 

01:15:19.040 --> 01:15:20.310 align:start position:0%
line 15 only executes in the child the
reason<01:15:19.280><c> for</c><01:15:19.440><c> the</c><01:15:19.600><c> close</c><01:15:20.000><c> one</c>

01:15:20.310 --> 01:15:20.320 align:start position:0%
reason for the close one
 

01:15:20.320 --> 01:15:23.510 align:start position:0%
reason for the close one
on<01:15:20.400><c> line</c><01:15:20.719><c> 15</c><01:15:21.199><c> is</c><01:15:21.360><c> that</c><01:15:21.520><c> in</c><01:15:21.600><c> this</c><01:15:21.840><c> program</c>

01:15:23.510 --> 01:15:23.520 align:start position:0%
on line 15 is that in this program
 

01:15:23.520 --> 01:15:25.830 align:start position:0%
on line 15 is that in this program
we're<01:15:23.679><c> redirecting</c><01:15:24.800><c> just</c><01:15:24.960><c> the</c><01:15:25.199><c> output</c><01:15:25.600><c> of</c><01:15:25.679><c> the</c>

01:15:25.830 --> 01:15:25.840 align:start position:0%
we're redirecting just the output of the
 

01:15:25.840 --> 01:15:26.709 align:start position:0%
we're redirecting just the output of the
echo<01:15:26.080><c> command</c><01:15:26.400><c> so</c>

01:15:26.709 --> 01:15:26.719 align:start position:0%
echo command so
 

01:15:26.719 --> 01:15:30.229 align:start position:0%
echo command so
when<01:15:26.880><c> i</c><01:15:26.960><c> run</c><01:15:27.120><c> this</c><01:15:27.360><c> redirect</c><01:15:28.960><c> program</c>

01:15:30.229 --> 01:15:30.239 align:start position:0%
when i run this redirect program
 

01:15:30.239 --> 01:15:31.990 align:start position:0%
when i run this redirect program
produces<01:15:30.640><c> no</c><01:15:30.800><c> output</c><01:15:31.120><c> itself</c><01:15:31.360><c> but</c><01:15:31.520><c> it</c><01:15:31.679><c> ran</c>

01:15:31.990 --> 01:15:32.000 align:start position:0%
produces no output itself but it ran
 

01:15:32.000 --> 01:15:33.790 align:start position:0%
produces no output itself but it ran
echo<01:15:32.239><c> with</c><01:15:32.400><c> this</c><01:15:32.560><c> output</c><01:15:32.960><c> directed</c><01:15:33.360><c> to</c>

01:15:33.790 --> 01:15:33.800 align:start position:0%
echo with this output directed to
 

01:15:33.800 --> 01:15:35.430 align:start position:0%
echo with this output directed to
output.txt

01:15:35.430 --> 01:15:35.440 align:start position:0%
output.txt
 

01:15:35.440 --> 01:15:39.669 align:start position:0%
output.txt
so<01:15:35.600><c> when</c><01:15:35.840><c> i</c><01:15:36.159><c> look</c><01:15:36.320><c> at</c><01:15:36.840><c> output.txt</c>

01:15:39.669 --> 01:15:39.679 align:start position:0%
so when i look at output.txt
 

01:15:39.679 --> 01:15:41.990 align:start position:0%
so when i look at output.txt
i<01:15:39.840><c> see</c><01:15:40.000><c> this</c><01:15:40.400><c> expected</c><01:15:40.960><c> output</c><01:15:41.600><c> the</c><01:15:41.760><c> reason</c>

01:15:41.990 --> 01:15:42.000 align:start position:0%
i see this expected output the reason
 

01:15:42.000 --> 01:15:44.870 align:start position:0%
i see this expected output the reason
for<01:15:42.080><c> the</c><01:15:42.239><c> close</c><01:15:42.480><c> one</c><01:15:42.719><c> on</c><01:15:42.800><c> line</c><01:15:43.040><c> 15</c>

01:15:44.870 --> 01:15:44.880 align:start position:0%
for the close one on line 15
 

01:15:44.880 --> 01:15:48.070 align:start position:0%
for the close one on line 15
is<01:15:45.040><c> that</c><01:15:46.480><c> we</c><01:15:46.640><c> want</c><01:15:46.960><c> one</c>

01:15:48.070 --> 01:15:48.080 align:start position:0%
is that we want one
 

01:15:48.080 --> 01:15:49.590 align:start position:0%
is that we want one
sort<01:15:48.239><c> of</c><01:15:48.480><c> conventional</c><01:15:49.120><c> output</c><01:15:49.440><c> file</c>

01:15:49.590 --> 01:15:49.600 align:start position:0%
sort of conventional output file
 

01:15:49.600 --> 01:15:52.149 align:start position:0%
sort of conventional output file
descriptor<01:15:50.080><c> to</c><01:15:50.239><c> refer</c><01:15:50.560><c> to</c><01:15:50.640><c> something</c><01:15:51.040><c> else</c><01:15:51.920><c> it</c>

01:15:52.149 --> 01:15:52.159 align:start position:0%
descriptor to refer to something else it
 

01:15:52.159 --> 01:15:53.030 align:start position:0%
descriptor to refer to something else it
happens

01:15:53.030 --> 01:15:53.040 align:start position:0%
happens
 

01:15:53.040 --> 01:15:54.950 align:start position:0%
happens
so<01:15:53.199><c> we</c><01:15:53.360><c> don't</c><01:15:53.760><c> from</c><01:15:54.000><c> the</c><01:15:54.159><c> child</c><01:15:54.560><c> we</c><01:15:54.640><c> don't</c><01:15:54.800><c> want</c>

01:15:54.950 --> 01:15:54.960 align:start position:0%
so we don't from the child we don't want
 

01:15:54.960 --> 01:15:56.870 align:start position:0%
so we don't from the child we don't want
to<01:15:55.120><c> use</c><01:15:55.600><c> the</c><01:15:55.760><c> file</c><01:15:55.920><c> descriptor</c><01:15:56.400><c> one</c><01:15:56.640><c> that</c><01:15:56.719><c> the</c>

01:15:56.870 --> 01:15:56.880 align:start position:0%
to use the file descriptor one that the
 

01:15:56.880 --> 01:15:58.229 align:start position:0%
to use the file descriptor one that the
shell<01:15:57.120><c> had</c><01:15:57.360><c> that's</c><01:15:57.600><c> connected</c><01:15:58.000><c> to</c><01:15:58.159><c> the</c>

01:15:58.229 --> 01:15:58.239 align:start position:0%
shell had that's connected to the
 

01:15:58.239 --> 01:15:59.590 align:start position:0%
shell had that's connected to the
console

01:15:59.590 --> 01:15:59.600 align:start position:0%
console
 

01:15:59.600 --> 01:16:01.830 align:start position:0%
console
um<01:15:59.840><c> the</c><01:16:00.080><c> call</c><01:16:00.320><c> to</c><01:16:00.480><c> open</c><01:16:00.800><c> on</c><01:16:00.880><c> line</c><01:16:01.120><c> 16</c><01:16:01.679><c> is</c>

01:16:01.830 --> 01:16:01.840 align:start position:0%
um the call to open on line 16 is
 

01:16:01.840 --> 01:16:04.709 align:start position:0%
um the call to open on line 16 is
guaranteed<01:16:02.320><c> to</c><01:16:02.480><c> return</c><01:16:02.960><c> one</c><01:16:03.280><c> because</c>

01:16:04.709 --> 01:16:04.719 align:start position:0%
guaranteed to return one because
 

01:16:04.719 --> 01:16:06.630 align:start position:0%
guaranteed to return one because
the<01:16:04.880><c> semantics</c><01:16:05.440><c> of</c><01:16:05.600><c> open</c><01:16:05.920><c> are</c><01:16:06.080><c> that</c><01:16:06.320><c> open</c>

01:16:06.630 --> 01:16:06.640 align:start position:0%
the semantics of open are that open
 

01:16:06.640 --> 01:16:08.310 align:start position:0%
the semantics of open are that open
returns<01:16:07.040><c> the</c><01:16:07.199><c> lowest</c>

01:16:08.310 --> 01:16:08.320 align:start position:0%
returns the lowest
 

01:16:08.320 --> 01:16:10.070 align:start position:0%
returns the lowest
file<01:16:08.640><c> descriptor</c><01:16:09.120><c> number</c><01:16:09.440><c> that's</c><01:16:09.760><c> not</c>

01:16:10.070 --> 01:16:10.080 align:start position:0%
file descriptor number that's not
 

01:16:10.080 --> 01:16:11.510 align:start position:0%
file descriptor number that's not
currently<01:16:10.480><c> in</c><01:16:10.640><c> use</c>

01:16:11.510 --> 01:16:11.520 align:start position:0%
currently in use
 

01:16:11.520 --> 01:16:13.990 align:start position:0%
currently in use
um<01:16:12.080><c> in</c><01:16:12.239><c> the</c><01:16:12.400><c> calling</c><01:16:12.800><c> process</c><01:16:13.440><c> since</c><01:16:13.679><c> we</c><01:16:13.840><c> just</c>

01:16:13.990 --> 01:16:14.000 align:start position:0%
um in the calling process since we just
 

01:16:14.000 --> 01:16:15.270 align:start position:0%
um in the calling process since we just
closed<01:16:14.400><c> one</c>

01:16:15.270 --> 01:16:15.280 align:start position:0%
closed one
 

01:16:15.280 --> 01:16:18.310 align:start position:0%
closed one
and<01:16:15.520><c> file</c><01:16:15.679><c> descriptor</c><01:16:16.159><c> 0</c><01:16:16.560><c> is</c>

01:16:18.310 --> 01:16:18.320 align:start position:0%
and file descriptor 0 is
 

01:16:18.320 --> 01:16:20.470 align:start position:0%
and file descriptor 0 is
still<01:16:18.560><c> connected</c><01:16:18.880><c> to</c><01:16:19.040><c> the</c><01:16:19.120><c> console</c><01:16:19.440><c> that</c><01:16:19.600><c> mean</c>

01:16:20.470 --> 01:16:20.480 align:start position:0%
still connected to the console that mean
 

01:16:20.480 --> 01:16:21.350 align:start position:0%
still connected to the console that mean
um

01:16:21.350 --> 01:16:21.360 align:start position:0%
um
 

01:16:21.360 --> 01:16:24.470 align:start position:0%
um
open<01:16:21.679><c> is</c><01:16:21.760><c> guaranteed</c><01:16:22.159><c> to</c><01:16:22.320><c> return</c><01:16:22.719><c> one</c><01:16:24.320><c> so</c>

01:16:24.470 --> 01:16:24.480 align:start position:0%
open is guaranteed to return one so
 

01:16:24.480 --> 01:16:25.590 align:start position:0%
open is guaranteed to return one so
after<01:16:24.800><c> the</c>

01:16:25.590 --> 01:16:25.600 align:start position:0%
after the
 

01:16:25.600 --> 01:16:28.149 align:start position:0%
after the
line<01:16:25.840><c> 16</c><01:16:26.880><c> file</c><01:16:27.120><c> descriptor</c><01:16:27.520><c> 1</c><01:16:27.760><c> is</c><01:16:27.840><c> connected</c>

01:16:28.149 --> 01:16:28.159 align:start position:0%
line 16 file descriptor 1 is connected
 

01:16:28.159 --> 01:16:30.149 align:start position:0%
line 16 file descriptor 1 is connected
to<01:16:28.239><c> this</c><01:16:28.480><c> file</c>

01:16:30.149 --> 01:16:30.159 align:start position:0%
to this file
 

01:16:30.159 --> 01:16:32.550 align:start position:0%
to this file
when<01:16:30.320><c> we</c><01:16:30.480><c> exec</c><01:16:30.880><c> echo</c><01:16:31.280><c> echo</c><01:16:31.520><c> just</c><01:16:31.679><c> writes</c><01:16:32.320><c> its</c>

01:16:32.550 --> 01:16:32.560 align:start position:0%
when we exec echo echo just writes its
 

01:16:32.560 --> 01:16:34.229 align:start position:0%
when we exec echo echo just writes its
output<01:16:32.800><c> to</c><01:16:32.880><c> file</c><01:16:33.120><c> scripter</c><01:16:33.520><c> one</c>

01:16:34.229 --> 01:16:34.239 align:start position:0%
output to file scripter one
 

01:16:34.239 --> 01:16:35.910 align:start position:0%
output to file scripter one
um<01:16:34.480><c> and</c><01:16:34.560><c> now</c><01:16:34.719><c> it</c><01:16:34.800><c> goes</c><01:16:34.960><c> to</c><01:16:35.120><c> this</c><01:16:35.280><c> file</c><01:16:35.679><c> and</c><01:16:35.840><c> the</c>

01:16:35.910 --> 01:16:35.920 align:start position:0%
um and now it goes to this file and the
 

01:16:35.920 --> 01:16:37.350 align:start position:0%
um and now it goes to this file and the
cool<01:16:36.080><c> thing</c><01:16:36.239><c> about</c><01:16:36.400><c> this</c><01:16:36.560><c> is</c><01:16:36.719><c> echo</c><01:16:37.040><c> had</c><01:16:37.199><c> no</c>

01:16:37.350 --> 01:16:37.360 align:start position:0%
cool thing about this is echo had no
 

01:16:37.360 --> 01:16:38.630 align:start position:0%
cool thing about this is echo had no
idea<01:16:37.600><c> what's</c><01:16:37.840><c> going</c><01:16:38.080><c> on</c>

01:16:38.630 --> 01:16:38.640 align:start position:0%
idea what's going on
 

01:16:38.640 --> 01:16:40.229 align:start position:0%
idea what's going on
echo<01:16:38.960><c> doesn't</c><01:16:39.280><c> need</c><01:16:39.440><c> to</c><01:16:39.520><c> know</c><01:16:39.760><c> about</c><01:16:40.000><c> io</c>

01:16:40.229 --> 01:16:40.239 align:start position:0%
echo doesn't need to know about io
 

01:16:40.239 --> 01:16:42.229 align:start position:0%
echo doesn't need to know about io
redirection<01:16:41.040><c> at</c><01:16:41.280><c> all</c><01:16:41.600><c> it</c><01:16:41.679><c> just</c>

01:16:42.229 --> 01:16:42.239 align:start position:0%
redirection at all it just
 

01:16:42.239 --> 01:16:45.830 align:start position:0%
redirection at all it just
writes<01:16:42.480><c> its</c><01:16:42.640><c> output</c><01:16:42.880><c> to</c><01:16:43.040><c> file</c><01:16:43.280><c> descriptor</c><01:16:43.760><c> one</c>

01:16:45.830 --> 01:16:45.840 align:start position:0%
writes its output to file descriptor one
 

01:16:45.840 --> 01:16:49.350 align:start position:0%
writes its output to file descriptor one
only<01:16:46.159><c> the</c><01:16:46.320><c> shell</c><01:16:48.080><c> knows</c><01:16:48.400><c> about</c>

01:16:49.350 --> 01:16:49.360 align:start position:0%
only the shell knows about
 

01:16:49.360 --> 01:16:52.390 align:start position:0%
only the shell knows about
io<01:16:49.679><c> redirection</c>

01:16:52.390 --> 01:16:52.400 align:start position:0%
 
 

01:16:52.400 --> 01:16:54.870 align:start position:0%
 
this<01:16:52.640><c> example</c><01:16:53.040><c> also</c><01:16:54.080><c> illustrates</c><01:16:54.560><c> the</c><01:16:54.640><c> sort</c>

01:16:54.870 --> 01:16:54.880 align:start position:0%
this example also illustrates the sort
 

01:16:54.880 --> 01:16:56.229 align:start position:0%
this example also illustrates the sort
of

01:16:56.229 --> 01:16:56.239 align:start position:0%
of
 

01:16:56.239 --> 01:16:58.870 align:start position:0%
of
kind<01:16:56.400><c> of</c><01:16:57.199><c> neatness</c><01:16:57.920><c> of</c><01:16:58.000><c> the</c><01:16:58.239><c> separation</c>

01:16:58.870 --> 01:16:58.880 align:start position:0%
kind of neatness of the separation
 

01:16:58.880 --> 01:16:59.270 align:start position:0%
kind of neatness of the separation
between

01:16:59.270 --> 01:16:59.280 align:start position:0%
between
 

01:16:59.280 --> 01:17:01.030 align:start position:0%
between
fork<01:16:59.520><c> and</c><01:16:59.679><c> exec</c><01:17:00.080><c> the</c><01:17:00.159><c> fact</c><01:17:00.320><c> that</c><01:17:00.560><c> fork</c><01:17:00.880><c> and</c>

01:17:01.030 --> 01:17:01.040 align:start position:0%
fork and exec the fact that fork and
 

01:17:01.040 --> 01:17:04.229 align:start position:0%
fork and exec the fact that fork and
exact<01:17:01.440><c> are</c><01:17:01.920><c> separate</c><01:17:02.320><c> system</c><01:17:02.719><c> calls</c>

01:17:04.229 --> 01:17:04.239 align:start position:0%
exact are separate system calls
 

01:17:04.239 --> 01:17:08.149 align:start position:0%
exact are separate system calls
separate<01:17:05.600><c> uh</c><01:17:05.920><c> functions</c>

01:17:08.149 --> 01:17:08.159 align:start position:0%
separate uh functions
 

01:17:08.159 --> 01:17:09.830 align:start position:0%
separate uh functions
means<01:17:08.400><c> that</c><01:17:08.560><c> there's</c><01:17:08.800><c> a</c><01:17:08.880><c> period</c><01:17:09.199><c> of</c><01:17:09.280><c> time</c><01:17:09.520><c> but</c>

01:17:09.830 --> 01:17:09.840 align:start position:0%
means that there's a period of time but
 

01:17:09.840 --> 01:17:11.830 align:start position:0%
means that there's a period of time but
in<01:17:09.920><c> the</c><01:17:10.080><c> child</c><01:17:10.400><c> between</c><01:17:10.719><c> the</c><01:17:10.880><c> fork</c>

01:17:11.830 --> 01:17:11.840 align:start position:0%
in the child between the fork
 

01:17:11.840 --> 01:17:13.830 align:start position:0%
in the child between the fork
between<01:17:12.320><c> fork</c><01:17:12.560><c> returns</c><01:17:12.880><c> and</c><01:17:12.960><c> the</c><01:17:13.120><c> child</c><01:17:13.600><c> and</c>

01:17:13.830 --> 01:17:13.840 align:start position:0%
between fork returns and the child and
 

01:17:13.840 --> 01:17:14.870 align:start position:0%
between fork returns and the child and
exact<01:17:14.239><c> in</c><01:17:14.320><c> which</c>

01:17:14.870 --> 01:17:14.880 align:start position:0%
exact in which
 

01:17:14.880 --> 01:17:16.470 align:start position:0%
exact in which
we're<01:17:15.120><c> still</c><01:17:15.520><c> running</c><01:17:15.920><c> the</c><01:17:16.080><c> calling</c>

01:17:16.470 --> 01:17:16.480 align:start position:0%
we're still running the calling
 

01:17:16.480 --> 01:17:18.470 align:start position:0%
we're still running the calling
processes<01:17:17.040><c> instructions</c><01:17:17.760><c> so</c><01:17:17.920><c> the</c>

01:17:18.470 --> 01:17:18.480 align:start position:0%
processes instructions so the
 

01:17:18.480 --> 01:17:21.270 align:start position:0%
processes instructions so the
calling<01:17:19.040><c> process</c><01:17:20.000><c> even</c><01:17:20.239><c> though</c><01:17:20.400><c> it's</c><01:17:20.480><c> running</c>

01:17:21.270 --> 01:17:21.280 align:start position:0%
calling process even though it's running
 

01:17:21.280 --> 01:17:22.550 align:start position:0%
calling process even though it's running
even<01:17:21.520><c> though</c><01:17:21.679><c> its</c><01:17:21.760><c> instructions</c><01:17:22.239><c> are</c><01:17:22.320><c> running</c>

01:17:22.550 --> 01:17:22.560 align:start position:0%
even though its instructions are running
 

01:17:22.560 --> 01:17:23.510 align:start position:0%
even though its instructions are running
in<01:17:22.640><c> the</c><01:17:22.800><c> child</c>

01:17:23.510 --> 01:17:23.520 align:start position:0%
in the child
 

01:17:23.520 --> 01:17:25.110 align:start position:0%
in the child
it's<01:17:23.760><c> still</c><01:17:24.000><c> the</c><01:17:24.080><c> calling</c><01:17:24.400><c> processes</c>

01:17:25.110 --> 01:17:25.120 align:start position:0%
it's still the calling processes
 

01:17:25.120 --> 01:17:26.870 align:start position:0%
it's still the calling processes
instructions<01:17:25.679><c> that</c><01:17:25.840><c> are</c><01:17:26.000><c> executing</c>

01:17:26.870 --> 01:17:26.880 align:start position:0%
instructions that are executing
 

01:17:26.880 --> 01:17:29.910 align:start position:0%
instructions that are executing
and<01:17:26.960><c> so</c><01:17:27.120><c> the</c><01:17:27.199><c> calling</c><01:17:27.600><c> process</c><01:17:28.000><c> is</c><01:17:28.239><c> still</c><01:17:29.679><c> able</c>

01:17:29.910 --> 01:17:29.920 align:start position:0%
and so the calling process is still able
 

01:17:29.920 --> 01:17:30.550 align:start position:0%
and so the calling process is still able
to<01:17:30.159><c> change</c>

01:17:30.550 --> 01:17:30.560 align:start position:0%
to change
 

01:17:30.560 --> 01:17:32.950 align:start position:0%
to change
things<01:17:31.199><c> um</c><01:17:31.520><c> still</c><01:17:31.760><c> in</c><01:17:31.840><c> control</c><01:17:32.320><c> up</c><01:17:32.400><c> until</c><01:17:32.719><c> line</c>

01:17:32.950 --> 01:17:32.960 align:start position:0%
things um still in control up until line
 

01:17:32.960 --> 01:17:34.229 align:start position:0%
things um still in control up until line
19

01:17:34.229 --> 01:17:34.239 align:start position:0%
19
 

01:17:34.239 --> 01:17:35.750 align:start position:0%
19
and<01:17:34.400><c> this</c><01:17:34.560><c> sort</c><01:17:34.719><c> of</c><01:17:34.880><c> interval</c><01:17:35.199><c> between</c><01:17:35.520><c> fork</c>

01:17:35.750 --> 01:17:35.760 align:start position:0%
and this sort of interval between fork
 

01:17:35.760 --> 01:17:38.550 align:start position:0%
and this sort of interval between fork
and<01:17:35.920><c> sec</c><01:17:36.640><c> uh</c><01:17:36.880><c> gives</c><01:17:37.120><c> the</c><01:17:37.280><c> shell</c><01:17:37.520><c> a</c><01:17:37.600><c> chance</c><01:17:37.920><c> to</c>

01:17:38.550 --> 01:17:38.560 align:start position:0%
and sec uh gives the shell a chance to
 

01:17:38.560 --> 01:17:40.709 align:start position:0%
and sec uh gives the shell a chance to
change<01:17:38.880><c> what</c><01:17:39.120><c> the</c><01:17:39.199><c> file</c><01:17:39.440><c> descriptors</c><01:17:40.320><c> refer</c>

01:17:40.709 --> 01:17:40.719 align:start position:0%
change what the file descriptors refer
 

01:17:40.719 --> 01:17:43.189 align:start position:0%
change what the file descriptors refer
to<01:17:40.960><c> for</c><01:17:41.120><c> example</c>

01:17:43.189 --> 01:17:43.199 align:start position:0%
to for example
 

01:17:43.199 --> 01:17:45.430 align:start position:0%
to for example
any<01:17:43.520><c> questions</c><01:17:43.920><c> about</c><01:17:44.320><c> this</c><01:17:44.880><c> redirect</c>

01:17:45.430 --> 01:17:45.440 align:start position:0%
any questions about this redirect
 

01:17:45.440 --> 01:17:55.110 align:start position:0%
any questions about this redirect
example

01:17:55.110 --> 01:17:55.120 align:start position:0%
 
 

01:17:55.120 --> 01:18:00.229 align:start position:0%
 
all<01:17:55.280><c> right</c><01:17:56.840><c> um</c><01:17:57.920><c> got</c><01:17:58.159><c> out</c><01:17:58.320><c> of</c><01:17:58.400><c> time</c>

01:18:00.229 --> 01:18:00.239 align:start position:0%
all right um got out of time
 

01:18:00.239 --> 01:18:03.910 align:start position:0%
all right um got out of time
i'll<01:18:00.400><c> just</c><01:18:00.880><c> wrap</c><01:18:01.199><c> up</c><01:18:01.280><c> we</c><01:18:01.440><c> looked</c><01:18:01.679><c> at</c><01:18:01.840><c> unix's</c>

01:18:03.910 --> 01:18:03.920 align:start position:0%
i'll just wrap up we looked at unix's
 

01:18:03.920 --> 01:18:07.189 align:start position:0%
i'll just wrap up we looked at unix's
a<01:18:04.000><c> bunch</c><01:18:04.239><c> of</c><01:18:04.320><c> the</c><01:18:05.040><c> interfaces</c><01:18:05.520><c> to</c><01:18:05.760><c> unix's</c><01:18:06.320><c> i</c><01:18:06.480><c> o</c>

01:18:07.189 --> 01:18:07.199 align:start position:0%
a bunch of the interfaces to unix's i o
 

01:18:07.199 --> 01:18:10.070 align:start position:0%
a bunch of the interfaces to unix's i o
and<01:18:07.360><c> process</c><01:18:07.760><c> abstractions</c><01:18:09.440><c> a</c><01:18:09.600><c> thing</c><01:18:09.760><c> to</c><01:18:09.920><c> take</c>

01:18:10.070 --> 01:18:10.080 align:start position:0%
and process abstractions a thing to take
 

01:18:10.080 --> 01:18:11.510 align:start position:0%
and process abstractions a thing to take
away<01:18:10.320><c> from</c><01:18:10.480><c> this</c><01:18:10.640><c> is</c><01:18:10.800><c> that</c><01:18:10.880><c> the</c><01:18:11.040><c> interfaces</c>

01:18:11.510 --> 01:18:11.520 align:start position:0%
away from this is that the interfaces
 

01:18:11.520 --> 01:18:12.630 align:start position:0%
away from this is that the interfaces
are<01:18:11.600><c> relatively</c><01:18:12.159><c> simple</c>

01:18:12.630 --> 01:18:12.640 align:start position:0%
are relatively simple
 

01:18:12.640 --> 01:18:14.950 align:start position:0%
are relatively simple
you<01:18:12.880><c> just</c><01:18:13.040><c> pass</c><01:18:14.000><c> integers</c><01:18:14.480><c> like</c><01:18:14.719><c> file</c>

01:18:14.950 --> 01:18:14.960 align:start position:0%
you just pass integers like file
 

01:18:14.960 --> 01:18:16.790 align:start position:0%
you just pass integers like file
descriptors<01:18:15.520><c> and</c><01:18:15.600><c> process</c><01:18:16.000><c> ids</c><01:18:16.480><c> back</c><01:18:16.640><c> and</c>

01:18:16.790 --> 01:18:16.800 align:start position:0%
descriptors and process ids back and
 

01:18:16.800 --> 01:18:17.910 align:start position:0%
descriptors and process ids back and
forth<01:18:17.120><c> across</c>

01:18:17.910 --> 01:18:17.920 align:start position:0%
forth across
 

01:18:17.920 --> 01:18:20.790 align:start position:0%
forth across
as<01:18:18.159><c> arguments</c><01:18:18.560><c> to</c><01:18:18.640><c> these</c><01:18:18.800><c> system</c><01:18:19.199><c> calls</c><01:18:20.000><c> um</c>

01:18:20.790 --> 01:18:20.800 align:start position:0%
as arguments to these system calls um
 

01:18:20.800 --> 01:18:21.189 align:start position:0%
as arguments to these system calls um
but

01:18:21.189 --> 01:18:21.199 align:start position:0%
but
 

01:18:21.199 --> 01:18:24.070 align:start position:0%
but
sort<01:18:21.360><c> of</c><01:18:22.239><c> all</c><01:18:22.400><c> the</c><01:18:22.480><c> functionality</c><01:18:23.199><c> inside</c><01:18:23.840><c> the</c>

01:18:24.070 --> 01:18:24.080 align:start position:0%
sort of all the functionality inside the
 

01:18:24.080 --> 01:18:25.590 align:start position:0%
sort of all the functionality inside the
interfaces<01:18:24.640><c> is</c><01:18:24.719><c> relatively</c>

01:18:25.590 --> 01:18:25.600 align:start position:0%
interfaces is relatively
 

01:18:25.600 --> 01:18:27.830 align:start position:0%
interfaces is relatively
sophisticated<01:18:26.400><c> like</c><01:18:27.280><c> creating</c><01:18:27.600><c> new</c>

01:18:27.830 --> 01:18:27.840 align:start position:0%
sophisticated like creating new
 

01:18:27.840 --> 01:18:28.870 align:start position:0%
sophisticated like creating new
processes<01:18:28.400><c> and</c>

01:18:28.870 --> 01:18:28.880 align:start position:0%
processes and
 

01:18:28.880 --> 01:18:30.709 align:start position:0%
processes and
copying<01:18:29.280><c> the</c><01:18:29.360><c> current</c><01:18:29.679><c> process</c><01:18:30.480><c> and</c>

01:18:30.709 --> 01:18:30.719 align:start position:0%
copying the current process and
 

01:18:30.719 --> 01:18:31.910 align:start position:0%
copying the current process and
furthermore

01:18:31.910 --> 01:18:31.920 align:start position:0%
furthermore
 

01:18:31.920 --> 01:18:33.270 align:start position:0%
furthermore
i<01:18:32.000><c> showed</c><01:18:32.159><c> some</c><01:18:32.400><c> examples</c><01:18:32.719><c> of</c><01:18:32.800><c> ways</c><01:18:33.040><c> in</c><01:18:33.120><c> which</c>

01:18:33.270 --> 01:18:33.280 align:start position:0%
i showed some examples of ways in which
 

01:18:33.280 --> 01:18:35.270 align:start position:0%
i showed some examples of ways in which
the<01:18:33.440><c> abstractions</c><01:18:34.480><c> though</c><01:18:34.719><c> individually</c>

01:18:35.270 --> 01:18:35.280 align:start position:0%
the abstractions though individually
 

01:18:35.280 --> 01:18:36.070 align:start position:0%
the abstractions though individually
simple

01:18:36.070 --> 01:18:36.080 align:start position:0%
simple
 

01:18:36.080 --> 01:18:39.750 align:start position:0%
simple
combine<01:18:36.880><c> in</c><01:18:37.120><c> useful</c><01:18:37.520><c> ways</c><01:18:38.480><c> for</c><01:18:38.640><c> example</c>

01:18:39.750 --> 01:18:39.760 align:start position:0%
combine in useful ways for example
 

01:18:39.760 --> 01:18:43.910 align:start position:0%
combine in useful ways for example
to<01:18:39.920><c> produce</c><01:18:40.800><c> iod</c><01:18:41.360><c> direction</c>

01:18:43.910 --> 01:18:43.920 align:start position:0%
 
 

01:18:43.920 --> 01:18:45.590 align:start position:0%
 
there's<01:18:44.159><c> a</c><01:18:44.320><c> lab</c><01:18:44.640><c> due</c><01:18:44.880><c> at</c><01:18:44.960><c> the</c><01:18:45.120><c> end</c><01:18:45.199><c> of</c><01:18:45.360><c> next</c>

01:18:45.590 --> 01:18:45.600 align:start position:0%
there's a lab due at the end of next
 

01:18:45.600 --> 01:18:48.870 align:start position:0%
there's a lab due at the end of next
week<01:18:46.880><c> and</c><01:18:47.120><c> that</c><01:18:47.280><c> lab</c><01:18:47.600><c> involves</c><01:18:48.159><c> writing</c>

01:18:48.870 --> 01:18:48.880 align:start position:0%
week and that lab involves writing
 

01:18:48.880 --> 01:18:50.709 align:start position:0%
week and that lab involves writing
more<01:18:49.199><c> simple</c><01:18:49.520><c> utilities</c><01:18:50.000><c> like</c><01:18:50.159><c> the</c><01:18:50.320><c> ones</c><01:18:50.560><c> i</c>

01:18:50.709 --> 01:18:50.719 align:start position:0%
more simple utilities like the ones i
 

01:18:50.719 --> 01:18:52.310 align:start position:0%
more simple utilities like the ones i
showed<01:18:50.960><c> that</c><01:18:51.120><c> use</c><01:18:51.360><c> the</c><01:18:51.520><c> system</c><01:18:51.840><c> calls</c><01:18:52.080><c> that</c><01:18:52.159><c> we</c>

01:18:52.310 --> 01:18:52.320 align:start position:0%
showed that use the system calls that we
 

01:18:52.320 --> 01:18:54.070 align:start position:0%
showed that use the system calls that we
discussed

01:18:54.070 --> 01:18:54.080 align:start position:0%
discussed
 

01:18:54.080 --> 01:18:56.550 align:start position:0%
discussed
so<01:18:54.239><c> have</c><01:18:54.480><c> fun</c><01:18:54.640><c> with</c><01:18:54.800><c> that</c><01:18:54.960><c> lab</c><01:18:55.360><c> and</c><01:18:56.159><c> i'll</c><01:18:56.480><c> see</c>

01:18:56.550 --> 01:18:56.560 align:start position:0%
so have fun with that lab and i'll see
 

01:18:56.560 --> 01:19:01.510 align:start position:0%
so have fun with that lab and i'll see
you<01:18:56.719><c> in</c><01:18:56.800><c> class</c><01:18:57.040><c> next</c><01:18:57.280><c> week</c>

01:19:01.510 --> 01:19:01.520 align:start position:0%
 
 

01:19:01.520 --> 01:19:15.189 align:start position:0%
 
and<01:19:01.679><c> that's</c><01:19:06.840><c> it</c>

01:19:15.189 --> 01:19:15.199 align:start position:0%
 
 

01:19:15.199 --> 01:19:17.510 align:start position:0%
 
since<01:19:15.440><c> i'm</c><01:19:15.520><c> the</c><01:19:15.679><c> one</c><01:19:15.840><c> recording</c><01:19:16.640><c> um</c><01:19:17.040><c> how</c><01:19:17.199><c> do</c><01:19:17.360><c> i</c>

01:19:17.510 --> 01:19:17.520 align:start position:0%
since i'm the one recording um how do i
 

01:19:17.520 --> 01:19:18.709 align:start position:0%
since i'm the one recording um how do i
end<01:19:17.679><c> this</c>

01:19:18.709 --> 01:19:18.719 align:start position:0%
end this
 

01:19:18.719 --> 01:19:20.709 align:start position:0%
end this
first<01:19:18.880><c> time</c><01:19:19.040><c> recording</c><01:19:19.440><c> is</c><01:19:19.600><c> in</c><01:19:19.679><c> lecture</c><01:19:20.560><c> i</c>

01:19:20.709 --> 01:19:20.719 align:start position:0%
first time recording is in lecture i
 

01:19:20.719 --> 01:19:22.470 align:start position:0%
first time recording is in lecture i
think<01:19:20.880><c> we</c><01:19:21.199><c> exit</c>

01:19:22.470 --> 01:19:22.480 align:start position:0%
think we exit
 

01:19:22.480 --> 01:19:24.229 align:start position:0%
think we exit
okay<01:19:22.880><c> and</c><01:19:23.040><c> nothing</c><01:19:23.360><c> special</c><01:19:23.600><c> i</c><01:19:23.679><c> can</c><01:19:23.840><c> just</c><01:19:24.000><c> exit</c>

01:19:24.229 --> 01:19:24.239 align:start position:0%
okay and nothing special i can just exit
 

01:19:24.239 --> 01:19:26.470 align:start position:0%
okay and nothing special i can just exit
and<01:19:24.320><c> it'll</c><01:19:24.560><c> be</c><01:19:24.640><c> saved</c><01:19:24.880><c> somewhere</c>

01:19:26.470 --> 01:19:26.480 align:start position:0%
and it'll be saved somewhere
 

01:19:26.480 --> 01:19:31.990 align:start position:0%
and it'll be saved somewhere
yes<01:19:27.280><c> awesome</c>

01:19:31.990 --> 01:19:32.000 align:start position:0%
 
 

01:19:32.000 --> 01:19:35.030 align:start position:0%
 
and<01:19:32.239><c> zoom</c><01:19:32.400><c> will</c><01:19:32.560><c> create</c><01:19:32.800><c> some</c><01:19:33.040><c> directory</c><01:19:33.760><c> and</c>

01:19:35.030 --> 01:19:35.040 align:start position:0%
and zoom will create some directory and
 

01:19:35.040 --> 01:19:38.470 align:start position:0%
and zoom will create some directory and
stick<01:19:35.280><c> the</c><01:19:35.440><c> vowel</c><01:19:35.679><c> in</c><01:19:35.760><c> that</c><01:19:35.920><c> directory</c>

01:19:38.470 --> 01:19:38.480 align:start position:0%
 
 

01:19:38.480 --> 01:19:39.990 align:start position:0%
 
there's<01:19:38.719><c> also</c><01:19:38.960><c> office</c><01:19:39.280><c> hours</c><01:19:39.600><c> right</c><01:19:39.760><c> after</c>

01:19:39.990 --> 01:19:40.000 align:start position:0%
there's also office hours right after
 

01:19:40.000 --> 01:19:41.910 align:start position:0%
there's also office hours right after
this<01:19:40.239><c> right</c>

01:19:41.910 --> 01:19:41.920 align:start position:0%
this right
 

01:19:41.920 --> 01:19:48.830 align:start position:0%
this right
yes<01:19:42.800><c> perfect</c><01:19:43.199><c> okay</c>

01:19:48.830 --> 01:19:48.840 align:start position:0%
 
 

01:19:48.840 --> 01:19:50.310 align:start position:0%
 
cool

01:19:50.310 --> 01:19:50.320 align:start position:0%
cool
 

01:19:50.320 --> 01:19:53.430 align:start position:0%
cool
all<01:19:50.480><c> right</c><01:19:51.520><c> all</c><01:19:51.679><c> right</c><01:19:52.400><c> thank</c><01:19:52.640><c> you</c><01:19:52.960><c> and</c>

01:19:53.430 --> 01:19:53.440 align:start position:0%
all right all right thank you and
 

01:19:53.440 --> 01:19:59.199 align:start position:0%
all right all right thank you and
i'll<01:19:53.600><c> see</c><01:19:53.760><c> you</c><01:19:53.840><c> next</c><01:19:54.080><c> week</c><01:19:56.199><c> thanks</c>

